From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Radu Mocanu <radu_mocanu2000@yahoo.com>
Date: Mon, 27 Jan 2025 12:57:17 +0200
Subject: [PATCH] fix: fixes for backup unit and logging pipeline


diff --git a/docs/resources/backup_unit.md b/docs/resources/backup_unit.md
index 71f6a013..51c797da 100644
--- a/docs/resources/backup_unit.md
+++ b/docs/resources/backup_unit.md
@@ -48,4 +48,4 @@ This can be helpful when you want to import backup units which you have already
 ## Important Notes
 
 - Please note that at the moment, Backup Units cannot be renamed
-- Please note that the password attribute is write-only, and it cannot be retrieved from the API when importing a ionoscloud_backup_unit. The only way to keep track of it in Terraform is to specify it on the resource to be imported, thus, making it a required attribute.
\ No newline at end of file
+- Please note that the password attribute is write-only, and it cannot be retrieved from the API when importing a ionoscloud_backup_unit. The only way to keep track of it is to specify it on the resource to be imported, thus, making it a required attribute.
diff --git a/docs/resources/logging_pipeline.md b/docs/resources/logging_pipeline.md
index f480984b..e479b504 100644
--- a/docs/resources/logging_pipeline.md
+++ b/docs/resources/logging_pipeline.md
@@ -40,70 +40,6 @@ resource "ionoscloud_logging_pipeline" "example" {
 }
 ```
 
-For re-usability, an array of **logs** can be defined in a **tfvars** file or inside the terraform
-plan, and used as presented below:
-
-The content inside **vars.tfvars** file:
-
-```hcl
-logs = [
-  {
-    source = "kubernetes"
-    tag = "firstlog"
-    protocol = "http"
-    destinations = {
-      type = "loki"
-      retention_in_days = 7
-    }},
-    {
-    source = "docker"
-    tag = "secondlog"
-    protocol = "tcp"
-    destinations = {
-      type = "loki"
-      retention_in_days = 14
-    }}]
-```
-
-The content inside the tf plan:
-
-```hcl
-variable "logs" {
-  description = "logs"
-  type        = list(object({
-    source = string
-    tag = string
-    protocol = string
-    destinations = object({
-      type = string
-      retention_in_days = number
-    } )}))
-}
-
-resource "ionoscloud_logging_pipeline" "example" {
-  location = "es/vit"
-  name = "examplepipeline"
-  dynamic "log" {
-    for_each = var.logs
-    content {
-      source = log.value["source"]
-      tag = log.value["tag"]
-      protocol = log.value["protocol"]
-      destinations {
-        type = log.value["destinations"]["type"]
-        retention_in_days = log.value["destinations"]["retention_in_days"]
-      }
-    }
-  }
-}
-```
-The configuration can then be applied using the following commands:
-
-```shell
-terraform plan -var-file="vars.tfvars"
-terraform apply -var-file="vars.tfvars"
-```
-
 ## Argument reference
 
 * `location` - (Optional)[string] The location of the Logging pipeline. Default: `de/txl` One of `de/fra`, `de/txl`, `gb/lhr`, `es/vit`, `fr/par`. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
