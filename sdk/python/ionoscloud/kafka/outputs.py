# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'ClusterConnections',
]

@pulumi.output_type
class ClusterConnections(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "brokerAddresses":
            suggest = "broker_addresses"
        elif key == "datacenterId":
            suggest = "datacenter_id"
        elif key == "lanId":
            suggest = "lan_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ClusterConnections. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ClusterConnections.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ClusterConnections.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 broker_addresses: Sequence[str],
                 datacenter_id: str,
                 lan_id: str):
        """
        :param Sequence[str] broker_addresses: [list] IP address and port of cluster brokers.
        :param str datacenter_id: [string] The datacenter to connect your instance to.
        :param str lan_id: [string] The numeric LAN ID to connect your instance to.
        """
        pulumi.set(__self__, "broker_addresses", broker_addresses)
        pulumi.set(__self__, "datacenter_id", datacenter_id)
        pulumi.set(__self__, "lan_id", lan_id)

    @property
    @pulumi.getter(name="brokerAddresses")
    def broker_addresses(self) -> Sequence[str]:
        """
        [list] IP address and port of cluster brokers.
        """
        return pulumi.get(self, "broker_addresses")

    @property
    @pulumi.getter(name="datacenterId")
    def datacenter_id(self) -> str:
        """
        [string] The datacenter to connect your instance to.
        """
        return pulumi.get(self, "datacenter_id")

    @property
    @pulumi.getter(name="lanId")
    def lan_id(self) -> str:
        """
        [string] The numeric LAN ID to connect your instance to.
        """
        return pulumi.get(self, "lan_id")


