# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetS3BucketPolicyResult',
    'AwaitableGetS3BucketPolicyResult',
    'get_s3_bucket_policy',
    'get_s3_bucket_policy_output',
]

@pulumi.output_type
class GetS3BucketPolicyResult:
    """
    A collection of values returned by getS3BucketPolicy.
    """
    def __init__(__self__, bucket=None, id=None, policy=None):
        if bucket and not isinstance(bucket, str):
            raise TypeError("Expected argument 'bucket' to be a str")
        pulumi.set(__self__, "bucket", bucket)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if policy and not isinstance(policy, str):
            raise TypeError("Expected argument 'policy' to be a str")
        pulumi.set(__self__, "policy", policy)

    @property
    @pulumi.getter
    def bucket(self) -> str:
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def policy(self) -> str:
        """
        The policy of the bucket.
        """
        return pulumi.get(self, "policy")


class AwaitableGetS3BucketPolicyResult(GetS3BucketPolicyResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetS3BucketPolicyResult(
            bucket=self.bucket,
            id=self.id,
            policy=self.policy)


def get_s3_bucket_policy(bucket: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetS3BucketPolicyResult:
    """
    The **Bucket Policy data source** can be used to search for and return existing bucket policies.
    If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
    When this happens, please refine your search string so that it is specific enough to return only one result.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ionoscloud as ionoscloud

    example = ionoscloud.objectstorage.get_s3_bucket_policy(bucket="example")
    ```


    :param str bucket: [string] The name of the bucket where the object will be stored.
    """
    __args__ = dict()
    __args__['bucket'] = bucket
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ionoscloud:objectstorage/getS3BucketPolicy:getS3BucketPolicy', __args__, opts=opts, typ=GetS3BucketPolicyResult).value

    return AwaitableGetS3BucketPolicyResult(
        bucket=pulumi.get(__ret__, 'bucket'),
        id=pulumi.get(__ret__, 'id'),
        policy=pulumi.get(__ret__, 'policy'))
def get_s3_bucket_policy_output(bucket: Optional[pulumi.Input[str]] = None,
                                opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetS3BucketPolicyResult]:
    """
    The **Bucket Policy data source** can be used to search for and return existing bucket policies.
    If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
    When this happens, please refine your search string so that it is specific enough to return only one result.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ionoscloud as ionoscloud

    example = ionoscloud.objectstorage.get_s3_bucket_policy(bucket="example")
    ```


    :param str bucket: [string] The name of the bucket where the object will be stored.
    """
    __args__ = dict()
    __args__['bucket'] = bucket
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ionoscloud:objectstorage/getS3BucketPolicy:getS3BucketPolicy', __args__, opts=opts, typ=GetS3BucketPolicyResult)
    return __ret__.apply(lambda __response__: GetS3BucketPolicyResult(
        bucket=pulumi.get(__response__, 'bucket'),
        id=pulumi.get(__response__, 'id'),
        policy=pulumi.get(__response__, 'policy')))
