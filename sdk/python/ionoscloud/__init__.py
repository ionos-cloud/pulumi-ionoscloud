# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .get_monitoring_pipeline import *
from .get_object_storage_accesskey import *
from .get_object_storage_region import *
from .monitoring_pipeline import *
from .object_storage_accesskey import *
from .provider import *
from ._inputs import *
from . import outputs

# Make subpackages available:
if typing.TYPE_CHECKING:
    import ionoscloud.alb as __alb
    alb = __alb
    import ionoscloud.apigateway as __apigateway
    apigateway = __apigateway
    import ionoscloud.autoscaling as __autoscaling
    autoscaling = __autoscaling
    import ionoscloud.cdn as __cdn
    cdn = __cdn
    import ionoscloud.cert as __cert
    cert = __cert
    import ionoscloud.compute as __compute
    compute = __compute
    import ionoscloud.config as __config
    config = __config
    import ionoscloud.creg as __creg
    creg = __creg
    import ionoscloud.dbaas as __dbaas
    dbaas = __dbaas
    import ionoscloud.dns as __dns
    dns = __dns
    import ionoscloud.dsaas as __dsaas
    dsaas = __dsaas
    import ionoscloud.k8s as __k8s
    k8s = __k8s
    import ionoscloud.kafka as __kafka
    kafka = __kafka
    import ionoscloud.logging as __logging
    logging = __logging
    import ionoscloud.nfs as __nfs
    nfs = __nfs
    import ionoscloud.nlb as __nlb
    nlb = __nlb
    import ionoscloud.nsg as __nsg
    nsg = __nsg
    import ionoscloud.objectstorage as __objectstorage
    objectstorage = __objectstorage
    import ionoscloud.vpn as __vpn
    vpn = __vpn
else:
    alb = _utilities.lazy_import('ionoscloud.alb')
    apigateway = _utilities.lazy_import('ionoscloud.apigateway')
    autoscaling = _utilities.lazy_import('ionoscloud.autoscaling')
    cdn = _utilities.lazy_import('ionoscloud.cdn')
    cert = _utilities.lazy_import('ionoscloud.cert')
    compute = _utilities.lazy_import('ionoscloud.compute')
    config = _utilities.lazy_import('ionoscloud.config')
    creg = _utilities.lazy_import('ionoscloud.creg')
    dbaas = _utilities.lazy_import('ionoscloud.dbaas')
    dns = _utilities.lazy_import('ionoscloud.dns')
    dsaas = _utilities.lazy_import('ionoscloud.dsaas')
    k8s = _utilities.lazy_import('ionoscloud.k8s')
    kafka = _utilities.lazy_import('ionoscloud.kafka')
    logging = _utilities.lazy_import('ionoscloud.logging')
    nfs = _utilities.lazy_import('ionoscloud.nfs')
    nlb = _utilities.lazy_import('ionoscloud.nlb')
    nsg = _utilities.lazy_import('ionoscloud.nsg')
    objectstorage = _utilities.lazy_import('ionoscloud.objectstorage')
    vpn = _utilities.lazy_import('ionoscloud.vpn')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "ionoscloud",
  "mod": "alb/balancer",
  "fqn": "ionoscloud.alb",
  "classes": {
   "ionoscloud:alb/balancer:Balancer": "Balancer"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "alb/forwardingRule",
  "fqn": "ionoscloud.alb",
  "classes": {
   "ionoscloud:alb/forwardingRule:ForwardingRule": "ForwardingRule"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "apigateway/apigateway",
  "fqn": "ionoscloud.apigateway",
  "classes": {
   "ionoscloud:apigateway/apigateway:Apigateway": "Apigateway"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "apigateway/route",
  "fqn": "ionoscloud.apigateway",
  "classes": {
   "ionoscloud:apigateway/route:Route": "Route"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "autoscaling/group",
  "fqn": "ionoscloud.autoscaling",
  "classes": {
   "ionoscloud:autoscaling/group:Group": "Group"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "cdn/distribution",
  "fqn": "ionoscloud.cdn",
  "classes": {
   "ionoscloud:cdn/distribution:Distribution": "Distribution"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "cert/autoCertificate",
  "fqn": "ionoscloud.cert",
  "classes": {
   "ionoscloud:cert/autoCertificate:AutoCertificate": "AutoCertificate"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "cert/autoCertificateProvider",
  "fqn": "ionoscloud.cert",
  "classes": {
   "ionoscloud:cert/autoCertificateProvider:AutoCertificateProvider": "AutoCertificateProvider"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "cert/certificate",
  "fqn": "ionoscloud.cert",
  "classes": {
   "ionoscloud:cert/certificate:Certificate": "Certificate"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/backupUnit",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/backupUnit:BackupUnit": "BackupUnit"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/balancer",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/balancer:Balancer": "Balancer"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/bootDeviceSelection",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/bootDeviceSelection:BootDeviceSelection": "BootDeviceSelection"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/crossconnect",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/crossconnect:Crossconnect": "Crossconnect"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/cubeServer",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/cubeServer:CubeServer": "CubeServer"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/datacenter",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/datacenter:Datacenter": "Datacenter"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/firewall",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/firewall:Firewall": "Firewall"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/group",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/group:Group": "Group"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/iPBlock",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/iPBlock:IPBlock": "IPBlock"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/iPFailover",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/iPFailover:IPFailover": "IPFailover"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/lan",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/lan:Lan": "Lan"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/natGateway",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/natGateway:NatGateway": "NatGateway"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/natGatewayRule",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/natGatewayRule:NatGatewayRule": "NatGatewayRule"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/nic",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/nic:Nic": "Nic"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/s3Key",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/s3Key:S3Key": "S3Key"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/server",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/server:Server": "Server"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/share",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/share:Share": "Share"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/snapshot",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/snapshot:Snapshot": "Snapshot"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/targetGroup",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/targetGroup:TargetGroup": "TargetGroup"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/user",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/user:User": "User"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/vCPUServer",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/vCPUServer:VCPUServer": "VCPUServer"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "compute/volume",
  "fqn": "ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/volume:Volume": "Volume"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "creg/registry",
  "fqn": "ionoscloud.creg",
  "classes": {
   "ionoscloud:creg/registry:Registry": "Registry"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "creg/registryToken",
  "fqn": "ionoscloud.creg",
  "classes": {
   "ionoscloud:creg/registryToken:RegistryToken": "RegistryToken"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "dbaas/inMemoryDBReplicaSet",
  "fqn": "ionoscloud.dbaas",
  "classes": {
   "ionoscloud:dbaas/inMemoryDBReplicaSet:InMemoryDBReplicaSet": "InMemoryDBReplicaSet"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "dbaas/mariaDBCluster",
  "fqn": "ionoscloud.dbaas",
  "classes": {
   "ionoscloud:dbaas/mariaDBCluster:MariaDBCluster": "MariaDBCluster"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "dbaas/mongoCluster",
  "fqn": "ionoscloud.dbaas",
  "classes": {
   "ionoscloud:dbaas/mongoCluster:MongoCluster": "MongoCluster"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "dbaas/mongoUser",
  "fqn": "ionoscloud.dbaas",
  "classes": {
   "ionoscloud:dbaas/mongoUser:MongoUser": "MongoUser"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "dbaas/pSQLCluster",
  "fqn": "ionoscloud.dbaas",
  "classes": {
   "ionoscloud:dbaas/pSQLCluster:PSQLCluster": "PSQLCluster"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "dbaas/pSQLDatabase",
  "fqn": "ionoscloud.dbaas",
  "classes": {
   "ionoscloud:dbaas/pSQLDatabase:PSQLDatabase": "PSQLDatabase"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "dbaas/pSQLUser",
  "fqn": "ionoscloud.dbaas",
  "classes": {
   "ionoscloud:dbaas/pSQLUser:PSQLUser": "PSQLUser"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "dns/record",
  "fqn": "ionoscloud.dns",
  "classes": {
   "ionoscloud:dns/record:Record": "Record"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "dns/zone",
  "fqn": "ionoscloud.dns",
  "classes": {
   "ionoscloud:dns/zone:Zone": "Zone"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "dsaas/cluster",
  "fqn": "ionoscloud.dsaas",
  "classes": {
   "ionoscloud:dsaas/cluster:Cluster": "Cluster"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "dsaas/nodePool",
  "fqn": "ionoscloud.dsaas",
  "classes": {
   "ionoscloud:dsaas/nodePool:NodePool": "NodePool"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/monitoringPipeline",
  "fqn": "ionoscloud",
  "classes": {
   "ionoscloud:index/monitoringPipeline:MonitoringPipeline": "MonitoringPipeline"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/objectStorageAccesskey",
  "fqn": "ionoscloud",
  "classes": {
   "ionoscloud:index/objectStorageAccesskey:ObjectStorageAccesskey": "ObjectStorageAccesskey"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "k8s/cluster",
  "fqn": "ionoscloud.k8s",
  "classes": {
   "ionoscloud:k8s/cluster:Cluster": "Cluster"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "k8s/nodePool",
  "fqn": "ionoscloud.k8s",
  "classes": {
   "ionoscloud:k8s/nodePool:NodePool": "NodePool"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "kafka/cluster",
  "fqn": "ionoscloud.kafka",
  "classes": {
   "ionoscloud:kafka/cluster:Cluster": "Cluster"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "kafka/topic",
  "fqn": "ionoscloud.kafka",
  "classes": {
   "ionoscloud:kafka/topic:Topic": "Topic"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "logging/pipeline",
  "fqn": "ionoscloud.logging",
  "classes": {
   "ionoscloud:logging/pipeline:Pipeline": "Pipeline"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "nfs/cluster",
  "fqn": "ionoscloud.nfs",
  "classes": {
   "ionoscloud:nfs/cluster:Cluster": "Cluster"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "nfs/share",
  "fqn": "ionoscloud.nfs",
  "classes": {
   "ionoscloud:nfs/share:Share": "Share"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "nlb/balancer",
  "fqn": "ionoscloud.nlb",
  "classes": {
   "ionoscloud:nlb/balancer:Balancer": "Balancer"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "nlb/forwardingRule",
  "fqn": "ionoscloud.nlb",
  "classes": {
   "ionoscloud:nlb/forwardingRule:ForwardingRule": "ForwardingRule"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "nsg/datacenterNsgSelection",
  "fqn": "ionoscloud.nsg",
  "classes": {
   "ionoscloud:nsg/datacenterNsgSelection:DatacenterNsgSelection": "DatacenterNsgSelection"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "nsg/firewall",
  "fqn": "ionoscloud.nsg",
  "classes": {
   "ionoscloud:nsg/firewall:Firewall": "Firewall"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "nsg/nsg",
  "fqn": "ionoscloud.nsg",
  "classes": {
   "ionoscloud:nsg/nsg:Nsg": "Nsg"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "objectstorage/bucket",
  "fqn": "ionoscloud.objectstorage",
  "classes": {
   "ionoscloud:objectstorage/bucket:Bucket": "Bucket"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "objectstorage/bucketLifecycleConfiguration",
  "fqn": "ionoscloud.objectstorage",
  "classes": {
   "ionoscloud:objectstorage/bucketLifecycleConfiguration:BucketLifecycleConfiguration": "BucketLifecycleConfiguration"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "objectstorage/bucketPolicy",
  "fqn": "ionoscloud.objectstorage",
  "classes": {
   "ionoscloud:objectstorage/bucketPolicy:BucketPolicy": "BucketPolicy"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "objectstorage/bucketServerSideEncryptionConfiguration",
  "fqn": "ionoscloud.objectstorage",
  "classes": {
   "ionoscloud:objectstorage/bucketServerSideEncryptionConfiguration:BucketServerSideEncryptionConfiguration": "BucketServerSideEncryptionConfiguration"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "objectstorage/bucketVersioning",
  "fqn": "ionoscloud.objectstorage",
  "classes": {
   "ionoscloud:objectstorage/bucketVersioning:BucketVersioning": "BucketVersioning"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "objectstorage/corsConfiguration",
  "fqn": "ionoscloud.objectstorage",
  "classes": {
   "ionoscloud:objectstorage/corsConfiguration:CorsConfiguration": "CorsConfiguration"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "objectstorage/object",
  "fqn": "ionoscloud.objectstorage",
  "classes": {
   "ionoscloud:objectstorage/object:Object": "Object"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "objectstorage/objectCopy",
  "fqn": "ionoscloud.objectstorage",
  "classes": {
   "ionoscloud:objectstorage/objectCopy:ObjectCopy": "ObjectCopy"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "objectstorage/objectLockConfiguration",
  "fqn": "ionoscloud.objectstorage",
  "classes": {
   "ionoscloud:objectstorage/objectLockConfiguration:ObjectLockConfiguration": "ObjectLockConfiguration"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "objectstorage/publicAccessBlock",
  "fqn": "ionoscloud.objectstorage",
  "classes": {
   "ionoscloud:objectstorage/publicAccessBlock:PublicAccessBlock": "PublicAccessBlock"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "objectstorage/websiteConfiguration",
  "fqn": "ionoscloud.objectstorage",
  "classes": {
   "ionoscloud:objectstorage/websiteConfiguration:WebsiteConfiguration": "WebsiteConfiguration"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "vpn/ipsecGateway",
  "fqn": "ionoscloud.vpn",
  "classes": {
   "ionoscloud:vpn/ipsecGateway:IpsecGateway": "IpsecGateway"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "vpn/ipsecTunnel",
  "fqn": "ionoscloud.vpn",
  "classes": {
   "ionoscloud:vpn/ipsecTunnel:IpsecTunnel": "IpsecTunnel"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "vpn/wireguardGateway",
  "fqn": "ionoscloud.vpn",
  "classes": {
   "ionoscloud:vpn/wireguardGateway:WireguardGateway": "WireguardGateway"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "vpn/wireguardPeer",
  "fqn": "ionoscloud.vpn",
  "classes": {
   "ionoscloud:vpn/wireguardPeer:WireguardPeer": "WireguardPeer"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "ionoscloud",
  "token": "pulumi:providers:ionoscloud",
  "fqn": "ionoscloud",
  "class": "Provider"
 }
]
"""
)
