# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetObjectStorageRegionResult',
    'AwaitableGetObjectStorageRegionResult',
    'get_object_storage_region',
    'get_object_storage_region_output',
]

@pulumi.output_type
class GetObjectStorageRegionResult:
    """
    A collection of values returned by getObjectStorageRegion.
    """
    def __init__(__self__, capability=None, endpoint=None, id=None, location=None, storage_classes=None, version=None, website=None):
        if capability and not isinstance(capability, dict):
            raise TypeError("Expected argument 'capability' to be a dict")
        pulumi.set(__self__, "capability", capability)
        if endpoint and not isinstance(endpoint, str):
            raise TypeError("Expected argument 'endpoint' to be a str")
        pulumi.set(__self__, "endpoint", endpoint)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if location and not isinstance(location, str):
            raise TypeError("Expected argument 'location' to be a str")
        pulumi.set(__self__, "location", location)
        if storage_classes and not isinstance(storage_classes, list):
            raise TypeError("Expected argument 'storage_classes' to be a list")
        pulumi.set(__self__, "storage_classes", storage_classes)
        if version and not isinstance(version, float):
            raise TypeError("Expected argument 'version' to be a float")
        pulumi.set(__self__, "version", version)
        if website and not isinstance(website, str):
            raise TypeError("Expected argument 'website' to be a str")
        pulumi.set(__self__, "website", website)

    @property
    @pulumi.getter
    def capability(self) -> 'outputs.GetObjectStorageRegionCapabilityResult':
        """
        The capabilities of the region
        """
        return pulumi.get(self, "capability")

    @property
    @pulumi.getter
    def endpoint(self) -> str:
        """
        The endpoint URL for the region
        """
        return pulumi.get(self, "endpoint")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The id of the region
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def location(self) -> str:
        """
        The data center location of the region as per [Get Location](https://www.terraform.io/docs/cloud/v6/#tag/Locations/operation/locationsGet). *Can't be used as `LocationConstraint` on bucket creation.*
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter(name="storageClasses")
    def storage_classes(self) -> Sequence[str]:
        """
        The available classes in the region
        """
        return pulumi.get(self, "storage_classes")

    @property
    @pulumi.getter
    def version(self) -> float:
        """
        The version of the region properties
        """
        return pulumi.get(self, "version")

    @property
    @pulumi.getter
    def website(self) -> str:
        """
        The website URL for the region
        """
        return pulumi.get(self, "website")


class AwaitableGetObjectStorageRegionResult(GetObjectStorageRegionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetObjectStorageRegionResult(
            capability=self.capability,
            endpoint=self.endpoint,
            id=self.id,
            location=self.location,
            storage_classes=self.storage_classes,
            version=self.version,
            website=self.website)


def get_object_storage_region(id: Optional[str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetObjectStorageRegionResult:
    """
    The **Object storage region data source** can be used to search for and return an existing S3 Regions.

    ## Example Usage

    ### By ID
    ```python
    import pulumi
    import pulumi_ionoscloud as ionoscloud

    example = ionoscloud.get_object_storage_region(id="region_id")
    ```


    :param str id: Id of an existing object storage Region that you want to search for.
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ionoscloud:index/getObjectStorageRegion:getObjectStorageRegion', __args__, opts=opts, typ=GetObjectStorageRegionResult).value

    return AwaitableGetObjectStorageRegionResult(
        capability=pulumi.get(__ret__, 'capability'),
        endpoint=pulumi.get(__ret__, 'endpoint'),
        id=pulumi.get(__ret__, 'id'),
        location=pulumi.get(__ret__, 'location'),
        storage_classes=pulumi.get(__ret__, 'storage_classes'),
        version=pulumi.get(__ret__, 'version'),
        website=pulumi.get(__ret__, 'website'))
def get_object_storage_region_output(id: Optional[pulumi.Input[str]] = None,
                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetObjectStorageRegionResult]:
    """
    The **Object storage region data source** can be used to search for and return an existing S3 Regions.

    ## Example Usage

    ### By ID
    ```python
    import pulumi
    import pulumi_ionoscloud as ionoscloud

    example = ionoscloud.get_object_storage_region(id="region_id")
    ```


    :param str id: Id of an existing object storage Region that you want to search for.
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ionoscloud:index/getObjectStorageRegion:getObjectStorageRegion', __args__, opts=opts, typ=GetObjectStorageRegionResult)
    return __ret__.apply(lambda __response__: GetObjectStorageRegionResult(
        capability=pulumi.get(__response__, 'capability'),
        endpoint=pulumi.get(__response__, 'endpoint'),
        id=pulumi.get(__response__, 'id'),
        location=pulumi.get(__response__, 'location'),
        storage_classes=pulumi.get(__response__, 'storage_classes'),
        version=pulumi.get(__response__, 'version'),
        website=pulumi.get(__response__, 'website')))
