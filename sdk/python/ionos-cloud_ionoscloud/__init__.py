# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .apigateway import *
from .apigateway_route import *
from .application_loadbalancer import *
from .application_loadbalancer_forwardingrule import *
from .auto_certificate import *
from .auto_certificate_provider import *
from .autoscaling_group import *
from .backup_unit import *
from .cdn_distribution import *
from .certificate import *
from .container_registry import *
from .container_registry_token import *
from .cube_server import *
from .datacenter import *
from .dataplatform_cluster import *
from .dataplatform_node_pool import *
from .dns_record import *
from .dns_zone import *
from .firewall import *
from .get_apigateway import *
from .get_apigateway_route import *
from .get_application_loadbalancer import *
from .get_application_loadbalancer_forwardingrule import *
from .get_auto_certificate import *
from .get_auto_certificate_provider import *
from .get_autoscaling_group import *
from .get_autoscaling_group_servers import *
from .get_backup_unit import *
from .get_cdn_distribution import *
from .get_certificate import *
from .get_container_registry import *
from .get_container_registry_locations import *
from .get_container_registry_token import *
from .get_cube_server import *
from .get_datacenter import *
from .get_dataplatform_cluster import *
from .get_dataplatform_node_pool import *
from .get_dataplatform_node_pools import *
from .get_dataplatform_versions import *
from .get_dns_record import *
from .get_dns_zone import *
from .get_firewall import *
from .get_group import *
from .get_image import *
from .get_inmemorydb_replicaset import *
from .get_inmemorydb_snapshot import *
from .get_ipblock import *
from .get_ipfailover import *
from .get_k8s_cluster import *
from .get_k8s_clusters import *
from .get_k8s_node_pool import *
from .get_k8s_node_pool_nodes import *
from .get_kafka_cluster import *
from .get_kafka_cluster_topic import *
from .get_lan import *
from .get_location import *
from .get_logging_pipeline import *
from .get_mariadb_backups import *
from .get_mariadb_cluster import *
from .get_mongo_cluster import *
from .get_mongo_template import *
from .get_mongo_user import *
from .get_natgateway import *
from .get_natgateway_rule import *
from .get_networkloadbalancer import *
from .get_networkloadbalancer_forwardingrule import *
from .get_nfs_cluster import *
from .get_nfs_share import *
from .get_nic import *
from .get_pg_backups import *
from .get_pg_cluster import *
from .get_pg_database import *
from .get_pg_databases import *
from .get_pg_user import *
from .get_pg_versions import *
from .get_private_crossconnect import *
from .get_resource import *
from .get_s3_key import *
from .get_server import *
from .get_servers import *
from .get_share import *
from .get_snapshot import *
from .get_target_group import *
from .get_template import *
from .get_user import *
from .get_vcpu_server import *
from .get_volume import *
from .get_vpn_ipsec_gateway import *
from .get_vpn_ipsec_tunnel import *
from .get_vpn_wireguard_gateway import *
from .get_vpn_wireguard_peer import *
from .group import *
from .inmemorydb_replicaset import *
from .ipblock import *
from .ipfailover import *
from .k8s_cluster import *
from .k8s_node_pool import *
from .kafka_cluster import *
from .kafka_cluster_topic import *
from .lan import *
from .loadbalancer import *
from .logging_pipeline import *
from .mariadb_cluster import *
from .mongo_cluster import *
from .mongo_user import *
from .natgateway import *
from .natgateway_rule import *
from .networkloadbalancer import *
from .networkloadbalancer_forwardingrule import *
from .nfs_cluster import *
from .nfs_share import *
from .nic import *
from .pg_cluster import *
from .pg_database import *
from .pg_user import *
from .private_crossconnect import *
from .provider import *
from .s3_key import *
from .server import *
from .server_boot_device_selection import *
from .share import *
from .snapshot import *
from .target_group import *
from .user import *
from .vcpu_server import *
from .volume import *
from .vpn_ipsec_gateway import *
from .vpn_ipsec_tunnel import *
from .vpn_wireguard_gateway import *
from .vpn_wireguard_peer import *
from ._inputs import *
from . import outputs

# Make subpackages available:
if typing.TYPE_CHECKING:
    import ionos-cloud_ionoscloud.compute as __compute
    compute = __compute
    import ionos-cloud_ionoscloud.config as __config
    config = __config
else:
    compute = _utilities.lazy_import('ionos-cloud_ionoscloud.compute')
    config = _utilities.lazy_import('ionos-cloud_ionoscloud.config')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "ionoscloud",
  "mod": "compute/datacenter",
  "fqn": "ionos-cloud_ionoscloud.compute",
  "classes": {
   "ionoscloud:compute/datacenter:Datacenter": "Datacenter"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/apigateway",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/apigateway:Apigateway": "Apigateway"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/apigatewayRoute",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/apigatewayRoute:ApigatewayRoute": "ApigatewayRoute"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/applicationLoadbalancer",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/applicationLoadbalancer:ApplicationLoadbalancer": "ApplicationLoadbalancer"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/applicationLoadbalancerForwardingrule",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/applicationLoadbalancerForwardingrule:ApplicationLoadbalancerForwardingrule": "ApplicationLoadbalancerForwardingrule"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/autoCertificate",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/autoCertificate:AutoCertificate": "AutoCertificate"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/autoCertificateProvider",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/autoCertificateProvider:AutoCertificateProvider": "AutoCertificateProvider"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/autoscalingGroup",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/autoscalingGroup:AutoscalingGroup": "AutoscalingGroup"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/backupUnit",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/backupUnit:BackupUnit": "BackupUnit"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/cdnDistribution",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/cdnDistribution:CdnDistribution": "CdnDistribution"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/certificate",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/certificate:Certificate": "Certificate"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/containerRegistry",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/containerRegistry:ContainerRegistry": "ContainerRegistry"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/containerRegistryToken",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/containerRegistryToken:ContainerRegistryToken": "ContainerRegistryToken"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/cubeServer",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/cubeServer:CubeServer": "CubeServer"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/datacenter",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/datacenter:Datacenter": "Datacenter"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/dataplatformCluster",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/dataplatformCluster:DataplatformCluster": "DataplatformCluster"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/dataplatformNodePool",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/dataplatformNodePool:DataplatformNodePool": "DataplatformNodePool"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/dnsRecord",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/dnsRecord:DnsRecord": "DnsRecord"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/dnsZone",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/dnsZone:DnsZone": "DnsZone"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/firewall",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/firewall:Firewall": "Firewall"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/group",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/group:Group": "Group"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/inmemorydbReplicaset",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/inmemorydbReplicaset:InmemorydbReplicaset": "InmemorydbReplicaset"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/ipblock",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/ipblock:Ipblock": "Ipblock"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/ipfailover",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/ipfailover:Ipfailover": "Ipfailover"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/k8sCluster",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/k8sCluster:K8sCluster": "K8sCluster"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/k8sNodePool",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/k8sNodePool:K8sNodePool": "K8sNodePool"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/kafkaCluster",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/kafkaCluster:KafkaCluster": "KafkaCluster"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/kafkaClusterTopic",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/kafkaClusterTopic:KafkaClusterTopic": "KafkaClusterTopic"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/lan",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/lan:Lan": "Lan"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/loadbalancer",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/loadbalancer:Loadbalancer": "Loadbalancer"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/loggingPipeline",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/loggingPipeline:LoggingPipeline": "LoggingPipeline"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/mariadbCluster",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/mariadbCluster:MariadbCluster": "MariadbCluster"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/mongoCluster",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/mongoCluster:MongoCluster": "MongoCluster"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/mongoUser",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/mongoUser:MongoUser": "MongoUser"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/natgateway",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/natgateway:Natgateway": "Natgateway"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/natgatewayRule",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/natgatewayRule:NatgatewayRule": "NatgatewayRule"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/networkloadbalancer",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/networkloadbalancer:Networkloadbalancer": "Networkloadbalancer"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/networkloadbalancerForwardingrule",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/networkloadbalancerForwardingrule:NetworkloadbalancerForwardingrule": "NetworkloadbalancerForwardingrule"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/nfsCluster",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/nfsCluster:NfsCluster": "NfsCluster"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/nfsShare",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/nfsShare:NfsShare": "NfsShare"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/nic",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/nic:Nic": "Nic"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/pgCluster",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/pgCluster:PgCluster": "PgCluster"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/pgDatabase",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/pgDatabase:PgDatabase": "PgDatabase"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/pgUser",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/pgUser:PgUser": "PgUser"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/privateCrossconnect",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/privateCrossconnect:PrivateCrossconnect": "PrivateCrossconnect"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/s3Key",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/s3Key:S3Key": "S3Key"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/server",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/server:Server": "Server"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/serverBootDeviceSelection",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/serverBootDeviceSelection:ServerBootDeviceSelection": "ServerBootDeviceSelection"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/share",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/share:Share": "Share"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/snapshot",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/snapshot:Snapshot": "Snapshot"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/targetGroup",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/targetGroup:TargetGroup": "TargetGroup"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/user",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/user:User": "User"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/vcpuServer",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/vcpuServer:VcpuServer": "VcpuServer"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/volume",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/volume:Volume": "Volume"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/vpnIpsecGateway",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/vpnIpsecGateway:VpnIpsecGateway": "VpnIpsecGateway"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/vpnIpsecTunnel",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/vpnIpsecTunnel:VpnIpsecTunnel": "VpnIpsecTunnel"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/vpnWireguardGateway",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/vpnWireguardGateway:VpnWireguardGateway": "VpnWireguardGateway"
  }
 },
 {
  "pkg": "ionoscloud",
  "mod": "index/vpnWireguardPeer",
  "fqn": "ionos-cloud_ionoscloud",
  "classes": {
   "ionoscloud:index/vpnWireguardPeer:VpnWireguardPeer": "VpnWireguardPeer"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "ionoscloud",
  "token": "pulumi:providers:ionoscloud",
  "fqn": "ionos-cloud_ionoscloud",
  "class": "Provider"
 }
]
"""
)
