// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getCluster(args?: GetClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:dsaas/getCluster:getCluster", {
        "id": args.id,
        "name": args.name,
        "partialMatch": args.partialMatch,
    }, opts);
}

/**
 * A collection of arguments for invoking getCluster.
 */
export interface GetClusterArgs {
    id?: string;
    name?: string;
    partialMatch?: boolean;
}

/**
 * A collection of values returned by getCluster.
 */
export interface GetClusterResult {
    readonly caCrt: string;
    readonly configs: outputs.dsaas.GetClusterConfig[];
    readonly datacenterId: string;
    readonly id?: string;
    readonly kubeConfig: string;
    readonly lans: outputs.dsaas.GetClusterLan[];
    readonly maintenanceWindows: outputs.dsaas.GetClusterMaintenanceWindow[];
    readonly name?: string;
    readonly partialMatch?: boolean;
    readonly server: string;
    readonly userTokens: {[key: string]: string};
    readonly version: string;
}
export function getClusterOutput(args?: GetClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetClusterResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ionoscloud:dsaas/getCluster:getCluster", {
        "id": args.id,
        "name": args.name,
        "partialMatch": args.partialMatch,
    }, opts);
}

/**
 * A collection of arguments for invoking getCluster.
 */
export interface GetClusterOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    partialMatch?: pulumi.Input<boolean>;
}
