// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Returns information about shares of Network File Storage (NFS) on IonosCloud.
 *
 * ## By ID
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.nfs.getShare({
 *     location: "location",
 *     clusterId: "cluster-id",
 *     id: "share-id",
 * });
 * ```
 */
export function getShare(args: GetShareArgs, opts?: pulumi.InvokeOptions): Promise<GetShareResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:nfs/getShare:getShare", {
        "clientGroups": args.clientGroups,
        "clusterId": args.clusterId,
        "gid": args.gid,
        "id": args.id,
        "location": args.location,
        "name": args.name,
        "partialMatch": args.partialMatch,
        "quota": args.quota,
        "uid": args.uid,
    }, opts);
}

/**
 * A collection of arguments for invoking getShare.
 */
export interface GetShareArgs {
    /**
     * The groups of clients are the systems connecting to the Network File Storage cluster. Each client group supports the following:
     */
    clientGroups?: inputs.nfs.GetShareClientGroup[];
    /**
     * The ID of the Network File Storage cluster.
     */
    clusterId: string;
    /**
     * The group ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.
     */
    gid?: number;
    /**
     * ID of the Network File Storage share.
     */
    id?: string;
    /**
     * The location where the Network File Storage share is located.
     */
    location?: string;
    /**
     * Name of the Network File Storage share.
     */
    name?: string;
    /**
     * Whether partial matching is allowed or not when using the name filter. Defaults to `false`.
     */
    partialMatch?: boolean;
    /**
     * The quota in MiB for the export. The quota can restrict the amount of data that can be stored within the export. The quota can be disabled using `0`.
     */
    quota?: number;
    /**
     * The user ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.
     */
    uid?: number;
}

/**
 * A collection of values returned by getShare.
 */
export interface GetShareResult {
    /**
     * The groups of clients are the systems connecting to the Network File Storage cluster. Each client group supports the following:
     */
    readonly clientGroups: outputs.nfs.GetShareClientGroup[];
    /**
     * The ID of the Network File Storage cluster.
     */
    readonly clusterId: string;
    /**
     * The group ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.
     */
    readonly gid: number;
    /**
     * The ID of the Network File Storage share.
     */
    readonly id: string;
    /**
     * The location where the Network File Storage share is located.
     */
    readonly location?: string;
    /**
     * The name of the Network File Storage share.
     */
    readonly name: string;
    /**
     * Path to the NFS export. The NFS path is the path to the directory being exported.
     */
    readonly nfsPath: string;
    readonly partialMatch?: boolean;
    /**
     * The quota in MiB for the export. The quota can restrict the amount of data that can be stored within the export. The quota can be disabled using `0`.
     */
    readonly quota: number;
    /**
     * The user ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.
     */
    readonly uid: number;
}
/**
 * Returns information about shares of Network File Storage (NFS) on IonosCloud.
 *
 * ## By ID
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.nfs.getShare({
 *     location: "location",
 *     clusterId: "cluster-id",
 *     id: "share-id",
 * });
 * ```
 */
export function getShareOutput(args: GetShareOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetShareResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ionoscloud:nfs/getShare:getShare", {
        "clientGroups": args.clientGroups,
        "clusterId": args.clusterId,
        "gid": args.gid,
        "id": args.id,
        "location": args.location,
        "name": args.name,
        "partialMatch": args.partialMatch,
        "quota": args.quota,
        "uid": args.uid,
    }, opts);
}

/**
 * A collection of arguments for invoking getShare.
 */
export interface GetShareOutputArgs {
    /**
     * The groups of clients are the systems connecting to the Network File Storage cluster. Each client group supports the following:
     */
    clientGroups?: pulumi.Input<pulumi.Input<inputs.nfs.GetShareClientGroupArgs>[]>;
    /**
     * The ID of the Network File Storage cluster.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The group ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.
     */
    gid?: pulumi.Input<number>;
    /**
     * ID of the Network File Storage share.
     */
    id?: pulumi.Input<string>;
    /**
     * The location where the Network File Storage share is located.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the Network File Storage share.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether partial matching is allowed or not when using the name filter. Defaults to `false`.
     */
    partialMatch?: pulumi.Input<boolean>;
    /**
     * The quota in MiB for the export. The quota can restrict the amount of data that can be stored within the export. The quota can be disabled using `0`.
     */
    quota?: pulumi.Input<number>;
    /**
     * The user ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.
     */
    uid?: pulumi.Input<number>;
}
