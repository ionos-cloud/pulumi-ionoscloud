// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages an **Object Storage Accesskey** on IonosCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = new ionoscloud.ObjectStorageAccesskey("example", {description: "my description"});
 * ```
 *
 * ## Import
 *
 * An object storage accesskey resource can be imported using its `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import ionoscloud:index/objectStorageAccesskey:ObjectStorageAccesskey demo objectStorageAccesskeyid
 * ```
 *
 * This can be helpful when you want to import Object Storage Accesskeys which you have already created manually or using other means, outside of terraform.
 */
export class ObjectStorageAccesskey extends pulumi.CustomResource {
    /**
     * Get an existing ObjectStorageAccesskey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectStorageAccesskeyState, opts?: pulumi.CustomResourceOptions): ObjectStorageAccesskey {
        return new ObjectStorageAccesskey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ionoscloud:index/objectStorageAccesskey:ObjectStorageAccesskey';

    /**
     * Returns true if the given object is an instance of ObjectStorageAccesskey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectStorageAccesskey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectStorageAccesskey.__pulumiType;
    }

    /**
     * Access key metadata is a string of 92 characters.
     */
    public /*out*/ readonly accesskey!: pulumi.Output<string>;
    /**
     * The canonical user ID which is valid for user-owned buckets.
     */
    public /*out*/ readonly canonicalUserId!: pulumi.Output<string>;
    /**
     * The contract user ID which is valid for contract-owned buckets
     */
    public /*out*/ readonly contractUserId!: pulumi.Output<string>;
    /**
     * [string] Description of the Access key.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The secret key of the Access key.
     */
    public /*out*/ readonly secretkey!: pulumi.Output<string>;
    /**
     * Timeouts for this resource.
     */
    public readonly timeouts!: pulumi.Output<outputs.ObjectStorageAccesskeyTimeouts | undefined>;

    /**
     * Create a ObjectStorageAccesskey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectStorageAccesskeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectStorageAccesskeyArgs | ObjectStorageAccesskeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectStorageAccesskeyState | undefined;
            resourceInputs["accesskey"] = state ? state.accesskey : undefined;
            resourceInputs["canonicalUserId"] = state ? state.canonicalUserId : undefined;
            resourceInputs["contractUserId"] = state ? state.contractUserId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["secretkey"] = state ? state.secretkey : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ObjectStorageAccesskeyArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["accesskey"] = undefined /*out*/;
            resourceInputs["canonicalUserId"] = undefined /*out*/;
            resourceInputs["contractUserId"] = undefined /*out*/;
            resourceInputs["secretkey"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectStorageAccesskey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ObjectStorageAccesskey resources.
 */
export interface ObjectStorageAccesskeyState {
    /**
     * Access key metadata is a string of 92 characters.
     */
    accesskey?: pulumi.Input<string>;
    /**
     * The canonical user ID which is valid for user-owned buckets.
     */
    canonicalUserId?: pulumi.Input<string>;
    /**
     * The contract user ID which is valid for contract-owned buckets
     */
    contractUserId?: pulumi.Input<string>;
    /**
     * [string] Description of the Access key.
     */
    description?: pulumi.Input<string>;
    /**
     * The secret key of the Access key.
     */
    secretkey?: pulumi.Input<string>;
    /**
     * Timeouts for this resource.
     */
    timeouts?: pulumi.Input<inputs.ObjectStorageAccesskeyTimeouts>;
}

/**
 * The set of arguments for constructing a ObjectStorageAccesskey resource.
 */
export interface ObjectStorageAccesskeyArgs {
    /**
     * [string] Description of the Access key.
     */
    description?: pulumi.Input<string>;
    /**
     * Timeouts for this resource.
     */
    timeouts?: pulumi.Input<inputs.ObjectStorageAccesskeyTimeouts>;
}
