// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The **Kafka Cluster data source** can be used to search for and return an existing Kafka Cluster.
 * You can provide a string for the name parameter which will be compared with provisioned Kafka Clusters.
 * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
 * When this happens, please refine your search string so that it is specific enough to return only one result.
 *
 * ## Example Usage
 */
export function getKafkaCluster(args: GetKafkaClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetKafkaClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getKafkaCluster:getKafkaCluster", {
        "id": args.id,
        "location": args.location,
        "name": args.name,
        "partialMatch": args.partialMatch,
    }, opts);
}

/**
 * A collection of arguments for invoking getKafkaCluster.
 */
export interface GetKafkaClusterArgs {
    /**
     * ID of an existing Kafka Cluster that you want to search for.
     */
    id?: string;
    /**
     * The location of the Kafka Cluster. Possible values: `de/fra`, `de/txl`
     */
    location: string;
    /**
     * Name of an existing Kafka Cluster that you want to search for.
     */
    name?: string;
    partialMatch?: boolean;
}

/**
 * A collection of values returned by getKafkaCluster.
 */
export interface GetKafkaClusterResult {
    /**
     * IP address and port of cluster brokers.
     */
    readonly brokerAddresses: string[];
    /**
     * Connection information of the Kafka Cluster. Minimum items: 1, maximum items: 1.
     */
    readonly connections: outputs.GetKafkaClusterConnection[];
    /**
     * UUID of the Kafka Cluster.
     */
    readonly id: string;
    readonly location: string;
    /**
     * The name of the Kafka Cluster.
     */
    readonly name: string;
    readonly partialMatch?: boolean;
    /**
     * The size of the Kafka Cluster.
     */
    readonly size: string;
    /**
     * The version of the Kafka Cluster.
     */
    readonly version: string;
}
/**
 * The **Kafka Cluster data source** can be used to search for and return an existing Kafka Cluster.
 * You can provide a string for the name parameter which will be compared with provisioned Kafka Clusters.
 * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
 * When this happens, please refine your search string so that it is specific enough to return only one result.
 *
 * ## Example Usage
 */
export function getKafkaClusterOutput(args: GetKafkaClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaClusterResult> {
    return pulumi.output(args).apply((a: any) => getKafkaCluster(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaCluster.
 */
export interface GetKafkaClusterOutputArgs {
    /**
     * ID of an existing Kafka Cluster that you want to search for.
     */
    id?: pulumi.Input<string>;
    /**
     * The location of the Kafka Cluster. Possible values: `de/fra`, `de/txl`
     */
    location: pulumi.Input<string>;
    /**
     * Name of an existing Kafka Cluster that you want to search for.
     */
    name?: pulumi.Input<string>;
    partialMatch?: pulumi.Input<boolean>;
}
