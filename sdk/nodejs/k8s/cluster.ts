// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ionoscloud:k8s/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * When set to true, allows the update of immutable fields by destroying and re-creating the cluster.
     */
    public readonly allowReplace!: pulumi.Output<boolean | undefined>;
    /**
     * Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction.
     * If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will
     * be used: 32 for IPv4 and 128 for IPv6.
     */
    public readonly apiSubnetAllowLists!: pulumi.Output<string[] | undefined>;
    /**
     * The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
     * The provider will ignore downgrades of patch level.
     */
    public readonly k8sVersion!: pulumi.Output<string>;
    /**
     * This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have
     * a data center at that location. This attribute is immutable.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * A maintenance window comprise of a day of the week and a time for maintenance to be allowed
     */
    public readonly maintenanceWindow!: pulumi.Output<outputs.k8s.ClusterMaintenanceWindow>;
    /**
     * The desired name for the cluster
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the
     * same location as the cluster's location. This attribute is mandatory if the cluster is private.
     */
    public readonly natGatewayIp!: pulumi.Output<string | undefined>;
    /**
     * The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid
     * CIDR notation for an IPv4 network prefix of 16 bits length.
     */
    public readonly nodeSubnet!: pulumi.Output<string>;
    /**
     * The indicator if the cluster is public or private.
     */
    public readonly public!: pulumi.Output<boolean | undefined>;
    /**
     * List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store
     * K8s API audit logs.
     */
    public readonly s3Buckets!: pulumi.Output<outputs.k8s.ClusterS3Bucket[] | undefined>;
    /**
     * List of versions that may be used for node pools under this cluster
     */
    public /*out*/ readonly viableNodePoolVersions!: pulumi.Output<string[]>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["allowReplace"] = state ? state.allowReplace : undefined;
            resourceInputs["apiSubnetAllowLists"] = state ? state.apiSubnetAllowLists : undefined;
            resourceInputs["k8sVersion"] = state ? state.k8sVersion : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["maintenanceWindow"] = state ? state.maintenanceWindow : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["natGatewayIp"] = state ? state.natGatewayIp : undefined;
            resourceInputs["nodeSubnet"] = state ? state.nodeSubnet : undefined;
            resourceInputs["public"] = state ? state.public : undefined;
            resourceInputs["s3Buckets"] = state ? state.s3Buckets : undefined;
            resourceInputs["viableNodePoolVersions"] = state ? state.viableNodePoolVersions : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            resourceInputs["allowReplace"] = args ? args.allowReplace : undefined;
            resourceInputs["apiSubnetAllowLists"] = args ? args.apiSubnetAllowLists : undefined;
            resourceInputs["k8sVersion"] = args ? args.k8sVersion : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["maintenanceWindow"] = args ? args.maintenanceWindow : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["natGatewayIp"] = args ? args.natGatewayIp : undefined;
            resourceInputs["nodeSubnet"] = args ? args.nodeSubnet : undefined;
            resourceInputs["public"] = args ? args.public : undefined;
            resourceInputs["s3Buckets"] = args ? args.s3Buckets : undefined;
            resourceInputs["viableNodePoolVersions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * When set to true, allows the update of immutable fields by destroying and re-creating the cluster.
     */
    allowReplace?: pulumi.Input<boolean>;
    /**
     * Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction.
     * If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will
     * be used: 32 for IPv4 and 128 for IPv6.
     */
    apiSubnetAllowLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
     * The provider will ignore downgrades of patch level.
     */
    k8sVersion?: pulumi.Input<string>;
    /**
     * This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have
     * a data center at that location. This attribute is immutable.
     */
    location?: pulumi.Input<string>;
    /**
     * A maintenance window comprise of a day of the week and a time for maintenance to be allowed
     */
    maintenanceWindow?: pulumi.Input<inputs.k8s.ClusterMaintenanceWindow>;
    /**
     * The desired name for the cluster
     */
    name?: pulumi.Input<string>;
    /**
     * The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the
     * same location as the cluster's location. This attribute is mandatory if the cluster is private.
     */
    natGatewayIp?: pulumi.Input<string>;
    /**
     * The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid
     * CIDR notation for an IPv4 network prefix of 16 bits length.
     */
    nodeSubnet?: pulumi.Input<string>;
    /**
     * The indicator if the cluster is public or private.
     */
    public?: pulumi.Input<boolean>;
    /**
     * List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store
     * K8s API audit logs.
     */
    s3Buckets?: pulumi.Input<pulumi.Input<inputs.k8s.ClusterS3Bucket>[]>;
    /**
     * List of versions that may be used for node pools under this cluster
     */
    viableNodePoolVersions?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * When set to true, allows the update of immutable fields by destroying and re-creating the cluster.
     */
    allowReplace?: pulumi.Input<boolean>;
    /**
     * Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction.
     * If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will
     * be used: 32 for IPv4 and 128 for IPv6.
     */
    apiSubnetAllowLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
     * The provider will ignore downgrades of patch level.
     */
    k8sVersion?: pulumi.Input<string>;
    /**
     * This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have
     * a data center at that location. This attribute is immutable.
     */
    location?: pulumi.Input<string>;
    /**
     * A maintenance window comprise of a day of the week and a time for maintenance to be allowed
     */
    maintenanceWindow?: pulumi.Input<inputs.k8s.ClusterMaintenanceWindow>;
    /**
     * The desired name for the cluster
     */
    name?: pulumi.Input<string>;
    /**
     * The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the
     * same location as the cluster's location. This attribute is mandatory if the cluster is private.
     */
    natGatewayIp?: pulumi.Input<string>;
    /**
     * The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid
     * CIDR notation for an IPv4 network prefix of 16 bits length.
     */
    nodeSubnet?: pulumi.Input<string>;
    /**
     * The indicator if the cluster is public or private.
     */
    public?: pulumi.Input<boolean>;
    /**
     * List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store
     * K8s API audit logs.
     */
    s3Buckets?: pulumi.Input<pulumi.Input<inputs.k8s.ClusterS3Bucket>[]>;
}
