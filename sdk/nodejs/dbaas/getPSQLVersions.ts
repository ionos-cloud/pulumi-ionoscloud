// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The **DbaaS Postgres Versions data source** can be used to search for and retrieve list of available postgres versions for a specific cluster or for all clusters.
 *
 * ## Example Usage
 *
 * ### Retrieve list of postgres versions for all clusters
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.dbaas.getPSQLVersions({});
 * ```
 */
export function getPSQLVersions(args?: GetPSQLVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetPSQLVersionsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:dbaas/getPSQLVersions:getPSQLVersions", {
        "clusterId": args.clusterId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPSQLVersions.
 */
export interface GetPSQLVersionsArgs {
    /**
     * The unique ID of the cluster.
     *
     * If `clusterId` is not provided the data source will return the list of postgres version for all cluster.
     */
    clusterId?: string;
}

/**
 * A collection of values returned by getPSQLVersions.
 */
export interface GetPSQLVersionsResult {
    /**
     * Id of the cluster
     */
    readonly clusterId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * list of PostgreSQL versions.
     */
    readonly postgresVersions: string[];
}
/**
 * The **DbaaS Postgres Versions data source** can be used to search for and retrieve list of available postgres versions for a specific cluster or for all clusters.
 *
 * ## Example Usage
 *
 * ### Retrieve list of postgres versions for all clusters
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.dbaas.getPSQLVersions({});
 * ```
 */
export function getPSQLVersionsOutput(args?: GetPSQLVersionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPSQLVersionsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ionoscloud:dbaas/getPSQLVersions:getPSQLVersions", {
        "clusterId": args.clusterId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPSQLVersions.
 */
export interface GetPSQLVersionsOutputArgs {
    /**
     * The unique ID of the cluster.
     *
     * If `clusterId` is not provided the data source will return the list of postgres version for all cluster.
     */
    clusterId?: pulumi.Input<string>;
}
