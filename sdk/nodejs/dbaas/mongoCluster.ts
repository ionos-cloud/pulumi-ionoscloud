// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a **DbaaS Mongo Cluster**.
 *
 * ## Example Usage
 *
 * ### Playground Or Business Editions. They Require Template_id Defined.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 * import * as random from "@pulumi/random";
 *
 * const datacenterExample = new ionoscloud.compute.Datacenter("datacenter_example", {
 *     name: "example",
 *     location: "de/txl",
 *     description: "Datacenter for testing dbaas cluster",
 * });
 * const lanExample = new ionoscloud.compute.Lan("lan_example", {
 *     datacenterId: datacenterExample.id,
 *     "public": false,
 *     name: "example",
 * });
 * const exampleMongoCluster = new ionoscloud.dbaas.MongoCluster("example_mongo_cluster", {
 *     maintenanceWindow: {
 *         dayOfTheWeek: "Sunday",
 *         time: "09:00:00",
 *     },
 *     mongodbVersion: "5.0",
 *     instances: 1,
 *     displayName: "example_mongo_cluster",
 *     location: datacenterExample.location,
 *     connections: {
 *         datacenterId: datacenterExample.id,
 *         lanId: lanExample.id,
 *         cidrLists: ["192.168.1.108/24"],
 *     },
 *     templateId: "6b78ea06-ee0e-4689-998c-fc9c46e781f6",
 * });
 * const clusterPassword = new random.index.Password("cluster_password", {
 *     length: 16,
 *     special: true,
 *     overrideSpecial: "!#$%&*()-_=+[]{}<>:?",
 * });
 * ```
 *
 * ### Enterprise Edition
 *
 * **Enterprise Support: With MongoDB Enterprise, you gain access to professional support from the MongoDB team ensuring that you receive timely assistance and expert guidance when needed. IONOS offers enterprise-grade Service Level Agreements (SLAs), guaranteeing rapid response times and 24/7 support to address any critical issues that may arise.**
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 * import * as random from "@pulumi/random";
 *
 * const datacenterExample = new ionoscloud.compute.Datacenter("datacenter_example", {
 *     name: "example",
 *     location: "de/txl",
 *     description: "Datacenter for testing dbaas cluster",
 * });
 * const lanExample = new ionoscloud.compute.Lan("lan_example", {
 *     datacenterId: datacenterExample.id,
 *     "public": false,
 *     name: "example",
 * });
 * const exampleMongoCluster = new ionoscloud.dbaas.MongoCluster("example_mongo_cluster", {
 *     maintenanceWindow: {
 *         dayOfTheWeek: "Sunday",
 *         time: "09:00:00",
 *     },
 *     mongodbVersion: "5.0",
 *     instances: 3,
 *     displayName: "example_mongo_cluster",
 *     location: datacenterExample.location,
 *     connections: {
 *         datacenterId: datacenterExample.id,
 *         lanId: lanExample.id,
 *         cidrLists: [
 *             "192.168.1.108/24",
 *             "192.168.1.109/24",
 *             "192.168.1.110/24",
 *         ],
 *     },
 *     type: "sharded-cluster",
 *     shards: 2,
 *     edition: "enterprise",
 *     ram: 2048,
 *     cores: 1,
 *     storageSize: 5120,
 *     storageType: "HDD",
 * });
 * const clusterPassword = new random.index.Password("cluster_password", {
 *     length: 16,
 *     special: true,
 *     overrideSpecial: "!#$%&*()-_=+[]{}<>:?",
 * });
 * ```
 *
 * ## Import
 *
 * Resource DbaaS MongoDb Cluster can be imported using the `cluster_id`, e.g.
 *
 * ```sh
 * $ pulumi import ionoscloud:dbaas/mongoCluster:MongoCluster mycluser cluster uuid
 * ```
 */
export class MongoCluster extends pulumi.CustomResource {
    /**
     * Get an existing MongoCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MongoClusterState, opts?: pulumi.CustomResourceOptions): MongoCluster {
        return new MongoCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ionoscloud:dbaas/mongoCluster:MongoCluster';

    /**
     * Returns true if the given object is an instance of MongoCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MongoCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MongoCluster.__pulumiType;
    }

    /**
     * [list]
     */
    public readonly backup!: pulumi.Output<outputs.dbaas.MongoClusterBackup | undefined>;
    /**
     * (Computed)The MongoDB Connector for Business Intelligence allows you to query a MongoDB database using SQL commands to aid in data analysis.
     */
    public readonly biConnector!: pulumi.Output<outputs.dbaas.MongoClusterBiConnector>;
    /**
     * [string] The physical location where the cluster will be created. This will be where all of your instances live. Updates to the value of the field force the cluster to be re-created. Available locations: de/txl, gb/lhr, es/vit
     */
    public /*out*/ readonly connectionString!: pulumi.Output<string>;
    /**
     * [List] Details about the network connection for your cluster. Updates to the value of the field force the cluster to be re-created.
     */
    public readonly connections!: pulumi.Output<outputs.dbaas.MongoClusterConnections>;
    /**
     * (Computed)[int] The number of CPU cores per replica. Required for enterprise edition.
     */
    public readonly cores!: pulumi.Output<number>;
    /**
     * [string] The name of your cluster. Updates to the value of the field force the cluster to be re-created.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Computed)[string] Cluster edition. Playground, business or enterprise.
     */
    public readonly edition!: pulumi.Output<string>;
    /**
     * [int] The total number of instances in the cluster (one master and n-1 standbys). Example: 1, 3, 5, 7. Updates to the value of the field force the cluster to be re-created.
     */
    public readonly instances!: pulumi.Output<number>;
    /**
     * [string] The physical location where the cluster will be created. Property cannot be modified after datacenter creation (disallowed in update requests). Available locations: de/txl, gb/lhr, es/vit. Update forces cluster re-creation.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * (Computed) A weekly 4 hour-long window, during which maintenance might occur.  Updates to the value of the field force the cluster to be re-created.
     */
    public readonly maintenanceWindow!: pulumi.Output<outputs.dbaas.MongoClusterMaintenanceWindow>;
    /**
     * [string] The MongoDB version of your cluster. Updates to the value of the field force the cluster to be re-created.
     */
    public readonly mongodbVersion!: pulumi.Output<string>;
    /**
     * (Computed)[int]The amount of memory per instance in megabytes. Required for enterprise edition.
     */
    public readonly ram!: pulumi.Output<number>;
    /**
     * [int]The total number of shards in the cluster.
     */
    public readonly shards!: pulumi.Output<number | undefined>;
    /**
     * (Computed)[int] The amount of storage per instance in MB. Required for enterprise edition.
     */
    public readonly storageSize!: pulumi.Output<number>;
    /**
     * (Computed)[String] The storage type used in your cluster. Required for enterprise edition.
     */
    public readonly storageType!: pulumi.Output<string>;
    /**
     * [string] The unique ID of the template, which specifies the number of cores, storage size, and memory. Updates to the value of the field force the cluster to be re-created. Required for playground and business editions. Must not be provided for enterprise edition.
     */
    public readonly templateId!: pulumi.Output<string | undefined>;
    /**
     * (Computed)[string]The cluster type, either `replicaset` or `sharded-cluster`.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a MongoCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MongoClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MongoClusterArgs | MongoClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MongoClusterState | undefined;
            resourceInputs["backup"] = state ? state.backup : undefined;
            resourceInputs["biConnector"] = state ? state.biConnector : undefined;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["connections"] = state ? state.connections : undefined;
            resourceInputs["cores"] = state ? state.cores : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["edition"] = state ? state.edition : undefined;
            resourceInputs["instances"] = state ? state.instances : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["maintenanceWindow"] = state ? state.maintenanceWindow : undefined;
            resourceInputs["mongodbVersion"] = state ? state.mongodbVersion : undefined;
            resourceInputs["ram"] = state ? state.ram : undefined;
            resourceInputs["shards"] = state ? state.shards : undefined;
            resourceInputs["storageSize"] = state ? state.storageSize : undefined;
            resourceInputs["storageType"] = state ? state.storageType : undefined;
            resourceInputs["templateId"] = state ? state.templateId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as MongoClusterArgs | undefined;
            if ((!args || args.connections === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connections'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.instances === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instances'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.mongodbVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mongodbVersion'");
            }
            resourceInputs["backup"] = args ? args.backup : undefined;
            resourceInputs["biConnector"] = args ? args.biConnector : undefined;
            resourceInputs["connections"] = args ? args.connections : undefined;
            resourceInputs["cores"] = args ? args.cores : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["edition"] = args ? args.edition : undefined;
            resourceInputs["instances"] = args ? args.instances : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["maintenanceWindow"] = args ? args.maintenanceWindow : undefined;
            resourceInputs["mongodbVersion"] = args ? args.mongodbVersion : undefined;
            resourceInputs["ram"] = args ? args.ram : undefined;
            resourceInputs["shards"] = args ? args.shards : undefined;
            resourceInputs["storageSize"] = args ? args.storageSize : undefined;
            resourceInputs["storageType"] = args ? args.storageType : undefined;
            resourceInputs["templateId"] = args ? args.templateId : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["connectionString"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MongoCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MongoCluster resources.
 */
export interface MongoClusterState {
    /**
     * [list]
     */
    backup?: pulumi.Input<inputs.dbaas.MongoClusterBackup>;
    /**
     * (Computed)The MongoDB Connector for Business Intelligence allows you to query a MongoDB database using SQL commands to aid in data analysis.
     */
    biConnector?: pulumi.Input<inputs.dbaas.MongoClusterBiConnector>;
    /**
     * [string] The physical location where the cluster will be created. This will be where all of your instances live. Updates to the value of the field force the cluster to be re-created. Available locations: de/txl, gb/lhr, es/vit
     */
    connectionString?: pulumi.Input<string>;
    /**
     * [List] Details about the network connection for your cluster. Updates to the value of the field force the cluster to be re-created.
     */
    connections?: pulumi.Input<inputs.dbaas.MongoClusterConnections>;
    /**
     * (Computed)[int] The number of CPU cores per replica. Required for enterprise edition.
     */
    cores?: pulumi.Input<number>;
    /**
     * [string] The name of your cluster. Updates to the value of the field force the cluster to be re-created.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Computed)[string] Cluster edition. Playground, business or enterprise.
     */
    edition?: pulumi.Input<string>;
    /**
     * [int] The total number of instances in the cluster (one master and n-1 standbys). Example: 1, 3, 5, 7. Updates to the value of the field force the cluster to be re-created.
     */
    instances?: pulumi.Input<number>;
    /**
     * [string] The physical location where the cluster will be created. Property cannot be modified after datacenter creation (disallowed in update requests). Available locations: de/txl, gb/lhr, es/vit. Update forces cluster re-creation.
     */
    location?: pulumi.Input<string>;
    /**
     * (Computed) A weekly 4 hour-long window, during which maintenance might occur.  Updates to the value of the field force the cluster to be re-created.
     */
    maintenanceWindow?: pulumi.Input<inputs.dbaas.MongoClusterMaintenanceWindow>;
    /**
     * [string] The MongoDB version of your cluster. Updates to the value of the field force the cluster to be re-created.
     */
    mongodbVersion?: pulumi.Input<string>;
    /**
     * (Computed)[int]The amount of memory per instance in megabytes. Required for enterprise edition.
     */
    ram?: pulumi.Input<number>;
    /**
     * [int]The total number of shards in the cluster.
     */
    shards?: pulumi.Input<number>;
    /**
     * (Computed)[int] The amount of storage per instance in MB. Required for enterprise edition.
     */
    storageSize?: pulumi.Input<number>;
    /**
     * (Computed)[String] The storage type used in your cluster. Required for enterprise edition.
     */
    storageType?: pulumi.Input<string>;
    /**
     * [string] The unique ID of the template, which specifies the number of cores, storage size, and memory. Updates to the value of the field force the cluster to be re-created. Required for playground and business editions. Must not be provided for enterprise edition.
     */
    templateId?: pulumi.Input<string>;
    /**
     * (Computed)[string]The cluster type, either `replicaset` or `sharded-cluster`.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MongoCluster resource.
 */
export interface MongoClusterArgs {
    /**
     * [list]
     */
    backup?: pulumi.Input<inputs.dbaas.MongoClusterBackup>;
    /**
     * (Computed)The MongoDB Connector for Business Intelligence allows you to query a MongoDB database using SQL commands to aid in data analysis.
     */
    biConnector?: pulumi.Input<inputs.dbaas.MongoClusterBiConnector>;
    /**
     * [List] Details about the network connection for your cluster. Updates to the value of the field force the cluster to be re-created.
     */
    connections: pulumi.Input<inputs.dbaas.MongoClusterConnections>;
    /**
     * (Computed)[int] The number of CPU cores per replica. Required for enterprise edition.
     */
    cores?: pulumi.Input<number>;
    /**
     * [string] The name of your cluster. Updates to the value of the field force the cluster to be re-created.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Computed)[string] Cluster edition. Playground, business or enterprise.
     */
    edition?: pulumi.Input<string>;
    /**
     * [int] The total number of instances in the cluster (one master and n-1 standbys). Example: 1, 3, 5, 7. Updates to the value of the field force the cluster to be re-created.
     */
    instances: pulumi.Input<number>;
    /**
     * [string] The physical location where the cluster will be created. Property cannot be modified after datacenter creation (disallowed in update requests). Available locations: de/txl, gb/lhr, es/vit. Update forces cluster re-creation.
     */
    location: pulumi.Input<string>;
    /**
     * (Computed) A weekly 4 hour-long window, during which maintenance might occur.  Updates to the value of the field force the cluster to be re-created.
     */
    maintenanceWindow?: pulumi.Input<inputs.dbaas.MongoClusterMaintenanceWindow>;
    /**
     * [string] The MongoDB version of your cluster. Updates to the value of the field force the cluster to be re-created.
     */
    mongodbVersion: pulumi.Input<string>;
    /**
     * (Computed)[int]The amount of memory per instance in megabytes. Required for enterprise edition.
     */
    ram?: pulumi.Input<number>;
    /**
     * [int]The total number of shards in the cluster.
     */
    shards?: pulumi.Input<number>;
    /**
     * (Computed)[int] The amount of storage per instance in MB. Required for enterprise edition.
     */
    storageSize?: pulumi.Input<number>;
    /**
     * (Computed)[String] The storage type used in your cluster. Required for enterprise edition.
     */
    storageType?: pulumi.Input<string>;
    /**
     * [string] The unique ID of the template, which specifies the number of cores, storage size, and memory. Updates to the value of the field force the cluster to be re-created. Required for playground and business editions. Must not be provided for enterprise edition.
     */
    templateId?: pulumi.Input<string>;
    /**
     * (Computed)[string]The cluster type, either `replicaset` or `sharded-cluster`.
     */
    type?: pulumi.Input<string>;
}
