// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a **DBaaS MariaDB Cluster**.
 *
 * ## Import
 *
 * Resource DBaaS MariaDB Cluster can be imported using the `cluster_id` and the `location`, separated by `:`, e.g.
 *
 * ```sh
 * $ pulumi import ionoscloud:dbaas/mariaDBCluster:MariaDBCluster mycluster location:cluster uuid
 * ```
 */
export class MariaDBCluster extends pulumi.CustomResource {
    /**
     * Get an existing MariaDBCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MariaDBClusterState, opts?: pulumi.CustomResourceOptions): MariaDBCluster {
        return new MariaDBCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ionoscloud:dbaas/mariaDBCluster:MariaDBCluster';

    /**
     * Returns true if the given object is an instance of MariaDBCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MariaDBCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MariaDBCluster.__pulumiType;
    }

    /**
     * The network connection for your cluster. Only one connection is allowed.
     */
    public readonly connections!: pulumi.Output<outputs.dbaas.MariaDBClusterConnections>;
    /**
     * [int] The number of CPU cores per instance.
     */
    public readonly cores!: pulumi.Output<number>;
    /**
     * Credentials for the database user to be created.
     */
    public readonly credentials!: pulumi.Output<outputs.dbaas.MariaDBClusterCredentials>;
    /**
     * [string] The friendly name of your cluster.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * [string] The DNS name pointing to your cluster.
     *
     * > **⚠ WARNING:** `IONOS_API_URL_MARIADB` can be used to set a custom API URL for the MariaDB Cluster. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
     */
    public /*out*/ readonly dnsName!: pulumi.Output<string>;
    /**
     * [int] The total number of instances in the cluster (one primary and n-1 secondary).
     */
    public readonly instances!: pulumi.Output<number>;
    /**
     * [string] The location in which the cluster will be created. Different service endpoints are used based on location, possible options are: "de/fra", "de/txl", "es/vit", "fr/par", "gb/lhr", "us/ewr", "us/las", "us/mci". If not set, the endpoint will be the one corresponding to "de/txl".
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * (Computed) A weekly 4 hour-long window, during which maintenance might occur
     */
    public readonly maintenanceWindow!: pulumi.Output<outputs.dbaas.MariaDBClusterMaintenanceWindow>;
    /**
     * [string] The MariaDB version of your cluster. Cannot be downgraded.
     */
    public readonly mariadbVersion!: pulumi.Output<string>;
    /**
     * [int] The amount of memory per instance in gigabytes (GB).
     */
    public readonly ram!: pulumi.Output<number>;
    /**
     * [int] The amount of storage per instance in gigabytes (GB).
     */
    public readonly storageSize!: pulumi.Output<number>;

    /**
     * Create a MariaDBCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MariaDBClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MariaDBClusterArgs | MariaDBClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MariaDBClusterState | undefined;
            resourceInputs["connections"] = state ? state.connections : undefined;
            resourceInputs["cores"] = state ? state.cores : undefined;
            resourceInputs["credentials"] = state ? state.credentials : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["dnsName"] = state ? state.dnsName : undefined;
            resourceInputs["instances"] = state ? state.instances : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["maintenanceWindow"] = state ? state.maintenanceWindow : undefined;
            resourceInputs["mariadbVersion"] = state ? state.mariadbVersion : undefined;
            resourceInputs["ram"] = state ? state.ram : undefined;
            resourceInputs["storageSize"] = state ? state.storageSize : undefined;
        } else {
            const args = argsOrState as MariaDBClusterArgs | undefined;
            if ((!args || args.connections === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connections'");
            }
            if ((!args || args.cores === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cores'");
            }
            if ((!args || args.credentials === undefined) && !opts.urn) {
                throw new Error("Missing required property 'credentials'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.instances === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instances'");
            }
            if ((!args || args.mariadbVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mariadbVersion'");
            }
            if ((!args || args.ram === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ram'");
            }
            if ((!args || args.storageSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageSize'");
            }
            resourceInputs["connections"] = args ? args.connections : undefined;
            resourceInputs["cores"] = args ? args.cores : undefined;
            resourceInputs["credentials"] = args ? args.credentials : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["instances"] = args ? args.instances : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["maintenanceWindow"] = args ? args.maintenanceWindow : undefined;
            resourceInputs["mariadbVersion"] = args ? args.mariadbVersion : undefined;
            resourceInputs["ram"] = args ? args.ram : undefined;
            resourceInputs["storageSize"] = args ? args.storageSize : undefined;
            resourceInputs["dnsName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MariaDBCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MariaDBCluster resources.
 */
export interface MariaDBClusterState {
    /**
     * The network connection for your cluster. Only one connection is allowed.
     */
    connections?: pulumi.Input<inputs.dbaas.MariaDBClusterConnections>;
    /**
     * [int] The number of CPU cores per instance.
     */
    cores?: pulumi.Input<number>;
    /**
     * Credentials for the database user to be created.
     */
    credentials?: pulumi.Input<inputs.dbaas.MariaDBClusterCredentials>;
    /**
     * [string] The friendly name of your cluster.
     */
    displayName?: pulumi.Input<string>;
    /**
     * [string] The DNS name pointing to your cluster.
     *
     * > **⚠ WARNING:** `IONOS_API_URL_MARIADB` can be used to set a custom API URL for the MariaDB Cluster. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
     */
    dnsName?: pulumi.Input<string>;
    /**
     * [int] The total number of instances in the cluster (one primary and n-1 secondary).
     */
    instances?: pulumi.Input<number>;
    /**
     * [string] The location in which the cluster will be created. Different service endpoints are used based on location, possible options are: "de/fra", "de/txl", "es/vit", "fr/par", "gb/lhr", "us/ewr", "us/las", "us/mci". If not set, the endpoint will be the one corresponding to "de/txl".
     */
    location?: pulumi.Input<string>;
    /**
     * (Computed) A weekly 4 hour-long window, during which maintenance might occur
     */
    maintenanceWindow?: pulumi.Input<inputs.dbaas.MariaDBClusterMaintenanceWindow>;
    /**
     * [string] The MariaDB version of your cluster. Cannot be downgraded.
     */
    mariadbVersion?: pulumi.Input<string>;
    /**
     * [int] The amount of memory per instance in gigabytes (GB).
     */
    ram?: pulumi.Input<number>;
    /**
     * [int] The amount of storage per instance in gigabytes (GB).
     */
    storageSize?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a MariaDBCluster resource.
 */
export interface MariaDBClusterArgs {
    /**
     * The network connection for your cluster. Only one connection is allowed.
     */
    connections: pulumi.Input<inputs.dbaas.MariaDBClusterConnections>;
    /**
     * [int] The number of CPU cores per instance.
     */
    cores: pulumi.Input<number>;
    /**
     * Credentials for the database user to be created.
     */
    credentials: pulumi.Input<inputs.dbaas.MariaDBClusterCredentials>;
    /**
     * [string] The friendly name of your cluster.
     */
    displayName: pulumi.Input<string>;
    /**
     * [int] The total number of instances in the cluster (one primary and n-1 secondary).
     */
    instances: pulumi.Input<number>;
    /**
     * [string] The location in which the cluster will be created. Different service endpoints are used based on location, possible options are: "de/fra", "de/txl", "es/vit", "fr/par", "gb/lhr", "us/ewr", "us/las", "us/mci". If not set, the endpoint will be the one corresponding to "de/txl".
     */
    location?: pulumi.Input<string>;
    /**
     * (Computed) A weekly 4 hour-long window, during which maintenance might occur
     */
    maintenanceWindow?: pulumi.Input<inputs.dbaas.MariaDBClusterMaintenanceWindow>;
    /**
     * [string] The MariaDB version of your cluster. Cannot be downgraded.
     */
    mariadbVersion: pulumi.Input<string>;
    /**
     * [int] The amount of memory per instance in gigabytes (GB).
     */
    ram: pulumi.Input<number>;
    /**
     * [int] The amount of storage per instance in gigabytes (GB).
     */
    storageSize: pulumi.Input<number>;
}
