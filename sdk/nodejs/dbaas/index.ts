// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { InMemoryDBReplicaSetArgs, InMemoryDBReplicaSetState } from "./inMemoryDBReplicaSet";
export type InMemoryDBReplicaSet = import("./inMemoryDBReplicaSet").InMemoryDBReplicaSet;
export const InMemoryDBReplicaSet: typeof import("./inMemoryDBReplicaSet").InMemoryDBReplicaSet = null as any;
utilities.lazyLoad(exports, ["InMemoryDBReplicaSet"], () => require("./inMemoryDBReplicaSet"));

export { MariaDBClusterArgs, MariaDBClusterState } from "./mariaDBCluster";
export type MariaDBCluster = import("./mariaDBCluster").MariaDBCluster;
export const MariaDBCluster: typeof import("./mariaDBCluster").MariaDBCluster = null as any;
utilities.lazyLoad(exports, ["MariaDBCluster"], () => require("./mariaDBCluster"));

export { MongoClusterArgs, MongoClusterState } from "./mongoCluster";
export type MongoCluster = import("./mongoCluster").MongoCluster;
export const MongoCluster: typeof import("./mongoCluster").MongoCluster = null as any;
utilities.lazyLoad(exports, ["MongoCluster"], () => require("./mongoCluster"));

export { MongoUserArgs, MongoUserState } from "./mongoUser";
export type MongoUser = import("./mongoUser").MongoUser;
export const MongoUser: typeof import("./mongoUser").MongoUser = null as any;
utilities.lazyLoad(exports, ["MongoUser"], () => require("./mongoUser"));

export { PSQLClusterArgs, PSQLClusterState } from "./psqlcluster";
export type PSQLCluster = import("./psqlcluster").PSQLCluster;
export const PSQLCluster: typeof import("./psqlcluster").PSQLCluster = null as any;
utilities.lazyLoad(exports, ["PSQLCluster"], () => require("./psqlcluster"));

export { PSQLDatabaseArgs, PSQLDatabaseState } from "./psqldatabase";
export type PSQLDatabase = import("./psqldatabase").PSQLDatabase;
export const PSQLDatabase: typeof import("./psqldatabase").PSQLDatabase = null as any;
utilities.lazyLoad(exports, ["PSQLDatabase"], () => require("./psqldatabase"));

export { PSQLUserArgs, PSQLUserState } from "./psqluser";
export type PSQLUser = import("./psqluser").PSQLUser;
export const PSQLUser: typeof import("./psqluser").PSQLUser = null as any;
utilities.lazyLoad(exports, ["PSQLUser"], () => require("./psqluser"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "ionoscloud:dbaas/inMemoryDBReplicaSet:InMemoryDBReplicaSet":
                return new InMemoryDBReplicaSet(name, <any>undefined, { urn })
            case "ionoscloud:dbaas/mariaDBCluster:MariaDBCluster":
                return new MariaDBCluster(name, <any>undefined, { urn })
            case "ionoscloud:dbaas/mongoCluster:MongoCluster":
                return new MongoCluster(name, <any>undefined, { urn })
            case "ionoscloud:dbaas/mongoUser:MongoUser":
                return new MongoUser(name, <any>undefined, { urn })
            case "ionoscloud:dbaas/pSQLCluster:PSQLCluster":
                return new PSQLCluster(name, <any>undefined, { urn })
            case "ionoscloud:dbaas/pSQLDatabase:PSQLDatabase":
                return new PSQLDatabase(name, <any>undefined, { urn })
            case "ionoscloud:dbaas/pSQLUser:PSQLUser":
                return new PSQLUser(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("ionoscloud", "dbaas/inMemoryDBReplicaSet", _module)
pulumi.runtime.registerResourceModule("ionoscloud", "dbaas/mariaDBCluster", _module)
pulumi.runtime.registerResourceModule("ionoscloud", "dbaas/mongoCluster", _module)
pulumi.runtime.registerResourceModule("ionoscloud", "dbaas/mongoUser", _module)
pulumi.runtime.registerResourceModule("ionoscloud", "dbaas/pSQLCluster", _module)
pulumi.runtime.registerResourceModule("ionoscloud", "dbaas/pSQLDatabase", _module)
pulumi.runtime.registerResourceModule("ionoscloud", "dbaas/pSQLUser", _module)
