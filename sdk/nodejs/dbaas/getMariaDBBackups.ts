// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getMariaDBBackups(args?: GetMariaDBBackupsArgs, opts?: pulumi.InvokeOptions): Promise<GetMariaDBBackupsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:dbaas/getMariaDBBackups:getMariaDBBackups", {
        "backupId": args.backupId,
        "clusterId": args.clusterId,
        "location": args.location,
    }, opts);
}

/**
 * A collection of arguments for invoking getMariaDBBackups.
 */
export interface GetMariaDBBackupsArgs {
    backupId?: string;
    clusterId?: string;
    location?: string;
}

/**
 * A collection of values returned by getMariaDBBackups.
 */
export interface GetMariaDBBackupsResult {
    readonly backupId: string;
    readonly backups: outputs.dbaas.GetMariaDBBackupsBackup[];
    readonly clusterId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location?: string;
}
export function getMariaDBBackupsOutput(args?: GetMariaDBBackupsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMariaDBBackupsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ionoscloud:dbaas/getMariaDBBackups:getMariaDBBackups", {
        "backupId": args.backupId,
        "clusterId": args.clusterId,
        "location": args.location,
    }, opts);
}

/**
 * A collection of arguments for invoking getMariaDBBackups.
 */
export interface GetMariaDBBackupsOutputArgs {
    backupId?: pulumi.Input<string>;
    clusterId?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}
