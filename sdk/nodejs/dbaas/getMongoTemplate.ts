// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The **DbaaS Mongo Template data source** can be used to search for and return an existing DbaaS MongoDB Template.
 * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
 * When this happens, please refine your search string so that it is specific enough to return only one result.
 *
 * ## Example Usage
 *
 * ### By ID
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.dbaas.getMongoTemplate({
 *     id: "template_id",
 * });
 * ```
 * ### By name
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.dbaas.getMongoTemplate({
 *     name: "name",
 * });
 * ```
 *
 * ### By name, using partialMatch
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.dbaas.getMongoTemplate({
 *     name: "name",
 *     partialMatch: true,
 * });
 * ```
 *
 * * `name` - (Optional) The name of the template you want to search for.
 * * `id` - (Optional) ID of the template you want to search for.
 * * `partialMatch` - (Optional) Whether partial matching is allowed or not when using name argument. Default value is false.
 *
 * Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
 */
export function getMongoTemplate(args?: GetMongoTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetMongoTemplateResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:dbaas/getMongoTemplate:getMongoTemplate", {
        "id": args.id,
        "name": args.name,
        "partialMatch": args.partialMatch,
    }, opts);
}

/**
 * A collection of arguments for invoking getMongoTemplate.
 */
export interface GetMongoTemplateArgs {
    /**
     * The ID of the template.
     */
    id?: string;
    /**
     * The name of the template.
     */
    name?: string;
    partialMatch?: boolean;
}

/**
 * A collection of values returned by getMongoTemplate.
 */
export interface GetMongoTemplateResult {
    /**
     * The number of CPU cores.
     */
    readonly cores: number;
    /**
     * The edition of the template (e.g. enterprise).
     */
    readonly edition: string;
    /**
     * The ID of the template.
     */
    readonly id: string;
    /**
     * The name of the template.
     */
    readonly name: string;
    readonly partialMatch?: boolean;
    /**
     * The amount of memory in GB.
     */
    readonly ram: number;
    /**
     * The amount of storage size in GB.
     */
    readonly storageSize: number;
}
/**
 * The **DbaaS Mongo Template data source** can be used to search for and return an existing DbaaS MongoDB Template.
 * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
 * When this happens, please refine your search string so that it is specific enough to return only one result.
 *
 * ## Example Usage
 *
 * ### By ID
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.dbaas.getMongoTemplate({
 *     id: "template_id",
 * });
 * ```
 * ### By name
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.dbaas.getMongoTemplate({
 *     name: "name",
 * });
 * ```
 *
 * ### By name, using partialMatch
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.dbaas.getMongoTemplate({
 *     name: "name",
 *     partialMatch: true,
 * });
 * ```
 *
 * * `name` - (Optional) The name of the template you want to search for.
 * * `id` - (Optional) ID of the template you want to search for.
 * * `partialMatch` - (Optional) Whether partial matching is allowed or not when using name argument. Default value is false.
 *
 * Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
 */
export function getMongoTemplateOutput(args?: GetMongoTemplateOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMongoTemplateResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ionoscloud:dbaas/getMongoTemplate:getMongoTemplate", {
        "id": args.id,
        "name": args.name,
        "partialMatch": args.partialMatch,
    }, opts);
}

/**
 * A collection of arguments for invoking getMongoTemplate.
 */
export interface GetMongoTemplateOutputArgs {
    /**
     * The ID of the template.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the template.
     */
    name?: pulumi.Input<string>;
    partialMatch?: pulumi.Input<boolean>;
}
