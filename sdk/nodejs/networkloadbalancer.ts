// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a **Network Load Balancer**  on IonosCloud.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const exampleDatacenter = new ionoscloud.compute.Datacenter("exampleDatacenter", {
 *     location: "us/las",
 *     description: "Datacenter Description",
 *     secAuthProtection: false,
 * });
 * const example1 = new ionoscloud.compute.Lan("example1", {
 *     datacenterId: exampleDatacenter.id,
 *     "public": false,
 * });
 * const example2 = new ionoscloud.compute.Lan("example2", {
 *     datacenterId: exampleDatacenter.id,
 *     "public": false,
 * });
 * const exampleNetworkloadbalancer = new ionoscloud.Networkloadbalancer("exampleNetworkloadbalancer", {
 *     datacenterId: exampleDatacenter.id,
 *     listenerLan: example1.id,
 *     targetLan: example2.id,
 *     ips: ["10.12.118.224"],
 *     lbPrivateIps: ["10.13.72.225/24"],
 *     centralLogging: true,
 *     loggingFormat: "%{+Q}o %{-Q}ci - - [%trg] %r %ST %B \"\" \"\" %cp %ms %ft %b %s %TR %Tw %Tc %Tr %Ta %tsc %ac %fc %bc %sc %rc %sq %bq %CC %CS %hrl %hsl",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Example configuring Flowlog
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = new ionoscloud.Networkloadbalancer("example", {
 *     datacenterId: ionoscloud_datacenter.example.id,
 *     listenerLan: ionoscloud_lan.example1.id,
 *     targetLan: ionoscloud_lan.example2.id,
 *     ips: ["10.12.118.224"],
 *     lbPrivateIps: ["10.13.72.225/24"],
 *     flowlog: {
 *         action: "ALL",
 *         bucket: "flowlog-bucket",
 *         direction: "INGRESS",
 *         name: "flowlog",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * This will configure flowlog for ALL(rejected and accepted) ingress traffic and will log it into an existing ionos bucket named `flowlog-bucket`. Any s3 compatible client can be used to create it. Adding a flowlog does not force re-creation or the nic, but changing any other field than
 * `name` will. Deleting a flowlog will also force nic re-creation.
 *
 * ## Import
 *
 * A Network Load Balancer resource can be imported using its `resource id` and the `datacenter id` e.g.
 *
 * ```sh
 * $ pulumi import ionoscloud:index/networkloadbalancer:Networkloadbalancer my_networkloadbalancer {datacenter uuid}/{networkloadbalancer uuid}
 * ```
 */
export class Networkloadbalancer extends pulumi.CustomResource {
    /**
     * Get an existing Networkloadbalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkloadbalancerState, opts?: pulumi.CustomResourceOptions): Networkloadbalancer {
        return new Networkloadbalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ionoscloud:index/networkloadbalancer:Networkloadbalancer';

    /**
     * Returns true if the given object is an instance of Networkloadbalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Networkloadbalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Networkloadbalancer.__pulumiType;
    }

    /**
     * [bool] Turn logging on and off for this product. Default value is 'false'.
     */
    public readonly centralLogging!: pulumi.Output<boolean | undefined>;
    /**
     * [string] A Datacenter's UUID.
     */
    public readonly datacenterId!: pulumi.Output<string>;
    /**
     * [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
     */
    public readonly flowlog!: pulumi.Output<outputs.NetworkloadbalancerFlowlog | undefined>;
    /**
     * [list] Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer reserved IP for the public load balancer and private IP for the private load balancer.
     */
    public readonly ips!: pulumi.Output<string[] | undefined>;
    /**
     * [list] Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If user will not provide any IP then the system will generate one IP with /24 subnet.
     */
    public readonly lbPrivateIps!: pulumi.Output<string[]>;
    /**
     * [int] Id of the listening LAN. (inbound)
     */
    public readonly listenerLan!: pulumi.Output<number>;
    /**
     * Specifies the format of the logs.
     */
    public readonly loggingFormat!: pulumi.Output<string | undefined>;
    /**
     * [string] Specifies the name of the flow log.
     *
     * ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the network load balancer resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * [int] Id of the balanced private target LAN. (outbound)
     */
    public readonly targetLan!: pulumi.Output<number>;

    /**
     * Create a Networkloadbalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkloadbalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkloadbalancerArgs | NetworkloadbalancerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkloadbalancerState | undefined;
            resourceInputs["centralLogging"] = state ? state.centralLogging : undefined;
            resourceInputs["datacenterId"] = state ? state.datacenterId : undefined;
            resourceInputs["flowlog"] = state ? state.flowlog : undefined;
            resourceInputs["ips"] = state ? state.ips : undefined;
            resourceInputs["lbPrivateIps"] = state ? state.lbPrivateIps : undefined;
            resourceInputs["listenerLan"] = state ? state.listenerLan : undefined;
            resourceInputs["loggingFormat"] = state ? state.loggingFormat : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["targetLan"] = state ? state.targetLan : undefined;
        } else {
            const args = argsOrState as NetworkloadbalancerArgs | undefined;
            if ((!args || args.datacenterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datacenterId'");
            }
            if ((!args || args.listenerLan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listenerLan'");
            }
            if ((!args || args.targetLan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetLan'");
            }
            resourceInputs["centralLogging"] = args ? args.centralLogging : undefined;
            resourceInputs["datacenterId"] = args ? args.datacenterId : undefined;
            resourceInputs["flowlog"] = args ? args.flowlog : undefined;
            resourceInputs["ips"] = args ? args.ips : undefined;
            resourceInputs["lbPrivateIps"] = args ? args.lbPrivateIps : undefined;
            resourceInputs["listenerLan"] = args ? args.listenerLan : undefined;
            resourceInputs["loggingFormat"] = args ? args.loggingFormat : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["targetLan"] = args ? args.targetLan : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Networkloadbalancer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Networkloadbalancer resources.
 */
export interface NetworkloadbalancerState {
    /**
     * [bool] Turn logging on and off for this product. Default value is 'false'.
     */
    centralLogging?: pulumi.Input<boolean>;
    /**
     * [string] A Datacenter's UUID.
     */
    datacenterId?: pulumi.Input<string>;
    /**
     * [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
     */
    flowlog?: pulumi.Input<inputs.NetworkloadbalancerFlowlog>;
    /**
     * [list] Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer reserved IP for the public load balancer and private IP for the private load balancer.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * [list] Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If user will not provide any IP then the system will generate one IP with /24 subnet.
     */
    lbPrivateIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * [int] Id of the listening LAN. (inbound)
     */
    listenerLan?: pulumi.Input<number>;
    /**
     * Specifies the format of the logs.
     */
    loggingFormat?: pulumi.Input<string>;
    /**
     * [string] Specifies the name of the flow log.
     *
     * ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the network load balancer resource.
     */
    name?: pulumi.Input<string>;
    /**
     * [int] Id of the balanced private target LAN. (outbound)
     */
    targetLan?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Networkloadbalancer resource.
 */
export interface NetworkloadbalancerArgs {
    /**
     * [bool] Turn logging on and off for this product. Default value is 'false'.
     */
    centralLogging?: pulumi.Input<boolean>;
    /**
     * [string] A Datacenter's UUID.
     */
    datacenterId: pulumi.Input<string>;
    /**
     * [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
     */
    flowlog?: pulumi.Input<inputs.NetworkloadbalancerFlowlog>;
    /**
     * [list] Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer reserved IP for the public load balancer and private IP for the private load balancer.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * [list] Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If user will not provide any IP then the system will generate one IP with /24 subnet.
     */
    lbPrivateIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * [int] Id of the listening LAN. (inbound)
     */
    listenerLan: pulumi.Input<number>;
    /**
     * Specifies the format of the logs.
     */
    loggingFormat?: pulumi.Input<string>;
    /**
     * [string] Specifies the name of the flow log.
     *
     * ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the network load balancer resource.
     */
    name?: pulumi.Input<string>;
    /**
     * [int] Id of the balanced private target LAN. (outbound)
     */
    targetLan: pulumi.Input<number>;
}
