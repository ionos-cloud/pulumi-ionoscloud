// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages **public acccess for Buckets** on IonosCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = new ionoscloud.objectstorage.PublicAccessBlock("example", {
 *     bucket: exampleIonoscloudS3Bucket.name,
 *     ignorePublicAcls: true,
 *     restrictPublicBuckets: true,
 *     blockPublicPolicy: false,
 *     blockPublicAcls: false,
 * });
 * ```
 *
 * ## Import
 *
 * Resource Bucket access block can be imported using the `bucket name`
 *
 * ```sh
 * $ pulumi import ionoscloud:objectstorage/publicAccessBlock:PublicAccessBlock example example
 * ```
 */
export class PublicAccessBlock extends pulumi.CustomResource {
    /**
     * Get an existing PublicAccessBlock resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PublicAccessBlockState, opts?: pulumi.CustomResourceOptions): PublicAccessBlock {
        return new PublicAccessBlock(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ionoscloud:objectstorage/publicAccessBlock:PublicAccessBlock';

    /**
     * Returns true if the given object is an instance of PublicAccessBlock.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PublicAccessBlock {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PublicAccessBlock.__pulumiType;
    }

    /**
     * [bool] Indicates that access to the bucket via Access Control Lists (ACLs) that grant public access is blocked. In other words, ACLs that allow public access are not permitted.
     */
    public readonly blockPublicAcls!: pulumi.Output<boolean>;
    /**
     * [bool] Blocks public access to the bucket via bucket policies. Bucket policies that grant public access will not be allowed.
     */
    public readonly blockPublicPolicy!: pulumi.Output<boolean>;
    /**
     * [string] The name of the bucket where the object will be stored.
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * [bool] Instructs the system to ignore any ACLs that grant public access. Even if ACLs are set to allow public access, they will be disregarded.
     */
    public readonly ignorePublicAcls!: pulumi.Output<boolean>;
    /**
     * [bool] Restricts access to buckets that have public policies. Buckets with policies that grant public access will have their access restricted.
     */
    public readonly restrictPublicBuckets!: pulumi.Output<boolean>;

    /**
     * Create a PublicAccessBlock resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PublicAccessBlockArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PublicAccessBlockArgs | PublicAccessBlockState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PublicAccessBlockState | undefined;
            resourceInputs["blockPublicAcls"] = state ? state.blockPublicAcls : undefined;
            resourceInputs["blockPublicPolicy"] = state ? state.blockPublicPolicy : undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["ignorePublicAcls"] = state ? state.ignorePublicAcls : undefined;
            resourceInputs["restrictPublicBuckets"] = state ? state.restrictPublicBuckets : undefined;
        } else {
            const args = argsOrState as PublicAccessBlockArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            resourceInputs["blockPublicAcls"] = args ? args.blockPublicAcls : undefined;
            resourceInputs["blockPublicPolicy"] = args ? args.blockPublicPolicy : undefined;
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["ignorePublicAcls"] = args ? args.ignorePublicAcls : undefined;
            resourceInputs["restrictPublicBuckets"] = args ? args.restrictPublicBuckets : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PublicAccessBlock.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PublicAccessBlock resources.
 */
export interface PublicAccessBlockState {
    /**
     * [bool] Indicates that access to the bucket via Access Control Lists (ACLs) that grant public access is blocked. In other words, ACLs that allow public access are not permitted.
     */
    blockPublicAcls?: pulumi.Input<boolean>;
    /**
     * [bool] Blocks public access to the bucket via bucket policies. Bucket policies that grant public access will not be allowed.
     */
    blockPublicPolicy?: pulumi.Input<boolean>;
    /**
     * [string] The name of the bucket where the object will be stored.
     */
    bucket?: pulumi.Input<string>;
    /**
     * [bool] Instructs the system to ignore any ACLs that grant public access. Even if ACLs are set to allow public access, they will be disregarded.
     */
    ignorePublicAcls?: pulumi.Input<boolean>;
    /**
     * [bool] Restricts access to buckets that have public policies. Buckets with policies that grant public access will have their access restricted.
     */
    restrictPublicBuckets?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a PublicAccessBlock resource.
 */
export interface PublicAccessBlockArgs {
    /**
     * [bool] Indicates that access to the bucket via Access Control Lists (ACLs) that grant public access is blocked. In other words, ACLs that allow public access are not permitted.
     */
    blockPublicAcls?: pulumi.Input<boolean>;
    /**
     * [bool] Blocks public access to the bucket via bucket policies. Bucket policies that grant public access will not be allowed.
     */
    blockPublicPolicy?: pulumi.Input<boolean>;
    /**
     * [string] The name of the bucket where the object will be stored.
     */
    bucket: pulumi.Input<string>;
    /**
     * [bool] Instructs the system to ignore any ACLs that grant public access. Even if ACLs are set to allow public access, they will be disregarded.
     */
    ignorePublicAcls?: pulumi.Input<boolean>;
    /**
     * [bool] Restricts access to buckets that have public policies. Buckets with policies that grant public access will have their access restricted.
     */
    restrictPublicBuckets?: pulumi.Input<boolean>;
}
