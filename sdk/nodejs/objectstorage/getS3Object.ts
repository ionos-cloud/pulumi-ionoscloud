// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The **Object data source** can be used to search for and return existing objects.
 * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
 * When this happens, please refine your search string so that it is specific enough to return only one result.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.objectstorage.getS3Object({
 *     bucket: "example",
 *     key: "object",
 * });
 * ```
 */
export function getS3Object(args: GetS3ObjectArgs, opts?: pulumi.InvokeOptions): Promise<GetS3ObjectResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:objectstorage/getS3Object:getS3Object", {
        "bucket": args.bucket,
        "key": args.key,
        "range": args.range,
        "versionId": args.versionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getS3Object.
 */
export interface GetS3ObjectArgs {
    /**
     * [string] The name of the bucket where the object is stored.
     */
    bucket: string;
    /**
     * [string] The name of the object.
     */
    key: string;
    /**
     * [string] Downloads the specified range bytes of an object. For more information about the HTTP Range header
     */
    range?: string;
    /**
     * [string] The version of the object.
     */
    versionId?: string;
}

/**
 * A collection of values returned by getS3Object.
 */
export interface GetS3ObjectResult {
    /**
     * The content of the object.
     */
    readonly body: string;
    readonly bucket: string;
    /**
     * The caching behavior along the request/reply chain.
     */
    readonly cacheControl: string;
    /**
     * Presentational information for the object.
     */
    readonly contentDisposition: string;
    /**
     * The content encodings applied to the object.
     */
    readonly contentEncoding: string;
    /**
     * The natural language of the intended audience for the object.
     */
    readonly contentLanguage: string;
    /**
     * The size of the object in bytes.
     */
    readonly contentLength: number;
    /**
     * The MIME type describing the format of the contents.
     */
    readonly contentType: string;
    /**
     * An entity tag (ETag) assigned by a web server to a specific version of a resource.
     */
    readonly etag: string;
    /**
     * The date and time at which the object is no longer cacheable.
     */
    readonly expires: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly key: string;
    /**
     * A map of metadata stored with the object.
     */
    readonly metadata: {[key: string]: string};
    /**
     * The legal hold status of the object, which can be either ON or OFF.
     */
    readonly objectLockLegalHold: string;
    /**
     * The object lock mode, which can be either GOVERNANCE or COMPLIANCE.
     */
    readonly objectLockMode: string;
    /**
     * The date until which the object will remain locked.
     */
    readonly objectLockRetainUntilDate: string;
    readonly range?: string;
    /**
     * Confirms that the requester knows that they will be charged for the request.
     */
    readonly requestPayer: string;
    /**
     * The server-side encryption algorithm used when storing this object.
     */
    readonly serverSideEncryption: string;
    /**
     * The encryption context to use for object encryption. This attribute is sensitive.
     */
    readonly serverSideEncryptionContext: string;
    /**
     * The algorithm to use for encrypting the object (e.g., AES256).
     */
    readonly serverSideEncryptionCustomerAlgorithm: string;
    /**
     * The 256-bit, base64-encoded encryption key to encrypt and decrypt your data. This attribute is sensitive.
     */
    readonly serverSideEncryptionCustomerKey: string;
    /**
     * The 128-bit MD5 digest of the encryption key.
     */
    readonly serverSideEncryptionCustomerKeyMd5: string;
    /**
     * The storage class of the object.
     */
    readonly storageClass: string;
    /**
     * The tag-set for the object, represented as a map of string key-value pairs.
     */
    readonly tags: {[key: string]: string};
    /**
     * The version of the object. This attribute is optional.
     */
    readonly versionId: string;
    /**
     * If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL.
     */
    readonly websiteRedirect: string;
}
/**
 * The **Object data source** can be used to search for and return existing objects.
 * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
 * When this happens, please refine your search string so that it is specific enough to return only one result.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.objectstorage.getS3Object({
 *     bucket: "example",
 *     key: "object",
 * });
 * ```
 */
export function getS3ObjectOutput(args: GetS3ObjectOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetS3ObjectResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ionoscloud:objectstorage/getS3Object:getS3Object", {
        "bucket": args.bucket,
        "key": args.key,
        "range": args.range,
        "versionId": args.versionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getS3Object.
 */
export interface GetS3ObjectOutputArgs {
    /**
     * [string] The name of the bucket where the object is stored.
     */
    bucket: pulumi.Input<string>;
    /**
     * [string] The name of the object.
     */
    key: pulumi.Input<string>;
    /**
     * [string] Downloads the specified range bytes of an object. For more information about the HTTP Range header
     */
    range?: pulumi.Input<string>;
    /**
     * [string] The version of the object.
     */
    versionId?: pulumi.Input<string>;
}
