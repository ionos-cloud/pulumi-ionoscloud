// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages **IONOS Object Storage Buckets** on IonosCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = new ionoscloud.objectstorage.Bucket("example", {
 *     name: "example",
 *     region: "eu-central-3",
 *     objectLockEnabled: true,
 *     forceDestroy: true,
 *     tags: {
 *         key1: "value1",
 *         key2: "value2",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Resource Bucket can be imported using the `bucket name`
 *
 * ```sh
 * $ pulumi import ionoscloud:objectstorage/bucket:Bucket example example
 * ```
 */
export class Bucket extends pulumi.CustomResource {
    /**
     * Get an existing Bucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BucketState, opts?: pulumi.CustomResourceOptions): Bucket {
        return new Bucket(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ionoscloud:objectstorage/bucket:Bucket';

    /**
     * Returns true if the given object is an instance of Bucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bucket.__pulumiType;
    }

    /**
     * Whether all objects should be deleted from the bucket so that the bucket can be destroyed
     */
    public readonly forceDestroy!: pulumi.Output<boolean>;
    /**
     * [string] The bucket name. [ 3 .. 63 ] characters
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * [bool] The object lock configuration status of the bucket. Must be `true` or `false`.
     */
    public readonly objectLockEnabled!: pulumi.Output<boolean>;
    /**
     * [string] Specifies the Region where the bucket will be created. Please refer to the list of available regions
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the bucket.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Timeouts for this resource.
     */
    public readonly timeouts!: pulumi.Output<outputs.objectstorage.BucketTimeouts | undefined>;

    /**
     * Create a Bucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BucketArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BucketArgs | BucketState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BucketState | undefined;
            resourceInputs["forceDestroy"] = state ? state.forceDestroy : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectLockEnabled"] = state ? state.objectLockEnabled : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as BucketArgs | undefined;
            resourceInputs["forceDestroy"] = args ? args.forceDestroy : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectLockEnabled"] = args ? args.objectLockEnabled : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bucket.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Bucket resources.
 */
export interface BucketState {
    /**
     * Whether all objects should be deleted from the bucket so that the bucket can be destroyed
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * [string] The bucket name. [ 3 .. 63 ] characters
     */
    name?: pulumi.Input<string>;
    /**
     * [bool] The object lock configuration status of the bucket. Must be `true` or `false`.
     */
    objectLockEnabled?: pulumi.Input<boolean>;
    /**
     * [string] Specifies the Region where the bucket will be created. Please refer to the list of available regions
     */
    region?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the bucket.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Timeouts for this resource.
     */
    timeouts?: pulumi.Input<inputs.objectstorage.BucketTimeouts>;
}

/**
 * The set of arguments for constructing a Bucket resource.
 */
export interface BucketArgs {
    /**
     * Whether all objects should be deleted from the bucket so that the bucket can be destroyed
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * [string] The bucket name. [ 3 .. 63 ] characters
     */
    name?: pulumi.Input<string>;
    /**
     * [bool] The object lock configuration status of the bucket. Must be `true` or `false`.
     */
    objectLockEnabled?: pulumi.Input<boolean>;
    /**
     * [string] Specifies the Region where the bucket will be created. Please refer to the list of available regions
     */
    region?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the bucket.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Timeouts for this resource.
     */
    timeouts?: pulumi.Input<inputs.objectstorage.BucketTimeouts>;
}
