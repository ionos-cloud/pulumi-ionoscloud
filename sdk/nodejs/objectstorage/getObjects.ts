// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The **Objects data source** can be used to search for and return existing objects.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.objectstorage.getObjects({
 *     bucket: "example",
 *     prefix: "prefix1/",
 *     delimiter: "/",
 *     maxKeys: 100,
 *     fetchOwner: true,
 * });
 * ```
 */
export function getObjects(args: GetObjectsArgs, opts?: pulumi.InvokeOptions): Promise<GetObjectsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:objectstorage/getObjects:getObjects", {
        "bucket": args.bucket,
        "delimiter": args.delimiter,
        "encodingType": args.encodingType,
        "fetchOwner": args.fetchOwner,
        "maxKeys": args.maxKeys,
        "prefix": args.prefix,
        "startAfter": args.startAfter,
    }, opts);
}

/**
 * A collection of arguments for invoking getObjects.
 */
export interface GetObjectsArgs {
    /**
     * [string] The name of the bucket where the objects are stored.
     */
    bucket: string;
    /**
     * [string] A character used to group keys.
     */
    delimiter?: string;
    /**
     * [string] Specifies the encoding method used to encode the object keys in the response. Default is url.
     */
    encodingType?: string;
    /**
     * [bool] If set to true, the response includes the owner field in the metadata.
     */
    fetchOwner?: boolean;
    /**
     * [int] Sets the maximum number of keys returned in the response body.Default is 1000.
     */
    maxKeys?: number;
    /**
     * [string] Limits the response to keys that begin with the specified prefix.
     */
    prefix?: string;
    /**
     * [string] Specifies the key to start after when listing objects in a bucket.
     */
    startAfter?: string;
}

/**
 * A collection of values returned by getObjects.
 */
export interface GetObjectsResult {
    readonly bucket: string;
    /**
     * A list of keys that act as a delimiter for grouping keys.
     */
    readonly commonPrefixes: string[];
    readonly delimiter?: string;
    readonly encodingType?: string;
    readonly fetchOwner?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of objects in the bucket.
     */
    readonly keys: string[];
    readonly maxKeys?: number;
    readonly owners: string[];
    readonly prefix?: string;
    readonly startAfter?: string;
}
/**
 * The **Objects data source** can be used to search for and return existing objects.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.objectstorage.getObjects({
 *     bucket: "example",
 *     prefix: "prefix1/",
 *     delimiter: "/",
 *     maxKeys: 100,
 *     fetchOwner: true,
 * });
 * ```
 */
export function getObjectsOutput(args: GetObjectsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetObjectsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ionoscloud:objectstorage/getObjects:getObjects", {
        "bucket": args.bucket,
        "delimiter": args.delimiter,
        "encodingType": args.encodingType,
        "fetchOwner": args.fetchOwner,
        "maxKeys": args.maxKeys,
        "prefix": args.prefix,
        "startAfter": args.startAfter,
    }, opts);
}

/**
 * A collection of arguments for invoking getObjects.
 */
export interface GetObjectsOutputArgs {
    /**
     * [string] The name of the bucket where the objects are stored.
     */
    bucket: pulumi.Input<string>;
    /**
     * [string] A character used to group keys.
     */
    delimiter?: pulumi.Input<string>;
    /**
     * [string] Specifies the encoding method used to encode the object keys in the response. Default is url.
     */
    encodingType?: pulumi.Input<string>;
    /**
     * [bool] If set to true, the response includes the owner field in the metadata.
     */
    fetchOwner?: pulumi.Input<boolean>;
    /**
     * [int] Sets the maximum number of keys returned in the response body.Default is 1000.
     */
    maxKeys?: pulumi.Input<number>;
    /**
     * [string] Limits the response to keys that begin with the specified prefix.
     */
    prefix?: pulumi.Input<string>;
    /**
     * [string] Specifies the key to start after when listing objects in a bucket.
     */
    startAfter?: pulumi.Input<string>;
}
