// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Creates a copy of an object that is already stored in IONOS Object Storage.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const source = new ionoscloud.objectstorage.Bucket("source", {name: "source"});
 * const target = new ionoscloud.objectstorage.Bucket("target", {name: "target"});
 * const sourceBucketObject = new ionoscloud.objectstorage.BucketObject("source", {
 *     bucket: source.name,
 *     key: "source_object",
 *     content: "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
 *     contentType: "application/octet-stream",
 * });
 * const example = new ionoscloud.objectstorage.ObjectCopy("example", {
 *     bucket: target.name,
 *     key: "example",
 *     source: pulumi.interpolate`${source.name}/${sourceBucketObject.key}`,
 * });
 * ```
 */
export class ObjectCopy extends pulumi.CustomResource {
    /**
     * Get an existing ObjectCopy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectCopyState, opts?: pulumi.CustomResourceOptions): ObjectCopy {
        return new ObjectCopy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ionoscloud:objectstorage/objectCopy:ObjectCopy';

    /**
     * Returns true if the given object is an instance of ObjectCopy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectCopy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectCopy.__pulumiType;
    }

    /**
     * [string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * [string] Specifies caching behavior along the request/reply chain.
     */
    public readonly cacheControl!: pulumi.Output<string | undefined>;
    /**
     * [string] Specifies presentational information for the object.
     */
    public readonly contentDisposition!: pulumi.Output<string | undefined>;
    /**
     * [string] Specifies what content encodings have been applied to the object.
     */
    public readonly contentEncoding!: pulumi.Output<string | undefined>;
    /**
     * [string] The natural language or languages of the intended audience for the object.
     */
    public readonly contentLanguage!: pulumi.Output<string | undefined>;
    /**
     * [string] A standard MIME type describing the format of the contents.
     */
    public readonly contentType!: pulumi.Output<string>;
    /**
     * Copies the object if its entity tag (ETag) matches the specified tag
     */
    public readonly copyIfMatch!: pulumi.Output<string | undefined>;
    /**
     * Copies the object if it has been modified since the specified time
     */
    public readonly copyIfModifiedSince!: pulumi.Output<string | undefined>;
    /**
     * Copies the object if its entity tag (ETag) is different than the specified ETag
     */
    public readonly copyIfNoneMatch!: pulumi.Output<string | undefined>;
    /**
     * Copies the object if it hasn't been modified since the specified time
     */
    public readonly copyIfUnmodifiedSince!: pulumi.Output<string | undefined>;
    /**
     * [string] An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * [string] The date and time at which the object is no longer cacheable.
     */
    public readonly expires!: pulumi.Output<string | undefined>;
    /**
     * [bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.
     */
    public readonly forceDestroy!: pulumi.Output<boolean>;
    /**
     * [string] The key of the object. Must be at least 1 character long.
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * [string] The date and time at which the object was last modified.
     */
    public /*out*/ readonly lastModified!: pulumi.Output<string>;
    /**
     * [map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.
     */
    public readonly metadata!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * [string] Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.
     */
    public readonly metadataDirective!: pulumi.Output<string | undefined>;
    /**
     * [string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.
     */
    public readonly objectLockLegalHold!: pulumi.Output<string | undefined>;
    /**
     * [string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
     */
    public readonly objectLockMode!: pulumi.Output<string | undefined>;
    /**
     * [string] The date and time when the object lock retention expires.Must be in RFC3999 format
     */
    public readonly objectLockRetainUntilDate!: pulumi.Output<string | undefined>;
    /**
     * [string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.
     */
    public readonly serverSideEncryption!: pulumi.Output<string | undefined>;
    /**
     * [string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.
     */
    public readonly serverSideEncryptionCustomerAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * [string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.
     */
    public readonly serverSideEncryptionCustomerKey!: pulumi.Output<string | undefined>;
    /**
     * [string] Specifies the 128-bit MD5 digest of the encryption key.
     */
    public readonly serverSideEncryptionCustomerKeyMd5!: pulumi.Output<string | undefined>;
    /**
     * [string] The source of the object to be copied
     */
    public readonly source!: pulumi.Output<string>;
    /**
     * [string] Specifies the algorithm used for source object encryption. Valid value is AES256.
     */
    public readonly sourceCustomerAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * [string] Specifies the 256-bit, base64-encoded encryption key for source object encryption.
     */
    public readonly sourceCustomerKey!: pulumi.Output<string | undefined>;
    /**
     * [string] Specifies the 128-bit MD5 digest of the encryption key for source object encryption.
     */
    public readonly sourceCustomerKeyMd5!: pulumi.Output<string | undefined>;
    /**
     * [string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.
     */
    public readonly storageClass!: pulumi.Output<string>;
    /**
     * [string] Specifies whether the object tag-set is copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.
     */
    public readonly taggingDirective!: pulumi.Output<string | undefined>;
    /**
     * [map] The tag-set for the object.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * [string] The version of the object.
     */
    public /*out*/ readonly versionId!: pulumi.Output<string>;
    /**
     * [string] Redirects requests for this object to another object in the same bucket or to an external URL.
     */
    public readonly websiteRedirect!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectCopy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectCopyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectCopyArgs | ObjectCopyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectCopyState | undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["cacheControl"] = state ? state.cacheControl : undefined;
            resourceInputs["contentDisposition"] = state ? state.contentDisposition : undefined;
            resourceInputs["contentEncoding"] = state ? state.contentEncoding : undefined;
            resourceInputs["contentLanguage"] = state ? state.contentLanguage : undefined;
            resourceInputs["contentType"] = state ? state.contentType : undefined;
            resourceInputs["copyIfMatch"] = state ? state.copyIfMatch : undefined;
            resourceInputs["copyIfModifiedSince"] = state ? state.copyIfModifiedSince : undefined;
            resourceInputs["copyIfNoneMatch"] = state ? state.copyIfNoneMatch : undefined;
            resourceInputs["copyIfUnmodifiedSince"] = state ? state.copyIfUnmodifiedSince : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["expires"] = state ? state.expires : undefined;
            resourceInputs["forceDestroy"] = state ? state.forceDestroy : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["lastModified"] = state ? state.lastModified : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["metadataDirective"] = state ? state.metadataDirective : undefined;
            resourceInputs["objectLockLegalHold"] = state ? state.objectLockLegalHold : undefined;
            resourceInputs["objectLockMode"] = state ? state.objectLockMode : undefined;
            resourceInputs["objectLockRetainUntilDate"] = state ? state.objectLockRetainUntilDate : undefined;
            resourceInputs["serverSideEncryption"] = state ? state.serverSideEncryption : undefined;
            resourceInputs["serverSideEncryptionCustomerAlgorithm"] = state ? state.serverSideEncryptionCustomerAlgorithm : undefined;
            resourceInputs["serverSideEncryptionCustomerKey"] = state ? state.serverSideEncryptionCustomerKey : undefined;
            resourceInputs["serverSideEncryptionCustomerKeyMd5"] = state ? state.serverSideEncryptionCustomerKeyMd5 : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["sourceCustomerAlgorithm"] = state ? state.sourceCustomerAlgorithm : undefined;
            resourceInputs["sourceCustomerKey"] = state ? state.sourceCustomerKey : undefined;
            resourceInputs["sourceCustomerKeyMd5"] = state ? state.sourceCustomerKeyMd5 : undefined;
            resourceInputs["storageClass"] = state ? state.storageClass : undefined;
            resourceInputs["taggingDirective"] = state ? state.taggingDirective : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
            resourceInputs["websiteRedirect"] = state ? state.websiteRedirect : undefined;
        } else {
            const args = argsOrState as ObjectCopyArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["cacheControl"] = args ? args.cacheControl : undefined;
            resourceInputs["contentDisposition"] = args ? args.contentDisposition : undefined;
            resourceInputs["contentEncoding"] = args ? args.contentEncoding : undefined;
            resourceInputs["contentLanguage"] = args ? args.contentLanguage : undefined;
            resourceInputs["contentType"] = args ? args.contentType : undefined;
            resourceInputs["copyIfMatch"] = args ? args.copyIfMatch : undefined;
            resourceInputs["copyIfModifiedSince"] = args ? args.copyIfModifiedSince : undefined;
            resourceInputs["copyIfNoneMatch"] = args ? args.copyIfNoneMatch : undefined;
            resourceInputs["copyIfUnmodifiedSince"] = args ? args.copyIfUnmodifiedSince : undefined;
            resourceInputs["expires"] = args ? args.expires : undefined;
            resourceInputs["forceDestroy"] = args ? args.forceDestroy : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["metadataDirective"] = args ? args.metadataDirective : undefined;
            resourceInputs["objectLockLegalHold"] = args ? args.objectLockLegalHold : undefined;
            resourceInputs["objectLockMode"] = args ? args.objectLockMode : undefined;
            resourceInputs["objectLockRetainUntilDate"] = args ? args.objectLockRetainUntilDate : undefined;
            resourceInputs["serverSideEncryption"] = args ? args.serverSideEncryption : undefined;
            resourceInputs["serverSideEncryptionCustomerAlgorithm"] = args ? args.serverSideEncryptionCustomerAlgorithm : undefined;
            resourceInputs["serverSideEncryptionCustomerKey"] = args ? args.serverSideEncryptionCustomerKey : undefined;
            resourceInputs["serverSideEncryptionCustomerKeyMd5"] = args ? args.serverSideEncryptionCustomerKeyMd5 : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["sourceCustomerAlgorithm"] = args ? args.sourceCustomerAlgorithm : undefined;
            resourceInputs["sourceCustomerKey"] = args ? args.sourceCustomerKey : undefined;
            resourceInputs["sourceCustomerKeyMd5"] = args ? args.sourceCustomerKeyMd5 : undefined;
            resourceInputs["storageClass"] = args ? args.storageClass : undefined;
            resourceInputs["taggingDirective"] = args ? args.taggingDirective : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["websiteRedirect"] = args ? args.websiteRedirect : undefined;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["lastModified"] = undefined /*out*/;
            resourceInputs["versionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectCopy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ObjectCopy resources.
 */
export interface ObjectCopyState {
    /**
     * [string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.
     */
    bucket?: pulumi.Input<string>;
    /**
     * [string] Specifies caching behavior along the request/reply chain.
     */
    cacheControl?: pulumi.Input<string>;
    /**
     * [string] Specifies presentational information for the object.
     */
    contentDisposition?: pulumi.Input<string>;
    /**
     * [string] Specifies what content encodings have been applied to the object.
     */
    contentEncoding?: pulumi.Input<string>;
    /**
     * [string] The natural language or languages of the intended audience for the object.
     */
    contentLanguage?: pulumi.Input<string>;
    /**
     * [string] A standard MIME type describing the format of the contents.
     */
    contentType?: pulumi.Input<string>;
    /**
     * Copies the object if its entity tag (ETag) matches the specified tag
     */
    copyIfMatch?: pulumi.Input<string>;
    /**
     * Copies the object if it has been modified since the specified time
     */
    copyIfModifiedSince?: pulumi.Input<string>;
    /**
     * Copies the object if its entity tag (ETag) is different than the specified ETag
     */
    copyIfNoneMatch?: pulumi.Input<string>;
    /**
     * Copies the object if it hasn't been modified since the specified time
     */
    copyIfUnmodifiedSince?: pulumi.Input<string>;
    /**
     * [string] An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.
     */
    etag?: pulumi.Input<string>;
    /**
     * [string] The date and time at which the object is no longer cacheable.
     */
    expires?: pulumi.Input<string>;
    /**
     * [bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * [string] The key of the object. Must be at least 1 character long.
     */
    key?: pulumi.Input<string>;
    /**
     * [string] The date and time at which the object was last modified.
     */
    lastModified?: pulumi.Input<string>;
    /**
     * [map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * [string] Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.
     */
    metadataDirective?: pulumi.Input<string>;
    /**
     * [string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.
     */
    objectLockLegalHold?: pulumi.Input<string>;
    /**
     * [string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
     */
    objectLockMode?: pulumi.Input<string>;
    /**
     * [string] The date and time when the object lock retention expires.Must be in RFC3999 format
     */
    objectLockRetainUntilDate?: pulumi.Input<string>;
    /**
     * [string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.
     */
    serverSideEncryption?: pulumi.Input<string>;
    /**
     * [string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.
     */
    serverSideEncryptionCustomerAlgorithm?: pulumi.Input<string>;
    /**
     * [string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.
     */
    serverSideEncryptionCustomerKey?: pulumi.Input<string>;
    /**
     * [string] Specifies the 128-bit MD5 digest of the encryption key.
     */
    serverSideEncryptionCustomerKeyMd5?: pulumi.Input<string>;
    /**
     * [string] The source of the object to be copied
     */
    source?: pulumi.Input<string>;
    /**
     * [string] Specifies the algorithm used for source object encryption. Valid value is AES256.
     */
    sourceCustomerAlgorithm?: pulumi.Input<string>;
    /**
     * [string] Specifies the 256-bit, base64-encoded encryption key for source object encryption.
     */
    sourceCustomerKey?: pulumi.Input<string>;
    /**
     * [string] Specifies the 128-bit MD5 digest of the encryption key for source object encryption.
     */
    sourceCustomerKeyMd5?: pulumi.Input<string>;
    /**
     * [string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.
     */
    storageClass?: pulumi.Input<string>;
    /**
     * [string] Specifies whether the object tag-set is copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.
     */
    taggingDirective?: pulumi.Input<string>;
    /**
     * [map] The tag-set for the object.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * [string] The version of the object.
     */
    versionId?: pulumi.Input<string>;
    /**
     * [string] Redirects requests for this object to another object in the same bucket or to an external URL.
     */
    websiteRedirect?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectCopy resource.
 */
export interface ObjectCopyArgs {
    /**
     * [string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.
     */
    bucket: pulumi.Input<string>;
    /**
     * [string] Specifies caching behavior along the request/reply chain.
     */
    cacheControl?: pulumi.Input<string>;
    /**
     * [string] Specifies presentational information for the object.
     */
    contentDisposition?: pulumi.Input<string>;
    /**
     * [string] Specifies what content encodings have been applied to the object.
     */
    contentEncoding?: pulumi.Input<string>;
    /**
     * [string] The natural language or languages of the intended audience for the object.
     */
    contentLanguage?: pulumi.Input<string>;
    /**
     * [string] A standard MIME type describing the format of the contents.
     */
    contentType?: pulumi.Input<string>;
    /**
     * Copies the object if its entity tag (ETag) matches the specified tag
     */
    copyIfMatch?: pulumi.Input<string>;
    /**
     * Copies the object if it has been modified since the specified time
     */
    copyIfModifiedSince?: pulumi.Input<string>;
    /**
     * Copies the object if its entity tag (ETag) is different than the specified ETag
     */
    copyIfNoneMatch?: pulumi.Input<string>;
    /**
     * Copies the object if it hasn't been modified since the specified time
     */
    copyIfUnmodifiedSince?: pulumi.Input<string>;
    /**
     * [string] The date and time at which the object is no longer cacheable.
     */
    expires?: pulumi.Input<string>;
    /**
     * [bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * [string] The key of the object. Must be at least 1 character long.
     */
    key: pulumi.Input<string>;
    /**
     * [map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * [string] Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.
     */
    metadataDirective?: pulumi.Input<string>;
    /**
     * [string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.
     */
    objectLockLegalHold?: pulumi.Input<string>;
    /**
     * [string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
     */
    objectLockMode?: pulumi.Input<string>;
    /**
     * [string] The date and time when the object lock retention expires.Must be in RFC3999 format
     */
    objectLockRetainUntilDate?: pulumi.Input<string>;
    /**
     * [string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.
     */
    serverSideEncryption?: pulumi.Input<string>;
    /**
     * [string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.
     */
    serverSideEncryptionCustomerAlgorithm?: pulumi.Input<string>;
    /**
     * [string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.
     */
    serverSideEncryptionCustomerKey?: pulumi.Input<string>;
    /**
     * [string] Specifies the 128-bit MD5 digest of the encryption key.
     */
    serverSideEncryptionCustomerKeyMd5?: pulumi.Input<string>;
    /**
     * [string] The source of the object to be copied
     */
    source: pulumi.Input<string>;
    /**
     * [string] Specifies the algorithm used for source object encryption. Valid value is AES256.
     */
    sourceCustomerAlgorithm?: pulumi.Input<string>;
    /**
     * [string] Specifies the 256-bit, base64-encoded encryption key for source object encryption.
     */
    sourceCustomerKey?: pulumi.Input<string>;
    /**
     * [string] Specifies the 128-bit MD5 digest of the encryption key for source object encryption.
     */
    sourceCustomerKeyMd5?: pulumi.Input<string>;
    /**
     * [string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.
     */
    storageClass?: pulumi.Input<string>;
    /**
     * [string] Specifies whether the object tag-set is copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.
     */
    taggingDirective?: pulumi.Input<string>;
    /**
     * [map] The tag-set for the object.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * [string] Redirects requests for this object to another object in the same bucket or to an external URL.
     */
    websiteRedirect?: pulumi.Input<string>;
}
