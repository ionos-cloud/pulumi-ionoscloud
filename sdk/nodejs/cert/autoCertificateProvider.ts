// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a **CM provider**.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = new ionoscloud.cert.AutoCertificateProvider("example", {
 *     name: "Let's Encrypt",
 *     email: "user@example.com",
 *     location: "de/fra",
 *     server: "https://acme-v02.api.letsencrypt.org/directory",
 *     externalAccountBinding: {
 *         keyId: "some-key-id",
 *         keySecret: "secret",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * The resource can be imported using the `provider_id` and the `location`, separated by `:`, e.g.
 *
 * ```sh
 * $ pulumi import ionoscloud:cert/autoCertificateProvider:AutoCertificateProvider example location:provider_id
 * ```
 */
export class AutoCertificateProvider extends pulumi.CustomResource {
    /**
     * Get an existing AutoCertificateProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutoCertificateProviderState, opts?: pulumi.CustomResourceOptions): AutoCertificateProvider {
        return new AutoCertificateProvider(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ionoscloud:cert/autoCertificateProvider:AutoCertificateProvider';

    /**
     * Returns true if the given object is an instance of AutoCertificateProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutoCertificateProvider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutoCertificateProvider.__pulumiType;
    }

    /**
     * [string] The email address of the certificate requester.
     */
    public readonly email!: pulumi.Output<string>;
    /**
     * [list] External account binding details.
     */
    public readonly externalAccountBinding!: pulumi.Output<outputs.cert.AutoCertificateProviderExternalAccountBinding | undefined>;
    /**
     * [string] The location of the provider.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * [string] The name of the certificate provider.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * [string] The URL of the certificate provider.
     */
    public readonly server!: pulumi.Output<string>;

    /**
     * Create a AutoCertificateProvider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutoCertificateProviderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutoCertificateProviderArgs | AutoCertificateProviderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutoCertificateProviderState | undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["externalAccountBinding"] = state ? state.externalAccountBinding : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
        } else {
            const args = argsOrState as AutoCertificateProviderArgs | undefined;
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            if ((!args || args.server === undefined) && !opts.urn) {
                throw new Error("Missing required property 'server'");
            }
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["externalAccountBinding"] = args ? args.externalAccountBinding : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutoCertificateProvider.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AutoCertificateProvider resources.
 */
export interface AutoCertificateProviderState {
    /**
     * [string] The email address of the certificate requester.
     */
    email?: pulumi.Input<string>;
    /**
     * [list] External account binding details.
     */
    externalAccountBinding?: pulumi.Input<inputs.cert.AutoCertificateProviderExternalAccountBinding>;
    /**
     * [string] The location of the provider.
     */
    location?: pulumi.Input<string>;
    /**
     * [string] The name of the certificate provider.
     */
    name?: pulumi.Input<string>;
    /**
     * [string] The URL of the certificate provider.
     */
    server?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AutoCertificateProvider resource.
 */
export interface AutoCertificateProviderArgs {
    /**
     * [string] The email address of the certificate requester.
     */
    email: pulumi.Input<string>;
    /**
     * [list] External account binding details.
     */
    externalAccountBinding?: pulumi.Input<inputs.cert.AutoCertificateProviderExternalAccountBinding>;
    /**
     * [string] The location of the provider.
     */
    location?: pulumi.Input<string>;
    /**
     * [string] The name of the certificate provider.
     */
    name?: pulumi.Input<string>;
    /**
     * [string] The URL of the certificate provider.
     */
    server: pulumi.Input<string>;
}
