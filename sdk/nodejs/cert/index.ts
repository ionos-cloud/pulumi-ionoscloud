// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AutoCertificateArgs, AutoCertificateState } from "./autoCertificate";
export type AutoCertificate = import("./autoCertificate").AutoCertificate;
export const AutoCertificate: typeof import("./autoCertificate").AutoCertificate = null as any;
utilities.lazyLoad(exports, ["AutoCertificate"], () => require("./autoCertificate"));

export { AutoCertificateProviderArgs, AutoCertificateProviderState } from "./autoCertificateProvider";
export type AutoCertificateProvider = import("./autoCertificateProvider").AutoCertificateProvider;
export const AutoCertificateProvider: typeof import("./autoCertificateProvider").AutoCertificateProvider = null as any;
utilities.lazyLoad(exports, ["AutoCertificateProvider"], () => require("./autoCertificateProvider"));

export { CertificateArgs, CertificateState } from "./certificate";
export type Certificate = import("./certificate").Certificate;
export const Certificate: typeof import("./certificate").Certificate = null as any;
utilities.lazyLoad(exports, ["Certificate"], () => require("./certificate"));

export { GetAutoCertificateArgs, GetAutoCertificateResult, GetAutoCertificateOutputArgs } from "./getAutoCertificate";
export const getAutoCertificate: typeof import("./getAutoCertificate").getAutoCertificate = null as any;
export const getAutoCertificateOutput: typeof import("./getAutoCertificate").getAutoCertificateOutput = null as any;
utilities.lazyLoad(exports, ["getAutoCertificate","getAutoCertificateOutput"], () => require("./getAutoCertificate"));

export { GetAutoCertificateProviderArgs, GetAutoCertificateProviderResult, GetAutoCertificateProviderOutputArgs } from "./getAutoCertificateProvider";
export const getAutoCertificateProvider: typeof import("./getAutoCertificateProvider").getAutoCertificateProvider = null as any;
export const getAutoCertificateProviderOutput: typeof import("./getAutoCertificateProvider").getAutoCertificateProviderOutput = null as any;
utilities.lazyLoad(exports, ["getAutoCertificateProvider","getAutoCertificateProviderOutput"], () => require("./getAutoCertificateProvider"));

export { GetCertificateArgs, GetCertificateResult, GetCertificateOutputArgs } from "./getCertificate";
export const getCertificate: typeof import("./getCertificate").getCertificate = null as any;
export const getCertificateOutput: typeof import("./getCertificate").getCertificateOutput = null as any;
utilities.lazyLoad(exports, ["getCertificate","getCertificateOutput"], () => require("./getCertificate"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "ionoscloud:cert/autoCertificate:AutoCertificate":
                return new AutoCertificate(name, <any>undefined, { urn })
            case "ionoscloud:cert/autoCertificateProvider:AutoCertificateProvider":
                return new AutoCertificateProvider(name, <any>undefined, { urn })
            case "ionoscloud:cert/certificate:Certificate":
                return new Certificate(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("ionoscloud", "cert/autoCertificate", _module)
pulumi.runtime.registerResourceModule("ionoscloud", "cert/autoCertificateProvider", _module)
pulumi.runtime.registerResourceModule("ionoscloud", "cert/certificate", _module)
