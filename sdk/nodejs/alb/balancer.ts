// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an **Application Load Balancer** on IonosCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = new ionoscloud.compute.Datacenter("example", {
 *     name: "Datacenter Example",
 *     location: "us/las",
 *     description: "datacenter description",
 *     secAuthProtection: false,
 * });
 * const example1 = new ionoscloud.compute.Lan("example_1", {
 *     datacenterId: example.id,
 *     "public": true,
 *     name: "Lan Example",
 * });
 * const example2 = new ionoscloud.compute.Lan("example_2", {
 *     datacenterId: example.id,
 *     "public": true,
 *     name: "Lan Example",
 * });
 * const exampleBalancer = new ionoscloud.alb.Balancer("example", {
 *     datacenterId: example.id,
 *     name: "ALB Example",
 *     listenerLan: example1.id,
 *     ips: ["10.12.118.224"],
 *     targetLan: example2.id,
 *     lbPrivateIps: ["10.13.72.225/24"],
 *     centralLogging: true,
 *     loggingFormat: "%{+Q}o %{-Q}ci - - [%trg] %r %ST %B \"\" \"\" %cp %ms %ft %b %s %TR %Tw %Tc %Tr %Ta %tsc %ac %fc %bc %sc %rc %sq %bq %CC %CS %hrl %hsl",
 * });
 * ```
 *
 * ## Import
 *
 * Resource Application Load Balancer can be imported using the `resource id` and `datacenter id`, e.g.
 *
 * ```sh
 * $ pulumi import ionoscloud:alb/balancer:Balancer myalb datacenter uuid/applicationLoadBalancer uuid
 * ```
 */
export class Balancer extends pulumi.CustomResource {
    /**
     * Get an existing Balancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BalancerState, opts?: pulumi.CustomResourceOptions): Balancer {
        return new Balancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ionoscloud:alb/balancer:Balancer';

    /**
     * Returns true if the given object is an instance of Balancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Balancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Balancer.__pulumiType;
    }

    /**
     * [bool] Turn logging on and off for this product. Default value is 'false'.
     */
    public readonly centralLogging!: pulumi.Output<boolean | undefined>;
    /**
     * [string] ID of the datacenter.
     */
    public readonly datacenterId!: pulumi.Output<string>;
    /**
     * [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
     */
    public readonly flowlog!: pulumi.Output<outputs.alb.BalancerFlowlog | undefined>;
    /**
     * [set] Collection of the Application Load Balancer IP addresses. (Inbound and outbound) IPs of the listenerLan are customer-reserved public IPs for the public Load Balancers, and private IPs for the private Load Balancers.
     */
    public readonly ips!: pulumi.Output<string[] | undefined>;
    /**
     * [set] Collection of private IP addresses with the subnet mask of the Application Load Balancer. IPs must contain valid a subnet mask. If no IP is provided, the system will generate an IP with /24 subnet.
     */
    public readonly lbPrivateIps!: pulumi.Output<string[] | undefined>;
    /**
     * [int] ID of the listening (inbound) LAN.
     */
    public readonly listenerLan!: pulumi.Output<number>;
    /**
     * Specifies the format of the logs.
     */
    public readonly loggingFormat!: pulumi.Output<string | undefined>;
    /**
     * [string] The name of the Application Load Balancer.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * [int] ID of the balanced private target LAN (outbound).
     */
    public readonly targetLan!: pulumi.Output<number>;

    /**
     * Create a Balancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BalancerArgs | BalancerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BalancerState | undefined;
            resourceInputs["centralLogging"] = state ? state.centralLogging : undefined;
            resourceInputs["datacenterId"] = state ? state.datacenterId : undefined;
            resourceInputs["flowlog"] = state ? state.flowlog : undefined;
            resourceInputs["ips"] = state ? state.ips : undefined;
            resourceInputs["lbPrivateIps"] = state ? state.lbPrivateIps : undefined;
            resourceInputs["listenerLan"] = state ? state.listenerLan : undefined;
            resourceInputs["loggingFormat"] = state ? state.loggingFormat : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["targetLan"] = state ? state.targetLan : undefined;
        } else {
            const args = argsOrState as BalancerArgs | undefined;
            if ((!args || args.datacenterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datacenterId'");
            }
            if ((!args || args.listenerLan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listenerLan'");
            }
            if ((!args || args.targetLan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetLan'");
            }
            resourceInputs["centralLogging"] = args ? args.centralLogging : undefined;
            resourceInputs["datacenterId"] = args ? args.datacenterId : undefined;
            resourceInputs["flowlog"] = args ? args.flowlog : undefined;
            resourceInputs["ips"] = args ? args.ips : undefined;
            resourceInputs["lbPrivateIps"] = args ? args.lbPrivateIps : undefined;
            resourceInputs["listenerLan"] = args ? args.listenerLan : undefined;
            resourceInputs["loggingFormat"] = args ? args.loggingFormat : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["targetLan"] = args ? args.targetLan : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Balancer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Balancer resources.
 */
export interface BalancerState {
    /**
     * [bool] Turn logging on and off for this product. Default value is 'false'.
     */
    centralLogging?: pulumi.Input<boolean>;
    /**
     * [string] ID of the datacenter.
     */
    datacenterId?: pulumi.Input<string>;
    /**
     * [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
     */
    flowlog?: pulumi.Input<inputs.alb.BalancerFlowlog>;
    /**
     * [set] Collection of the Application Load Balancer IP addresses. (Inbound and outbound) IPs of the listenerLan are customer-reserved public IPs for the public Load Balancers, and private IPs for the private Load Balancers.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * [set] Collection of private IP addresses with the subnet mask of the Application Load Balancer. IPs must contain valid a subnet mask. If no IP is provided, the system will generate an IP with /24 subnet.
     */
    lbPrivateIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * [int] ID of the listening (inbound) LAN.
     */
    listenerLan?: pulumi.Input<number>;
    /**
     * Specifies the format of the logs.
     */
    loggingFormat?: pulumi.Input<string>;
    /**
     * [string] The name of the Application Load Balancer.
     */
    name?: pulumi.Input<string>;
    /**
     * [int] ID of the balanced private target LAN (outbound).
     */
    targetLan?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Balancer resource.
 */
export interface BalancerArgs {
    /**
     * [bool] Turn logging on and off for this product. Default value is 'false'.
     */
    centralLogging?: pulumi.Input<boolean>;
    /**
     * [string] ID of the datacenter.
     */
    datacenterId: pulumi.Input<string>;
    /**
     * [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
     */
    flowlog?: pulumi.Input<inputs.alb.BalancerFlowlog>;
    /**
     * [set] Collection of the Application Load Balancer IP addresses. (Inbound and outbound) IPs of the listenerLan are customer-reserved public IPs for the public Load Balancers, and private IPs for the private Load Balancers.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * [set] Collection of private IP addresses with the subnet mask of the Application Load Balancer. IPs must contain valid a subnet mask. If no IP is provided, the system will generate an IP with /24 subnet.
     */
    lbPrivateIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * [int] ID of the listening (inbound) LAN.
     */
    listenerLan: pulumi.Input<number>;
    /**
     * Specifies the format of the logs.
     */
    loggingFormat?: pulumi.Input<string>;
    /**
     * [string] The name of the Application Load Balancer.
     */
    name?: pulumi.Input<string>;
    /**
     * [int] ID of the balanced private target LAN (outbound).
     */
    targetLan: pulumi.Input<number>;
}
