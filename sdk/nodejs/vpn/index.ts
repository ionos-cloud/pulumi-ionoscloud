// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetIpsecGatewayArgs, GetIpsecGatewayResult, GetIpsecGatewayOutputArgs } from "./getIpsecGateway";
export const getIpsecGateway: typeof import("./getIpsecGateway").getIpsecGateway = null as any;
export const getIpsecGatewayOutput: typeof import("./getIpsecGateway").getIpsecGatewayOutput = null as any;
utilities.lazyLoad(exports, ["getIpsecGateway","getIpsecGatewayOutput"], () => require("./getIpsecGateway"));

export { GetIpsecTunnelArgs, GetIpsecTunnelResult, GetIpsecTunnelOutputArgs } from "./getIpsecTunnel";
export const getIpsecTunnel: typeof import("./getIpsecTunnel").getIpsecTunnel = null as any;
export const getIpsecTunnelOutput: typeof import("./getIpsecTunnel").getIpsecTunnelOutput = null as any;
utilities.lazyLoad(exports, ["getIpsecTunnel","getIpsecTunnelOutput"], () => require("./getIpsecTunnel"));

export { GetWireguardGatewayArgs, GetWireguardGatewayResult, GetWireguardGatewayOutputArgs } from "./getWireguardGateway";
export const getWireguardGateway: typeof import("./getWireguardGateway").getWireguardGateway = null as any;
export const getWireguardGatewayOutput: typeof import("./getWireguardGateway").getWireguardGatewayOutput = null as any;
utilities.lazyLoad(exports, ["getWireguardGateway","getWireguardGatewayOutput"], () => require("./getWireguardGateway"));

export { GetWireguardPeerArgs, GetWireguardPeerResult, GetWireguardPeerOutputArgs } from "./getWireguardPeer";
export const getWireguardPeer: typeof import("./getWireguardPeer").getWireguardPeer = null as any;
export const getWireguardPeerOutput: typeof import("./getWireguardPeer").getWireguardPeerOutput = null as any;
utilities.lazyLoad(exports, ["getWireguardPeer","getWireguardPeerOutput"], () => require("./getWireguardPeer"));

export { IpsecGatewayArgs, IpsecGatewayState } from "./ipsecGateway";
export type IpsecGateway = import("./ipsecGateway").IpsecGateway;
export const IpsecGateway: typeof import("./ipsecGateway").IpsecGateway = null as any;
utilities.lazyLoad(exports, ["IpsecGateway"], () => require("./ipsecGateway"));

export { IpsecTunnelArgs, IpsecTunnelState } from "./ipsecTunnel";
export type IpsecTunnel = import("./ipsecTunnel").IpsecTunnel;
export const IpsecTunnel: typeof import("./ipsecTunnel").IpsecTunnel = null as any;
utilities.lazyLoad(exports, ["IpsecTunnel"], () => require("./ipsecTunnel"));

export { WireguardGatewayArgs, WireguardGatewayState } from "./wireguardGateway";
export type WireguardGateway = import("./wireguardGateway").WireguardGateway;
export const WireguardGateway: typeof import("./wireguardGateway").WireguardGateway = null as any;
utilities.lazyLoad(exports, ["WireguardGateway"], () => require("./wireguardGateway"));

export { WireguardPeerArgs, WireguardPeerState } from "./wireguardPeer";
export type WireguardPeer = import("./wireguardPeer").WireguardPeer;
export const WireguardPeer: typeof import("./wireguardPeer").WireguardPeer = null as any;
utilities.lazyLoad(exports, ["WireguardPeer"], () => require("./wireguardPeer"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "ionoscloud:vpn/ipsecGateway:IpsecGateway":
                return new IpsecGateway(name, <any>undefined, { urn })
            case "ionoscloud:vpn/ipsecTunnel:IpsecTunnel":
                return new IpsecTunnel(name, <any>undefined, { urn })
            case "ionoscloud:vpn/wireguardGateway:WireguardGateway":
                return new WireguardGateway(name, <any>undefined, { urn })
            case "ionoscloud:vpn/wireguardPeer:WireguardPeer":
                return new WireguardPeer(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("ionoscloud", "vpn/ipsecGateway", _module)
pulumi.runtime.registerResourceModule("ionoscloud", "vpn/ipsecTunnel", _module)
pulumi.runtime.registerResourceModule("ionoscloud", "vpn/wireguardGateway", _module)
pulumi.runtime.registerResourceModule("ionoscloud", "vpn/wireguardPeer", _module)
