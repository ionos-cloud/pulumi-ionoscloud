// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));


// Export sub-modules:
import * as alb from "./alb";
import * as apigateway from "./apigateway";
import * as autoscaling from "./autoscaling";
import * as cdn from "./cdn";
import * as cert from "./cert";
import * as compute from "./compute";
import * as config from "./config";
import * as creg from "./creg";
import * as dbaas from "./dbaas";
import * as dns from "./dns";
import * as dsaas from "./dsaas";
import * as k8s from "./k8s";
import * as kafka from "./kafka";
import * as logging from "./logging";
import * as monitoring from "./monitoring";
import * as nfs from "./nfs";
import * as nlb from "./nlb";
import * as nsg from "./nsg";
import * as objectstorage from "./objectstorage";
import * as types from "./types";
import * as vpn from "./vpn";

export {
    alb,
    apigateway,
    autoscaling,
    cdn,
    cert,
    compute,
    config,
    creg,
    dbaas,
    dns,
    dsaas,
    k8s,
    kafka,
    logging,
    monitoring,
    nfs,
    nlb,
    nsg,
    objectstorage,
    types,
    vpn,
};
pulumi.runtime.registerResourcePackage("ionoscloud", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:ionoscloud") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
