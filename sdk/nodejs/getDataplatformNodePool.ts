// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The **Dataplatform Node Pool Data Source** can be used to search for and return an existing Dataplatform Node Pool under a Dataplatform Cluster.
 * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
 * When this happens, please refine your search and make sure that your resources have unique names.
 *
 * ## Example Usage
 */
export function getDataplatformNodePool(args: GetDataplatformNodePoolArgs, opts?: pulumi.InvokeOptions): Promise<GetDataplatformNodePoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getDataplatformNodePool:getDataplatformNodePool", {
        "clusterId": args.clusterId,
        "id": args.id,
        "name": args.name,
        "partialMatch": args.partialMatch,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataplatformNodePool.
 */
export interface GetDataplatformNodePoolArgs {
    /**
     * ID of the cluster the searched node pool is part of.
     */
    clusterId: string;
    /**
     * ID of the node pool you want to search for.
     */
    id?: string;
    /**
     * Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
     */
    name?: string;
    /**
     * Whether partial matching is allowed or not when using name argument. Default value is false.
     *
     * Either `id` or `name` must be provided. If none, or both are provided, the datasource will return an error.
     */
    partialMatch?: boolean;
}

/**
 * A collection of values returned by getDataplatformNodePool.
 */
export interface GetDataplatformNodePoolResult {
    /**
     * Key-value pairs attached to node pool resource as [Kubernetes annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
     */
    readonly annotations: {[key: string]: string};
    /**
     * The availability zone of the virtual datacenter region where the node pool resources should be provisioned.
     */
    readonly availabilityZone: string;
    /**
     * ID of the cluster the searched node pool is part of.
     */
    readonly clusterId: string;
    /**
     * The number of CPU cores per node.
     */
    readonly coresCount: number;
    /**
     * A CPU family.
     */
    readonly cpuFamily: string;
    /**
     * The UUID of the virtual data center (VDC) the cluster is provisioned.
     */
    readonly datacenterId: string;
    /**
     * ID of your node pool.
     */
    readonly id?: string;
    /**
     * Key-value pairs attached to the node pool resource as [Kubernetes labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
     */
    readonly labels: {[key: string]: string};
    /**
     * Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
     */
    readonly maintenanceWindows: outputs.GetDataplatformNodePoolMaintenanceWindow[];
    /**
     * The name of your node pool
     */
    readonly name?: string;
    /**
     * The number of nodes that make up the node pool.
     */
    readonly nodeCount: number;
    readonly partialMatch?: boolean;
    /**
     * The RAM size for one node in MB.
     */
    readonly ramSize: number;
    /**
     * The size of the volume in GB.
     */
    readonly storageSize: number;
    /**
     * The type of hardware for the volume.
     */
    readonly storageType: string;
    /**
     * The version of the Data Platform.
     */
    readonly version: string;
}
/**
 * The **Dataplatform Node Pool Data Source** can be used to search for and return an existing Dataplatform Node Pool under a Dataplatform Cluster.
 * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
 * When this happens, please refine your search and make sure that your resources have unique names.
 *
 * ## Example Usage
 */
export function getDataplatformNodePoolOutput(args: GetDataplatformNodePoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataplatformNodePoolResult> {
    return pulumi.output(args).apply((a: any) => getDataplatformNodePool(a, opts))
}

/**
 * A collection of arguments for invoking getDataplatformNodePool.
 */
export interface GetDataplatformNodePoolOutputArgs {
    /**
     * ID of the cluster the searched node pool is part of.
     */
    clusterId: pulumi.Input<string>;
    /**
     * ID of the node pool you want to search for.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether partial matching is allowed or not when using name argument. Default value is false.
     *
     * Either `id` or `name` must be provided. If none, or both are provided, the datasource will return an error.
     */
    partialMatch?: pulumi.Input<boolean>;
}
