// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a **Target Group** on IonosCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = new ionoscloud.TargetGroup("example", {
 *     algorithm: "ROUND_ROBIN",
 *     healthCheck: {
 *         checkInterval: 50000,
 *         checkTimeout: 5000,
 *         retries: 2,
 *     },
 *     httpHealthCheck: {
 *         matchType: "STATUS_CODE",
 *         method: "GET",
 *         negate: true,
 *         path: "/.",
 *         regex: true,
 *         response: "200",
 *     },
 *     protocol: "HTTP",
 *     protocolVersion: "HTTP1",
 *     targets: [
 *         {
 *             healthCheckEnabled: true,
 *             ip: "22.231.2.2",
 *             maintenanceEnabled: false,
 *             port: 8080,
 *             proxyProtocol: "v2ssl",
 *             weight: 1,
 *         },
 *         {
 *             healthCheckEnabled: false,
 *             ip: "22.231.2.3",
 *             maintenanceEnabled: false,
 *             port: 8081,
 *             proxyProtocol: "v2",
 *             weight: 124,
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Resource Target Group can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import ionoscloud:index/targetGroup:TargetGroup myTargetGroup {target group uuid}
 * ```
 */
export class TargetGroup extends pulumi.CustomResource {
    /**
     * Get an existing TargetGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TargetGroupState, opts?: pulumi.CustomResourceOptions): TargetGroup {
        return new TargetGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ionoscloud:index/targetGroup:TargetGroup';

    /**
     * Returns true if the given object is an instance of TargetGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TargetGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TargetGroup.__pulumiType;
    }

    /**
     * [string] Balancing algorithm.
     */
    public readonly algorithm!: pulumi.Output<string>;
    /**
     * Health check attributes for Target Group.
     */
    public readonly healthCheck!: pulumi.Output<outputs.TargetGroupHealthCheck>;
    /**
     * Http health check attributes for Target Group
     */
    public readonly httpHealthCheck!: pulumi.Output<outputs.TargetGroupHttpHealthCheck>;
    /**
     * [string] The name of the target group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * [string] Balancing protocol.
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * [string] The forwarding protocol version. Value is ignored when protocol is not 'HTTP'.
     */
    public readonly protocolVersion!: pulumi.Output<string>;
    /**
     * [list] Array of items in the collection
     */
    public readonly targets!: pulumi.Output<outputs.TargetGroupTarget[]>;

    /**
     * Create a TargetGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TargetGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TargetGroupArgs | TargetGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TargetGroupState | undefined;
            resourceInputs["algorithm"] = state ? state.algorithm : undefined;
            resourceInputs["healthCheck"] = state ? state.healthCheck : undefined;
            resourceInputs["httpHealthCheck"] = state ? state.httpHealthCheck : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["protocolVersion"] = state ? state.protocolVersion : undefined;
            resourceInputs["targets"] = state ? state.targets : undefined;
        } else {
            const args = argsOrState as TargetGroupArgs | undefined;
            if ((!args || args.algorithm === undefined) && !opts.urn) {
                throw new Error("Missing required property 'algorithm'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if ((!args || args.protocolVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocolVersion'");
            }
            resourceInputs["algorithm"] = args ? args.algorithm : undefined;
            resourceInputs["healthCheck"] = args ? args.healthCheck : undefined;
            resourceInputs["httpHealthCheck"] = args ? args.httpHealthCheck : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["protocolVersion"] = args ? args.protocolVersion : undefined;
            resourceInputs["targets"] = args ? args.targets : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TargetGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TargetGroup resources.
 */
export interface TargetGroupState {
    /**
     * [string] Balancing algorithm.
     */
    algorithm?: pulumi.Input<string>;
    /**
     * Health check attributes for Target Group.
     */
    healthCheck?: pulumi.Input<inputs.TargetGroupHealthCheck>;
    /**
     * Http health check attributes for Target Group
     */
    httpHealthCheck?: pulumi.Input<inputs.TargetGroupHttpHealthCheck>;
    /**
     * [string] The name of the target group.
     */
    name?: pulumi.Input<string>;
    /**
     * [string] Balancing protocol.
     */
    protocol?: pulumi.Input<string>;
    /**
     * [string] The forwarding protocol version. Value is ignored when protocol is not 'HTTP'.
     */
    protocolVersion?: pulumi.Input<string>;
    /**
     * [list] Array of items in the collection
     */
    targets?: pulumi.Input<pulumi.Input<inputs.TargetGroupTarget>[]>;
}

/**
 * The set of arguments for constructing a TargetGroup resource.
 */
export interface TargetGroupArgs {
    /**
     * [string] Balancing algorithm.
     */
    algorithm: pulumi.Input<string>;
    /**
     * Health check attributes for Target Group.
     */
    healthCheck?: pulumi.Input<inputs.TargetGroupHealthCheck>;
    /**
     * Http health check attributes for Target Group
     */
    httpHealthCheck?: pulumi.Input<inputs.TargetGroupHttpHealthCheck>;
    /**
     * [string] The name of the target group.
     */
    name?: pulumi.Input<string>;
    /**
     * [string] Balancing protocol.
     */
    protocol: pulumi.Input<string>;
    /**
     * [string] The forwarding protocol version. Value is ignored when protocol is not 'HTTP'.
     */
    protocolVersion: pulumi.Input<string>;
    /**
     * [list] Array of items in the collection
     */
    targets?: pulumi.Input<pulumi.Input<inputs.TargetGroupTarget>[]>;
}
