// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The **Network Load Balancer data source** can be used to search for and return existing network load balancers.
 * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
 * When this happens, please refine your search string so that it is specific enough to return only one result.
 *
 * ## Example Usage
 *
 * ### By Name
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.getNetworkloadbalancer({
 *     datacenterId: ionoscloud_datacenter.example.id,
 *     name: "Network Load Balancer Name",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getNetworkloadbalancer(args: GetNetworkloadbalancerArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkloadbalancerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getNetworkloadbalancer:getNetworkloadbalancer", {
        "datacenterId": args.datacenterId,
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkloadbalancer.
 */
export interface GetNetworkloadbalancerArgs {
    /**
     * Datacenter's UUID.
     */
    datacenterId: string;
    /**
     * ID of the network load balancer you want to search for.
     *
     * `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
     */
    id?: string;
    /**
     * Name of an existing network load balancer that you want to search for.
     */
    name?: string;
}

/**
 * A collection of values returned by getNetworkloadbalancer.
 */
export interface GetNetworkloadbalancerResult {
    /**
     * Turn logging on and off for this product. Default value is 'false'.
     */
    readonly centralLogging: boolean;
    readonly datacenterId: string;
    /**
     * Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol â€“ and log the extent to which your instances are being accessed.
     */
    readonly flowlogs: outputs.GetNetworkloadbalancerFlowlog[];
    /**
     * Id of that Network Load Balancer
     */
    readonly id?: string;
    /**
     * Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer reserved IP for the public load balancer and private IP for the private load balancer.
     */
    readonly ips: string[];
    /**
     * Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If user will not provide any IP then the system will generate one IP with /24 subnet.
     */
    readonly lbPrivateIps: string[];
    /**
     * Id of the listening LAN. (inbound)
     */
    readonly listenerLan: number;
    readonly loggingFormat: string;
    /**
     * Specifies the name of the flow log.
     */
    readonly name?: string;
    /**
     * Id of the balanced private target LAN. (outbound)
     */
    readonly targetLan: number;
}
/**
 * The **Network Load Balancer data source** can be used to search for and return existing network load balancers.
 * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
 * When this happens, please refine your search string so that it is specific enough to return only one result.
 *
 * ## Example Usage
 *
 * ### By Name
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ionoscloud from "@pulumi/ionoscloud";
 *
 * const example = ionoscloud.getNetworkloadbalancer({
 *     datacenterId: ionoscloud_datacenter.example.id,
 *     name: "Network Load Balancer Name",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getNetworkloadbalancerOutput(args: GetNetworkloadbalancerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkloadbalancerResult> {
    return pulumi.output(args).apply((a: any) => getNetworkloadbalancer(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkloadbalancer.
 */
export interface GetNetworkloadbalancerOutputArgs {
    /**
     * Datacenter's UUID.
     */
    datacenterId: pulumi.Input<string>;
    /**
     * ID of the network load balancer you want to search for.
     *
     * `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of an existing network load balancer that you want to search for.
     */
    name?: pulumi.Input<string>;
}
