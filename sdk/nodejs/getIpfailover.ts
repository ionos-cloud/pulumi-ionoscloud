// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **IP Failover data source** can be used to search for and return an existing IP Failover object.
 * You need to provide the datacenterId and the id of the lan to get the ip failover object for the provided datacenter.
 * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
 */
export function getIpfailover(args: GetIpfailoverArgs, opts?: pulumi.InvokeOptions): Promise<GetIpfailoverResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getIpfailover:getIpfailover", {
        "datacenterId": args.datacenterId,
        "ip": args.ip,
        "lanId": args.lanId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpfailover.
 */
export interface GetIpfailoverArgs {
    /**
     * The ID of the datacenter containing the ip failover datasource
     */
    datacenterId: string;
    /**
     * The reserved IP address to be used in the IP failover group.
     */
    ip: string;
    /**
     * The ID of a LAN.
     */
    lanId: string;
}

/**
 * A collection of values returned by getIpfailover.
 */
export interface GetIpfailoverResult {
    /**
     * The ID of a Data Center.
     */
    readonly datacenterId: string;
    readonly id: string;
    /**
     * The reserved IP address to be used in the IP failover group.
     */
    readonly ip: string;
    /**
     * The ID of a LAN.
     */
    readonly lanId: string;
    /**
     * The ID of a NIC.
     */
    readonly nicuuid: string;
}
/**
 * The **IP Failover data source** can be used to search for and return an existing IP Failover object.
 * You need to provide the datacenterId and the id of the lan to get the ip failover object for the provided datacenter.
 * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
 */
export function getIpfailoverOutput(args: GetIpfailoverOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpfailoverResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ionoscloud:index/getIpfailover:getIpfailover", {
        "datacenterId": args.datacenterId,
        "ip": args.ip,
        "lanId": args.lanId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpfailover.
 */
export interface GetIpfailoverOutputArgs {
    /**
     * The ID of the datacenter containing the ip failover datasource
     */
    datacenterId: pulumi.Input<string>;
    /**
     * The reserved IP address to be used in the IP failover group.
     */
    ip: pulumi.Input<string>;
    /**
     * The ID of a LAN.
     */
    lanId: pulumi.Input<string>;
}
