{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "alb/balancer.ts",
        "alb/forwardingRule.ts",
        "alb/index.ts",
        "apigateway.ts",
        "apigatewayRoute.ts",
        "autoscalingGroup.ts",
        "cdn/distribution.ts",
        "cdn/index.ts",
        "cert/autoCertificate.ts",
        "cert/autoCertificateProvider.ts",
        "cert/certificate.ts",
        "cert/index.ts",
        "compute/backupUnit.ts",
        "compute/bootDeviceSelection.ts",
        "compute/crossconnect.ts",
        "compute/cubeServer.ts",
        "compute/datacenter.ts",
        "compute/firewall.ts",
        "compute/group.ts",
        "compute/index.ts",
        "compute/ipblock.ts",
        "compute/ipfailover.ts",
        "compute/lan.ts",
        "compute/natGateway.ts",
        "compute/natGatewayRule.ts",
        "compute/nic.ts",
        "compute/s3key.ts",
        "compute/server.ts",
        "compute/share.ts",
        "compute/snapshot.ts",
        "compute/user.ts",
        "compute/vcpuserver.ts",
        "compute/volume.ts",
        "config/index.ts",
        "config/vars.ts",
        "creg/index.ts",
        "creg/registry.ts",
        "creg/registryToken.ts",
        "dbaas/inMemoryDBReplicaSet.ts",
        "dbaas/index.ts",
        "dbaas/mariaDBCluster.ts",
        "dbaas/mongoCluster.ts",
        "dbaas/mongoUser.ts",
        "dbaas/psqlcluster.ts",
        "dbaas/psqldatabase.ts",
        "dbaas/psqluser.ts",
        "dns/index.ts",
        "dns/record.ts",
        "dns/zone.ts",
        "dsaas/cluster.ts",
        "dsaas/index.ts",
        "dsaas/nodePool.ts",
        "getApigateway.ts",
        "getApigatewayRoute.ts",
        "getApplicationLoadbalancer.ts",
        "getApplicationLoadbalancerForwardingrule.ts",
        "getAutoCertificate.ts",
        "getAutoCertificateProvider.ts",
        "getAutoscalingGroup.ts",
        "getAutoscalingGroupServers.ts",
        "getBackupUnit.ts",
        "getCdnDistribution.ts",
        "getCertificate.ts",
        "getContainerRegistry.ts",
        "getContainerRegistryLocations.ts",
        "getContainerRegistryToken.ts",
        "getCubeServer.ts",
        "getDatacenter.ts",
        "getDataplatformCluster.ts",
        "getDataplatformNodePool.ts",
        "getDataplatformNodePools.ts",
        "getDataplatformVersions.ts",
        "getDnsRecord.ts",
        "getDnsZone.ts",
        "getFirewall.ts",
        "getGroup.ts",
        "getImage.ts",
        "getInmemorydbReplicaset.ts",
        "getInmemorydbSnapshot.ts",
        "getIpblock.ts",
        "getIpfailover.ts",
        "getK8sCluster.ts",
        "getK8sClusters.ts",
        "getK8sNodePool.ts",
        "getK8sNodePoolNodes.ts",
        "getKafkaCluster.ts",
        "getKafkaClusterTopic.ts",
        "getLan.ts",
        "getLocation.ts",
        "getLoggingPipeline.ts",
        "getMariadbBackups.ts",
        "getMariadbCluster.ts",
        "getMongoCluster.ts",
        "getMongoTemplate.ts",
        "getMongoUser.ts",
        "getNatgateway.ts",
        "getNatgatewayRule.ts",
        "getNetworkloadbalancer.ts",
        "getNetworkloadbalancerForwardingrule.ts",
        "getNfsCluster.ts",
        "getNfsShare.ts",
        "getNic.ts",
        "getPgBackups.ts",
        "getPgCluster.ts",
        "getPgDatabase.ts",
        "getPgDatabases.ts",
        "getPgUser.ts",
        "getPgVersions.ts",
        "getPrivateCrossconnect.ts",
        "getResource.ts",
        "getS3Key.ts",
        "getServer.ts",
        "getServers.ts",
        "getShare.ts",
        "getSnapshot.ts",
        "getTargetGroup.ts",
        "getTemplate.ts",
        "getUser.ts",
        "getVcpuServer.ts",
        "getVolume.ts",
        "getVpnIpsecGateway.ts",
        "getVpnIpsecTunnel.ts",
        "getVpnWireguardGateway.ts",
        "getVpnWireguardPeer.ts",
        "index.ts",
        "k8s/cluster.ts",
        "k8s/index.ts",
        "k8s/nodePool.ts",
        "kafkaCluster.ts",
        "kafkaClusterTopic.ts",
        "loadbalancer.ts",
        "logging/index.ts",
        "logging/pipeline.ts",
        "nfs/cluster.ts",
        "nfs/index.ts",
        "nfs/share.ts",
        "nlb/balancer.ts",
        "nlb/forwardingRule.ts",
        "nlb/index.ts",
        "provider.ts",
        "targetGroup.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts",
        "vpn/index.ts",
        "vpn/ipsecGateway.ts",
        "vpn/ipsecTunnel.ts",
        "vpn/wireguardGateway.ts",
        "vpn/wireguardPeer.ts"
    ]
}
