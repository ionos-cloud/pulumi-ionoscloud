// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The **Nic data source** can be used to search for and return existing nics.
 * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
 * When this happens, please refine your search string so that it is specific enough to return only one result.
 *
 * ## Example Usage
 */
export function getNic(args: GetNicArgs, opts?: pulumi.InvokeOptions): Promise<GetNicResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ionoscloud:index/getNic:getNic", {
        "datacenterId": args.datacenterId,
        "dhcp": args.dhcp,
        "dhcpv6": args.dhcpv6,
        "firewallActive": args.firewallActive,
        "firewallType": args.firewallType,
        "id": args.id,
        "ips": args.ips,
        "ipv6CidrBlock": args.ipv6CidrBlock,
        "ipv6Ips": args.ipv6Ips,
        "lan": args.lan,
        "name": args.name,
        "serverId": args.serverId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNic.
 */
export interface GetNicArgs {
    /**
     * [string] The ID of a Virtual Data Center.
     */
    datacenterId: string;
    /**
     * Indicates if the NIC should get an IP address using DHCP (true) or not (false).
     */
    dhcp?: boolean;
    dhcpv6?: boolean;
    /**
     * If this resource is set to true and is nested under a server resource firewall, with open SSH port, resource must be nested under the NIC.
     */
    firewallActive?: boolean;
    /**
     * The type of firewall rules that will be allowed on the NIC. If it is not specified it will take the default value INGRESS
     */
    firewallType?: string;
    /**
     * ID of the nic you want to search for.
     *
     * `datacenterId` and either `name` or `id` must be provided.
     * If none, are provided, the datasource will return an error.
     */
    id?: string;
    /**
     * Collection of IP addresses assigned to a nic. Explicitly assigned public IPs need to come from reserved IP blocks, Passing value null or empty array will assign an IP address automatically.
     */
    ips?: string[];
    ipv6CidrBlock?: string;
    ipv6Ips?: string[];
    /**
     * The LAN ID the NIC will sit on.
     */
    lan?: number;
    /**
     * [string] The name of the LAN.
     */
    name?: string;
    /**
     * [string] The ID of a server.
     */
    serverId: string;
}

/**
 * A collection of values returned by getNic.
 */
export interface GetNicResult {
    /**
     * The ID of a Virtual Data Center.
     */
    readonly datacenterId: string;
    /**
     * The Logical Unit Number (LUN) of the storage volume. Null if this NIC was created from CloudAPI and no DCD changes were done on the Datacenter.
     */
    readonly deviceNumber: number;
    /**
     * Indicates if the NIC should get an IP address using DHCP (true) or not (false).
     */
    readonly dhcp?: boolean;
    readonly dhcpv6?: boolean;
    /**
     * If this resource is set to true and is nested under a server resource firewall, with open SSH port, resource must be nested under the NIC.
     */
    readonly firewallActive?: boolean;
    /**
     * The type of firewall rules that will be allowed on the NIC. If it is not specified it will take the default value INGRESS
     */
    readonly firewallType: string;
    /**
     * Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol â€“ and log the extent to which your instances are being accessed.
     */
    readonly flowlogs: outputs.GetNicFlowlog[];
    /**
     * The id of the NIC.
     */
    readonly id?: string;
    /**
     * Collection of IP addresses assigned to a nic. Explicitly assigned public IPs need to come from reserved IP blocks, Passing value null or empty array will assign an IP address automatically.
     */
    readonly ips: string[];
    readonly ipv6CidrBlock: string;
    readonly ipv6Ips: string[];
    /**
     * The LAN ID the NIC will sit on.
     */
    readonly lan?: number;
    /**
     * The MAC address of the NIC.
     */
    readonly mac: string;
    /**
     * Specifies the name of the flow log.
     */
    readonly name?: string;
    /**
     * The PCI slot number of the Nic.
     */
    readonly pciSlot: number;
    /**
     * The ID of a server.
     */
    readonly serverId: string;
}
/**
 * The **Nic data source** can be used to search for and return existing nics.
 * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
 * When this happens, please refine your search string so that it is specific enough to return only one result.
 *
 * ## Example Usage
 */
export function getNicOutput(args: GetNicOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNicResult> {
    return pulumi.output(args).apply((a: any) => getNic(a, opts))
}

/**
 * A collection of arguments for invoking getNic.
 */
export interface GetNicOutputArgs {
    /**
     * [string] The ID of a Virtual Data Center.
     */
    datacenterId: pulumi.Input<string>;
    /**
     * Indicates if the NIC should get an IP address using DHCP (true) or not (false).
     */
    dhcp?: pulumi.Input<boolean>;
    dhcpv6?: pulumi.Input<boolean>;
    /**
     * If this resource is set to true and is nested under a server resource firewall, with open SSH port, resource must be nested under the NIC.
     */
    firewallActive?: pulumi.Input<boolean>;
    /**
     * The type of firewall rules that will be allowed on the NIC. If it is not specified it will take the default value INGRESS
     */
    firewallType?: pulumi.Input<string>;
    /**
     * ID of the nic you want to search for.
     *
     * `datacenterId` and either `name` or `id` must be provided.
     * If none, are provided, the datasource will return an error.
     */
    id?: pulumi.Input<string>;
    /**
     * Collection of IP addresses assigned to a nic. Explicitly assigned public IPs need to come from reserved IP blocks, Passing value null or empty array will assign an IP address automatically.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    ipv6CidrBlock?: pulumi.Input<string>;
    ipv6Ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LAN ID the NIC will sit on.
     */
    lan?: pulumi.Input<number>;
    /**
     * [string] The name of the LAN.
     */
    name?: pulumi.Input<string>;
    /**
     * [string] The ID of a server.
     */
    serverId: pulumi.Input<string>;
}
