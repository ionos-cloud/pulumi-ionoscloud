// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Dsaas
{
    public static class GetCluster
    {
        /// <summary>
        /// The **Dataplatform Cluster Data Source** can be used to search for and return an existing Dataplatform Cluster.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// When this happens, please refine your search and make sure that your resources have unique names.
        /// 
        /// ## Example Usage
        /// 
        /// ### By Name
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Dsaas.GetCluster.Invoke(new()
        ///     {
        ///         Name = "Dataplatform_Cluster_Example",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### By Name with Partial Match
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Dsaas.GetCluster.Invoke(new()
        ///     {
        ///         Name = "_Example",
        ///         PartialMatch = true,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetClusterResult> InvokeAsync(GetClusterArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterResult>("ionoscloud:dsaas/getCluster:getCluster", args ?? new GetClusterArgs(), options.WithDefaults());

        /// <summary>
        /// The **Dataplatform Cluster Data Source** can be used to search for and return an existing Dataplatform Cluster.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// When this happens, please refine your search and make sure that your resources have unique names.
        /// 
        /// ## Example Usage
        /// 
        /// ### By Name
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Dsaas.GetCluster.Invoke(new()
        ///     {
        ///         Name = "Dataplatform_Cluster_Example",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### By Name with Partial Match
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Dsaas.GetCluster.Invoke(new()
        ///     {
        ///         Name = "_Example",
        ///         PartialMatch = true,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterResult>("ionoscloud:dsaas/getCluster:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The **Dataplatform Cluster Data Source** can be used to search for and return an existing Dataplatform Cluster.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// When this happens, please refine your search and make sure that your resources have unique names.
        /// 
        /// ## Example Usage
        /// 
        /// ### By Name
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Dsaas.GetCluster.Invoke(new()
        ///     {
        ///         Name = "Dataplatform_Cluster_Example",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### By Name with Partial Match
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Dsaas.GetCluster.Invoke(new()
        ///     {
        ///         Name = "_Example",
        ///         PartialMatch = true,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterResult>("ionoscloud:dsaas/getCluster:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the cluster you want to search for.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partial_match` parameter is not set to true.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Whether partial matching is allowed or not when using name argument. Default value is false.
        /// 
        /// Either `id` or `name` must be provided. If none, or both are provided, the datasource will return an error.
        /// </summary>
        [Input("partialMatch")]
        public bool? PartialMatch { get; set; }

        public GetClusterArgs()
        {
        }
        public static new GetClusterArgs Empty => new GetClusterArgs();
    }

    public sealed class GetClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the cluster you want to search for.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partial_match` parameter is not set to true.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether partial matching is allowed or not when using name argument. Default value is false.
        /// 
        /// Either `id` or `name` must be provided. If none, or both are provided, the datasource will return an error.
        /// </summary>
        [Input("partialMatch")]
        public Input<bool>? PartialMatch { get; set; }

        public GetClusterInvokeArgs()
        {
        }
        public static new GetClusterInvokeArgs Empty => new GetClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterResult
    {
        /// <summary>
        /// base64 decoded cluster certificate authority data (provided as an attribute for direct use)
        /// </summary>
        public readonly string CaCrt;
        /// <summary>
        /// structured kubernetes config consisting of a list with 1 item with the following fields:
        /// * api_version - Kubernetes API Version
        /// * kind - "Config"
        /// * current-context - string
        /// * clusters - list of
        /// * name - name of cluster
        /// * cluster - map of
        /// * certificate-authority-data - **base64 decoded** cluster CA data
        /// * server -  server address in the form `https://host:port`
        /// * contexts - list of
        /// * name - context name
        /// * context - map of
        /// * cluster - cluster name
        /// * user - cluster user
        /// * users - list of
        /// * name - user name
        /// * user - map of
        /// * token - user token used for authentication
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterConfigResult> Configs;
        /// <summary>
        /// The UUID of the virtual data center (VDC) in which the cluster is provisioned.
        /// </summary>
        public readonly string DatacenterId;
        /// <summary>
        /// The UUID of the cluster.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Kubernetes configuration
        /// </summary>
        public readonly string KubeConfig;
        /// <summary>
        /// A list of LANs you want this node pool to be part of
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterLanResult> Lans;
        /// <summary>
        /// Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterMaintenanceWindowResult> MaintenanceWindows;
        /// <summary>
        /// The name of your cluster.
        /// </summary>
        public readonly string? Name;
        public readonly bool? PartialMatch;
        /// <summary>
        /// cluster server (same as `config[0].clusters[0].cluster.server` but provided as an attribute for ease of use)
        /// </summary>
        public readonly string Server;
        /// <summary>
        /// a convenience map to be search the token of a specific user
        /// * key - is the user name
        /// * value - is the token
        /// </summary>
        public readonly ImmutableDictionary<string, string> UserTokens;
        /// <summary>
        /// The version of the Data Platform.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetClusterResult(
            string caCrt,

            ImmutableArray<Outputs.GetClusterConfigResult> configs,

            string datacenterId,

            string? id,

            string kubeConfig,

            ImmutableArray<Outputs.GetClusterLanResult> lans,

            ImmutableArray<Outputs.GetClusterMaintenanceWindowResult> maintenanceWindows,

            string? name,

            bool? partialMatch,

            string server,

            ImmutableDictionary<string, string> userTokens,

            string version)
        {
            CaCrt = caCrt;
            Configs = configs;
            DatacenterId = datacenterId;
            Id = id;
            KubeConfig = kubeConfig;
            Lans = lans;
            MaintenanceWindows = maintenanceWindows;
            Name = name;
            PartialMatch = partialMatch;
            Server = server;
            UserTokens = userTokens;
            Version = version;
        }
    }
}
