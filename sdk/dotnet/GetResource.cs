// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud
{
    public static class GetResource
    {
        /// <summary>
        /// The **Resource data source** can be used to search for and return any existing IonosCloud resource and optionally their group associations.
        /// You can provide a string for the resource type (datacenter,image,snapshot,ipblock) and/or resource id parameters which will be queries against available resources.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// When this happens, please refine your search string so that it is specific enough to return only one result.
        /// 
        /// ## Example Usage
        /// 
        /// ### By Type
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as ionoscloud from "@pulumi/ionoscloud";
        /// 
        /// const example = ionoscloud.getResource({
        ///     resourceType: "datacenter",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_ionoscloud as ionoscloud
        /// 
        /// example = ionoscloud.get_resource(resource_type="datacenter")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.GetResource.Invoke(new()
        ///     {
        ///         ResourceType = "datacenter",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ionoscloud.GetResource(ctx, &amp;ionoscloud.GetResourceArgs{
        /// 			ResourceType: pulumi.StringRef("datacenter"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.ionoscloud.IonoscloudFunctions;
        /// import com.pulumi.ionoscloud.inputs.GetResourceArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = IonoscloudFunctions.getResource(GetResourceArgs.builder()
        ///             .resourceType("datacenter")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: ionoscloud:getResource
        ///       Arguments:
        ///         resourceType: datacenter
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetResourceResult> InvokeAsync(GetResourceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResourceResult>("ionoscloud:index/getResource:getResource", args ?? new GetResourceArgs(), options.WithDefaults());

        /// <summary>
        /// The **Resource data source** can be used to search for and return any existing IonosCloud resource and optionally their group associations.
        /// You can provide a string for the resource type (datacenter,image,snapshot,ipblock) and/or resource id parameters which will be queries against available resources.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// When this happens, please refine your search string so that it is specific enough to return only one result.
        /// 
        /// ## Example Usage
        /// 
        /// ### By Type
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as ionoscloud from "@pulumi/ionoscloud";
        /// 
        /// const example = ionoscloud.getResource({
        ///     resourceType: "datacenter",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_ionoscloud as ionoscloud
        /// 
        /// example = ionoscloud.get_resource(resource_type="datacenter")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.GetResource.Invoke(new()
        ///     {
        ///         ResourceType = "datacenter",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ionoscloud.GetResource(ctx, &amp;ionoscloud.GetResourceArgs{
        /// 			ResourceType: pulumi.StringRef("datacenter"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.ionoscloud.IonoscloudFunctions;
        /// import com.pulumi.ionoscloud.inputs.GetResourceArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = IonoscloudFunctions.getResource(GetResourceArgs.builder()
        ///             .resourceType("datacenter")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: ionoscloud:getResource
        ///       Arguments:
        ///         resourceType: datacenter
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetResourceResult> Invoke(GetResourceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourceResult>("ionoscloud:index/getResource:getResource", args ?? new GetResourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the specific resource to retrieve information about.
        /// </summary>
        [Input("resourceId")]
        public string? ResourceId { get; set; }

        /// <summary>
        /// The specific type of resources to retrieve information about.
        /// </summary>
        [Input("resourceType")]
        public string? ResourceType { get; set; }

        public GetResourceArgs()
        {
        }
        public static new GetResourceArgs Empty => new GetResourceArgs();
    }

    public sealed class GetResourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the specific resource to retrieve information about.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// The specific type of resources to retrieve information about.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        public GetResourceInvokeArgs()
        {
        }
        public static new GetResourceInvokeArgs Empty => new GetResourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourceResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResourceId;
        public readonly string? ResourceType;

        [OutputConstructor]
        private GetResourceResult(
            string id,

            string? resourceId,

            string? resourceType)
        {
            Id = id;
            ResourceId = resourceId;
            ResourceType = resourceType;
        }
    }
}
