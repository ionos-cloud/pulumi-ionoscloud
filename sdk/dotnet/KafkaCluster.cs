// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud
{
    /// <summary>
    /// Manages a **Kafka Cluster** on IonosCloud.
    /// 
    /// ## Example Usage
    /// 
    /// This resource will create an operational Kafka Cluster. After this section completes, the provisioner can be called.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ionoscloud = Pulumi.Ionoscloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Basic example
    ///     var exampleDatacenter = new Ionoscloud.Compute.Datacenter("exampleDatacenter", new()
    ///     {
    ///         Location = "de/fra",
    ///     });
    /// 
    ///     var exampleLan = new Ionoscloud.Compute.Lan("exampleLan", new()
    ///     {
    ///         DatacenterId = exampleDatacenter.Id,
    ///         Public = false,
    ///     });
    /// 
    ///     var exampleKafkaCluster = new Ionoscloud.KafkaCluster("exampleKafkaCluster", new()
    ///     {
    ///         Location = "de/fra",
    ///         Version = "3.7.0",
    ///         Size = "S",
    ///         Connections = new Ionoscloud.Inputs.KafkaClusterConnectionsArgs
    ///         {
    ///             DatacenterId = exampleDatacenter.Id,
    ///             LanId = exampleLan.Id,
    ///             BrokerAddresses = new[]
    ///             {
    ///                 "192.168.1.101/24",
    ///                 "192.168.1.102/24",
    ///                 "192.168.1.103/24",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Kafka Cluster can be imported using the `location` and `kafka cluster id`:
    /// 
    /// ```sh
    /// $ pulumi import ionoscloud:index/kafkaCluster:KafkaCluster mycluster {location}:{kafka cluster uuid}
    /// ```
    /// </summary>
    [IonoscloudResourceType("ionoscloud:index/kafkaCluster:KafkaCluster")]
    public partial class KafkaCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// [list] IP address and port of cluster brokers.
        /// </summary>
        [Output("brokerAddresses")]
        public Output<ImmutableArray<string>> BrokerAddresses { get; private set; } = null!;

        /// <summary>
        /// Connection information of the Kafka Cluster. Minimum items: 1, maximum items: 1.
        /// </summary>
        [Output("connections")]
        public Output<Outputs.KafkaClusterConnections> Connections { get; private set; } = null!;

        /// <summary>
        /// [string] The location of the Kafka Cluster. Possible values: `de/fra`, `de/txl`
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// [string] Name of the Kafka Cluster.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// [string] Size of the Kafka Cluster. Possible values: `XS`, `S`
        /// </summary>
        [Output("size")]
        public Output<string> Size { get; private set; } = null!;

        /// <summary>
        /// [string] Version of the Kafka Cluster. Possible values: `3.7.0`
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a KafkaCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KafkaCluster(string name, KafkaClusterArgs args, CustomResourceOptions? options = null)
            : base("ionoscloud:index/kafkaCluster:KafkaCluster", name, args ?? new KafkaClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KafkaCluster(string name, Input<string> id, KafkaClusterState? state = null, CustomResourceOptions? options = null)
            : base("ionoscloud:index/kafkaCluster:KafkaCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KafkaCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KafkaCluster Get(string name, Input<string> id, KafkaClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new KafkaCluster(name, id, state, options);
        }
    }

    public sealed class KafkaClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Connection information of the Kafka Cluster. Minimum items: 1, maximum items: 1.
        /// </summary>
        [Input("connections", required: true)]
        public Input<Inputs.KafkaClusterConnectionsArgs> Connections { get; set; } = null!;

        /// <summary>
        /// [string] The location of the Kafka Cluster. Possible values: `de/fra`, `de/txl`
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// [string] Name of the Kafka Cluster.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// [string] Size of the Kafka Cluster. Possible values: `XS`, `S`
        /// </summary>
        [Input("size", required: true)]
        public Input<string> Size { get; set; } = null!;

        /// <summary>
        /// [string] Version of the Kafka Cluster. Possible values: `3.7.0`
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public KafkaClusterArgs()
        {
        }
        public static new KafkaClusterArgs Empty => new KafkaClusterArgs();
    }

    public sealed class KafkaClusterState : global::Pulumi.ResourceArgs
    {
        [Input("brokerAddresses")]
        private InputList<string>? _brokerAddresses;

        /// <summary>
        /// [list] IP address and port of cluster brokers.
        /// </summary>
        public InputList<string> BrokerAddresses
        {
            get => _brokerAddresses ?? (_brokerAddresses = new InputList<string>());
            set => _brokerAddresses = value;
        }

        /// <summary>
        /// Connection information of the Kafka Cluster. Minimum items: 1, maximum items: 1.
        /// </summary>
        [Input("connections")]
        public Input<Inputs.KafkaClusterConnectionsGetArgs>? Connections { get; set; }

        /// <summary>
        /// [string] The location of the Kafka Cluster. Possible values: `de/fra`, `de/txl`
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// [string] Name of the Kafka Cluster.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// [string] Size of the Kafka Cluster. Possible values: `XS`, `S`
        /// </summary>
        [Input("size")]
        public Input<string>? Size { get; set; }

        /// <summary>
        /// [string] Version of the Kafka Cluster. Possible values: `3.7.0`
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public KafkaClusterState()
        {
        }
        public static new KafkaClusterState Empty => new KafkaClusterState();
    }
}
