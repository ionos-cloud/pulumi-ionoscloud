// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud
{
    public static class GetNfsCluster
    {
        /// <summary>
        /// Returns information about clusters of Network File Storage (NFS) on IonosCloud.
        /// </summary>
        public static Task<GetNfsClusterResult> InvokeAsync(GetNfsClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNfsClusterResult>("ionoscloud:index/getNfsCluster:getNfsCluster", args ?? new GetNfsClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Returns information about clusters of Network File Storage (NFS) on IonosCloud.
        /// </summary>
        public static Output<GetNfsClusterResult> Invoke(GetNfsClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNfsClusterResult>("ionoscloud:index/getNfsCluster:getNfsCluster", args ?? new GetNfsClusterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Returns information about clusters of Network File Storage (NFS) on IonosCloud.
        /// </summary>
        public static Output<GetNfsClusterResult> Invoke(GetNfsClusterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNfsClusterResult>("ionoscloud:index/getNfsCluster:getNfsCluster", args ?? new GetNfsClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNfsClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the Network File Storage cluster.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The location where the Network File Storage cluster is located.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// Name of the Network File Storage cluster.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Whether partial matching is allowed or not when using the name filter. Defaults to `false`.
        /// </summary>
        [Input("partialMatch")]
        public bool? PartialMatch { get; set; }

        public GetNfsClusterArgs()
        {
        }
        public static new GetNfsClusterArgs Empty => new GetNfsClusterArgs();
    }

    public sealed class GetNfsClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the Network File Storage cluster.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The location where the Network File Storage cluster is located.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Name of the Network File Storage cluster.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether partial matching is allowed or not when using the name filter. Defaults to `false`.
        /// </summary>
        [Input("partialMatch")]
        public Input<bool>? PartialMatch { get; set; }

        public GetNfsClusterInvokeArgs()
        {
        }
        public static new GetNfsClusterInvokeArgs Empty => new GetNfsClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetNfsClusterResult
    {
        /// <summary>
        /// A list of connections for the Network File Storage cluster. You can specify only one connection. Each connection supports the following:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNfsClusterConnectionResult> Connections;
        /// <summary>
        /// The ID of the Network File Storage cluster.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The location where the Network File Storage cluster is located.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of the Network File Storage cluster.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The NFS configuration for the Network File Storage cluster. Each NFS configuration supports the following:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNfsClusterNfResult> Nfs;
        public readonly bool? PartialMatch;
        /// <summary>
        /// The size of the Network File Storage cluster in TiB. Note that the cluster size cannot be reduced after provisioning. This value determines the billing fees. Default is `2`. The minimum value is `2` and the maximum value is `42`.
        /// </summary>
        public readonly int Size;

        [OutputConstructor]
        private GetNfsClusterResult(
            ImmutableArray<Outputs.GetNfsClusterConnectionResult> connections,

            string id,

            string location,

            string name,

            ImmutableArray<Outputs.GetNfsClusterNfResult> nfs,

            bool? partialMatch,

            int size)
        {
            Connections = connections;
            Id = id;
            Location = location;
            Name = name;
            Nfs = nfs;
            PartialMatch = partialMatch;
            Size = size;
        }
    }
}
