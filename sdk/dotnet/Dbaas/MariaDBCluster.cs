// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Dbaas
{
    [IonoscloudResourceType("ionoscloud:dbaas/mariaDBCluster:MariaDBCluster")]
    public partial class MariaDBCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The network connection for your cluster. Only one connection is allowed.
        /// </summary>
        [Output("connections")]
        public Output<Outputs.MariaDBClusterConnections> Connections { get; private set; } = null!;

        /// <summary>
        /// The number of CPU cores per instance.
        /// </summary>
        [Output("cores")]
        public Output<int> Cores { get; private set; } = null!;

        /// <summary>
        /// Credentials for the database user to be created.
        /// </summary>
        [Output("credentials")]
        public Output<Outputs.MariaDBClusterCredentials> Credentials { get; private set; } = null!;

        /// <summary>
        /// The friendly name of your cluster.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The DNS name pointing to your cluster.
        /// </summary>
        [Output("dnsName")]
        public Output<string> DnsName { get; private set; } = null!;

        /// <summary>
        /// The total number of instances in the cluster (one primary and n-1 secondary).
        /// </summary>
        [Output("instances")]
        public Output<int> Instances { get; private set; } = null!;

        /// <summary>
        /// The cluster location
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// A weekly 4 hour-long window, during which maintenance might occur.
        /// </summary>
        [Output("maintenanceWindow")]
        public Output<Outputs.MariaDBClusterMaintenanceWindow> MaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// The MariaDB version of your cluster.
        /// </summary>
        [Output("mariadbVersion")]
        public Output<string> MariadbVersion { get; private set; } = null!;

        /// <summary>
        /// The amount of memory per instance in gigabytes (GB).
        /// </summary>
        [Output("ram")]
        public Output<int> Ram { get; private set; } = null!;

        /// <summary>
        /// The amount of storage per instance in gigabytes (GB).
        /// </summary>
        [Output("storageSize")]
        public Output<int> StorageSize { get; private set; } = null!;


        /// <summary>
        /// Create a MariaDBCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MariaDBCluster(string name, MariaDBClusterArgs args, CustomResourceOptions? options = null)
            : base("ionoscloud:dbaas/mariaDBCluster:MariaDBCluster", name, args ?? new MariaDBClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MariaDBCluster(string name, Input<string> id, MariaDBClusterState? state = null, CustomResourceOptions? options = null)
            : base("ionoscloud:dbaas/mariaDBCluster:MariaDBCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MariaDBCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MariaDBCluster Get(string name, Input<string> id, MariaDBClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new MariaDBCluster(name, id, state, options);
        }
    }

    public sealed class MariaDBClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The network connection for your cluster. Only one connection is allowed.
        /// </summary>
        [Input("connections", required: true)]
        public Input<Inputs.MariaDBClusterConnectionsArgs> Connections { get; set; } = null!;

        /// <summary>
        /// The number of CPU cores per instance.
        /// </summary>
        [Input("cores", required: true)]
        public Input<int> Cores { get; set; } = null!;

        /// <summary>
        /// Credentials for the database user to be created.
        /// </summary>
        [Input("credentials", required: true)]
        public Input<Inputs.MariaDBClusterCredentialsArgs> Credentials { get; set; } = null!;

        /// <summary>
        /// The friendly name of your cluster.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The total number of instances in the cluster (one primary and n-1 secondary).
        /// </summary>
        [Input("instances", required: true)]
        public Input<int> Instances { get; set; } = null!;

        /// <summary>
        /// The cluster location
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A weekly 4 hour-long window, during which maintenance might occur.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.MariaDBClusterMaintenanceWindowArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// The MariaDB version of your cluster.
        /// </summary>
        [Input("mariadbVersion", required: true)]
        public Input<string> MariadbVersion { get; set; } = null!;

        /// <summary>
        /// The amount of memory per instance in gigabytes (GB).
        /// </summary>
        [Input("ram", required: true)]
        public Input<int> Ram { get; set; } = null!;

        /// <summary>
        /// The amount of storage per instance in gigabytes (GB).
        /// </summary>
        [Input("storageSize", required: true)]
        public Input<int> StorageSize { get; set; } = null!;

        public MariaDBClusterArgs()
        {
        }
        public static new MariaDBClusterArgs Empty => new MariaDBClusterArgs();
    }

    public sealed class MariaDBClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The network connection for your cluster. Only one connection is allowed.
        /// </summary>
        [Input("connections")]
        public Input<Inputs.MariaDBClusterConnectionsGetArgs>? Connections { get; set; }

        /// <summary>
        /// The number of CPU cores per instance.
        /// </summary>
        [Input("cores")]
        public Input<int>? Cores { get; set; }

        /// <summary>
        /// Credentials for the database user to be created.
        /// </summary>
        [Input("credentials")]
        public Input<Inputs.MariaDBClusterCredentialsGetArgs>? Credentials { get; set; }

        /// <summary>
        /// The friendly name of your cluster.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The DNS name pointing to your cluster.
        /// </summary>
        [Input("dnsName")]
        public Input<string>? DnsName { get; set; }

        /// <summary>
        /// The total number of instances in the cluster (one primary and n-1 secondary).
        /// </summary>
        [Input("instances")]
        public Input<int>? Instances { get; set; }

        /// <summary>
        /// The cluster location
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A weekly 4 hour-long window, during which maintenance might occur.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.MariaDBClusterMaintenanceWindowGetArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// The MariaDB version of your cluster.
        /// </summary>
        [Input("mariadbVersion")]
        public Input<string>? MariadbVersion { get; set; }

        /// <summary>
        /// The amount of memory per instance in gigabytes (GB).
        /// </summary>
        [Input("ram")]
        public Input<int>? Ram { get; set; }

        /// <summary>
        /// The amount of storage per instance in gigabytes (GB).
        /// </summary>
        [Input("storageSize")]
        public Input<int>? StorageSize { get; set; }

        public MariaDBClusterState()
        {
        }
        public static new MariaDBClusterState Empty => new MariaDBClusterState();
    }
}
