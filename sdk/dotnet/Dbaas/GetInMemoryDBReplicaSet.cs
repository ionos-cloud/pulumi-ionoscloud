// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Dbaas
{
    public static class GetInMemoryDBReplicaSet
    {
        public static Task<GetInMemoryDBReplicaSetResult> InvokeAsync(GetInMemoryDBReplicaSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInMemoryDBReplicaSetResult>("ionoscloud:dbaas/getInMemoryDBReplicaSet:getInMemoryDBReplicaSet", args ?? new GetInMemoryDBReplicaSetArgs(), options.WithDefaults());

        public static Output<GetInMemoryDBReplicaSetResult> Invoke(GetInMemoryDBReplicaSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInMemoryDBReplicaSetResult>("ionoscloud:dbaas/getInMemoryDBReplicaSet:getInMemoryDBReplicaSet", args ?? new GetInMemoryDBReplicaSetInvokeArgs(), options.WithDefaults());

        public static Output<GetInMemoryDBReplicaSetResult> Invoke(GetInMemoryDBReplicaSetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInMemoryDBReplicaSetResult>("ionoscloud:dbaas/getInMemoryDBReplicaSet:getInMemoryDBReplicaSet", args ?? new GetInMemoryDBReplicaSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInMemoryDBReplicaSetArgs : global::Pulumi.InvokeArgs
    {
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        public GetInMemoryDBReplicaSetArgs()
        {
        }
        public static new GetInMemoryDBReplicaSetArgs Empty => new GetInMemoryDBReplicaSetArgs();
    }

    public sealed class GetInMemoryDBReplicaSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        public GetInMemoryDBReplicaSetInvokeArgs()
        {
        }
        public static new GetInMemoryDBReplicaSetInvokeArgs Empty => new GetInMemoryDBReplicaSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetInMemoryDBReplicaSetResult
    {
        public readonly ImmutableArray<Outputs.GetInMemoryDBReplicaSetConnectionResult> Connections;
        public readonly ImmutableArray<Outputs.GetInMemoryDBReplicaSetCredentialResult> Credentials;
        public readonly string? DisplayName;
        public readonly string DnsName;
        public readonly string EvictionPolicy;
        public readonly string? Id;
        public readonly string Location;
        public readonly ImmutableArray<Outputs.GetInMemoryDBReplicaSetMaintenanceWindowResult> MaintenanceWindows;
        public readonly string PersistenceMode;
        public readonly int Replicas;
        public readonly ImmutableArray<Outputs.GetInMemoryDBReplicaSetResourceResult> Resources;
        public readonly string Version;

        [OutputConstructor]
        private GetInMemoryDBReplicaSetResult(
            ImmutableArray<Outputs.GetInMemoryDBReplicaSetConnectionResult> connections,

            ImmutableArray<Outputs.GetInMemoryDBReplicaSetCredentialResult> credentials,

            string? displayName,

            string dnsName,

            string evictionPolicy,

            string? id,

            string location,

            ImmutableArray<Outputs.GetInMemoryDBReplicaSetMaintenanceWindowResult> maintenanceWindows,

            string persistenceMode,

            int replicas,

            ImmutableArray<Outputs.GetInMemoryDBReplicaSetResourceResult> resources,

            string version)
        {
            Connections = connections;
            Credentials = credentials;
            DisplayName = displayName;
            DnsName = dnsName;
            EvictionPolicy = evictionPolicy;
            Id = id;
            Location = location;
            MaintenanceWindows = maintenanceWindows;
            PersistenceMode = persistenceMode;
            Replicas = replicas;
            Resources = resources;
            Version = version;
        }
    }
}
