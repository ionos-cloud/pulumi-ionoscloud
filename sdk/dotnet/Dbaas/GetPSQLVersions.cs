// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Dbaas
{
    public static class GetPSQLVersions
    {
        /// <summary>
        /// The **DbaaS Postgres Versions data source** can be used to search for and retrieve list of available postgres versions for a specific cluster or for all clusters.
        /// 
        /// ## Example Usage
        /// 
        /// ### Retrieve list of postgres versions for a specific cluster
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Dbaas.GetPSQLVersions.Invoke(new()
        ///     {
        ///         ClusterId = "cluster_id",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Retrieve list of postgres versions for all clusters
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Dbaas.GetPSQLVersions.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPSQLVersionsResult> InvokeAsync(GetPSQLVersionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPSQLVersionsResult>("ionoscloud:dbaas/getPSQLVersions:getPSQLVersions", args ?? new GetPSQLVersionsArgs(), options.WithDefaults());

        /// <summary>
        /// The **DbaaS Postgres Versions data source** can be used to search for and retrieve list of available postgres versions for a specific cluster or for all clusters.
        /// 
        /// ## Example Usage
        /// 
        /// ### Retrieve list of postgres versions for a specific cluster
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Dbaas.GetPSQLVersions.Invoke(new()
        ///     {
        ///         ClusterId = "cluster_id",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Retrieve list of postgres versions for all clusters
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Dbaas.GetPSQLVersions.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPSQLVersionsResult> Invoke(GetPSQLVersionsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPSQLVersionsResult>("ionoscloud:dbaas/getPSQLVersions:getPSQLVersions", args ?? new GetPSQLVersionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The **DbaaS Postgres Versions data source** can be used to search for and retrieve list of available postgres versions for a specific cluster or for all clusters.
        /// 
        /// ## Example Usage
        /// 
        /// ### Retrieve list of postgres versions for a specific cluster
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Dbaas.GetPSQLVersions.Invoke(new()
        ///     {
        ///         ClusterId = "cluster_id",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Retrieve list of postgres versions for all clusters
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Dbaas.GetPSQLVersions.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPSQLVersionsResult> Invoke(GetPSQLVersionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPSQLVersionsResult>("ionoscloud:dbaas/getPSQLVersions:getPSQLVersions", args ?? new GetPSQLVersionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPSQLVersionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique ID of the cluster.
        /// 
        /// If `cluster_id` is not provided the data source will return the list of postgres version for all cluster.
        /// </summary>
        [Input("clusterId")]
        public string? ClusterId { get; set; }

        public GetPSQLVersionsArgs()
        {
        }
        public static new GetPSQLVersionsArgs Empty => new GetPSQLVersionsArgs();
    }

    public sealed class GetPSQLVersionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique ID of the cluster.
        /// 
        /// If `cluster_id` is not provided the data source will return the list of postgres version for all cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        public GetPSQLVersionsInvokeArgs()
        {
        }
        public static new GetPSQLVersionsInvokeArgs Empty => new GetPSQLVersionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPSQLVersionsResult
    {
        /// <summary>
        /// Id of the cluster
        /// </summary>
        public readonly string? ClusterId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// list of PostgreSQL versions.
        /// </summary>
        public readonly ImmutableArray<string> PostgresVersions;

        [OutputConstructor]
        private GetPSQLVersionsResult(
            string? clusterId,

            string id,

            ImmutableArray<string> postgresVersions)
        {
            ClusterId = clusterId;
            Id = id;
            PostgresVersions = postgresVersions;
        }
    }
}
