// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Dbaas
{
    /// <summary>
    /// Manages a **DBaaS InMemoryDB Replica Set**.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ionoscloud = Pulumi.Ionoscloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Ionoscloud.Compute.Datacenter("example", new()
    ///     {
    ///         Name = "example",
    ///         Location = "de/txl",
    ///         Description = "Datacenter for DBaaS InMemoryDB replica sets",
    ///     });
    /// 
    ///     var exampleLan = new Ionoscloud.Compute.Lan("example", new()
    ///     {
    ///         DatacenterId = example.Id,
    ///         Public = false,
    ///         Name = "example",
    ///     });
    /// 
    ///     var exampleServer = new Ionoscloud.Compute.Server("example", new()
    ///     {
    ///         Name = "example",
    ///         DatacenterId = example.Id,
    ///         Cores = 2,
    ///         Ram = 2048,
    ///         AvailabilityZone = "ZONE_1",
    ///         CpuFamily = "INTEL_SKYLAKE",
    ///         ImageName = "rockylinux-8-GenericCloud-20230518",
    ///         ImagePassword = "password",
    ///         Volume = new Ionoscloud.Compute.Inputs.ServerVolumeArgs
    ///         {
    ///             Name = "example",
    ///             Size = 10,
    ///             DiskType = "SSD Standard",
    ///         },
    ///         Nic = new Ionoscloud.Compute.Inputs.ServerNicArgs
    ///         {
    ///             Lan = exampleLan.Id,
    ///             Name = "example",
    ///             Dhcp = true,
    ///         },
    ///     });
    /// 
    ///     var exampleInMemoryDBReplicaSet = new Ionoscloud.Dbaas.InMemoryDBReplicaSet("example", new()
    ///     {
    ///         Location = example.Location,
    ///         DisplayName = "ExampleReplicaSet",
    ///         Version = "7.2",
    ///         Replicas = 4,
    ///         Resources = new Ionoscloud.Dbaas.Inputs.InMemoryDBReplicaSetResourcesArgs
    ///         {
    ///             Cores = 1,
    ///             Ram = 6,
    ///         },
    ///         PersistenceMode = "RDB",
    ///         EvictionPolicy = "noeviction",
    ///         Connections = new Ionoscloud.Dbaas.Inputs.InMemoryDBReplicaSetConnectionsArgs
    ///         {
    ///             DatacenterId = example.Id,
    ///             LanId = exampleLan.Id,
    ///             Cidr = "database_ip_cidr_from_nic",
    ///         },
    ///         MaintenanceWindow = new Ionoscloud.Dbaas.Inputs.InMemoryDBReplicaSetMaintenanceWindowArgs
    ///         {
    ///             DayOfTheWeek = "Monday",
    ///             Time = "10:00:00",
    ///         },
    ///         Credentials = new Ionoscloud.Dbaas.Inputs.InMemoryDBReplicaSetCredentialsArgs
    ///         {
    ///             Username = "myuser",
    ///             PlainTextPassword = "testpassword",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Resource DBaaS InMemoryDB Replica Set can be imported using the `replicaset_id` and the `location`, separated by `:`, e.g:
    /// 
    /// ```sh
    /// $ pulumi import ionoscloud:dbaas/inMemoryDBReplicaSet:InMemoryDBReplicaSet example location:replicaSet uuid
    /// ```
    /// </summary>
    [IonoscloudResourceType("ionoscloud:dbaas/inMemoryDBReplicaSet:InMemoryDBReplicaSet")]
    public partial class InMemoryDBReplicaSet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// [object] The network connection for your replica set. Only one connection is allowed. Updates to the value of the fields force the replica set to be re-created.
        /// </summary>
        [Output("connections")]
        public Output<Outputs.InMemoryDBReplicaSetConnections> Connections { get; private set; } = null!;

        /// <summary>
        /// [object] Credentials for the InMemoryDB replicaset, only one type of password can be used since they are mutually exclusive. These values are used to create the initial InMemoryDB user, updating any of these will force recreation of the replica set resource.
        /// </summary>
        [Output("credentials")]
        public Output<Outputs.InMemoryDBReplicaSetCredentials> Credentials { get; private set; } = null!;

        /// <summary>
        /// [string] The human-readable name of your replica set.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// [string] The DNS name pointing to your replica set. Will be used to connect to the active/standalone instance.
        /// 
        /// &gt; **âš  NOTE:** `IONOS_API_URL_INMEMORYDB` can be used to set a custom API URL for the resource. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
        /// </summary>
        [Output("dnsName")]
        public Output<string> DnsName { get; private set; } = null!;

        /// <summary>
        /// [string] The eviction policy for the replica set, possible values are:
        /// </summary>
        [Output("evictionPolicy")]
        public Output<string> EvictionPolicy { get; private set; } = null!;

        /// <summary>
        /// [string] The ID of a snapshot to restore the replica set from. If set, the replica set will be created from the snapshot.
        /// </summary>
        [Output("initialSnapshotId")]
        public Output<string?> InitialSnapshotId { get; private set; } = null!;

        /// <summary>
        /// [string] The location of your replica set. Updates to the value of the field force the replica set to be re-created. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// (Computed) A weekly 4 hour-long window, during which maintenance might occur.
        /// </summary>
        [Output("maintenanceWindow")]
        public Output<Outputs.InMemoryDBReplicaSetMaintenanceWindow> MaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// [string] Specifies How and If data is persisted, possible values are:
        /// * `None` - Data is inMemory only and will not be persisted. Useful for cache only applications.
        /// * `AOF` - (Append Only File) AOF persistence logs every write operation received by the server. These operations can then be replayed again at server startup, reconstructing the original dataset. Commands are logged using the same format as the InMemoryDB protocol itself.
        /// * `RDB` - RDB persistence performs snapshots of the current in memory state.
        /// * `RDB_AOF` - Both RDB and AOF persistence are enabled.
        /// </summary>
        [Output("persistenceMode")]
        public Output<string> PersistenceMode { get; private set; } = null!;

        /// <summary>
        /// [int] The total number of replicas in the replica set (one active and n-1 passive). In case of a standalone instance, the value is 1. In all other cases, the value is &gt; 1. The replicas will not be available as read replicas, they are only standby for a failure of the active instance.
        /// </summary>
        [Output("replicas")]
        public Output<int> Replicas { get; private set; } = null!;

        /// <summary>
        /// [object] The resources of the individual replicas.
        /// </summary>
        [Output("resources")]
        public Output<Outputs.InMemoryDBReplicaSetResources> Resources { get; private set; } = null!;

        /// <summary>
        /// [string] The InMemoryDB version of your replica set.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a InMemoryDBReplicaSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InMemoryDBReplicaSet(string name, InMemoryDBReplicaSetArgs args, CustomResourceOptions? options = null)
            : base("ionoscloud:dbaas/inMemoryDBReplicaSet:InMemoryDBReplicaSet", name, args ?? new InMemoryDBReplicaSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InMemoryDBReplicaSet(string name, Input<string> id, InMemoryDBReplicaSetState? state = null, CustomResourceOptions? options = null)
            : base("ionoscloud:dbaas/inMemoryDBReplicaSet:InMemoryDBReplicaSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InMemoryDBReplicaSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InMemoryDBReplicaSet Get(string name, Input<string> id, InMemoryDBReplicaSetState? state = null, CustomResourceOptions? options = null)
        {
            return new InMemoryDBReplicaSet(name, id, state, options);
        }
    }

    public sealed class InMemoryDBReplicaSetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [object] The network connection for your replica set. Only one connection is allowed. Updates to the value of the fields force the replica set to be re-created.
        /// </summary>
        [Input("connections", required: true)]
        public Input<Inputs.InMemoryDBReplicaSetConnectionsArgs> Connections { get; set; } = null!;

        /// <summary>
        /// [object] Credentials for the InMemoryDB replicaset, only one type of password can be used since they are mutually exclusive. These values are used to create the initial InMemoryDB user, updating any of these will force recreation of the replica set resource.
        /// </summary>
        [Input("credentials", required: true)]
        public Input<Inputs.InMemoryDBReplicaSetCredentialsArgs> Credentials { get; set; } = null!;

        /// <summary>
        /// [string] The human-readable name of your replica set.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// [string] The eviction policy for the replica set, possible values are:
        /// </summary>
        [Input("evictionPolicy", required: true)]
        public Input<string> EvictionPolicy { get; set; } = null!;

        /// <summary>
        /// [string] The ID of a snapshot to restore the replica set from. If set, the replica set will be created from the snapshot.
        /// </summary>
        [Input("initialSnapshotId")]
        public Input<string>? InitialSnapshotId { get; set; }

        /// <summary>
        /// [string] The location of your replica set. Updates to the value of the field force the replica set to be re-created. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// (Computed) A weekly 4 hour-long window, during which maintenance might occur.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.InMemoryDBReplicaSetMaintenanceWindowArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// [string] Specifies How and If data is persisted, possible values are:
        /// * `None` - Data is inMemory only and will not be persisted. Useful for cache only applications.
        /// * `AOF` - (Append Only File) AOF persistence logs every write operation received by the server. These operations can then be replayed again at server startup, reconstructing the original dataset. Commands are logged using the same format as the InMemoryDB protocol itself.
        /// * `RDB` - RDB persistence performs snapshots of the current in memory state.
        /// * `RDB_AOF` - Both RDB and AOF persistence are enabled.
        /// </summary>
        [Input("persistenceMode", required: true)]
        public Input<string> PersistenceMode { get; set; } = null!;

        /// <summary>
        /// [int] The total number of replicas in the replica set (one active and n-1 passive). In case of a standalone instance, the value is 1. In all other cases, the value is &gt; 1. The replicas will not be available as read replicas, they are only standby for a failure of the active instance.
        /// </summary>
        [Input("replicas", required: true)]
        public Input<int> Replicas { get; set; } = null!;

        /// <summary>
        /// [object] The resources of the individual replicas.
        /// </summary>
        [Input("resources", required: true)]
        public Input<Inputs.InMemoryDBReplicaSetResourcesArgs> Resources { get; set; } = null!;

        /// <summary>
        /// [string] The InMemoryDB version of your replica set.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public InMemoryDBReplicaSetArgs()
        {
        }
        public static new InMemoryDBReplicaSetArgs Empty => new InMemoryDBReplicaSetArgs();
    }

    public sealed class InMemoryDBReplicaSetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [object] The network connection for your replica set. Only one connection is allowed. Updates to the value of the fields force the replica set to be re-created.
        /// </summary>
        [Input("connections")]
        public Input<Inputs.InMemoryDBReplicaSetConnectionsGetArgs>? Connections { get; set; }

        /// <summary>
        /// [object] Credentials for the InMemoryDB replicaset, only one type of password can be used since they are mutually exclusive. These values are used to create the initial InMemoryDB user, updating any of these will force recreation of the replica set resource.
        /// </summary>
        [Input("credentials")]
        public Input<Inputs.InMemoryDBReplicaSetCredentialsGetArgs>? Credentials { get; set; }

        /// <summary>
        /// [string] The human-readable name of your replica set.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// [string] The DNS name pointing to your replica set. Will be used to connect to the active/standalone instance.
        /// 
        /// &gt; **âš  NOTE:** `IONOS_API_URL_INMEMORYDB` can be used to set a custom API URL for the resource. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
        /// </summary>
        [Input("dnsName")]
        public Input<string>? DnsName { get; set; }

        /// <summary>
        /// [string] The eviction policy for the replica set, possible values are:
        /// </summary>
        [Input("evictionPolicy")]
        public Input<string>? EvictionPolicy { get; set; }

        /// <summary>
        /// [string] The ID of a snapshot to restore the replica set from. If set, the replica set will be created from the snapshot.
        /// </summary>
        [Input("initialSnapshotId")]
        public Input<string>? InitialSnapshotId { get; set; }

        /// <summary>
        /// [string] The location of your replica set. Updates to the value of the field force the replica set to be re-created. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// (Computed) A weekly 4 hour-long window, during which maintenance might occur.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.InMemoryDBReplicaSetMaintenanceWindowGetArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// [string] Specifies How and If data is persisted, possible values are:
        /// * `None` - Data is inMemory only and will not be persisted. Useful for cache only applications.
        /// * `AOF` - (Append Only File) AOF persistence logs every write operation received by the server. These operations can then be replayed again at server startup, reconstructing the original dataset. Commands are logged using the same format as the InMemoryDB protocol itself.
        /// * `RDB` - RDB persistence performs snapshots of the current in memory state.
        /// * `RDB_AOF` - Both RDB and AOF persistence are enabled.
        /// </summary>
        [Input("persistenceMode")]
        public Input<string>? PersistenceMode { get; set; }

        /// <summary>
        /// [int] The total number of replicas in the replica set (one active and n-1 passive). In case of a standalone instance, the value is 1. In all other cases, the value is &gt; 1. The replicas will not be available as read replicas, they are only standby for a failure of the active instance.
        /// </summary>
        [Input("replicas")]
        public Input<int>? Replicas { get; set; }

        /// <summary>
        /// [object] The resources of the individual replicas.
        /// </summary>
        [Input("resources")]
        public Input<Inputs.InMemoryDBReplicaSetResourcesGetArgs>? Resources { get; set; }

        /// <summary>
        /// [string] The InMemoryDB version of your replica set.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public InMemoryDBReplicaSetState()
        {
        }
        public static new InMemoryDBReplicaSetState Empty => new InMemoryDBReplicaSetState();
    }
}
