// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud
{
    [IonoscloudResourceType("ionoscloud:index/autoCertificateProvider:AutoCertificateProvider")]
    public partial class AutoCertificateProvider : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The email address of the certificate requester
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        [Output("externalAccountBinding")]
        public Output<Outputs.AutoCertificateProviderExternalAccountBinding?> ExternalAccountBinding { get; private set; } = null!;

        /// <summary>
        /// The location of the certificate provider
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the certificate provider
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The URL of the certificate provider
        /// </summary>
        [Output("server")]
        public Output<string> Server { get; private set; } = null!;


        /// <summary>
        /// Create a AutoCertificateProvider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AutoCertificateProvider(string name, AutoCertificateProviderArgs args, CustomResourceOptions? options = null)
            : base("ionoscloud:index/autoCertificateProvider:AutoCertificateProvider", name, args ?? new AutoCertificateProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AutoCertificateProvider(string name, Input<string> id, AutoCertificateProviderState? state = null, CustomResourceOptions? options = null)
            : base("ionoscloud:index/autoCertificateProvider:AutoCertificateProvider", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/ionos-cloud/pulumi-ionoscloud/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AutoCertificateProvider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AutoCertificateProvider Get(string name, Input<string> id, AutoCertificateProviderState? state = null, CustomResourceOptions? options = null)
        {
            return new AutoCertificateProvider(name, id, state, options);
        }
    }

    public sealed class AutoCertificateProviderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The email address of the certificate requester
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        [Input("externalAccountBinding")]
        public Input<Inputs.AutoCertificateProviderExternalAccountBindingArgs>? ExternalAccountBinding { get; set; }

        /// <summary>
        /// The location of the certificate provider
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The name of the certificate provider
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The URL of the certificate provider
        /// </summary>
        [Input("server", required: true)]
        public Input<string> Server { get; set; } = null!;

        public AutoCertificateProviderArgs()
        {
        }
        public static new AutoCertificateProviderArgs Empty => new AutoCertificateProviderArgs();
    }

    public sealed class AutoCertificateProviderState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The email address of the certificate requester
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        [Input("externalAccountBinding")]
        public Input<Inputs.AutoCertificateProviderExternalAccountBindingGetArgs>? ExternalAccountBinding { get; set; }

        /// <summary>
        /// The location of the certificate provider
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the certificate provider
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The URL of the certificate provider
        /// </summary>
        [Input("server")]
        public Input<string>? Server { get; set; }

        public AutoCertificateProviderState()
        {
        }
        public static new AutoCertificateProviderState Empty => new AutoCertificateProviderState();
    }
}
