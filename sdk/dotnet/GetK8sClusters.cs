// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud
{
    public static class GetK8sClusters
    {
        public static Task<GetK8sClustersResult> InvokeAsync(GetK8sClustersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetK8sClustersResult>("ionoscloud:index/getK8sClusters:getK8sClusters", args ?? new GetK8sClustersArgs(), options.WithDefaults());

        public static Output<GetK8sClustersResult> Invoke(GetK8sClustersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetK8sClustersResult>("ionoscloud:index/getK8sClusters:getK8sClusters", args ?? new GetK8sClustersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetK8sClustersArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetK8sClustersFilterArgs>? _filters;
        public List<Inputs.GetK8sClustersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetK8sClustersFilterArgs>());
            set => _filters = value;
        }

        public GetK8sClustersArgs()
        {
        }
        public static new GetK8sClustersArgs Empty => new GetK8sClustersArgs();
    }

    public sealed class GetK8sClustersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetK8sClustersFilterInputArgs>? _filters;
        public InputList<Inputs.GetK8sClustersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetK8sClustersFilterInputArgs>());
            set => _filters = value;
        }

        public GetK8sClustersInvokeArgs()
        {
        }
        public static new GetK8sClustersInvokeArgs Empty => new GetK8sClustersInvokeArgs();
    }


    [OutputType]
    public sealed class GetK8sClustersResult
    {
        public readonly ImmutableArray<Outputs.GetK8sClustersClusterResult> Clusters;
        public readonly int Entries;
        public readonly ImmutableArray<Outputs.GetK8sClustersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetK8sClustersResult(
            ImmutableArray<Outputs.GetK8sClustersClusterResult> clusters,

            int entries,

            ImmutableArray<Outputs.GetK8sClustersFilterResult> filters,

            string id)
        {
            Clusters = clusters;
            Entries = entries;
            Filters = filters;
            Id = id;
        }
    }
}
