// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Creg
{
    [IonoscloudResourceType("ionoscloud:creg/registry:Registry")]
    public partial class Registry : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The subnet CIDRs that are allowed to connect to the registry. Specify 'a.b.c.d/32' for an individual IP address.
        /// __Note__: If this list is empty or not set, there are no restrictions.
        /// </summary>
        [Output("apiSubnetAllowLists")]
        public Output<ImmutableArray<string>> ApiSubnetAllowLists { get; private set; } = null!;

        [Output("features")]
        public Output<Outputs.RegistryFeatures> Features { get; private set; } = null!;

        [Output("garbageCollectionSchedule")]
        public Output<Outputs.RegistryGarbageCollectionSchedule> GarbageCollectionSchedule { get; private set; } = null!;

        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("storageUsages")]
        public Output<ImmutableArray<Outputs.RegistryStorageUsage>> StorageUsages { get; private set; } = null!;


        /// <summary>
        /// Create a Registry resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Registry(string name, RegistryArgs args, CustomResourceOptions? options = null)
            : base("ionoscloud:creg/registry:Registry", name, args ?? new RegistryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Registry(string name, Input<string> id, RegistryState? state = null, CustomResourceOptions? options = null)
            : base("ionoscloud:creg/registry:Registry", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Registry resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Registry Get(string name, Input<string> id, RegistryState? state = null, CustomResourceOptions? options = null)
        {
            return new Registry(name, id, state, options);
        }
    }

    public sealed class RegistryArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiSubnetAllowLists")]
        private InputList<string>? _apiSubnetAllowLists;

        /// <summary>
        /// The subnet CIDRs that are allowed to connect to the registry. Specify 'a.b.c.d/32' for an individual IP address.
        /// __Note__: If this list is empty or not set, there are no restrictions.
        /// </summary>
        public InputList<string> ApiSubnetAllowLists
        {
            get => _apiSubnetAllowLists ?? (_apiSubnetAllowLists = new InputList<string>());
            set => _apiSubnetAllowLists = value;
        }

        [Input("features")]
        public Input<Inputs.RegistryFeaturesArgs>? Features { get; set; }

        [Input("garbageCollectionSchedule")]
        public Input<Inputs.RegistryGarbageCollectionScheduleArgs>? GarbageCollectionSchedule { get; set; }

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        public RegistryArgs()
        {
        }
        public static new RegistryArgs Empty => new RegistryArgs();
    }

    public sealed class RegistryState : global::Pulumi.ResourceArgs
    {
        [Input("apiSubnetAllowLists")]
        private InputList<string>? _apiSubnetAllowLists;

        /// <summary>
        /// The subnet CIDRs that are allowed to connect to the registry. Specify 'a.b.c.d/32' for an individual IP address.
        /// __Note__: If this list is empty or not set, there are no restrictions.
        /// </summary>
        public InputList<string> ApiSubnetAllowLists
        {
            get => _apiSubnetAllowLists ?? (_apiSubnetAllowLists = new InputList<string>());
            set => _apiSubnetAllowLists = value;
        }

        [Input("features")]
        public Input<Inputs.RegistryFeaturesGetArgs>? Features { get; set; }

        [Input("garbageCollectionSchedule")]
        public Input<Inputs.RegistryGarbageCollectionScheduleGetArgs>? GarbageCollectionSchedule { get; set; }

        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("storageUsages")]
        private InputList<Inputs.RegistryStorageUsageGetArgs>? _storageUsages;
        public InputList<Inputs.RegistryStorageUsageGetArgs> StorageUsages
        {
            get => _storageUsages ?? (_storageUsages = new InputList<Inputs.RegistryStorageUsageGetArgs>());
            set => _storageUsages = value;
        }

        public RegistryState()
        {
        }
        public static new RegistryState Empty => new RegistryState();
    }
}
