// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Creg
{
    public static class GetRegistryToken
    {
        public static Task<GetRegistryTokenResult> InvokeAsync(GetRegistryTokenArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegistryTokenResult>("ionoscloud:creg/getRegistryToken:getRegistryToken", args ?? new GetRegistryTokenArgs(), options.WithDefaults());

        public static Output<GetRegistryTokenResult> Invoke(GetRegistryTokenInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegistryTokenResult>("ionoscloud:creg/getRegistryToken:getRegistryToken", args ?? new GetRegistryTokenInvokeArgs(), options.WithDefaults());

        public static Output<GetRegistryTokenResult> Invoke(GetRegistryTokenInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegistryTokenResult>("ionoscloud:creg/getRegistryToken:getRegistryToken", args ?? new GetRegistryTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegistryTokenArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("partialMatch")]
        public bool? PartialMatch { get; set; }

        [Input("registryId", required: true)]
        public string RegistryId { get; set; } = null!;

        public GetRegistryTokenArgs()
        {
        }
        public static new GetRegistryTokenArgs Empty => new GetRegistryTokenArgs();
    }

    public sealed class GetRegistryTokenInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("partialMatch")]
        public Input<bool>? PartialMatch { get; set; }

        [Input("registryId", required: true)]
        public Input<string> RegistryId { get; set; } = null!;

        public GetRegistryTokenInvokeArgs()
        {
        }
        public static new GetRegistryTokenInvokeArgs Empty => new GetRegistryTokenInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegistryTokenResult
    {
        public readonly ImmutableArray<Outputs.GetRegistryTokenCredentialResult> Credentials;
        public readonly string ExpiryDate;
        public readonly string? Id;
        public readonly string? Name;
        public readonly bool? PartialMatch;
        public readonly string RegistryId;
        public readonly ImmutableArray<Outputs.GetRegistryTokenScopeResult> Scopes;
        public readonly string Status;

        [OutputConstructor]
        private GetRegistryTokenResult(
            ImmutableArray<Outputs.GetRegistryTokenCredentialResult> credentials,

            string expiryDate,

            string? id,

            string? name,

            bool? partialMatch,

            string registryId,

            ImmutableArray<Outputs.GetRegistryTokenScopeResult> scopes,

            string status)
        {
            Credentials = credentials;
            ExpiryDate = expiryDate;
            Id = id;
            Name = name;
            PartialMatch = partialMatch;
            RegistryId = registryId;
            Scopes = scopes;
            Status = status;
        }
    }
}
