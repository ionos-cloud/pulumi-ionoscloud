// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud
{
    public static class GetIpfailover
    {
        /// <summary>
        /// The **IP Failover data source** can be used to search for and return an existing IP Failover object.
        /// You need to provide the datacenter_id and the id of the lan to get the ip failover object for the provided datacenter.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// </summary>
        public static Task<GetIpfailoverResult> InvokeAsync(GetIpfailoverArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpfailoverResult>("ionoscloud:index/getIpfailover:getIpfailover", args ?? new GetIpfailoverArgs(), options.WithDefaults());

        /// <summary>
        /// The **IP Failover data source** can be used to search for and return an existing IP Failover object.
        /// You need to provide the datacenter_id and the id of the lan to get the ip failover object for the provided datacenter.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// </summary>
        public static Output<GetIpfailoverResult> Invoke(GetIpfailoverInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpfailoverResult>("ionoscloud:index/getIpfailover:getIpfailover", args ?? new GetIpfailoverInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The **IP Failover data source** can be used to search for and return an existing IP Failover object.
        /// You need to provide the datacenter_id and the id of the lan to get the ip failover object for the provided datacenter.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// </summary>
        public static Output<GetIpfailoverResult> Invoke(GetIpfailoverInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpfailoverResult>("ionoscloud:index/getIpfailover:getIpfailover", args ?? new GetIpfailoverInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpfailoverArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the datacenter containing the ip failover datasource
        /// </summary>
        [Input("datacenterId", required: true)]
        public string DatacenterId { get; set; } = null!;

        /// <summary>
        /// The reserved IP address to be used in the IP failover group.
        /// </summary>
        [Input("ip", required: true)]
        public string Ip { get; set; } = null!;

        /// <summary>
        /// The ID of a LAN.
        /// </summary>
        [Input("lanId", required: true)]
        public string LanId { get; set; } = null!;

        public GetIpfailoverArgs()
        {
        }
        public static new GetIpfailoverArgs Empty => new GetIpfailoverArgs();
    }

    public sealed class GetIpfailoverInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the datacenter containing the ip failover datasource
        /// </summary>
        [Input("datacenterId", required: true)]
        public Input<string> DatacenterId { get; set; } = null!;

        /// <summary>
        /// The reserved IP address to be used in the IP failover group.
        /// </summary>
        [Input("ip", required: true)]
        public Input<string> Ip { get; set; } = null!;

        /// <summary>
        /// The ID of a LAN.
        /// </summary>
        [Input("lanId", required: true)]
        public Input<string> LanId { get; set; } = null!;

        public GetIpfailoverInvokeArgs()
        {
        }
        public static new GetIpfailoverInvokeArgs Empty => new GetIpfailoverInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpfailoverResult
    {
        /// <summary>
        /// The ID of a Data Center.
        /// </summary>
        public readonly string DatacenterId;
        public readonly string Id;
        /// <summary>
        /// The reserved IP address to be used in the IP failover group.
        /// </summary>
        public readonly string Ip;
        /// <summary>
        /// The ID of a LAN.
        /// </summary>
        public readonly string LanId;
        /// <summary>
        /// The ID of a NIC.
        /// </summary>
        public readonly string Nicuuid;

        [OutputConstructor]
        private GetIpfailoverResult(
            string datacenterId,

            string id,

            string ip,

            string lanId,

            string nicuuid)
        {
            DatacenterId = datacenterId;
            Id = id;
            Ip = ip;
            LanId = lanId;
            Nicuuid = nicuuid;
        }
    }
}
