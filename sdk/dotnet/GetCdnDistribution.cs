// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud
{
    public static class GetCdnDistribution
    {
        /// <summary>
        /// The Distribution data source can be used to search for and return an existing Distributions.
        /// You can provide a string for the domain parameter which will be compared with provisioned Distributions.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// When this happens, please refine your search and make sure that your resources have unique domains.
        /// 
        /// ## Example Usage
        /// 
        /// ### By Domain
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as ionoscloud from "@pulumi/ionoscloud";
        /// 
        /// const example = ionoscloud.getCdnDistribution({
        ///     domain: "example.com",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_ionoscloud as ionoscloud
        /// 
        /// example = ionoscloud.get_cdn_distribution(domain="example.com")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.GetCdnDistribution.Invoke(new()
        ///     {
        ///         Domain = "example.com",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ionoscloud.LookupCdnDistribution(ctx, &amp;ionoscloud.LookupCdnDistributionArgs{
        /// 			Domain: pulumi.StringRef("example.com"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.ionoscloud.IonoscloudFunctions;
        /// import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
        ///             .domain("example.com")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: ionoscloud:getCdnDistribution
        ///       Arguments:
        ///         domain: example.com
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ### By Domain with Partial Match
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as ionoscloud from "@pulumi/ionoscloud";
        /// 
        /// const example = ionoscloud.getCdnDistribution({
        ///     domain: "example",
        ///     partialMatch: true,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_ionoscloud as ionoscloud
        /// 
        /// example = ionoscloud.get_cdn_distribution(domain="example",
        ///     partial_match=True)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.GetCdnDistribution.Invoke(new()
        ///     {
        ///         Domain = "example",
        ///         PartialMatch = true,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ionoscloud.LookupCdnDistribution(ctx, &amp;ionoscloud.LookupCdnDistributionArgs{
        /// 			Domain:       pulumi.StringRef("example"),
        /// 			PartialMatch: pulumi.BoolRef(true),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.ionoscloud.IonoscloudFunctions;
        /// import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
        ///             .domain("example")
        ///             .partialMatch(true)
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: ionoscloud:getCdnDistribution
        ///       Arguments:
        ///         domain: example
        ///         partialMatch: true
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetCdnDistributionResult> InvokeAsync(GetCdnDistributionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCdnDistributionResult>("ionoscloud:index/getCdnDistribution:getCdnDistribution", args ?? new GetCdnDistributionArgs(), options.WithDefaults());

        /// <summary>
        /// The Distribution data source can be used to search for and return an existing Distributions.
        /// You can provide a string for the domain parameter which will be compared with provisioned Distributions.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// When this happens, please refine your search and make sure that your resources have unique domains.
        /// 
        /// ## Example Usage
        /// 
        /// ### By Domain
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as ionoscloud from "@pulumi/ionoscloud";
        /// 
        /// const example = ionoscloud.getCdnDistribution({
        ///     domain: "example.com",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_ionoscloud as ionoscloud
        /// 
        /// example = ionoscloud.get_cdn_distribution(domain="example.com")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.GetCdnDistribution.Invoke(new()
        ///     {
        ///         Domain = "example.com",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ionoscloud.LookupCdnDistribution(ctx, &amp;ionoscloud.LookupCdnDistributionArgs{
        /// 			Domain: pulumi.StringRef("example.com"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.ionoscloud.IonoscloudFunctions;
        /// import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
        ///             .domain("example.com")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: ionoscloud:getCdnDistribution
        ///       Arguments:
        ///         domain: example.com
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ### By Domain with Partial Match
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as ionoscloud from "@pulumi/ionoscloud";
        /// 
        /// const example = ionoscloud.getCdnDistribution({
        ///     domain: "example",
        ///     partialMatch: true,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_ionoscloud as ionoscloud
        /// 
        /// example = ionoscloud.get_cdn_distribution(domain="example",
        ///     partial_match=True)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.GetCdnDistribution.Invoke(new()
        ///     {
        ///         Domain = "example",
        ///         PartialMatch = true,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ionoscloud.LookupCdnDistribution(ctx, &amp;ionoscloud.LookupCdnDistributionArgs{
        /// 			Domain:       pulumi.StringRef("example"),
        /// 			PartialMatch: pulumi.BoolRef(true),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.ionoscloud.IonoscloudFunctions;
        /// import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
        ///             .domain("example")
        ///             .partialMatch(true)
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: ionoscloud:getCdnDistribution
        ///       Arguments:
        ///         domain: example
        ///         partialMatch: true
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetCdnDistributionResult> Invoke(GetCdnDistributionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCdnDistributionResult>("ionoscloud:index/getCdnDistribution:getCdnDistribution", args ?? new GetCdnDistributionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCdnDistributionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Domain of an existing distribution that you want to search for. Search by domain is case-insensitive. The whole resource domain is required if `partial_match` parameter is not set to true.
        /// </summary>
        [Input("domain")]
        public string? Domain { get; set; }

        /// <summary>
        /// ID of the distribution you want to search for.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Whether partial matching is allowed or not when using domain argument. Default value is false.
        /// 
        /// Either `domain` or `id` must be provided. If none, or both of `domain` and `id` are provided, the datasource will return an error.
        /// </summary>
        [Input("partialMatch")]
        public bool? PartialMatch { get; set; }

        public GetCdnDistributionArgs()
        {
        }
        public static new GetCdnDistributionArgs Empty => new GetCdnDistributionArgs();
    }

    public sealed class GetCdnDistributionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Domain of an existing distribution that you want to search for. Search by domain is case-insensitive. The whole resource domain is required if `partial_match` parameter is not set to true.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// ID of the distribution you want to search for.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Whether partial matching is allowed or not when using domain argument. Default value is false.
        /// 
        /// Either `domain` or `id` must be provided. If none, or both of `domain` and `id` are provided, the datasource will return an error.
        /// </summary>
        [Input("partialMatch")]
        public Input<bool>? PartialMatch { get; set; }

        public GetCdnDistributionInvokeArgs()
        {
        }
        public static new GetCdnDistributionInvokeArgs Empty => new GetCdnDistributionInvokeArgs();
    }


    [OutputType]
    public sealed class GetCdnDistributionResult
    {
        /// <summary>
        /// The ID of the certificate to use for the distribution. You can create certificates with the certificate resource.
        /// </summary>
        public readonly string CertificateId;
        /// <summary>
        /// The domain of the distribution.
        /// </summary>
        public readonly string? Domain;
        public readonly string? Id;
        public readonly bool? PartialMatch;
        /// <summary>
        /// IP of the distribution, it has to be included on the domain DNS Zone as A record.
        /// </summary>
        public readonly string PublicEndpointV4;
        /// <summary>
        /// IP of the distribution, it has to be included on the domain DNS Zone as AAAA record.
        /// </summary>
        public readonly string PublicEndpointV6;
        /// <summary>
        /// Unique resource identifier.
        /// </summary>
        public readonly string ResourceUrn;
        /// <summary>
        /// The routing rules for the distribution.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCdnDistributionRoutingRuleResult> RoutingRules;

        [OutputConstructor]
        private GetCdnDistributionResult(
            string certificateId,

            string? domain,

            string? id,

            bool? partialMatch,

            string publicEndpointV4,

            string publicEndpointV6,

            string resourceUrn,

            ImmutableArray<Outputs.GetCdnDistributionRoutingRuleResult> routingRules)
        {
            CertificateId = certificateId;
            Domain = domain;
            Id = id;
            PartialMatch = partialMatch;
            PublicEndpointV4 = publicEndpointV4;
            PublicEndpointV6 = publicEndpointV6;
            ResourceUrn = resourceUrn;
            RoutingRules = routingRules;
        }
    }
}
