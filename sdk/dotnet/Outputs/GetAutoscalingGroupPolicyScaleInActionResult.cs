// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Outputs
{

    [OutputType]
    public sealed class GetAutoscalingGroupPolicyScaleInActionResult
    {
        /// <summary>
        /// When 'amountType=ABSOLUTE' specifies the absolute number of VMs that are removed. The value must be between 1 to 10. 'amountType=PERCENTAGE' specifies the percentage value that is applied to the current number of replicas of the VM Auto Scaling Group. The value must be between 1 to 200. At least one VM is always removed. Note that for 'SCALE_IN' operations, volumes are not deleted after the server is deleted.
        /// </summary>
        public readonly int Amount;
        /// <summary>
        /// The type for the given amount. Possible values are: [ABSOLUTE, PERCENTAGE].
        /// </summary>
        public readonly string AmountType;
        /// <summary>
        /// Minimum time to pass after this Scaling action has started, until the next Scaling action will be started. Additionally, if a Scaling action is currently in progress, no second Scaling action will be started for the same autoscaling group. Instead, the Metric will be re-evaluated after the current Scaling action is completed (either successfully or with failures). This is validated with a minimum value of 2 minutes and a maximum of 24 hours currently. Default value is 5 minutes if not given.
        /// </summary>
        public readonly string CooldownPeriod;
        /// <summary>
        /// If set to 'true', when deleting an replica during scale in, any attached volume will also be deleted. When set to 'false', all volumes remain in the datacenter and must be deleted manually. Note that every scale-out creates new volumes. When they are not deleted, they will eventually use all of your contracts resource limits. At this point, scaling out would not be possible anymore.
        /// </summary>
        public readonly bool DeleteVolumes;
        /// <summary>
        /// The type of the termination policy for the autoscaling group so that a specific pattern is followed for Scaling-In instances. Default termination policy is OLDEST_SERVER_FIRST.
        /// </summary>
        public readonly string TerminationPolicyType;

        [OutputConstructor]
        private GetAutoscalingGroupPolicyScaleInActionResult(
            int amount,

            string amountType,

            string cooldownPeriod,

            bool deleteVolumes,

            string terminationPolicyType)
        {
            Amount = amount;
            AmountType = amountType;
            CooldownPeriod = cooldownPeriod;
            DeleteVolumes = deleteVolumes;
            TerminationPolicyType = terminationPolicyType;
        }
    }
}
