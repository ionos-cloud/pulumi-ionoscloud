// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Outputs
{

    [OutputType]
    public sealed class GetTargetGroupTargetResult
    {
        /// <summary>
        /// Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.
        /// </summary>
        public readonly bool HealthCheckEnabled;
        /// <summary>
        /// The IP of the balanced target VM.
        /// </summary>
        public readonly string Ip;
        /// <summary>
        /// Maintenance mode prevents the target from receiving balanced traffic.
        /// </summary>
        public readonly bool MaintenanceEnabled;
        /// <summary>
        /// The port of the balanced target service; valid range is 1 to 65535.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The proxy protocol version.
        /// </summary>
        public readonly string ProxyProtocol;
        /// <summary>
        /// Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.
        /// </summary>
        public readonly int Weight;

        [OutputConstructor]
        private GetTargetGroupTargetResult(
            bool healthCheckEnabled,

            string ip,

            bool maintenanceEnabled,

            int port,

            string proxyProtocol,

            int weight)
        {
            HealthCheckEnabled = healthCheckEnabled;
            Ip = ip;
            MaintenanceEnabled = maintenanceEnabled;
            Port = port;
            ProxyProtocol = proxyProtocol;
            Weight = weight;
        }
    }
}
