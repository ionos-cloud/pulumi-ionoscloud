// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Outputs
{

    [OutputType]
    public sealed class GetAutoscalingGroupPolicyResult
    {
        /// <summary>
        /// The Metric that should trigger Scaling Actions. The values of the Metric are checked in fixed intervals.
        /// </summary>
        public readonly string Metric;
        /// <summary>
        /// Defines the range of time from which samples will be aggregated. Default is 120s.
        /// *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
        /// </summary>
        public readonly string Range;
        /// <summary>
        /// Specifies the Action to take when the `scaleInThreshold`
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAutoscalingGroupPolicyScaleInActionResult> ScaleInActions;
        /// <summary>
        /// A lower threshold on the value of `metric`. Will be used with `less than` (&lt;) operator. Exceeding this will start a Scale-In Action as specified by the `scaleInAction` property. The value must have a higher minimum delta to the `scaleOutThreshold` depending on the `metric` to avoid competitive actions at the same time.
        /// </summary>
        public readonly int ScaleInThreshold;
        /// <summary>
        /// Specifies the action to take when the `scaleOutThreshold` is exceeded. Hereby, scaling out is always about adding new VMs to this autoscaling group
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAutoscalingGroupPolicyScaleOutActionResult> ScaleOutActions;
        /// <summary>
        /// The upper threshold for the value of the `metric`. Used with the `greater than` (&gt;) operator. A scale-out action is triggered when this value is exceeded, specified by the `scaleOutAction` property. The value must have a lower minimum delta to the `scaleInThreshold`, depending on the metric, to avoid competing for actions simultaneously. If `properties.policy.unit=TOTAL`, a value &gt;= 40 must be chosen.
        /// </summary>
        public readonly int ScaleOutThreshold;
        /// <summary>
        /// Specifies the Action to take when the `scaleInThreshold` is exceeded. Hereby, scaling in is always about removing VMs that are currently associated with this Autoscaling Group.
        /// </summary>
        public readonly string Unit;

        [OutputConstructor]
        private GetAutoscalingGroupPolicyResult(
            string metric,

            string range,

            ImmutableArray<Outputs.GetAutoscalingGroupPolicyScaleInActionResult> scaleInActions,

            int scaleInThreshold,

            ImmutableArray<Outputs.GetAutoscalingGroupPolicyScaleOutActionResult> scaleOutActions,

            int scaleOutThreshold,

            string unit)
        {
            Metric = metric;
            Range = range;
            ScaleInActions = scaleInActions;
            ScaleInThreshold = scaleInThreshold;
            ScaleOutActions = scaleOutActions;
            ScaleOutThreshold = scaleOutThreshold;
            Unit = unit;
        }
    }
}
