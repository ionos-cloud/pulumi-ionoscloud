// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Alb
{
    public static class GetBalancer
    {
        public static Task<GetBalancerResult> InvokeAsync(GetBalancerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBalancerResult>("ionoscloud:alb/getBalancer:getBalancer", args ?? new GetBalancerArgs(), options.WithDefaults());

        public static Output<GetBalancerResult> Invoke(GetBalancerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBalancerResult>("ionoscloud:alb/getBalancer:getBalancer", args ?? new GetBalancerInvokeArgs(), options.WithDefaults());

        public static Output<GetBalancerResult> Invoke(GetBalancerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBalancerResult>("ionoscloud:alb/getBalancer:getBalancer", args ?? new GetBalancerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBalancerArgs : global::Pulumi.InvokeArgs
    {
        [Input("datacenterId", required: true)]
        public string DatacenterId { get; set; } = null!;

        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("partialMatch")]
        public bool? PartialMatch { get; set; }

        public GetBalancerArgs()
        {
        }
        public static new GetBalancerArgs Empty => new GetBalancerArgs();
    }

    public sealed class GetBalancerInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("datacenterId", required: true)]
        public Input<string> DatacenterId { get; set; } = null!;

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("partialMatch")]
        public Input<bool>? PartialMatch { get; set; }

        public GetBalancerInvokeArgs()
        {
        }
        public static new GetBalancerInvokeArgs Empty => new GetBalancerInvokeArgs();
    }


    [OutputType]
    public sealed class GetBalancerResult
    {
        public readonly bool CentralLogging;
        public readonly string DatacenterId;
        public readonly ImmutableArray<Outputs.GetBalancerFlowlogResult> Flowlogs;
        public readonly string? Id;
        public readonly ImmutableArray<string> Ips;
        public readonly ImmutableArray<string> LbPrivateIps;
        public readonly int ListenerLan;
        public readonly string LoggingFormat;
        public readonly string? Name;
        public readonly bool? PartialMatch;
        public readonly int TargetLan;

        [OutputConstructor]
        private GetBalancerResult(
            bool centralLogging,

            string datacenterId,

            ImmutableArray<Outputs.GetBalancerFlowlogResult> flowlogs,

            string? id,

            ImmutableArray<string> ips,

            ImmutableArray<string> lbPrivateIps,

            int listenerLan,

            string loggingFormat,

            string? name,

            bool? partialMatch,

            int targetLan)
        {
            CentralLogging = centralLogging;
            DatacenterId = datacenterId;
            Flowlogs = flowlogs;
            Id = id;
            Ips = ips;
            LbPrivateIps = lbPrivateIps;
            ListenerLan = listenerLan;
            LoggingFormat = loggingFormat;
            Name = name;
            PartialMatch = partialMatch;
            TargetLan = targetLan;
        }
    }
}
