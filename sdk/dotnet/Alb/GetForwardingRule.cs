// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Alb
{
    public static class GetForwardingRule
    {
        public static Task<GetForwardingRuleResult> InvokeAsync(GetForwardingRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetForwardingRuleResult>("ionoscloud:alb/getForwardingRule:getForwardingRule", args ?? new GetForwardingRuleArgs(), options.WithDefaults());

        public static Output<GetForwardingRuleResult> Invoke(GetForwardingRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetForwardingRuleResult>("ionoscloud:alb/getForwardingRule:getForwardingRule", args ?? new GetForwardingRuleInvokeArgs(), options.WithDefaults());

        public static Output<GetForwardingRuleResult> Invoke(GetForwardingRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetForwardingRuleResult>("ionoscloud:alb/getForwardingRule:getForwardingRule", args ?? new GetForwardingRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetForwardingRuleArgs : global::Pulumi.InvokeArgs
    {
        [Input("applicationLoadbalancerId", required: true)]
        public string ApplicationLoadbalancerId { get; set; } = null!;

        [Input("datacenterId", required: true)]
        public string DatacenterId { get; set; } = null!;

        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("partialMatch")]
        public bool? PartialMatch { get; set; }

        public GetForwardingRuleArgs()
        {
        }
        public static new GetForwardingRuleArgs Empty => new GetForwardingRuleArgs();
    }

    public sealed class GetForwardingRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("applicationLoadbalancerId", required: true)]
        public Input<string> ApplicationLoadbalancerId { get; set; } = null!;

        [Input("datacenterId", required: true)]
        public Input<string> DatacenterId { get; set; } = null!;

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("partialMatch")]
        public Input<bool>? PartialMatch { get; set; }

        public GetForwardingRuleInvokeArgs()
        {
        }
        public static new GetForwardingRuleInvokeArgs Empty => new GetForwardingRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetForwardingRuleResult
    {
        public readonly string ApplicationLoadbalancerId;
        public readonly int ClientTimeout;
        public readonly string DatacenterId;
        public readonly ImmutableArray<Outputs.GetForwardingRuleHttpRuleResult> HttpRules;
        public readonly string? Id;
        public readonly string ListenerIp;
        public readonly int ListenerPort;
        public readonly string? Name;
        public readonly bool? PartialMatch;
        public readonly string Protocol;
        public readonly ImmutableArray<string> ServerCertificates;

        [OutputConstructor]
        private GetForwardingRuleResult(
            string applicationLoadbalancerId,

            int clientTimeout,

            string datacenterId,

            ImmutableArray<Outputs.GetForwardingRuleHttpRuleResult> httpRules,

            string? id,

            string listenerIp,

            int listenerPort,

            string? name,

            bool? partialMatch,

            string protocol,

            ImmutableArray<string> serverCertificates)
        {
            ApplicationLoadbalancerId = applicationLoadbalancerId;
            ClientTimeout = clientTimeout;
            DatacenterId = datacenterId;
            HttpRules = httpRules;
            Id = id;
            ListenerIp = listenerIp;
            ListenerPort = listenerPort;
            Name = name;
            PartialMatch = partialMatch;
            Protocol = protocol;
            ServerCertificates = serverCertificates;
        }
    }
}
