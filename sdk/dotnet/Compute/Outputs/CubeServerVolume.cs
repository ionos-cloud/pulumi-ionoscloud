// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Compute.Outputs
{

    [OutputType]
    public sealed class CubeServerVolume
    {
        public readonly string? AvailabilityZone;
        /// <summary>
        /// The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' in conjunction with this property.
        /// </summary>
        public readonly string? BackupUnitId;
        /// <summary>
        /// The UUID of the attached server.
        /// </summary>
        public readonly string? BootServer;
        public readonly string? Bus;
        public readonly bool? CpuHotPlug;
        public readonly int? DeviceNumber;
        public readonly bool? DiscVirtioHotPlug;
        public readonly bool? DiscVirtioHotUnplug;
        public readonly string DiskType;
        public readonly string? ImagePassword;
        public readonly string? LicenceType;
        public readonly string? Name;
        public readonly bool? NicHotPlug;
        public readonly bool? NicHotUnplug;
        public readonly int? PciSlot;
        public readonly bool? RamHotPlug;
        public readonly ImmutableArray<string> SshKeyPaths;
        /// <summary>
        /// The cloud-init configuration for the volume as base64 encoded string. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' that has cloud-init compatibility in conjunction with this property.
        /// </summary>
        public readonly string? UserData;

        [OutputConstructor]
        private CubeServerVolume(
            string? availabilityZone,

            string? backupUnitId,

            string? bootServer,

            string? bus,

            bool? cpuHotPlug,

            int? deviceNumber,

            bool? discVirtioHotPlug,

            bool? discVirtioHotUnplug,

            string diskType,

            string? imagePassword,

            string? licenceType,

            string? name,

            bool? nicHotPlug,

            bool? nicHotUnplug,

            int? pciSlot,

            bool? ramHotPlug,

            ImmutableArray<string> sshKeyPaths,

            string? userData)
        {
            AvailabilityZone = availabilityZone;
            BackupUnitId = backupUnitId;
            BootServer = bootServer;
            Bus = bus;
            CpuHotPlug = cpuHotPlug;
            DeviceNumber = deviceNumber;
            DiscVirtioHotPlug = discVirtioHotPlug;
            DiscVirtioHotUnplug = discVirtioHotUnplug;
            DiskType = diskType;
            ImagePassword = imagePassword;
            LicenceType = licenceType;
            Name = name;
            NicHotPlug = nicHotPlug;
            NicHotUnplug = nicHotUnplug;
            PciSlot = pciSlot;
            RamHotPlug = ramHotPlug;
            SshKeyPaths = sshKeyPaths;
            UserData = userData;
        }
    }
}
