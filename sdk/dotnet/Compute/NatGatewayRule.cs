// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Compute
{
    [IonoscloudResourceType("ionoscloud:compute/natGatewayRule:NatGatewayRule")]
    public partial class NatGatewayRule : global::Pulumi.CustomResource
    {
        [Output("datacenterId")]
        public Output<string> DatacenterId { get; private set; } = null!;

        /// <summary>
        /// Name of the NAT gateway rule
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("natgatewayId")]
        public Output<string> NatgatewayId { get; private set; } = null!;

        /// <summary>
        /// Protocol of the NAT gateway rule. Defaults to ALL. If protocol is 'ICMP' then targetPortRange start and end cannot be
        /// set.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// Public IP address of the NAT gateway rule. Specifies the address used for masking outgoing packets source address field.
        /// Should be one of the customer reserved IP address already configured on the NAT gateway resource
        /// </summary>
        [Output("publicIp")]
        public Output<string> PublicIp { get; private set; } = null!;

        /// <summary>
        /// Source subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to based
        /// on the packets source IP address.
        /// </summary>
        [Output("sourceSubnet")]
        public Output<string> SourceSubnet { get; private set; } = null!;

        /// <summary>
        /// Target port range of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to
        /// based on destination port. If none is provided, rule will match any port
        /// </summary>
        [Output("targetPortRange")]
        public Output<Outputs.NatGatewayRuleTargetPortRange> TargetPortRange { get; private set; } = null!;

        /// <summary>
        /// Target or destination subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule
        /// applies to based on the packets destination IP address. If none is provided, rule will match any address.
        /// </summary>
        [Output("targetSubnet")]
        public Output<string> TargetSubnet { get; private set; } = null!;

        /// <summary>
        /// Type of the NAT gateway rule.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a NatGatewayRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NatGatewayRule(string name, NatGatewayRuleArgs args, CustomResourceOptions? options = null)
            : base("ionoscloud:compute/natGatewayRule:NatGatewayRule", name, args ?? new NatGatewayRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NatGatewayRule(string name, Input<string> id, NatGatewayRuleState? state = null, CustomResourceOptions? options = null)
            : base("ionoscloud:compute/natGatewayRule:NatGatewayRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NatGatewayRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NatGatewayRule Get(string name, Input<string> id, NatGatewayRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new NatGatewayRule(name, id, state, options);
        }
    }

    public sealed class NatGatewayRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("datacenterId", required: true)]
        public Input<string> DatacenterId { get; set; } = null!;

        /// <summary>
        /// Name of the NAT gateway rule
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("natgatewayId", required: true)]
        public Input<string> NatgatewayId { get; set; } = null!;

        /// <summary>
        /// Protocol of the NAT gateway rule. Defaults to ALL. If protocol is 'ICMP' then targetPortRange start and end cannot be
        /// set.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// Public IP address of the NAT gateway rule. Specifies the address used for masking outgoing packets source address field.
        /// Should be one of the customer reserved IP address already configured on the NAT gateway resource
        /// </summary>
        [Input("publicIp", required: true)]
        public Input<string> PublicIp { get; set; } = null!;

        /// <summary>
        /// Source subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to based
        /// on the packets source IP address.
        /// </summary>
        [Input("sourceSubnet", required: true)]
        public Input<string> SourceSubnet { get; set; } = null!;

        /// <summary>
        /// Target port range of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to
        /// based on destination port. If none is provided, rule will match any port
        /// </summary>
        [Input("targetPortRange")]
        public Input<Inputs.NatGatewayRuleTargetPortRangeArgs>? TargetPortRange { get; set; }

        /// <summary>
        /// Target or destination subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule
        /// applies to based on the packets destination IP address. If none is provided, rule will match any address.
        /// </summary>
        [Input("targetSubnet")]
        public Input<string>? TargetSubnet { get; set; }

        /// <summary>
        /// Type of the NAT gateway rule.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public NatGatewayRuleArgs()
        {
        }
        public static new NatGatewayRuleArgs Empty => new NatGatewayRuleArgs();
    }

    public sealed class NatGatewayRuleState : global::Pulumi.ResourceArgs
    {
        [Input("datacenterId")]
        public Input<string>? DatacenterId { get; set; }

        /// <summary>
        /// Name of the NAT gateway rule
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("natgatewayId")]
        public Input<string>? NatgatewayId { get; set; }

        /// <summary>
        /// Protocol of the NAT gateway rule. Defaults to ALL. If protocol is 'ICMP' then targetPortRange start and end cannot be
        /// set.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// Public IP address of the NAT gateway rule. Specifies the address used for masking outgoing packets source address field.
        /// Should be one of the customer reserved IP address already configured on the NAT gateway resource
        /// </summary>
        [Input("publicIp")]
        public Input<string>? PublicIp { get; set; }

        /// <summary>
        /// Source subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to based
        /// on the packets source IP address.
        /// </summary>
        [Input("sourceSubnet")]
        public Input<string>? SourceSubnet { get; set; }

        /// <summary>
        /// Target port range of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to
        /// based on destination port. If none is provided, rule will match any port
        /// </summary>
        [Input("targetPortRange")]
        public Input<Inputs.NatGatewayRuleTargetPortRangeGetArgs>? TargetPortRange { get; set; }

        /// <summary>
        /// Target or destination subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule
        /// applies to based on the packets destination IP address. If none is provided, rule will match any address.
        /// </summary>
        [Input("targetSubnet")]
        public Input<string>? TargetSubnet { get; set; }

        /// <summary>
        /// Type of the NAT gateway rule.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public NatGatewayRuleState()
        {
        }
        public static new NatGatewayRuleState Empty => new NatGatewayRuleState();
    }
}
