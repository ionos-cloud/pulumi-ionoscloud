// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Compute
{
    [IonoscloudResourceType("ionoscloud:compute/bootDeviceSelection:BootDeviceSelection")]
    public partial class BootDeviceSelection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the entity to set as primary boot device. Possible boot devices are CDROM Images and Volumes. If omitted, server
        /// will boot from PXE
        /// </summary>
        [Output("bootDeviceId")]
        public Output<string?> BootDeviceId { get; private set; } = null!;

        /// <summary>
        /// ID of the Datacenter that holds the server for which the boot volume is selected
        /// </summary>
        [Output("datacenterId")]
        public Output<string> DatacenterId { get; private set; } = null!;

        /// <summary>
        /// ID of the first attached volume of the Server, which will be the default boot volume.
        /// </summary>
        [Output("defaultBootVolumeId")]
        public Output<string> DefaultBootVolumeId { get; private set; } = null!;

        /// <summary>
        /// ID of the Server for which the boot device will be selected.
        /// </summary>
        [Output("serverId")]
        public Output<string> ServerId { get; private set; } = null!;


        /// <summary>
        /// Create a BootDeviceSelection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BootDeviceSelection(string name, BootDeviceSelectionArgs args, CustomResourceOptions? options = null)
            : base("ionoscloud:compute/bootDeviceSelection:BootDeviceSelection", name, args ?? new BootDeviceSelectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BootDeviceSelection(string name, Input<string> id, BootDeviceSelectionState? state = null, CustomResourceOptions? options = null)
            : base("ionoscloud:compute/bootDeviceSelection:BootDeviceSelection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BootDeviceSelection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BootDeviceSelection Get(string name, Input<string> id, BootDeviceSelectionState? state = null, CustomResourceOptions? options = null)
        {
            return new BootDeviceSelection(name, id, state, options);
        }
    }

    public sealed class BootDeviceSelectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the entity to set as primary boot device. Possible boot devices are CDROM Images and Volumes. If omitted, server
        /// will boot from PXE
        /// </summary>
        [Input("bootDeviceId")]
        public Input<string>? BootDeviceId { get; set; }

        /// <summary>
        /// ID of the Datacenter that holds the server for which the boot volume is selected
        /// </summary>
        [Input("datacenterId", required: true)]
        public Input<string> DatacenterId { get; set; } = null!;

        /// <summary>
        /// ID of the Server for which the boot device will be selected.
        /// </summary>
        [Input("serverId", required: true)]
        public Input<string> ServerId { get; set; } = null!;

        public BootDeviceSelectionArgs()
        {
        }
        public static new BootDeviceSelectionArgs Empty => new BootDeviceSelectionArgs();
    }

    public sealed class BootDeviceSelectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the entity to set as primary boot device. Possible boot devices are CDROM Images and Volumes. If omitted, server
        /// will boot from PXE
        /// </summary>
        [Input("bootDeviceId")]
        public Input<string>? BootDeviceId { get; set; }

        /// <summary>
        /// ID of the Datacenter that holds the server for which the boot volume is selected
        /// </summary>
        [Input("datacenterId")]
        public Input<string>? DatacenterId { get; set; }

        /// <summary>
        /// ID of the first attached volume of the Server, which will be the default boot volume.
        /// </summary>
        [Input("defaultBootVolumeId")]
        public Input<string>? DefaultBootVolumeId { get; set; }

        /// <summary>
        /// ID of the Server for which the boot device will be selected.
        /// </summary>
        [Input("serverId")]
        public Input<string>? ServerId { get; set; }

        public BootDeviceSelectionState()
        {
        }
        public static new BootDeviceSelectionState Empty => new BootDeviceSelectionState();
    }
}
