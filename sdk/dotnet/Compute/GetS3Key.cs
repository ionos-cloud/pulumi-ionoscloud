// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Compute
{
    public static class GetS3Key
    {
        public static Task<GetS3KeyResult> InvokeAsync(GetS3KeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetS3KeyResult>("ionoscloud:compute/getS3Key:getS3Key", args ?? new GetS3KeyArgs(), options.WithDefaults());

        public static Output<GetS3KeyResult> Invoke(GetS3KeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetS3KeyResult>("ionoscloud:compute/getS3Key:getS3Key", args ?? new GetS3KeyInvokeArgs(), options.WithDefaults());

        public static Output<GetS3KeyResult> Invoke(GetS3KeyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetS3KeyResult>("ionoscloud:compute/getS3Key:getS3Key", args ?? new GetS3KeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetS3KeyArgs : global::Pulumi.InvokeArgs
    {
        [Input("active")]
        public bool? Active { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        public GetS3KeyArgs()
        {
        }
        public static new GetS3KeyArgs Empty => new GetS3KeyArgs();
    }

    public sealed class GetS3KeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("active")]
        public Input<bool>? Active { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public GetS3KeyInvokeArgs()
        {
        }
        public static new GetS3KeyInvokeArgs Empty => new GetS3KeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetS3KeyResult
    {
        public readonly bool? Active;
        public readonly string? Id;
        public readonly string SecretKey;
        public readonly string UserId;

        [OutputConstructor]
        private GetS3KeyResult(
            bool? active,

            string? id,

            string secretKey,

            string userId)
        {
            Active = active;
            Id = id;
            SecretKey = secretKey;
            UserId = userId;
        }
    }
}
