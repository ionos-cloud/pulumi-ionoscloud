// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Compute
{
    [IonoscloudResourceType("ionoscloud:compute/group:Group")]
    public partial class Group : global::Pulumi.CustomResource
    {
        [Output("accessActivityLog")]
        public Output<bool?> AccessActivityLog { get; private set; } = null!;

        /// <summary>
        /// Privilege for a group to access and manage certificates.
        /// </summary>
        [Output("accessAndManageCertificates")]
        public Output<bool?> AccessAndManageCertificates { get; private set; } = null!;

        /// <summary>
        /// Privilege for a group to access and manage monitoring related functionality (access metrics, CRUD on alarms,
        /// alarm-actions etc) using Monotoring-as-a-Service (MaaS).
        /// </summary>
        [Output("accessAndManageMonitoring")]
        public Output<bool?> AccessAndManageMonitoring { get; private set; } = null!;

        /// <summary>
        /// Create backup unit privilege.
        /// </summary>
        [Output("createBackupUnit")]
        public Output<bool?> CreateBackupUnit { get; private set; } = null!;

        [Output("createDatacenter")]
        public Output<bool?> CreateDatacenter { get; private set; } = null!;

        /// <summary>
        /// Create Flow Logs privilege.
        /// </summary>
        [Output("createFlowLog")]
        public Output<bool?> CreateFlowLog { get; private set; } = null!;

        /// <summary>
        /// Create internet access privilege.
        /// </summary>
        [Output("createInternetAccess")]
        public Output<bool?> CreateInternetAccess { get; private set; } = null!;

        /// <summary>
        /// Create Kubernetes cluster privilege.
        /// </summary>
        [Output("createK8sCluster")]
        public Output<bool?> CreateK8sCluster { get; private set; } = null!;

        [Output("createPcc")]
        public Output<bool?> CreatePcc { get; private set; } = null!;

        [Output("createSnapshot")]
        public Output<bool?> CreateSnapshot { get; private set; } = null!;

        /// <summary>
        /// Privilege for a group to manage DBaaS related functionality
        /// </summary>
        [Output("manageDbaas")]
        public Output<bool?> ManageDbaas { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("reserveIp")]
        public Output<bool?> ReserveIp { get; private set; } = null!;

        [Output("s3Privilege")]
        public Output<bool?> S3Privilege { get; private set; } = null!;

        [Output("userId")]
        public Output<string?> UserId { get; private set; } = null!;

        [Output("userIds")]
        public Output<ImmutableArray<string>> UserIds { get; private set; } = null!;

        [Output("users")]
        public Output<ImmutableArray<Outputs.GroupUser>> Users { get; private set; } = null!;


        /// <summary>
        /// Create a Group resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Group(string name, GroupArgs? args = null, CustomResourceOptions? options = null)
            : base("ionoscloud:compute/group:Group", name, args ?? new GroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Group(string name, Input<string> id, GroupState? state = null, CustomResourceOptions? options = null)
            : base("ionoscloud:compute/group:Group", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Group resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Group Get(string name, Input<string> id, GroupState? state = null, CustomResourceOptions? options = null)
        {
            return new Group(name, id, state, options);
        }
    }

    public sealed class GroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessActivityLog")]
        public Input<bool>? AccessActivityLog { get; set; }

        /// <summary>
        /// Privilege for a group to access and manage certificates.
        /// </summary>
        [Input("accessAndManageCertificates")]
        public Input<bool>? AccessAndManageCertificates { get; set; }

        /// <summary>
        /// Privilege for a group to access and manage monitoring related functionality (access metrics, CRUD on alarms,
        /// alarm-actions etc) using Monotoring-as-a-Service (MaaS).
        /// </summary>
        [Input("accessAndManageMonitoring")]
        public Input<bool>? AccessAndManageMonitoring { get; set; }

        /// <summary>
        /// Create backup unit privilege.
        /// </summary>
        [Input("createBackupUnit")]
        public Input<bool>? CreateBackupUnit { get; set; }

        [Input("createDatacenter")]
        public Input<bool>? CreateDatacenter { get; set; }

        /// <summary>
        /// Create Flow Logs privilege.
        /// </summary>
        [Input("createFlowLog")]
        public Input<bool>? CreateFlowLog { get; set; }

        /// <summary>
        /// Create internet access privilege.
        /// </summary>
        [Input("createInternetAccess")]
        public Input<bool>? CreateInternetAccess { get; set; }

        /// <summary>
        /// Create Kubernetes cluster privilege.
        /// </summary>
        [Input("createK8sCluster")]
        public Input<bool>? CreateK8sCluster { get; set; }

        [Input("createPcc")]
        public Input<bool>? CreatePcc { get; set; }

        [Input("createSnapshot")]
        public Input<bool>? CreateSnapshot { get; set; }

        /// <summary>
        /// Privilege for a group to manage DBaaS related functionality
        /// </summary>
        [Input("manageDbaas")]
        public Input<bool>? ManageDbaas { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("reserveIp")]
        public Input<bool>? ReserveIp { get; set; }

        [Input("s3Privilege")]
        public Input<bool>? S3Privilege { get; set; }

        [Input("userId")]
        public Input<string>? UserId { get; set; }

        [Input("userIds")]
        private InputList<string>? _userIds;
        public InputList<string> UserIds
        {
            get => _userIds ?? (_userIds = new InputList<string>());
            set => _userIds = value;
        }

        public GroupArgs()
        {
        }
        public static new GroupArgs Empty => new GroupArgs();
    }

    public sealed class GroupState : global::Pulumi.ResourceArgs
    {
        [Input("accessActivityLog")]
        public Input<bool>? AccessActivityLog { get; set; }

        /// <summary>
        /// Privilege for a group to access and manage certificates.
        /// </summary>
        [Input("accessAndManageCertificates")]
        public Input<bool>? AccessAndManageCertificates { get; set; }

        /// <summary>
        /// Privilege for a group to access and manage monitoring related functionality (access metrics, CRUD on alarms,
        /// alarm-actions etc) using Monotoring-as-a-Service (MaaS).
        /// </summary>
        [Input("accessAndManageMonitoring")]
        public Input<bool>? AccessAndManageMonitoring { get; set; }

        /// <summary>
        /// Create backup unit privilege.
        /// </summary>
        [Input("createBackupUnit")]
        public Input<bool>? CreateBackupUnit { get; set; }

        [Input("createDatacenter")]
        public Input<bool>? CreateDatacenter { get; set; }

        /// <summary>
        /// Create Flow Logs privilege.
        /// </summary>
        [Input("createFlowLog")]
        public Input<bool>? CreateFlowLog { get; set; }

        /// <summary>
        /// Create internet access privilege.
        /// </summary>
        [Input("createInternetAccess")]
        public Input<bool>? CreateInternetAccess { get; set; }

        /// <summary>
        /// Create Kubernetes cluster privilege.
        /// </summary>
        [Input("createK8sCluster")]
        public Input<bool>? CreateK8sCluster { get; set; }

        [Input("createPcc")]
        public Input<bool>? CreatePcc { get; set; }

        [Input("createSnapshot")]
        public Input<bool>? CreateSnapshot { get; set; }

        /// <summary>
        /// Privilege for a group to manage DBaaS related functionality
        /// </summary>
        [Input("manageDbaas")]
        public Input<bool>? ManageDbaas { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("reserveIp")]
        public Input<bool>? ReserveIp { get; set; }

        [Input("s3Privilege")]
        public Input<bool>? S3Privilege { get; set; }

        [Input("userId")]
        public Input<string>? UserId { get; set; }

        [Input("userIds")]
        private InputList<string>? _userIds;
        public InputList<string> UserIds
        {
            get => _userIds ?? (_userIds = new InputList<string>());
            set => _userIds = value;
        }

        [Input("users")]
        private InputList<Inputs.GroupUserGetArgs>? _users;
        public InputList<Inputs.GroupUserGetArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.GroupUserGetArgs>());
            set => _users = value;
        }

        public GroupState()
        {
        }
        public static new GroupState Empty => new GroupState();
    }
}
