// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Compute
{
    public static class GetNic
    {
        public static Task<GetNicResult> InvokeAsync(GetNicArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNicResult>("ionoscloud:compute/getNic:getNic", args ?? new GetNicArgs(), options.WithDefaults());

        public static Output<GetNicResult> Invoke(GetNicInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNicResult>("ionoscloud:compute/getNic:getNic", args ?? new GetNicInvokeArgs(), options.WithDefaults());

        public static Output<GetNicResult> Invoke(GetNicInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNicResult>("ionoscloud:compute/getNic:getNic", args ?? new GetNicInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNicArgs : global::Pulumi.InvokeArgs
    {
        [Input("datacenterId", required: true)]
        public string DatacenterId { get; set; } = null!;

        [Input("dhcp")]
        public bool? Dhcp { get; set; }

        [Input("dhcpv6")]
        public bool? Dhcpv6 { get; set; }

        [Input("firewallActive")]
        public bool? FirewallActive { get; set; }

        [Input("firewallType")]
        public string? FirewallType { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("ips")]
        private List<string>? _ips;
        public List<string> Ips
        {
            get => _ips ?? (_ips = new List<string>());
            set => _ips = value;
        }

        [Input("ipv6CidrBlock")]
        public string? Ipv6CidrBlock { get; set; }

        [Input("ipv6Ips")]
        private List<string>? _ipv6Ips;
        public List<string> Ipv6Ips
        {
            get => _ipv6Ips ?? (_ipv6Ips = new List<string>());
            set => _ipv6Ips = value;
        }

        [Input("lan")]
        public int? Lan { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("serverId", required: true)]
        public string ServerId { get; set; } = null!;

        public GetNicArgs()
        {
        }
        public static new GetNicArgs Empty => new GetNicArgs();
    }

    public sealed class GetNicInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("datacenterId", required: true)]
        public Input<string> DatacenterId { get; set; } = null!;

        [Input("dhcp")]
        public Input<bool>? Dhcp { get; set; }

        [Input("dhcpv6")]
        public Input<bool>? Dhcpv6 { get; set; }

        [Input("firewallActive")]
        public Input<bool>? FirewallActive { get; set; }

        [Input("firewallType")]
        public Input<string>? FirewallType { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("ips")]
        private InputList<string>? _ips;
        public InputList<string> Ips
        {
            get => _ips ?? (_ips = new InputList<string>());
            set => _ips = value;
        }

        [Input("ipv6CidrBlock")]
        public Input<string>? Ipv6CidrBlock { get; set; }

        [Input("ipv6Ips")]
        private InputList<string>? _ipv6Ips;
        public InputList<string> Ipv6Ips
        {
            get => _ipv6Ips ?? (_ipv6Ips = new InputList<string>());
            set => _ipv6Ips = value;
        }

        [Input("lan")]
        public Input<int>? Lan { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("serverId", required: true)]
        public Input<string> ServerId { get; set; } = null!;

        public GetNicInvokeArgs()
        {
        }
        public static new GetNicInvokeArgs Empty => new GetNicInvokeArgs();
    }


    [OutputType]
    public sealed class GetNicResult
    {
        public readonly string DatacenterId;
        public readonly int DeviceNumber;
        public readonly bool? Dhcp;
        public readonly bool? Dhcpv6;
        public readonly bool? FirewallActive;
        public readonly string FirewallType;
        public readonly ImmutableArray<Outputs.GetNicFlowlogResult> Flowlogs;
        public readonly string? Id;
        public readonly ImmutableArray<string> Ips;
        public readonly string Ipv6CidrBlock;
        public readonly ImmutableArray<string> Ipv6Ips;
        public readonly int? Lan;
        public readonly string Mac;
        public readonly string? Name;
        public readonly int PciSlot;
        public readonly string ServerId;

        [OutputConstructor]
        private GetNicResult(
            string datacenterId,

            int deviceNumber,

            bool? dhcp,

            bool? dhcpv6,

            bool? firewallActive,

            string firewallType,

            ImmutableArray<Outputs.GetNicFlowlogResult> flowlogs,

            string? id,

            ImmutableArray<string> ips,

            string ipv6CidrBlock,

            ImmutableArray<string> ipv6Ips,

            int? lan,

            string mac,

            string? name,

            int pciSlot,

            string serverId)
        {
            DatacenterId = datacenterId;
            DeviceNumber = deviceNumber;
            Dhcp = dhcp;
            Dhcpv6 = dhcpv6;
            FirewallActive = firewallActive;
            FirewallType = firewallType;
            Flowlogs = flowlogs;
            Id = id;
            Ips = ips;
            Ipv6CidrBlock = ipv6CidrBlock;
            Ipv6Ips = ipv6Ips;
            Lan = lan;
            Mac = mac;
            Name = name;
            PciSlot = pciSlot;
            ServerId = serverId;
        }
    }
}
