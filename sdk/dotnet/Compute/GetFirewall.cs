// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Compute
{
    public static class GetFirewall
    {
        public static Task<GetFirewallResult> InvokeAsync(GetFirewallArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFirewallResult>("ionoscloud:compute/getFirewall:getFirewall", args ?? new GetFirewallArgs(), options.WithDefaults());

        public static Output<GetFirewallResult> Invoke(GetFirewallInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFirewallResult>("ionoscloud:compute/getFirewall:getFirewall", args ?? new GetFirewallInvokeArgs(), options.WithDefaults());

        public static Output<GetFirewallResult> Invoke(GetFirewallInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFirewallResult>("ionoscloud:compute/getFirewall:getFirewall", args ?? new GetFirewallInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFirewallArgs : global::Pulumi.InvokeArgs
    {
        [Input("datacenterId", required: true)]
        public string DatacenterId { get; set; } = null!;

        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("nicId", required: true)]
        public string NicId { get; set; } = null!;

        [Input("serverId", required: true)]
        public string ServerId { get; set; } = null!;

        public GetFirewallArgs()
        {
        }
        public static new GetFirewallArgs Empty => new GetFirewallArgs();
    }

    public sealed class GetFirewallInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("datacenterId", required: true)]
        public Input<string> DatacenterId { get; set; } = null!;

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nicId", required: true)]
        public Input<string> NicId { get; set; } = null!;

        [Input("serverId", required: true)]
        public Input<string> ServerId { get; set; } = null!;

        public GetFirewallInvokeArgs()
        {
        }
        public static new GetFirewallInvokeArgs Empty => new GetFirewallInvokeArgs();
    }


    [OutputType]
    public sealed class GetFirewallResult
    {
        public readonly string DatacenterId;
        public readonly string IcmpCode;
        public readonly string IcmpType;
        public readonly string? Id;
        public readonly string? Name;
        public readonly string NicId;
        public readonly int PortRangeEnd;
        public readonly int PortRangeStart;
        public readonly string Protocol;
        public readonly string ServerId;
        public readonly string SourceIp;
        public readonly string SourceMac;
        public readonly string TargetIp;
        public readonly string Type;

        [OutputConstructor]
        private GetFirewallResult(
            string datacenterId,

            string icmpCode,

            string icmpType,

            string? id,

            string? name,

            string nicId,

            int portRangeEnd,

            int portRangeStart,

            string protocol,

            string serverId,

            string sourceIp,

            string sourceMac,

            string targetIp,

            string type)
        {
            DatacenterId = datacenterId;
            IcmpCode = icmpCode;
            IcmpType = icmpType;
            Id = id;
            Name = name;
            NicId = nicId;
            PortRangeEnd = portRangeEnd;
            PortRangeStart = portRangeStart;
            Protocol = protocol;
            ServerId = serverId;
            SourceIp = sourceIp;
            SourceMac = sourceMac;
            TargetIp = targetIp;
            Type = type;
        }
    }
}
