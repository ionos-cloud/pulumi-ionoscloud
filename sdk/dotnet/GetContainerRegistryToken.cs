// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud
{
    public static class GetContainerRegistryToken
    {
        /// <summary>
        /// The **Container Registry Token data source** can be used to search for and return an existing Container Registry Token.
        /// You can provide a string for the name parameter which will be compared with provisioned Container Registry Token.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// When this happens, please refine your search and make sure that your resources have unique names.
        /// 
        /// ## Example Usage
        /// 
        /// ### By Name
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as ionoscloud from "@pulumi/ionoscloud";
        /// 
        /// const example = ionoscloud.getContainerRegistryToken({
        ///     registryId: ionoscloud_container_registry.example.id,
        ///     name: "container-registry-token-example",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_ionoscloud as ionoscloud
        /// 
        /// example = ionoscloud.get_container_registry_token(registry_id=ionoscloud_container_registry["example"]["id"],
        ///     name="container-registry-token-example")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.GetContainerRegistryToken.Invoke(new()
        ///     {
        ///         RegistryId = ionoscloud_container_registry.Example.Id,
        ///         Name = "container-registry-token-example",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ionoscloud.LookupContainerRegistryToken(ctx, &amp;ionoscloud.LookupContainerRegistryTokenArgs{
        /// 			RegistryId: ionoscloud_container_registry.Example.Id,
        /// 			Name:       pulumi.StringRef("container-registry-token-example"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.ionoscloud.IonoscloudFunctions;
        /// import com.pulumi.ionoscloud.inputs.GetContainerRegistryTokenArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = IonoscloudFunctions.getContainerRegistryToken(GetContainerRegistryTokenArgs.builder()
        ///             .registryId(ionoscloud_container_registry.example().id())
        ///             .name("container-registry-token-example")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: ionoscloud:getContainerRegistryToken
        ///       Arguments:
        ///         registryId: ${ionoscloud_container_registry.example.id}
        ///         name: container-registry-token-example
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ### By Name with Partial Match
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as ionoscloud from "@pulumi/ionoscloud";
        /// 
        /// const example = ionoscloud.getContainerRegistryToken({
        ///     registryId: ionoscloud_container_registry.example.id,
        ///     name: "-example",
        ///     partialMatch: true,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_ionoscloud as ionoscloud
        /// 
        /// example = ionoscloud.get_container_registry_token(registry_id=ionoscloud_container_registry["example"]["id"],
        ///     name="-example",
        ///     partial_match=True)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.GetContainerRegistryToken.Invoke(new()
        ///     {
        ///         RegistryId = ionoscloud_container_registry.Example.Id,
        ///         Name = "-example",
        ///         PartialMatch = true,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ionoscloud.LookupContainerRegistryToken(ctx, &amp;ionoscloud.LookupContainerRegistryTokenArgs{
        /// 			RegistryId:   ionoscloud_container_registry.Example.Id,
        /// 			Name:         pulumi.StringRef("-example"),
        /// 			PartialMatch: pulumi.BoolRef(true),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.ionoscloud.IonoscloudFunctions;
        /// import com.pulumi.ionoscloud.inputs.GetContainerRegistryTokenArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = IonoscloudFunctions.getContainerRegistryToken(GetContainerRegistryTokenArgs.builder()
        ///             .registryId(ionoscloud_container_registry.example().id())
        ///             .name("-example")
        ///             .partialMatch(true)
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: ionoscloud:getContainerRegistryToken
        ///       Arguments:
        ///         registryId: ${ionoscloud_container_registry.example.id}
        ///         name: -example
        ///         partialMatch: true
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetContainerRegistryTokenResult> InvokeAsync(GetContainerRegistryTokenArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContainerRegistryTokenResult>("ionoscloud:index/getContainerRegistryToken:getContainerRegistryToken", args ?? new GetContainerRegistryTokenArgs(), options.WithDefaults());

        /// <summary>
        /// The **Container Registry Token data source** can be used to search for and return an existing Container Registry Token.
        /// You can provide a string for the name parameter which will be compared with provisioned Container Registry Token.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// When this happens, please refine your search and make sure that your resources have unique names.
        /// 
        /// ## Example Usage
        /// 
        /// ### By Name
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as ionoscloud from "@pulumi/ionoscloud";
        /// 
        /// const example = ionoscloud.getContainerRegistryToken({
        ///     registryId: ionoscloud_container_registry.example.id,
        ///     name: "container-registry-token-example",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_ionoscloud as ionoscloud
        /// 
        /// example = ionoscloud.get_container_registry_token(registry_id=ionoscloud_container_registry["example"]["id"],
        ///     name="container-registry-token-example")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.GetContainerRegistryToken.Invoke(new()
        ///     {
        ///         RegistryId = ionoscloud_container_registry.Example.Id,
        ///         Name = "container-registry-token-example",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ionoscloud.LookupContainerRegistryToken(ctx, &amp;ionoscloud.LookupContainerRegistryTokenArgs{
        /// 			RegistryId: ionoscloud_container_registry.Example.Id,
        /// 			Name:       pulumi.StringRef("container-registry-token-example"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.ionoscloud.IonoscloudFunctions;
        /// import com.pulumi.ionoscloud.inputs.GetContainerRegistryTokenArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = IonoscloudFunctions.getContainerRegistryToken(GetContainerRegistryTokenArgs.builder()
        ///             .registryId(ionoscloud_container_registry.example().id())
        ///             .name("container-registry-token-example")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: ionoscloud:getContainerRegistryToken
        ///       Arguments:
        ///         registryId: ${ionoscloud_container_registry.example.id}
        ///         name: container-registry-token-example
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ### By Name with Partial Match
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as ionoscloud from "@pulumi/ionoscloud";
        /// 
        /// const example = ionoscloud.getContainerRegistryToken({
        ///     registryId: ionoscloud_container_registry.example.id,
        ///     name: "-example",
        ///     partialMatch: true,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_ionoscloud as ionoscloud
        /// 
        /// example = ionoscloud.get_container_registry_token(registry_id=ionoscloud_container_registry["example"]["id"],
        ///     name="-example",
        ///     partial_match=True)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.GetContainerRegistryToken.Invoke(new()
        ///     {
        ///         RegistryId = ionoscloud_container_registry.Example.Id,
        ///         Name = "-example",
        ///         PartialMatch = true,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ionoscloud.LookupContainerRegistryToken(ctx, &amp;ionoscloud.LookupContainerRegistryTokenArgs{
        /// 			RegistryId:   ionoscloud_container_registry.Example.Id,
        /// 			Name:         pulumi.StringRef("-example"),
        /// 			PartialMatch: pulumi.BoolRef(true),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.ionoscloud.IonoscloudFunctions;
        /// import com.pulumi.ionoscloud.inputs.GetContainerRegistryTokenArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = IonoscloudFunctions.getContainerRegistryToken(GetContainerRegistryTokenArgs.builder()
        ///             .registryId(ionoscloud_container_registry.example().id())
        ///             .name("-example")
        ///             .partialMatch(true)
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: ionoscloud:getContainerRegistryToken
        ///       Arguments:
        ///         registryId: ${ionoscloud_container_registry.example.id}
        ///         name: -example
        ///         partialMatch: true
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetContainerRegistryTokenResult> Invoke(GetContainerRegistryTokenInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContainerRegistryTokenResult>("ionoscloud:index/getContainerRegistryToken:getContainerRegistryToken", args ?? new GetContainerRegistryTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContainerRegistryTokenArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the container registry token you want to search for.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Name of an existing container registry token that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partial_match` parameter is not set to true.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Whether partial matching is allowed or not when using name argument. Default value is false.
        /// 
        /// `registry_id` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
        /// </summary>
        [Input("partialMatch")]
        public bool? PartialMatch { get; set; }

        /// <summary>
        /// Registry's UUID.
        /// </summary>
        [Input("registryId", required: true)]
        public string RegistryId { get; set; } = null!;

        public GetContainerRegistryTokenArgs()
        {
        }
        public static new GetContainerRegistryTokenArgs Empty => new GetContainerRegistryTokenArgs();
    }

    public sealed class GetContainerRegistryTokenInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the container registry token you want to search for.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Name of an existing container registry token that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partial_match` parameter is not set to true.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether partial matching is allowed or not when using name argument. Default value is false.
        /// 
        /// `registry_id` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
        /// </summary>
        [Input("partialMatch")]
        public Input<bool>? PartialMatch { get; set; }

        /// <summary>
        /// Registry's UUID.
        /// </summary>
        [Input("registryId", required: true)]
        public Input<string> RegistryId { get; set; } = null!;

        public GetContainerRegistryTokenInvokeArgs()
        {
        }
        public static new GetContainerRegistryTokenInvokeArgs Empty => new GetContainerRegistryTokenInvokeArgs();
    }


    [OutputType]
    public sealed class GetContainerRegistryTokenResult
    {
        public readonly ImmutableArray<Outputs.GetContainerRegistryTokenCredentialResult> Credentials;
        public readonly string ExpiryDate;
        /// <summary>
        /// Id of the container registry token.
        /// </summary>
        public readonly string? Id;
        public readonly string? Name;
        public readonly bool? PartialMatch;
        public readonly string RegistryId;
        public readonly ImmutableArray<Outputs.GetContainerRegistryTokenScopeResult> Scopes;
        public readonly string Status;

        [OutputConstructor]
        private GetContainerRegistryTokenResult(
            ImmutableArray<Outputs.GetContainerRegistryTokenCredentialResult> credentials,

            string expiryDate,

            string? id,

            string? name,

            bool? partialMatch,

            string registryId,

            ImmutableArray<Outputs.GetContainerRegistryTokenScopeResult> scopes,

            string status)
        {
            Credentials = credentials;
            ExpiryDate = expiryDate;
            Id = id;
            Name = name;
            PartialMatch = partialMatch;
            RegistryId = registryId;
            Scopes = scopes;
            Status = status;
        }
    }
}
