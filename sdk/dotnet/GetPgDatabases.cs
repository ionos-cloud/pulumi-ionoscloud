// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud
{
    public static class GetPgDatabases
    {
        public static Task<GetPgDatabasesResult> InvokeAsync(GetPgDatabasesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPgDatabasesResult>("ionoscloud:index/getPgDatabases:getPgDatabases", args ?? new GetPgDatabasesArgs(), options.WithDefaults());

        public static Output<GetPgDatabasesResult> Invoke(GetPgDatabasesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPgDatabasesResult>("ionoscloud:index/getPgDatabases:getPgDatabases", args ?? new GetPgDatabasesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPgDatabasesArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        [Input("owner")]
        public string? Owner { get; set; }

        public GetPgDatabasesArgs()
        {
        }
        public static new GetPgDatabasesArgs Empty => new GetPgDatabasesArgs();
    }

    public sealed class GetPgDatabasesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("owner")]
        public Input<string>? Owner { get; set; }

        public GetPgDatabasesInvokeArgs()
        {
        }
        public static new GetPgDatabasesInvokeArgs Empty => new GetPgDatabasesInvokeArgs();
    }


    [OutputType]
    public sealed class GetPgDatabasesResult
    {
        public readonly string ClusterId;
        public readonly ImmutableArray<Outputs.GetPgDatabasesDatabaseResult> Databases;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Owner;

        [OutputConstructor]
        private GetPgDatabasesResult(
            string clusterId,

            ImmutableArray<Outputs.GetPgDatabasesDatabaseResult> databases,

            string id,

            string? owner)
        {
            ClusterId = clusterId;
            Databases = databases;
            Id = id;
            Owner = owner;
        }
    }
}
