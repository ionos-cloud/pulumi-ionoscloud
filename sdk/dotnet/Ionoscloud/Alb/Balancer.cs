// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Ionoscloud.Pulumi.Ionoscloud.Alb
{
    /// <summary>
    /// Manages an **Application Load Balancer** on IonosCloud.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ionoscloud = Ionoscloud.Pulumi.Ionoscloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Ionoscloud.Compute.Datacenter("example", new()
    ///     {
    ///         Name = "Datacenter Example",
    ///         Location = "us/las",
    ///         Description = "datacenter description",
    ///         SecAuthProtection = false,
    ///     });
    /// 
    ///     var example1 = new Ionoscloud.Compute.Lan("example_1", new()
    ///     {
    ///         DatacenterId = example.Id,
    ///         Public = true,
    ///         Name = "Lan Example",
    ///     });
    /// 
    ///     var example2 = new Ionoscloud.Compute.Lan("example_2", new()
    ///     {
    ///         DatacenterId = example.Id,
    ///         Public = true,
    ///         Name = "Lan Example",
    ///     });
    /// 
    ///     var exampleBalancer = new Ionoscloud.Alb.Balancer("example", new()
    ///     {
    ///         DatacenterId = example.Id,
    ///         Name = "ALB Example",
    ///         ListenerLan = example1.Id,
    ///         Ips = new[]
    ///         {
    ///             "10.12.118.224",
    ///         },
    ///         TargetLan = example2.Id,
    ///         LbPrivateIps = new[]
    ///         {
    ///             "10.13.72.225/24",
    ///         },
    ///         CentralLogging = true,
    ///         LoggingFormat = "%{+Q}o %{-Q}ci - - [%trg] %r %ST %B \"\" \"\" %cp %ms %ft %b %s %TR %Tw %Tc %Tr %Ta %tsc %ac %fc %bc %sc %rc %sq %bq %CC %CS %hrl %hsl",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Resource Application Load Balancer can be imported using the `resource id` and `datacenter id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import ionoscloud:alb/balancer:Balancer myalb datacenter uuid/applicationLoadBalancer uuid
    /// ```
    /// </summary>
    [IonoscloudResourceType("ionoscloud:alb/balancer:Balancer")]
    public partial class Balancer : global::Pulumi.CustomResource
    {
        /// <summary>
        /// [bool] Turn logging on and off for this product. Default value is 'false'.
        /// </summary>
        [Output("centralLogging")]
        public Output<bool?> CentralLogging { get; private set; } = null!;

        /// <summary>
        /// [string] ID of the datacenter.
        /// </summary>
        [Output("datacenterId")]
        public Output<string> DatacenterId { get; private set; } = null!;

        /// <summary>
        /// [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
        /// </summary>
        [Output("flowlog")]
        public Output<Outputs.BalancerFlowlog?> Flowlog { get; private set; } = null!;

        /// <summary>
        /// [set] Collection of the Application Load Balancer IP addresses. (Inbound and outbound) IPs of the listenerLan are customer-reserved public IPs for the public Load Balancers, and private IPs for the private Load Balancers.
        /// </summary>
        [Output("ips")]
        public Output<ImmutableArray<string>> Ips { get; private set; } = null!;

        /// <summary>
        /// [set] Collection of private IP addresses with the subnet mask of the Application Load Balancer. IPs must contain valid a subnet mask. If no IP is provided, the system will generate an IP with /24 subnet.
        /// </summary>
        [Output("lbPrivateIps")]
        public Output<ImmutableArray<string>> LbPrivateIps { get; private set; } = null!;

        /// <summary>
        /// [int] ID of the listening (inbound) LAN.
        /// </summary>
        [Output("listenerLan")]
        public Output<int> ListenerLan { get; private set; } = null!;

        /// <summary>
        /// Specifies the format of the logs.
        /// </summary>
        [Output("loggingFormat")]
        public Output<string?> LoggingFormat { get; private set; } = null!;

        /// <summary>
        /// [string] The name of the Application Load Balancer.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// [int] ID of the balanced private target LAN (outbound).
        /// </summary>
        [Output("targetLan")]
        public Output<int> TargetLan { get; private set; } = null!;


        /// <summary>
        /// Create a Balancer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Balancer(string name, BalancerArgs args, CustomResourceOptions? options = null)
            : base("ionoscloud:alb/balancer:Balancer", name, args ?? new BalancerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Balancer(string name, Input<string> id, BalancerState? state = null, CustomResourceOptions? options = null)
            : base("ionoscloud:alb/balancer:Balancer", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Balancer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Balancer Get(string name, Input<string> id, BalancerState? state = null, CustomResourceOptions? options = null)
        {
            return new Balancer(name, id, state, options);
        }
    }

    public sealed class BalancerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [bool] Turn logging on and off for this product. Default value is 'false'.
        /// </summary>
        [Input("centralLogging")]
        public Input<bool>? CentralLogging { get; set; }

        /// <summary>
        /// [string] ID of the datacenter.
        /// </summary>
        [Input("datacenterId", required: true)]
        public Input<string> DatacenterId { get; set; } = null!;

        /// <summary>
        /// [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
        /// </summary>
        [Input("flowlog")]
        public Input<Inputs.BalancerFlowlogArgs>? Flowlog { get; set; }

        [Input("ips")]
        private InputList<string>? _ips;

        /// <summary>
        /// [set] Collection of the Application Load Balancer IP addresses. (Inbound and outbound) IPs of the listenerLan are customer-reserved public IPs for the public Load Balancers, and private IPs for the private Load Balancers.
        /// </summary>
        public InputList<string> Ips
        {
            get => _ips ?? (_ips = new InputList<string>());
            set => _ips = value;
        }

        [Input("lbPrivateIps")]
        private InputList<string>? _lbPrivateIps;

        /// <summary>
        /// [set] Collection of private IP addresses with the subnet mask of the Application Load Balancer. IPs must contain valid a subnet mask. If no IP is provided, the system will generate an IP with /24 subnet.
        /// </summary>
        public InputList<string> LbPrivateIps
        {
            get => _lbPrivateIps ?? (_lbPrivateIps = new InputList<string>());
            set => _lbPrivateIps = value;
        }

        /// <summary>
        /// [int] ID of the listening (inbound) LAN.
        /// </summary>
        [Input("listenerLan", required: true)]
        public Input<int> ListenerLan { get; set; } = null!;

        /// <summary>
        /// Specifies the format of the logs.
        /// </summary>
        [Input("loggingFormat")]
        public Input<string>? LoggingFormat { get; set; }

        /// <summary>
        /// [string] The name of the Application Load Balancer.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// [int] ID of the balanced private target LAN (outbound).
        /// </summary>
        [Input("targetLan", required: true)]
        public Input<int> TargetLan { get; set; } = null!;

        public BalancerArgs()
        {
        }
        public static new BalancerArgs Empty => new BalancerArgs();
    }

    public sealed class BalancerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [bool] Turn logging on and off for this product. Default value is 'false'.
        /// </summary>
        [Input("centralLogging")]
        public Input<bool>? CentralLogging { get; set; }

        /// <summary>
        /// [string] ID of the datacenter.
        /// </summary>
        [Input("datacenterId")]
        public Input<string>? DatacenterId { get; set; }

        /// <summary>
        /// [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
        /// </summary>
        [Input("flowlog")]
        public Input<Inputs.BalancerFlowlogGetArgs>? Flowlog { get; set; }

        [Input("ips")]
        private InputList<string>? _ips;

        /// <summary>
        /// [set] Collection of the Application Load Balancer IP addresses. (Inbound and outbound) IPs of the listenerLan are customer-reserved public IPs for the public Load Balancers, and private IPs for the private Load Balancers.
        /// </summary>
        public InputList<string> Ips
        {
            get => _ips ?? (_ips = new InputList<string>());
            set => _ips = value;
        }

        [Input("lbPrivateIps")]
        private InputList<string>? _lbPrivateIps;

        /// <summary>
        /// [set] Collection of private IP addresses with the subnet mask of the Application Load Balancer. IPs must contain valid a subnet mask. If no IP is provided, the system will generate an IP with /24 subnet.
        /// </summary>
        public InputList<string> LbPrivateIps
        {
            get => _lbPrivateIps ?? (_lbPrivateIps = new InputList<string>());
            set => _lbPrivateIps = value;
        }

        /// <summary>
        /// [int] ID of the listening (inbound) LAN.
        /// </summary>
        [Input("listenerLan")]
        public Input<int>? ListenerLan { get; set; }

        /// <summary>
        /// Specifies the format of the logs.
        /// </summary>
        [Input("loggingFormat")]
        public Input<string>? LoggingFormat { get; set; }

        /// <summary>
        /// [string] The name of the Application Load Balancer.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// [int] ID of the balanced private target LAN (outbound).
        /// </summary>
        [Input("targetLan")]
        public Input<int>? TargetLan { get; set; }

        public BalancerState()
        {
        }
        public static new BalancerState Empty => new BalancerState();
    }
}
