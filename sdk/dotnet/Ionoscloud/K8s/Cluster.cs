// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Ionoscloud.Pulumi.Ionoscloud.K8s
{
    /// <summary>
    /// Manages a **Managed Kubernetes Cluster** on IonosCloud.
    /// 
    /// ## Example Usage
    /// 
    /// ### Public cluster
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ionoscloud = Ionoscloud.Pulumi.Ionoscloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Ionoscloud.K8s.Cluster("example", new()
    ///     {
    ///         Name = "k8sClusterExample",
    ///         K8sVersion = "1.31.2",
    ///         MaintenanceWindow = new Ionoscloud.K8s.Inputs.ClusterMaintenanceWindowArgs
    ///         {
    ///             DayOfTheWeek = "Sunday",
    ///             Time = "09:00:00Z",
    ///         },
    ///         ApiSubnetAllowLists = new[]
    ///         {
    ///             "1.2.3.4/32",
    ///         },
    ///         S3Buckets = new[]
    ///         {
    ///             new Ionoscloud.K8s.Inputs.ClusterS3BucketArgs
    ///             {
    ///                 Name = "globally_unique_bucket_name",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Private Cluster
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ionoscloud = Ionoscloud.Pulumi.Ionoscloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testdatacenter = new Ionoscloud.Compute.Datacenter("testdatacenter", new()
    ///     {
    ///         Name = "example",
    ///         Location = "de/fra",
    ///         Description = "Test datacenter",
    ///     });
    /// 
    ///     var k8sip = new Ionoscloud.Compute.IPBlock("k8sip", new()
    ///     {
    ///         Location = "de/fra",
    ///         Size = 1,
    ///         Name = "IP Block Private K8s",
    ///     });
    /// 
    ///     var example = new Ionoscloud.K8s.Cluster("example", new()
    ///     {
    ///         Name = "k8sClusterExample",
    ///         K8sVersion = "1.31.2",
    ///         MaintenanceWindow = new Ionoscloud.K8s.Inputs.ClusterMaintenanceWindowArgs
    ///         {
    ///             DayOfTheWeek = "Sunday",
    ///             Time = "09:00:00Z",
    ///         },
    ///         ApiSubnetAllowLists = new[]
    ///         {
    ///             "1.2.3.4/32",
    ///         },
    ///         S3Buckets = new[]
    ///         {
    ///             new Ionoscloud.K8s.Inputs.ClusterS3BucketArgs
    ///             {
    ///                 Name = "globally_unique_bucket_name",
    ///             },
    ///         },
    ///         Location = "de/fra",
    ///         NatGatewayIp = k8sip.Ips.Apply(ips =&gt; ips[0]),
    ///         NodeSubnet = "192.168.0.0/16",
    ///         Public = false,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// A Kubernetes Cluster resource can be imported using its `resource id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import ionoscloud:k8s/cluster:Cluster demo k8s_cluster uuid
    /// ```
    /// 
    /// This can be helpful when you want to import kubernetes clusters which you have already created manually or using other means, outside of pulumi.
    /// 
    /// ⚠️ **_Warning: **During a maintenance window, k8s can update your `k8s_version` if the old one reaches end of life. This upgrade will not be shown in the plan, as we prevent
    /// 
    /// pulumi from doing a downgrade, as downgrading `k8s_version` is not supported._**
    /// </summary>
    [IonoscloudResourceType("ionoscloud:k8s/cluster:Cluster")]
    public partial class Cluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// [bool] When set to true, allows the update of immutable fields by first destroying and then re-creating the cluster.
        /// 
        /// ⚠️ **_Warning: `allow_replace` - lets you update immutable fields, but it first destroys and then re-creates the cluster in order to do it. Set the field to true only if you know what you are doing._**
        /// </summary>
        [Output("allowReplace")]
        public Output<bool?> AllowReplace { get; private set; } = null!;

        /// <summary>
        /// [list] Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.
        /// </summary>
        [Output("apiSubnetAllowLists")]
        public Output<ImmutableArray<string>> ApiSubnetAllowLists { get; private set; } = null!;

        /// <summary>
        /// [string] The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported. The provider will ignore downgrades of patch level.
        /// </summary>
        [Output("k8sVersion")]
        public Output<string> K8sVersion { get; private set; } = null!;

        /// <summary>
        /// [string] This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have a data center at that location. This property is not adjustable.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
        /// </summary>
        [Output("maintenanceWindow")]
        public Output<Outputs.ClusterMaintenanceWindow> MaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// [string] The name of the Kubernetes Cluster.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// [string] The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the same location as the cluster's location. This attribute is mandatory if the cluster is private.
        /// </summary>
        [Output("natGatewayIp")]
        public Output<string?> NatGatewayIp { get; private set; } = null!;

        /// <summary>
        /// [string] The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid CIDR notation for an IPv4 network prefix of 16 bits length.
        /// </summary>
        [Output("nodeSubnet")]
        public Output<string> NodeSubnet { get; private set; } = null!;

        /// <summary>
        /// [boolean] Indicates if the cluster is public or private. This attribute is immutable.
        /// </summary>
        [Output("public")]
        public Output<bool?> Public { get; private set; } = null!;

        /// <summary>
        /// [list] List of IONOS Object Storage buckets configured for K8s usage. For now it contains only an IONOS Object Storage bucket used to store K8s API audit logs.
        /// </summary>
        [Output("s3Buckets")]
        public Output<ImmutableArray<Outputs.ClusterS3Bucket>> S3Buckets { get; private set; } = null!;

        /// <summary>
        /// [list] List of versions that may be used for node pools under this cluster
        /// </summary>
        [Output("viableNodePoolVersions")]
        public Output<ImmutableArray<string>> ViableNodePoolVersions { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs? args = null, CustomResourceOptions? options = null)
            : base("ionoscloud:k8s/cluster:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("ionoscloud:k8s/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [bool] When set to true, allows the update of immutable fields by first destroying and then re-creating the cluster.
        /// 
        /// ⚠️ **_Warning: `allow_replace` - lets you update immutable fields, but it first destroys and then re-creates the cluster in order to do it. Set the field to true only if you know what you are doing._**
        /// </summary>
        [Input("allowReplace")]
        public Input<bool>? AllowReplace { get; set; }

        [Input("apiSubnetAllowLists")]
        private InputList<string>? _apiSubnetAllowLists;

        /// <summary>
        /// [list] Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.
        /// </summary>
        public InputList<string> ApiSubnetAllowLists
        {
            get => _apiSubnetAllowLists ?? (_apiSubnetAllowLists = new InputList<string>());
            set => _apiSubnetAllowLists = value;
        }

        /// <summary>
        /// [string] The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported. The provider will ignore downgrades of patch level.
        /// </summary>
        [Input("k8sVersion")]
        public Input<string>? K8sVersion { get; set; }

        /// <summary>
        /// [string] This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have a data center at that location. This property is not adjustable.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.ClusterMaintenanceWindowArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// [string] The name of the Kubernetes Cluster.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// [string] The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the same location as the cluster's location. This attribute is mandatory if the cluster is private.
        /// </summary>
        [Input("natGatewayIp")]
        public Input<string>? NatGatewayIp { get; set; }

        /// <summary>
        /// [string] The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid CIDR notation for an IPv4 network prefix of 16 bits length.
        /// </summary>
        [Input("nodeSubnet")]
        public Input<string>? NodeSubnet { get; set; }

        /// <summary>
        /// [boolean] Indicates if the cluster is public or private. This attribute is immutable.
        /// </summary>
        [Input("public")]
        public Input<bool>? Public { get; set; }

        [Input("s3Buckets")]
        private InputList<Inputs.ClusterS3BucketArgs>? _s3Buckets;

        /// <summary>
        /// [list] List of IONOS Object Storage buckets configured for K8s usage. For now it contains only an IONOS Object Storage bucket used to store K8s API audit logs.
        /// </summary>
        public InputList<Inputs.ClusterS3BucketArgs> S3Buckets
        {
            get => _s3Buckets ?? (_s3Buckets = new InputList<Inputs.ClusterS3BucketArgs>());
            set => _s3Buckets = value;
        }

        public ClusterArgs()
        {
        }
        public static new ClusterArgs Empty => new ClusterArgs();
    }

    public sealed class ClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [bool] When set to true, allows the update of immutable fields by first destroying and then re-creating the cluster.
        /// 
        /// ⚠️ **_Warning: `allow_replace` - lets you update immutable fields, but it first destroys and then re-creates the cluster in order to do it. Set the field to true only if you know what you are doing._**
        /// </summary>
        [Input("allowReplace")]
        public Input<bool>? AllowReplace { get; set; }

        [Input("apiSubnetAllowLists")]
        private InputList<string>? _apiSubnetAllowLists;

        /// <summary>
        /// [list] Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.
        /// </summary>
        public InputList<string> ApiSubnetAllowLists
        {
            get => _apiSubnetAllowLists ?? (_apiSubnetAllowLists = new InputList<string>());
            set => _apiSubnetAllowLists = value;
        }

        /// <summary>
        /// [string] The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported. The provider will ignore downgrades of patch level.
        /// </summary>
        [Input("k8sVersion")]
        public Input<string>? K8sVersion { get; set; }

        /// <summary>
        /// [string] This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have a data center at that location. This property is not adjustable.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.ClusterMaintenanceWindowGetArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// [string] The name of the Kubernetes Cluster.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// [string] The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the same location as the cluster's location. This attribute is mandatory if the cluster is private.
        /// </summary>
        [Input("natGatewayIp")]
        public Input<string>? NatGatewayIp { get; set; }

        /// <summary>
        /// [string] The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid CIDR notation for an IPv4 network prefix of 16 bits length.
        /// </summary>
        [Input("nodeSubnet")]
        public Input<string>? NodeSubnet { get; set; }

        /// <summary>
        /// [boolean] Indicates if the cluster is public or private. This attribute is immutable.
        /// </summary>
        [Input("public")]
        public Input<bool>? Public { get; set; }

        [Input("s3Buckets")]
        private InputList<Inputs.ClusterS3BucketGetArgs>? _s3Buckets;

        /// <summary>
        /// [list] List of IONOS Object Storage buckets configured for K8s usage. For now it contains only an IONOS Object Storage bucket used to store K8s API audit logs.
        /// </summary>
        public InputList<Inputs.ClusterS3BucketGetArgs> S3Buckets
        {
            get => _s3Buckets ?? (_s3Buckets = new InputList<Inputs.ClusterS3BucketGetArgs>());
            set => _s3Buckets = value;
        }

        [Input("viableNodePoolVersions")]
        private InputList<string>? _viableNodePoolVersions;

        /// <summary>
        /// [list] List of versions that may be used for node pools under this cluster
        /// </summary>
        public InputList<string> ViableNodePoolVersions
        {
            get => _viableNodePoolVersions ?? (_viableNodePoolVersions = new InputList<string>());
            set => _viableNodePoolVersions = value;
        }

        public ClusterState()
        {
        }
        public static new ClusterState Empty => new ClusterState();
    }
}
