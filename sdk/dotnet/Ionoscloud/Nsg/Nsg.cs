// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Ionoscloud.Pulumi.Ionoscloud.Nsg
{
    /// <summary>
    /// Manages a **Network Security Group** on IonosCloud.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ionoscloud = Pulumi.Ionoscloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Ionoscloud.Compute.Datacenter("example", new()
    ///     {
    ///         Name = "Datacenter NSG Example",
    ///         Location = "de/txl",
    ///     });
    /// 
    ///     var exampleNsg = new Ionoscloud.Nsg.Nsg("example", new()
    ///     {
    ///         Name = "Example NSG",
    ///         Description = "Example NSG Description",
    ///         DatacenterId = example.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Resource Server can be imported using the `resource id` and the `datacenter id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import ionoscloud:nsg/nsg:Nsg mynsg datacenter uuid/nsg uuid
    /// ```
    /// 
    /// Or by using an `import` block. Here is an example that allows you to import the default created nsg into pulumi.
    /// 
    /// hcl
    /// 
    /// resource "ionoscloud_datacenter" "example" {
    /// 
    ///   name            = "Datacenter NSG Example"
    /// 
    ///   location        = "de/txl"
    /// 
    /// }
    /// 
    /// import {
    /// 
    ///   to = ionoscloud_nsg.imported
    /// 
    ///   id = "datacenter uuid/default nsg uuid"
    /// 
    /// }
    /// 
    /// resource "ionoscloud_nsg" "imported_default" {  # Imported here
    /// 
    ///   datacenter_id     = ionoscloud_datacenter.example.id
    /// 
    /// }
    /// </summary>
    [IonoscloudResourceType("ionoscloud:nsg/nsg:Nsg")]
    public partial class Nsg : global::Pulumi.CustomResource
    {
        /// <summary>
        /// [string] The ID of a Virtual Data Center.
        /// </summary>
        [Output("datacenterId")]
        public Output<string> DatacenterId { get; private set; } = null!;

        /// <summary>
        /// [string] Description for the Network Security Group.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// [string] The name of the Network Security Group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of Firewall Rules that are part of the Network Security Group
        /// </summary>
        [Output("ruleIds")]
        public Output<ImmutableArray<string>> RuleIds { get; private set; } = null!;


        /// <summary>
        /// Create a Nsg resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Nsg(string name, NsgArgs args, CustomResourceOptions? options = null)
            : base("ionoscloud:nsg/nsg:Nsg", name, args ?? new NsgArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Nsg(string name, Input<string> id, NsgState? state = null, CustomResourceOptions? options = null)
            : base("ionoscloud:nsg/nsg:Nsg", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Nsg resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Nsg Get(string name, Input<string> id, NsgState? state = null, CustomResourceOptions? options = null)
        {
            return new Nsg(name, id, state, options);
        }
    }

    public sealed class NsgArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [string] The ID of a Virtual Data Center.
        /// </summary>
        [Input("datacenterId", required: true)]
        public Input<string> DatacenterId { get; set; } = null!;

        /// <summary>
        /// [string] Description for the Network Security Group.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// [string] The name of the Network Security Group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public NsgArgs()
        {
        }
        public static new NsgArgs Empty => new NsgArgs();
    }

    public sealed class NsgState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [string] The ID of a Virtual Data Center.
        /// </summary>
        [Input("datacenterId")]
        public Input<string>? DatacenterId { get; set; }

        /// <summary>
        /// [string] Description for the Network Security Group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// [string] The name of the Network Security Group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ruleIds")]
        private InputList<string>? _ruleIds;

        /// <summary>
        /// List of Firewall Rules that are part of the Network Security Group
        /// </summary>
        public InputList<string> RuleIds
        {
            get => _ruleIds ?? (_ruleIds = new InputList<string>());
            set => _ruleIds = value;
        }

        public NsgState()
        {
        }
        public static new NsgState Empty => new NsgState();
    }
}
