// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Ionoscloud.Pulumi.Ionoscloud.Nsg
{
    /// <summary>
    /// Links a Network Security Group to a IonosCloud datacenter. The datacenter can only have one linked NSG. To set a new NSG for the datacenter, the current one will be unlinked.
    /// 
    /// ## Example Usage
    /// 
    /// A Network Security Group can be linked to a `ionoscloud.compute.Datacenter` with this resource.
    /// Deleting the resource will unlink the NSG from the datacenter.
    /// 
    /// ### Select an external volume
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ionoscloud = Pulumi.Ionoscloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Ionoscloud.Compute.Datacenter("example", new()
    ///     {
    ///         Name = "Datacenter Default NSG Example",
    ///         Location = "de/fra",
    ///     });
    /// 
    ///     var exampleNsg = new Ionoscloud.Nsg.Nsg("example", new()
    ///     {
    ///         Name = "NSG",
    ///         Description = "NSG",
    ///         DatacenterId = example.Id,
    ///     });
    /// 
    ///     var exampleDatacenterNsgSelection = new Ionoscloud.Nsg.DatacenterNsgSelection("example", new()
    ///     {
    ///         DatacenterId = example.Id,
    ///         NsgId = exampleNsg.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [IonoscloudResourceType("ionoscloud:nsg/datacenterNsgSelection:DatacenterNsgSelection")]
    public partial class DatacenterNsgSelection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// [string] The ID of a Virtual Data Center.
        /// </summary>
        [Output("datacenterId")]
        public Output<string> DatacenterId { get; private set; } = null!;

        /// <summary>
        /// [string] The ID of a Network Security Group.
        /// </summary>
        [Output("nsgId")]
        public Output<string> NsgId { get; private set; } = null!;


        /// <summary>
        /// Create a DatacenterNsgSelection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DatacenterNsgSelection(string name, DatacenterNsgSelectionArgs args, CustomResourceOptions? options = null)
            : base("ionoscloud:nsg/datacenterNsgSelection:DatacenterNsgSelection", name, args ?? new DatacenterNsgSelectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DatacenterNsgSelection(string name, Input<string> id, DatacenterNsgSelectionState? state = null, CustomResourceOptions? options = null)
            : base("ionoscloud:nsg/datacenterNsgSelection:DatacenterNsgSelection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DatacenterNsgSelection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DatacenterNsgSelection Get(string name, Input<string> id, DatacenterNsgSelectionState? state = null, CustomResourceOptions? options = null)
        {
            return new DatacenterNsgSelection(name, id, state, options);
        }
    }

    public sealed class DatacenterNsgSelectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [string] The ID of a Virtual Data Center.
        /// </summary>
        [Input("datacenterId", required: true)]
        public Input<string> DatacenterId { get; set; } = null!;

        /// <summary>
        /// [string] The ID of a Network Security Group.
        /// </summary>
        [Input("nsgId", required: true)]
        public Input<string> NsgId { get; set; } = null!;

        public DatacenterNsgSelectionArgs()
        {
        }
        public static new DatacenterNsgSelectionArgs Empty => new DatacenterNsgSelectionArgs();
    }

    public sealed class DatacenterNsgSelectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [string] The ID of a Virtual Data Center.
        /// </summary>
        [Input("datacenterId")]
        public Input<string>? DatacenterId { get; set; }

        /// <summary>
        /// [string] The ID of a Network Security Group.
        /// </summary>
        [Input("nsgId")]
        public Input<string>? NsgId { get; set; }

        public DatacenterNsgSelectionState()
        {
        }
        public static new DatacenterNsgSelectionState Empty => new DatacenterNsgSelectionState();
    }
}
