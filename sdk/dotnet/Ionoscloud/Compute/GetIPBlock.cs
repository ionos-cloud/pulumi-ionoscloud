// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Ionoscloud.Pulumi.Ionoscloud.Compute
{
    public static class GetIPBlock
    {
        /// <summary>
        /// The **IP Block data source** can be used to search for and return an existing Ip Block.
        /// You can provide a string for the id, the name or the location parameters which will be compared with the provisioned Ip Blocks.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// When this happens, please refine your search string so that it is specific enough to return only one result.
        /// 
        /// ## Example Usage
        /// 
        /// ### By ID
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Compute.GetIPBlock.Invoke(new()
        ///     {
        ///         Id = "ipblock_id",
        ///     });
        /// 
        /// });
        /// ``` 
        /// 
        /// ### By Name
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Compute.GetIPBlock.Invoke(new()
        ///     {
        ///         Name = "IP Block Name",
        ///     });
        /// 
        /// });
        /// ``` 
        /// 
        /// ### By Location
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Compute.GetIPBlock.Invoke(new()
        ///     {
        ///         Location = "us/las",
        ///     });
        /// 
        /// });
        /// ``` 
        /// 
        /// ### By Name &amp; Location
        /// ``` 
        /// data "ionoscloud_ipblock" "example" {
        ///   name      = "IP Block Name"
        ///   location  = "us/las"
        /// }
        /// ```
        /// </summary>
        public static Task<GetIPBlockResult> InvokeAsync(GetIPBlockArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIPBlockResult>("ionoscloud:compute/getIPBlock:getIPBlock", args ?? new GetIPBlockArgs(), options.WithDefaults());

        /// <summary>
        /// The **IP Block data source** can be used to search for and return an existing Ip Block.
        /// You can provide a string for the id, the name or the location parameters which will be compared with the provisioned Ip Blocks.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// When this happens, please refine your search string so that it is specific enough to return only one result.
        /// 
        /// ## Example Usage
        /// 
        /// ### By ID
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Compute.GetIPBlock.Invoke(new()
        ///     {
        ///         Id = "ipblock_id",
        ///     });
        /// 
        /// });
        /// ``` 
        /// 
        /// ### By Name
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Compute.GetIPBlock.Invoke(new()
        ///     {
        ///         Name = "IP Block Name",
        ///     });
        /// 
        /// });
        /// ``` 
        /// 
        /// ### By Location
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Compute.GetIPBlock.Invoke(new()
        ///     {
        ///         Location = "us/las",
        ///     });
        /// 
        /// });
        /// ``` 
        /// 
        /// ### By Name &amp; Location
        /// ``` 
        /// data "ionoscloud_ipblock" "example" {
        ///   name      = "IP Block Name"
        ///   location  = "us/las"
        /// }
        /// ```
        /// </summary>
        public static Output<GetIPBlockResult> Invoke(GetIPBlockInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIPBlockResult>("ionoscloud:compute/getIPBlock:getIPBlock", args ?? new GetIPBlockInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The **IP Block data source** can be used to search for and return an existing Ip Block.
        /// You can provide a string for the id, the name or the location parameters which will be compared with the provisioned Ip Blocks.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// When this happens, please refine your search string so that it is specific enough to return only one result.
        /// 
        /// ## Example Usage
        /// 
        /// ### By ID
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Compute.GetIPBlock.Invoke(new()
        ///     {
        ///         Id = "ipblock_id",
        ///     });
        /// 
        /// });
        /// ``` 
        /// 
        /// ### By Name
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Compute.GetIPBlock.Invoke(new()
        ///     {
        ///         Name = "IP Block Name",
        ///     });
        /// 
        /// });
        /// ``` 
        /// 
        /// ### By Location
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.Compute.GetIPBlock.Invoke(new()
        ///     {
        ///         Location = "us/las",
        ///     });
        /// 
        /// });
        /// ``` 
        /// 
        /// ### By Name &amp; Location
        /// ``` 
        /// data "ionoscloud_ipblock" "example" {
        ///   name      = "IP Block Name"
        ///   location  = "us/las"
        /// }
        /// ```
        /// </summary>
        public static Output<GetIPBlockResult> Invoke(GetIPBlockInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetIPBlockResult>("ionoscloud:compute/getIPBlock:getIPBlock", args ?? new GetIPBlockInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIPBlockArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of an existing Ip Block that you want to search for.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The regional location for this IP Block: us/las, us/ewr, de/fra, de/fkb.
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// Name of an existing Ip Block that you want to search for.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The number of IP addresses to reserve for this block.
        /// </summary>
        [Input("size")]
        public int? Size { get; set; }

        public GetIPBlockArgs()
        {
        }
        public static new GetIPBlockArgs Empty => new GetIPBlockArgs();
    }

    public sealed class GetIPBlockInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of an existing Ip Block that you want to search for.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The regional location for this IP Block: us/las, us/ewr, de/fra, de/fkb.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Name of an existing Ip Block that you want to search for.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The number of IP addresses to reserve for this block.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        public GetIPBlockInvokeArgs()
        {
        }
        public static new GetIPBlockInvokeArgs Empty => new GetIPBlockInvokeArgs();
    }


    [OutputType]
    public sealed class GetIPBlockResult
    {
        /// <summary>
        /// The id of Ip Block
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Read-Only attribute. Lists consumption detail of an individual ip
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIPBlockIpConsumerResult> IpConsumers;
        /// <summary>
        /// The list of IP addresses associated with this block.
        /// </summary>
        public readonly ImmutableArray<string> Ips;
        /// <summary>
        /// The regional location for this IP Block: us/las, us/ewr, de/fra, de/fkb.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The name of Ip Block
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The number of IP addresses to reserve for this block.
        /// </summary>
        public readonly int Size;

        [OutputConstructor]
        private GetIPBlockResult(
            string id,

            ImmutableArray<Outputs.GetIPBlockIpConsumerResult> ipConsumers,

            ImmutableArray<string> ips,

            string location,

            string name,

            int size)
        {
            Id = id;
            IpConsumers = ipConsumers;
            Ips = ips;
            Location = location;
            Name = name;
            Size = size;
        }
    }
}
