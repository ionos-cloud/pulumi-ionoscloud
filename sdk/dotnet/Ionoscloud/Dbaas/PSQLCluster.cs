// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Ionoscloud.Pulumi.Ionoscloud.Dbaas
{
    /// <summary>
    /// Manages a **DbaaS PgSql Cluster**.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ionoscloud = Pulumi.Ionoscloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Basic example
    ///     var example = new Ionoscloud.Compute.Datacenter("example", new()
    ///     {
    ///         Name = "example",
    ///         Location = "de/txl",
    ///         Description = "Datacenter for testing dbaas cluster",
    ///     });
    /// 
    ///     var exampleLan = new Ionoscloud.Compute.Lan("example", new()
    ///     {
    ///         DatacenterId = example.Id,
    ///         Public = false,
    ///         Name = "example",
    ///     });
    /// 
    ///     var examplePSQLCluster = new Ionoscloud.Dbaas.PSQLCluster("example", new()
    ///     {
    ///         PostgresVersion = "12",
    ///         Instances = 1,
    ///         Cores = 4,
    ///         Ram = 2048,
    ///         StorageSize = 2048,
    ///         StorageType = "HDD",
    ///         ConnectionPooler = new Ionoscloud.Dbaas.Inputs.PSQLClusterConnectionPoolerArgs
    ///         {
    ///             Enabled = true,
    ///             PoolMode = "session",
    ///         },
    ///         Connections = new Ionoscloud.Dbaas.Inputs.PSQLClusterConnectionsArgs
    ///         {
    ///             DatacenterId = example.Id,
    ///             LanId = exampleLan.Id,
    ///             Cidr = "192.168.100.1/24",
    ///         },
    ///         Location = example.Location,
    ///         DisplayName = "PostgreSQL_cluster",
    ///         MaintenanceWindow = new Ionoscloud.Dbaas.Inputs.PSQLClusterMaintenanceWindowArgs
    ///         {
    ///             DayOfTheWeek = "Sunday",
    ///             Time = "09:00:00",
    ///         },
    ///         Credentials = new Ionoscloud.Dbaas.Inputs.PSQLClusterCredentialsArgs
    ///         {
    ///             Username = "username",
    ///             Password = "strongPassword",
    ///         },
    ///         SynchronizationMode = "ASYNCHRONOUS",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ionoscloud = Pulumi.Ionoscloud;
    /// using Random = Pulumi.Random;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Complete example
    ///     var example = new Ionoscloud.Compute.Datacenter("example", new()
    ///     {
    ///         Name = "example",
    ///         Location = "de/txl",
    ///         Description = "Datacenter for testing dbaas cluster",
    ///     });
    /// 
    ///     var exampleLan = new Ionoscloud.Compute.Lan("example", new()
    ///     {
    ///         DatacenterId = example.Id,
    ///         Public = false,
    ///         Name = "example",
    ///     });
    /// 
    ///     var exampleServer = new Ionoscloud.Compute.Server("example", new()
    ///     {
    ///         Name = "example",
    ///         DatacenterId = example.Id,
    ///         Cores = 2,
    ///         Ram = 2048,
    ///         AvailabilityZone = "ZONE_1",
    ///         CpuFamily = "INTEL_SKYLAKE",
    ///         ImageName = "rockylinux-8-GenericCloud-20230518",
    ///         ImagePassword = "password",
    ///         Volume = new Ionoscloud.Compute.Inputs.ServerVolumeArgs
    ///         {
    ///             Name = "example",
    ///             Size = 6,
    ///             DiskType = "SSD Standard",
    ///         },
    ///         Nic = new Ionoscloud.Compute.Inputs.ServerNicArgs
    ///         {
    ///             Lan = exampleLan.Id,
    ///             Name = "example",
    ///             Dhcp = true,
    ///         },
    ///     });
    /// 
    ///     var clusterPassword = new Random.Index.Password("cluster_password", new()
    ///     {
    ///         Length = 16,
    ///         Special = true,
    ///         OverrideSpecial = "!#$%&amp;*()-_=+[]{}&lt;&gt;:?",
    ///     });
    /// 
    ///     var examplePSQLCluster = new Ionoscloud.Dbaas.PSQLCluster("example", new()
    ///     {
    ///         PostgresVersion = "12",
    ///         Instances = 1,
    ///         Cores = 4,
    ///         Ram = 2048,
    ///         StorageSize = 2048,
    ///         StorageType = "HDD",
    ///         ConnectionPooler = new Ionoscloud.Dbaas.Inputs.PSQLClusterConnectionPoolerArgs
    ///         {
    ///             Enabled = true,
    ///             PoolMode = "session",
    ///         },
    ///         Connections = new Ionoscloud.Dbaas.Inputs.PSQLClusterConnectionsArgs
    ///         {
    ///             DatacenterId = example.Id,
    ///             LanId = exampleLan.Id,
    ///             Cidr = "database_ip_cidr_from_nic",
    ///         },
    ///         Location = example.Location,
    ///         DisplayName = "PostgreSQL_cluster",
    ///         MaintenanceWindow = new Ionoscloud.Dbaas.Inputs.PSQLClusterMaintenanceWindowArgs
    ///         {
    ///             DayOfTheWeek = "Sunday",
    ///             Time = "09:00:00",
    ///         },
    ///         Credentials = new Ionoscloud.Dbaas.Inputs.PSQLClusterCredentialsArgs
    ///         {
    ///             Username = "username",
    ///             Password = clusterPassword.Result,
    ///         },
    ///         SynchronizationMode = "ASYNCHRONOUS",
    ///         FromBackup = new Ionoscloud.Dbaas.Inputs.PSQLClusterFromBackupArgs
    ///         {
    ///             BackupId = "backup_uuid",
    ///             RecoveryTargetTime = "2021-12-06T13:54:08Z",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Resource DbaaS Postgres Cluster can be imported using the `cluster_id`, e.g.
    /// 
    /// ```sh
    /// $ pulumi import ionoscloud:dbaas/pSQLCluster:PSQLCluster mycluser cluster uuid
    /// ```
    /// </summary>
    [IonoscloudResourceType("ionoscloud:dbaas/pSQLCluster:PSQLCluster")]
    public partial class PSQLCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Computed)[string] The IONOS Object Storage location where the backups will be stored. Possible values are: `de`, `eu-south-2`, `eu-central-2`. This attribute is immutable (disallowed in update requests).
        /// </summary>
        [Output("backupLocation")]
        public Output<string> BackupLocation { get; private set; } = null!;

        /// <summary>
        /// [object]
        /// </summary>
        [Output("connectionPooler")]
        public Output<Outputs.PSQLClusterConnectionPooler> ConnectionPooler { get; private set; } = null!;

        /// <summary>
        /// [string] Details about the network connection for your cluster.
        /// </summary>
        [Output("connections")]
        public Output<Outputs.PSQLClusterConnections?> Connections { get; private set; } = null!;

        /// <summary>
        /// [int] The number of CPU cores per replica.
        /// </summary>
        [Output("cores")]
        public Output<int> Cores { get; private set; } = null!;

        /// <summary>
        /// [string] Credentials for the database user to be created. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Output("credentials")]
        public Output<Outputs.PSQLClusterCredentials> Credentials { get; private set; } = null!;

        /// <summary>
        /// [string] The friendly name of your cluster.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// [string] The DNS name pointing to your cluster.
        /// </summary>
        [Output("dnsName")]
        public Output<string> DnsName { get; private set; } = null!;

        /// <summary>
        /// [string] The unique ID of the backup you want to restore. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Output("fromBackup")]
        public Output<Outputs.PSQLClusterFromBackup?> FromBackup { get; private set; } = null!;

        /// <summary>
        /// [int] The total number of instances in the cluster (one master and n-1 standbys)
        /// </summary>
        [Output("instances")]
        public Output<int> Instances { get; private set; } = null!;

        /// <summary>
        /// [string] The physical location where the cluster will be created. This will be where all of your instances live. Property cannot be modified after datacenter creation. Possible values are: `de/fra`, `de/txl`, `gb/lhr`, `es/vit`, `us/ewr`, `us/las`. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// (Computed) A weekly 4 hour-long window, during which maintenance might occur
        /// </summary>
        [Output("maintenanceWindow")]
        public Output<Outputs.PSQLClusterMaintenanceWindow> MaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// [string] The PostgreSQL version of your cluster.
        /// </summary>
        [Output("postgresVersion")]
        public Output<string> PostgresVersion { get; private set; } = null!;

        /// <summary>
        /// [int] The amount of memory per instance in megabytes. Has to be a multiple of 1024.
        /// </summary>
        [Output("ram")]
        public Output<int> Ram { get; private set; } = null!;

        /// <summary>
        /// [int] The amount of storage per instance in MB. Has to be a multiple of 2048.
        /// </summary>
        [Output("storageSize")]
        public Output<int> StorageSize { get; private set; } = null!;

        /// <summary>
        /// [string] SSD, SSD Standard, SSD Premium, or HDD. Value "SSD" is deprecated, use the equivalent "SSD Premium" instead. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Output("storageType")]
        public Output<string> StorageType { get; private set; } = null!;

        /// <summary>
        /// [string] Represents different modes of replication. Can have one of the following values: ASYNCHRONOUS, SYNCHRONOUS, STRICTLY_SYNCHRONOUS. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Output("synchronizationMode")]
        public Output<string> SynchronizationMode { get; private set; } = null!;


        /// <summary>
        /// Create a PSQLCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PSQLCluster(string name, PSQLClusterArgs args, CustomResourceOptions? options = null)
            : base("ionoscloud:dbaas/pSQLCluster:PSQLCluster", name, args ?? new PSQLClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PSQLCluster(string name, Input<string> id, PSQLClusterState? state = null, CustomResourceOptions? options = null)
            : base("ionoscloud:dbaas/pSQLCluster:PSQLCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PSQLCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PSQLCluster Get(string name, Input<string> id, PSQLClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new PSQLCluster(name, id, state, options);
        }
    }

    public sealed class PSQLClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Computed)[string] The IONOS Object Storage location where the backups will be stored. Possible values are: `de`, `eu-south-2`, `eu-central-2`. This attribute is immutable (disallowed in update requests).
        /// </summary>
        [Input("backupLocation")]
        public Input<string>? BackupLocation { get; set; }

        /// <summary>
        /// [object]
        /// </summary>
        [Input("connectionPooler")]
        public Input<Inputs.PSQLClusterConnectionPoolerArgs>? ConnectionPooler { get; set; }

        /// <summary>
        /// [string] Details about the network connection for your cluster.
        /// </summary>
        [Input("connections")]
        public Input<Inputs.PSQLClusterConnectionsArgs>? Connections { get; set; }

        /// <summary>
        /// [int] The number of CPU cores per replica.
        /// </summary>
        [Input("cores", required: true)]
        public Input<int> Cores { get; set; } = null!;

        /// <summary>
        /// [string] Credentials for the database user to be created. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Input("credentials", required: true)]
        public Input<Inputs.PSQLClusterCredentialsArgs> Credentials { get; set; } = null!;

        /// <summary>
        /// [string] The friendly name of your cluster.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// [string] The unique ID of the backup you want to restore. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Input("fromBackup")]
        public Input<Inputs.PSQLClusterFromBackupArgs>? FromBackup { get; set; }

        /// <summary>
        /// [int] The total number of instances in the cluster (one master and n-1 standbys)
        /// </summary>
        [Input("instances", required: true)]
        public Input<int> Instances { get; set; } = null!;

        /// <summary>
        /// [string] The physical location where the cluster will be created. This will be where all of your instances live. Property cannot be modified after datacenter creation. Possible values are: `de/fra`, `de/txl`, `gb/lhr`, `es/vit`, `us/ewr`, `us/las`. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// (Computed) A weekly 4 hour-long window, during which maintenance might occur
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.PSQLClusterMaintenanceWindowArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// [string] The PostgreSQL version of your cluster.
        /// </summary>
        [Input("postgresVersion", required: true)]
        public Input<string> PostgresVersion { get; set; } = null!;

        /// <summary>
        /// [int] The amount of memory per instance in megabytes. Has to be a multiple of 1024.
        /// </summary>
        [Input("ram", required: true)]
        public Input<int> Ram { get; set; } = null!;

        /// <summary>
        /// [int] The amount of storage per instance in MB. Has to be a multiple of 2048.
        /// </summary>
        [Input("storageSize", required: true)]
        public Input<int> StorageSize { get; set; } = null!;

        /// <summary>
        /// [string] SSD, SSD Standard, SSD Premium, or HDD. Value "SSD" is deprecated, use the equivalent "SSD Premium" instead. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Input("storageType", required: true)]
        public Input<string> StorageType { get; set; } = null!;

        /// <summary>
        /// [string] Represents different modes of replication. Can have one of the following values: ASYNCHRONOUS, SYNCHRONOUS, STRICTLY_SYNCHRONOUS. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Input("synchronizationMode", required: true)]
        public Input<string> SynchronizationMode { get; set; } = null!;

        public PSQLClusterArgs()
        {
        }
        public static new PSQLClusterArgs Empty => new PSQLClusterArgs();
    }

    public sealed class PSQLClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Computed)[string] The IONOS Object Storage location where the backups will be stored. Possible values are: `de`, `eu-south-2`, `eu-central-2`. This attribute is immutable (disallowed in update requests).
        /// </summary>
        [Input("backupLocation")]
        public Input<string>? BackupLocation { get; set; }

        /// <summary>
        /// [object]
        /// </summary>
        [Input("connectionPooler")]
        public Input<Inputs.PSQLClusterConnectionPoolerGetArgs>? ConnectionPooler { get; set; }

        /// <summary>
        /// [string] Details about the network connection for your cluster.
        /// </summary>
        [Input("connections")]
        public Input<Inputs.PSQLClusterConnectionsGetArgs>? Connections { get; set; }

        /// <summary>
        /// [int] The number of CPU cores per replica.
        /// </summary>
        [Input("cores")]
        public Input<int>? Cores { get; set; }

        /// <summary>
        /// [string] Credentials for the database user to be created. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Input("credentials")]
        public Input<Inputs.PSQLClusterCredentialsGetArgs>? Credentials { get; set; }

        /// <summary>
        /// [string] The friendly name of your cluster.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// [string] The DNS name pointing to your cluster.
        /// </summary>
        [Input("dnsName")]
        public Input<string>? DnsName { get; set; }

        /// <summary>
        /// [string] The unique ID of the backup you want to restore. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Input("fromBackup")]
        public Input<Inputs.PSQLClusterFromBackupGetArgs>? FromBackup { get; set; }

        /// <summary>
        /// [int] The total number of instances in the cluster (one master and n-1 standbys)
        /// </summary>
        [Input("instances")]
        public Input<int>? Instances { get; set; }

        /// <summary>
        /// [string] The physical location where the cluster will be created. This will be where all of your instances live. Property cannot be modified after datacenter creation. Possible values are: `de/fra`, `de/txl`, `gb/lhr`, `es/vit`, `us/ewr`, `us/las`. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// (Computed) A weekly 4 hour-long window, during which maintenance might occur
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.PSQLClusterMaintenanceWindowGetArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// [string] The PostgreSQL version of your cluster.
        /// </summary>
        [Input("postgresVersion")]
        public Input<string>? PostgresVersion { get; set; }

        /// <summary>
        /// [int] The amount of memory per instance in megabytes. Has to be a multiple of 1024.
        /// </summary>
        [Input("ram")]
        public Input<int>? Ram { get; set; }

        /// <summary>
        /// [int] The amount of storage per instance in MB. Has to be a multiple of 2048.
        /// </summary>
        [Input("storageSize")]
        public Input<int>? StorageSize { get; set; }

        /// <summary>
        /// [string] SSD, SSD Standard, SSD Premium, or HDD. Value "SSD" is deprecated, use the equivalent "SSD Premium" instead. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        /// <summary>
        /// [string] Represents different modes of replication. Can have one of the following values: ASYNCHRONOUS, SYNCHRONOUS, STRICTLY_SYNCHRONOUS. This attribute is immutable(disallowed in update requests).
        /// </summary>
        [Input("synchronizationMode")]
        public Input<string>? SynchronizationMode { get; set; }

        public PSQLClusterState()
        {
        }
        public static new PSQLClusterState Empty => new PSQLClusterState();
    }
}
