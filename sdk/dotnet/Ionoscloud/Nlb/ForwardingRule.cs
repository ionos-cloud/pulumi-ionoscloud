// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Ionoscloud.Pulumi.Ionoscloud.Nlb
{
    /// <summary>
    /// Manages a **Network Load Balancer Forwarding Rule** on IonosCloud.
    /// 
    /// ## Example Usage
    /// 
    /// ### 
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ionoscloud = Ionoscloud.Pulumi.Ionoscloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Ionoscloud.Compute.Datacenter("example", new()
    ///     {
    ///         Name = "Datacenter Example",
    ///         Location = "us/las",
    ///         Description = "Datacenter Description",
    ///         SecAuthProtection = false,
    ///     });
    /// 
    ///     var example1 = new Ionoscloud.Compute.Lan("example1", new()
    ///     {
    ///         DatacenterId = example.Id,
    ///         Public = false,
    ///         Name = "Lan Example 1",
    ///     });
    /// 
    ///     var example2 = new Ionoscloud.Compute.Lan("example2", new()
    ///     {
    ///         DatacenterId = example.Id,
    ///         Public = false,
    ///         Name = "Lan Example 2",
    ///     });
    /// 
    ///     var exampleBalancer = new Ionoscloud.Nlb.Balancer("example", new()
    ///     {
    ///         DatacenterId = example.Id,
    ///         Name = "example",
    ///         ListenerLan = example1.Id,
    ///         TargetLan = example2.Id,
    ///         Ips = new[]
    ///         {
    ///             "10.12.118.224",
    ///         },
    ///         LbPrivateIps = new[]
    ///         {
    ///             "10.13.72.225/24",
    ///         },
    ///     });
    /// 
    ///     var exampleForwardingRule = new Ionoscloud.Nlb.ForwardingRule("example", new()
    ///     {
    ///         DatacenterId = example.Id,
    ///         NetworkloadbalancerId = exampleBalancer.Id,
    ///         Name = "example",
    ///         Algorithm = "SOURCE_IP",
    ///         Protocol = "TCP",
    ///         ListenerIp = "10.12.118.224",
    ///         ListenerPort = 8081,
    ///         Targets = new[]
    ///         {
    ///             new Ionoscloud.Nlb.Inputs.ForwardingRuleTargetArgs
    ///             {
    ///                 Ip = "22.231.2.2",
    ///                 Port = 8080,
    ///                 Weight = 123,
    ///                 ProxyProtocol = "v1",
    ///                 HealthCheck = new Ionoscloud.Nlb.Inputs.ForwardingRuleTargetHealthCheckArgs
    ///                 {
    ///                     Check = true,
    ///                     CheckInterval = 1000,
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// A Network Load Balancer Forwarding Rule resource can be imported using its `resource id`, the `datacenter id` and the `networkloadbalancer id` e.g.
    /// 
    /// ```sh
    /// $ pulumi import ionoscloud:nlb/forwardingRule:ForwardingRule my_networkloadbalancer_forwardingrule datacenter uuid/networkloadbalancer uuid/networkloadbalancer_forwardingrule uuid
    /// ```
    /// </summary>
    [IonoscloudResourceType("ionoscloud:nlb/forwardingRule:ForwardingRule")]
    public partial class ForwardingRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// [string] Algorithm for the balancing.
        /// </summary>
        [Output("algorithm")]
        public Output<string> Algorithm { get; private set; } = null!;

        /// <summary>
        /// [string] A Datacenter's UUID.
        /// </summary>
        [Output("datacenterId")]
        public Output<string> DatacenterId { get; private set; } = null!;

        /// <summary>
        /// Health check attributes for Network Load Balancer forwarding rule.
        /// </summary>
        [Output("healthCheck")]
        public Output<Outputs.ForwardingRuleHealthCheck> HealthCheck { get; private set; } = null!;

        /// <summary>
        /// [string] Listening IP. (inbound)
        /// </summary>
        [Output("listenerIp")]
        public Output<string> ListenerIp { get; private set; } = null!;

        /// <summary>
        /// [int] Listening port number. (inbound) (range: 1 to 65535)
        /// </summary>
        [Output("listenerPort")]
        public Output<int> ListenerPort { get; private set; } = null!;

        /// <summary>
        /// [string] A name of that Network Load Balancer forwarding rule.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("networkloadbalancerId")]
        public Output<string> NetworkloadbalancerId { get; private set; } = null!;

        /// <summary>
        /// [string] Protocol of the balancing.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// [Set] Array of items in that collection.
        /// </summary>
        [Output("targets")]
        public Output<ImmutableArray<Outputs.ForwardingRuleTarget>> Targets { get; private set; } = null!;


        /// <summary>
        /// Create a ForwardingRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ForwardingRule(string name, ForwardingRuleArgs args, CustomResourceOptions? options = null)
            : base("ionoscloud:nlb/forwardingRule:ForwardingRule", name, args ?? new ForwardingRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ForwardingRule(string name, Input<string> id, ForwardingRuleState? state = null, CustomResourceOptions? options = null)
            : base("ionoscloud:nlb/forwardingRule:ForwardingRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ForwardingRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ForwardingRule Get(string name, Input<string> id, ForwardingRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new ForwardingRule(name, id, state, options);
        }
    }

    public sealed class ForwardingRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [string] Algorithm for the balancing.
        /// </summary>
        [Input("algorithm", required: true)]
        public Input<string> Algorithm { get; set; } = null!;

        /// <summary>
        /// [string] A Datacenter's UUID.
        /// </summary>
        [Input("datacenterId", required: true)]
        public Input<string> DatacenterId { get; set; } = null!;

        /// <summary>
        /// Health check attributes for Network Load Balancer forwarding rule.
        /// </summary>
        [Input("healthCheck")]
        public Input<Inputs.ForwardingRuleHealthCheckArgs>? HealthCheck { get; set; }

        /// <summary>
        /// [string] Listening IP. (inbound)
        /// </summary>
        [Input("listenerIp", required: true)]
        public Input<string> ListenerIp { get; set; } = null!;

        /// <summary>
        /// [int] Listening port number. (inbound) (range: 1 to 65535)
        /// </summary>
        [Input("listenerPort", required: true)]
        public Input<int> ListenerPort { get; set; } = null!;

        /// <summary>
        /// [string] A name of that Network Load Balancer forwarding rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkloadbalancerId", required: true)]
        public Input<string> NetworkloadbalancerId { get; set; } = null!;

        /// <summary>
        /// [string] Protocol of the balancing.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("targets", required: true)]
        private InputList<Inputs.ForwardingRuleTargetArgs>? _targets;

        /// <summary>
        /// [Set] Array of items in that collection.
        /// </summary>
        public InputList<Inputs.ForwardingRuleTargetArgs> Targets
        {
            get => _targets ?? (_targets = new InputList<Inputs.ForwardingRuleTargetArgs>());
            set => _targets = value;
        }

        public ForwardingRuleArgs()
        {
        }
        public static new ForwardingRuleArgs Empty => new ForwardingRuleArgs();
    }

    public sealed class ForwardingRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [string] Algorithm for the balancing.
        /// </summary>
        [Input("algorithm")]
        public Input<string>? Algorithm { get; set; }

        /// <summary>
        /// [string] A Datacenter's UUID.
        /// </summary>
        [Input("datacenterId")]
        public Input<string>? DatacenterId { get; set; }

        /// <summary>
        /// Health check attributes for Network Load Balancer forwarding rule.
        /// </summary>
        [Input("healthCheck")]
        public Input<Inputs.ForwardingRuleHealthCheckGetArgs>? HealthCheck { get; set; }

        /// <summary>
        /// [string] Listening IP. (inbound)
        /// </summary>
        [Input("listenerIp")]
        public Input<string>? ListenerIp { get; set; }

        /// <summary>
        /// [int] Listening port number. (inbound) (range: 1 to 65535)
        /// </summary>
        [Input("listenerPort")]
        public Input<int>? ListenerPort { get; set; }

        /// <summary>
        /// [string] A name of that Network Load Balancer forwarding rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkloadbalancerId")]
        public Input<string>? NetworkloadbalancerId { get; set; }

        /// <summary>
        /// [string] Protocol of the balancing.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("targets")]
        private InputList<Inputs.ForwardingRuleTargetGetArgs>? _targets;

        /// <summary>
        /// [Set] Array of items in that collection.
        /// </summary>
        public InputList<Inputs.ForwardingRuleTargetGetArgs> Targets
        {
            get => _targets ?? (_targets = new InputList<Inputs.ForwardingRuleTargetGetArgs>());
            set => _targets = value;
        }

        public ForwardingRuleState()
        {
        }
        public static new ForwardingRuleState Empty => new ForwardingRuleState();
    }
}
