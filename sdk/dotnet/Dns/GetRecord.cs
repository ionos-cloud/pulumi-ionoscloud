// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Dns
{
    public static class GetRecord
    {
        public static Task<GetRecordResult> InvokeAsync(GetRecordArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRecordResult>("ionoscloud:dns/getRecord:getRecord", args ?? new GetRecordArgs(), options.WithDefaults());

        public static Output<GetRecordResult> Invoke(GetRecordInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRecordResult>("ionoscloud:dns/getRecord:getRecord", args ?? new GetRecordInvokeArgs(), options.WithDefaults());

        public static Output<GetRecordResult> Invoke(GetRecordInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRecordResult>("ionoscloud:dns/getRecord:getRecord", args ?? new GetRecordInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRecordArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("partialMatch")]
        public bool? PartialMatch { get; set; }

        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetRecordArgs()
        {
        }
        public static new GetRecordArgs Empty => new GetRecordArgs();
    }

    public sealed class GetRecordInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("partialMatch")]
        public Input<bool>? PartialMatch { get; set; }

        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetRecordInvokeArgs()
        {
        }
        public static new GetRecordInvokeArgs Empty => new GetRecordInvokeArgs();
    }


    [OutputType]
    public sealed class GetRecordResult
    {
        public readonly string Content;
        public readonly bool Enabled;
        public readonly string Fqdn;
        public readonly string? Id;
        public readonly string? Name;
        public readonly bool? PartialMatch;
        public readonly int Priority;
        public readonly int Ttl;
        public readonly string Type;
        public readonly string ZoneId;

        [OutputConstructor]
        private GetRecordResult(
            string content,

            bool enabled,

            string fqdn,

            string? id,

            string? name,

            bool? partialMatch,

            int priority,

            int ttl,

            string type,

            string zoneId)
        {
            Content = content;
            Enabled = enabled;
            Fqdn = fqdn;
            Id = id;
            Name = name;
            PartialMatch = partialMatch;
            Priority = priority;
            Ttl = ttl;
            Type = type;
            ZoneId = zoneId;
        }
    }
}
