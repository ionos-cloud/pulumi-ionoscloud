// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud
{
    public static class GetIpblock
    {
        /// <summary>
        /// The **IP Block data source** can be used to search for and return an existing Ip Block.
        /// You can provide a string for the id, the name or the location parameters which will be compared with the provisioned Ip Blocks.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// When this happens, please refine your search string so that it is specific enough to return only one result.
        /// 
        /// ## Example Usage
        /// 
        /// ### By Name
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.GetIpblock.Invoke(new()
        ///     {
        ///         Name = "IP Block Name",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt; 
        /// 
        /// ### By Location
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.GetIpblock.Invoke(new()
        ///     {
        ///         Location = "us/las",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt; 
        /// 
        /// ### By Name &amp; Location
        /// ``` 
        /// data "ionoscloud_ipblock" "example" {
        ///   name      = "IP Block Name"
        ///   location  = "us/las"
        /// }
        /// ```
        /// </summary>
        public static Task<GetIpblockResult> InvokeAsync(GetIpblockArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpblockResult>("ionoscloud:index/getIpblock:getIpblock", args ?? new GetIpblockArgs(), options.WithDefaults());

        /// <summary>
        /// The **IP Block data source** can be used to search for and return an existing Ip Block.
        /// You can provide a string for the id, the name or the location parameters which will be compared with the provisioned Ip Blocks.
        /// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
        /// When this happens, please refine your search string so that it is specific enough to return only one result.
        /// 
        /// ## Example Usage
        /// 
        /// ### By Name
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.GetIpblock.Invoke(new()
        ///     {
        ///         Name = "IP Block Name",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt; 
        /// 
        /// ### By Location
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ionoscloud = Pulumi.Ionoscloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Ionoscloud.GetIpblock.Invoke(new()
        ///     {
        ///         Location = "us/las",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt; 
        /// 
        /// ### By Name &amp; Location
        /// ``` 
        /// data "ionoscloud_ipblock" "example" {
        ///   name      = "IP Block Name"
        ///   location  = "us/las"
        /// }
        /// ```
        /// </summary>
        public static Output<GetIpblockResult> Invoke(GetIpblockInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpblockResult>("ionoscloud:index/getIpblock:getIpblock", args ?? new GetIpblockInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpblockArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of an existing Ip Block that you want to search for.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        [Input("ipConsumers")]
        private List<Inputs.GetIpblockIpConsumerArgs>? _ipConsumers;

        /// <summary>
        /// Read-Only attribute. Lists consumption detail of an individual ip
        /// </summary>
        public List<Inputs.GetIpblockIpConsumerArgs> IpConsumers
        {
            get => _ipConsumers ?? (_ipConsumers = new List<Inputs.GetIpblockIpConsumerArgs>());
            set => _ipConsumers = value;
        }

        /// <summary>
        /// The regional location for this IP Block: us/las, us/ewr, de/fra, de/fkb.
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// Name of an existing Ip Block that you want to search for.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The number of IP addresses to reserve for this block.
        /// </summary>
        [Input("size")]
        public int? Size { get; set; }

        public GetIpblockArgs()
        {
        }
        public static new GetIpblockArgs Empty => new GetIpblockArgs();
    }

    public sealed class GetIpblockInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of an existing Ip Block that you want to search for.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("ipConsumers")]
        private InputList<Inputs.GetIpblockIpConsumerInputArgs>? _ipConsumers;

        /// <summary>
        /// Read-Only attribute. Lists consumption detail of an individual ip
        /// </summary>
        public InputList<Inputs.GetIpblockIpConsumerInputArgs> IpConsumers
        {
            get => _ipConsumers ?? (_ipConsumers = new InputList<Inputs.GetIpblockIpConsumerInputArgs>());
            set => _ipConsumers = value;
        }

        /// <summary>
        /// The regional location for this IP Block: us/las, us/ewr, de/fra, de/fkb.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Name of an existing Ip Block that you want to search for.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The number of IP addresses to reserve for this block.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        public GetIpblockInvokeArgs()
        {
        }
        public static new GetIpblockInvokeArgs Empty => new GetIpblockInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpblockResult
    {
        /// <summary>
        /// The id of Ip Block
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Read-Only attribute. Lists consumption detail of an individual ip
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIpblockIpConsumerResult> IpConsumers;
        /// <summary>
        /// The list of IP addresses associated with this block.
        /// </summary>
        public readonly ImmutableArray<string> Ips;
        /// <summary>
        /// The regional location for this IP Block: us/las, us/ewr, de/fra, de/fkb.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of Ip Block
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The number of IP addresses to reserve for this block.
        /// </summary>
        public readonly int? Size;

        [OutputConstructor]
        private GetIpblockResult(
            string? id,

            ImmutableArray<Outputs.GetIpblockIpConsumerResult> ipConsumers,

            ImmutableArray<string> ips,

            string? location,

            string? name,

            int? size)
        {
            Id = id;
            IpConsumers = ipConsumers;
            Ips = ips;
            Location = location;
            Name = name;
            Size = size;
        }
    }
}
