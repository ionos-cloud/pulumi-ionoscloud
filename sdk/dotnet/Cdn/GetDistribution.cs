// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud.Cdn
{
    public static class GetDistribution
    {
        public static Task<GetDistributionResult> InvokeAsync(GetDistributionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDistributionResult>("ionoscloud:cdn/getDistribution:getDistribution", args ?? new GetDistributionArgs(), options.WithDefaults());

        public static Output<GetDistributionResult> Invoke(GetDistributionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDistributionResult>("ionoscloud:cdn/getDistribution:getDistribution", args ?? new GetDistributionInvokeArgs(), options.WithDefaults());

        public static Output<GetDistributionResult> Invoke(GetDistributionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDistributionResult>("ionoscloud:cdn/getDistribution:getDistribution", args ?? new GetDistributionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDistributionArgs : global::Pulumi.InvokeArgs
    {
        [Input("domain")]
        public string? Domain { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("partialMatch")]
        public bool? PartialMatch { get; set; }

        public GetDistributionArgs()
        {
        }
        public static new GetDistributionArgs Empty => new GetDistributionArgs();
    }

    public sealed class GetDistributionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("partialMatch")]
        public Input<bool>? PartialMatch { get; set; }

        public GetDistributionInvokeArgs()
        {
        }
        public static new GetDistributionInvokeArgs Empty => new GetDistributionInvokeArgs();
    }


    [OutputType]
    public sealed class GetDistributionResult
    {
        public readonly string CertificateId;
        public readonly string? Domain;
        public readonly string? Id;
        public readonly bool? PartialMatch;
        public readonly string PublicEndpointV4;
        public readonly string PublicEndpointV6;
        public readonly string ResourceUrn;
        public readonly ImmutableArray<Outputs.GetDistributionRoutingRuleResult> RoutingRules;

        [OutputConstructor]
        private GetDistributionResult(
            string certificateId,

            string? domain,

            string? id,

            bool? partialMatch,

            string publicEndpointV4,

            string publicEndpointV6,

            string resourceUrn,

            ImmutableArray<Outputs.GetDistributionRoutingRuleResult> routingRules)
        {
            CertificateId = certificateId;
            Domain = domain;
            Id = id;
            PartialMatch = partialMatch;
            PublicEndpointV4 = publicEndpointV4;
            PublicEndpointV6 = publicEndpointV6;
            ResourceUrn = resourceUrn;
            RoutingRules = routingRules;
        }
    }
}
