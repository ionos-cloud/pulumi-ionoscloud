// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud
{
    public static class GetK8sNodePoolNodes
    {
        public static Task<GetK8sNodePoolNodesResult> InvokeAsync(GetK8sNodePoolNodesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetK8sNodePoolNodesResult>("ionoscloud:index/getK8sNodePoolNodes:getK8sNodePoolNodes", args ?? new GetK8sNodePoolNodesArgs(), options.WithDefaults());

        public static Output<GetK8sNodePoolNodesResult> Invoke(GetK8sNodePoolNodesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetK8sNodePoolNodesResult>("ionoscloud:index/getK8sNodePoolNodes:getK8sNodePoolNodes", args ?? new GetK8sNodePoolNodesInvokeArgs(), options.WithDefaults());

        public static Output<GetK8sNodePoolNodesResult> Invoke(GetK8sNodePoolNodesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetK8sNodePoolNodesResult>("ionoscloud:index/getK8sNodePoolNodes:getK8sNodePoolNodes", args ?? new GetK8sNodePoolNodesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetK8sNodePoolNodesArgs : global::Pulumi.InvokeArgs
    {
        [Input("k8sClusterId", required: true)]
        public string K8sClusterId { get; set; } = null!;

        [Input("nodePoolId", required: true)]
        public string NodePoolId { get; set; } = null!;

        public GetK8sNodePoolNodesArgs()
        {
        }
        public static new GetK8sNodePoolNodesArgs Empty => new GetK8sNodePoolNodesArgs();
    }

    public sealed class GetK8sNodePoolNodesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("k8sClusterId", required: true)]
        public Input<string> K8sClusterId { get; set; } = null!;

        [Input("nodePoolId", required: true)]
        public Input<string> NodePoolId { get; set; } = null!;

        public GetK8sNodePoolNodesInvokeArgs()
        {
        }
        public static new GetK8sNodePoolNodesInvokeArgs Empty => new GetK8sNodePoolNodesInvokeArgs();
    }


    [OutputType]
    public sealed class GetK8sNodePoolNodesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string K8sClusterId;
        public readonly string NodePoolId;
        public readonly ImmutableArray<Outputs.GetK8sNodePoolNodesNodeResult> Nodes;

        [OutputConstructor]
        private GetK8sNodePoolNodesResult(
            string id,

            string k8sClusterId,

            string nodePoolId,

            ImmutableArray<Outputs.GetK8sNodePoolNodesNodeResult> nodes)
        {
            Id = id;
            K8sClusterId = k8sClusterId;
            NodePoolId = nodePoolId;
            Nodes = nodes;
        }
    }
}
