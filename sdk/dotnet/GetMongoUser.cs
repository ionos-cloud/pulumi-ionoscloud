// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ionoscloud
{
    public static class GetMongoUser
    {
        public static Task<GetMongoUserResult> InvokeAsync(GetMongoUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMongoUserResult>("ionoscloud:index/getMongoUser:getMongoUser", args ?? new GetMongoUserArgs(), options.WithDefaults());

        public static Output<GetMongoUserResult> Invoke(GetMongoUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMongoUserResult>("ionoscloud:index/getMongoUser:getMongoUser", args ?? new GetMongoUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMongoUserArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        [Input("database")]
        public string? Database { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("roles")]
        private List<Inputs.GetMongoUserRoleArgs>? _roles;
        public List<Inputs.GetMongoUserRoleArgs> Roles
        {
            get => _roles ?? (_roles = new List<Inputs.GetMongoUserRoleArgs>());
            set => _roles = value;
        }

        [Input("username", required: true)]
        public string Username { get; set; } = null!;

        public GetMongoUserArgs()
        {
        }
        public static new GetMongoUserArgs Empty => new GetMongoUserArgs();
    }

    public sealed class GetMongoUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("database")]
        public Input<string>? Database { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("roles")]
        private InputList<Inputs.GetMongoUserRoleInputArgs>? _roles;
        public InputList<Inputs.GetMongoUserRoleInputArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.GetMongoUserRoleInputArgs>());
            set => _roles = value;
        }

        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public GetMongoUserInvokeArgs()
        {
        }
        public static new GetMongoUserInvokeArgs Empty => new GetMongoUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetMongoUserResult
    {
        public readonly string ClusterId;
        public readonly string Database;
        public readonly string? Id;
        public readonly ImmutableArray<Outputs.GetMongoUserRoleResult> Roles;
        public readonly string Username;

        [OutputConstructor]
        private GetMongoUserResult(
            string clusterId,

            string database,

            string? id,

            ImmutableArray<Outputs.GetMongoUserRoleResult> roles,

            string username)
        {
            ClusterId = clusterId;
            Database = database;
            Id = id;
            Roles = roles;
            Username = username;
        }
    }
}
