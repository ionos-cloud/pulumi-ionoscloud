// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.dbaas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PSQLClusterFromBackupArgs extends com.pulumi.resources.ResourceArgs {

    public static final PSQLClusterFromBackupArgs Empty = new PSQLClusterFromBackupArgs();

    /**
     * [string] The unique ID of the backup you want to restore.
     * 
     */
    @Import(name="backupId", required=true)
    private Output<String> backupId;

    /**
     * @return [string] The unique ID of the backup you want to restore.
     * 
     */
    public Output<String> backupId() {
        return this.backupId;
    }

    /**
     * [string] If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp. If empty, the backup will be applied completely.
     * 
     */
    @Import(name="recoveryTargetTime")
    private @Nullable Output<String> recoveryTargetTime;

    /**
     * @return [string] If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp. If empty, the backup will be applied completely.
     * 
     */
    public Optional<Output<String>> recoveryTargetTime() {
        return Optional.ofNullable(this.recoveryTargetTime);
    }

    private PSQLClusterFromBackupArgs() {}

    private PSQLClusterFromBackupArgs(PSQLClusterFromBackupArgs $) {
        this.backupId = $.backupId;
        this.recoveryTargetTime = $.recoveryTargetTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PSQLClusterFromBackupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PSQLClusterFromBackupArgs $;

        public Builder() {
            $ = new PSQLClusterFromBackupArgs();
        }

        public Builder(PSQLClusterFromBackupArgs defaults) {
            $ = new PSQLClusterFromBackupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupId [string] The unique ID of the backup you want to restore.
         * 
         * @return builder
         * 
         */
        public Builder backupId(Output<String> backupId) {
            $.backupId = backupId;
            return this;
        }

        /**
         * @param backupId [string] The unique ID of the backup you want to restore.
         * 
         * @return builder
         * 
         */
        public Builder backupId(String backupId) {
            return backupId(Output.of(backupId));
        }

        /**
         * @param recoveryTargetTime [string] If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp. If empty, the backup will be applied completely.
         * 
         * @return builder
         * 
         */
        public Builder recoveryTargetTime(@Nullable Output<String> recoveryTargetTime) {
            $.recoveryTargetTime = recoveryTargetTime;
            return this;
        }

        /**
         * @param recoveryTargetTime [string] If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp. If empty, the backup will be applied completely.
         * 
         * @return builder
         * 
         */
        public Builder recoveryTargetTime(String recoveryTargetTime) {
            return recoveryTargetTime(Output.of(recoveryTargetTime));
        }

        public PSQLClusterFromBackupArgs build() {
            if ($.backupId == null) {
                throw new MissingRequiredPropertyException("PSQLClusterFromBackupArgs", "backupId");
            }
            return $;
        }
    }

}
