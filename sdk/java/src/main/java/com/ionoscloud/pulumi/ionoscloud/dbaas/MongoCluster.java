// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.dbaas;

import com.ionoscloud.pulumi.ionoscloud.Utilities;
import com.ionoscloud.pulumi.ionoscloud.dbaas.MongoClusterArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.MongoClusterState;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.MongoClusterBackup;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.MongoClusterBiConnector;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.MongoClusterConnections;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.MongoClusterMaintenanceWindow;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a **DbaaS Mongo Cluster**.
 * 
 * ## Example Usage
 * 
 * ### Playground Or Business Editions. They Require Template_id Defined.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.compute.Lan;
 * import com.pulumi.ionoscloud.compute.LanArgs;
 * import com.pulumi.ionoscloud.dbaas.MongoCluster;
 * import com.pulumi.ionoscloud.dbaas.MongoClusterArgs;
 * import com.pulumi.ionoscloud.dbaas.inputs.MongoClusterMaintenanceWindowArgs;
 * import com.pulumi.ionoscloud.dbaas.inputs.MongoClusterConnectionsArgs;
 * import com.pulumi.random.password;
 * import com.pulumi.random.PasswordArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var datacenterExample = new Datacenter("datacenterExample", DatacenterArgs.builder()
 *             .name("example")
 *             .location("de/txl")
 *             .description("Datacenter for testing dbaas cluster")
 *             .build());
 * 
 *         var lanExample = new Lan("lanExample", LanArgs.builder()
 *             .datacenterId(datacenterExample.id())
 *             .public_(false)
 *             .name("example")
 *             .build());
 * 
 *         var exampleMongoCluster = new MongoCluster("exampleMongoCluster", MongoClusterArgs.builder()
 *             .maintenanceWindow(MongoClusterMaintenanceWindowArgs.builder()
 *                 .dayOfTheWeek("Sunday")
 *                 .time("09:00:00")
 *                 .build())
 *             .mongodbVersion("5.0")
 *             .instances(1)
 *             .displayName("example_mongo_cluster")
 *             .location(datacenterExample.location())
 *             .connections(MongoClusterConnectionsArgs.builder()
 *                 .datacenterId(datacenterExample.id())
 *                 .lanId(lanExample.id())
 *                 .cidrLists("192.168.1.108/24")
 *                 .build())
 *             .templateId("6b78ea06-ee0e-4689-998c-fc9c46e781f6")
 *             .build());
 * 
 *         var clusterPassword = new Password("clusterPassword", PasswordArgs.builder()
 *             .length(16)
 *             .special(true)
 *             .overrideSpecial("!#$%&*()-_=+[]{}<>:?")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Enterprise Edition
 * 
 * **Enterprise Support: With MongoDB Enterprise, you gain access to professional support from the MongoDB team ensuring that you receive timely assistance and expert guidance when needed. IONOS offers enterprise-grade Service Level Agreements (SLAs), guaranteeing rapid response times and 24/7 support to address any critical issues that may arise.**
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.compute.Lan;
 * import com.pulumi.ionoscloud.compute.LanArgs;
 * import com.pulumi.ionoscloud.dbaas.MongoCluster;
 * import com.pulumi.ionoscloud.dbaas.MongoClusterArgs;
 * import com.pulumi.ionoscloud.dbaas.inputs.MongoClusterMaintenanceWindowArgs;
 * import com.pulumi.ionoscloud.dbaas.inputs.MongoClusterConnectionsArgs;
 * import com.pulumi.random.password;
 * import com.pulumi.random.PasswordArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var datacenterExample = new Datacenter("datacenterExample", DatacenterArgs.builder()
 *             .name("example")
 *             .location("de/txl")
 *             .description("Datacenter for testing dbaas cluster")
 *             .build());
 * 
 *         var lanExample = new Lan("lanExample", LanArgs.builder()
 *             .datacenterId(datacenterExample.id())
 *             .public_(false)
 *             .name("example")
 *             .build());
 * 
 *         var exampleMongoCluster = new MongoCluster("exampleMongoCluster", MongoClusterArgs.builder()
 *             .maintenanceWindow(MongoClusterMaintenanceWindowArgs.builder()
 *                 .dayOfTheWeek("Sunday")
 *                 .time("09:00:00")
 *                 .build())
 *             .mongodbVersion("5.0")
 *             .instances(3)
 *             .displayName("example_mongo_cluster")
 *             .location(datacenterExample.location())
 *             .connections(MongoClusterConnectionsArgs.builder()
 *                 .datacenterId(datacenterExample.id())
 *                 .lanId(lanExample.id())
 *                 .cidrLists(                
 *                     "192.168.1.108/24",
 *                     "192.168.1.109/24",
 *                     "192.168.1.110/24")
 *                 .build())
 *             .type("sharded-cluster")
 *             .shards(2)
 *             .edition("enterprise")
 *             .ram(2048)
 *             .cores(1)
 *             .storageSize(5120)
 *             .storageType("HDD")
 *             .build());
 * 
 *         var clusterPassword = new Password("clusterPassword", PasswordArgs.builder()
 *             .length(16)
 *             .special(true)
 *             .overrideSpecial("!#$%&*()-_=+[]{}<>:?")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Resource DbaaS MongoDb Cluster can be imported using the `cluster_id`, e.g.
 * 
 * ```sh
 * $ pulumi import ionoscloud:dbaas/mongoCluster:MongoCluster mycluser cluster uuid
 * ```
 * 
 */
@ResourceType(type="ionoscloud:dbaas/mongoCluster:MongoCluster")
public class MongoCluster extends com.pulumi.resources.CustomResource {
    /**
     * [list]
     * 
     */
    @Export(name="backup", refs={MongoClusterBackup.class}, tree="[0]")
    private Output</* @Nullable */ MongoClusterBackup> backup;

    /**
     * @return [list]
     * 
     */
    public Output<Optional<MongoClusterBackup>> backup() {
        return Codegen.optional(this.backup);
    }
    /**
     * (Computed)The MongoDB Connector for Business Intelligence allows you to query a MongoDB database using SQL commands to aid in data analysis.
     * 
     */
    @Export(name="biConnector", refs={MongoClusterBiConnector.class}, tree="[0]")
    private Output<MongoClusterBiConnector> biConnector;

    /**
     * @return (Computed)The MongoDB Connector for Business Intelligence allows you to query a MongoDB database using SQL commands to aid in data analysis.
     * 
     */
    public Output<MongoClusterBiConnector> biConnector() {
        return this.biConnector;
    }
    /**
     * [string] The physical location where the cluster will be created. This will be where all of your instances live. Updates to the value of the field force the cluster to be re-created. Available locations: de/txl, gb/lhr, es/vit
     * 
     */
    @Export(name="connectionString", refs={String.class}, tree="[0]")
    private Output<String> connectionString;

    /**
     * @return [string] The physical location where the cluster will be created. This will be where all of your instances live. Updates to the value of the field force the cluster to be re-created. Available locations: de/txl, gb/lhr, es/vit
     * 
     */
    public Output<String> connectionString() {
        return this.connectionString;
    }
    /**
     * [List] Details about the network connection for your cluster. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    @Export(name="connections", refs={MongoClusterConnections.class}, tree="[0]")
    private Output<MongoClusterConnections> connections;

    /**
     * @return [List] Details about the network connection for your cluster. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    public Output<MongoClusterConnections> connections() {
        return this.connections;
    }
    /**
     * (Computed)[int] The number of CPU cores per replica. Required for enterprise edition.
     * 
     */
    @Export(name="cores", refs={Integer.class}, tree="[0]")
    private Output<Integer> cores;

    /**
     * @return (Computed)[int] The number of CPU cores per replica. Required for enterprise edition.
     * 
     */
    public Output<Integer> cores() {
        return this.cores;
    }
    /**
     * [string] The name of your cluster. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return [string] The name of your cluster. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Computed)[string] Cluster edition. Playground, business or enterprise.
     * 
     */
    @Export(name="edition", refs={String.class}, tree="[0]")
    private Output<String> edition;

    /**
     * @return (Computed)[string] Cluster edition. Playground, business or enterprise.
     * 
     */
    public Output<String> edition() {
        return this.edition;
    }
    /**
     * [int] The total number of instances in the cluster (one master and n-1 standbys). Example: 1, 3, 5, 7. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    @Export(name="instances", refs={Integer.class}, tree="[0]")
    private Output<Integer> instances;

    /**
     * @return [int] The total number of instances in the cluster (one master and n-1 standbys). Example: 1, 3, 5, 7. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    public Output<Integer> instances() {
        return this.instances;
    }
    /**
     * [string] The physical location where the cluster will be created. Property cannot be modified after datacenter creation (disallowed in update requests). Available locations: de/txl, gb/lhr, es/vit. Update forces cluster re-creation.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return [string] The physical location where the cluster will be created. Property cannot be modified after datacenter creation (disallowed in update requests). Available locations: de/txl, gb/lhr, es/vit. Update forces cluster re-creation.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * (Computed) A weekly 4 hour-long window, during which maintenance might occur.  Updates to the value of the field force the cluster to be re-created.
     * 
     */
    @Export(name="maintenanceWindow", refs={MongoClusterMaintenanceWindow.class}, tree="[0]")
    private Output<MongoClusterMaintenanceWindow> maintenanceWindow;

    /**
     * @return (Computed) A weekly 4 hour-long window, during which maintenance might occur.  Updates to the value of the field force the cluster to be re-created.
     * 
     */
    public Output<MongoClusterMaintenanceWindow> maintenanceWindow() {
        return this.maintenanceWindow;
    }
    /**
     * [string] The MongoDB version of your cluster. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    @Export(name="mongodbVersion", refs={String.class}, tree="[0]")
    private Output<String> mongodbVersion;

    /**
     * @return [string] The MongoDB version of your cluster. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    public Output<String> mongodbVersion() {
        return this.mongodbVersion;
    }
    /**
     * (Computed)[int]The amount of memory per instance in megabytes. Required for enterprise edition.
     * 
     */
    @Export(name="ram", refs={Integer.class}, tree="[0]")
    private Output<Integer> ram;

    /**
     * @return (Computed)[int]The amount of memory per instance in megabytes. Required for enterprise edition.
     * 
     */
    public Output<Integer> ram() {
        return this.ram;
    }
    /**
     * [int]The total number of shards in the cluster.
     * 
     */
    @Export(name="shards", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> shards;

    /**
     * @return [int]The total number of shards in the cluster.
     * 
     */
    public Output<Optional<Integer>> shards() {
        return Codegen.optional(this.shards);
    }
    /**
     * (Computed)[int] The amount of storage per instance in MB. Required for enterprise edition.
     * 
     */
    @Export(name="storageSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> storageSize;

    /**
     * @return (Computed)[int] The amount of storage per instance in MB. Required for enterprise edition.
     * 
     */
    public Output<Integer> storageSize() {
        return this.storageSize;
    }
    /**
     * (Computed)[String] The storage type used in your cluster. Required for enterprise edition.
     * 
     */
    @Export(name="storageType", refs={String.class}, tree="[0]")
    private Output<String> storageType;

    /**
     * @return (Computed)[String] The storage type used in your cluster. Required for enterprise edition.
     * 
     */
    public Output<String> storageType() {
        return this.storageType;
    }
    /**
     * [string] The unique ID of the template, which specifies the number of cores, storage size, and memory. Updates to the value of the field force the cluster to be re-created. Required for playground and business editions. Must not be provided for enterprise edition.
     * 
     */
    @Export(name="templateId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> templateId;

    /**
     * @return [string] The unique ID of the template, which specifies the number of cores, storage size, and memory. Updates to the value of the field force the cluster to be re-created. Required for playground and business editions. Must not be provided for enterprise edition.
     * 
     */
    public Output<Optional<String>> templateId() {
        return Codegen.optional(this.templateId);
    }
    /**
     * (Computed)[string]The cluster type, either `replicaset` or `sharded-cluster`.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return (Computed)[string]The cluster type, either `replicaset` or `sharded-cluster`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MongoCluster(java.lang.String name) {
        this(name, MongoClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MongoCluster(java.lang.String name, MongoClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MongoCluster(java.lang.String name, MongoClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:dbaas/mongoCluster:MongoCluster", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MongoCluster(java.lang.String name, Output<java.lang.String> id, @Nullable MongoClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:dbaas/mongoCluster:MongoCluster", name, state, makeResourceOptions(options, id), false);
    }

    private static MongoClusterArgs makeArgs(MongoClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MongoClusterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MongoCluster get(java.lang.String name, Output<java.lang.String> id, @Nullable MongoClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MongoCluster(name, id, state, options);
    }
}
