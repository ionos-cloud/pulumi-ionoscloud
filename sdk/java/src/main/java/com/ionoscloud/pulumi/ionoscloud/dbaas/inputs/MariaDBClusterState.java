// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.dbaas.inputs;

import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.MariaDBClusterConnectionsArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.MariaDBClusterCredentialsArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.MariaDBClusterMaintenanceWindowArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MariaDBClusterState extends com.pulumi.resources.ResourceArgs {

    public static final MariaDBClusterState Empty = new MariaDBClusterState();

    /**
     * The network connection for your cluster. Only one connection is allowed.
     * 
     */
    @Import(name="connections")
    private @Nullable Output<MariaDBClusterConnectionsArgs> connections;

    /**
     * @return The network connection for your cluster. Only one connection is allowed.
     * 
     */
    public Optional<Output<MariaDBClusterConnectionsArgs>> connections() {
        return Optional.ofNullable(this.connections);
    }

    /**
     * [int] The number of CPU cores per instance.
     * 
     */
    @Import(name="cores")
    private @Nullable Output<Integer> cores;

    /**
     * @return [int] The number of CPU cores per instance.
     * 
     */
    public Optional<Output<Integer>> cores() {
        return Optional.ofNullable(this.cores);
    }

    /**
     * Credentials for the database user to be created.
     * 
     */
    @Import(name="credentials")
    private @Nullable Output<MariaDBClusterCredentialsArgs> credentials;

    /**
     * @return Credentials for the database user to be created.
     * 
     */
    public Optional<Output<MariaDBClusterCredentialsArgs>> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    /**
     * [string] The friendly name of your cluster.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return [string] The friendly name of your cluster.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * [string] The DNS name pointing to your cluster.
     * 
     * &gt; **⚠ WARNING:** `IONOS_API_URL_MARIADB` can be used to set a custom API URL for the MariaDB Cluster. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
     * 
     */
    @Import(name="dnsName")
    private @Nullable Output<String> dnsName;

    /**
     * @return [string] The DNS name pointing to your cluster.
     * 
     * &gt; **⚠ WARNING:** `IONOS_API_URL_MARIADB` can be used to set a custom API URL for the MariaDB Cluster. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
     * 
     */
    public Optional<Output<String>> dnsName() {
        return Optional.ofNullable(this.dnsName);
    }

    /**
     * [int] The total number of instances in the cluster (one primary and n-1 secondary).
     * 
     */
    @Import(name="instances")
    private @Nullable Output<Integer> instances;

    /**
     * @return [int] The total number of instances in the cluster (one primary and n-1 secondary).
     * 
     */
    public Optional<Output<Integer>> instances() {
        return Optional.ofNullable(this.instances);
    }

    /**
     * [string] The location in which the cluster will be created. Different service endpoints are used based on location, possible options are: &#34;de/fra&#34;, &#34;de/txl&#34;, &#34;es/vit&#34;, &#34;fr/par&#34;, &#34;gb/lhr&#34;, &#34;us/ewr&#34;, &#34;us/las&#34;, &#34;us/mci&#34;. If not set, the endpoint will be the one corresponding to &#34;de/txl&#34;.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return [string] The location in which the cluster will be created. Different service endpoints are used based on location, possible options are: &#34;de/fra&#34;, &#34;de/txl&#34;, &#34;es/vit&#34;, &#34;fr/par&#34;, &#34;gb/lhr&#34;, &#34;us/ewr&#34;, &#34;us/las&#34;, &#34;us/mci&#34;. If not set, the endpoint will be the one corresponding to &#34;de/txl&#34;.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * (Computed) A weekly 4 hour-long window, during which maintenance might occur
     * 
     */
    @Import(name="maintenanceWindow")
    private @Nullable Output<MariaDBClusterMaintenanceWindowArgs> maintenanceWindow;

    /**
     * @return (Computed) A weekly 4 hour-long window, during which maintenance might occur
     * 
     */
    public Optional<Output<MariaDBClusterMaintenanceWindowArgs>> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }

    /**
     * [string] The MariaDB version of your cluster. Cannot be downgraded.
     * 
     */
    @Import(name="mariadbVersion")
    private @Nullable Output<String> mariadbVersion;

    /**
     * @return [string] The MariaDB version of your cluster. Cannot be downgraded.
     * 
     */
    public Optional<Output<String>> mariadbVersion() {
        return Optional.ofNullable(this.mariadbVersion);
    }

    /**
     * [int] The amount of memory per instance in gigabytes (GB).
     * 
     */
    @Import(name="ram")
    private @Nullable Output<Integer> ram;

    /**
     * @return [int] The amount of memory per instance in gigabytes (GB).
     * 
     */
    public Optional<Output<Integer>> ram() {
        return Optional.ofNullable(this.ram);
    }

    /**
     * [int] The amount of storage per instance in gigabytes (GB).
     * 
     */
    @Import(name="storageSize")
    private @Nullable Output<Integer> storageSize;

    /**
     * @return [int] The amount of storage per instance in gigabytes (GB).
     * 
     */
    public Optional<Output<Integer>> storageSize() {
        return Optional.ofNullable(this.storageSize);
    }

    private MariaDBClusterState() {}

    private MariaDBClusterState(MariaDBClusterState $) {
        this.connections = $.connections;
        this.cores = $.cores;
        this.credentials = $.credentials;
        this.displayName = $.displayName;
        this.dnsName = $.dnsName;
        this.instances = $.instances;
        this.location = $.location;
        this.maintenanceWindow = $.maintenanceWindow;
        this.mariadbVersion = $.mariadbVersion;
        this.ram = $.ram;
        this.storageSize = $.storageSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MariaDBClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MariaDBClusterState $;

        public Builder() {
            $ = new MariaDBClusterState();
        }

        public Builder(MariaDBClusterState defaults) {
            $ = new MariaDBClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param connections The network connection for your cluster. Only one connection is allowed.
         * 
         * @return builder
         * 
         */
        public Builder connections(@Nullable Output<MariaDBClusterConnectionsArgs> connections) {
            $.connections = connections;
            return this;
        }

        /**
         * @param connections The network connection for your cluster. Only one connection is allowed.
         * 
         * @return builder
         * 
         */
        public Builder connections(MariaDBClusterConnectionsArgs connections) {
            return connections(Output.of(connections));
        }

        /**
         * @param cores [int] The number of CPU cores per instance.
         * 
         * @return builder
         * 
         */
        public Builder cores(@Nullable Output<Integer> cores) {
            $.cores = cores;
            return this;
        }

        /**
         * @param cores [int] The number of CPU cores per instance.
         * 
         * @return builder
         * 
         */
        public Builder cores(Integer cores) {
            return cores(Output.of(cores));
        }

        /**
         * @param credentials Credentials for the database user to be created.
         * 
         * @return builder
         * 
         */
        public Builder credentials(@Nullable Output<MariaDBClusterCredentialsArgs> credentials) {
            $.credentials = credentials;
            return this;
        }

        /**
         * @param credentials Credentials for the database user to be created.
         * 
         * @return builder
         * 
         */
        public Builder credentials(MariaDBClusterCredentialsArgs credentials) {
            return credentials(Output.of(credentials));
        }

        /**
         * @param displayName [string] The friendly name of your cluster.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName [string] The friendly name of your cluster.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param dnsName [string] The DNS name pointing to your cluster.
         * 
         * &gt; **⚠ WARNING:** `IONOS_API_URL_MARIADB` can be used to set a custom API URL for the MariaDB Cluster. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
         * 
         * @return builder
         * 
         */
        public Builder dnsName(@Nullable Output<String> dnsName) {
            $.dnsName = dnsName;
            return this;
        }

        /**
         * @param dnsName [string] The DNS name pointing to your cluster.
         * 
         * &gt; **⚠ WARNING:** `IONOS_API_URL_MARIADB` can be used to set a custom API URL for the MariaDB Cluster. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
         * 
         * @return builder
         * 
         */
        public Builder dnsName(String dnsName) {
            return dnsName(Output.of(dnsName));
        }

        /**
         * @param instances [int] The total number of instances in the cluster (one primary and n-1 secondary).
         * 
         * @return builder
         * 
         */
        public Builder instances(@Nullable Output<Integer> instances) {
            $.instances = instances;
            return this;
        }

        /**
         * @param instances [int] The total number of instances in the cluster (one primary and n-1 secondary).
         * 
         * @return builder
         * 
         */
        public Builder instances(Integer instances) {
            return instances(Output.of(instances));
        }

        /**
         * @param location [string] The location in which the cluster will be created. Different service endpoints are used based on location, possible options are: &#34;de/fra&#34;, &#34;de/txl&#34;, &#34;es/vit&#34;, &#34;fr/par&#34;, &#34;gb/lhr&#34;, &#34;us/ewr&#34;, &#34;us/las&#34;, &#34;us/mci&#34;. If not set, the endpoint will be the one corresponding to &#34;de/txl&#34;.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location [string] The location in which the cluster will be created. Different service endpoints are used based on location, possible options are: &#34;de/fra&#34;, &#34;de/txl&#34;, &#34;es/vit&#34;, &#34;fr/par&#34;, &#34;gb/lhr&#34;, &#34;us/ewr&#34;, &#34;us/las&#34;, &#34;us/mci&#34;. If not set, the endpoint will be the one corresponding to &#34;de/txl&#34;.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param maintenanceWindow (Computed) A weekly 4 hour-long window, during which maintenance might occur
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(@Nullable Output<MariaDBClusterMaintenanceWindowArgs> maintenanceWindow) {
            $.maintenanceWindow = maintenanceWindow;
            return this;
        }

        /**
         * @param maintenanceWindow (Computed) A weekly 4 hour-long window, during which maintenance might occur
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(MariaDBClusterMaintenanceWindowArgs maintenanceWindow) {
            return maintenanceWindow(Output.of(maintenanceWindow));
        }

        /**
         * @param mariadbVersion [string] The MariaDB version of your cluster. Cannot be downgraded.
         * 
         * @return builder
         * 
         */
        public Builder mariadbVersion(@Nullable Output<String> mariadbVersion) {
            $.mariadbVersion = mariadbVersion;
            return this;
        }

        /**
         * @param mariadbVersion [string] The MariaDB version of your cluster. Cannot be downgraded.
         * 
         * @return builder
         * 
         */
        public Builder mariadbVersion(String mariadbVersion) {
            return mariadbVersion(Output.of(mariadbVersion));
        }

        /**
         * @param ram [int] The amount of memory per instance in gigabytes (GB).
         * 
         * @return builder
         * 
         */
        public Builder ram(@Nullable Output<Integer> ram) {
            $.ram = ram;
            return this;
        }

        /**
         * @param ram [int] The amount of memory per instance in gigabytes (GB).
         * 
         * @return builder
         * 
         */
        public Builder ram(Integer ram) {
            return ram(Output.of(ram));
        }

        /**
         * @param storageSize [int] The amount of storage per instance in gigabytes (GB).
         * 
         * @return builder
         * 
         */
        public Builder storageSize(@Nullable Output<Integer> storageSize) {
            $.storageSize = storageSize;
            return this;
        }

        /**
         * @param storageSize [int] The amount of storage per instance in gigabytes (GB).
         * 
         * @return builder
         * 
         */
        public Builder storageSize(Integer storageSize) {
            return storageSize(Output.of(storageSize));
        }

        public MariaDBClusterState build() {
            return $;
        }
    }

}
