// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.cdn;

import com.ionoscloud.pulumi.ionoscloud.Utilities;
import com.ionoscloud.pulumi.ionoscloud.cdn.DistributionArgs;
import com.ionoscloud.pulumi.ionoscloud.cdn.inputs.DistributionState;
import com.ionoscloud.pulumi.ionoscloud.cdn.outputs.DistributionRoutingRule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a **CDN Distribution** on IonosCloud.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.cdn.Distribution;
 * import com.pulumi.ionoscloud.cdn.DistributionArgs;
 * import com.pulumi.ionoscloud.cdn.inputs.DistributionRoutingRuleArgs;
 * import com.pulumi.ionoscloud.cdn.inputs.DistributionRoutingRuleUpstreamArgs;
 * import com.pulumi.ionoscloud.cdn.inputs.DistributionRoutingRuleUpstreamGeoRestrictionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Distribution("example", DistributionArgs.builder()
 *             .domain("example.com")
 *             .certificateId(cert.id())
 *             .routingRules(            
 *                 DistributionRoutingRuleArgs.builder()
 *                     .scheme("https")
 *                     .prefix("/api")
 *                     .upstream(DistributionRoutingRuleUpstreamArgs.builder()
 *                         .host("server.example.com")
 *                         .caching(true)
 *                         .waf(true)
 *                         .sniMode("distribution")
 *                         .rateLimitClass("R500")
 *                         .geoRestrictions(DistributionRoutingRuleUpstreamGeoRestrictionsArgs.builder()
 *                             .allowLists(                            
 *                                 "CN",
 *                                 "RU")
 *                             .build())
 *                         .build())
 *                     .build(),
 *                 DistributionRoutingRuleArgs.builder()
 *                     .scheme("http/https")
 *                     .prefix("/api2")
 *                     .upstream(DistributionRoutingRuleUpstreamArgs.builder()
 *                         .host("server2.example.com")
 *                         .caching(false)
 *                         .waf(false)
 *                         .sniMode("origin")
 *                         .rateLimitClass("R10")
 *                         .geoRestrictions(DistributionRoutingRuleUpstreamGeoRestrictionsArgs.builder()
 *                             .blockLists(                            
 *                                 "CN",
 *                                 "RU")
 *                             .build())
 *                         .build())
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Resource Distribution can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import ionoscloud:cdn/distribution:Distribution myDistribution distribution uuid
 * ```
 * 
 */
@ResourceType(type="ionoscloud:cdn/distribution:Distribution")
public class Distribution extends com.pulumi.resources.CustomResource {
    /**
     * [string] The ID of the certificate to use for the distribution. You can create certificates with the certificate resource.
     * 
     */
    @Export(name="certificateId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> certificateId;

    /**
     * @return [string] The ID of the certificate to use for the distribution. You can create certificates with the certificate resource.
     * 
     */
    public Output<Optional<String>> certificateId() {
        return Codegen.optional(this.certificateId);
    }
    /**
     * [string] The domain of the distribution.
     * 
     */
    @Export(name="domain", refs={String.class}, tree="[0]")
    private Output<String> domain;

    /**
     * @return [string] The domain of the distribution.
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }
    /**
     * IP of the distribution, it has to be included on the domain DNS Zone as A record.
     * 
     */
    @Export(name="publicEndpointV4", refs={String.class}, tree="[0]")
    private Output<String> publicEndpointV4;

    /**
     * @return IP of the distribution, it has to be included on the domain DNS Zone as A record.
     * 
     */
    public Output<String> publicEndpointV4() {
        return this.publicEndpointV4;
    }
    /**
     * IP of the distribution, it has to be included on the domain DNS Zone as AAAA record.
     * 
     */
    @Export(name="publicEndpointV6", refs={String.class}, tree="[0]")
    private Output<String> publicEndpointV6;

    /**
     * @return IP of the distribution, it has to be included on the domain DNS Zone as AAAA record.
     * 
     */
    public Output<String> publicEndpointV6() {
        return this.publicEndpointV6;
    }
    /**
     * Unique resource indentifier.
     * 
     */
    @Export(name="resourceUrn", refs={String.class}, tree="[0]")
    private Output<String> resourceUrn;

    /**
     * @return Unique resource indentifier.
     * 
     */
    public Output<String> resourceUrn() {
        return this.resourceUrn;
    }
    /**
     * [list] The routing rules for the distribution.
     * 
     */
    @Export(name="routingRules", refs={List.class,DistributionRoutingRule.class}, tree="[0,1]")
    private Output<List<DistributionRoutingRule>> routingRules;

    /**
     * @return [list] The routing rules for the distribution.
     * 
     */
    public Output<List<DistributionRoutingRule>> routingRules() {
        return this.routingRules;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Distribution(java.lang.String name) {
        this(name, DistributionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Distribution(java.lang.String name, DistributionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Distribution(java.lang.String name, DistributionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:cdn/distribution:Distribution", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Distribution(java.lang.String name, Output<java.lang.String> id, @Nullable DistributionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:cdn/distribution:Distribution", name, state, makeResourceOptions(options, id), false);
    }

    private static DistributionArgs makeArgs(DistributionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DistributionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Distribution get(java.lang.String name, Output<java.lang.String> id, @Nullable DistributionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Distribution(name, id, state, options);
    }
}
