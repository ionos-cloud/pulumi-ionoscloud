// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.compute.inputs;

import com.ionoscloud.pulumi.ionoscloud.compute.inputs.GetServersFilter;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServersPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServersPlainArgs Empty = new GetServersPlainArgs();

    /**
     * Name of an existing datacenter that the servers are a part of
     * 
     */
    @Import(name="datacenterId", required=true)
    private String datacenterId;

    /**
     * @return Name of an existing datacenter that the servers are a part of
     * 
     */
    public String datacenterId() {
        return this.datacenterId;
    }

    /**
     * One or more name/value pairs to filter off of. You can use most base fields in the server resource. These do **NOT** include nested fields in nics or volume nested fields.
     * 
     * `datacenter_id` must be provided. If `datacenter_id` is missing , the datasource will return an error.
     * 
     * **NOTE:** Lookup by filter is partial. Searching for a server using filter name and value `test`, will find all servers that have `test` in the name.
     * For example, it will find servers named `test`, `test1`, `testsomething`.
     * 
     * **NOTE:** You cannot search by `image_name` by providing an alias like `ubuntu`.
     * 
     */
    @Import(name="filters")
    private @Nullable List<GetServersFilter> filters;

    /**
     * @return One or more name/value pairs to filter off of. You can use most base fields in the server resource. These do **NOT** include nested fields in nics or volume nested fields.
     * 
     * `datacenter_id` must be provided. If `datacenter_id` is missing , the datasource will return an error.
     * 
     * **NOTE:** Lookup by filter is partial. Searching for a server using filter name and value `test`, will find all servers that have `test` in the name.
     * For example, it will find servers named `test`, `test1`, `testsomething`.
     * 
     * **NOTE:** You cannot search by `image_name` by providing an alias like `ubuntu`.
     * 
     */
    public Optional<List<GetServersFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    private GetServersPlainArgs() {}

    private GetServersPlainArgs(GetServersPlainArgs $) {
        this.datacenterId = $.datacenterId;
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServersPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServersPlainArgs $;

        public Builder() {
            $ = new GetServersPlainArgs();
        }

        public Builder(GetServersPlainArgs defaults) {
            $ = new GetServersPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datacenterId Name of an existing datacenter that the servers are a part of
         * 
         * @return builder
         * 
         */
        public Builder datacenterId(String datacenterId) {
            $.datacenterId = datacenterId;
            return this;
        }

        /**
         * @param filters One or more name/value pairs to filter off of. You can use most base fields in the server resource. These do **NOT** include nested fields in nics or volume nested fields.
         * 
         * `datacenter_id` must be provided. If `datacenter_id` is missing , the datasource will return an error.
         * 
         * **NOTE:** Lookup by filter is partial. Searching for a server using filter name and value `test`, will find all servers that have `test` in the name.
         * For example, it will find servers named `test`, `test1`, `testsomething`.
         * 
         * **NOTE:** You cannot search by `image_name` by providing an alias like `ubuntu`.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable List<GetServersFilter> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters One or more name/value pairs to filter off of. You can use most base fields in the server resource. These do **NOT** include nested fields in nics or volume nested fields.
         * 
         * `datacenter_id` must be provided. If `datacenter_id` is missing , the datasource will return an error.
         * 
         * **NOTE:** Lookup by filter is partial. Searching for a server using filter name and value `test`, will find all servers that have `test` in the name.
         * For example, it will find servers named `test`, `test1`, `testsomething`.
         * 
         * **NOTE:** You cannot search by `image_name` by providing an alias like `ubuntu`.
         * 
         * @return builder
         * 
         */
        public Builder filters(GetServersFilter... filters) {
            return filters(List.of(filters));
        }

        public GetServersPlainArgs build() {
            if ($.datacenterId == null) {
                throw new MissingRequiredPropertyException("GetServersPlainArgs", "datacenterId");
            }
            return $;
        }
    }

}
