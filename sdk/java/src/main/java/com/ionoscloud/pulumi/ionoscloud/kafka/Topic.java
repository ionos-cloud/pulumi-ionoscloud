// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.kafka;

import com.ionoscloud.pulumi.ionoscloud.Utilities;
import com.ionoscloud.pulumi.ionoscloud.kafka.TopicArgs;
import com.ionoscloud.pulumi.ionoscloud.kafka.inputs.TopicState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a **Kafka Cluster Topic** on IonosCloud.
 * 
 * ## Example Usage
 * 
 * This resource will create an operational Kafka Cluster Topic. After this section completes, the provisioner can be
 * called.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.compute.Lan;
 * import com.pulumi.ionoscloud.compute.LanArgs;
 * import com.pulumi.ionoscloud.kafka.Cluster;
 * import com.pulumi.ionoscloud.kafka.ClusterArgs;
 * import com.pulumi.ionoscloud.kafka.inputs.ClusterConnectionsArgs;
 * import com.pulumi.ionoscloud.kafka.Topic;
 * import com.pulumi.ionoscloud.kafka.TopicArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Basic example
 *         var example = new Datacenter("example", DatacenterArgs.builder()
 *             .name("example-kafka-datacenter")
 *             .location("de/fra")
 *             .build());
 * 
 *         var exampleLan = new Lan("exampleLan", LanArgs.builder()
 *             .datacenterId(example.id())
 *             .public_(false)
 *             .name("example-kafka-lan")
 *             .build());
 * 
 *         var exampleCluster = new Cluster("exampleCluster", ClusterArgs.builder()
 *             .name("example-kafka-cluster")
 *             .location(example.location())
 *             .version("3.7.0")
 *             .size("S")
 *             .connections(ClusterConnectionsArgs.builder()
 *                 .datacenterId(example.id())
 *                 .lanId(exampleLan.id())
 *                 .brokerAddresses(                
 *                     "192.168.1.101/24",
 *                     "192.168.1.102/24",
 *                     "192.168.1.103/24")
 *                 .build())
 *             .build());
 * 
 *         var exampleTopic = new Topic("exampleTopic", TopicArgs.builder()
 *             .clusterId(exampleCluster.id())
 *             .name("kafka-cluster-topic")
 *             .location(exampleCluster.location())
 *             .replicationFactor(1)
 *             .numberOfPartitions(1)
 *             .retentionTime(86400000)
 *             .segmentBytes(1073741824)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.compute.Lan;
 * import com.pulumi.ionoscloud.compute.LanArgs;
 * import com.pulumi.random.password;
 * import com.pulumi.random.PasswordArgs;
 * import com.pulumi.ionoscloud.compute.Server;
 * import com.pulumi.ionoscloud.compute.ServerArgs;
 * import com.pulumi.ionoscloud.compute.inputs.ServerVolumeArgs;
 * import com.pulumi.ionoscloud.compute.inputs.ServerNicArgs;
 * import com.pulumi.ionoscloud.kafka.Cluster;
 * import com.pulumi.ionoscloud.kafka.ClusterArgs;
 * import com.pulumi.ionoscloud.kafka.inputs.ClusterConnectionsArgs;
 * import com.pulumi.ionoscloud.kafka.Topic;
 * import com.pulumi.ionoscloud.kafka.TopicArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Complete example
 *         var example = new Datacenter("example", DatacenterArgs.builder()
 *             .name("example-kafka-datacenter")
 *             .location("de/fra")
 *             .build());
 * 
 *         var exampleLan = new Lan("exampleLan", LanArgs.builder()
 *             .datacenterId(example.id())
 *             .public_(false)
 *             .name("example-kafka-lan")
 *             .build());
 * 
 *         var password = new Password("password", PasswordArgs.builder()
 *             .length(16)
 *             .special(false)
 *             .build());
 * 
 *         var exampleServer = new Server("exampleServer", ServerArgs.builder()
 *             .name("example-kafka-server")
 *             .datacenterId(example.id())
 *             .cores(1)
 *             .ram(2 * 1024)
 *             .availabilityZone("AUTO")
 *             .cpuFamily("INTEL_SKYLAKE")
 *             .imageName("ubuntu:latest")
 *             .imagePassword(password.result())
 *             .volume(ServerVolumeArgs.builder()
 *                 .name("example-kafka-volume")
 *                 .size(6)
 *                 .diskType("SSD Standard")
 *                 .build())
 *             .nic(ServerNicArgs.builder()
 *                 .lan(exampleLan.id())
 *                 .name("example-kafka-nic")
 *                 .dhcp(true)
 *                 .build())
 *             .build());
 * 
 *         var exampleCluster = new Cluster("exampleCluster", ClusterArgs.builder()
 *             .name("example-kafka-cluster")
 *             .location(example.location())
 *             .version("3.7.0")
 *             .size("S")
 *             .connections(ClusterConnectionsArgs.builder()
 *                 .datacenterId(example.id())
 *                 .lanId(exampleLan.id())
 *                 .brokerAddresses("kafka_cluster_broker_ips_cidr_list")
 *                 .build())
 *             .build());
 * 
 *         var exampleTopic = new Topic("exampleTopic", TopicArgs.builder()
 *             .clusterId(exampleCluster.id())
 *             .name("kafka-cluster-topic")
 *             .location(exampleCluster.location())
 *             .replicationFactor(1)
 *             .numberOfPartitions(1)
 *             .retentionTime(86400000)
 *             .segmentBytes(1073741824)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Kafka Cluster Topic can be imported using the `location`, `kafka cluster id` and the `kafka cluster topic id`:
 * 
 * ```sh
 * $ pulumi import ionoscloud:kafka/topic:Topic my_topic location:kafka cluster uuid:kafka cluster topic uuid
 * ```
 * 
 */
@ResourceType(type="ionoscloud:kafka/topic:Topic")
public class Topic extends com.pulumi.resources.CustomResource {
    /**
     * [string] ID of the Kafka Cluster that the topic belongs to.
     * 
     */
    @Export(name="clusterId", refs={String.class}, tree="[0]")
    private Output<String> clusterId;

    /**
     * @return [string] ID of the Kafka Cluster that the topic belongs to.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * [string] The location of the Kafka Cluster Topic. Possible values: `de/fra`, `de/txl`. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> location;

    /**
     * @return [string] The location of the Kafka Cluster Topic. Possible values: `de/fra`, `de/txl`. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * [string] Name of the Kafka Cluster.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [string] Name of the Kafka Cluster.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * [int] The number of partitions of the topic. Partitions allow for parallel
     * processing of messages. The partition count must be greater than or equal to the replication factor. Minimum value: 1.
     * Default value: 3.
     * 
     */
    @Export(name="numberOfPartitions", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> numberOfPartitions;

    /**
     * @return [int] The number of partitions of the topic. Partitions allow for parallel
     * processing of messages. The partition count must be greater than or equal to the replication factor. Minimum value: 1.
     * Default value: 3.
     * 
     */
    public Output<Optional<Integer>> numberOfPartitions() {
        return Codegen.optional(this.numberOfPartitions);
    }
    /**
     * [int] The number of replicas of the topic. The replication factor determines how many
     * copies of the topic are stored on different brokers. The replication factor must be less than or equal to the number
     * of brokers in the Kafka Cluster. Minimum value: 1. Default value: 3.
     * 
     */
    @Export(name="replicationFactor", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> replicationFactor;

    /**
     * @return [int] The number of replicas of the topic. The replication factor determines how many
     * copies of the topic are stored on different brokers. The replication factor must be less than or equal to the number
     * of brokers in the Kafka Cluster. Minimum value: 1. Default value: 3.
     * 
     */
    public Output<Optional<Integer>> replicationFactor() {
        return Codegen.optional(this.replicationFactor);
    }
    /**
     * [int] This configuration controls the maximum time we will retain a log before we will
     * discard old log segments to free up space. This represents an SLA on how soon consumers must read their data. If set
     * to -1, no time limit is applied. Default value: 604800000.
     * 
     */
    @Export(name="retentionTime", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> retentionTime;

    /**
     * @return [int] This configuration controls the maximum time we will retain a log before we will
     * discard old log segments to free up space. This represents an SLA on how soon consumers must read their data. If set
     * to -1, no time limit is applied. Default value: 604800000.
     * 
     */
    public Output<Optional<Integer>> retentionTime() {
        return Codegen.optional(this.retentionTime);
    }
    /**
     * [int] This configuration controls the segment file size for the log. Retention and
     * cleaning is always done a file at a time so a larger segment size means fewer files but less granular control over
     * retention. Default value: 1073741824.
     * 
     */
    @Export(name="segmentBytes", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> segmentBytes;

    /**
     * @return [int] This configuration controls the segment file size for the log. Retention and
     * cleaning is always done a file at a time so a larger segment size means fewer files but less granular control over
     * retention. Default value: 1073741824.
     * 
     */
    public Output<Optional<Integer>> segmentBytes() {
        return Codegen.optional(this.segmentBytes);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Topic(java.lang.String name) {
        this(name, TopicArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Topic(java.lang.String name, TopicArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Topic(java.lang.String name, TopicArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:kafka/topic:Topic", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Topic(java.lang.String name, Output<java.lang.String> id, @Nullable TopicState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:kafka/topic:Topic", name, state, makeResourceOptions(options, id), false);
    }

    private static TopicArgs makeArgs(TopicArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TopicArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Topic get(java.lang.String name, Output<java.lang.String> id, @Nullable TopicState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Topic(name, id, state, options);
    }
}
