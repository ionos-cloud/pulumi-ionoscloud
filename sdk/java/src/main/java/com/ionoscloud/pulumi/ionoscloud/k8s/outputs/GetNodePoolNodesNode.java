// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.k8s.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNodePoolNodesNode {
    /**
     * @return ID of the node pool you want to search for.
     * 
     * `k8s_cluster_id` and `node_pool_id` must be provided.
     * 
     */
    private String id;
    /**
     * @return The kubernetes version
     * 
     */
    private String k8sVersion;
    /**
     * @return Name of an existing node pool that you want to search for.
     * 
     */
    private String name;
    /**
     * @return private ip of the node
     * 
     */
    private String privateIp;
    /**
     * @return public ip of the node
     * 
     */
    private String publicIp;

    private GetNodePoolNodesNode() {}
    /**
     * @return ID of the node pool you want to search for.
     * 
     * `k8s_cluster_id` and `node_pool_id` must be provided.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The kubernetes version
     * 
     */
    public String k8sVersion() {
        return this.k8sVersion;
    }
    /**
     * @return Name of an existing node pool that you want to search for.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return private ip of the node
     * 
     */
    public String privateIp() {
        return this.privateIp;
    }
    /**
     * @return public ip of the node
     * 
     */
    public String publicIp() {
        return this.publicIp;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodePoolNodesNode defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String k8sVersion;
        private String name;
        private String privateIp;
        private String publicIp;
        public Builder() {}
        public Builder(GetNodePoolNodesNode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.k8sVersion = defaults.k8sVersion;
    	      this.name = defaults.name;
    	      this.privateIp = defaults.privateIp;
    	      this.publicIp = defaults.publicIp;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNodePoolNodesNode", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder k8sVersion(String k8sVersion) {
            if (k8sVersion == null) {
              throw new MissingRequiredPropertyException("GetNodePoolNodesNode", "k8sVersion");
            }
            this.k8sVersion = k8sVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNodePoolNodesNode", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder privateIp(String privateIp) {
            if (privateIp == null) {
              throw new MissingRequiredPropertyException("GetNodePoolNodesNode", "privateIp");
            }
            this.privateIp = privateIp;
            return this;
        }
        @CustomType.Setter
        public Builder publicIp(String publicIp) {
            if (publicIp == null) {
              throw new MissingRequiredPropertyException("GetNodePoolNodesNode", "publicIp");
            }
            this.publicIp = publicIp;
            return this;
        }
        public GetNodePoolNodesNode build() {
            final var _resultValue = new GetNodePoolNodesNode();
            _resultValue.id = id;
            _resultValue.k8sVersion = k8sVersion;
            _resultValue.name = name;
            _resultValue.privateIp = privateIp;
            _resultValue.publicIp = publicIp;
            return _resultValue;
        }
    }
}
