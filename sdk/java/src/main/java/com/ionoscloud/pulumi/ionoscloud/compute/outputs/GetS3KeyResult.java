// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetS3KeyResult {
    /**
     * @return The state of the IONOS Object Storage key
     * 
     */
    private Boolean active;
    /**
     * @return The id of the IONOS Object Storage key
     * 
     */
    private String id;
    /**
     * @return (Computed)The IONOS Object Storage Secret key.
     * 
     */
    private String secretKey;
    /**
     * @return The ID of the user that owns the key
     * 
     */
    private String userId;

    private GetS3KeyResult() {}
    /**
     * @return The state of the IONOS Object Storage key
     * 
     */
    public Boolean active() {
        return this.active;
    }
    /**
     * @return The id of the IONOS Object Storage key
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Computed)The IONOS Object Storage Secret key.
     * 
     */
    public String secretKey() {
        return this.secretKey;
    }
    /**
     * @return The ID of the user that owns the key
     * 
     */
    public String userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetS3KeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean active;
        private String id;
        private String secretKey;
        private String userId;
        public Builder() {}
        public Builder(GetS3KeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.id = defaults.id;
    	      this.secretKey = defaults.secretKey;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder active(Boolean active) {
            if (active == null) {
              throw new MissingRequiredPropertyException("GetS3KeyResult", "active");
            }
            this.active = active;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetS3KeyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder secretKey(String secretKey) {
            if (secretKey == null) {
              throw new MissingRequiredPropertyException("GetS3KeyResult", "secretKey");
            }
            this.secretKey = secretKey;
            return this;
        }
        @CustomType.Setter
        public Builder userId(String userId) {
            if (userId == null) {
              throw new MissingRequiredPropertyException("GetS3KeyResult", "userId");
            }
            this.userId = userId;
            return this;
        }
        public GetS3KeyResult build() {
            final var _resultValue = new GetS3KeyResult();
            _resultValue.active = active;
            _resultValue.id = id;
            _resultValue.secretKey = secretKey;
            _resultValue.userId = userId;
            return _resultValue;
        }
    }
}
