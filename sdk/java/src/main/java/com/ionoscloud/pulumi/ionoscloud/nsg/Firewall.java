// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.nsg;

import com.ionoscloud.pulumi.ionoscloud.Utilities;
import com.ionoscloud.pulumi.ionoscloud.nsg.FirewallArgs;
import com.ionoscloud.pulumi.ionoscloud.nsg.inputs.FirewallState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a **Network Security Group Rule** on IonosCloud.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.nsg.Nsg;
 * import com.pulumi.ionoscloud.nsg.NsgArgs;
 * import com.pulumi.ionoscloud.nsg.Firewall;
 * import com.pulumi.ionoscloud.nsg.FirewallArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Datacenter("example", DatacenterArgs.builder()
 *             .name("Datacenter NSG Example")
 *             .location("de/txl")
 *             .build());
 * 
 *         var exampleNsg = new Nsg("exampleNsg", NsgArgs.builder()
 *             .name("Example NSG")
 *             .description("Example NSG Description")
 *             .datacenterId(example.id())
 *             .build());
 * 
 *         var exampleFirewall = new Firewall("exampleFirewall", FirewallArgs.builder()
 *             .nsgId(exampleNsg.id())
 *             .datacenterId(example.id())
 *             .protocol("TCP")
 *             .name("SG Rule")
 *             .sourceMac("00:0a:95:9d:68:15")
 *             .sourceIp("22.231.113.11")
 *             .targetIp("22.231.113.75")
 *             .type("EGRESS")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Resource Server can be imported using the `resource id`, `nsg id` and `datacenter id`, e.g.
 * 
 * ```sh
 * $ pulumi import ionoscloud:nsg/firewall:Firewall mynsg datacenter uuid/nsg uuid/firewall uuid
 * ```
 * 
 * Or by using an `import` block.
 * 
 * hcl
 * 
 * import {
 * 
 *   to = ionoscloud_nsg.imported
 * 
 *   id = &#34;datacenter uuid/nsg uuid/firewall uuid&#34;
 * 
 * }
 * 
 * resource &#34;ionoscloud_nsg_firewallrule&#34; &#34;imported&#34; {
 * 
 *   nsg_id            = ionoscloud_nsg.example.id
 * 
 *   datacenter_id     = ionoscloud_datacenter.example.id
 * 
 *   protocol          = protocol of the imported rule
 * 
 * }
 * 
 */
@ResourceType(type="ionoscloud:nsg/firewall:Firewall")
public class Firewall extends com.pulumi.resources.CustomResource {
    /**
     * [string] The ID of a Virtual Data Center.
     * 
     */
    @Export(name="datacenterId", refs={String.class}, tree="[0]")
    private Output<String> datacenterId;

    /**
     * @return [string] The ID of a Virtual Data Center.
     * 
     */
    public Output<String> datacenterId() {
        return this.datacenterId;
    }
    /**
     * [int] Defines the allowed code (from 0 to 254) if protocol ICMP is chosen.
     * 
     */
    @Export(name="icmpCode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> icmpCode;

    /**
     * @return [int] Defines the allowed code (from 0 to 254) if protocol ICMP is chosen.
     * 
     */
    public Output<Optional<String>> icmpCode() {
        return Codegen.optional(this.icmpCode);
    }
    /**
     * [string] Defines the allowed code (from 0 to 254) if protocol ICMP is chosen. Value null allows all codes.
     * 
     */
    @Export(name="icmpType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> icmpType;

    /**
     * @return [string] Defines the allowed code (from 0 to 254) if protocol ICMP is chosen. Value null allows all codes.
     * 
     */
    public Output<Optional<String>> icmpType() {
        return Codegen.optional(this.icmpType);
    }
    /**
     * [string] The name of the firewall rule.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [string] The name of the firewall rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * [string] The ID of a Network Security Group.
     * 
     */
    @Export(name="nsgId", refs={String.class}, tree="[0]")
    private Output<String> nsgId;

    /**
     * @return [string] The ID of a Network Security Group.
     * 
     */
    public Output<String> nsgId() {
        return this.nsgId;
    }
    /**
     * [int] Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd null to allow all ports.
     * 
     */
    @Export(name="portRangeEnd", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> portRangeEnd;

    /**
     * @return [int] Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd null to allow all ports.
     * 
     */
    public Output<Optional<Integer>> portRangeEnd() {
        return Codegen.optional(this.portRangeEnd);
    }
    /**
     * [int] Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd null to allow all ports.
     * 
     */
    @Export(name="portRangeStart", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> portRangeStart;

    /**
     * @return [int] Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd null to allow all ports.
     * 
     */
    public Output<Optional<Integer>> portRangeStart() {
        return Codegen.optional(this.portRangeStart);
    }
    /**
     * [string] The protocol for the rule: TCP, UDP, ICMP, ANY. Property cannot be modified after creation (disallowed in update requests).
     * 
     */
    @Export(name="protocol", refs={String.class}, tree="[0]")
    private Output<String> protocol;

    /**
     * @return [string] The protocol for the rule: TCP, UDP, ICMP, ANY. Property cannot be modified after creation (disallowed in update requests).
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }
    /**
     * (computed)[string] Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs.
     * 
     */
    @Export(name="sourceIp", refs={String.class}, tree="[0]")
    private Output<String> sourceIp;

    /**
     * @return (computed)[string] Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs.
     * 
     */
    public Output<String> sourceIp() {
        return this.sourceIp;
    }
    /**
     * [string] Only traffic originating from the respective MAC address is allowed. Valid format: aa:bb:cc:dd:ee:ff. Value null allows all source MAC address. Valid format: aa:bb:cc:dd:ee:ff.
     * 
     */
    @Export(name="sourceMac", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceMac;

    /**
     * @return [string] Only traffic originating from the respective MAC address is allowed. Valid format: aa:bb:cc:dd:ee:ff. Value null allows all source MAC address. Valid format: aa:bb:cc:dd:ee:ff.
     * 
     */
    public Output<Optional<String>> sourceMac() {
        return Codegen.optional(this.sourceMac);
    }
    /**
     * (Computed)[string] In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed. Value null allows all target IPs.
     * 
     */
    @Export(name="targetIp", refs={String.class}, tree="[0]")
    private Output<String> targetIp;

    /**
     * @return (Computed)[string] In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed. Value null allows all target IPs.
     * 
     */
    public Output<String> targetIp() {
        return this.targetIp;
    }
    /**
     * (Computed)[string] The type of firewall rule. If is not specified, it will take the default value INGRESS.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return (Computed)[string] The type of firewall rule. If is not specified, it will take the default value INGRESS.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Firewall(java.lang.String name) {
        this(name, FirewallArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Firewall(java.lang.String name, FirewallArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Firewall(java.lang.String name, FirewallArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:nsg/firewall:Firewall", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Firewall(java.lang.String name, Output<java.lang.String> id, @Nullable FirewallState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:nsg/firewall:Firewall", name, state, makeResourceOptions(options, id), false);
    }

    private static FirewallArgs makeArgs(FirewallArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FirewallArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Firewall get(java.lang.String name, Output<java.lang.String> id, @Nullable FirewallState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Firewall(name, id, state, options);
    }
}
