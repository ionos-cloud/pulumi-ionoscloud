// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.dbaas.inputs;

import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetMongoUserRole;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMongoUserPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMongoUserPlainArgs Empty = new GetMongoUserPlainArgs();

    /**
     * [string] The unique ID of the cluster. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    @Import(name="clusterId", required=true)
    private String clusterId;

    /**
     * @return [string] The unique ID of the cluster. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }

    /**
     * [string] The user database to use for authentication. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    @Import(name="database")
    private @Nullable String database;

    /**
     * @return [string] The user database to use for authentication. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    public Optional<String> database() {
        return Optional.ofNullable(this.database);
    }

    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * [string] a list of mongodb user roles. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    @Import(name="roles")
    private @Nullable List<GetMongoUserRole> roles;

    /**
     * @return [string] a list of mongodb user roles. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    public Optional<List<GetMongoUserRole>> roles() {
        return Optional.ofNullable(this.roles);
    }

    /**
     * [string] Used for authentication. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    @Import(name="username", required=true)
    private String username;

    /**
     * @return [string] Used for authentication. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    public String username() {
        return this.username;
    }

    private GetMongoUserPlainArgs() {}

    private GetMongoUserPlainArgs(GetMongoUserPlainArgs $) {
        this.clusterId = $.clusterId;
        this.database = $.database;
        this.id = $.id;
        this.roles = $.roles;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMongoUserPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMongoUserPlainArgs $;

        public Builder() {
            $ = new GetMongoUserPlainArgs();
        }

        public Builder(GetMongoUserPlainArgs defaults) {
            $ = new GetMongoUserPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId [string] The unique ID of the cluster. Updates to the value of the field force the cluster to be re-created.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param database [string] The user database to use for authentication. Updates to the value of the field force the cluster to be re-created.
         * 
         * @return builder
         * 
         */
        public Builder database(@Nullable String database) {
            $.database = database;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param roles [string] a list of mongodb user roles. Updates to the value of the field force the cluster to be re-created.
         * 
         * @return builder
         * 
         */
        public Builder roles(@Nullable List<GetMongoUserRole> roles) {
            $.roles = roles;
            return this;
        }

        /**
         * @param roles [string] a list of mongodb user roles. Updates to the value of the field force the cluster to be re-created.
         * 
         * @return builder
         * 
         */
        public Builder roles(GetMongoUserRole... roles) {
            return roles(List.of(roles));
        }

        /**
         * @param username [string] Used for authentication. Updates to the value of the field force the cluster to be re-created.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            $.username = username;
            return this;
        }

        public GetMongoUserPlainArgs build() {
            if ($.clusterId == null) {
                throw new MissingRequiredPropertyException("GetMongoUserPlainArgs", "clusterId");
            }
            if ($.username == null) {
                throw new MissingRequiredPropertyException("GetMongoUserPlainArgs", "username");
            }
            return $;
        }
    }

}
