// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.nlb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ForwardingRuleHealthCheckArgs extends com.pulumi.resources.ResourceArgs {

    public static final ForwardingRuleHealthCheckArgs Empty = new ForwardingRuleHealthCheckArgs();

    /**
     * [int] ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
     * 
     */
    @Import(name="clientTimeout")
    private @Nullable Output<Integer> clientTimeout;

    /**
     * @return [int] ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
     * 
     */
    public Optional<Output<Integer>> clientTimeout() {
        return Optional.ofNullable(this.clientTimeout);
    }

    /**
     * [int] It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
     * 
     */
    @Import(name="connectTimeout")
    private @Nullable Output<Integer> connectTimeout;

    /**
     * @return [int] It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
     * 
     */
    public Optional<Output<Integer>> connectTimeout() {
        return Optional.ofNullable(this.connectTimeout);
    }

    /**
     * [int] Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
     * 
     */
    @Import(name="retries")
    private @Nullable Output<Integer> retries;

    /**
     * @return [int] Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
     * 
     */
    public Optional<Output<Integer>> retries() {
        return Optional.ofNullable(this.retries);
    }

    /**
     * [int] TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
     * 
     */
    @Import(name="targetTimeout")
    private @Nullable Output<Integer> targetTimeout;

    /**
     * @return [int] TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
     * 
     */
    public Optional<Output<Integer>> targetTimeout() {
        return Optional.ofNullable(this.targetTimeout);
    }

    private ForwardingRuleHealthCheckArgs() {}

    private ForwardingRuleHealthCheckArgs(ForwardingRuleHealthCheckArgs $) {
        this.clientTimeout = $.clientTimeout;
        this.connectTimeout = $.connectTimeout;
        this.retries = $.retries;
        this.targetTimeout = $.targetTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ForwardingRuleHealthCheckArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ForwardingRuleHealthCheckArgs $;

        public Builder() {
            $ = new ForwardingRuleHealthCheckArgs();
        }

        public Builder(ForwardingRuleHealthCheckArgs defaults) {
            $ = new ForwardingRuleHealthCheckArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientTimeout [int] ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
         * 
         * @return builder
         * 
         */
        public Builder clientTimeout(@Nullable Output<Integer> clientTimeout) {
            $.clientTimeout = clientTimeout;
            return this;
        }

        /**
         * @param clientTimeout [int] ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
         * 
         * @return builder
         * 
         */
        public Builder clientTimeout(Integer clientTimeout) {
            return clientTimeout(Output.of(clientTimeout));
        }

        /**
         * @param connectTimeout [int] It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
         * 
         * @return builder
         * 
         */
        public Builder connectTimeout(@Nullable Output<Integer> connectTimeout) {
            $.connectTimeout = connectTimeout;
            return this;
        }

        /**
         * @param connectTimeout [int] It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
         * 
         * @return builder
         * 
         */
        public Builder connectTimeout(Integer connectTimeout) {
            return connectTimeout(Output.of(connectTimeout));
        }

        /**
         * @param retries [int] Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
         * 
         * @return builder
         * 
         */
        public Builder retries(@Nullable Output<Integer> retries) {
            $.retries = retries;
            return this;
        }

        /**
         * @param retries [int] Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
         * 
         * @return builder
         * 
         */
        public Builder retries(Integer retries) {
            return retries(Output.of(retries));
        }

        /**
         * @param targetTimeout [int] TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
         * 
         * @return builder
         * 
         */
        public Builder targetTimeout(@Nullable Output<Integer> targetTimeout) {
            $.targetTimeout = targetTimeout;
            return this;
        }

        /**
         * @param targetTimeout [int] TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
         * 
         * @return builder
         * 
         */
        public Builder targetTimeout(Integer targetTimeout) {
            return targetTimeout(Output.of(targetTimeout));
        }

        public ForwardingRuleHealthCheckArgs build() {
            return $;
        }
    }

}
