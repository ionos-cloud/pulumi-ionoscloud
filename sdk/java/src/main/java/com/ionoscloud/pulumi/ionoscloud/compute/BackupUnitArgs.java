// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupUnitArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupUnitArgs Empty = new BackupUnitArgs();

    /**
     * [string] The email address assigned to the backup unit
     * 
     */
    @Import(name="email", required=true)
    private Output<String> email;

    /**
     * @return [string] The email address assigned to the backup unit
     * 
     */
    public Output<String> email() {
        return this.email;
    }

    /**
     * [string] The name of the Backup Unit. This argument is immutable.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return [string] The name of the Backup Unit. This argument is immutable.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * [string] The desired password for the Backup Unit
     * 
     */
    @Import(name="password", required=true)
    private Output<String> password;

    /**
     * @return [string] The desired password for the Backup Unit
     * 
     */
    public Output<String> password() {
        return this.password;
    }

    private BackupUnitArgs() {}

    private BackupUnitArgs(BackupUnitArgs $) {
        this.email = $.email;
        this.name = $.name;
        this.password = $.password;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupUnitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupUnitArgs $;

        public Builder() {
            $ = new BackupUnitArgs();
        }

        public Builder(BackupUnitArgs defaults) {
            $ = new BackupUnitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param email [string] The email address assigned to the backup unit
         * 
         * @return builder
         * 
         */
        public Builder email(Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email [string] The email address assigned to the backup unit
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param name [string] The name of the Backup Unit. This argument is immutable.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name [string] The name of the Backup Unit. This argument is immutable.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param password [string] The desired password for the Backup Unit
         * 
         * @return builder
         * 
         */
        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password [string] The desired password for the Backup Unit
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        public BackupUnitArgs build() {
            if ($.email == null) {
                throw new MissingRequiredPropertyException("BackupUnitArgs", "email");
            }
            if ($.password == null) {
                throw new MissingRequiredPropertyException("BackupUnitArgs", "password");
            }
            return $;
        }
    }

}
