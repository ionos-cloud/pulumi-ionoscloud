// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.apigateway;

import com.ionoscloud.pulumi.ionoscloud.Utilities;
import com.ionoscloud.pulumi.ionoscloud.apigateway.RouteArgs;
import com.ionoscloud.pulumi.ionoscloud.apigateway.inputs.RouteState;
import com.ionoscloud.pulumi.ionoscloud.apigateway.outputs.RouteUpstream;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an **API Gateway Route** on IonosCloud.
 * 
 * ## Example Usage
 * 
 * This resource will create an operational API Gateway Route. After this section completes, the provisioner can be called.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.apigateway.Apigateway;
 * import com.pulumi.ionoscloud.apigateway.ApigatewayArgs;
 * import com.pulumi.ionoscloud.apigateway.inputs.ApigatewayCustomDomainArgs;
 * import com.pulumi.ionoscloud.apigateway.Route;
 * import com.pulumi.ionoscloud.apigateway.RouteArgs;
 * import com.pulumi.ionoscloud.apigateway.inputs.RouteUpstreamArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Apigateway("example", ApigatewayArgs.builder()
 *             .name("example-gateway")
 *             .metrics(true)
 *             .customDomains(            
 *                 ApigatewayCustomDomainArgs.builder()
 *                     .name("example.com")
 *                     .certificateId("00000000-0000-0000-0000-000000000000")
 *                     .build(),
 *                 ApigatewayCustomDomainArgs.builder()
 *                     .name("example.org")
 *                     .certificateId("00000000-0000-0000-0000-000000000000")
 *                     .build())
 *             .build());
 * 
 *         var apigatewayRoute = new Route("apigatewayRoute", RouteArgs.builder()
 *             .name("apigateway-route")
 *             .type("http")
 *             .paths(            
 *                 "/foo/*",
 *                 "/bar")
 *             .methods(            
 *                 "GET",
 *                 "POST")
 *             .websocket(false)
 *             .upstreams(RouteUpstreamArgs.builder()
 *                 .scheme("http")
 *                 .loadbalancer("roundrobin")
 *                 .host("example.com")
 *                 .port(80)
 *                 .weight(100)
 *                 .build())
 *             .gatewayId(example.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * API Gateway route can be imported using the `apigateway route id`:
 * 
 * ```sh
 * $ pulumi import ionoscloud:apigateway/route:Route myroute apigateway uuid:apigateway route uuid
 * ```
 * 
 */
@ResourceType(type="ionoscloud:apigateway/route:Route")
public class Route extends com.pulumi.resources.CustomResource {
    /**
     * [string] The ID of the API Gateway that the route belongs to.
     * 
     */
    @Export(name="gatewayId", refs={String.class}, tree="[0]")
    private Output<String> gatewayId;

    /**
     * @return [string] The ID of the API Gateway that the route belongs to.
     * 
     */
    public Output<String> gatewayId() {
        return this.gatewayId;
    }
    /**
     * [list] The HTTP methods that the route should match. Minimum items: 1. Possible values: `GET`,
     * `POST`, `PUT`, `DELETE`, `PATCH`, `OPTIONS`, `HEAD`, `CONNECT`, `TRACE`.
     * 
     */
    @Export(name="methods", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> methods;

    /**
     * @return [list] The HTTP methods that the route should match. Minimum items: 1. Possible values: `GET`,
     * `POST`, `PUT`, `DELETE`, `PATCH`, `OPTIONS`, `HEAD`, `CONNECT`, `TRACE`.
     * 
     */
    public Output<List<String>> methods() {
        return this.methods;
    }
    /**
     * [string] Name of the API Gateway Route. Only alphanumeric characters are allowed.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [string] Name of the API Gateway Route. Only alphanumeric characters are allowed.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * [list] The paths that the route should match. Minimum items: 1.
     * 
     */
    @Export(name="paths", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> paths;

    /**
     * @return [list] The paths that the route should match. Minimum items: 1.
     * 
     */
    public Output<List<String>> paths() {
        return this.paths;
    }
    /**
     * [string] This field specifies the protocol used by the ingress to route traffic to the backend
     * service. Default value: `http`.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> type;

    /**
     * @return [string] This field specifies the protocol used by the ingress to route traffic to the backend
     * service. Default value: `http`.
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }
    /**
     * Upstreams information of the API Gateway Route. Minimum items: 1.
     * 
     */
    @Export(name="upstreams", refs={List.class,RouteUpstream.class}, tree="[0,1]")
    private Output<List<RouteUpstream>> upstreams;

    /**
     * @return Upstreams information of the API Gateway Route. Minimum items: 1.
     * 
     */
    public Output<List<RouteUpstream>> upstreams() {
        return this.upstreams;
    }
    /**
     * [bool] To enable websocket support. Default value: `false`.
     * 
     */
    @Export(name="websocket", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> websocket;

    /**
     * @return [bool] To enable websocket support. Default value: `false`.
     * 
     */
    public Output<Optional<Boolean>> websocket() {
        return Codegen.optional(this.websocket);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Route(java.lang.String name) {
        this(name, RouteArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Route(java.lang.String name, RouteArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Route(java.lang.String name, RouteArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:apigateway/route:Route", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Route(java.lang.String name, Output<java.lang.String> id, @Nullable RouteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:apigateway/route:Route", name, state, makeResourceOptions(options, id), false);
    }

    private static RouteArgs makeArgs(RouteArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RouteArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Route get(java.lang.String name, Output<java.lang.String> id, @Nullable RouteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Route(name, id, state, options);
    }
}
