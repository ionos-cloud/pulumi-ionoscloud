// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.logging.inputs;

import com.ionoscloud.pulumi.ionoscloud.logging.inputs.PipelineLogArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineState extends com.pulumi.resources.ResourceArgs {

    public static final PipelineState Empty = new PipelineState();

    /**
     * [string] The address of the client&#39;s grafana instance.
     * 
     */
    @Import(name="grafanaAddress")
    private @Nullable Output<String> grafanaAddress;

    /**
     * @return [string] The address of the client&#39;s grafana instance.
     * 
     */
    public Optional<Output<String>> grafanaAddress() {
        return Optional.ofNullable(this.grafanaAddress);
    }

    /**
     * [string] The location of the Logging pipeline. Default: `de/txl` One of `de/fra`, `de/txl`, `gb/lhr`, `es/vit`, `fr/par`. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return [string] The location of the Logging pipeline. Default: `de/txl` One of `de/fra`, `de/txl`, `gb/lhr`, `es/vit`, `fr/par`. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * [list] Pipeline logs, a list that contains elements with the following structure:
     * 
     */
    @Import(name="logs")
    private @Nullable Output<List<PipelineLogArgs>> logs;

    /**
     * @return [list] Pipeline logs, a list that contains elements with the following structure:
     * 
     */
    public Optional<Output<List<PipelineLogArgs>>> logs() {
        return Optional.ofNullable(this.logs);
    }

    /**
     * [string] The name of the Logging pipeline.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return [string] The name of the Logging pipeline.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private PipelineState() {}

    private PipelineState(PipelineState $) {
        this.grafanaAddress = $.grafanaAddress;
        this.location = $.location;
        this.logs = $.logs;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineState $;

        public Builder() {
            $ = new PipelineState();
        }

        public Builder(PipelineState defaults) {
            $ = new PipelineState(Objects.requireNonNull(defaults));
        }

        /**
         * @param grafanaAddress [string] The address of the client&#39;s grafana instance.
         * 
         * @return builder
         * 
         */
        public Builder grafanaAddress(@Nullable Output<String> grafanaAddress) {
            $.grafanaAddress = grafanaAddress;
            return this;
        }

        /**
         * @param grafanaAddress [string] The address of the client&#39;s grafana instance.
         * 
         * @return builder
         * 
         */
        public Builder grafanaAddress(String grafanaAddress) {
            return grafanaAddress(Output.of(grafanaAddress));
        }

        /**
         * @param location [string] The location of the Logging pipeline. Default: `de/txl` One of `de/fra`, `de/txl`, `gb/lhr`, `es/vit`, `fr/par`. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location [string] The location of the Logging pipeline. Default: `de/txl` One of `de/fra`, `de/txl`, `gb/lhr`, `es/vit`, `fr/par`. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param logs [list] Pipeline logs, a list that contains elements with the following structure:
         * 
         * @return builder
         * 
         */
        public Builder logs(@Nullable Output<List<PipelineLogArgs>> logs) {
            $.logs = logs;
            return this;
        }

        /**
         * @param logs [list] Pipeline logs, a list that contains elements with the following structure:
         * 
         * @return builder
         * 
         */
        public Builder logs(List<PipelineLogArgs> logs) {
            return logs(Output.of(logs));
        }

        /**
         * @param logs [list] Pipeline logs, a list that contains elements with the following structure:
         * 
         * @return builder
         * 
         */
        public Builder logs(PipelineLogArgs... logs) {
            return logs(List.of(logs));
        }

        /**
         * @param name [string] The name of the Logging pipeline.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name [string] The name of the Logging pipeline.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public PipelineState build() {
            return $;
        }
    }

}
