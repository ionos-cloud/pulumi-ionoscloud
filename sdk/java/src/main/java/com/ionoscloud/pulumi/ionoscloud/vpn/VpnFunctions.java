// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.vpn;

import com.ionoscloud.pulumi.ionoscloud.Utilities;
import com.ionoscloud.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
import com.ionoscloud.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.vpn.inputs.GetIpsecTunnelArgs;
import com.ionoscloud.pulumi.ionoscloud.vpn.inputs.GetIpsecTunnelPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.vpn.inputs.GetWireguardGatewayArgs;
import com.ionoscloud.pulumi.ionoscloud.vpn.inputs.GetWireguardGatewayPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.vpn.inputs.GetWireguardPeerArgs;
import com.ionoscloud.pulumi.ionoscloud.vpn.inputs.GetWireguardPeerPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.vpn.outputs.GetIpsecGatewayResult;
import com.ionoscloud.pulumi.ionoscloud.vpn.outputs.GetIpsecTunnelResult;
import com.ionoscloud.pulumi.ionoscloud.vpn.outputs.GetWireguardGatewayResult;
import com.ionoscloud.pulumi.ionoscloud.vpn.outputs.GetWireguardPeerResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class VpnFunctions {
    /**
     * The **VPN IPSec Gateway data source** can be used to search for and return an existing IPSec Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecGateway(GetIpsecGatewayArgs.builder()
     *             .id("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecGateway(GetIpsecGatewayArgs.builder()
     *             .name("ipsec-gateway")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpsecGatewayResult> getIpsecGateway() {
        return getIpsecGateway(GetIpsecGatewayArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **VPN IPSec Gateway data source** can be used to search for and return an existing IPSec Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecGateway(GetIpsecGatewayArgs.builder()
     *             .id("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecGateway(GetIpsecGatewayArgs.builder()
     *             .name("ipsec-gateway")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpsecGatewayResult> getIpsecGatewayPlain() {
        return getIpsecGatewayPlain(GetIpsecGatewayPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **VPN IPSec Gateway data source** can be used to search for and return an existing IPSec Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecGateway(GetIpsecGatewayArgs.builder()
     *             .id("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecGateway(GetIpsecGatewayArgs.builder()
     *             .name("ipsec-gateway")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpsecGatewayResult> getIpsecGateway(GetIpsecGatewayArgs args) {
        return getIpsecGateway(args, InvokeOptions.Empty);
    }
    /**
     * The **VPN IPSec Gateway data source** can be used to search for and return an existing IPSec Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecGateway(GetIpsecGatewayArgs.builder()
     *             .id("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecGateway(GetIpsecGatewayArgs.builder()
     *             .name("ipsec-gateway")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpsecGatewayResult> getIpsecGatewayPlain(GetIpsecGatewayPlainArgs args) {
        return getIpsecGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **VPN IPSec Gateway data source** can be used to search for and return an existing IPSec Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecGateway(GetIpsecGatewayArgs.builder()
     *             .id("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecGateway(GetIpsecGatewayArgs.builder()
     *             .name("ipsec-gateway")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpsecGatewayResult> getIpsecGateway(GetIpsecGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:vpn/getIpsecGateway:getIpsecGateway", TypeShape.of(GetIpsecGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **VPN IPSec Gateway data source** can be used to search for and return an existing IPSec Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecGateway(GetIpsecGatewayArgs.builder()
     *             .id("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecGateway(GetIpsecGatewayArgs.builder()
     *             .name("ipsec-gateway")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIpsecGatewayResult> getIpsecGateway(GetIpsecGatewayArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:vpn/getIpsecGateway:getIpsecGateway", TypeShape.of(GetIpsecGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **VPN IPSec Gateway data source** can be used to search for and return an existing IPSec Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecGateway(GetIpsecGatewayArgs.builder()
     *             .id("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecGateway(GetIpsecGatewayArgs.builder()
     *             .name("ipsec-gateway")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIpsecGatewayResult> getIpsecGatewayPlain(GetIpsecGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:vpn/getIpsecGateway:getIpsecGateway", TypeShape.of(GetIpsecGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **VPN IPSec Gateway Tunnel data source** can be used to search for and return an existing IPSec Gateway Tunnel.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateway Tunnels.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecTunnel(GetIpsecTunnelArgs.builder()
     *             .id("tunnel_id")
     *             .gatewayId("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecTunnel(GetIpsecTunnelArgs.builder()
     *             .name("ipsec-tunnel")
     *             .gatewayId("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * The following attributes are returned by the datasource:
     * 
     * * `id` - The unique ID of the IPSec Gateway Tunnel.
     * * `name` - The name of the IPSec Gateway Tunnel.
     * * `description` - The human-readable description of your IPSec Gateway Tunnel.
     * * `remote_host` - The remote peer host fully qualified domain name or public IPV4 IP to connect to.
     * * `ike` - Settings for the initial security exchange phase.
     *     * `diffie_hellman_group` - The Diffie-Hellman Group to use for IPSec Encryption.
     *     * `encryption_algorithm` - The encryption algorithm to use for IPSec Encryption.
     *     * `integrity_algorithm` - The integrity algorithm to use for IPSec Encryption.
     *     * `lifetime` - The phase lifetime in seconds.
     * * `esp` - Settings for the IPSec SA (ESP) phase.
     *     * `diffie_hellman_group` - The Diffie-Hellman Group to use for IPSec Encryption.
     *     * `encryption_algorithm` - The encryption algorithm to use for IPSec Encryption.
     *     * `integrity_algorithm` - The integrity algorithm to use for IPSec Encryption.
     *     * `lifetime` - The phase lifetime in seconds.
     * * `auth` - Properties with all data needed to define IPSec Authentication.
     *     * `method` - The authentication method to use for IPSec Authentication.
     * * `cloud_network_cidrs` - The network CIDRs on the &#34;Left&#34; side that are allowed to connect to the IPSec
     *   tunnel, i.e. the CIDRs within your IONOS Cloud LAN. Specify &#34;0.0.0.0/0&#34; or &#34;::/0&#34; for all addresses.
     * * `peer_network_cidrs` - The network CIDRs on the &#34;Right&#34; side that are allowed to connect to the IPSec
     *   tunnel. Specify &#34;0.0.0.0/0&#34; or &#34;::/0&#34; for all addresses.
     * 
     */
    public static Output<GetIpsecTunnelResult> getIpsecTunnel(GetIpsecTunnelArgs args) {
        return getIpsecTunnel(args, InvokeOptions.Empty);
    }
    /**
     * The **VPN IPSec Gateway Tunnel data source** can be used to search for and return an existing IPSec Gateway Tunnel.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateway Tunnels.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecTunnel(GetIpsecTunnelArgs.builder()
     *             .id("tunnel_id")
     *             .gatewayId("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecTunnel(GetIpsecTunnelArgs.builder()
     *             .name("ipsec-tunnel")
     *             .gatewayId("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * The following attributes are returned by the datasource:
     * 
     * * `id` - The unique ID of the IPSec Gateway Tunnel.
     * * `name` - The name of the IPSec Gateway Tunnel.
     * * `description` - The human-readable description of your IPSec Gateway Tunnel.
     * * `remote_host` - The remote peer host fully qualified domain name or public IPV4 IP to connect to.
     * * `ike` - Settings for the initial security exchange phase.
     *     * `diffie_hellman_group` - The Diffie-Hellman Group to use for IPSec Encryption.
     *     * `encryption_algorithm` - The encryption algorithm to use for IPSec Encryption.
     *     * `integrity_algorithm` - The integrity algorithm to use for IPSec Encryption.
     *     * `lifetime` - The phase lifetime in seconds.
     * * `esp` - Settings for the IPSec SA (ESP) phase.
     *     * `diffie_hellman_group` - The Diffie-Hellman Group to use for IPSec Encryption.
     *     * `encryption_algorithm` - The encryption algorithm to use for IPSec Encryption.
     *     * `integrity_algorithm` - The integrity algorithm to use for IPSec Encryption.
     *     * `lifetime` - The phase lifetime in seconds.
     * * `auth` - Properties with all data needed to define IPSec Authentication.
     *     * `method` - The authentication method to use for IPSec Authentication.
     * * `cloud_network_cidrs` - The network CIDRs on the &#34;Left&#34; side that are allowed to connect to the IPSec
     *   tunnel, i.e. the CIDRs within your IONOS Cloud LAN. Specify &#34;0.0.0.0/0&#34; or &#34;::/0&#34; for all addresses.
     * * `peer_network_cidrs` - The network CIDRs on the &#34;Right&#34; side that are allowed to connect to the IPSec
     *   tunnel. Specify &#34;0.0.0.0/0&#34; or &#34;::/0&#34; for all addresses.
     * 
     */
    public static CompletableFuture<GetIpsecTunnelResult> getIpsecTunnelPlain(GetIpsecTunnelPlainArgs args) {
        return getIpsecTunnelPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **VPN IPSec Gateway Tunnel data source** can be used to search for and return an existing IPSec Gateway Tunnel.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateway Tunnels.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecTunnel(GetIpsecTunnelArgs.builder()
     *             .id("tunnel_id")
     *             .gatewayId("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecTunnel(GetIpsecTunnelArgs.builder()
     *             .name("ipsec-tunnel")
     *             .gatewayId("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * The following attributes are returned by the datasource:
     * 
     * * `id` - The unique ID of the IPSec Gateway Tunnel.
     * * `name` - The name of the IPSec Gateway Tunnel.
     * * `description` - The human-readable description of your IPSec Gateway Tunnel.
     * * `remote_host` - The remote peer host fully qualified domain name or public IPV4 IP to connect to.
     * * `ike` - Settings for the initial security exchange phase.
     *     * `diffie_hellman_group` - The Diffie-Hellman Group to use for IPSec Encryption.
     *     * `encryption_algorithm` - The encryption algorithm to use for IPSec Encryption.
     *     * `integrity_algorithm` - The integrity algorithm to use for IPSec Encryption.
     *     * `lifetime` - The phase lifetime in seconds.
     * * `esp` - Settings for the IPSec SA (ESP) phase.
     *     * `diffie_hellman_group` - The Diffie-Hellman Group to use for IPSec Encryption.
     *     * `encryption_algorithm` - The encryption algorithm to use for IPSec Encryption.
     *     * `integrity_algorithm` - The integrity algorithm to use for IPSec Encryption.
     *     * `lifetime` - The phase lifetime in seconds.
     * * `auth` - Properties with all data needed to define IPSec Authentication.
     *     * `method` - The authentication method to use for IPSec Authentication.
     * * `cloud_network_cidrs` - The network CIDRs on the &#34;Left&#34; side that are allowed to connect to the IPSec
     *   tunnel, i.e. the CIDRs within your IONOS Cloud LAN. Specify &#34;0.0.0.0/0&#34; or &#34;::/0&#34; for all addresses.
     * * `peer_network_cidrs` - The network CIDRs on the &#34;Right&#34; side that are allowed to connect to the IPSec
     *   tunnel. Specify &#34;0.0.0.0/0&#34; or &#34;::/0&#34; for all addresses.
     * 
     */
    public static Output<GetIpsecTunnelResult> getIpsecTunnel(GetIpsecTunnelArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:vpn/getIpsecTunnel:getIpsecTunnel", TypeShape.of(GetIpsecTunnelResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **VPN IPSec Gateway Tunnel data source** can be used to search for and return an existing IPSec Gateway Tunnel.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateway Tunnels.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecTunnel(GetIpsecTunnelArgs.builder()
     *             .id("tunnel_id")
     *             .gatewayId("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecTunnel(GetIpsecTunnelArgs.builder()
     *             .name("ipsec-tunnel")
     *             .gatewayId("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * The following attributes are returned by the datasource:
     * 
     * * `id` - The unique ID of the IPSec Gateway Tunnel.
     * * `name` - The name of the IPSec Gateway Tunnel.
     * * `description` - The human-readable description of your IPSec Gateway Tunnel.
     * * `remote_host` - The remote peer host fully qualified domain name or public IPV4 IP to connect to.
     * * `ike` - Settings for the initial security exchange phase.
     *     * `diffie_hellman_group` - The Diffie-Hellman Group to use for IPSec Encryption.
     *     * `encryption_algorithm` - The encryption algorithm to use for IPSec Encryption.
     *     * `integrity_algorithm` - The integrity algorithm to use for IPSec Encryption.
     *     * `lifetime` - The phase lifetime in seconds.
     * * `esp` - Settings for the IPSec SA (ESP) phase.
     *     * `diffie_hellman_group` - The Diffie-Hellman Group to use for IPSec Encryption.
     *     * `encryption_algorithm` - The encryption algorithm to use for IPSec Encryption.
     *     * `integrity_algorithm` - The integrity algorithm to use for IPSec Encryption.
     *     * `lifetime` - The phase lifetime in seconds.
     * * `auth` - Properties with all data needed to define IPSec Authentication.
     *     * `method` - The authentication method to use for IPSec Authentication.
     * * `cloud_network_cidrs` - The network CIDRs on the &#34;Left&#34; side that are allowed to connect to the IPSec
     *   tunnel, i.e. the CIDRs within your IONOS Cloud LAN. Specify &#34;0.0.0.0/0&#34; or &#34;::/0&#34; for all addresses.
     * * `peer_network_cidrs` - The network CIDRs on the &#34;Right&#34; side that are allowed to connect to the IPSec
     *   tunnel. Specify &#34;0.0.0.0/0&#34; or &#34;::/0&#34; for all addresses.
     * 
     */
    public static Output<GetIpsecTunnelResult> getIpsecTunnel(GetIpsecTunnelArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:vpn/getIpsecTunnel:getIpsecTunnel", TypeShape.of(GetIpsecTunnelResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **VPN IPSec Gateway Tunnel data source** can be used to search for and return an existing IPSec Gateway Tunnel.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateway Tunnels.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecTunnel(GetIpsecTunnelArgs.builder()
     *             .id("tunnel_id")
     *             .gatewayId("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetIpsecTunnelArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getIpsecTunnel(GetIpsecTunnelArgs.builder()
     *             .name("ipsec-tunnel")
     *             .gatewayId("gateway_id")
     *             .location("gateway_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Attributes reference
     * 
     * The following attributes are returned by the datasource:
     * 
     * * `id` - The unique ID of the IPSec Gateway Tunnel.
     * * `name` - The name of the IPSec Gateway Tunnel.
     * * `description` - The human-readable description of your IPSec Gateway Tunnel.
     * * `remote_host` - The remote peer host fully qualified domain name or public IPV4 IP to connect to.
     * * `ike` - Settings for the initial security exchange phase.
     *     * `diffie_hellman_group` - The Diffie-Hellman Group to use for IPSec Encryption.
     *     * `encryption_algorithm` - The encryption algorithm to use for IPSec Encryption.
     *     * `integrity_algorithm` - The integrity algorithm to use for IPSec Encryption.
     *     * `lifetime` - The phase lifetime in seconds.
     * * `esp` - Settings for the IPSec SA (ESP) phase.
     *     * `diffie_hellman_group` - The Diffie-Hellman Group to use for IPSec Encryption.
     *     * `encryption_algorithm` - The encryption algorithm to use for IPSec Encryption.
     *     * `integrity_algorithm` - The integrity algorithm to use for IPSec Encryption.
     *     * `lifetime` - The phase lifetime in seconds.
     * * `auth` - Properties with all data needed to define IPSec Authentication.
     *     * `method` - The authentication method to use for IPSec Authentication.
     * * `cloud_network_cidrs` - The network CIDRs on the &#34;Left&#34; side that are allowed to connect to the IPSec
     *   tunnel, i.e. the CIDRs within your IONOS Cloud LAN. Specify &#34;0.0.0.0/0&#34; or &#34;::/0&#34; for all addresses.
     * * `peer_network_cidrs` - The network CIDRs on the &#34;Right&#34; side that are allowed to connect to the IPSec
     *   tunnel. Specify &#34;0.0.0.0/0&#34; or &#34;::/0&#34; for all addresses.
     * 
     */
    public static CompletableFuture<GetIpsecTunnelResult> getIpsecTunnelPlain(GetIpsecTunnelPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:vpn/getIpsecTunnel:getIpsecTunnel", TypeShape.of(GetIpsecTunnelResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.vpn.WireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetWireguardGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getWireguardGateway(GetWireguardGatewayArgs.builder()
     *             .location("de/fra")
     *             .name("example-gateway")
     *             .build());
     * 
     *         ctx.export("vpnWireguardGatewayPublicKey", exampleVpnWireguardGateway.publicKey());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWireguardGatewayResult> getWireguardGateway() {
        return getWireguardGateway(GetWireguardGatewayArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.vpn.WireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetWireguardGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getWireguardGateway(GetWireguardGatewayArgs.builder()
     *             .location("de/fra")
     *             .name("example-gateway")
     *             .build());
     * 
     *         ctx.export("vpnWireguardGatewayPublicKey", exampleVpnWireguardGateway.publicKey());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWireguardGatewayResult> getWireguardGatewayPlain() {
        return getWireguardGatewayPlain(GetWireguardGatewayPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.vpn.WireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetWireguardGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getWireguardGateway(GetWireguardGatewayArgs.builder()
     *             .location("de/fra")
     *             .name("example-gateway")
     *             .build());
     * 
     *         ctx.export("vpnWireguardGatewayPublicKey", exampleVpnWireguardGateway.publicKey());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWireguardGatewayResult> getWireguardGateway(GetWireguardGatewayArgs args) {
        return getWireguardGateway(args, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.vpn.WireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetWireguardGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getWireguardGateway(GetWireguardGatewayArgs.builder()
     *             .location("de/fra")
     *             .name("example-gateway")
     *             .build());
     * 
     *         ctx.export("vpnWireguardGatewayPublicKey", exampleVpnWireguardGateway.publicKey());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWireguardGatewayResult> getWireguardGatewayPlain(GetWireguardGatewayPlainArgs args) {
        return getWireguardGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.vpn.WireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetWireguardGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getWireguardGateway(GetWireguardGatewayArgs.builder()
     *             .location("de/fra")
     *             .name("example-gateway")
     *             .build());
     * 
     *         ctx.export("vpnWireguardGatewayPublicKey", exampleVpnWireguardGateway.publicKey());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWireguardGatewayResult> getWireguardGateway(GetWireguardGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:vpn/getWireguardGateway:getWireguardGateway", TypeShape.of(GetWireguardGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.vpn.WireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetWireguardGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getWireguardGateway(GetWireguardGatewayArgs.builder()
     *             .location("de/fra")
     *             .name("example-gateway")
     *             .build());
     * 
     *         ctx.export("vpnWireguardGatewayPublicKey", exampleVpnWireguardGateway.publicKey());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWireguardGatewayResult> getWireguardGateway(GetWireguardGatewayArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:vpn/getWireguardGateway:getWireguardGateway", TypeShape.of(GetWireguardGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.vpn.WireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetWireguardGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getWireguardGateway(GetWireguardGatewayArgs.builder()
     *             .location("de/fra")
     *             .name("example-gateway")
     *             .build());
     * 
     *         ctx.export("vpnWireguardGatewayPublicKey", exampleVpnWireguardGateway.publicKey());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWireguardGatewayResult> getWireguardGatewayPlain(GetWireguardGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:vpn/getWireguardGateway:getWireguardGateway", TypeShape.of(GetWireguardGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.vpn.WireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetWireguardPeerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getWireguardPeer(GetWireguardPeerArgs.builder()
     *             .location("de/fra")
     *             .gatewayId("example-gateway")
     *             .name("example-peer")
     *             .build());
     * 
     *         ctx.export("vpnWireguardPeerPublicKey", exampleVpnWireguardPeer.publicKey());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWireguardPeerResult> getWireguardPeer(GetWireguardPeerArgs args) {
        return getWireguardPeer(args, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.vpn.WireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetWireguardPeerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getWireguardPeer(GetWireguardPeerArgs.builder()
     *             .location("de/fra")
     *             .gatewayId("example-gateway")
     *             .name("example-peer")
     *             .build());
     * 
     *         ctx.export("vpnWireguardPeerPublicKey", exampleVpnWireguardPeer.publicKey());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWireguardPeerResult> getWireguardPeerPlain(GetWireguardPeerPlainArgs args) {
        return getWireguardPeerPlain(args, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.vpn.WireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetWireguardPeerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getWireguardPeer(GetWireguardPeerArgs.builder()
     *             .location("de/fra")
     *             .gatewayId("example-gateway")
     *             .name("example-peer")
     *             .build());
     * 
     *         ctx.export("vpnWireguardPeerPublicKey", exampleVpnWireguardPeer.publicKey());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWireguardPeerResult> getWireguardPeer(GetWireguardPeerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:vpn/getWireguardPeer:getWireguardPeer", TypeShape.of(GetWireguardPeerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.vpn.WireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetWireguardPeerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getWireguardPeer(GetWireguardPeerArgs.builder()
     *             .location("de/fra")
     *             .gatewayId("example-gateway")
     *             .name("example-peer")
     *             .build());
     * 
     *         ctx.export("vpnWireguardPeerPublicKey", exampleVpnWireguardPeer.publicKey());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWireguardPeerResult> getWireguardPeer(GetWireguardPeerArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:vpn/getWireguardPeer:getWireguardPeer", TypeShape.of(GetWireguardPeerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.vpn.WireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.vpn.VpnFunctions;
     * import com.pulumi.ionoscloud.vpn.inputs.GetWireguardPeerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = VpnFunctions.getWireguardPeer(GetWireguardPeerArgs.builder()
     *             .location("de/fra")
     *             .gatewayId("example-gateway")
     *             .name("example-peer")
     *             .build());
     * 
     *         ctx.export("vpnWireguardPeerPublicKey", exampleVpnWireguardPeer.publicKey());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWireguardPeerResult> getWireguardPeerPlain(GetWireguardPeerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:vpn/getWireguardPeer:getWireguardPeer", TypeShape.of(GetWireguardPeerResult.class), args, Utilities.withVersion(options));
    }
}
