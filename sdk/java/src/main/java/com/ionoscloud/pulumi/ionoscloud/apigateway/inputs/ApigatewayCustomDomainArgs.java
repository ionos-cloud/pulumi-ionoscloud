// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApigatewayCustomDomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApigatewayCustomDomainArgs Empty = new ApigatewayCustomDomainArgs();

    /**
     * [string] The certificate ID for the domain. Must be a valid certificate in UUID form.
     * 
     */
    @Import(name="certificateId")
    private @Nullable Output<String> certificateId;

    /**
     * @return [string] The certificate ID for the domain. Must be a valid certificate in UUID form.
     * 
     */
    public Optional<Output<String>> certificateId() {
        return Optional.ofNullable(this.certificateId);
    }

    /**
     * [string] The domain name. Externally reachable.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return [string] The domain name. Externally reachable.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private ApigatewayCustomDomainArgs() {}

    private ApigatewayCustomDomainArgs(ApigatewayCustomDomainArgs $) {
        this.certificateId = $.certificateId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApigatewayCustomDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApigatewayCustomDomainArgs $;

        public Builder() {
            $ = new ApigatewayCustomDomainArgs();
        }

        public Builder(ApigatewayCustomDomainArgs defaults) {
            $ = new ApigatewayCustomDomainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateId [string] The certificate ID for the domain. Must be a valid certificate in UUID form.
         * 
         * @return builder
         * 
         */
        public Builder certificateId(@Nullable Output<String> certificateId) {
            $.certificateId = certificateId;
            return this;
        }

        /**
         * @param certificateId [string] The certificate ID for the domain. Must be a valid certificate in UUID form.
         * 
         * @return builder
         * 
         */
        public Builder certificateId(String certificateId) {
            return certificateId(Output.of(certificateId));
        }

        /**
         * @param name [string] The domain name. Externally reachable.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name [string] The domain name. Externally reachable.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ApigatewayCustomDomainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ApigatewayCustomDomainArgs", "name");
            }
            return $;
        }
    }

}
