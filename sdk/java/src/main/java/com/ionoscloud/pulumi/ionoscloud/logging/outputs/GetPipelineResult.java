// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.logging.outputs;

import com.ionoscloud.pulumi.ionoscloud.logging.outputs.GetPipelineLog;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPipelineResult {
    /**
     * @return The address of the client&#39;s grafana instance.
     * 
     */
    private String grafanaAddress;
    /**
     * @return The UUID of the Logging pipeline.
     * 
     */
    private String id;
    private @Nullable String location;
    /**
     * @return [list] Pipeline logs, a list that contains elements with the following structure:
     * 
     */
    private List<GetPipelineLog> logs;
    /**
     * @return The name of the Logging pipeline.
     * 
     */
    private String name;

    private GetPipelineResult() {}
    /**
     * @return The address of the client&#39;s grafana instance.
     * 
     */
    public String grafanaAddress() {
        return this.grafanaAddress;
    }
    /**
     * @return The UUID of the Logging pipeline.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return [list] Pipeline logs, a list that contains elements with the following structure:
     * 
     */
    public List<GetPipelineLog> logs() {
        return this.logs;
    }
    /**
     * @return The name of the Logging pipeline.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPipelineResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String grafanaAddress;
        private String id;
        private @Nullable String location;
        private List<GetPipelineLog> logs;
        private String name;
        public Builder() {}
        public Builder(GetPipelineResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.grafanaAddress = defaults.grafanaAddress;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.logs = defaults.logs;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder grafanaAddress(String grafanaAddress) {
            if (grafanaAddress == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "grafanaAddress");
            }
            this.grafanaAddress = grafanaAddress;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {

            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder logs(List<GetPipelineLog> logs) {
            if (logs == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "logs");
            }
            this.logs = logs;
            return this;
        }
        public Builder logs(GetPipelineLog... logs) {
            return logs(List.of(logs));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "name");
            }
            this.name = name;
            return this;
        }
        public GetPipelineResult build() {
            final var _resultValue = new GetPipelineResult();
            _resultValue.grafanaAddress = grafanaAddress;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.logs = logs;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
