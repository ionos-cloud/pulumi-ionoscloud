// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.autoscaling.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GroupReplicaConfigurationVolume {
    /**
     * @return [string] The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either `public image` or `imageAlias` in conjunction with this property.
     * 
     */
    private @Nullable String backupUnitId;
    /**
     * @return [string] Determines whether the volume will be used as a boot volume. Set to NONE, the volume will not be used as boot volume. Set to PRIMARY, the volume will be used as boot volume and set to AUTO will delegate the decision to the provisioning engine to decide whether to use the volume as boot volume.
     * Notice that exactly one volume can be set to PRIMARY or all of them set to AUTO.
     * 
     */
    private String bootOrder;
    /**
     * @return [string] The bus type of the volume. Default setting is `VIRTIO`. The bus type `IDE` is also supported.
     * 
     */
    private @Nullable String bus;
    /**
     * @return [string] The image installed on the volume. Only the UUID of the image is presently supported.
     * 
     */
    private @Nullable String image;
    /**
     * @return [string] The image installed on the volume. Must be an `imageAlias` as specified via the images API. Note that one of `image` or `imageAlias` must be set, but not both.
     * 
     */
    private @Nullable String imageAlias;
    /**
     * @return [string] Image password for this replica volume.
     * 
     */
    private @Nullable String imagePassword;
    /**
     * @return [string] Name for this replica volume.
     * 
     */
    private String name;
    /**
     * @return [int] Name for this replica volume.
     * 
     */
    private Integer size;
    /**
     * @return List of ssh keys, supports values or paths to files. Cannot be changed at update.
     * 
     */
    private @Nullable List<String> sshKeys;
    /**
     * @return [string] Storage Type for this replica volume. Possible values: `SSD`, `HDD`, `SSD_STANDARD` or `SSD_PREMIUM`.
     * 
     */
    private String type;
    /**
     * @return [string] User-data (Cloud Init) for this replica volume. Make sure you provide a Cloud Init compatible image in conjunction with this parameter.
     * 
     */
    private @Nullable String userData;

    private GroupReplicaConfigurationVolume() {}
    /**
     * @return [string] The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either `public image` or `imageAlias` in conjunction with this property.
     * 
     */
    public Optional<String> backupUnitId() {
        return Optional.ofNullable(this.backupUnitId);
    }
    /**
     * @return [string] Determines whether the volume will be used as a boot volume. Set to NONE, the volume will not be used as boot volume. Set to PRIMARY, the volume will be used as boot volume and set to AUTO will delegate the decision to the provisioning engine to decide whether to use the volume as boot volume.
     * Notice that exactly one volume can be set to PRIMARY or all of them set to AUTO.
     * 
     */
    public String bootOrder() {
        return this.bootOrder;
    }
    /**
     * @return [string] The bus type of the volume. Default setting is `VIRTIO`. The bus type `IDE` is also supported.
     * 
     */
    public Optional<String> bus() {
        return Optional.ofNullable(this.bus);
    }
    /**
     * @return [string] The image installed on the volume. Only the UUID of the image is presently supported.
     * 
     */
    public Optional<String> image() {
        return Optional.ofNullable(this.image);
    }
    /**
     * @return [string] The image installed on the volume. Must be an `imageAlias` as specified via the images API. Note that one of `image` or `imageAlias` must be set, but not both.
     * 
     */
    public Optional<String> imageAlias() {
        return Optional.ofNullable(this.imageAlias);
    }
    /**
     * @return [string] Image password for this replica volume.
     * 
     */
    public Optional<String> imagePassword() {
        return Optional.ofNullable(this.imagePassword);
    }
    /**
     * @return [string] Name for this replica volume.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return [int] Name for this replica volume.
     * 
     */
    public Integer size() {
        return this.size;
    }
    /**
     * @return List of ssh keys, supports values or paths to files. Cannot be changed at update.
     * 
     */
    public List<String> sshKeys() {
        return this.sshKeys == null ? List.of() : this.sshKeys;
    }
    /**
     * @return [string] Storage Type for this replica volume. Possible values: `SSD`, `HDD`, `SSD_STANDARD` or `SSD_PREMIUM`.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return [string] User-data (Cloud Init) for this replica volume. Make sure you provide a Cloud Init compatible image in conjunction with this parameter.
     * 
     */
    public Optional<String> userData() {
        return Optional.ofNullable(this.userData);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GroupReplicaConfigurationVolume defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backupUnitId;
        private String bootOrder;
        private @Nullable String bus;
        private @Nullable String image;
        private @Nullable String imageAlias;
        private @Nullable String imagePassword;
        private String name;
        private Integer size;
        private @Nullable List<String> sshKeys;
        private String type;
        private @Nullable String userData;
        public Builder() {}
        public Builder(GroupReplicaConfigurationVolume defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupUnitId = defaults.backupUnitId;
    	      this.bootOrder = defaults.bootOrder;
    	      this.bus = defaults.bus;
    	      this.image = defaults.image;
    	      this.imageAlias = defaults.imageAlias;
    	      this.imagePassword = defaults.imagePassword;
    	      this.name = defaults.name;
    	      this.size = defaults.size;
    	      this.sshKeys = defaults.sshKeys;
    	      this.type = defaults.type;
    	      this.userData = defaults.userData;
        }

        @CustomType.Setter
        public Builder backupUnitId(@Nullable String backupUnitId) {

            this.backupUnitId = backupUnitId;
            return this;
        }
        @CustomType.Setter
        public Builder bootOrder(String bootOrder) {
            if (bootOrder == null) {
              throw new MissingRequiredPropertyException("GroupReplicaConfigurationVolume", "bootOrder");
            }
            this.bootOrder = bootOrder;
            return this;
        }
        @CustomType.Setter
        public Builder bus(@Nullable String bus) {

            this.bus = bus;
            return this;
        }
        @CustomType.Setter
        public Builder image(@Nullable String image) {

            this.image = image;
            return this;
        }
        @CustomType.Setter
        public Builder imageAlias(@Nullable String imageAlias) {

            this.imageAlias = imageAlias;
            return this;
        }
        @CustomType.Setter
        public Builder imagePassword(@Nullable String imagePassword) {

            this.imagePassword = imagePassword;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GroupReplicaConfigurationVolume", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GroupReplicaConfigurationVolume", "size");
            }
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder sshKeys(@Nullable List<String> sshKeys) {

            this.sshKeys = sshKeys;
            return this;
        }
        public Builder sshKeys(String... sshKeys) {
            return sshKeys(List.of(sshKeys));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GroupReplicaConfigurationVolume", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder userData(@Nullable String userData) {

            this.userData = userData;
            return this;
        }
        public GroupReplicaConfigurationVolume build() {
            final var _resultValue = new GroupReplicaConfigurationVolume();
            _resultValue.backupUnitId = backupUnitId;
            _resultValue.bootOrder = bootOrder;
            _resultValue.bus = bus;
            _resultValue.image = image;
            _resultValue.imageAlias = imageAlias;
            _resultValue.imagePassword = imagePassword;
            _resultValue.name = name;
            _resultValue.size = size;
            _resultValue.sshKeys = sshKeys;
            _resultValue.type = type;
            _resultValue.userData = userData;
            return _resultValue;
        }
    }
}
