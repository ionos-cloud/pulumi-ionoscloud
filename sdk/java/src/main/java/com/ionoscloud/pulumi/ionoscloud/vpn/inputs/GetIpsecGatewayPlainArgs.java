// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.vpn.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIpsecGatewayPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIpsecGatewayPlainArgs Empty = new GetIpsecGatewayPlainArgs();

    /**
     * ID of an existing IPSec Gateway that you want to search for.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return ID of an existing IPSec Gateway that you want to search for.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The location of the IPSec Gateway.
     * 
     */
    @Import(name="location")
    private @Nullable String location;

    /**
     * @return The location of the IPSec Gateway.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Name of an existing IPSec Gateway that you want to search for.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of an existing IPSec Gateway that you want to search for.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The IKE version that is permitted for the VPN tunnels.
     * 
     */
    @Import(name="version")
    private @Nullable String version;

    /**
     * @return The IKE version that is permitted for the VPN tunnels.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    private GetIpsecGatewayPlainArgs() {}

    private GetIpsecGatewayPlainArgs(GetIpsecGatewayPlainArgs $) {
        this.id = $.id;
        this.location = $.location;
        this.name = $.name;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIpsecGatewayPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIpsecGatewayPlainArgs $;

        public Builder() {
            $ = new GetIpsecGatewayPlainArgs();
        }

        public Builder(GetIpsecGatewayPlainArgs defaults) {
            $ = new GetIpsecGatewayPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id ID of an existing IPSec Gateway that you want to search for.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param location The location of the IPSec Gateway.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable String location) {
            $.location = location;
            return this;
        }

        /**
         * @param name Name of an existing IPSec Gateway that you want to search for.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param version The IKE version that is permitted for the VPN tunnels.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable String version) {
            $.version = version;
            return this;
        }

        public GetIpsecGatewayPlainArgs build() {
            return $;
        }
    }

}
