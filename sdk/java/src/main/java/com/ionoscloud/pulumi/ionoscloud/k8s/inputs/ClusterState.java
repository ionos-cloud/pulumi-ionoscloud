// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.k8s.inputs;

import com.ionoscloud.pulumi.ionoscloud.k8s.inputs.ClusterMaintenanceWindowArgs;
import com.ionoscloud.pulumi.ionoscloud.k8s.inputs.ClusterS3BucketArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterState Empty = new ClusterState();

    /**
     * [bool] When set to true, allows the update of immutable fields by first destroying and then re-creating the cluster.
     * 
     * ⚠️ **_Warning: `allow_replace` - lets you update immutable fields, but it first destroys and then re-creates the cluster in order to do it. Set the field to true only if you know what you are doing._**
     * 
     */
    @Import(name="allowReplace")
    private @Nullable Output<Boolean> allowReplace;

    /**
     * @return [bool] When set to true, allows the update of immutable fields by first destroying and then re-creating the cluster.
     * 
     * ⚠️ **_Warning: `allow_replace` - lets you update immutable fields, but it first destroys and then re-creates the cluster in order to do it. Set the field to true only if you know what you are doing._**
     * 
     */
    public Optional<Output<Boolean>> allowReplace() {
        return Optional.ofNullable(this.allowReplace);
    }

    /**
     * [list] Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.
     * 
     */
    @Import(name="apiSubnetAllowLists")
    private @Nullable Output<List<String>> apiSubnetAllowLists;

    /**
     * @return [list] Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.
     * 
     */
    public Optional<Output<List<String>>> apiSubnetAllowLists() {
        return Optional.ofNullable(this.apiSubnetAllowLists);
    }

    /**
     * [string] The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported. The provider will ignore downgrades of patch level.
     * 
     */
    @Import(name="k8sVersion")
    private @Nullable Output<String> k8sVersion;

    /**
     * @return [string] The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported. The provider will ignore downgrades of patch level.
     * 
     */
    public Optional<Output<String>> k8sVersion() {
        return Optional.ofNullable(this.k8sVersion);
    }

    /**
     * [string] This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have a data center at that location. This property is not adjustable.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return [string] This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have a data center at that location. This property is not adjustable.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * A maintenance window comprise of a day of the week and a time for maintenance to be allowed
     * 
     */
    @Import(name="maintenanceWindow")
    private @Nullable Output<ClusterMaintenanceWindowArgs> maintenanceWindow;

    /**
     * @return A maintenance window comprise of a day of the week and a time for maintenance to be allowed
     * 
     */
    public Optional<Output<ClusterMaintenanceWindowArgs>> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }

    /**
     * [string] The name of the Kubernetes Cluster.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return [string] The name of the Kubernetes Cluster.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * [string] The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the same location as the cluster&#39;s location. This attribute is mandatory if the cluster is private.
     * 
     */
    @Import(name="natGatewayIp")
    private @Nullable Output<String> natGatewayIp;

    /**
     * @return [string] The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the same location as the cluster&#39;s location. This attribute is mandatory if the cluster is private.
     * 
     */
    public Optional<Output<String>> natGatewayIp() {
        return Optional.ofNullable(this.natGatewayIp);
    }

    /**
     * [string] The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid CIDR notation for an IPv4 network prefix of 16 bits length.
     * 
     */
    @Import(name="nodeSubnet")
    private @Nullable Output<String> nodeSubnet;

    /**
     * @return [string] The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid CIDR notation for an IPv4 network prefix of 16 bits length.
     * 
     */
    public Optional<Output<String>> nodeSubnet() {
        return Optional.ofNullable(this.nodeSubnet);
    }

    /**
     * [boolean] Indicates if the cluster is public or private. This attribute is immutable.
     * 
     */
    @Import(name="public")
    private @Nullable Output<Boolean> public_;

    /**
     * @return [boolean] Indicates if the cluster is public or private. This attribute is immutable.
     * 
     */
    public Optional<Output<Boolean>> public_() {
        return Optional.ofNullable(this.public_);
    }

    /**
     * [list] List of IONOS Object Storage buckets configured for K8s usage. For now it contains only an IONOS Object Storage bucket used to store K8s API audit logs.
     * 
     */
    @Import(name="s3Buckets")
    private @Nullable Output<List<ClusterS3BucketArgs>> s3Buckets;

    /**
     * @return [list] List of IONOS Object Storage buckets configured for K8s usage. For now it contains only an IONOS Object Storage bucket used to store K8s API audit logs.
     * 
     */
    public Optional<Output<List<ClusterS3BucketArgs>>> s3Buckets() {
        return Optional.ofNullable(this.s3Buckets);
    }

    /**
     * [list] List of versions that may be used for node pools under this cluster
     * 
     */
    @Import(name="viableNodePoolVersions")
    private @Nullable Output<List<String>> viableNodePoolVersions;

    /**
     * @return [list] List of versions that may be used for node pools under this cluster
     * 
     */
    public Optional<Output<List<String>>> viableNodePoolVersions() {
        return Optional.ofNullable(this.viableNodePoolVersions);
    }

    private ClusterState() {}

    private ClusterState(ClusterState $) {
        this.allowReplace = $.allowReplace;
        this.apiSubnetAllowLists = $.apiSubnetAllowLists;
        this.k8sVersion = $.k8sVersion;
        this.location = $.location;
        this.maintenanceWindow = $.maintenanceWindow;
        this.name = $.name;
        this.natGatewayIp = $.natGatewayIp;
        this.nodeSubnet = $.nodeSubnet;
        this.public_ = $.public_;
        this.s3Buckets = $.s3Buckets;
        this.viableNodePoolVersions = $.viableNodePoolVersions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterState $;

        public Builder() {
            $ = new ClusterState();
        }

        public Builder(ClusterState defaults) {
            $ = new ClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowReplace [bool] When set to true, allows the update of immutable fields by first destroying and then re-creating the cluster.
         * 
         * ⚠️ **_Warning: `allow_replace` - lets you update immutable fields, but it first destroys and then re-creates the cluster in order to do it. Set the field to true only if you know what you are doing._**
         * 
         * @return builder
         * 
         */
        public Builder allowReplace(@Nullable Output<Boolean> allowReplace) {
            $.allowReplace = allowReplace;
            return this;
        }

        /**
         * @param allowReplace [bool] When set to true, allows the update of immutable fields by first destroying and then re-creating the cluster.
         * 
         * ⚠️ **_Warning: `allow_replace` - lets you update immutable fields, but it first destroys and then re-creates the cluster in order to do it. Set the field to true only if you know what you are doing._**
         * 
         * @return builder
         * 
         */
        public Builder allowReplace(Boolean allowReplace) {
            return allowReplace(Output.of(allowReplace));
        }

        /**
         * @param apiSubnetAllowLists [list] Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.
         * 
         * @return builder
         * 
         */
        public Builder apiSubnetAllowLists(@Nullable Output<List<String>> apiSubnetAllowLists) {
            $.apiSubnetAllowLists = apiSubnetAllowLists;
            return this;
        }

        /**
         * @param apiSubnetAllowLists [list] Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.
         * 
         * @return builder
         * 
         */
        public Builder apiSubnetAllowLists(List<String> apiSubnetAllowLists) {
            return apiSubnetAllowLists(Output.of(apiSubnetAllowLists));
        }

        /**
         * @param apiSubnetAllowLists [list] Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.
         * 
         * @return builder
         * 
         */
        public Builder apiSubnetAllowLists(String... apiSubnetAllowLists) {
            return apiSubnetAllowLists(List.of(apiSubnetAllowLists));
        }

        /**
         * @param k8sVersion [string] The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported. The provider will ignore downgrades of patch level.
         * 
         * @return builder
         * 
         */
        public Builder k8sVersion(@Nullable Output<String> k8sVersion) {
            $.k8sVersion = k8sVersion;
            return this;
        }

        /**
         * @param k8sVersion [string] The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported. The provider will ignore downgrades of patch level.
         * 
         * @return builder
         * 
         */
        public Builder k8sVersion(String k8sVersion) {
            return k8sVersion(Output.of(k8sVersion));
        }

        /**
         * @param location [string] This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have a data center at that location. This property is not adjustable.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location [string] This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have a data center at that location. This property is not adjustable.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param maintenanceWindow A maintenance window comprise of a day of the week and a time for maintenance to be allowed
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(@Nullable Output<ClusterMaintenanceWindowArgs> maintenanceWindow) {
            $.maintenanceWindow = maintenanceWindow;
            return this;
        }

        /**
         * @param maintenanceWindow A maintenance window comprise of a day of the week and a time for maintenance to be allowed
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(ClusterMaintenanceWindowArgs maintenanceWindow) {
            return maintenanceWindow(Output.of(maintenanceWindow));
        }

        /**
         * @param name [string] The name of the Kubernetes Cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name [string] The name of the Kubernetes Cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param natGatewayIp [string] The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the same location as the cluster&#39;s location. This attribute is mandatory if the cluster is private.
         * 
         * @return builder
         * 
         */
        public Builder natGatewayIp(@Nullable Output<String> natGatewayIp) {
            $.natGatewayIp = natGatewayIp;
            return this;
        }

        /**
         * @param natGatewayIp [string] The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the same location as the cluster&#39;s location. This attribute is mandatory if the cluster is private.
         * 
         * @return builder
         * 
         */
        public Builder natGatewayIp(String natGatewayIp) {
            return natGatewayIp(Output.of(natGatewayIp));
        }

        /**
         * @param nodeSubnet [string] The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid CIDR notation for an IPv4 network prefix of 16 bits length.
         * 
         * @return builder
         * 
         */
        public Builder nodeSubnet(@Nullable Output<String> nodeSubnet) {
            $.nodeSubnet = nodeSubnet;
            return this;
        }

        /**
         * @param nodeSubnet [string] The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid CIDR notation for an IPv4 network prefix of 16 bits length.
         * 
         * @return builder
         * 
         */
        public Builder nodeSubnet(String nodeSubnet) {
            return nodeSubnet(Output.of(nodeSubnet));
        }

        /**
         * @param public_ [boolean] Indicates if the cluster is public or private. This attribute is immutable.
         * 
         * @return builder
         * 
         */
        public Builder public_(@Nullable Output<Boolean> public_) {
            $.public_ = public_;
            return this;
        }

        /**
         * @param public_ [boolean] Indicates if the cluster is public or private. This attribute is immutable.
         * 
         * @return builder
         * 
         */
        public Builder public_(Boolean public_) {
            return public_(Output.of(public_));
        }

        /**
         * @param s3Buckets [list] List of IONOS Object Storage buckets configured for K8s usage. For now it contains only an IONOS Object Storage bucket used to store K8s API audit logs.
         * 
         * @return builder
         * 
         */
        public Builder s3Buckets(@Nullable Output<List<ClusterS3BucketArgs>> s3Buckets) {
            $.s3Buckets = s3Buckets;
            return this;
        }

        /**
         * @param s3Buckets [list] List of IONOS Object Storage buckets configured for K8s usage. For now it contains only an IONOS Object Storage bucket used to store K8s API audit logs.
         * 
         * @return builder
         * 
         */
        public Builder s3Buckets(List<ClusterS3BucketArgs> s3Buckets) {
            return s3Buckets(Output.of(s3Buckets));
        }

        /**
         * @param s3Buckets [list] List of IONOS Object Storage buckets configured for K8s usage. For now it contains only an IONOS Object Storage bucket used to store K8s API audit logs.
         * 
         * @return builder
         * 
         */
        public Builder s3Buckets(ClusterS3BucketArgs... s3Buckets) {
            return s3Buckets(List.of(s3Buckets));
        }

        /**
         * @param viableNodePoolVersions [list] List of versions that may be used for node pools under this cluster
         * 
         * @return builder
         * 
         */
        public Builder viableNodePoolVersions(@Nullable Output<List<String>> viableNodePoolVersions) {
            $.viableNodePoolVersions = viableNodePoolVersions;
            return this;
        }

        /**
         * @param viableNodePoolVersions [list] List of versions that may be used for node pools under this cluster
         * 
         * @return builder
         * 
         */
        public Builder viableNodePoolVersions(List<String> viableNodePoolVersions) {
            return viableNodePoolVersions(Output.of(viableNodePoolVersions));
        }

        /**
         * @param viableNodePoolVersions [list] List of versions that may be used for node pools under this cluster
         * 
         * @return builder
         * 
         */
        public Builder viableNodePoolVersions(String... viableNodePoolVersions) {
            return viableNodePoolVersions(List.of(viableNodePoolVersions));
        }

        public ClusterState build() {
            return $;
        }
    }

}
