// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.dbaas;

import com.ionoscloud.pulumi.ionoscloud.Utilities;
import com.ionoscloud.pulumi.ionoscloud.dbaas.PSQLClusterArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.PSQLClusterState;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.PSQLClusterConnectionPooler;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.PSQLClusterConnections;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.PSQLClusterCredentials;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.PSQLClusterFromBackup;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.PSQLClusterMaintenanceWindow;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a **DbaaS PgSql Cluster**.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.compute.Lan;
 * import com.pulumi.ionoscloud.compute.LanArgs;
 * import com.pulumi.ionoscloud.dbaas.PSQLCluster;
 * import com.pulumi.ionoscloud.dbaas.PSQLClusterArgs;
 * import com.pulumi.ionoscloud.dbaas.inputs.PSQLClusterConnectionPoolerArgs;
 * import com.pulumi.ionoscloud.dbaas.inputs.PSQLClusterConnectionsArgs;
 * import com.pulumi.ionoscloud.dbaas.inputs.PSQLClusterMaintenanceWindowArgs;
 * import com.pulumi.ionoscloud.dbaas.inputs.PSQLClusterCredentialsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Basic example
 *         var example = new Datacenter("example", DatacenterArgs.builder()
 *             .name("example")
 *             .location("de/txl")
 *             .description("Datacenter for testing dbaas cluster")
 *             .build());
 * 
 *         var exampleLan = new Lan("exampleLan", LanArgs.builder()
 *             .datacenterId(example.id())
 *             .public_(false)
 *             .name("example")
 *             .build());
 * 
 *         var examplePSQLCluster = new PSQLCluster("examplePSQLCluster", PSQLClusterArgs.builder()
 *             .postgresVersion("12")
 *             .instances(1)
 *             .cores(4)
 *             .ram(2048)
 *             .storageSize(2048)
 *             .storageType("HDD")
 *             .connectionPooler(PSQLClusterConnectionPoolerArgs.builder()
 *                 .enabled(true)
 *                 .poolMode("session")
 *                 .build())
 *             .connections(PSQLClusterConnectionsArgs.builder()
 *                 .datacenterId(example.id())
 *                 .lanId(exampleLan.id())
 *                 .cidr("192.168.100.1/24")
 *                 .build())
 *             .location(example.location())
 *             .displayName("PostgreSQL_cluster")
 *             .maintenanceWindow(PSQLClusterMaintenanceWindowArgs.builder()
 *                 .dayOfTheWeek("Sunday")
 *                 .time("09:00:00")
 *                 .build())
 *             .credentials(PSQLClusterCredentialsArgs.builder()
 *                 .username("username")
 *                 .password("strongPassword")
 *                 .build())
 *             .synchronizationMode("ASYNCHRONOUS")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.compute.Lan;
 * import com.pulumi.ionoscloud.compute.LanArgs;
 * import com.pulumi.ionoscloud.compute.Server;
 * import com.pulumi.ionoscloud.compute.ServerArgs;
 * import com.pulumi.ionoscloud.compute.inputs.ServerVolumeArgs;
 * import com.pulumi.ionoscloud.compute.inputs.ServerNicArgs;
 * import com.pulumi.random.password;
 * import com.pulumi.random.PasswordArgs;
 * import com.pulumi.ionoscloud.dbaas.PSQLCluster;
 * import com.pulumi.ionoscloud.dbaas.PSQLClusterArgs;
 * import com.pulumi.ionoscloud.dbaas.inputs.PSQLClusterConnectionPoolerArgs;
 * import com.pulumi.ionoscloud.dbaas.inputs.PSQLClusterConnectionsArgs;
 * import com.pulumi.ionoscloud.dbaas.inputs.PSQLClusterMaintenanceWindowArgs;
 * import com.pulumi.ionoscloud.dbaas.inputs.PSQLClusterCredentialsArgs;
 * import com.pulumi.ionoscloud.dbaas.inputs.PSQLClusterFromBackupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Complete example
 *         var example = new Datacenter("example", DatacenterArgs.builder()
 *             .name("example")
 *             .location("de/txl")
 *             .description("Datacenter for testing dbaas cluster")
 *             .build());
 * 
 *         var exampleLan = new Lan("exampleLan", LanArgs.builder()
 *             .datacenterId(example.id())
 *             .public_(false)
 *             .name("example")
 *             .build());
 * 
 *         var exampleServer = new Server("exampleServer", ServerArgs.builder()
 *             .name("example")
 *             .datacenterId(example.id())
 *             .cores(2)
 *             .ram(2048)
 *             .availabilityZone("ZONE_1")
 *             .cpuFamily("INTEL_SKYLAKE")
 *             .imageName("rockylinux-8-GenericCloud-20230518")
 *             .imagePassword("password")
 *             .volume(ServerVolumeArgs.builder()
 *                 .name("example")
 *                 .size(6)
 *                 .diskType("SSD Standard")
 *                 .build())
 *             .nic(ServerNicArgs.builder()
 *                 .lan(exampleLan.id())
 *                 .name("example")
 *                 .dhcp(true)
 *                 .build())
 *             .build());
 * 
 *         var clusterPassword = new Password("clusterPassword", PasswordArgs.builder()
 *             .length(16)
 *             .special(true)
 *             .overrideSpecial("!#$%&*()-_=+[]{}<>:?")
 *             .build());
 * 
 *         var examplePSQLCluster = new PSQLCluster("examplePSQLCluster", PSQLClusterArgs.builder()
 *             .postgresVersion("12")
 *             .instances(1)
 *             .cores(4)
 *             .ram(2048)
 *             .storageSize(2048)
 *             .storageType("HDD")
 *             .connectionPooler(PSQLClusterConnectionPoolerArgs.builder()
 *                 .enabled(true)
 *                 .poolMode("session")
 *                 .build())
 *             .connections(PSQLClusterConnectionsArgs.builder()
 *                 .datacenterId(example.id())
 *                 .lanId(exampleLan.id())
 *                 .cidr("database_ip_cidr_from_nic")
 *                 .build())
 *             .location(example.location())
 *             .displayName("PostgreSQL_cluster")
 *             .maintenanceWindow(PSQLClusterMaintenanceWindowArgs.builder()
 *                 .dayOfTheWeek("Sunday")
 *                 .time("09:00:00")
 *                 .build())
 *             .credentials(PSQLClusterCredentialsArgs.builder()
 *                 .username("username")
 *                 .password(clusterPassword.result())
 *                 .build())
 *             .synchronizationMode("ASYNCHRONOUS")
 *             .fromBackup(PSQLClusterFromBackupArgs.builder()
 *                 .backupId("backup_uuid")
 *                 .recoveryTargetTime("2021-12-06T13:54:08Z")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Resource DbaaS Postgres Cluster can be imported using the `cluster_id`, e.g.
 * 
 * ```sh
 * $ pulumi import ionoscloud:dbaas/pSQLCluster:PSQLCluster mycluser cluster uuid
 * ```
 * 
 */
@ResourceType(type="ionoscloud:dbaas/pSQLCluster:PSQLCluster")
public class PSQLCluster extends com.pulumi.resources.CustomResource {
    /**
     * (Computed)[string] The IONOS Object Storage location where the backups will be stored. Possible values are: `de`, `eu-south-2`, `eu-central-2`. This attribute is immutable (disallowed in update requests).
     * 
     */
    @Export(name="backupLocation", refs={String.class}, tree="[0]")
    private Output<String> backupLocation;

    /**
     * @return (Computed)[string] The IONOS Object Storage location where the backups will be stored. Possible values are: `de`, `eu-south-2`, `eu-central-2`. This attribute is immutable (disallowed in update requests).
     * 
     */
    public Output<String> backupLocation() {
        return this.backupLocation;
    }
    /**
     * [object]
     * 
     */
    @Export(name="connectionPooler", refs={PSQLClusterConnectionPooler.class}, tree="[0]")
    private Output<PSQLClusterConnectionPooler> connectionPooler;

    /**
     * @return [object]
     * 
     */
    public Output<PSQLClusterConnectionPooler> connectionPooler() {
        return this.connectionPooler;
    }
    /**
     * [string] Details about the network connection for your cluster.
     * 
     */
    @Export(name="connections", refs={PSQLClusterConnections.class}, tree="[0]")
    private Output</* @Nullable */ PSQLClusterConnections> connections;

    /**
     * @return [string] Details about the network connection for your cluster.
     * 
     */
    public Output<Optional<PSQLClusterConnections>> connections() {
        return Codegen.optional(this.connections);
    }
    /**
     * [int] The number of CPU cores per replica.
     * 
     */
    @Export(name="cores", refs={Integer.class}, tree="[0]")
    private Output<Integer> cores;

    /**
     * @return [int] The number of CPU cores per replica.
     * 
     */
    public Output<Integer> cores() {
        return this.cores;
    }
    /**
     * [string] Credentials for the database user to be created. This attribute is immutable(disallowed in update requests).
     * 
     */
    @Export(name="credentials", refs={PSQLClusterCredentials.class}, tree="[0]")
    private Output<PSQLClusterCredentials> credentials;

    /**
     * @return [string] Credentials for the database user to be created. This attribute is immutable(disallowed in update requests).
     * 
     */
    public Output<PSQLClusterCredentials> credentials() {
        return this.credentials;
    }
    /**
     * [string] The friendly name of your cluster.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return [string] The friendly name of your cluster.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * [string] The DNS name pointing to your cluster.
     * 
     */
    @Export(name="dnsName", refs={String.class}, tree="[0]")
    private Output<String> dnsName;

    /**
     * @return [string] The DNS name pointing to your cluster.
     * 
     */
    public Output<String> dnsName() {
        return this.dnsName;
    }
    /**
     * [string] The unique ID of the backup you want to restore. This attribute is immutable(disallowed in update requests).
     * 
     */
    @Export(name="fromBackup", refs={PSQLClusterFromBackup.class}, tree="[0]")
    private Output</* @Nullable */ PSQLClusterFromBackup> fromBackup;

    /**
     * @return [string] The unique ID of the backup you want to restore. This attribute is immutable(disallowed in update requests).
     * 
     */
    public Output<Optional<PSQLClusterFromBackup>> fromBackup() {
        return Codegen.optional(this.fromBackup);
    }
    /**
     * [int] The total number of instances in the cluster (one master and n-1 standbys)
     * 
     */
    @Export(name="instances", refs={Integer.class}, tree="[0]")
    private Output<Integer> instances;

    /**
     * @return [int] The total number of instances in the cluster (one master and n-1 standbys)
     * 
     */
    public Output<Integer> instances() {
        return this.instances;
    }
    /**
     * [string] The physical location where the cluster will be created. This will be where all of your instances live. Property cannot be modified after datacenter creation. Possible values are: `de/fra`, `de/txl`, `gb/lhr`, `es/vit`, `us/ewr`, `us/las`. This attribute is immutable(disallowed in update requests).
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return [string] The physical location where the cluster will be created. This will be where all of your instances live. Property cannot be modified after datacenter creation. Possible values are: `de/fra`, `de/txl`, `gb/lhr`, `es/vit`, `us/ewr`, `us/las`. This attribute is immutable(disallowed in update requests).
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * (Computed) A weekly 4 hour-long window, during which maintenance might occur
     * 
     */
    @Export(name="maintenanceWindow", refs={PSQLClusterMaintenanceWindow.class}, tree="[0]")
    private Output<PSQLClusterMaintenanceWindow> maintenanceWindow;

    /**
     * @return (Computed) A weekly 4 hour-long window, during which maintenance might occur
     * 
     */
    public Output<PSQLClusterMaintenanceWindow> maintenanceWindow() {
        return this.maintenanceWindow;
    }
    /**
     * [string] The PostgreSQL version of your cluster.
     * 
     */
    @Export(name="postgresVersion", refs={String.class}, tree="[0]")
    private Output<String> postgresVersion;

    /**
     * @return [string] The PostgreSQL version of your cluster.
     * 
     */
    public Output<String> postgresVersion() {
        return this.postgresVersion;
    }
    /**
     * [int] The amount of memory per instance in megabytes. Has to be a multiple of 1024.
     * 
     */
    @Export(name="ram", refs={Integer.class}, tree="[0]")
    private Output<Integer> ram;

    /**
     * @return [int] The amount of memory per instance in megabytes. Has to be a multiple of 1024.
     * 
     */
    public Output<Integer> ram() {
        return this.ram;
    }
    /**
     * [int] The amount of storage per instance in MB. Has to be a multiple of 2048.
     * 
     */
    @Export(name="storageSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> storageSize;

    /**
     * @return [int] The amount of storage per instance in MB. Has to be a multiple of 2048.
     * 
     */
    public Output<Integer> storageSize() {
        return this.storageSize;
    }
    /**
     * [string] SSD, SSD Standard, SSD Premium, or HDD. Value &#34;SSD&#34; is deprecated, use the equivalent &#34;SSD Premium&#34; instead. This attribute is immutable(disallowed in update requests).
     * 
     */
    @Export(name="storageType", refs={String.class}, tree="[0]")
    private Output<String> storageType;

    /**
     * @return [string] SSD, SSD Standard, SSD Premium, or HDD. Value &#34;SSD&#34; is deprecated, use the equivalent &#34;SSD Premium&#34; instead. This attribute is immutable(disallowed in update requests).
     * 
     */
    public Output<String> storageType() {
        return this.storageType;
    }
    /**
     * [string] Represents different modes of replication. Can have one of the following values: ASYNCHRONOUS, SYNCHRONOUS, STRICTLY_SYNCHRONOUS. This attribute is immutable(disallowed in update requests).
     * 
     */
    @Export(name="synchronizationMode", refs={String.class}, tree="[0]")
    private Output<String> synchronizationMode;

    /**
     * @return [string] Represents different modes of replication. Can have one of the following values: ASYNCHRONOUS, SYNCHRONOUS, STRICTLY_SYNCHRONOUS. This attribute is immutable(disallowed in update requests).
     * 
     */
    public Output<String> synchronizationMode() {
        return this.synchronizationMode;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PSQLCluster(java.lang.String name) {
        this(name, PSQLClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PSQLCluster(java.lang.String name, PSQLClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PSQLCluster(java.lang.String name, PSQLClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:dbaas/pSQLCluster:PSQLCluster", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private PSQLCluster(java.lang.String name, Output<java.lang.String> id, @Nullable PSQLClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:dbaas/pSQLCluster:PSQLCluster", name, state, makeResourceOptions(options, id), false);
    }

    private static PSQLClusterArgs makeArgs(PSQLClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PSQLClusterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PSQLCluster get(java.lang.String name, Output<java.lang.String> id, @Nullable PSQLClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PSQLCluster(name, id, state, options);
    }
}
