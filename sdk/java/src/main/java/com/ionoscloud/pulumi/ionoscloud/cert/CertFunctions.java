// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.cert;

import com.ionoscloud.pulumi.ionoscloud.Utilities;
import com.ionoscloud.pulumi.ionoscloud.cert.inputs.GetAutoCertificateArgs;
import com.ionoscloud.pulumi.ionoscloud.cert.inputs.GetAutoCertificatePlainArgs;
import com.ionoscloud.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
import com.ionoscloud.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
import com.ionoscloud.pulumi.ionoscloud.cert.inputs.GetCertificatePlainArgs;
import com.ionoscloud.pulumi.ionoscloud.cert.outputs.GetAutoCertificateProviderResult;
import com.ionoscloud.pulumi.ionoscloud.cert.outputs.GetAutoCertificateResult;
import com.ionoscloud.pulumi.ionoscloud.cert.outputs.GetCertificateResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class CertFunctions {
    /**
     * The **CM AutoCertificate data source** can be used to search for and return an existing auto-certificate.
     * You can provide a string for either id or name parameters which will be compared with provisioned auto-certificates.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificate(GetAutoCertificateArgs.builder()
     *             .id("auto_certificate_id")
     *             .location("auto_certificate_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificate(GetAutoCertificateArgs.builder()
     *             .name("AutoCertificate Name Example")
     *             .location("auto_certificate_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoCertificateResult> getAutoCertificate(GetAutoCertificateArgs args) {
        return getAutoCertificate(args, InvokeOptions.Empty);
    }
    /**
     * The **CM AutoCertificate data source** can be used to search for and return an existing auto-certificate.
     * You can provide a string for either id or name parameters which will be compared with provisioned auto-certificates.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificate(GetAutoCertificateArgs.builder()
     *             .id("auto_certificate_id")
     *             .location("auto_certificate_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificate(GetAutoCertificateArgs.builder()
     *             .name("AutoCertificate Name Example")
     *             .location("auto_certificate_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoCertificateResult> getAutoCertificatePlain(GetAutoCertificatePlainArgs args) {
        return getAutoCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * The **CM AutoCertificate data source** can be used to search for and return an existing auto-certificate.
     * You can provide a string for either id or name parameters which will be compared with provisioned auto-certificates.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificate(GetAutoCertificateArgs.builder()
     *             .id("auto_certificate_id")
     *             .location("auto_certificate_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificate(GetAutoCertificateArgs.builder()
     *             .name("AutoCertificate Name Example")
     *             .location("auto_certificate_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoCertificateResult> getAutoCertificate(GetAutoCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:cert/getAutoCertificate:getAutoCertificate", TypeShape.of(GetAutoCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **CM AutoCertificate data source** can be used to search for and return an existing auto-certificate.
     * You can provide a string for either id or name parameters which will be compared with provisioned auto-certificates.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificate(GetAutoCertificateArgs.builder()
     *             .id("auto_certificate_id")
     *             .location("auto_certificate_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificate(GetAutoCertificateArgs.builder()
     *             .name("AutoCertificate Name Example")
     *             .location("auto_certificate_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoCertificateResult> getAutoCertificate(GetAutoCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:cert/getAutoCertificate:getAutoCertificate", TypeShape.of(GetAutoCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **CM AutoCertificate data source** can be used to search for and return an existing auto-certificate.
     * You can provide a string for either id or name parameters which will be compared with provisioned auto-certificates.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificate(GetAutoCertificateArgs.builder()
     *             .id("auto_certificate_id")
     *             .location("auto_certificate_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificate(GetAutoCertificateArgs.builder()
     *             .name("AutoCertificate Name Example")
     *             .location("auto_certificate_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoCertificateResult> getAutoCertificatePlain(GetAutoCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:cert/getAutoCertificate:getAutoCertificate", TypeShape.of(GetAutoCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **CM Provider data source** can be used to search for and return an existing certificate manager provider.
     * You can provide a string for either id or name parameters which will be compared with provisioned providers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificateProvider(GetAutoCertificateProviderArgs.builder()
     *             .id("provider_id")
     *             .location("provider_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificateProvider(GetAutoCertificateProviderArgs.builder()
     *             .name("Provider Name Example")
     *             .location("provider_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoCertificateProviderResult> getAutoCertificateProvider() {
        return getAutoCertificateProvider(GetAutoCertificateProviderArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **CM Provider data source** can be used to search for and return an existing certificate manager provider.
     * You can provide a string for either id or name parameters which will be compared with provisioned providers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificateProvider(GetAutoCertificateProviderArgs.builder()
     *             .id("provider_id")
     *             .location("provider_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificateProvider(GetAutoCertificateProviderArgs.builder()
     *             .name("Provider Name Example")
     *             .location("provider_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoCertificateProviderResult> getAutoCertificateProviderPlain() {
        return getAutoCertificateProviderPlain(GetAutoCertificateProviderPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **CM Provider data source** can be used to search for and return an existing certificate manager provider.
     * You can provide a string for either id or name parameters which will be compared with provisioned providers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificateProvider(GetAutoCertificateProviderArgs.builder()
     *             .id("provider_id")
     *             .location("provider_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificateProvider(GetAutoCertificateProviderArgs.builder()
     *             .name("Provider Name Example")
     *             .location("provider_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoCertificateProviderResult> getAutoCertificateProvider(GetAutoCertificateProviderArgs args) {
        return getAutoCertificateProvider(args, InvokeOptions.Empty);
    }
    /**
     * The **CM Provider data source** can be used to search for and return an existing certificate manager provider.
     * You can provide a string for either id or name parameters which will be compared with provisioned providers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificateProvider(GetAutoCertificateProviderArgs.builder()
     *             .id("provider_id")
     *             .location("provider_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificateProvider(GetAutoCertificateProviderArgs.builder()
     *             .name("Provider Name Example")
     *             .location("provider_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoCertificateProviderResult> getAutoCertificateProviderPlain(GetAutoCertificateProviderPlainArgs args) {
        return getAutoCertificateProviderPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **CM Provider data source** can be used to search for and return an existing certificate manager provider.
     * You can provide a string for either id or name parameters which will be compared with provisioned providers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificateProvider(GetAutoCertificateProviderArgs.builder()
     *             .id("provider_id")
     *             .location("provider_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificateProvider(GetAutoCertificateProviderArgs.builder()
     *             .name("Provider Name Example")
     *             .location("provider_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoCertificateProviderResult> getAutoCertificateProvider(GetAutoCertificateProviderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:cert/getAutoCertificateProvider:getAutoCertificateProvider", TypeShape.of(GetAutoCertificateProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **CM Provider data source** can be used to search for and return an existing certificate manager provider.
     * You can provide a string for either id or name parameters which will be compared with provisioned providers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificateProvider(GetAutoCertificateProviderArgs.builder()
     *             .id("provider_id")
     *             .location("provider_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificateProvider(GetAutoCertificateProviderArgs.builder()
     *             .name("Provider Name Example")
     *             .location("provider_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoCertificateProviderResult> getAutoCertificateProvider(GetAutoCertificateProviderArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:cert/getAutoCertificateProvider:getAutoCertificateProvider", TypeShape.of(GetAutoCertificateProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **CM Provider data source** can be used to search for and return an existing certificate manager provider.
     * You can provide a string for either id or name parameters which will be compared with provisioned providers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificateProvider(GetAutoCertificateProviderArgs.builder()
     *             .id("provider_id")
     *             .location("provider_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetAutoCertificateProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getAutoCertificateProvider(GetAutoCertificateProviderArgs.builder()
     *             .name("Provider Name Example")
     *             .location("provider_location")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoCertificateProviderResult> getAutoCertificateProviderPlain(GetAutoCertificateProviderPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:cert/getAutoCertificateProvider:getAutoCertificateProvider", TypeShape.of(GetAutoCertificateProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Certificate data source** can be used to search for and return an existing certificate.
     * You can provide a string for either id or name parameters which will be compared with provisioned certificates.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getCertificate(GetCertificateArgs.builder()
     *             .id("certificate_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("Certificate Name Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateResult> getCertificate() {
        return getCertificate(GetCertificateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Certificate data source** can be used to search for and return an existing certificate.
     * You can provide a string for either id or name parameters which will be compared with provisioned certificates.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getCertificate(GetCertificateArgs.builder()
     *             .id("certificate_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("Certificate Name Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain() {
        return getCertificatePlain(GetCertificatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Certificate data source** can be used to search for and return an existing certificate.
     * You can provide a string for either id or name parameters which will be compared with provisioned certificates.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getCertificate(GetCertificateArgs.builder()
     *             .id("certificate_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("Certificate Name Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args) {
        return getCertificate(args, InvokeOptions.Empty);
    }
    /**
     * The **Certificate data source** can be used to search for and return an existing certificate.
     * You can provide a string for either id or name parameters which will be compared with provisioned certificates.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getCertificate(GetCertificateArgs.builder()
     *             .id("certificate_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("Certificate Name Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args) {
        return getCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Certificate data source** can be used to search for and return an existing certificate.
     * You can provide a string for either id or name parameters which will be compared with provisioned certificates.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getCertificate(GetCertificateArgs.builder()
     *             .id("certificate_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("Certificate Name Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:cert/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Certificate data source** can be used to search for and return an existing certificate.
     * You can provide a string for either id or name parameters which will be compared with provisioned certificates.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getCertificate(GetCertificateArgs.builder()
     *             .id("certificate_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("Certificate Name Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:cert/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Certificate data source** can be used to search for and return an existing certificate.
     * You can provide a string for either id or name parameters which will be compared with provisioned certificates.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getCertificate(GetCertificateArgs.builder()
     *             .id("certificate_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.cert.CertFunctions;
     * import com.pulumi.ionoscloud.cert.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = CertFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("Certificate Name Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:cert/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
}
