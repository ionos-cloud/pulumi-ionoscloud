// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.vpn.outputs;

import com.ionoscloud.pulumi.ionoscloud.vpn.outputs.GetIpsecGatewayConnection;
import com.ionoscloud.pulumi.ionoscloud.vpn.outputs.GetIpsecGatewayMaintenanceWindow;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIpsecGatewayResult {
    /**
     * @return The network connection for your gateway.
     * 
     */
    private List<GetIpsecGatewayConnection> connections;
    /**
     * @return (Optional)[string] The human-readable description of the IPSec Gateway.
     * 
     */
    private String description;
    /**
     * @return Public IP address to be assigned to the gateway.
     * 
     */
    private String gatewayIp;
    /**
     * @return The unique ID of the IPSec Gateway.
     * 
     */
    private String id;
    private @Nullable String location;
    /**
     * @return A weekly 4 hour-long window, during which maintenance might occur.
     * 
     */
    private List<GetIpsecGatewayMaintenanceWindow> maintenanceWindows;
    /**
     * @return The name of the IPSec Gateway.
     * 
     */
    private String name;
    /**
     * @return Gateway performance options.
     * 
     */
    private String tier;
    /**
     * @return The IKE version that is permitted for the VPN tunnels.
     * 
     */
    private String version;

    private GetIpsecGatewayResult() {}
    /**
     * @return The network connection for your gateway.
     * 
     */
    public List<GetIpsecGatewayConnection> connections() {
        return this.connections;
    }
    /**
     * @return (Optional)[string] The human-readable description of the IPSec Gateway.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Public IP address to be assigned to the gateway.
     * 
     */
    public String gatewayIp() {
        return this.gatewayIp;
    }
    /**
     * @return The unique ID of the IPSec Gateway.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return A weekly 4 hour-long window, during which maintenance might occur.
     * 
     */
    public List<GetIpsecGatewayMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    /**
     * @return The name of the IPSec Gateway.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Gateway performance options.
     * 
     */
    public String tier() {
        return this.tier;
    }
    /**
     * @return The IKE version that is permitted for the VPN tunnels.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpsecGatewayResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetIpsecGatewayConnection> connections;
        private String description;
        private String gatewayIp;
        private String id;
        private @Nullable String location;
        private List<GetIpsecGatewayMaintenanceWindow> maintenanceWindows;
        private String name;
        private String tier;
        private String version;
        public Builder() {}
        public Builder(GetIpsecGatewayResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connections = defaults.connections;
    	      this.description = defaults.description;
    	      this.gatewayIp = defaults.gatewayIp;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.name = defaults.name;
    	      this.tier = defaults.tier;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder connections(List<GetIpsecGatewayConnection> connections) {
            if (connections == null) {
              throw new MissingRequiredPropertyException("GetIpsecGatewayResult", "connections");
            }
            this.connections = connections;
            return this;
        }
        public Builder connections(GetIpsecGatewayConnection... connections) {
            return connections(List.of(connections));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetIpsecGatewayResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayIp(String gatewayIp) {
            if (gatewayIp == null) {
              throw new MissingRequiredPropertyException("GetIpsecGatewayResult", "gatewayIp");
            }
            this.gatewayIp = gatewayIp;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIpsecGatewayResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {

            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceWindows(List<GetIpsecGatewayMaintenanceWindow> maintenanceWindows) {
            if (maintenanceWindows == null) {
              throw new MissingRequiredPropertyException("GetIpsecGatewayResult", "maintenanceWindows");
            }
            this.maintenanceWindows = maintenanceWindows;
            return this;
        }
        public Builder maintenanceWindows(GetIpsecGatewayMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetIpsecGatewayResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder tier(String tier) {
            if (tier == null) {
              throw new MissingRequiredPropertyException("GetIpsecGatewayResult", "tier");
            }
            this.tier = tier;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetIpsecGatewayResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetIpsecGatewayResult build() {
            final var _resultValue = new GetIpsecGatewayResult();
            _resultValue.connections = connections;
            _resultValue.description = description;
            _resultValue.gatewayIp = gatewayIp;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.maintenanceWindows = maintenanceWindows;
            _resultValue.name = name;
            _resultValue.tier = tier;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
