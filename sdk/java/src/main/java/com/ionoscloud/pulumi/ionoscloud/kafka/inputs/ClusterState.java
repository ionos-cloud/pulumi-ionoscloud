// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.kafka.inputs;

import com.ionoscloud.pulumi.ionoscloud.kafka.inputs.ClusterConnectionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterState Empty = new ClusterState();

    /**
     * [list] IP address and port of cluster brokers.
     * 
     * &gt; **⚠ NOTE:** `IONOS_API_URL_KAFKA` can be used to set a custom API URL for the kafka resource. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
     * 
     */
    @Import(name="brokerAddresses")
    private @Nullable Output<List<String>> brokerAddresses;

    /**
     * @return [list] IP address and port of cluster brokers.
     * 
     * &gt; **⚠ NOTE:** `IONOS_API_URL_KAFKA` can be used to set a custom API URL for the kafka resource. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
     * 
     */
    public Optional<Output<List<String>>> brokerAddresses() {
        return Optional.ofNullable(this.brokerAddresses);
    }

    /**
     * Connection information of the Kafka Cluster. Minimum items: 1, maximum items: 1.
     * 
     */
    @Import(name="connections")
    private @Nullable Output<ClusterConnectionsArgs> connections;

    /**
     * @return Connection information of the Kafka Cluster. Minimum items: 1, maximum items: 1.
     * 
     */
    public Optional<Output<ClusterConnectionsArgs>> connections() {
        return Optional.ofNullable(this.connections);
    }

    /**
     * [string] The location of the Kafka Cluster. Possible values: `de/fra`, `de/txl`. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return [string] The location of the Kafka Cluster. Possible values: `de/fra`, `de/txl`. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * [string] Name of the Kafka Cluster.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return [string] Name of the Kafka Cluster.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * [string] Size of the Kafka Cluster. Possible values: `XS`, `S`
     * 
     */
    @Import(name="size")
    private @Nullable Output<String> size;

    /**
     * @return [string] Size of the Kafka Cluster. Possible values: `XS`, `S`
     * 
     */
    public Optional<Output<String>> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * [string] Version of the Kafka Cluster. Possible values: `3.7.0`
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return [string] Version of the Kafka Cluster. Possible values: `3.7.0`
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private ClusterState() {}

    private ClusterState(ClusterState $) {
        this.brokerAddresses = $.brokerAddresses;
        this.connections = $.connections;
        this.location = $.location;
        this.name = $.name;
        this.size = $.size;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterState $;

        public Builder() {
            $ = new ClusterState();
        }

        public Builder(ClusterState defaults) {
            $ = new ClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param brokerAddresses [list] IP address and port of cluster brokers.
         * 
         * &gt; **⚠ NOTE:** `IONOS_API_URL_KAFKA` can be used to set a custom API URL for the kafka resource. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
         * 
         * @return builder
         * 
         */
        public Builder brokerAddresses(@Nullable Output<List<String>> brokerAddresses) {
            $.brokerAddresses = brokerAddresses;
            return this;
        }

        /**
         * @param brokerAddresses [list] IP address and port of cluster brokers.
         * 
         * &gt; **⚠ NOTE:** `IONOS_API_URL_KAFKA` can be used to set a custom API URL for the kafka resource. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
         * 
         * @return builder
         * 
         */
        public Builder brokerAddresses(List<String> brokerAddresses) {
            return brokerAddresses(Output.of(brokerAddresses));
        }

        /**
         * @param brokerAddresses [list] IP address and port of cluster brokers.
         * 
         * &gt; **⚠ NOTE:** `IONOS_API_URL_KAFKA` can be used to set a custom API URL for the kafka resource. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
         * 
         * @return builder
         * 
         */
        public Builder brokerAddresses(String... brokerAddresses) {
            return brokerAddresses(List.of(brokerAddresses));
        }

        /**
         * @param connections Connection information of the Kafka Cluster. Minimum items: 1, maximum items: 1.
         * 
         * @return builder
         * 
         */
        public Builder connections(@Nullable Output<ClusterConnectionsArgs> connections) {
            $.connections = connections;
            return this;
        }

        /**
         * @param connections Connection information of the Kafka Cluster. Minimum items: 1, maximum items: 1.
         * 
         * @return builder
         * 
         */
        public Builder connections(ClusterConnectionsArgs connections) {
            return connections(Output.of(connections));
        }

        /**
         * @param location [string] The location of the Kafka Cluster. Possible values: `de/fra`, `de/txl`. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location [string] The location of the Kafka Cluster. Possible values: `de/fra`, `de/txl`. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name [string] Name of the Kafka Cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name [string] Name of the Kafka Cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param size [string] Size of the Kafka Cluster. Possible values: `XS`, `S`
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Output<String> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size [string] Size of the Kafka Cluster. Possible values: `XS`, `S`
         * 
         * @return builder
         * 
         */
        public Builder size(String size) {
            return size(Output.of(size));
        }

        /**
         * @param version [string] Version of the Kafka Cluster. Possible values: `3.7.0`
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version [string] Version of the Kafka Cluster. Possible values: `3.7.0`
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ClusterState build() {
            return $;
        }
    }

}
