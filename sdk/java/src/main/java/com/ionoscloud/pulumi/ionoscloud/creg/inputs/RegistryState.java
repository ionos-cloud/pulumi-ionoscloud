// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.creg.inputs;

import com.ionoscloud.pulumi.ionoscloud.creg.inputs.RegistryFeaturesArgs;
import com.ionoscloud.pulumi.ionoscloud.creg.inputs.RegistryGarbageCollectionScheduleArgs;
import com.ionoscloud.pulumi.ionoscloud.creg.inputs.RegistryStorageUsageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegistryState extends com.pulumi.resources.ResourceArgs {

    public static final RegistryState Empty = new RegistryState();

    /**
     * [list] The subnet CIDRs that are allowed to connect to the registry.  Specify &#34;a.b.c.d/32&#34; for an individual IP address. __Note__: If this list is empty or not set, there are no restrictions.
     * 
     */
    @Import(name="apiSubnetAllowLists")
    private @Nullable Output<List<String>> apiSubnetAllowLists;

    /**
     * @return [list] The subnet CIDRs that are allowed to connect to the registry.  Specify &#34;a.b.c.d/32&#34; for an individual IP address. __Note__: If this list is empty or not set, there are no restrictions.
     * 
     */
    public Optional<Output<List<String>>> apiSubnetAllowLists() {
        return Optional.ofNullable(this.apiSubnetAllowLists);
    }

    /**
     * [Map]
     * 
     */
    @Import(name="features")
    private @Nullable Output<RegistryFeaturesArgs> features;

    /**
     * @return [Map]
     * 
     */
    public Optional<Output<RegistryFeaturesArgs>> features() {
        return Optional.ofNullable(this.features);
    }

    /**
     * [Map]
     * 
     */
    @Import(name="garbageCollectionSchedule")
    private @Nullable Output<RegistryGarbageCollectionScheduleArgs> garbageCollectionSchedule;

    /**
     * @return [Map]
     * 
     */
    public Optional<Output<RegistryGarbageCollectionScheduleArgs>> garbageCollectionSchedule() {
        return Optional.ofNullable(this.garbageCollectionSchedule);
    }

    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * [string] Immutable, update forces re-creation of the resource.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return [string] Immutable, update forces re-creation of the resource.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the container registry. Immutable, update forces re-creation of the resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the container registry. Immutable, update forces re-creation of the resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="storageUsages")
    private @Nullable Output<List<RegistryStorageUsageArgs>> storageUsages;

    public Optional<Output<List<RegistryStorageUsageArgs>>> storageUsages() {
        return Optional.ofNullable(this.storageUsages);
    }

    private RegistryState() {}

    private RegistryState(RegistryState $) {
        this.apiSubnetAllowLists = $.apiSubnetAllowLists;
        this.features = $.features;
        this.garbageCollectionSchedule = $.garbageCollectionSchedule;
        this.hostname = $.hostname;
        this.location = $.location;
        this.name = $.name;
        this.storageUsages = $.storageUsages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistryState $;

        public Builder() {
            $ = new RegistryState();
        }

        public Builder(RegistryState defaults) {
            $ = new RegistryState(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiSubnetAllowLists [list] The subnet CIDRs that are allowed to connect to the registry.  Specify &#34;a.b.c.d/32&#34; for an individual IP address. __Note__: If this list is empty or not set, there are no restrictions.
         * 
         * @return builder
         * 
         */
        public Builder apiSubnetAllowLists(@Nullable Output<List<String>> apiSubnetAllowLists) {
            $.apiSubnetAllowLists = apiSubnetAllowLists;
            return this;
        }

        /**
         * @param apiSubnetAllowLists [list] The subnet CIDRs that are allowed to connect to the registry.  Specify &#34;a.b.c.d/32&#34; for an individual IP address. __Note__: If this list is empty or not set, there are no restrictions.
         * 
         * @return builder
         * 
         */
        public Builder apiSubnetAllowLists(List<String> apiSubnetAllowLists) {
            return apiSubnetAllowLists(Output.of(apiSubnetAllowLists));
        }

        /**
         * @param apiSubnetAllowLists [list] The subnet CIDRs that are allowed to connect to the registry.  Specify &#34;a.b.c.d/32&#34; for an individual IP address. __Note__: If this list is empty or not set, there are no restrictions.
         * 
         * @return builder
         * 
         */
        public Builder apiSubnetAllowLists(String... apiSubnetAllowLists) {
            return apiSubnetAllowLists(List.of(apiSubnetAllowLists));
        }

        /**
         * @param features [Map]
         * 
         * @return builder
         * 
         */
        public Builder features(@Nullable Output<RegistryFeaturesArgs> features) {
            $.features = features;
            return this;
        }

        /**
         * @param features [Map]
         * 
         * @return builder
         * 
         */
        public Builder features(RegistryFeaturesArgs features) {
            return features(Output.of(features));
        }

        /**
         * @param garbageCollectionSchedule [Map]
         * 
         * @return builder
         * 
         */
        public Builder garbageCollectionSchedule(@Nullable Output<RegistryGarbageCollectionScheduleArgs> garbageCollectionSchedule) {
            $.garbageCollectionSchedule = garbageCollectionSchedule;
            return this;
        }

        /**
         * @param garbageCollectionSchedule [Map]
         * 
         * @return builder
         * 
         */
        public Builder garbageCollectionSchedule(RegistryGarbageCollectionScheduleArgs garbageCollectionSchedule) {
            return garbageCollectionSchedule(Output.of(garbageCollectionSchedule));
        }

        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param location [string] Immutable, update forces re-creation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location [string] Immutable, update forces re-creation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the container registry. Immutable, update forces re-creation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the container registry. Immutable, update forces re-creation of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder storageUsages(@Nullable Output<List<RegistryStorageUsageArgs>> storageUsages) {
            $.storageUsages = storageUsages;
            return this;
        }

        public Builder storageUsages(List<RegistryStorageUsageArgs> storageUsages) {
            return storageUsages(Output.of(storageUsages));
        }

        public Builder storageUsages(RegistryStorageUsageArgs... storageUsages) {
            return storageUsages(List.of(storageUsages));
        }

        public RegistryState build() {
            return $;
        }
    }

}
