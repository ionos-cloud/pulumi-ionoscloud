// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.dbaas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PSQLDatabaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final PSQLDatabaseArgs Empty = new PSQLDatabaseArgs();

    /**
     * [string] The unique ID of the cluster.
     * 
     */
    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    /**
     * @return [string] The unique ID of the cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }

    /**
     * [string] The name of the database.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return [string] The name of the database.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * [string] The owner of the database.
     * 
     */
    @Import(name="owner", required=true)
    private Output<String> owner;

    /**
     * @return [string] The owner of the database.
     * 
     */
    public Output<String> owner() {
        return this.owner;
    }

    private PSQLDatabaseArgs() {}

    private PSQLDatabaseArgs(PSQLDatabaseArgs $) {
        this.clusterId = $.clusterId;
        this.name = $.name;
        this.owner = $.owner;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PSQLDatabaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PSQLDatabaseArgs $;

        public Builder() {
            $ = new PSQLDatabaseArgs();
        }

        public Builder(PSQLDatabaseArgs defaults) {
            $ = new PSQLDatabaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId [string] The unique ID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId [string] The unique ID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param name [string] The name of the database.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name [string] The name of the database.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param owner [string] The owner of the database.
         * 
         * @return builder
         * 
         */
        public Builder owner(Output<String> owner) {
            $.owner = owner;
            return this;
        }

        /**
         * @param owner [string] The owner of the database.
         * 
         * @return builder
         * 
         */
        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        public PSQLDatabaseArgs build() {
            if ($.clusterId == null) {
                throw new MissingRequiredPropertyException("PSQLDatabaseArgs", "clusterId");
            }
            if ($.owner == null) {
                throw new MissingRequiredPropertyException("PSQLDatabaseArgs", "owner");
            }
            return $;
        }
    }

}
