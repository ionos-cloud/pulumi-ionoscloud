// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.nlb.inputs;

import com.ionoscloud.pulumi.ionoscloud.nlb.inputs.ForwardingRuleTargetHealthCheckArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ForwardingRuleTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ForwardingRuleTargetArgs Empty = new ForwardingRuleTargetArgs();

    /**
     * Health check attributes for Network Load Balancer forwarding rule target.
     * 
     */
    @Import(name="healthCheck")
    private @Nullable Output<ForwardingRuleTargetHealthCheckArgs> healthCheck;

    /**
     * @return Health check attributes for Network Load Balancer forwarding rule target.
     * 
     */
    public Optional<Output<ForwardingRuleTargetHealthCheckArgs>> healthCheck() {
        return Optional.ofNullable(this.healthCheck);
    }

    /**
     * [string] IP of a balanced target VM.
     * 
     */
    @Import(name="ip", required=true)
    private Output<String> ip;

    /**
     * @return [string] IP of a balanced target VM.
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }

    /**
     * [int] Port of the balanced target service. (range: 1 to 65535).
     * 
     */
    @Import(name="port", required=true)
    private Output<Integer> port;

    /**
     * @return [int] Port of the balanced target service. (range: 1 to 65535).
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }

    /**
     * [string] The proxy protocol version. Accepted values are `none`, `v1`, `v2`, `v2ssl`. If unspecified, the default value of `none` is used.
     * 
     */
    @Import(name="proxyProtocol")
    private @Nullable Output<String> proxyProtocol;

    /**
     * @return [string] The proxy protocol version. Accepted values are `none`, `v1`, `v2`, `v2ssl`. If unspecified, the default value of `none` is used.
     * 
     */
    public Optional<Output<String>> proxyProtocol() {
        return Optional.ofNullable(this.proxyProtocol);
    }

    /**
     * [int] Weight parameter is used to adjust the target VM&#39;s weight relative to other target VMs.
     * 
     */
    @Import(name="weight", required=true)
    private Output<Integer> weight;

    /**
     * @return [int] Weight parameter is used to adjust the target VM&#39;s weight relative to other target VMs.
     * 
     */
    public Output<Integer> weight() {
        return this.weight;
    }

    private ForwardingRuleTargetArgs() {}

    private ForwardingRuleTargetArgs(ForwardingRuleTargetArgs $) {
        this.healthCheck = $.healthCheck;
        this.ip = $.ip;
        this.port = $.port;
        this.proxyProtocol = $.proxyProtocol;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ForwardingRuleTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ForwardingRuleTargetArgs $;

        public Builder() {
            $ = new ForwardingRuleTargetArgs();
        }

        public Builder(ForwardingRuleTargetArgs defaults) {
            $ = new ForwardingRuleTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param healthCheck Health check attributes for Network Load Balancer forwarding rule target.
         * 
         * @return builder
         * 
         */
        public Builder healthCheck(@Nullable Output<ForwardingRuleTargetHealthCheckArgs> healthCheck) {
            $.healthCheck = healthCheck;
            return this;
        }

        /**
         * @param healthCheck Health check attributes for Network Load Balancer forwarding rule target.
         * 
         * @return builder
         * 
         */
        public Builder healthCheck(ForwardingRuleTargetHealthCheckArgs healthCheck) {
            return healthCheck(Output.of(healthCheck));
        }

        /**
         * @param ip [string] IP of a balanced target VM.
         * 
         * @return builder
         * 
         */
        public Builder ip(Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip [string] IP of a balanced target VM.
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param port [int] Port of the balanced target service. (range: 1 to 65535).
         * 
         * @return builder
         * 
         */
        public Builder port(Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port [int] Port of the balanced target service. (range: 1 to 65535).
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param proxyProtocol [string] The proxy protocol version. Accepted values are `none`, `v1`, `v2`, `v2ssl`. If unspecified, the default value of `none` is used.
         * 
         * @return builder
         * 
         */
        public Builder proxyProtocol(@Nullable Output<String> proxyProtocol) {
            $.proxyProtocol = proxyProtocol;
            return this;
        }

        /**
         * @param proxyProtocol [string] The proxy protocol version. Accepted values are `none`, `v1`, `v2`, `v2ssl`. If unspecified, the default value of `none` is used.
         * 
         * @return builder
         * 
         */
        public Builder proxyProtocol(String proxyProtocol) {
            return proxyProtocol(Output.of(proxyProtocol));
        }

        /**
         * @param weight [int] Weight parameter is used to adjust the target VM&#39;s weight relative to other target VMs.
         * 
         * @return builder
         * 
         */
        public Builder weight(Output<Integer> weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param weight [int] Weight parameter is used to adjust the target VM&#39;s weight relative to other target VMs.
         * 
         * @return builder
         * 
         */
        public Builder weight(Integer weight) {
            return weight(Output.of(weight));
        }

        public ForwardingRuleTargetArgs build() {
            if ($.ip == null) {
                throw new MissingRequiredPropertyException("ForwardingRuleTargetArgs", "ip");
            }
            if ($.port == null) {
                throw new MissingRequiredPropertyException("ForwardingRuleTargetArgs", "port");
            }
            if ($.weight == null) {
                throw new MissingRequiredPropertyException("ForwardingRuleTargetArgs", "weight");
            }
            return $;
        }
    }

}
