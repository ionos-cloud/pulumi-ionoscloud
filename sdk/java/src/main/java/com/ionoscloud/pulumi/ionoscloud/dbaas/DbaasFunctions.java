// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.dbaas;

import com.ionoscloud.pulumi.ionoscloud.Utilities;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetInmemorydbSnapshotArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetInmemorydbSnapshotPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplatePlainArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetMongoUserArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetMongoUserPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetPSQLBackupsArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetPSQLBackupsPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabaseArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabasePlainArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabasesArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabasesPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetPSQLUserArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetPSQLUserPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsPlainArgs;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.GetInMemoryDBReplicaSetResult;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.GetInmemorydbSnapshotResult;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.GetMariaDBBackupsResult;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.GetMariaDBClusterResult;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.GetMongoClusterResult;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.GetMongoTemplateResult;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.GetMongoUserResult;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.GetPSQLBackupsResult;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.GetPSQLClusterResult;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.GetPSQLDatabaseResult;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.GetPSQLDatabasesResult;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.GetPSQLUserResult;
import com.ionoscloud.pulumi.ionoscloud.dbaas.outputs.GetPSQLVersionsResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class DbaasFunctions {
    /**
     * The `ionoscloud.dbaas.InMemoryDBReplicaSet` data source can be used to retrieve information about an existing InMemoryDB Replica Set.
     * 
     * ## Example Usage
     * 
     * ### By id
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.builder()
     *             .id("example-id")
     *             .location("es/vit")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By display_name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.builder()
     *             .displayName("example-id")
     *             .location("us/las")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInMemoryDBReplicaSetResult> getInMemoryDBReplicaSet() {
        return getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.dbaas.InMemoryDBReplicaSet` data source can be used to retrieve information about an existing InMemoryDB Replica Set.
     * 
     * ## Example Usage
     * 
     * ### By id
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.builder()
     *             .id("example-id")
     *             .location("es/vit")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By display_name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.builder()
     *             .displayName("example-id")
     *             .location("us/las")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInMemoryDBReplicaSetResult> getInMemoryDBReplicaSetPlain() {
        return getInMemoryDBReplicaSetPlain(GetInMemoryDBReplicaSetPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.dbaas.InMemoryDBReplicaSet` data source can be used to retrieve information about an existing InMemoryDB Replica Set.
     * 
     * ## Example Usage
     * 
     * ### By id
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.builder()
     *             .id("example-id")
     *             .location("es/vit")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By display_name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.builder()
     *             .displayName("example-id")
     *             .location("us/las")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInMemoryDBReplicaSetResult> getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs args) {
        return getInMemoryDBReplicaSet(args, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.dbaas.InMemoryDBReplicaSet` data source can be used to retrieve information about an existing InMemoryDB Replica Set.
     * 
     * ## Example Usage
     * 
     * ### By id
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.builder()
     *             .id("example-id")
     *             .location("es/vit")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By display_name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.builder()
     *             .displayName("example-id")
     *             .location("us/las")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInMemoryDBReplicaSetResult> getInMemoryDBReplicaSetPlain(GetInMemoryDBReplicaSetPlainArgs args) {
        return getInMemoryDBReplicaSetPlain(args, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.dbaas.InMemoryDBReplicaSet` data source can be used to retrieve information about an existing InMemoryDB Replica Set.
     * 
     * ## Example Usage
     * 
     * ### By id
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.builder()
     *             .id("example-id")
     *             .location("es/vit")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By display_name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.builder()
     *             .displayName("example-id")
     *             .location("us/las")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInMemoryDBReplicaSetResult> getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getInMemoryDBReplicaSet:getInMemoryDBReplicaSet", TypeShape.of(GetInMemoryDBReplicaSetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.dbaas.InMemoryDBReplicaSet` data source can be used to retrieve information about an existing InMemoryDB Replica Set.
     * 
     * ## Example Usage
     * 
     * ### By id
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.builder()
     *             .id("example-id")
     *             .location("es/vit")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By display_name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.builder()
     *             .displayName("example-id")
     *             .location("us/las")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInMemoryDBReplicaSetResult> getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getInMemoryDBReplicaSet:getInMemoryDBReplicaSet", TypeShape.of(GetInMemoryDBReplicaSetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.dbaas.InMemoryDBReplicaSet` data source can be used to retrieve information about an existing InMemoryDB Replica Set.
     * 
     * ## Example Usage
     * 
     * ### By id
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.builder()
     *             .id("example-id")
     *             .location("es/vit")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By display_name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInMemoryDBReplicaSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInMemoryDBReplicaSet(GetInMemoryDBReplicaSetArgs.builder()
     *             .displayName("example-id")
     *             .location("us/las")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInMemoryDBReplicaSetResult> getInMemoryDBReplicaSetPlain(GetInMemoryDBReplicaSetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:dbaas/getInMemoryDBReplicaSet:getInMemoryDBReplicaSet", TypeShape.of(GetInMemoryDBReplicaSetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.dbaas.getInmemorydbSnapshot` data source can be used to retrieve information about an existing InMemoryDB Snapshot.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInmemorydbSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInmemorydbSnapshot(GetInmemorydbSnapshotArgs.builder()
     *             .id("snapshot-id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInmemorydbSnapshotResult> getInmemorydbSnapshot(GetInmemorydbSnapshotArgs args) {
        return getInmemorydbSnapshot(args, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.dbaas.getInmemorydbSnapshot` data source can be used to retrieve information about an existing InMemoryDB Snapshot.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInmemorydbSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInmemorydbSnapshot(GetInmemorydbSnapshotArgs.builder()
     *             .id("snapshot-id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInmemorydbSnapshotResult> getInmemorydbSnapshotPlain(GetInmemorydbSnapshotPlainArgs args) {
        return getInmemorydbSnapshotPlain(args, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.dbaas.getInmemorydbSnapshot` data source can be used to retrieve information about an existing InMemoryDB Snapshot.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInmemorydbSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInmemorydbSnapshot(GetInmemorydbSnapshotArgs.builder()
     *             .id("snapshot-id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInmemorydbSnapshotResult> getInmemorydbSnapshot(GetInmemorydbSnapshotArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getInmemorydbSnapshot:getInmemorydbSnapshot", TypeShape.of(GetInmemorydbSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.dbaas.getInmemorydbSnapshot` data source can be used to retrieve information about an existing InMemoryDB Snapshot.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInmemorydbSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInmemorydbSnapshot(GetInmemorydbSnapshotArgs.builder()
     *             .id("snapshot-id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInmemorydbSnapshotResult> getInmemorydbSnapshot(GetInmemorydbSnapshotArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getInmemorydbSnapshot:getInmemorydbSnapshot", TypeShape.of(GetInmemorydbSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.dbaas.getInmemorydbSnapshot` data source can be used to retrieve information about an existing InMemoryDB Snapshot.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetInmemorydbSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getInmemorydbSnapshot(GetInmemorydbSnapshotArgs.builder()
     *             .id("snapshot-id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInmemorydbSnapshotResult> getInmemorydbSnapshotPlain(GetInmemorydbSnapshotPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:dbaas/getInmemorydbSnapshot:getInmemorydbSnapshot", TypeShape.of(GetInmemorydbSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DBaaS MariaDB Backups data source** can be used to search for and return existing DBaaS MariaDB Backups for a specific cluster.
     * 
     * ## Example Usage
     * 
     * ### Get all backups for a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBBackups(GetMariaDBBackupsArgs.builder()
     *             .clusterId("cluster_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Get a specific backup
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBBackups(GetMariaDBBackupsArgs.builder()
     *             .backupId("backup_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMariaDBBackupsResult> getMariaDBBackups() {
        return getMariaDBBackups(GetMariaDBBackupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **DBaaS MariaDB Backups data source** can be used to search for and return existing DBaaS MariaDB Backups for a specific cluster.
     * 
     * ## Example Usage
     * 
     * ### Get all backups for a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBBackups(GetMariaDBBackupsArgs.builder()
     *             .clusterId("cluster_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Get a specific backup
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBBackups(GetMariaDBBackupsArgs.builder()
     *             .backupId("backup_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMariaDBBackupsResult> getMariaDBBackupsPlain() {
        return getMariaDBBackupsPlain(GetMariaDBBackupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **DBaaS MariaDB Backups data source** can be used to search for and return existing DBaaS MariaDB Backups for a specific cluster.
     * 
     * ## Example Usage
     * 
     * ### Get all backups for a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBBackups(GetMariaDBBackupsArgs.builder()
     *             .clusterId("cluster_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Get a specific backup
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBBackups(GetMariaDBBackupsArgs.builder()
     *             .backupId("backup_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMariaDBBackupsResult> getMariaDBBackups(GetMariaDBBackupsArgs args) {
        return getMariaDBBackups(args, InvokeOptions.Empty);
    }
    /**
     * The **DBaaS MariaDB Backups data source** can be used to search for and return existing DBaaS MariaDB Backups for a specific cluster.
     * 
     * ## Example Usage
     * 
     * ### Get all backups for a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBBackups(GetMariaDBBackupsArgs.builder()
     *             .clusterId("cluster_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Get a specific backup
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBBackups(GetMariaDBBackupsArgs.builder()
     *             .backupId("backup_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMariaDBBackupsResult> getMariaDBBackupsPlain(GetMariaDBBackupsPlainArgs args) {
        return getMariaDBBackupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **DBaaS MariaDB Backups data source** can be used to search for and return existing DBaaS MariaDB Backups for a specific cluster.
     * 
     * ## Example Usage
     * 
     * ### Get all backups for a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBBackups(GetMariaDBBackupsArgs.builder()
     *             .clusterId("cluster_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Get a specific backup
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBBackups(GetMariaDBBackupsArgs.builder()
     *             .backupId("backup_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMariaDBBackupsResult> getMariaDBBackups(GetMariaDBBackupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getMariaDBBackups:getMariaDBBackups", TypeShape.of(GetMariaDBBackupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DBaaS MariaDB Backups data source** can be used to search for and return existing DBaaS MariaDB Backups for a specific cluster.
     * 
     * ## Example Usage
     * 
     * ### Get all backups for a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBBackups(GetMariaDBBackupsArgs.builder()
     *             .clusterId("cluster_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Get a specific backup
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBBackups(GetMariaDBBackupsArgs.builder()
     *             .backupId("backup_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMariaDBBackupsResult> getMariaDBBackups(GetMariaDBBackupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getMariaDBBackups:getMariaDBBackups", TypeShape.of(GetMariaDBBackupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DBaaS MariaDB Backups data source** can be used to search for and return existing DBaaS MariaDB Backups for a specific cluster.
     * 
     * ## Example Usage
     * 
     * ### Get all backups for a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBBackups(GetMariaDBBackupsArgs.builder()
     *             .clusterId("cluster_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Get a specific backup
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBBackups(GetMariaDBBackupsArgs.builder()
     *             .backupId("backup_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMariaDBBackupsResult> getMariaDBBackupsPlain(GetMariaDBBackupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:dbaas/getMariaDBBackups:getMariaDBBackups", TypeShape.of(GetMariaDBBackupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DBaaS MariaDB Cluster data source** can be used to search for and return an existing DBaaS MariaDB Cluster.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBCluster(GetMariaDBClusterArgs.builder()
     *             .id("cluster_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBCluster(GetMariaDBClusterArgs.builder()
     *             .displayName("MariaDB_cluster")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMariaDBClusterResult> getMariaDBCluster() {
        return getMariaDBCluster(GetMariaDBClusterArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **DBaaS MariaDB Cluster data source** can be used to search for and return an existing DBaaS MariaDB Cluster.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBCluster(GetMariaDBClusterArgs.builder()
     *             .id("cluster_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBCluster(GetMariaDBClusterArgs.builder()
     *             .displayName("MariaDB_cluster")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMariaDBClusterResult> getMariaDBClusterPlain() {
        return getMariaDBClusterPlain(GetMariaDBClusterPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **DBaaS MariaDB Cluster data source** can be used to search for and return an existing DBaaS MariaDB Cluster.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBCluster(GetMariaDBClusterArgs.builder()
     *             .id("cluster_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBCluster(GetMariaDBClusterArgs.builder()
     *             .displayName("MariaDB_cluster")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMariaDBClusterResult> getMariaDBCluster(GetMariaDBClusterArgs args) {
        return getMariaDBCluster(args, InvokeOptions.Empty);
    }
    /**
     * The **DBaaS MariaDB Cluster data source** can be used to search for and return an existing DBaaS MariaDB Cluster.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBCluster(GetMariaDBClusterArgs.builder()
     *             .id("cluster_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBCluster(GetMariaDBClusterArgs.builder()
     *             .displayName("MariaDB_cluster")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMariaDBClusterResult> getMariaDBClusterPlain(GetMariaDBClusterPlainArgs args) {
        return getMariaDBClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **DBaaS MariaDB Cluster data source** can be used to search for and return an existing DBaaS MariaDB Cluster.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBCluster(GetMariaDBClusterArgs.builder()
     *             .id("cluster_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBCluster(GetMariaDBClusterArgs.builder()
     *             .displayName("MariaDB_cluster")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMariaDBClusterResult> getMariaDBCluster(GetMariaDBClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getMariaDBCluster:getMariaDBCluster", TypeShape.of(GetMariaDBClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DBaaS MariaDB Cluster data source** can be used to search for and return an existing DBaaS MariaDB Cluster.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBCluster(GetMariaDBClusterArgs.builder()
     *             .id("cluster_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBCluster(GetMariaDBClusterArgs.builder()
     *             .displayName("MariaDB_cluster")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMariaDBClusterResult> getMariaDBCluster(GetMariaDBClusterArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getMariaDBCluster:getMariaDBCluster", TypeShape.of(GetMariaDBClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DBaaS MariaDB Cluster data source** can be used to search for and return an existing DBaaS MariaDB Cluster.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBCluster(GetMariaDBClusterArgs.builder()
     *             .id("cluster_id")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMariaDBClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMariaDBCluster(GetMariaDBClusterArgs.builder()
     *             .displayName("MariaDB_cluster")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMariaDBClusterResult> getMariaDBClusterPlain(GetMariaDBClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:dbaas/getMariaDBCluster:getMariaDBCluster", TypeShape.of(GetMariaDBClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Mongo Cluster data source** can be used to search for and return an existing DbaaS MongoDB Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoCluster(GetMongoClusterArgs.builder()
     *             .id("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * ### By display_name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoCluster(GetMongoClusterArgs.builder()
     *             .displayName("display_name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * * `display_name` - (Optional) Display Name of an existing cluster that you want to search for.
     * * `id` - (Optional) ID of the cluster you want to search for.
     * 
     * Either `display_name` or `id` must be provided. If none, or both are provided, the datasource will return an error.
     * 
     */
    public static Output<GetMongoClusterResult> getMongoCluster() {
        return getMongoCluster(GetMongoClusterArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Mongo Cluster data source** can be used to search for and return an existing DbaaS MongoDB Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoCluster(GetMongoClusterArgs.builder()
     *             .id("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * ### By display_name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoCluster(GetMongoClusterArgs.builder()
     *             .displayName("display_name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * * `display_name` - (Optional) Display Name of an existing cluster that you want to search for.
     * * `id` - (Optional) ID of the cluster you want to search for.
     * 
     * Either `display_name` or `id` must be provided. If none, or both are provided, the datasource will return an error.
     * 
     */
    public static CompletableFuture<GetMongoClusterResult> getMongoClusterPlain() {
        return getMongoClusterPlain(GetMongoClusterPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Mongo Cluster data source** can be used to search for and return an existing DbaaS MongoDB Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoCluster(GetMongoClusterArgs.builder()
     *             .id("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * ### By display_name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoCluster(GetMongoClusterArgs.builder()
     *             .displayName("display_name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * * `display_name` - (Optional) Display Name of an existing cluster that you want to search for.
     * * `id` - (Optional) ID of the cluster you want to search for.
     * 
     * Either `display_name` or `id` must be provided. If none, or both are provided, the datasource will return an error.
     * 
     */
    public static Output<GetMongoClusterResult> getMongoCluster(GetMongoClusterArgs args) {
        return getMongoCluster(args, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Mongo Cluster data source** can be used to search for and return an existing DbaaS MongoDB Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoCluster(GetMongoClusterArgs.builder()
     *             .id("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * ### By display_name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoCluster(GetMongoClusterArgs.builder()
     *             .displayName("display_name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * * `display_name` - (Optional) Display Name of an existing cluster that you want to search for.
     * * `id` - (Optional) ID of the cluster you want to search for.
     * 
     * Either `display_name` or `id` must be provided. If none, or both are provided, the datasource will return an error.
     * 
     */
    public static CompletableFuture<GetMongoClusterResult> getMongoClusterPlain(GetMongoClusterPlainArgs args) {
        return getMongoClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Mongo Cluster data source** can be used to search for and return an existing DbaaS MongoDB Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoCluster(GetMongoClusterArgs.builder()
     *             .id("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * ### By display_name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoCluster(GetMongoClusterArgs.builder()
     *             .displayName("display_name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * * `display_name` - (Optional) Display Name of an existing cluster that you want to search for.
     * * `id` - (Optional) ID of the cluster you want to search for.
     * 
     * Either `display_name` or `id` must be provided. If none, or both are provided, the datasource will return an error.
     * 
     */
    public static Output<GetMongoClusterResult> getMongoCluster(GetMongoClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getMongoCluster:getMongoCluster", TypeShape.of(GetMongoClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Mongo Cluster data source** can be used to search for and return an existing DbaaS MongoDB Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoCluster(GetMongoClusterArgs.builder()
     *             .id("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * ### By display_name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoCluster(GetMongoClusterArgs.builder()
     *             .displayName("display_name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * * `display_name` - (Optional) Display Name of an existing cluster that you want to search for.
     * * `id` - (Optional) ID of the cluster you want to search for.
     * 
     * Either `display_name` or `id` must be provided. If none, or both are provided, the datasource will return an error.
     * 
     */
    public static Output<GetMongoClusterResult> getMongoCluster(GetMongoClusterArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getMongoCluster:getMongoCluster", TypeShape.of(GetMongoClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Mongo Cluster data source** can be used to search for and return an existing DbaaS MongoDB Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoCluster(GetMongoClusterArgs.builder()
     *             .id("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * ### By display_name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoCluster(GetMongoClusterArgs.builder()
     *             .displayName("display_name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * * `display_name` - (Optional) Display Name of an existing cluster that you want to search for.
     * * `id` - (Optional) ID of the cluster you want to search for.
     * 
     * Either `display_name` or `id` must be provided. If none, or both are provided, the datasource will return an error.
     * 
     */
    public static CompletableFuture<GetMongoClusterResult> getMongoClusterPlain(GetMongoClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:dbaas/getMongoCluster:getMongoCluster", TypeShape.of(GetMongoClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Mongo Template data source** can be used to search for and return an existing DbaaS MongoDB Template.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .id("template_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * ### By name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .name("name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By name, using partial_match
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .name("name")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * * `name` - (Optional) The name of the template you want to search for.
     * * `id` - (Optional) ID of the template you want to search for.
     * * `partial_match` - (Optional) Whether partial matching is allowed or not when using name argument. Default value is false.
     * 
     * Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
     * 
     */
    public static Output<GetMongoTemplateResult> getMongoTemplate() {
        return getMongoTemplate(GetMongoTemplateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Mongo Template data source** can be used to search for and return an existing DbaaS MongoDB Template.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .id("template_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * ### By name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .name("name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By name, using partial_match
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .name("name")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * * `name` - (Optional) The name of the template you want to search for.
     * * `id` - (Optional) ID of the template you want to search for.
     * * `partial_match` - (Optional) Whether partial matching is allowed or not when using name argument. Default value is false.
     * 
     * Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
     * 
     */
    public static CompletableFuture<GetMongoTemplateResult> getMongoTemplatePlain() {
        return getMongoTemplatePlain(GetMongoTemplatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Mongo Template data source** can be used to search for and return an existing DbaaS MongoDB Template.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .id("template_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * ### By name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .name("name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By name, using partial_match
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .name("name")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * * `name` - (Optional) The name of the template you want to search for.
     * * `id` - (Optional) ID of the template you want to search for.
     * * `partial_match` - (Optional) Whether partial matching is allowed or not when using name argument. Default value is false.
     * 
     * Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
     * 
     */
    public static Output<GetMongoTemplateResult> getMongoTemplate(GetMongoTemplateArgs args) {
        return getMongoTemplate(args, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Mongo Template data source** can be used to search for and return an existing DbaaS MongoDB Template.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .id("template_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * ### By name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .name("name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By name, using partial_match
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .name("name")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * * `name` - (Optional) The name of the template you want to search for.
     * * `id` - (Optional) ID of the template you want to search for.
     * * `partial_match` - (Optional) Whether partial matching is allowed or not when using name argument. Default value is false.
     * 
     * Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
     * 
     */
    public static CompletableFuture<GetMongoTemplateResult> getMongoTemplatePlain(GetMongoTemplatePlainArgs args) {
        return getMongoTemplatePlain(args, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Mongo Template data source** can be used to search for and return an existing DbaaS MongoDB Template.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .id("template_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * ### By name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .name("name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By name, using partial_match
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .name("name")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * * `name` - (Optional) The name of the template you want to search for.
     * * `id` - (Optional) ID of the template you want to search for.
     * * `partial_match` - (Optional) Whether partial matching is allowed or not when using name argument. Default value is false.
     * 
     * Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
     * 
     */
    public static Output<GetMongoTemplateResult> getMongoTemplate(GetMongoTemplateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getMongoTemplate:getMongoTemplate", TypeShape.of(GetMongoTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Mongo Template data source** can be used to search for and return an existing DbaaS MongoDB Template.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .id("template_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * ### By name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .name("name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By name, using partial_match
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .name("name")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * * `name` - (Optional) The name of the template you want to search for.
     * * `id` - (Optional) ID of the template you want to search for.
     * * `partial_match` - (Optional) Whether partial matching is allowed or not when using name argument. Default value is false.
     * 
     * Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
     * 
     */
    public static Output<GetMongoTemplateResult> getMongoTemplate(GetMongoTemplateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getMongoTemplate:getMongoTemplate", TypeShape.of(GetMongoTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Mongo Template data source** can be used to search for and return an existing DbaaS MongoDB Template.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .id("template_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * ### By name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .name("name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By name, using partial_match
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoTemplate(GetMongoTemplateArgs.builder()
     *             .name("name")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * * `name` - (Optional) The name of the template you want to search for.
     * * `id` - (Optional) ID of the template you want to search for.
     * * `partial_match` - (Optional) Whether partial matching is allowed or not when using name argument. Default value is false.
     * 
     * Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
     * 
     */
    public static CompletableFuture<GetMongoTemplateResult> getMongoTemplatePlain(GetMongoTemplatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:dbaas/getMongoTemplate:getMongoTemplate", TypeShape.of(GetMongoTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Mongo User data source** can be used to search for and return an existing DbaaS MongoDB User.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By username
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoUser(GetMongoUserArgs.builder()
     *             .clusterId("cluster_id")
     *             .username("username")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMongoUserResult> getMongoUser(GetMongoUserArgs args) {
        return getMongoUser(args, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Mongo User data source** can be used to search for and return an existing DbaaS MongoDB User.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By username
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoUser(GetMongoUserArgs.builder()
     *             .clusterId("cluster_id")
     *             .username("username")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMongoUserResult> getMongoUserPlain(GetMongoUserPlainArgs args) {
        return getMongoUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Mongo User data source** can be used to search for and return an existing DbaaS MongoDB User.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By username
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoUser(GetMongoUserArgs.builder()
     *             .clusterId("cluster_id")
     *             .username("username")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMongoUserResult> getMongoUser(GetMongoUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getMongoUser:getMongoUser", TypeShape.of(GetMongoUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Mongo User data source** can be used to search for and return an existing DbaaS MongoDB User.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By username
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoUser(GetMongoUserArgs.builder()
     *             .clusterId("cluster_id")
     *             .username("username")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMongoUserResult> getMongoUser(GetMongoUserArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getMongoUser:getMongoUser", TypeShape.of(GetMongoUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Mongo User data source** can be used to search for and return an existing DbaaS MongoDB User.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By username
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetMongoUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getMongoUser(GetMongoUserArgs.builder()
     *             .clusterId("cluster_id")
     *             .username("username")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMongoUserResult> getMongoUserPlain(GetMongoUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:dbaas/getMongoUser:getMongoUser", TypeShape.of(GetMongoUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Postgres Backups data source** can be used to search for and return existing DbaaS Postgres Backups for a specific Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLBackups(GetPSQLBackupsArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLBackupsResult> getPSQLBackups(GetPSQLBackupsArgs args) {
        return getPSQLBackups(args, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Postgres Backups data source** can be used to search for and return existing DbaaS Postgres Backups for a specific Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLBackups(GetPSQLBackupsArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPSQLBackupsResult> getPSQLBackupsPlain(GetPSQLBackupsPlainArgs args) {
        return getPSQLBackupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Postgres Backups data source** can be used to search for and return existing DbaaS Postgres Backups for a specific Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLBackups(GetPSQLBackupsArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLBackupsResult> getPSQLBackups(GetPSQLBackupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getPSQLBackups:getPSQLBackups", TypeShape.of(GetPSQLBackupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Postgres Backups data source** can be used to search for and return existing DbaaS Postgres Backups for a specific Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLBackups(GetPSQLBackupsArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLBackupsResult> getPSQLBackups(GetPSQLBackupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getPSQLBackups:getPSQLBackups", TypeShape.of(GetPSQLBackupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Postgres Backups data source** can be used to search for and return existing DbaaS Postgres Backups for a specific Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLBackupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLBackups(GetPSQLBackupsArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPSQLBackupsResult> getPSQLBackupsPlain(GetPSQLBackupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:dbaas/getPSQLBackups:getPSQLBackups", TypeShape.of(GetPSQLBackupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Postgres Cluster data source** can be used to search for and return an existing DbaaS Postgres Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLCluster(GetPSQLClusterArgs.builder()
     *             .id("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLCluster(GetPSQLClusterArgs.builder()
     *             .displayName("PostgreSQL_cluster")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLClusterResult> getPSQLCluster() {
        return getPSQLCluster(GetPSQLClusterArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Postgres Cluster data source** can be used to search for and return an existing DbaaS Postgres Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLCluster(GetPSQLClusterArgs.builder()
     *             .id("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLCluster(GetPSQLClusterArgs.builder()
     *             .displayName("PostgreSQL_cluster")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPSQLClusterResult> getPSQLClusterPlain() {
        return getPSQLClusterPlain(GetPSQLClusterPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Postgres Cluster data source** can be used to search for and return an existing DbaaS Postgres Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLCluster(GetPSQLClusterArgs.builder()
     *             .id("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLCluster(GetPSQLClusterArgs.builder()
     *             .displayName("PostgreSQL_cluster")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLClusterResult> getPSQLCluster(GetPSQLClusterArgs args) {
        return getPSQLCluster(args, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Postgres Cluster data source** can be used to search for and return an existing DbaaS Postgres Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLCluster(GetPSQLClusterArgs.builder()
     *             .id("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLCluster(GetPSQLClusterArgs.builder()
     *             .displayName("PostgreSQL_cluster")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPSQLClusterResult> getPSQLClusterPlain(GetPSQLClusterPlainArgs args) {
        return getPSQLClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Postgres Cluster data source** can be used to search for and return an existing DbaaS Postgres Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLCluster(GetPSQLClusterArgs.builder()
     *             .id("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLCluster(GetPSQLClusterArgs.builder()
     *             .displayName("PostgreSQL_cluster")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLClusterResult> getPSQLCluster(GetPSQLClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getPSQLCluster:getPSQLCluster", TypeShape.of(GetPSQLClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Postgres Cluster data source** can be used to search for and return an existing DbaaS Postgres Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLCluster(GetPSQLClusterArgs.builder()
     *             .id("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLCluster(GetPSQLClusterArgs.builder()
     *             .displayName("PostgreSQL_cluster")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLClusterResult> getPSQLCluster(GetPSQLClusterArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getPSQLCluster:getPSQLCluster", TypeShape.of(GetPSQLClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Postgres Cluster data source** can be used to search for and return an existing DbaaS Postgres Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By ID
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLCluster(GetPSQLClusterArgs.builder()
     *             .id("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLCluster(GetPSQLClusterArgs.builder()
     *             .displayName("PostgreSQL_cluster")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPSQLClusterResult> getPSQLClusterPlain(GetPSQLClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:dbaas/getPSQLCluster:getPSQLCluster", TypeShape.of(GetPSQLClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **PgSql Database data source** can be used to search for and return an existing PgSql database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabase(GetPSQLDatabaseArgs.builder()
     *             .clusterId("cluster_id")
     *             .name("databasename")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLDatabaseResult> getPSQLDatabase(GetPSQLDatabaseArgs args) {
        return getPSQLDatabase(args, InvokeOptions.Empty);
    }
    /**
     * The **PgSql Database data source** can be used to search for and return an existing PgSql database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabase(GetPSQLDatabaseArgs.builder()
     *             .clusterId("cluster_id")
     *             .name("databasename")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPSQLDatabaseResult> getPSQLDatabasePlain(GetPSQLDatabasePlainArgs args) {
        return getPSQLDatabasePlain(args, InvokeOptions.Empty);
    }
    /**
     * The **PgSql Database data source** can be used to search for and return an existing PgSql database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabase(GetPSQLDatabaseArgs.builder()
     *             .clusterId("cluster_id")
     *             .name("databasename")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLDatabaseResult> getPSQLDatabase(GetPSQLDatabaseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getPSQLDatabase:getPSQLDatabase", TypeShape.of(GetPSQLDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **PgSql Database data source** can be used to search for and return an existing PgSql database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabase(GetPSQLDatabaseArgs.builder()
     *             .clusterId("cluster_id")
     *             .name("databasename")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLDatabaseResult> getPSQLDatabase(GetPSQLDatabaseArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getPSQLDatabase:getPSQLDatabase", TypeShape.of(GetPSQLDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **PgSql Database data source** can be used to search for and return an existing PgSql database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabase(GetPSQLDatabaseArgs.builder()
     *             .clusterId("cluster_id")
     *             .name("databasename")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPSQLDatabaseResult> getPSQLDatabasePlain(GetPSQLDatabasePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:dbaas/getPSQLDatabase:getPSQLDatabase", TypeShape.of(GetPSQLDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **PgSql Databases data source** can be used to search for and return multiple existing PgSql databases.
     * 
     * ## Example Usage
     * 
     * ### All databases from a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabases(GetPSQLDatabasesArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Filter by owner
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabases(GetPSQLDatabasesArgs.builder()
     *             .clusterId("cluster_id")
     *             .owner("owner")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLDatabasesResult> getPSQLDatabases(GetPSQLDatabasesArgs args) {
        return getPSQLDatabases(args, InvokeOptions.Empty);
    }
    /**
     * The **PgSql Databases data source** can be used to search for and return multiple existing PgSql databases.
     * 
     * ## Example Usage
     * 
     * ### All databases from a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabases(GetPSQLDatabasesArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Filter by owner
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabases(GetPSQLDatabasesArgs.builder()
     *             .clusterId("cluster_id")
     *             .owner("owner")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPSQLDatabasesResult> getPSQLDatabasesPlain(GetPSQLDatabasesPlainArgs args) {
        return getPSQLDatabasesPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **PgSql Databases data source** can be used to search for and return multiple existing PgSql databases.
     * 
     * ## Example Usage
     * 
     * ### All databases from a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabases(GetPSQLDatabasesArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Filter by owner
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabases(GetPSQLDatabasesArgs.builder()
     *             .clusterId("cluster_id")
     *             .owner("owner")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLDatabasesResult> getPSQLDatabases(GetPSQLDatabasesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getPSQLDatabases:getPSQLDatabases", TypeShape.of(GetPSQLDatabasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **PgSql Databases data source** can be used to search for and return multiple existing PgSql databases.
     * 
     * ## Example Usage
     * 
     * ### All databases from a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabases(GetPSQLDatabasesArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Filter by owner
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabases(GetPSQLDatabasesArgs.builder()
     *             .clusterId("cluster_id")
     *             .owner("owner")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLDatabasesResult> getPSQLDatabases(GetPSQLDatabasesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getPSQLDatabases:getPSQLDatabases", TypeShape.of(GetPSQLDatabasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **PgSql Databases data source** can be used to search for and return multiple existing PgSql databases.
     * 
     * ## Example Usage
     * 
     * ### All databases from a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabases(GetPSQLDatabasesArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Filter by owner
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLDatabases(GetPSQLDatabasesArgs.builder()
     *             .clusterId("cluster_id")
     *             .owner("owner")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPSQLDatabasesResult> getPSQLDatabasesPlain(GetPSQLDatabasesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:dbaas/getPSQLDatabases:getPSQLDatabases", TypeShape.of(GetPSQLDatabasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **PgSql User data source** can be used to search for and return an existing PgSql user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLUser(GetPSQLUserArgs.builder()
     *             .clusterId("cluster_id")
     *             .username("username")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLUserResult> getPSQLUser(GetPSQLUserArgs args) {
        return getPSQLUser(args, InvokeOptions.Empty);
    }
    /**
     * The **PgSql User data source** can be used to search for and return an existing PgSql user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLUser(GetPSQLUserArgs.builder()
     *             .clusterId("cluster_id")
     *             .username("username")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPSQLUserResult> getPSQLUserPlain(GetPSQLUserPlainArgs args) {
        return getPSQLUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **PgSql User data source** can be used to search for and return an existing PgSql user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLUser(GetPSQLUserArgs.builder()
     *             .clusterId("cluster_id")
     *             .username("username")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLUserResult> getPSQLUser(GetPSQLUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getPSQLUser:getPSQLUser", TypeShape.of(GetPSQLUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **PgSql User data source** can be used to search for and return an existing PgSql user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLUser(GetPSQLUserArgs.builder()
     *             .clusterId("cluster_id")
     *             .username("username")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLUserResult> getPSQLUser(GetPSQLUserArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getPSQLUser:getPSQLUser", TypeShape.of(GetPSQLUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **PgSql User data source** can be used to search for and return an existing PgSql user.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLUser(GetPSQLUserArgs.builder()
     *             .clusterId("cluster_id")
     *             .username("username")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPSQLUserResult> getPSQLUserPlain(GetPSQLUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:dbaas/getPSQLUser:getPSQLUser", TypeShape.of(GetPSQLUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Postgres Versions data source** can be used to search for and retrieve list of available postgres versions for a specific cluster or for all clusters.
     * 
     * ## Example Usage
     * 
     * ### Retrieve list of postgres versions for a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLVersions(GetPSQLVersionsArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Retrieve list of postgres versions for all clusters
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLVersions();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLVersionsResult> getPSQLVersions() {
        return getPSQLVersions(GetPSQLVersionsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Postgres Versions data source** can be used to search for and retrieve list of available postgres versions for a specific cluster or for all clusters.
     * 
     * ## Example Usage
     * 
     * ### Retrieve list of postgres versions for a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLVersions(GetPSQLVersionsArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Retrieve list of postgres versions for all clusters
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLVersions();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPSQLVersionsResult> getPSQLVersionsPlain() {
        return getPSQLVersionsPlain(GetPSQLVersionsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Postgres Versions data source** can be used to search for and retrieve list of available postgres versions for a specific cluster or for all clusters.
     * 
     * ## Example Usage
     * 
     * ### Retrieve list of postgres versions for a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLVersions(GetPSQLVersionsArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Retrieve list of postgres versions for all clusters
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLVersions();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLVersionsResult> getPSQLVersions(GetPSQLVersionsArgs args) {
        return getPSQLVersions(args, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Postgres Versions data source** can be used to search for and retrieve list of available postgres versions for a specific cluster or for all clusters.
     * 
     * ## Example Usage
     * 
     * ### Retrieve list of postgres versions for a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLVersions(GetPSQLVersionsArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Retrieve list of postgres versions for all clusters
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLVersions();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPSQLVersionsResult> getPSQLVersionsPlain(GetPSQLVersionsPlainArgs args) {
        return getPSQLVersionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **DbaaS Postgres Versions data source** can be used to search for and retrieve list of available postgres versions for a specific cluster or for all clusters.
     * 
     * ## Example Usage
     * 
     * ### Retrieve list of postgres versions for a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLVersions(GetPSQLVersionsArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Retrieve list of postgres versions for all clusters
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLVersions();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLVersionsResult> getPSQLVersions(GetPSQLVersionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getPSQLVersions:getPSQLVersions", TypeShape.of(GetPSQLVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Postgres Versions data source** can be used to search for and retrieve list of available postgres versions for a specific cluster or for all clusters.
     * 
     * ## Example Usage
     * 
     * ### Retrieve list of postgres versions for a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLVersions(GetPSQLVersionsArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Retrieve list of postgres versions for all clusters
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLVersions();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPSQLVersionsResult> getPSQLVersions(GetPSQLVersionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:dbaas/getPSQLVersions:getPSQLVersions", TypeShape.of(GetPSQLVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DbaaS Postgres Versions data source** can be used to search for and retrieve list of available postgres versions for a specific cluster or for all clusters.
     * 
     * ## Example Usage
     * 
     * ### Retrieve list of postgres versions for a specific cluster
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLVersions(GetPSQLVersionsArgs.builder()
     *             .clusterId("cluster_id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Retrieve list of postgres versions for all clusters
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.dbaas.DbaasFunctions;
     * import com.pulumi.ionoscloud.dbaas.inputs.GetPSQLVersionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DbaasFunctions.getPSQLVersions();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPSQLVersionsResult> getPSQLVersionsPlain(GetPSQLVersionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:dbaas/getPSQLVersions:getPSQLVersions", TypeShape.of(GetPSQLVersionsResult.class), args, Utilities.withVersion(options));
    }
}
