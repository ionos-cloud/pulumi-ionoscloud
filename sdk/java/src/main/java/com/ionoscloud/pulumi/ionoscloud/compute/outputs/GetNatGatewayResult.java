// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.compute.outputs;

import com.ionoscloud.pulumi.ionoscloud.compute.outputs.GetNatGatewayLan;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNatGatewayResult {
    private String datacenterId;
    /**
     * @return Id for the LAN connected to the NAT gateway
     * 
     */
    private String id;
    /**
     * @return Collection of LANs connected to the NAT gateway. IPs must contain valid subnet mask. If user will not provide any IP then system will generate an IP with /24 subnet.
     * 
     */
    private List<GetNatGatewayLan> lans;
    /**
     * @return Name of that natgateway
     * 
     */
    private String name;
    /**
     * @return Collection of public IP addresses of the NAT gateway. Should be customer reserved IP addresses in that location
     * 
     */
    private List<String> publicIps;

    private GetNatGatewayResult() {}
    public String datacenterId() {
        return this.datacenterId;
    }
    /**
     * @return Id for the LAN connected to the NAT gateway
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Collection of LANs connected to the NAT gateway. IPs must contain valid subnet mask. If user will not provide any IP then system will generate an IP with /24 subnet.
     * 
     */
    public List<GetNatGatewayLan> lans() {
        return this.lans;
    }
    /**
     * @return Name of that natgateway
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Collection of public IP addresses of the NAT gateway. Should be customer reserved IP addresses in that location
     * 
     */
    public List<String> publicIps() {
        return this.publicIps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNatGatewayResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String datacenterId;
        private String id;
        private List<GetNatGatewayLan> lans;
        private String name;
        private List<String> publicIps;
        public Builder() {}
        public Builder(GetNatGatewayResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datacenterId = defaults.datacenterId;
    	      this.id = defaults.id;
    	      this.lans = defaults.lans;
    	      this.name = defaults.name;
    	      this.publicIps = defaults.publicIps;
        }

        @CustomType.Setter
        public Builder datacenterId(String datacenterId) {
            if (datacenterId == null) {
              throw new MissingRequiredPropertyException("GetNatGatewayResult", "datacenterId");
            }
            this.datacenterId = datacenterId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNatGatewayResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lans(List<GetNatGatewayLan> lans) {
            if (lans == null) {
              throw new MissingRequiredPropertyException("GetNatGatewayResult", "lans");
            }
            this.lans = lans;
            return this;
        }
        public Builder lans(GetNatGatewayLan... lans) {
            return lans(List.of(lans));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNatGatewayResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder publicIps(List<String> publicIps) {
            if (publicIps == null) {
              throw new MissingRequiredPropertyException("GetNatGatewayResult", "publicIps");
            }
            this.publicIps = publicIps;
            return this;
        }
        public Builder publicIps(String... publicIps) {
            return publicIps(List.of(publicIps));
        }
        public GetNatGatewayResult build() {
            final var _resultValue = new GetNatGatewayResult();
            _resultValue.datacenterId = datacenterId;
            _resultValue.id = id;
            _resultValue.lans = lans;
            _resultValue.name = name;
            _resultValue.publicIps = publicIps;
            return _resultValue;
        }
    }
}
