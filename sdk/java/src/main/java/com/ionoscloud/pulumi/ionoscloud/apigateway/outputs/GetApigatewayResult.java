// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ionoscloud.pulumi.ionoscloud.apigateway.outputs;

import com.ionoscloud.pulumi.ionoscloud.apigateway.outputs.GetApigatewayCustomDomain;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetApigatewayResult {
    private List<GetApigatewayCustomDomain> customDomains;
    /**
     * @return ID of the API Gateway.
     * 
     */
    private String id;
    /**
     * @return Shows whether the collection and reporting of logs for observability of this instance is enabled or disabled.
     * 
     */
    private Boolean logs;
    /**
     * @return Shows whether the collection and reporting of metrics for observability of this instance is enabled or disabled.
     * 
     */
    private Boolean metrics;
    /**
     * @return The domain name of the distribution.
     * 
     */
    private String name;
    private @Nullable Boolean partialMatch;
    /**
     * @return The public endpoint of the API Gateway.
     * 
     */
    private String publicEndpoint;

    private GetApigatewayResult() {}
    public List<GetApigatewayCustomDomain> customDomains() {
        return this.customDomains;
    }
    /**
     * @return ID of the API Gateway.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Shows whether the collection and reporting of logs for observability of this instance is enabled or disabled.
     * 
     */
    public Boolean logs() {
        return this.logs;
    }
    /**
     * @return Shows whether the collection and reporting of metrics for observability of this instance is enabled or disabled.
     * 
     */
    public Boolean metrics() {
        return this.metrics;
    }
    /**
     * @return The domain name of the distribution.
     * 
     */
    public String name() {
        return this.name;
    }
    public Optional<Boolean> partialMatch() {
        return Optional.ofNullable(this.partialMatch);
    }
    /**
     * @return The public endpoint of the API Gateway.
     * 
     */
    public String publicEndpoint() {
        return this.publicEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApigatewayResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetApigatewayCustomDomain> customDomains;
        private String id;
        private Boolean logs;
        private Boolean metrics;
        private String name;
        private @Nullable Boolean partialMatch;
        private String publicEndpoint;
        public Builder() {}
        public Builder(GetApigatewayResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customDomains = defaults.customDomains;
    	      this.id = defaults.id;
    	      this.logs = defaults.logs;
    	      this.metrics = defaults.metrics;
    	      this.name = defaults.name;
    	      this.partialMatch = defaults.partialMatch;
    	      this.publicEndpoint = defaults.publicEndpoint;
        }

        @CustomType.Setter
        public Builder customDomains(List<GetApigatewayCustomDomain> customDomains) {
            if (customDomains == null) {
              throw new MissingRequiredPropertyException("GetApigatewayResult", "customDomains");
            }
            this.customDomains = customDomains;
            return this;
        }
        public Builder customDomains(GetApigatewayCustomDomain... customDomains) {
            return customDomains(List.of(customDomains));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetApigatewayResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder logs(Boolean logs) {
            if (logs == null) {
              throw new MissingRequiredPropertyException("GetApigatewayResult", "logs");
            }
            this.logs = logs;
            return this;
        }
        @CustomType.Setter
        public Builder metrics(Boolean metrics) {
            if (metrics == null) {
              throw new MissingRequiredPropertyException("GetApigatewayResult", "metrics");
            }
            this.metrics = metrics;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetApigatewayResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder partialMatch(@Nullable Boolean partialMatch) {

            this.partialMatch = partialMatch;
            return this;
        }
        @CustomType.Setter
        public Builder publicEndpoint(String publicEndpoint) {
            if (publicEndpoint == null) {
              throw new MissingRequiredPropertyException("GetApigatewayResult", "publicEndpoint");
            }
            this.publicEndpoint = publicEndpoint;
            return this;
        }
        public GetApigatewayResult build() {
            final var _resultValue = new GetApigatewayResult();
            _resultValue.customDomains = customDomains;
            _resultValue.id = id;
            _resultValue.logs = logs;
            _resultValue.metrics = metrics;
            _resultValue.name = name;
            _resultValue.partialMatch = partialMatch;
            _resultValue.publicEndpoint = publicEndpoint;
            return _resultValue;
        }
    }
}
