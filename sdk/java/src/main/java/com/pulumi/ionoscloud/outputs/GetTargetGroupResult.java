// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.outputs.GetTargetGroupHealthCheck;
import com.pulumi.ionoscloud.outputs.GetTargetGroupHttpHealthCheck;
import com.pulumi.ionoscloud.outputs.GetTargetGroupTarget;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTargetGroupResult {
    /**
     * @return Balancing algorithm.
     * 
     */
    private String algorithm;
    /**
     * @return Health check attributes for Target Group.
     * 
     */
    private List<GetTargetGroupHealthCheck> healthChecks;
    /**
     * @return Http health check attributes for Target Group
     * 
     */
    private List<GetTargetGroupHttpHealthCheck> httpHealthChecks;
    /**
     * @return The Id of that Target group
     * 
     */
    private @Nullable String id;
    /**
     * @return The name of that Target Group.
     * 
     */
    private @Nullable String name;
    private @Nullable Boolean partialMatch;
    /**
     * @return Balancing protocol.
     * 
     */
    private String protocol;
    /**
     * @return The forwarding protocol version. Value is ignored when protocol is not &#39;HTTP&#39;.
     * 
     */
    private String protocolVersion;
    /**
     * @return Array of items in the collection
     * 
     */
    private List<GetTargetGroupTarget> targets;

    private GetTargetGroupResult() {}
    /**
     * @return Balancing algorithm.
     * 
     */
    public String algorithm() {
        return this.algorithm;
    }
    /**
     * @return Health check attributes for Target Group.
     * 
     */
    public List<GetTargetGroupHealthCheck> healthChecks() {
        return this.healthChecks;
    }
    /**
     * @return Http health check attributes for Target Group
     * 
     */
    public List<GetTargetGroupHttpHealthCheck> httpHealthChecks() {
        return this.httpHealthChecks;
    }
    /**
     * @return The Id of that Target group
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The name of that Target Group.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<Boolean> partialMatch() {
        return Optional.ofNullable(this.partialMatch);
    }
    /**
     * @return Balancing protocol.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return The forwarding protocol version. Value is ignored when protocol is not &#39;HTTP&#39;.
     * 
     */
    public String protocolVersion() {
        return this.protocolVersion;
    }
    /**
     * @return Array of items in the collection
     * 
     */
    public List<GetTargetGroupTarget> targets() {
        return this.targets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTargetGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String algorithm;
        private List<GetTargetGroupHealthCheck> healthChecks;
        private List<GetTargetGroupHttpHealthCheck> httpHealthChecks;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable Boolean partialMatch;
        private String protocol;
        private String protocolVersion;
        private List<GetTargetGroupTarget> targets;
        public Builder() {}
        public Builder(GetTargetGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.algorithm = defaults.algorithm;
    	      this.healthChecks = defaults.healthChecks;
    	      this.httpHealthChecks = defaults.httpHealthChecks;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.partialMatch = defaults.partialMatch;
    	      this.protocol = defaults.protocol;
    	      this.protocolVersion = defaults.protocolVersion;
    	      this.targets = defaults.targets;
        }

        @CustomType.Setter
        public Builder algorithm(String algorithm) {
            if (algorithm == null) {
              throw new MissingRequiredPropertyException("GetTargetGroupResult", "algorithm");
            }
            this.algorithm = algorithm;
            return this;
        }
        @CustomType.Setter
        public Builder healthChecks(List<GetTargetGroupHealthCheck> healthChecks) {
            if (healthChecks == null) {
              throw new MissingRequiredPropertyException("GetTargetGroupResult", "healthChecks");
            }
            this.healthChecks = healthChecks;
            return this;
        }
        public Builder healthChecks(GetTargetGroupHealthCheck... healthChecks) {
            return healthChecks(List.of(healthChecks));
        }
        @CustomType.Setter
        public Builder httpHealthChecks(List<GetTargetGroupHttpHealthCheck> httpHealthChecks) {
            if (httpHealthChecks == null) {
              throw new MissingRequiredPropertyException("GetTargetGroupResult", "httpHealthChecks");
            }
            this.httpHealthChecks = httpHealthChecks;
            return this;
        }
        public Builder httpHealthChecks(GetTargetGroupHttpHealthCheck... httpHealthChecks) {
            return httpHealthChecks(List.of(httpHealthChecks));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder partialMatch(@Nullable Boolean partialMatch) {

            this.partialMatch = partialMatch;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetTargetGroupResult", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder protocolVersion(String protocolVersion) {
            if (protocolVersion == null) {
              throw new MissingRequiredPropertyException("GetTargetGroupResult", "protocolVersion");
            }
            this.protocolVersion = protocolVersion;
            return this;
        }
        @CustomType.Setter
        public Builder targets(List<GetTargetGroupTarget> targets) {
            if (targets == null) {
              throw new MissingRequiredPropertyException("GetTargetGroupResult", "targets");
            }
            this.targets = targets;
            return this;
        }
        public Builder targets(GetTargetGroupTarget... targets) {
            return targets(List.of(targets));
        }
        public GetTargetGroupResult build() {
            final var _resultValue = new GetTargetGroupResult();
            _resultValue.algorithm = algorithm;
            _resultValue.healthChecks = healthChecks;
            _resultValue.httpHealthChecks = httpHealthChecks;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.partialMatch = partialMatch;
            _resultValue.protocol = protocol;
            _resultValue.protocolVersion = protocolVersion;
            _resultValue.targets = targets;
            return _resultValue;
        }
    }
}
