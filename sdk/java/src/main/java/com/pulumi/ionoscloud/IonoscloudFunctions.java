// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.inputs.GetApigatewayArgs;
import com.pulumi.ionoscloud.inputs.GetApigatewayPlainArgs;
import com.pulumi.ionoscloud.inputs.GetApigatewayRouteArgs;
import com.pulumi.ionoscloud.inputs.GetApigatewayRoutePlainArgs;
import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerArgs;
import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerForwardingruleArgs;
import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerForwardingrulePlainArgs;
import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerPlainArgs;
import com.pulumi.ionoscloud.inputs.GetAutoCertificateArgs;
import com.pulumi.ionoscloud.inputs.GetAutoCertificatePlainArgs;
import com.pulumi.ionoscloud.inputs.GetAutoCertificateProviderArgs;
import com.pulumi.ionoscloud.inputs.GetAutoCertificateProviderPlainArgs;
import com.pulumi.ionoscloud.inputs.GetAutoscalingGroupArgs;
import com.pulumi.ionoscloud.inputs.GetAutoscalingGroupPlainArgs;
import com.pulumi.ionoscloud.inputs.GetAutoscalingGroupServersArgs;
import com.pulumi.ionoscloud.inputs.GetAutoscalingGroupServersPlainArgs;
import com.pulumi.ionoscloud.inputs.GetBackupUnitArgs;
import com.pulumi.ionoscloud.inputs.GetBackupUnitPlainArgs;
import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
import com.pulumi.ionoscloud.inputs.GetCdnDistributionPlainArgs;
import com.pulumi.ionoscloud.inputs.GetCertificateArgs;
import com.pulumi.ionoscloud.inputs.GetCertificatePlainArgs;
import com.pulumi.ionoscloud.inputs.GetContainerRegistryArgs;
import com.pulumi.ionoscloud.inputs.GetContainerRegistryPlainArgs;
import com.pulumi.ionoscloud.inputs.GetContainerRegistryTokenArgs;
import com.pulumi.ionoscloud.inputs.GetContainerRegistryTokenPlainArgs;
import com.pulumi.ionoscloud.inputs.GetCubeServerArgs;
import com.pulumi.ionoscloud.inputs.GetCubeServerPlainArgs;
import com.pulumi.ionoscloud.inputs.GetDatacenterArgs;
import com.pulumi.ionoscloud.inputs.GetDatacenterPlainArgs;
import com.pulumi.ionoscloud.inputs.GetDataplatformClusterArgs;
import com.pulumi.ionoscloud.inputs.GetDataplatformClusterPlainArgs;
import com.pulumi.ionoscloud.inputs.GetDataplatformNodePoolArgs;
import com.pulumi.ionoscloud.inputs.GetDataplatformNodePoolPlainArgs;
import com.pulumi.ionoscloud.inputs.GetDataplatformNodePoolsArgs;
import com.pulumi.ionoscloud.inputs.GetDataplatformNodePoolsPlainArgs;
import com.pulumi.ionoscloud.inputs.GetDnsRecordArgs;
import com.pulumi.ionoscloud.inputs.GetDnsRecordPlainArgs;
import com.pulumi.ionoscloud.inputs.GetDnsZoneArgs;
import com.pulumi.ionoscloud.inputs.GetDnsZonePlainArgs;
import com.pulumi.ionoscloud.inputs.GetFirewallArgs;
import com.pulumi.ionoscloud.inputs.GetFirewallPlainArgs;
import com.pulumi.ionoscloud.inputs.GetGroupArgs;
import com.pulumi.ionoscloud.inputs.GetGroupPlainArgs;
import com.pulumi.ionoscloud.inputs.GetImageArgs;
import com.pulumi.ionoscloud.inputs.GetImagePlainArgs;
import com.pulumi.ionoscloud.inputs.GetInmemorydbReplicasetArgs;
import com.pulumi.ionoscloud.inputs.GetInmemorydbReplicasetPlainArgs;
import com.pulumi.ionoscloud.inputs.GetInmemorydbSnapshotArgs;
import com.pulumi.ionoscloud.inputs.GetInmemorydbSnapshotPlainArgs;
import com.pulumi.ionoscloud.inputs.GetIpblockArgs;
import com.pulumi.ionoscloud.inputs.GetIpblockPlainArgs;
import com.pulumi.ionoscloud.inputs.GetIpfailoverArgs;
import com.pulumi.ionoscloud.inputs.GetIpfailoverPlainArgs;
import com.pulumi.ionoscloud.inputs.GetK8sClusterArgs;
import com.pulumi.ionoscloud.inputs.GetK8sClusterPlainArgs;
import com.pulumi.ionoscloud.inputs.GetK8sClustersArgs;
import com.pulumi.ionoscloud.inputs.GetK8sClustersPlainArgs;
import com.pulumi.ionoscloud.inputs.GetK8sNodePoolArgs;
import com.pulumi.ionoscloud.inputs.GetK8sNodePoolNodesArgs;
import com.pulumi.ionoscloud.inputs.GetK8sNodePoolNodesPlainArgs;
import com.pulumi.ionoscloud.inputs.GetK8sNodePoolPlainArgs;
import com.pulumi.ionoscloud.inputs.GetKafkaClusterArgs;
import com.pulumi.ionoscloud.inputs.GetKafkaClusterPlainArgs;
import com.pulumi.ionoscloud.inputs.GetKafkaClusterTopicArgs;
import com.pulumi.ionoscloud.inputs.GetKafkaClusterTopicPlainArgs;
import com.pulumi.ionoscloud.inputs.GetLanArgs;
import com.pulumi.ionoscloud.inputs.GetLanPlainArgs;
import com.pulumi.ionoscloud.inputs.GetLocationArgs;
import com.pulumi.ionoscloud.inputs.GetLocationPlainArgs;
import com.pulumi.ionoscloud.inputs.GetLoggingPipelineArgs;
import com.pulumi.ionoscloud.inputs.GetLoggingPipelinePlainArgs;
import com.pulumi.ionoscloud.inputs.GetMariadbBackupsArgs;
import com.pulumi.ionoscloud.inputs.GetMariadbBackupsPlainArgs;
import com.pulumi.ionoscloud.inputs.GetMariadbClusterArgs;
import com.pulumi.ionoscloud.inputs.GetMariadbClusterPlainArgs;
import com.pulumi.ionoscloud.inputs.GetMongoClusterArgs;
import com.pulumi.ionoscloud.inputs.GetMongoClusterPlainArgs;
import com.pulumi.ionoscloud.inputs.GetMongoTemplateArgs;
import com.pulumi.ionoscloud.inputs.GetMongoTemplatePlainArgs;
import com.pulumi.ionoscloud.inputs.GetMongoUserArgs;
import com.pulumi.ionoscloud.inputs.GetMongoUserPlainArgs;
import com.pulumi.ionoscloud.inputs.GetNatgatewayArgs;
import com.pulumi.ionoscloud.inputs.GetNatgatewayPlainArgs;
import com.pulumi.ionoscloud.inputs.GetNatgatewayRuleArgs;
import com.pulumi.ionoscloud.inputs.GetNatgatewayRulePlainArgs;
import com.pulumi.ionoscloud.inputs.GetNetworkloadbalancerArgs;
import com.pulumi.ionoscloud.inputs.GetNetworkloadbalancerForwardingruleArgs;
import com.pulumi.ionoscloud.inputs.GetNetworkloadbalancerForwardingrulePlainArgs;
import com.pulumi.ionoscloud.inputs.GetNetworkloadbalancerPlainArgs;
import com.pulumi.ionoscloud.inputs.GetNfsClusterArgs;
import com.pulumi.ionoscloud.inputs.GetNfsClusterPlainArgs;
import com.pulumi.ionoscloud.inputs.GetNfsShareArgs;
import com.pulumi.ionoscloud.inputs.GetNfsSharePlainArgs;
import com.pulumi.ionoscloud.inputs.GetNicArgs;
import com.pulumi.ionoscloud.inputs.GetNicPlainArgs;
import com.pulumi.ionoscloud.inputs.GetPgBackupsArgs;
import com.pulumi.ionoscloud.inputs.GetPgBackupsPlainArgs;
import com.pulumi.ionoscloud.inputs.GetPgClusterArgs;
import com.pulumi.ionoscloud.inputs.GetPgClusterPlainArgs;
import com.pulumi.ionoscloud.inputs.GetPgDatabaseArgs;
import com.pulumi.ionoscloud.inputs.GetPgDatabasePlainArgs;
import com.pulumi.ionoscloud.inputs.GetPgDatabasesArgs;
import com.pulumi.ionoscloud.inputs.GetPgDatabasesPlainArgs;
import com.pulumi.ionoscloud.inputs.GetPgUserArgs;
import com.pulumi.ionoscloud.inputs.GetPgUserPlainArgs;
import com.pulumi.ionoscloud.inputs.GetPgVersionsArgs;
import com.pulumi.ionoscloud.inputs.GetPgVersionsPlainArgs;
import com.pulumi.ionoscloud.inputs.GetPrivateCrossconnectArgs;
import com.pulumi.ionoscloud.inputs.GetPrivateCrossconnectPlainArgs;
import com.pulumi.ionoscloud.inputs.GetResourceArgs;
import com.pulumi.ionoscloud.inputs.GetResourcePlainArgs;
import com.pulumi.ionoscloud.inputs.GetS3KeyArgs;
import com.pulumi.ionoscloud.inputs.GetS3KeyPlainArgs;
import com.pulumi.ionoscloud.inputs.GetServerArgs;
import com.pulumi.ionoscloud.inputs.GetServerPlainArgs;
import com.pulumi.ionoscloud.inputs.GetServersArgs;
import com.pulumi.ionoscloud.inputs.GetServersPlainArgs;
import com.pulumi.ionoscloud.inputs.GetShareArgs;
import com.pulumi.ionoscloud.inputs.GetSharePlainArgs;
import com.pulumi.ionoscloud.inputs.GetSnapshotArgs;
import com.pulumi.ionoscloud.inputs.GetSnapshotPlainArgs;
import com.pulumi.ionoscloud.inputs.GetTargetGroupArgs;
import com.pulumi.ionoscloud.inputs.GetTargetGroupPlainArgs;
import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
import com.pulumi.ionoscloud.inputs.GetTemplatePlainArgs;
import com.pulumi.ionoscloud.inputs.GetUserArgs;
import com.pulumi.ionoscloud.inputs.GetUserPlainArgs;
import com.pulumi.ionoscloud.inputs.GetVcpuServerArgs;
import com.pulumi.ionoscloud.inputs.GetVcpuServerPlainArgs;
import com.pulumi.ionoscloud.inputs.GetVolumeArgs;
import com.pulumi.ionoscloud.inputs.GetVolumePlainArgs;
import com.pulumi.ionoscloud.inputs.GetVpnIpsecGatewayArgs;
import com.pulumi.ionoscloud.inputs.GetVpnIpsecGatewayPlainArgs;
import com.pulumi.ionoscloud.inputs.GetVpnIpsecTunnelArgs;
import com.pulumi.ionoscloud.inputs.GetVpnIpsecTunnelPlainArgs;
import com.pulumi.ionoscloud.inputs.GetVpnWireguardGatewayArgs;
import com.pulumi.ionoscloud.inputs.GetVpnWireguardGatewayPlainArgs;
import com.pulumi.ionoscloud.inputs.GetVpnWireguardPeerArgs;
import com.pulumi.ionoscloud.inputs.GetVpnWireguardPeerPlainArgs;
import com.pulumi.ionoscloud.outputs.GetApigatewayResult;
import com.pulumi.ionoscloud.outputs.GetApigatewayRouteResult;
import com.pulumi.ionoscloud.outputs.GetApplicationLoadbalancerForwardingruleResult;
import com.pulumi.ionoscloud.outputs.GetApplicationLoadbalancerResult;
import com.pulumi.ionoscloud.outputs.GetAutoCertificateProviderResult;
import com.pulumi.ionoscloud.outputs.GetAutoCertificateResult;
import com.pulumi.ionoscloud.outputs.GetAutoscalingGroupResult;
import com.pulumi.ionoscloud.outputs.GetAutoscalingGroupServersResult;
import com.pulumi.ionoscloud.outputs.GetBackupUnitResult;
import com.pulumi.ionoscloud.outputs.GetCdnDistributionResult;
import com.pulumi.ionoscloud.outputs.GetCertificateResult;
import com.pulumi.ionoscloud.outputs.GetContainerRegistryLocationsResult;
import com.pulumi.ionoscloud.outputs.GetContainerRegistryResult;
import com.pulumi.ionoscloud.outputs.GetContainerRegistryTokenResult;
import com.pulumi.ionoscloud.outputs.GetCubeServerResult;
import com.pulumi.ionoscloud.outputs.GetDatacenterResult;
import com.pulumi.ionoscloud.outputs.GetDataplatformClusterResult;
import com.pulumi.ionoscloud.outputs.GetDataplatformNodePoolResult;
import com.pulumi.ionoscloud.outputs.GetDataplatformNodePoolsResult;
import com.pulumi.ionoscloud.outputs.GetDataplatformVersionsResult;
import com.pulumi.ionoscloud.outputs.GetDnsRecordResult;
import com.pulumi.ionoscloud.outputs.GetDnsZoneResult;
import com.pulumi.ionoscloud.outputs.GetFirewallResult;
import com.pulumi.ionoscloud.outputs.GetGroupResult;
import com.pulumi.ionoscloud.outputs.GetImageResult;
import com.pulumi.ionoscloud.outputs.GetInmemorydbReplicasetResult;
import com.pulumi.ionoscloud.outputs.GetInmemorydbSnapshotResult;
import com.pulumi.ionoscloud.outputs.GetIpblockResult;
import com.pulumi.ionoscloud.outputs.GetIpfailoverResult;
import com.pulumi.ionoscloud.outputs.GetK8sClusterResult;
import com.pulumi.ionoscloud.outputs.GetK8sClustersResult;
import com.pulumi.ionoscloud.outputs.GetK8sNodePoolNodesResult;
import com.pulumi.ionoscloud.outputs.GetK8sNodePoolResult;
import com.pulumi.ionoscloud.outputs.GetKafkaClusterResult;
import com.pulumi.ionoscloud.outputs.GetKafkaClusterTopicResult;
import com.pulumi.ionoscloud.outputs.GetLanResult;
import com.pulumi.ionoscloud.outputs.GetLocationResult;
import com.pulumi.ionoscloud.outputs.GetLoggingPipelineResult;
import com.pulumi.ionoscloud.outputs.GetMariadbBackupsResult;
import com.pulumi.ionoscloud.outputs.GetMariadbClusterResult;
import com.pulumi.ionoscloud.outputs.GetMongoClusterResult;
import com.pulumi.ionoscloud.outputs.GetMongoTemplateResult;
import com.pulumi.ionoscloud.outputs.GetMongoUserResult;
import com.pulumi.ionoscloud.outputs.GetNatgatewayResult;
import com.pulumi.ionoscloud.outputs.GetNatgatewayRuleResult;
import com.pulumi.ionoscloud.outputs.GetNetworkloadbalancerForwardingruleResult;
import com.pulumi.ionoscloud.outputs.GetNetworkloadbalancerResult;
import com.pulumi.ionoscloud.outputs.GetNfsClusterResult;
import com.pulumi.ionoscloud.outputs.GetNfsShareResult;
import com.pulumi.ionoscloud.outputs.GetNicResult;
import com.pulumi.ionoscloud.outputs.GetPgBackupsResult;
import com.pulumi.ionoscloud.outputs.GetPgClusterResult;
import com.pulumi.ionoscloud.outputs.GetPgDatabaseResult;
import com.pulumi.ionoscloud.outputs.GetPgDatabasesResult;
import com.pulumi.ionoscloud.outputs.GetPgUserResult;
import com.pulumi.ionoscloud.outputs.GetPgVersionsResult;
import com.pulumi.ionoscloud.outputs.GetPrivateCrossconnectResult;
import com.pulumi.ionoscloud.outputs.GetResourceResult;
import com.pulumi.ionoscloud.outputs.GetS3KeyResult;
import com.pulumi.ionoscloud.outputs.GetServerResult;
import com.pulumi.ionoscloud.outputs.GetServersResult;
import com.pulumi.ionoscloud.outputs.GetShareResult;
import com.pulumi.ionoscloud.outputs.GetSnapshotResult;
import com.pulumi.ionoscloud.outputs.GetTargetGroupResult;
import com.pulumi.ionoscloud.outputs.GetTemplateResult;
import com.pulumi.ionoscloud.outputs.GetUserResult;
import com.pulumi.ionoscloud.outputs.GetVcpuServerResult;
import com.pulumi.ionoscloud.outputs.GetVolumeResult;
import com.pulumi.ionoscloud.outputs.GetVpnIpsecGatewayResult;
import com.pulumi.ionoscloud.outputs.GetVpnIpsecTunnelResult;
import com.pulumi.ionoscloud.outputs.GetVpnWireguardGatewayResult;
import com.pulumi.ionoscloud.outputs.GetVpnWireguardPeerResult;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class IonoscloudFunctions {
    /**
     * The **API Gateway data source** can be used to search for and return an existing API Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned API Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApigatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApigateway(GetApigatewayArgs.builder()
     *             .name("example-apigateway")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApigatewayResult> getApigateway() {
        return getApigateway(GetApigatewayArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **API Gateway data source** can be used to search for and return an existing API Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned API Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApigatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApigateway(GetApigatewayArgs.builder()
     *             .name("example-apigateway")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApigatewayResult> getApigatewayPlain() {
        return getApigatewayPlain(GetApigatewayPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **API Gateway data source** can be used to search for and return an existing API Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned API Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApigatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApigateway(GetApigatewayArgs.builder()
     *             .name("example-apigateway")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApigatewayResult> getApigateway(GetApigatewayArgs args) {
        return getApigateway(args, InvokeOptions.Empty);
    }
    /**
     * The **API Gateway data source** can be used to search for and return an existing API Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned API Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApigatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApigateway(GetApigatewayArgs.builder()
     *             .name("example-apigateway")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApigatewayResult> getApigatewayPlain(GetApigatewayPlainArgs args) {
        return getApigatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **API Gateway data source** can be used to search for and return an existing API Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned API Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApigatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApigateway(GetApigatewayArgs.builder()
     *             .name("example-apigateway")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApigatewayResult> getApigateway(GetApigatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getApigateway:getApigateway", TypeShape.of(GetApigatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **API Gateway data source** can be used to search for and return an existing API Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned API Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * 
     * Needs to have the resource be previously created, or a depends_on clause to ensure that the resource is created before
     * this data source is called.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApigatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApigateway(GetApigatewayArgs.builder()
     *             .name("example-apigateway")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApigatewayResult> getApigatewayPlain(GetApigatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getApigateway:getApigateway", TypeShape.of(GetApigatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **API Gateway Route data source** can be used to search for and return an existing API Gateway route.
     * You can provide a string for the name parameter which will be compared with provisioned API Gateway routes.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetApigatewayRouteResult> getApigatewayRoute(GetApigatewayRouteArgs args) {
        return getApigatewayRoute(args, InvokeOptions.Empty);
    }
    /**
     * The **API Gateway Route data source** can be used to search for and return an existing API Gateway route.
     * You can provide a string for the name parameter which will be compared with provisioned API Gateway routes.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetApigatewayRouteResult> getApigatewayRoutePlain(GetApigatewayRoutePlainArgs args) {
        return getApigatewayRoutePlain(args, InvokeOptions.Empty);
    }
    /**
     * The **API Gateway Route data source** can be used to search for and return an existing API Gateway route.
     * You can provide a string for the name parameter which will be compared with provisioned API Gateway routes.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetApigatewayRouteResult> getApigatewayRoute(GetApigatewayRouteArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getApigatewayRoute:getApigatewayRoute", TypeShape.of(GetApigatewayRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **API Gateway Route data source** can be used to search for and return an existing API Gateway route.
     * You can provide a string for the name parameter which will be compared with provisioned API Gateway routes.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetApigatewayRouteResult> getApigatewayRoutePlain(GetApigatewayRoutePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getApigatewayRoute:getApigatewayRoute", TypeShape.of(GetApigatewayRouteResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Application Load Balancer data source** can be used to search for and return an existing Application Load Balancer.
     * You can provide a string for the name parameter which will be compared with provisioned Application Load Balancers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancer(GetApplicationLoadbalancerArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .name("ALB name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancer(GetApplicationLoadbalancerArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .name("name")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationLoadbalancerResult> getApplicationLoadbalancer(GetApplicationLoadbalancerArgs args) {
        return getApplicationLoadbalancer(args, InvokeOptions.Empty);
    }
    /**
     * The **Application Load Balancer data source** can be used to search for and return an existing Application Load Balancer.
     * You can provide a string for the name parameter which will be compared with provisioned Application Load Balancers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancer(GetApplicationLoadbalancerArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .name("ALB name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancer(GetApplicationLoadbalancerArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .name("name")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationLoadbalancerResult> getApplicationLoadbalancerPlain(GetApplicationLoadbalancerPlainArgs args) {
        return getApplicationLoadbalancerPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Application Load Balancer data source** can be used to search for and return an existing Application Load Balancer.
     * You can provide a string for the name parameter which will be compared with provisioned Application Load Balancers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancer(GetApplicationLoadbalancerArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .name("ALB name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancer(GetApplicationLoadbalancerArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .name("name")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationLoadbalancerResult> getApplicationLoadbalancer(GetApplicationLoadbalancerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getApplicationLoadbalancer:getApplicationLoadbalancer", TypeShape.of(GetApplicationLoadbalancerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Application Load Balancer data source** can be used to search for and return an existing Application Load Balancer.
     * You can provide a string for the name parameter which will be compared with provisioned Application Load Balancers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancer(GetApplicationLoadbalancerArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .name("ALB name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancer(GetApplicationLoadbalancerArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .name("name")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationLoadbalancerResult> getApplicationLoadbalancerPlain(GetApplicationLoadbalancerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getApplicationLoadbalancer:getApplicationLoadbalancer", TypeShape.of(GetApplicationLoadbalancerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Application Load Balancer Forwarding Rule data source can be used to search for and return an existing Application Load Balancer Forwarding Rules.
     * You can provide a string for the name parameter which will be compared with provisioned Application Load Balancers Forwarding Rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerForwardingruleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancerForwardingrule(GetApplicationLoadbalancerForwardingruleArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .applicationLoadbalancerId(ionoscloud_application_loadbalancer.example().id())
     *             .name("ALB FR Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerForwardingruleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancerForwardingrule(GetApplicationLoadbalancerForwardingruleArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .applicationLoadbalancerId(ionoscloud_application_loadbalancer.example().id())
     *             .name("Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationLoadbalancerForwardingruleResult> getApplicationLoadbalancerForwardingrule(GetApplicationLoadbalancerForwardingruleArgs args) {
        return getApplicationLoadbalancerForwardingrule(args, InvokeOptions.Empty);
    }
    /**
     * The Application Load Balancer Forwarding Rule data source can be used to search for and return an existing Application Load Balancer Forwarding Rules.
     * You can provide a string for the name parameter which will be compared with provisioned Application Load Balancers Forwarding Rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerForwardingruleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancerForwardingrule(GetApplicationLoadbalancerForwardingruleArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .applicationLoadbalancerId(ionoscloud_application_loadbalancer.example().id())
     *             .name("ALB FR Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerForwardingruleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancerForwardingrule(GetApplicationLoadbalancerForwardingruleArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .applicationLoadbalancerId(ionoscloud_application_loadbalancer.example().id())
     *             .name("Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationLoadbalancerForwardingruleResult> getApplicationLoadbalancerForwardingrulePlain(GetApplicationLoadbalancerForwardingrulePlainArgs args) {
        return getApplicationLoadbalancerForwardingrulePlain(args, InvokeOptions.Empty);
    }
    /**
     * The Application Load Balancer Forwarding Rule data source can be used to search for and return an existing Application Load Balancer Forwarding Rules.
     * You can provide a string for the name parameter which will be compared with provisioned Application Load Balancers Forwarding Rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerForwardingruleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancerForwardingrule(GetApplicationLoadbalancerForwardingruleArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .applicationLoadbalancerId(ionoscloud_application_loadbalancer.example().id())
     *             .name("ALB FR Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerForwardingruleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancerForwardingrule(GetApplicationLoadbalancerForwardingruleArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .applicationLoadbalancerId(ionoscloud_application_loadbalancer.example().id())
     *             .name("Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetApplicationLoadbalancerForwardingruleResult> getApplicationLoadbalancerForwardingrule(GetApplicationLoadbalancerForwardingruleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getApplicationLoadbalancerForwardingrule:getApplicationLoadbalancerForwardingrule", TypeShape.of(GetApplicationLoadbalancerForwardingruleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Application Load Balancer Forwarding Rule data source can be used to search for and return an existing Application Load Balancer Forwarding Rules.
     * You can provide a string for the name parameter which will be compared with provisioned Application Load Balancers Forwarding Rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerForwardingruleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancerForwardingrule(GetApplicationLoadbalancerForwardingruleArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .applicationLoadbalancerId(ionoscloud_application_loadbalancer.example().id())
     *             .name("ALB FR Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetApplicationLoadbalancerForwardingruleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getApplicationLoadbalancerForwardingrule(GetApplicationLoadbalancerForwardingruleArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .applicationLoadbalancerId(ionoscloud_application_loadbalancer.example().id())
     *             .name("Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetApplicationLoadbalancerForwardingruleResult> getApplicationLoadbalancerForwardingrulePlain(GetApplicationLoadbalancerForwardingrulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getApplicationLoadbalancerForwardingrule:getApplicationLoadbalancerForwardingrule", TypeShape.of(GetApplicationLoadbalancerForwardingruleResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetAutoCertificateResult> getAutoCertificate(GetAutoCertificateArgs args) {
        return getAutoCertificate(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAutoCertificateResult> getAutoCertificatePlain(GetAutoCertificatePlainArgs args) {
        return getAutoCertificatePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetAutoCertificateResult> getAutoCertificate(GetAutoCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getAutoCertificate:getAutoCertificate", TypeShape.of(GetAutoCertificateResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetAutoCertificateResult> getAutoCertificatePlain(GetAutoCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getAutoCertificate:getAutoCertificate", TypeShape.of(GetAutoCertificateResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetAutoCertificateProviderResult> getAutoCertificateProvider(GetAutoCertificateProviderArgs args) {
        return getAutoCertificateProvider(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAutoCertificateProviderResult> getAutoCertificateProviderPlain(GetAutoCertificateProviderPlainArgs args) {
        return getAutoCertificateProviderPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetAutoCertificateProviderResult> getAutoCertificateProvider(GetAutoCertificateProviderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getAutoCertificateProvider:getAutoCertificateProvider", TypeShape.of(GetAutoCertificateProviderResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetAutoCertificateProviderResult> getAutoCertificateProviderPlain(GetAutoCertificateProviderPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getAutoCertificateProvider:getAutoCertificateProvider", TypeShape.of(GetAutoCertificateProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The autoscaling group data source can be used to search for and return an existing Autoscaling Group. You can provide a string for the name or id parameters which will be compared with provisioned Autoscaling Groups. If a single match is found, it will be returned.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetAutoscalingGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var autoscalingGroup = IonoscloudFunctions.getAutoscalingGroup(GetAutoscalingGroupArgs.builder()
     *             .name("test_ds")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoscalingGroupResult> getAutoscalingGroup() {
        return getAutoscalingGroup(GetAutoscalingGroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The autoscaling group data source can be used to search for and return an existing Autoscaling Group. You can provide a string for the name or id parameters which will be compared with provisioned Autoscaling Groups. If a single match is found, it will be returned.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetAutoscalingGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var autoscalingGroup = IonoscloudFunctions.getAutoscalingGroup(GetAutoscalingGroupArgs.builder()
     *             .name("test_ds")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoscalingGroupResult> getAutoscalingGroupPlain() {
        return getAutoscalingGroupPlain(GetAutoscalingGroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The autoscaling group data source can be used to search for and return an existing Autoscaling Group. You can provide a string for the name or id parameters which will be compared with provisioned Autoscaling Groups. If a single match is found, it will be returned.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetAutoscalingGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var autoscalingGroup = IonoscloudFunctions.getAutoscalingGroup(GetAutoscalingGroupArgs.builder()
     *             .name("test_ds")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoscalingGroupResult> getAutoscalingGroup(GetAutoscalingGroupArgs args) {
        return getAutoscalingGroup(args, InvokeOptions.Empty);
    }
    /**
     * The autoscaling group data source can be used to search for and return an existing Autoscaling Group. You can provide a string for the name or id parameters which will be compared with provisioned Autoscaling Groups. If a single match is found, it will be returned.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetAutoscalingGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var autoscalingGroup = IonoscloudFunctions.getAutoscalingGroup(GetAutoscalingGroupArgs.builder()
     *             .name("test_ds")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoscalingGroupResult> getAutoscalingGroupPlain(GetAutoscalingGroupPlainArgs args) {
        return getAutoscalingGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * The autoscaling group data source can be used to search for and return an existing Autoscaling Group. You can provide a string for the name or id parameters which will be compared with provisioned Autoscaling Groups. If a single match is found, it will be returned.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetAutoscalingGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var autoscalingGroup = IonoscloudFunctions.getAutoscalingGroup(GetAutoscalingGroupArgs.builder()
     *             .name("test_ds")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAutoscalingGroupResult> getAutoscalingGroup(GetAutoscalingGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getAutoscalingGroup:getAutoscalingGroup", TypeShape.of(GetAutoscalingGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The autoscaling group data source can be used to search for and return an existing Autoscaling Group. You can provide a string for the name or id parameters which will be compared with provisioned Autoscaling Groups. If a single match is found, it will be returned.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetAutoscalingGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var autoscalingGroup = IonoscloudFunctions.getAutoscalingGroup(GetAutoscalingGroupArgs.builder()
     *             .name("test_ds")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAutoscalingGroupResult> getAutoscalingGroupPlain(GetAutoscalingGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getAutoscalingGroup:getAutoscalingGroup", TypeShape.of(GetAutoscalingGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The autoscaling group servers data source can be used to search for and return existing servers that are part of a specific autoscaling group.
     * 
     */
    public static Output<GetAutoscalingGroupServersResult> getAutoscalingGroupServers(GetAutoscalingGroupServersArgs args) {
        return getAutoscalingGroupServers(args, InvokeOptions.Empty);
    }
    /**
     * The autoscaling group servers data source can be used to search for and return existing servers that are part of a specific autoscaling group.
     * 
     */
    public static CompletableFuture<GetAutoscalingGroupServersResult> getAutoscalingGroupServersPlain(GetAutoscalingGroupServersPlainArgs args) {
        return getAutoscalingGroupServersPlain(args, InvokeOptions.Empty);
    }
    /**
     * The autoscaling group servers data source can be used to search for and return existing servers that are part of a specific autoscaling group.
     * 
     */
    public static Output<GetAutoscalingGroupServersResult> getAutoscalingGroupServers(GetAutoscalingGroupServersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getAutoscalingGroupServers:getAutoscalingGroupServers", TypeShape.of(GetAutoscalingGroupServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The autoscaling group servers data source can be used to search for and return existing servers that are part of a specific autoscaling group.
     * 
     */
    public static CompletableFuture<GetAutoscalingGroupServersResult> getAutoscalingGroupServersPlain(GetAutoscalingGroupServersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getAutoscalingGroupServers:getAutoscalingGroupServers", TypeShape.of(GetAutoscalingGroupServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Backup Unit data source** can be used to search for and return an existing Backup Unit.
     * You can provide a string for either id or name parameters which will be compared with provisioned Backup Units.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetBackupUnitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getBackupUnit(GetBackupUnitArgs.builder()
     *             .name("Backup Unit Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBackupUnitResult> getBackupUnit() {
        return getBackupUnit(GetBackupUnitArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Backup Unit data source** can be used to search for and return an existing Backup Unit.
     * You can provide a string for either id or name parameters which will be compared with provisioned Backup Units.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetBackupUnitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getBackupUnit(GetBackupUnitArgs.builder()
     *             .name("Backup Unit Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBackupUnitResult> getBackupUnitPlain() {
        return getBackupUnitPlain(GetBackupUnitPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Backup Unit data source** can be used to search for and return an existing Backup Unit.
     * You can provide a string for either id or name parameters which will be compared with provisioned Backup Units.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetBackupUnitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getBackupUnit(GetBackupUnitArgs.builder()
     *             .name("Backup Unit Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBackupUnitResult> getBackupUnit(GetBackupUnitArgs args) {
        return getBackupUnit(args, InvokeOptions.Empty);
    }
    /**
     * The **Backup Unit data source** can be used to search for and return an existing Backup Unit.
     * You can provide a string for either id or name parameters which will be compared with provisioned Backup Units.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetBackupUnitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getBackupUnit(GetBackupUnitArgs.builder()
     *             .name("Backup Unit Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBackupUnitResult> getBackupUnitPlain(GetBackupUnitPlainArgs args) {
        return getBackupUnitPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Backup Unit data source** can be used to search for and return an existing Backup Unit.
     * You can provide a string for either id or name parameters which will be compared with provisioned Backup Units.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetBackupUnitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getBackupUnit(GetBackupUnitArgs.builder()
     *             .name("Backup Unit Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBackupUnitResult> getBackupUnit(GetBackupUnitArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getBackupUnit:getBackupUnit", TypeShape.of(GetBackupUnitResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Backup Unit data source** can be used to search for and return an existing Backup Unit.
     * You can provide a string for either id or name parameters which will be compared with provisioned Backup Units.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetBackupUnitArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getBackupUnit(GetBackupUnitArgs.builder()
     *             .name("Backup Unit Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBackupUnitResult> getBackupUnitPlain(GetBackupUnitPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getBackupUnit:getBackupUnit", TypeShape.of(GetBackupUnitResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Distribution data source can be used to search for and return an existing Distributions.
     * You can provide a string for the domain parameter which will be compared with provisioned Distributions.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique domains.
     * 
     * ## Example Usage
     * 
     * ### By Domain
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Domain with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
     *             .domain("example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCdnDistributionResult> getCdnDistribution() {
        return getCdnDistribution(GetCdnDistributionArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The Distribution data source can be used to search for and return an existing Distributions.
     * You can provide a string for the domain parameter which will be compared with provisioned Distributions.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique domains.
     * 
     * ## Example Usage
     * 
     * ### By Domain
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Domain with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
     *             .domain("example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCdnDistributionResult> getCdnDistributionPlain() {
        return getCdnDistributionPlain(GetCdnDistributionPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The Distribution data source can be used to search for and return an existing Distributions.
     * You can provide a string for the domain parameter which will be compared with provisioned Distributions.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique domains.
     * 
     * ## Example Usage
     * 
     * ### By Domain
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Domain with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
     *             .domain("example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCdnDistributionResult> getCdnDistribution(GetCdnDistributionArgs args) {
        return getCdnDistribution(args, InvokeOptions.Empty);
    }
    /**
     * The Distribution data source can be used to search for and return an existing Distributions.
     * You can provide a string for the domain parameter which will be compared with provisioned Distributions.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique domains.
     * 
     * ## Example Usage
     * 
     * ### By Domain
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Domain with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
     *             .domain("example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCdnDistributionResult> getCdnDistributionPlain(GetCdnDistributionPlainArgs args) {
        return getCdnDistributionPlain(args, InvokeOptions.Empty);
    }
    /**
     * The Distribution data source can be used to search for and return an existing Distributions.
     * You can provide a string for the domain parameter which will be compared with provisioned Distributions.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique domains.
     * 
     * ## Example Usage
     * 
     * ### By Domain
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Domain with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
     *             .domain("example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCdnDistributionResult> getCdnDistribution(GetCdnDistributionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getCdnDistribution:getCdnDistribution", TypeShape.of(GetCdnDistributionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The Distribution data source can be used to search for and return an existing Distributions.
     * You can provide a string for the domain parameter which will be compared with provisioned Distributions.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique domains.
     * 
     * ## Example Usage
     * 
     * ### By Domain
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Domain with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetCdnDistributionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getCdnDistribution(GetCdnDistributionArgs.builder()
     *             .domain("example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCdnDistributionResult> getCdnDistributionPlain(GetCdnDistributionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getCdnDistribution:getCdnDistribution", TypeShape.of(GetCdnDistributionResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetCertificateResult> getCertificate() {
        return getCertificate(GetCertificateArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetCertificateResult> getCertificatePlain() {
        return getCertificatePlain(GetCertificatePlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args) {
        return getCertificate(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args) {
        return getCertificatePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Container Registry data source** can be used to search for and return an existing Container Registry.
     * You can provide a string for the name parameter which will be compared with provisioned Container Registry.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()
     *             .name("container-registry-example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()
     *             .name("-example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetContainerRegistryResult> getContainerRegistry() {
        return getContainerRegistry(GetContainerRegistryArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Container Registry data source** can be used to search for and return an existing Container Registry.
     * You can provide a string for the name parameter which will be compared with provisioned Container Registry.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()
     *             .name("container-registry-example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()
     *             .name("-example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetContainerRegistryResult> getContainerRegistryPlain() {
        return getContainerRegistryPlain(GetContainerRegistryPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Container Registry data source** can be used to search for and return an existing Container Registry.
     * You can provide a string for the name parameter which will be compared with provisioned Container Registry.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()
     *             .name("container-registry-example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()
     *             .name("-example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetContainerRegistryResult> getContainerRegistry(GetContainerRegistryArgs args) {
        return getContainerRegistry(args, InvokeOptions.Empty);
    }
    /**
     * The **Container Registry data source** can be used to search for and return an existing Container Registry.
     * You can provide a string for the name parameter which will be compared with provisioned Container Registry.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()
     *             .name("container-registry-example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()
     *             .name("-example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetContainerRegistryResult> getContainerRegistryPlain(GetContainerRegistryPlainArgs args) {
        return getContainerRegistryPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Container Registry data source** can be used to search for and return an existing Container Registry.
     * You can provide a string for the name parameter which will be compared with provisioned Container Registry.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()
     *             .name("container-registry-example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()
     *             .name("-example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetContainerRegistryResult> getContainerRegistry(GetContainerRegistryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getContainerRegistry:getContainerRegistry", TypeShape.of(GetContainerRegistryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Container Registry data source** can be used to search for and return an existing Container Registry.
     * You can provide a string for the name parameter which will be compared with provisioned Container Registry.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()
     *             .name("container-registry-example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()
     *             .name("-example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetContainerRegistryResult> getContainerRegistryPlain(GetContainerRegistryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getContainerRegistry:getContainerRegistry", TypeShape.of(GetContainerRegistryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Container Registry Locations data source** can be used to get a list of Container Registry Locations
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistryLocations();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetContainerRegistryLocationsResult> getContainerRegistryLocations() {
        return getContainerRegistryLocations(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Container Registry Locations data source** can be used to get a list of Container Registry Locations
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistryLocations();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetContainerRegistryLocationsResult> getContainerRegistryLocationsPlain() {
        return getContainerRegistryLocationsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Container Registry Locations data source** can be used to get a list of Container Registry Locations
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistryLocations();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetContainerRegistryLocationsResult> getContainerRegistryLocations(InvokeArgs args) {
        return getContainerRegistryLocations(args, InvokeOptions.Empty);
    }
    /**
     * The **Container Registry Locations data source** can be used to get a list of Container Registry Locations
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistryLocations();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetContainerRegistryLocationsResult> getContainerRegistryLocationsPlain(InvokeArgs args) {
        return getContainerRegistryLocationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Container Registry Locations data source** can be used to get a list of Container Registry Locations
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistryLocations();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetContainerRegistryLocationsResult> getContainerRegistryLocations(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getContainerRegistryLocations:getContainerRegistryLocations", TypeShape.of(GetContainerRegistryLocationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Container Registry Locations data source** can be used to get a list of Container Registry Locations
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistryLocations();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetContainerRegistryLocationsResult> getContainerRegistryLocationsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getContainerRegistryLocations:getContainerRegistryLocations", TypeShape.of(GetContainerRegistryLocationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Container Registry Token data source** can be used to search for and return an existing Container Registry Token.
     * You can provide a string for the name parameter which will be compared with provisioned Container Registry Token.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistryToken(GetContainerRegistryTokenArgs.builder()
     *             .registryId(ionoscloud_container_registry.example().id())
     *             .name("container-registry-token-example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistryToken(GetContainerRegistryTokenArgs.builder()
     *             .registryId(ionoscloud_container_registry.example().id())
     *             .name("-example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetContainerRegistryTokenResult> getContainerRegistryToken(GetContainerRegistryTokenArgs args) {
        return getContainerRegistryToken(args, InvokeOptions.Empty);
    }
    /**
     * The **Container Registry Token data source** can be used to search for and return an existing Container Registry Token.
     * You can provide a string for the name parameter which will be compared with provisioned Container Registry Token.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistryToken(GetContainerRegistryTokenArgs.builder()
     *             .registryId(ionoscloud_container_registry.example().id())
     *             .name("container-registry-token-example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistryToken(GetContainerRegistryTokenArgs.builder()
     *             .registryId(ionoscloud_container_registry.example().id())
     *             .name("-example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetContainerRegistryTokenResult> getContainerRegistryTokenPlain(GetContainerRegistryTokenPlainArgs args) {
        return getContainerRegistryTokenPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Container Registry Token data source** can be used to search for and return an existing Container Registry Token.
     * You can provide a string for the name parameter which will be compared with provisioned Container Registry Token.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistryToken(GetContainerRegistryTokenArgs.builder()
     *             .registryId(ionoscloud_container_registry.example().id())
     *             .name("container-registry-token-example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistryToken(GetContainerRegistryTokenArgs.builder()
     *             .registryId(ionoscloud_container_registry.example().id())
     *             .name("-example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetContainerRegistryTokenResult> getContainerRegistryToken(GetContainerRegistryTokenArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getContainerRegistryToken:getContainerRegistryToken", TypeShape.of(GetContainerRegistryTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Container Registry Token data source** can be used to search for and return an existing Container Registry Token.
     * You can provide a string for the name parameter which will be compared with provisioned Container Registry Token.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistryToken(GetContainerRegistryTokenArgs.builder()
     *             .registryId(ionoscloud_container_registry.example().id())
     *             .name("container-registry-token-example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetContainerRegistryTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getContainerRegistryToken(GetContainerRegistryTokenArgs.builder()
     *             .registryId(ionoscloud_container_registry.example().id())
     *             .name("-example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetContainerRegistryTokenResult> getContainerRegistryTokenPlain(GetContainerRegistryTokenPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getContainerRegistryToken:getContainerRegistryToken", TypeShape.of(GetContainerRegistryTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Cube Server data source** can be used to search for and return existing servers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetCubeServerResult> getCubeServer(GetCubeServerArgs args) {
        return getCubeServer(args, InvokeOptions.Empty);
    }
    /**
     * The **Cube Server data source** can be used to search for and return existing servers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCubeServerResult> getCubeServerPlain(GetCubeServerPlainArgs args) {
        return getCubeServerPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Cube Server data source** can be used to search for and return existing servers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetCubeServerResult> getCubeServer(GetCubeServerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getCubeServer:getCubeServer", TypeShape.of(GetCubeServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Cube Server data source** can be used to search for and return existing servers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCubeServerResult> getCubeServerPlain(GetCubeServerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getCubeServer:getCubeServer", TypeShape.of(GetCubeServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Datacenter data source** can be used to search for and return an existing Virtual Data Center.
     * You can provide a string for the name and location parameters which will be compared with provisioned Virtual Data Centers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name &amp; Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDatacenterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDatacenter(GetDatacenterArgs.builder()
     *             .location("us/las")
     *             .name("Datacenter Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDatacenterResult> getDatacenter() {
        return getDatacenter(GetDatacenterArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Datacenter data source** can be used to search for and return an existing Virtual Data Center.
     * You can provide a string for the name and location parameters which will be compared with provisioned Virtual Data Centers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name &amp; Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDatacenterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDatacenter(GetDatacenterArgs.builder()
     *             .location("us/las")
     *             .name("Datacenter Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDatacenterResult> getDatacenterPlain() {
        return getDatacenterPlain(GetDatacenterPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Datacenter data source** can be used to search for and return an existing Virtual Data Center.
     * You can provide a string for the name and location parameters which will be compared with provisioned Virtual Data Centers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name &amp; Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDatacenterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDatacenter(GetDatacenterArgs.builder()
     *             .location("us/las")
     *             .name("Datacenter Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDatacenterResult> getDatacenter(GetDatacenterArgs args) {
        return getDatacenter(args, InvokeOptions.Empty);
    }
    /**
     * The **Datacenter data source** can be used to search for and return an existing Virtual Data Center.
     * You can provide a string for the name and location parameters which will be compared with provisioned Virtual Data Centers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name &amp; Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDatacenterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDatacenter(GetDatacenterArgs.builder()
     *             .location("us/las")
     *             .name("Datacenter Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDatacenterResult> getDatacenterPlain(GetDatacenterPlainArgs args) {
        return getDatacenterPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Datacenter data source** can be used to search for and return an existing Virtual Data Center.
     * You can provide a string for the name and location parameters which will be compared with provisioned Virtual Data Centers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name &amp; Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDatacenterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDatacenter(GetDatacenterArgs.builder()
     *             .location("us/las")
     *             .name("Datacenter Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDatacenterResult> getDatacenter(GetDatacenterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getDatacenter:getDatacenter", TypeShape.of(GetDatacenterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Datacenter data source** can be used to search for and return an existing Virtual Data Center.
     * You can provide a string for the name and location parameters which will be compared with provisioned Virtual Data Centers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name &amp; Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDatacenterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDatacenter(GetDatacenterArgs.builder()
     *             .location("us/las")
     *             .name("Datacenter Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDatacenterResult> getDatacenterPlain(GetDatacenterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getDatacenter:getDatacenter", TypeShape.of(GetDatacenterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Dataplatform Cluster Data Source** can be used to search for and return an existing Dataplatform Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDataplatformClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformCluster(GetDataplatformClusterArgs.builder()
     *             .name("Dataplatform_Cluster_Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDataplatformClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformCluster(GetDataplatformClusterArgs.builder()
     *             .name("_Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDataplatformClusterResult> getDataplatformCluster() {
        return getDataplatformCluster(GetDataplatformClusterArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Dataplatform Cluster Data Source** can be used to search for and return an existing Dataplatform Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDataplatformClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformCluster(GetDataplatformClusterArgs.builder()
     *             .name("Dataplatform_Cluster_Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDataplatformClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformCluster(GetDataplatformClusterArgs.builder()
     *             .name("_Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDataplatformClusterResult> getDataplatformClusterPlain() {
        return getDataplatformClusterPlain(GetDataplatformClusterPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Dataplatform Cluster Data Source** can be used to search for and return an existing Dataplatform Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDataplatformClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformCluster(GetDataplatformClusterArgs.builder()
     *             .name("Dataplatform_Cluster_Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDataplatformClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformCluster(GetDataplatformClusterArgs.builder()
     *             .name("_Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDataplatformClusterResult> getDataplatformCluster(GetDataplatformClusterArgs args) {
        return getDataplatformCluster(args, InvokeOptions.Empty);
    }
    /**
     * The **Dataplatform Cluster Data Source** can be used to search for and return an existing Dataplatform Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDataplatformClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformCluster(GetDataplatformClusterArgs.builder()
     *             .name("Dataplatform_Cluster_Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDataplatformClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformCluster(GetDataplatformClusterArgs.builder()
     *             .name("_Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDataplatformClusterResult> getDataplatformClusterPlain(GetDataplatformClusterPlainArgs args) {
        return getDataplatformClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Dataplatform Cluster Data Source** can be used to search for and return an existing Dataplatform Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDataplatformClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformCluster(GetDataplatformClusterArgs.builder()
     *             .name("Dataplatform_Cluster_Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDataplatformClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformCluster(GetDataplatformClusterArgs.builder()
     *             .name("_Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDataplatformClusterResult> getDataplatformCluster(GetDataplatformClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getDataplatformCluster:getDataplatformCluster", TypeShape.of(GetDataplatformClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Dataplatform Cluster Data Source** can be used to search for and return an existing Dataplatform Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDataplatformClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformCluster(GetDataplatformClusterArgs.builder()
     *             .name("Dataplatform_Cluster_Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDataplatformClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformCluster(GetDataplatformClusterArgs.builder()
     *             .name("_Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDataplatformClusterResult> getDataplatformClusterPlain(GetDataplatformClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getDataplatformCluster:getDataplatformCluster", TypeShape.of(GetDataplatformClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Dataplatform Node Pool Data Source** can be used to search for and return an existing Dataplatform Node Pool under a Dataplatform Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetDataplatformNodePoolResult> getDataplatformNodePool(GetDataplatformNodePoolArgs args) {
        return getDataplatformNodePool(args, InvokeOptions.Empty);
    }
    /**
     * The **Dataplatform Node Pool Data Source** can be used to search for and return an existing Dataplatform Node Pool under a Dataplatform Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetDataplatformNodePoolResult> getDataplatformNodePoolPlain(GetDataplatformNodePoolPlainArgs args) {
        return getDataplatformNodePoolPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Dataplatform Node Pool Data Source** can be used to search for and return an existing Dataplatform Node Pool under a Dataplatform Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetDataplatformNodePoolResult> getDataplatformNodePool(GetDataplatformNodePoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getDataplatformNodePool:getDataplatformNodePool", TypeShape.of(GetDataplatformNodePoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Dataplatform Node Pool Data Source** can be used to search for and return an existing Dataplatform Node Pool under a Dataplatform Cluster.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetDataplatformNodePoolResult> getDataplatformNodePoolPlain(GetDataplatformNodePoolPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getDataplatformNodePool:getDataplatformNodePool", TypeShape.of(GetDataplatformNodePoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Dataplatform Node Pools Data Source** can be used to search for and return a list of existing Dataplatform Node Pools under a Dataplatform Cluster.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetDataplatformNodePoolsResult> getDataplatformNodePools(GetDataplatformNodePoolsArgs args) {
        return getDataplatformNodePools(args, InvokeOptions.Empty);
    }
    /**
     * The **Dataplatform Node Pools Data Source** can be used to search for and return a list of existing Dataplatform Node Pools under a Dataplatform Cluster.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetDataplatformNodePoolsResult> getDataplatformNodePoolsPlain(GetDataplatformNodePoolsPlainArgs args) {
        return getDataplatformNodePoolsPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Dataplatform Node Pools Data Source** can be used to search for and return a list of existing Dataplatform Node Pools under a Dataplatform Cluster.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetDataplatformNodePoolsResult> getDataplatformNodePools(GetDataplatformNodePoolsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getDataplatformNodePools:getDataplatformNodePools", TypeShape.of(GetDataplatformNodePoolsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Dataplatform Node Pools Data Source** can be used to search for and return a list of existing Dataplatform Node Pools under a Dataplatform Cluster.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetDataplatformNodePoolsResult> getDataplatformNodePoolsPlain(GetDataplatformNodePoolsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getDataplatformNodePools:getDataplatformNodePools", TypeShape.of(GetDataplatformNodePoolsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Dataplatform Versions Data Source** can be used to search for and retrieve list of available Managed Dataplatform API versions.
     * 
     * ## Example Usage
     * 
     * ### Retrieve list of Managed Dataplatform API versions
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformVersions();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDataplatformVersionsResult> getDataplatformVersions() {
        return getDataplatformVersions(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Dataplatform Versions Data Source** can be used to search for and retrieve list of available Managed Dataplatform API versions.
     * 
     * ## Example Usage
     * 
     * ### Retrieve list of Managed Dataplatform API versions
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformVersions();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDataplatformVersionsResult> getDataplatformVersionsPlain() {
        return getDataplatformVersionsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Dataplatform Versions Data Source** can be used to search for and retrieve list of available Managed Dataplatform API versions.
     * 
     * ## Example Usage
     * 
     * ### Retrieve list of Managed Dataplatform API versions
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformVersions();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDataplatformVersionsResult> getDataplatformVersions(InvokeArgs args) {
        return getDataplatformVersions(args, InvokeOptions.Empty);
    }
    /**
     * The **Dataplatform Versions Data Source** can be used to search for and retrieve list of available Managed Dataplatform API versions.
     * 
     * ## Example Usage
     * 
     * ### Retrieve list of Managed Dataplatform API versions
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformVersions();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDataplatformVersionsResult> getDataplatformVersionsPlain(InvokeArgs args) {
        return getDataplatformVersionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Dataplatform Versions Data Source** can be used to search for and retrieve list of available Managed Dataplatform API versions.
     * 
     * ## Example Usage
     * 
     * ### Retrieve list of Managed Dataplatform API versions
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformVersions();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDataplatformVersionsResult> getDataplatformVersions(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getDataplatformVersions:getDataplatformVersions", TypeShape.of(GetDataplatformVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Dataplatform Versions Data Source** can be used to search for and retrieve list of available Managed Dataplatform API versions.
     * 
     * ## Example Usage
     * 
     * ### Retrieve list of Managed Dataplatform API versions
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDataplatformVersions();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDataplatformVersionsResult> getDataplatformVersionsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getDataplatformVersions:getDataplatformVersions", TypeShape.of(GetDataplatformVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DNS Record** can be used to search for and return an existing DNS Record.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **ionoscloud_dns_record** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetDnsRecordResult> getDnsRecord(GetDnsRecordArgs args) {
        return getDnsRecord(args, InvokeOptions.Empty);
    }
    /**
     * The **DNS Record** can be used to search for and return an existing DNS Record.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **ionoscloud_dns_record** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetDnsRecordResult> getDnsRecordPlain(GetDnsRecordPlainArgs args) {
        return getDnsRecordPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **DNS Record** can be used to search for and return an existing DNS Record.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **ionoscloud_dns_record** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetDnsRecordResult> getDnsRecord(GetDnsRecordArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getDnsRecord:getDnsRecord", TypeShape.of(GetDnsRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DNS Record** can be used to search for and return an existing DNS Record.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **ionoscloud_dns_record** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetDnsRecordResult> getDnsRecordPlain(GetDnsRecordPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getDnsRecord:getDnsRecord", TypeShape.of(GetDnsRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DNS Zone** can be used to search for and return an existing DNS Zone.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **ionoscloud_dns_zone** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     * ### By name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDnsZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDnsZone(GetDnsZoneArgs.builder()
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By name with partial match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDnsZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDnsZone(GetDnsZoneArgs.builder()
     *             .name("example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneResult> getDnsZone() {
        return getDnsZone(GetDnsZoneArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **DNS Zone** can be used to search for and return an existing DNS Zone.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **ionoscloud_dns_zone** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     * ### By name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDnsZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDnsZone(GetDnsZoneArgs.builder()
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By name with partial match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDnsZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDnsZone(GetDnsZoneArgs.builder()
     *             .name("example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneResult> getDnsZonePlain() {
        return getDnsZonePlain(GetDnsZonePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **DNS Zone** can be used to search for and return an existing DNS Zone.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **ionoscloud_dns_zone** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     * ### By name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDnsZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDnsZone(GetDnsZoneArgs.builder()
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By name with partial match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDnsZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDnsZone(GetDnsZoneArgs.builder()
     *             .name("example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneResult> getDnsZone(GetDnsZoneArgs args) {
        return getDnsZone(args, InvokeOptions.Empty);
    }
    /**
     * The **DNS Zone** can be used to search for and return an existing DNS Zone.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **ionoscloud_dns_zone** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     * ### By name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDnsZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDnsZone(GetDnsZoneArgs.builder()
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By name with partial match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDnsZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDnsZone(GetDnsZoneArgs.builder()
     *             .name("example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneResult> getDnsZonePlain(GetDnsZonePlainArgs args) {
        return getDnsZonePlain(args, InvokeOptions.Empty);
    }
    /**
     * The **DNS Zone** can be used to search for and return an existing DNS Zone.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **ionoscloud_dns_zone** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     * ### By name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDnsZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDnsZone(GetDnsZoneArgs.builder()
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By name with partial match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDnsZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDnsZone(GetDnsZoneArgs.builder()
     *             .name("example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDnsZoneResult> getDnsZone(GetDnsZoneArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getDnsZone:getDnsZone", TypeShape.of(GetDnsZoneResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **DNS Zone** can be used to search for and return an existing DNS Zone.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **ionoscloud_dns_zone** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     * ### By name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDnsZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDnsZone(GetDnsZoneArgs.builder()
     *             .name("example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By name with partial match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetDnsZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getDnsZone(GetDnsZoneArgs.builder()
     *             .name("example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDnsZoneResult> getDnsZonePlain(GetDnsZonePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getDnsZone:getDnsZone", TypeShape.of(GetDnsZoneResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Firewall data source** can be used to search for and return an existing FirewallRules.
     * You can provide a string for either id or name parameters which will be compared with provisioned Firewall Rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetFirewallResult> getFirewall(GetFirewallArgs args) {
        return getFirewall(args, InvokeOptions.Empty);
    }
    /**
     * The **Firewall data source** can be used to search for and return an existing FirewallRules.
     * You can provide a string for either id or name parameters which will be compared with provisioned Firewall Rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetFirewallResult> getFirewallPlain(GetFirewallPlainArgs args) {
        return getFirewallPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Firewall data source** can be used to search for and return an existing FirewallRules.
     * You can provide a string for either id or name parameters which will be compared with provisioned Firewall Rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetFirewallResult> getFirewall(GetFirewallArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getFirewall:getFirewall", TypeShape.of(GetFirewallResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Firewall data source** can be used to search for and return an existing FirewallRules.
     * You can provide a string for either id or name parameters which will be compared with provisioned Firewall Rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetFirewallResult> getFirewallPlain(GetFirewallPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getFirewall:getFirewall", TypeShape.of(GetFirewallResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Group data source** can be used to search for and return existing groups.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getGroup(GetGroupArgs.builder()
     *             .name("Group Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGroupResult> getGroup() {
        return getGroup(GetGroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Group data source** can be used to search for and return existing groups.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getGroup(GetGroupArgs.builder()
     *             .name("Group Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain() {
        return getGroupPlain(GetGroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Group data source** can be used to search for and return existing groups.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getGroup(GetGroupArgs.builder()
     *             .name("Group Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args) {
        return getGroup(args, InvokeOptions.Empty);
    }
    /**
     * The **Group data source** can be used to search for and return existing groups.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getGroup(GetGroupArgs.builder()
     *             .name("Group Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain(GetGroupPlainArgs args) {
        return getGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Group data source** can be used to search for and return existing groups.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getGroup(GetGroupArgs.builder()
     *             .name("Group Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Group data source** can be used to search for and return existing groups.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getGroup(GetGroupArgs.builder()
     *             .name("Group Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain(GetGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Image data source** can be used to search for and return an existing image which can then be used to provision a server.\
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result. In case multiple matches are found, enable debug(`TF_LOG=debug`) to show the name and location of the images.
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var cdrom = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .cloudInit("NONE")
     *             .imageAlias("ubuntu:latest_iso")
     *             .location("de/txl")
     *             .type("CDROM")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Finds an image with alias `ubuntu:latest_iso`, in location `de/txl`, that does not support `cloud_init` and is of type `CDROM`.
     * 
     * ### Additional Examples
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .imageAlias("ubuntu:latest")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * Finds an image with alias `ubuntu:latest` in location `de/txl`. Uses exact matching on both fields.
     * 
     * ### Additional Examples
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .cloudInit("V1")
     *             .imageAlias("ubuntu:latest")
     *             .location("us/ewr")
     *             .type("HDD")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Finds an image named `ubuntu-20.04.6` in location `de/txl`. Uses exact matching.
     * 
     */
    public static Output<GetImageResult> getImage() {
        return getImage(GetImageArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Image data source** can be used to search for and return an existing image which can then be used to provision a server.\
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result. In case multiple matches are found, enable debug(`TF_LOG=debug`) to show the name and location of the images.
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var cdrom = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .cloudInit("NONE")
     *             .imageAlias("ubuntu:latest_iso")
     *             .location("de/txl")
     *             .type("CDROM")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Finds an image with alias `ubuntu:latest_iso`, in location `de/txl`, that does not support `cloud_init` and is of type `CDROM`.
     * 
     * ### Additional Examples
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .imageAlias("ubuntu:latest")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * Finds an image with alias `ubuntu:latest` in location `de/txl`. Uses exact matching on both fields.
     * 
     * ### Additional Examples
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .cloudInit("V1")
     *             .imageAlias("ubuntu:latest")
     *             .location("us/ewr")
     *             .type("HDD")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Finds an image named `ubuntu-20.04.6` in location `de/txl`. Uses exact matching.
     * 
     */
    public static CompletableFuture<GetImageResult> getImagePlain() {
        return getImagePlain(GetImagePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Image data source** can be used to search for and return an existing image which can then be used to provision a server.\
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result. In case multiple matches are found, enable debug(`TF_LOG=debug`) to show the name and location of the images.
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var cdrom = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .cloudInit("NONE")
     *             .imageAlias("ubuntu:latest_iso")
     *             .location("de/txl")
     *             .type("CDROM")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Finds an image with alias `ubuntu:latest_iso`, in location `de/txl`, that does not support `cloud_init` and is of type `CDROM`.
     * 
     * ### Additional Examples
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .imageAlias("ubuntu:latest")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * Finds an image with alias `ubuntu:latest` in location `de/txl`. Uses exact matching on both fields.
     * 
     * ### Additional Examples
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .cloudInit("V1")
     *             .imageAlias("ubuntu:latest")
     *             .location("us/ewr")
     *             .type("HDD")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Finds an image named `ubuntu-20.04.6` in location `de/txl`. Uses exact matching.
     * 
     */
    public static Output<GetImageResult> getImage(GetImageArgs args) {
        return getImage(args, InvokeOptions.Empty);
    }
    /**
     * The **Image data source** can be used to search for and return an existing image which can then be used to provision a server.\
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result. In case multiple matches are found, enable debug(`TF_LOG=debug`) to show the name and location of the images.
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var cdrom = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .cloudInit("NONE")
     *             .imageAlias("ubuntu:latest_iso")
     *             .location("de/txl")
     *             .type("CDROM")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Finds an image with alias `ubuntu:latest_iso`, in location `de/txl`, that does not support `cloud_init` and is of type `CDROM`.
     * 
     * ### Additional Examples
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .imageAlias("ubuntu:latest")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * Finds an image with alias `ubuntu:latest` in location `de/txl`. Uses exact matching on both fields.
     * 
     * ### Additional Examples
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .cloudInit("V1")
     *             .imageAlias("ubuntu:latest")
     *             .location("us/ewr")
     *             .type("HDD")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Finds an image named `ubuntu-20.04.6` in location `de/txl`. Uses exact matching.
     * 
     */
    public static CompletableFuture<GetImageResult> getImagePlain(GetImagePlainArgs args) {
        return getImagePlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Image data source** can be used to search for and return an existing image which can then be used to provision a server.\
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result. In case multiple matches are found, enable debug(`TF_LOG=debug`) to show the name and location of the images.
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var cdrom = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .cloudInit("NONE")
     *             .imageAlias("ubuntu:latest_iso")
     *             .location("de/txl")
     *             .type("CDROM")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Finds an image with alias `ubuntu:latest_iso`, in location `de/txl`, that does not support `cloud_init` and is of type `CDROM`.
     * 
     * ### Additional Examples
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .imageAlias("ubuntu:latest")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * Finds an image with alias `ubuntu:latest` in location `de/txl`. Uses exact matching on both fields.
     * 
     * ### Additional Examples
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .cloudInit("V1")
     *             .imageAlias("ubuntu:latest")
     *             .location("us/ewr")
     *             .type("HDD")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Finds an image named `ubuntu-20.04.6` in location `de/txl`. Uses exact matching.
     * 
     */
    public static Output<GetImageResult> getImage(GetImageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getImage:getImage", TypeShape.of(GetImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Image data source** can be used to search for and return an existing image which can then be used to provision a server.\
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result. In case multiple matches are found, enable debug(`TF_LOG=debug`) to show the name and location of the images.
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var cdrom = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .cloudInit("NONE")
     *             .imageAlias("ubuntu:latest_iso")
     *             .location("de/txl")
     *             .type("CDROM")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Finds an image with alias `ubuntu:latest_iso`, in location `de/txl`, that does not support `cloud_init` and is of type `CDROM`.
     * 
     * ### Additional Examples
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .imageAlias("ubuntu:latest")
     *             .location("de/txl")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * Finds an image with alias `ubuntu:latest` in location `de/txl`. Uses exact matching on both fields.
     * 
     * ### Additional Examples
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetImageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getImage(GetImageArgs.builder()
     *             .cloudInit("V1")
     *             .imageAlias("ubuntu:latest")
     *             .location("us/ewr")
     *             .type("HDD")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Finds an image named `ubuntu-20.04.6` in location `de/txl`. Uses exact matching.
     * 
     */
    public static CompletableFuture<GetImageResult> getImagePlain(GetImagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getImage:getImage", TypeShape.of(GetImageResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetInmemorydbReplicasetResult> getInmemorydbReplicaset(GetInmemorydbReplicasetArgs args) {
        return getInmemorydbReplicaset(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetInmemorydbReplicasetResult> getInmemorydbReplicasetPlain(GetInmemorydbReplicasetPlainArgs args) {
        return getInmemorydbReplicasetPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetInmemorydbReplicasetResult> getInmemorydbReplicaset(GetInmemorydbReplicasetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getInmemorydbReplicaset:getInmemorydbReplicaset", TypeShape.of(GetInmemorydbReplicasetResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetInmemorydbReplicasetResult> getInmemorydbReplicasetPlain(GetInmemorydbReplicasetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getInmemorydbReplicaset:getInmemorydbReplicaset", TypeShape.of(GetInmemorydbReplicasetResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetInmemorydbSnapshotResult> getInmemorydbSnapshot(GetInmemorydbSnapshotArgs args) {
        return getInmemorydbSnapshot(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetInmemorydbSnapshotResult> getInmemorydbSnapshotPlain(GetInmemorydbSnapshotPlainArgs args) {
        return getInmemorydbSnapshotPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetInmemorydbSnapshotResult> getInmemorydbSnapshot(GetInmemorydbSnapshotArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getInmemorydbSnapshot:getInmemorydbSnapshot", TypeShape.of(GetInmemorydbSnapshotResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetInmemorydbSnapshotResult> getInmemorydbSnapshotPlain(GetInmemorydbSnapshotPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getInmemorydbSnapshot:getInmemorydbSnapshot", TypeShape.of(GetInmemorydbSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **IP Block data source** can be used to search for and return an existing Ip Block.
     * You can provide a string for the id, the name or the location parameters which will be compared with the provisioned Ip Blocks.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetIpblockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getIpblock(GetIpblockArgs.builder()
     *             .name("IP Block Name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt; 
     * 
     * ### By Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetIpblockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getIpblock(GetIpblockArgs.builder()
     *             .location("us/las")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt; 
     * 
     * ### By Name &amp; Location
     * 
     */
    public static Output<GetIpblockResult> getIpblock() {
        return getIpblock(GetIpblockArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **IP Block data source** can be used to search for and return an existing Ip Block.
     * You can provide a string for the id, the name or the location parameters which will be compared with the provisioned Ip Blocks.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetIpblockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getIpblock(GetIpblockArgs.builder()
     *             .name("IP Block Name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt; 
     * 
     * ### By Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetIpblockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getIpblock(GetIpblockArgs.builder()
     *             .location("us/las")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt; 
     * 
     * ### By Name &amp; Location
     * 
     */
    public static CompletableFuture<GetIpblockResult> getIpblockPlain() {
        return getIpblockPlain(GetIpblockPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **IP Block data source** can be used to search for and return an existing Ip Block.
     * You can provide a string for the id, the name or the location parameters which will be compared with the provisioned Ip Blocks.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetIpblockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getIpblock(GetIpblockArgs.builder()
     *             .name("IP Block Name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt; 
     * 
     * ### By Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetIpblockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getIpblock(GetIpblockArgs.builder()
     *             .location("us/las")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt; 
     * 
     * ### By Name &amp; Location
     * 
     */
    public static Output<GetIpblockResult> getIpblock(GetIpblockArgs args) {
        return getIpblock(args, InvokeOptions.Empty);
    }
    /**
     * The **IP Block data source** can be used to search for and return an existing Ip Block.
     * You can provide a string for the id, the name or the location parameters which will be compared with the provisioned Ip Blocks.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetIpblockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getIpblock(GetIpblockArgs.builder()
     *             .name("IP Block Name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt; 
     * 
     * ### By Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetIpblockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getIpblock(GetIpblockArgs.builder()
     *             .location("us/las")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt; 
     * 
     * ### By Name &amp; Location
     * 
     */
    public static CompletableFuture<GetIpblockResult> getIpblockPlain(GetIpblockPlainArgs args) {
        return getIpblockPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **IP Block data source** can be used to search for and return an existing Ip Block.
     * You can provide a string for the id, the name or the location parameters which will be compared with the provisioned Ip Blocks.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetIpblockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getIpblock(GetIpblockArgs.builder()
     *             .name("IP Block Name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt; 
     * 
     * ### By Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetIpblockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getIpblock(GetIpblockArgs.builder()
     *             .location("us/las")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt; 
     * 
     * ### By Name &amp; Location
     * 
     */
    public static Output<GetIpblockResult> getIpblock(GetIpblockArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getIpblock:getIpblock", TypeShape.of(GetIpblockResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **IP Block data source** can be used to search for and return an existing Ip Block.
     * You can provide a string for the id, the name or the location parameters which will be compared with the provisioned Ip Blocks.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetIpblockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getIpblock(GetIpblockArgs.builder()
     *             .name("IP Block Name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt; 
     * 
     * ### By Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetIpblockArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getIpblock(GetIpblockArgs.builder()
     *             .location("us/las")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt; 
     * 
     * ### By Name &amp; Location
     * 
     */
    public static CompletableFuture<GetIpblockResult> getIpblockPlain(GetIpblockPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getIpblock:getIpblock", TypeShape.of(GetIpblockResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **IP Failover data source** can be used to search for and return an existing IP Failover object.
     * You need to provide the datacenter_id and the id of the lan to get the ip failover object for the provided datacenter.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * 
     */
    public static Output<GetIpfailoverResult> getIpfailover(GetIpfailoverArgs args) {
        return getIpfailover(args, InvokeOptions.Empty);
    }
    /**
     * The **IP Failover data source** can be used to search for and return an existing IP Failover object.
     * You need to provide the datacenter_id and the id of the lan to get the ip failover object for the provided datacenter.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * 
     */
    public static CompletableFuture<GetIpfailoverResult> getIpfailoverPlain(GetIpfailoverPlainArgs args) {
        return getIpfailoverPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **IP Failover data source** can be used to search for and return an existing IP Failover object.
     * You need to provide the datacenter_id and the id of the lan to get the ip failover object for the provided datacenter.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * 
     */
    public static Output<GetIpfailoverResult> getIpfailover(GetIpfailoverArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getIpfailover:getIpfailover", TypeShape.of(GetIpfailoverResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **IP Failover data source** can be used to search for and return an existing IP Failover object.
     * You need to provide the datacenter_id and the id of the lan to get the ip failover object for the provided datacenter.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * 
     */
    public static CompletableFuture<GetIpfailoverResult> getIpfailoverPlain(GetIpfailoverPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getIpfailover:getIpfailover", TypeShape.of(GetIpfailoverResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **k8s Cluster data source** can be used to search for and return existing k8s clusters.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetK8sClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getK8sCluster(GetK8sClusterArgs.builder()
     *             .name("K8s Cluster Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetK8sClusterResult> getK8sCluster() {
        return getK8sCluster(GetK8sClusterArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **k8s Cluster data source** can be used to search for and return existing k8s clusters.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetK8sClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getK8sCluster(GetK8sClusterArgs.builder()
     *             .name("K8s Cluster Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetK8sClusterResult> getK8sClusterPlain() {
        return getK8sClusterPlain(GetK8sClusterPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **k8s Cluster data source** can be used to search for and return existing k8s clusters.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetK8sClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getK8sCluster(GetK8sClusterArgs.builder()
     *             .name("K8s Cluster Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetK8sClusterResult> getK8sCluster(GetK8sClusterArgs args) {
        return getK8sCluster(args, InvokeOptions.Empty);
    }
    /**
     * The **k8s Cluster data source** can be used to search for and return existing k8s clusters.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetK8sClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getK8sCluster(GetK8sClusterArgs.builder()
     *             .name("K8s Cluster Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetK8sClusterResult> getK8sClusterPlain(GetK8sClusterPlainArgs args) {
        return getK8sClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **k8s Cluster data source** can be used to search for and return existing k8s clusters.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetK8sClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getK8sCluster(GetK8sClusterArgs.builder()
     *             .name("K8s Cluster Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetK8sClusterResult> getK8sCluster(GetK8sClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getK8sCluster:getK8sCluster", TypeShape.of(GetK8sClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **k8s Cluster data source** can be used to search for and return existing k8s clusters.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetK8sClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getK8sCluster(GetK8sClusterArgs.builder()
     *             .name("K8s Cluster Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetK8sClusterResult> getK8sClusterPlain(GetK8sClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getK8sCluster:getK8sCluster", TypeShape.of(GetK8sClusterResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetK8sClustersResult> getK8sClusters() {
        return getK8sClusters(GetK8sClustersArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetK8sClustersResult> getK8sClustersPlain() {
        return getK8sClustersPlain(GetK8sClustersPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetK8sClustersResult> getK8sClusters(GetK8sClustersArgs args) {
        return getK8sClusters(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetK8sClustersResult> getK8sClustersPlain(GetK8sClustersPlainArgs args) {
        return getK8sClustersPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetK8sClustersResult> getK8sClusters(GetK8sClustersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getK8sClusters:getK8sClusters", TypeShape.of(GetK8sClustersResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetK8sClustersResult> getK8sClustersPlain(GetK8sClustersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getK8sClusters:getK8sClusters", TypeShape.of(GetK8sClustersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **k8s Node Pool** data source can be used to search for and return existing k8s Node Pools.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetK8sNodePoolResult> getK8sNodePool(GetK8sNodePoolArgs args) {
        return getK8sNodePool(args, InvokeOptions.Empty);
    }
    /**
     * The **k8s Node Pool** data source can be used to search for and return existing k8s Node Pools.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetK8sNodePoolResult> getK8sNodePoolPlain(GetK8sNodePoolPlainArgs args) {
        return getK8sNodePoolPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **k8s Node Pool** data source can be used to search for and return existing k8s Node Pools.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetK8sNodePoolResult> getK8sNodePool(GetK8sNodePoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getK8sNodePool:getK8sNodePool", TypeShape.of(GetK8sNodePoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **k8s Node Pool** data source can be used to search for and return existing k8s Node Pools.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetK8sNodePoolResult> getK8sNodePoolPlain(GetK8sNodePoolPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getK8sNodePool:getK8sNodePool", TypeShape.of(GetK8sNodePoolResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetK8sNodePoolNodesResult> getK8sNodePoolNodes(GetK8sNodePoolNodesArgs args) {
        return getK8sNodePoolNodes(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetK8sNodePoolNodesResult> getK8sNodePoolNodesPlain(GetK8sNodePoolNodesPlainArgs args) {
        return getK8sNodePoolNodesPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetK8sNodePoolNodesResult> getK8sNodePoolNodes(GetK8sNodePoolNodesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getK8sNodePoolNodes:getK8sNodePoolNodes", TypeShape.of(GetK8sNodePoolNodesResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetK8sNodePoolNodesResult> getK8sNodePoolNodesPlain(GetK8sNodePoolNodesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getK8sNodePoolNodes:getK8sNodePoolNodes", TypeShape.of(GetK8sNodePoolNodesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Kafka Cluster data source** can be used to search for and return an existing Kafka Cluster.
     * You can provide a string for the name parameter which will be compared with provisioned Kafka Clusters.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetKafkaClusterResult> getKafkaCluster(GetKafkaClusterArgs args) {
        return getKafkaCluster(args, InvokeOptions.Empty);
    }
    /**
     * The **Kafka Cluster data source** can be used to search for and return an existing Kafka Cluster.
     * You can provide a string for the name parameter which will be compared with provisioned Kafka Clusters.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetKafkaClusterResult> getKafkaClusterPlain(GetKafkaClusterPlainArgs args) {
        return getKafkaClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Kafka Cluster data source** can be used to search for and return an existing Kafka Cluster.
     * You can provide a string for the name parameter which will be compared with provisioned Kafka Clusters.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetKafkaClusterResult> getKafkaCluster(GetKafkaClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getKafkaCluster:getKafkaCluster", TypeShape.of(GetKafkaClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Kafka Cluster data source** can be used to search for and return an existing Kafka Cluster.
     * You can provide a string for the name parameter which will be compared with provisioned Kafka Clusters.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetKafkaClusterResult> getKafkaClusterPlain(GetKafkaClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getKafkaCluster:getKafkaCluster", TypeShape.of(GetKafkaClusterResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetKafkaClusterTopicResult> getKafkaClusterTopic(GetKafkaClusterTopicArgs args) {
        return getKafkaClusterTopic(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetKafkaClusterTopicResult> getKafkaClusterTopicPlain(GetKafkaClusterTopicPlainArgs args) {
        return getKafkaClusterTopicPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetKafkaClusterTopicResult> getKafkaClusterTopic(GetKafkaClusterTopicArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getKafkaClusterTopic:getKafkaClusterTopic", TypeShape.of(GetKafkaClusterTopicResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetKafkaClusterTopicResult> getKafkaClusterTopicPlain(GetKafkaClusterTopicPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getKafkaClusterTopic:getKafkaClusterTopic", TypeShape.of(GetKafkaClusterTopicResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **LAN data source** can be used to search for and return existing lans.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetLanResult> getLan(GetLanArgs args) {
        return getLan(args, InvokeOptions.Empty);
    }
    /**
     * The **LAN data source** can be used to search for and return existing lans.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetLanResult> getLanPlain(GetLanPlainArgs args) {
        return getLanPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **LAN data source** can be used to search for and return existing lans.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetLanResult> getLan(GetLanArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getLan:getLan", TypeShape.of(GetLanResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **LAN data source** can be used to search for and return existing lans.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetLanResult> getLanPlain(GetLanPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getLan:getLan", TypeShape.of(GetLanResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Location data source** can be used to search for and return an existing location which can then be used elsewhere in the configuration.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetLocationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getLocation(GetLocationArgs.builder()
     *             .feature("SSD")
     *             .name("karlsruhe")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLocationResult> getLocation() {
        return getLocation(GetLocationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Location data source** can be used to search for and return an existing location which can then be used elsewhere in the configuration.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetLocationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getLocation(GetLocationArgs.builder()
     *             .feature("SSD")
     *             .name("karlsruhe")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLocationResult> getLocationPlain() {
        return getLocationPlain(GetLocationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Location data source** can be used to search for and return an existing location which can then be used elsewhere in the configuration.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetLocationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getLocation(GetLocationArgs.builder()
     *             .feature("SSD")
     *             .name("karlsruhe")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLocationResult> getLocation(GetLocationArgs args) {
        return getLocation(args, InvokeOptions.Empty);
    }
    /**
     * The **Location data source** can be used to search for and return an existing location which can then be used elsewhere in the configuration.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetLocationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getLocation(GetLocationArgs.builder()
     *             .feature("SSD")
     *             .name("karlsruhe")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLocationResult> getLocationPlain(GetLocationPlainArgs args) {
        return getLocationPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Location data source** can be used to search for and return an existing location which can then be used elsewhere in the configuration.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetLocationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getLocation(GetLocationArgs.builder()
     *             .feature("SSD")
     *             .name("karlsruhe")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLocationResult> getLocation(GetLocationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getLocation:getLocation", TypeShape.of(GetLocationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Location data source** can be used to search for and return an existing location which can then be used elsewhere in the configuration.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetLocationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getLocation(GetLocationArgs.builder()
     *             .feature("SSD")
     *             .name("karlsruhe")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLocationResult> getLocationPlain(GetLocationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getLocation:getLocation", TypeShape.of(GetLocationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Logging pipeline** datasource can be used to search for and return an existing Logging pipeline.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **logging_pipeline** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     * ### By name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetLoggingPipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getLoggingPipeline(GetLoggingPipelineArgs.builder()
     *             .location("de/txl")
     *             .name("pipeline_name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoggingPipelineResult> getLoggingPipeline() {
        return getLoggingPipeline(GetLoggingPipelineArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Logging pipeline** datasource can be used to search for and return an existing Logging pipeline.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **logging_pipeline** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     * ### By name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetLoggingPipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getLoggingPipeline(GetLoggingPipelineArgs.builder()
     *             .location("de/txl")
     *             .name("pipeline_name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoggingPipelineResult> getLoggingPipelinePlain() {
        return getLoggingPipelinePlain(GetLoggingPipelinePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Logging pipeline** datasource can be used to search for and return an existing Logging pipeline.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **logging_pipeline** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     * ### By name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetLoggingPipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getLoggingPipeline(GetLoggingPipelineArgs.builder()
     *             .location("de/txl")
     *             .name("pipeline_name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoggingPipelineResult> getLoggingPipeline(GetLoggingPipelineArgs args) {
        return getLoggingPipeline(args, InvokeOptions.Empty);
    }
    /**
     * The **Logging pipeline** datasource can be used to search for and return an existing Logging pipeline.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **logging_pipeline** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     * ### By name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetLoggingPipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getLoggingPipeline(GetLoggingPipelineArgs.builder()
     *             .location("de/txl")
     *             .name("pipeline_name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoggingPipelineResult> getLoggingPipelinePlain(GetLoggingPipelinePlainArgs args) {
        return getLoggingPipelinePlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Logging pipeline** datasource can be used to search for and return an existing Logging pipeline.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **logging_pipeline** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     * ### By name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetLoggingPipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getLoggingPipeline(GetLoggingPipelineArgs.builder()
     *             .location("de/txl")
     *             .name("pipeline_name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetLoggingPipelineResult> getLoggingPipeline(GetLoggingPipelineArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getLoggingPipeline:getLoggingPipeline", TypeShape.of(GetLoggingPipelineResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Logging pipeline** datasource can be used to search for and return an existing Logging pipeline.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * 
     * &gt; ⚠️  Only tokens are accepted for authorization in the **logging_pipeline** data source. Please ensure you are using tokens as other methods will not be valid.
     * 
     * ## Example Usage
     * 
     * ### By name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetLoggingPipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getLoggingPipeline(GetLoggingPipelineArgs.builder()
     *             .location("de/txl")
     *             .name("pipeline_name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetLoggingPipelineResult> getLoggingPipelinePlain(GetLoggingPipelinePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getLoggingPipeline:getLoggingPipeline", TypeShape.of(GetLoggingPipelineResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetMariadbBackupsResult> getMariadbBackups() {
        return getMariadbBackups(GetMariadbBackupsArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMariadbBackupsResult> getMariadbBackupsPlain() {
        return getMariadbBackupsPlain(GetMariadbBackupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetMariadbBackupsResult> getMariadbBackups(GetMariadbBackupsArgs args) {
        return getMariadbBackups(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMariadbBackupsResult> getMariadbBackupsPlain(GetMariadbBackupsPlainArgs args) {
        return getMariadbBackupsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetMariadbBackupsResult> getMariadbBackups(GetMariadbBackupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getMariadbBackups:getMariadbBackups", TypeShape.of(GetMariadbBackupsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetMariadbBackupsResult> getMariadbBackupsPlain(GetMariadbBackupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getMariadbBackups:getMariadbBackups", TypeShape.of(GetMariadbBackupsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetMariadbClusterResult> getMariadbCluster() {
        return getMariadbCluster(GetMariadbClusterArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMariadbClusterResult> getMariadbClusterPlain() {
        return getMariadbClusterPlain(GetMariadbClusterPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetMariadbClusterResult> getMariadbCluster(GetMariadbClusterArgs args) {
        return getMariadbCluster(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMariadbClusterResult> getMariadbClusterPlain(GetMariadbClusterPlainArgs args) {
        return getMariadbClusterPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetMariadbClusterResult> getMariadbCluster(GetMariadbClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getMariadbCluster:getMariadbCluster", TypeShape.of(GetMariadbClusterResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetMariadbClusterResult> getMariadbClusterPlain(GetMariadbClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getMariadbCluster:getMariadbCluster", TypeShape.of(GetMariadbClusterResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetMongoClusterResult> getMongoCluster() {
        return getMongoCluster(GetMongoClusterArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMongoClusterResult> getMongoClusterPlain() {
        return getMongoClusterPlain(GetMongoClusterPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetMongoClusterResult> getMongoCluster(GetMongoClusterArgs args) {
        return getMongoCluster(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMongoClusterResult> getMongoClusterPlain(GetMongoClusterPlainArgs args) {
        return getMongoClusterPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetMongoClusterResult> getMongoCluster(GetMongoClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getMongoCluster:getMongoCluster", TypeShape.of(GetMongoClusterResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetMongoClusterResult> getMongoClusterPlain(GetMongoClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getMongoCluster:getMongoCluster", TypeShape.of(GetMongoClusterResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetMongoTemplateResult> getMongoTemplate() {
        return getMongoTemplate(GetMongoTemplateArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMongoTemplateResult> getMongoTemplatePlain() {
        return getMongoTemplatePlain(GetMongoTemplatePlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetMongoTemplateResult> getMongoTemplate(GetMongoTemplateArgs args) {
        return getMongoTemplate(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMongoTemplateResult> getMongoTemplatePlain(GetMongoTemplatePlainArgs args) {
        return getMongoTemplatePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetMongoTemplateResult> getMongoTemplate(GetMongoTemplateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getMongoTemplate:getMongoTemplate", TypeShape.of(GetMongoTemplateResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetMongoTemplateResult> getMongoTemplatePlain(GetMongoTemplatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getMongoTemplate:getMongoTemplate", TypeShape.of(GetMongoTemplateResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetMongoUserResult> getMongoUser(GetMongoUserArgs args) {
        return getMongoUser(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMongoUserResult> getMongoUserPlain(GetMongoUserPlainArgs args) {
        return getMongoUserPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetMongoUserResult> getMongoUser(GetMongoUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getMongoUser:getMongoUser", TypeShape.of(GetMongoUserResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetMongoUserResult> getMongoUserPlain(GetMongoUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getMongoUser:getMongoUser", TypeShape.of(GetMongoUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **NAT gateway data source** can be used to search for and return existing NAT Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetNatgatewayResult> getNatgateway(GetNatgatewayArgs args) {
        return getNatgateway(args, InvokeOptions.Empty);
    }
    /**
     * The **NAT gateway data source** can be used to search for and return existing NAT Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetNatgatewayResult> getNatgatewayPlain(GetNatgatewayPlainArgs args) {
        return getNatgatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **NAT gateway data source** can be used to search for and return existing NAT Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetNatgatewayResult> getNatgateway(GetNatgatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getNatgateway:getNatgateway", TypeShape.of(GetNatgatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **NAT gateway data source** can be used to search for and return existing NAT Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetNatgatewayResult> getNatgatewayPlain(GetNatgatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getNatgateway:getNatgateway", TypeShape.of(GetNatgatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **NAT Gateway Rule data source** can be used to search for and return existing NAT Gateway Rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetNatgatewayRuleResult> getNatgatewayRule(GetNatgatewayRuleArgs args) {
        return getNatgatewayRule(args, InvokeOptions.Empty);
    }
    /**
     * The **NAT Gateway Rule data source** can be used to search for and return existing NAT Gateway Rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetNatgatewayRuleResult> getNatgatewayRulePlain(GetNatgatewayRulePlainArgs args) {
        return getNatgatewayRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * The **NAT Gateway Rule data source** can be used to search for and return existing NAT Gateway Rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetNatgatewayRuleResult> getNatgatewayRule(GetNatgatewayRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getNatgatewayRule:getNatgatewayRule", TypeShape.of(GetNatgatewayRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **NAT Gateway Rule data source** can be used to search for and return existing NAT Gateway Rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetNatgatewayRuleResult> getNatgatewayRulePlain(GetNatgatewayRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getNatgatewayRule:getNatgatewayRule", TypeShape.of(GetNatgatewayRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Network Load Balancer data source** can be used to search for and return existing network load balancers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetNetworkloadbalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getNetworkloadbalancer(GetNetworkloadbalancerArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .name("Network Load Balancer Name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNetworkloadbalancerResult> getNetworkloadbalancer(GetNetworkloadbalancerArgs args) {
        return getNetworkloadbalancer(args, InvokeOptions.Empty);
    }
    /**
     * The **Network Load Balancer data source** can be used to search for and return existing network load balancers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetNetworkloadbalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getNetworkloadbalancer(GetNetworkloadbalancerArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .name("Network Load Balancer Name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNetworkloadbalancerResult> getNetworkloadbalancerPlain(GetNetworkloadbalancerPlainArgs args) {
        return getNetworkloadbalancerPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Network Load Balancer data source** can be used to search for and return existing network load balancers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetNetworkloadbalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getNetworkloadbalancer(GetNetworkloadbalancerArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .name("Network Load Balancer Name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNetworkloadbalancerResult> getNetworkloadbalancer(GetNetworkloadbalancerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getNetworkloadbalancer:getNetworkloadbalancer", TypeShape.of(GetNetworkloadbalancerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Network Load Balancer data source** can be used to search for and return existing network load balancers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetNetworkloadbalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getNetworkloadbalancer(GetNetworkloadbalancerArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .name("Network Load Balancer Name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNetworkloadbalancerResult> getNetworkloadbalancerPlain(GetNetworkloadbalancerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getNetworkloadbalancer:getNetworkloadbalancer", TypeShape.of(GetNetworkloadbalancerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Network Load Balancer Forwarding Rule data source** can be used to search for and return existing network forwarding rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     */
    public static Output<GetNetworkloadbalancerForwardingruleResult> getNetworkloadbalancerForwardingrule(GetNetworkloadbalancerForwardingruleArgs args) {
        return getNetworkloadbalancerForwardingrule(args, InvokeOptions.Empty);
    }
    /**
     * The **Network Load Balancer Forwarding Rule data source** can be used to search for and return existing network forwarding rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     */
    public static CompletableFuture<GetNetworkloadbalancerForwardingruleResult> getNetworkloadbalancerForwardingrulePlain(GetNetworkloadbalancerForwardingrulePlainArgs args) {
        return getNetworkloadbalancerForwardingrulePlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Network Load Balancer Forwarding Rule data source** can be used to search for and return existing network forwarding rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     */
    public static Output<GetNetworkloadbalancerForwardingruleResult> getNetworkloadbalancerForwardingrule(GetNetworkloadbalancerForwardingruleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getNetworkloadbalancerForwardingrule:getNetworkloadbalancerForwardingrule", TypeShape.of(GetNetworkloadbalancerForwardingruleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Network Load Balancer Forwarding Rule data source** can be used to search for and return existing network forwarding rules.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     */
    public static CompletableFuture<GetNetworkloadbalancerForwardingruleResult> getNetworkloadbalancerForwardingrulePlain(GetNetworkloadbalancerForwardingrulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getNetworkloadbalancerForwardingrule:getNetworkloadbalancerForwardingrule", TypeShape.of(GetNetworkloadbalancerForwardingruleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns information about clusters of Network File Storage (NFS) on IonosCloud.
     * 
     */
    public static Output<GetNfsClusterResult> getNfsCluster(GetNfsClusterArgs args) {
        return getNfsCluster(args, InvokeOptions.Empty);
    }
    /**
     * Returns information about clusters of Network File Storage (NFS) on IonosCloud.
     * 
     */
    public static CompletableFuture<GetNfsClusterResult> getNfsClusterPlain(GetNfsClusterPlainArgs args) {
        return getNfsClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * Returns information about clusters of Network File Storage (NFS) on IonosCloud.
     * 
     */
    public static Output<GetNfsClusterResult> getNfsCluster(GetNfsClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getNfsCluster:getNfsCluster", TypeShape.of(GetNfsClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns information about clusters of Network File Storage (NFS) on IonosCloud.
     * 
     */
    public static CompletableFuture<GetNfsClusterResult> getNfsClusterPlain(GetNfsClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getNfsCluster:getNfsCluster", TypeShape.of(GetNfsClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns information about shares of Network File Storage (NFS) on IonosCloud.
     * 
     */
    public static Output<GetNfsShareResult> getNfsShare(GetNfsShareArgs args) {
        return getNfsShare(args, InvokeOptions.Empty);
    }
    /**
     * Returns information about shares of Network File Storage (NFS) on IonosCloud.
     * 
     */
    public static CompletableFuture<GetNfsShareResult> getNfsSharePlain(GetNfsSharePlainArgs args) {
        return getNfsSharePlain(args, InvokeOptions.Empty);
    }
    /**
     * Returns information about shares of Network File Storage (NFS) on IonosCloud.
     * 
     */
    public static Output<GetNfsShareResult> getNfsShare(GetNfsShareArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getNfsShare:getNfsShare", TypeShape.of(GetNfsShareResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Returns information about shares of Network File Storage (NFS) on IonosCloud.
     * 
     */
    public static CompletableFuture<GetNfsShareResult> getNfsSharePlain(GetNfsSharePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getNfsShare:getNfsShare", TypeShape.of(GetNfsShareResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Nic data source** can be used to search for and return existing nics.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetNicResult> getNic(GetNicArgs args) {
        return getNic(args, InvokeOptions.Empty);
    }
    /**
     * The **Nic data source** can be used to search for and return existing nics.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetNicResult> getNicPlain(GetNicPlainArgs args) {
        return getNicPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Nic data source** can be used to search for and return existing nics.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetNicResult> getNic(GetNicArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getNic:getNic", TypeShape.of(GetNicResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Nic data source** can be used to search for and return existing nics.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetNicResult> getNicPlain(GetNicPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getNic:getNic", TypeShape.of(GetNicResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetPgBackupsResult> getPgBackups(GetPgBackupsArgs args) {
        return getPgBackups(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPgBackupsResult> getPgBackupsPlain(GetPgBackupsPlainArgs args) {
        return getPgBackupsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetPgBackupsResult> getPgBackups(GetPgBackupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getPgBackups:getPgBackups", TypeShape.of(GetPgBackupsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetPgBackupsResult> getPgBackupsPlain(GetPgBackupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getPgBackups:getPgBackups", TypeShape.of(GetPgBackupsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetPgClusterResult> getPgCluster() {
        return getPgCluster(GetPgClusterArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPgClusterResult> getPgClusterPlain() {
        return getPgClusterPlain(GetPgClusterPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetPgClusterResult> getPgCluster(GetPgClusterArgs args) {
        return getPgCluster(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPgClusterResult> getPgClusterPlain(GetPgClusterPlainArgs args) {
        return getPgClusterPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetPgClusterResult> getPgCluster(GetPgClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getPgCluster:getPgCluster", TypeShape.of(GetPgClusterResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetPgClusterResult> getPgClusterPlain(GetPgClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getPgCluster:getPgCluster", TypeShape.of(GetPgClusterResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetPgDatabaseResult> getPgDatabase(GetPgDatabaseArgs args) {
        return getPgDatabase(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPgDatabaseResult> getPgDatabasePlain(GetPgDatabasePlainArgs args) {
        return getPgDatabasePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetPgDatabaseResult> getPgDatabase(GetPgDatabaseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getPgDatabase:getPgDatabase", TypeShape.of(GetPgDatabaseResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetPgDatabaseResult> getPgDatabasePlain(GetPgDatabasePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getPgDatabase:getPgDatabase", TypeShape.of(GetPgDatabaseResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetPgDatabasesResult> getPgDatabases(GetPgDatabasesArgs args) {
        return getPgDatabases(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPgDatabasesResult> getPgDatabasesPlain(GetPgDatabasesPlainArgs args) {
        return getPgDatabasesPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetPgDatabasesResult> getPgDatabases(GetPgDatabasesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getPgDatabases:getPgDatabases", TypeShape.of(GetPgDatabasesResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetPgDatabasesResult> getPgDatabasesPlain(GetPgDatabasesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getPgDatabases:getPgDatabases", TypeShape.of(GetPgDatabasesResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetPgUserResult> getPgUser(GetPgUserArgs args) {
        return getPgUser(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPgUserResult> getPgUserPlain(GetPgUserPlainArgs args) {
        return getPgUserPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetPgUserResult> getPgUser(GetPgUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getPgUser:getPgUser", TypeShape.of(GetPgUserResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetPgUserResult> getPgUserPlain(GetPgUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getPgUser:getPgUser", TypeShape.of(GetPgUserResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetPgVersionsResult> getPgVersions() {
        return getPgVersions(GetPgVersionsArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPgVersionsResult> getPgVersionsPlain() {
        return getPgVersionsPlain(GetPgVersionsPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetPgVersionsResult> getPgVersions(GetPgVersionsArgs args) {
        return getPgVersions(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPgVersionsResult> getPgVersionsPlain(GetPgVersionsPlainArgs args) {
        return getPgVersionsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetPgVersionsResult> getPgVersions(GetPgVersionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getPgVersions:getPgVersions", TypeShape.of(GetPgVersionsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetPgVersionsResult> getPgVersionsPlain(GetPgVersionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getPgVersions:getPgVersions", TypeShape.of(GetPgVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Cross Connect data source** can be used to search for and return existing cross connects.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetPrivateCrossconnectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getPrivateCrossconnect(GetPrivateCrossconnectArgs.builder()
     *             .name("Cross Connect Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPrivateCrossconnectResult> getPrivateCrossconnect() {
        return getPrivateCrossconnect(GetPrivateCrossconnectArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Cross Connect data source** can be used to search for and return existing cross connects.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetPrivateCrossconnectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getPrivateCrossconnect(GetPrivateCrossconnectArgs.builder()
     *             .name("Cross Connect Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPrivateCrossconnectResult> getPrivateCrossconnectPlain() {
        return getPrivateCrossconnectPlain(GetPrivateCrossconnectPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Cross Connect data source** can be used to search for and return existing cross connects.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetPrivateCrossconnectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getPrivateCrossconnect(GetPrivateCrossconnectArgs.builder()
     *             .name("Cross Connect Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPrivateCrossconnectResult> getPrivateCrossconnect(GetPrivateCrossconnectArgs args) {
        return getPrivateCrossconnect(args, InvokeOptions.Empty);
    }
    /**
     * The **Cross Connect data source** can be used to search for and return existing cross connects.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetPrivateCrossconnectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getPrivateCrossconnect(GetPrivateCrossconnectArgs.builder()
     *             .name("Cross Connect Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPrivateCrossconnectResult> getPrivateCrossconnectPlain(GetPrivateCrossconnectPlainArgs args) {
        return getPrivateCrossconnectPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Cross Connect data source** can be used to search for and return existing cross connects.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetPrivateCrossconnectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getPrivateCrossconnect(GetPrivateCrossconnectArgs.builder()
     *             .name("Cross Connect Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPrivateCrossconnectResult> getPrivateCrossconnect(GetPrivateCrossconnectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getPrivateCrossconnect:getPrivateCrossconnect", TypeShape.of(GetPrivateCrossconnectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Cross Connect data source** can be used to search for and return existing cross connects.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetPrivateCrossconnectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getPrivateCrossconnect(GetPrivateCrossconnectArgs.builder()
     *             .name("Cross Connect Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPrivateCrossconnectResult> getPrivateCrossconnectPlain(GetPrivateCrossconnectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getPrivateCrossconnect:getPrivateCrossconnect", TypeShape.of(GetPrivateCrossconnectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Resource data source** can be used to search for and return any existing IonosCloud resource and optionally their group associations.
     * You can provide a string for the resource type (datacenter,image,snapshot,ipblock) and/or resource id parameters which will be queries against available resources.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Type
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetResourceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getResource(GetResourceArgs.builder()
     *             .resourceType("datacenter")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourceResult> getResource() {
        return getResource(GetResourceArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Resource data source** can be used to search for and return any existing IonosCloud resource and optionally their group associations.
     * You can provide a string for the resource type (datacenter,image,snapshot,ipblock) and/or resource id parameters which will be queries against available resources.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Type
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetResourceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getResource(GetResourceArgs.builder()
     *             .resourceType("datacenter")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetResourceResult> getResourcePlain() {
        return getResourcePlain(GetResourcePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Resource data source** can be used to search for and return any existing IonosCloud resource and optionally their group associations.
     * You can provide a string for the resource type (datacenter,image,snapshot,ipblock) and/or resource id parameters which will be queries against available resources.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Type
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetResourceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getResource(GetResourceArgs.builder()
     *             .resourceType("datacenter")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourceResult> getResource(GetResourceArgs args) {
        return getResource(args, InvokeOptions.Empty);
    }
    /**
     * The **Resource data source** can be used to search for and return any existing IonosCloud resource and optionally their group associations.
     * You can provide a string for the resource type (datacenter,image,snapshot,ipblock) and/or resource id parameters which will be queries against available resources.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Type
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetResourceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getResource(GetResourceArgs.builder()
     *             .resourceType("datacenter")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetResourceResult> getResourcePlain(GetResourcePlainArgs args) {
        return getResourcePlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Resource data source** can be used to search for and return any existing IonosCloud resource and optionally their group associations.
     * You can provide a string for the resource type (datacenter,image,snapshot,ipblock) and/or resource id parameters which will be queries against available resources.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Type
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetResourceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getResource(GetResourceArgs.builder()
     *             .resourceType("datacenter")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourceResult> getResource(GetResourceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getResource:getResource", TypeShape.of(GetResourceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Resource data source** can be used to search for and return any existing IonosCloud resource and optionally their group associations.
     * You can provide a string for the resource type (datacenter,image,snapshot,ipblock) and/or resource id parameters which will be queries against available resources.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Type
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetResourceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getResource(GetResourceArgs.builder()
     *             .resourceType("datacenter")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetResourceResult> getResourcePlain(GetResourcePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getResource:getResource", TypeShape.of(GetResourceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **S3 key data source** can be used to search for and return an existing s3 key.
     * You can provide a string id which will be compared with provisioned s3 keys.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     */
    public static Output<GetS3KeyResult> getS3Key(GetS3KeyArgs args) {
        return getS3Key(args, InvokeOptions.Empty);
    }
    /**
     * The **S3 key data source** can be used to search for and return an existing s3 key.
     * You can provide a string id which will be compared with provisioned s3 keys.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     */
    public static CompletableFuture<GetS3KeyResult> getS3KeyPlain(GetS3KeyPlainArgs args) {
        return getS3KeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **S3 key data source** can be used to search for and return an existing s3 key.
     * You can provide a string id which will be compared with provisioned s3 keys.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     */
    public static Output<GetS3KeyResult> getS3Key(GetS3KeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getS3Key:getS3Key", TypeShape.of(GetS3KeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **S3 key data source** can be used to search for and return an existing s3 key.
     * You can provide a string id which will be compared with provisioned s3 keys.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     */
    public static CompletableFuture<GetS3KeyResult> getS3KeyPlain(GetS3KeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getS3Key:getS3Key", TypeShape.of(GetS3KeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Server data source** can be used to search for and return existing servers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetServerResult> getServer(GetServerArgs args) {
        return getServer(args, InvokeOptions.Empty);
    }
    /**
     * The **Server data source** can be used to search for and return existing servers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetServerResult> getServerPlain(GetServerPlainArgs args) {
        return getServerPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Server data source** can be used to search for and return existing servers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetServerResult> getServer(GetServerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getServer:getServer", TypeShape.of(GetServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Server data source** can be used to search for and return existing servers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetServerResult> getServerPlain(GetServerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getServer:getServer", TypeShape.of(GetServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Servers data source** can be used to search for and return existing servers based on filters used.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getServers(GetServersArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .filters(GetServersFilterArgs.builder()
     *                 .name("name")
     *                 .value("server_name_to_look_here")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By CPU Family
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getServers(GetServersArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .filters(GetServersFilterArgs.builder()
     *                 .name("cpu_family")
     *                 .value("INTEL_XEON")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name and Cores
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getServers(GetServersArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .filters(            
     *                 GetServersFilterArgs.builder()
     *                     .name("name")
     *                     .value("test")
     *                     .build(),
     *                 GetServersFilterArgs.builder()
     *                     .name("cores")
     *                     .value("1")
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServersResult> getServers(GetServersArgs args) {
        return getServers(args, InvokeOptions.Empty);
    }
    /**
     * The **Servers data source** can be used to search for and return existing servers based on filters used.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getServers(GetServersArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .filters(GetServersFilterArgs.builder()
     *                 .name("name")
     *                 .value("server_name_to_look_here")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By CPU Family
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getServers(GetServersArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .filters(GetServersFilterArgs.builder()
     *                 .name("cpu_family")
     *                 .value("INTEL_XEON")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name and Cores
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getServers(GetServersArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .filters(            
     *                 GetServersFilterArgs.builder()
     *                     .name("name")
     *                     .value("test")
     *                     .build(),
     *                 GetServersFilterArgs.builder()
     *                     .name("cores")
     *                     .value("1")
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServersResult> getServersPlain(GetServersPlainArgs args) {
        return getServersPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Servers data source** can be used to search for and return existing servers based on filters used.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getServers(GetServersArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .filters(GetServersFilterArgs.builder()
     *                 .name("name")
     *                 .value("server_name_to_look_here")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By CPU Family
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getServers(GetServersArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .filters(GetServersFilterArgs.builder()
     *                 .name("cpu_family")
     *                 .value("INTEL_XEON")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name and Cores
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getServers(GetServersArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .filters(            
     *                 GetServersFilterArgs.builder()
     *                     .name("name")
     *                     .value("test")
     *                     .build(),
     *                 GetServersFilterArgs.builder()
     *                     .name("cores")
     *                     .value("1")
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServersResult> getServers(GetServersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getServers:getServers", TypeShape.of(GetServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Servers data source** can be used to search for and return existing servers based on filters used.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getServers(GetServersArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .filters(GetServersFilterArgs.builder()
     *                 .name("name")
     *                 .value("server_name_to_look_here")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By CPU Family
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getServers(GetServersArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .filters(GetServersFilterArgs.builder()
     *                 .name("cpu_family")
     *                 .value("INTEL_XEON")
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name and Cores
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getServers(GetServersArgs.builder()
     *             .datacenterId(ionoscloud_datacenter.example().id())
     *             .filters(            
     *                 GetServersFilterArgs.builder()
     *                     .name("name")
     *                     .value("test")
     *                     .build(),
     *                 GetServersFilterArgs.builder()
     *                     .name("cores")
     *                     .value("1")
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServersResult> getServersPlain(GetServersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getServers:getServers", TypeShape.of(GetServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Share data source** can be used to search for and return an existing share object.
     * You need to provide the group_id and resource_id to get the group resources for the shared resource.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     */
    public static Output<GetShareResult> getShare(GetShareArgs args) {
        return getShare(args, InvokeOptions.Empty);
    }
    /**
     * The **Share data source** can be used to search for and return an existing share object.
     * You need to provide the group_id and resource_id to get the group resources for the shared resource.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     */
    public static CompletableFuture<GetShareResult> getSharePlain(GetSharePlainArgs args) {
        return getSharePlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Share data source** can be used to search for and return an existing share object.
     * You need to provide the group_id and resource_id to get the group resources for the shared resource.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     */
    public static Output<GetShareResult> getShare(GetShareArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getShare:getShare", TypeShape.of(GetShareResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Share data source** can be used to search for and return an existing share object.
     * You need to provide the group_id and resource_id to get the group resources for the shared resource.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     */
    public static CompletableFuture<GetShareResult> getSharePlain(GetSharePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getShare:getShare", TypeShape.of(GetShareResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Snapshot data source** can be used to search for and return an existing snapshot which can then be used to provision a server. If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned. When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name &amp; Size &amp; Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .location("us/las")
     *             .name("Snapshot Example")
     *             .size("2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Note: The size argument is in GB
     * 
     */
    public static Output<GetSnapshotResult> getSnapshot() {
        return getSnapshot(GetSnapshotArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Snapshot data source** can be used to search for and return an existing snapshot which can then be used to provision a server. If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned. When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name &amp; Size &amp; Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .location("us/las")
     *             .name("Snapshot Example")
     *             .size("2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Note: The size argument is in GB
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshotPlain() {
        return getSnapshotPlain(GetSnapshotPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Snapshot data source** can be used to search for and return an existing snapshot which can then be used to provision a server. If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned. When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name &amp; Size &amp; Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .location("us/las")
     *             .name("Snapshot Example")
     *             .size("2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Note: The size argument is in GB
     * 
     */
    public static Output<GetSnapshotResult> getSnapshot(GetSnapshotArgs args) {
        return getSnapshot(args, InvokeOptions.Empty);
    }
    /**
     * The **Snapshot data source** can be used to search for and return an existing snapshot which can then be used to provision a server. If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned. When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name &amp; Size &amp; Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .location("us/las")
     *             .name("Snapshot Example")
     *             .size("2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Note: The size argument is in GB
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshotPlain(GetSnapshotPlainArgs args) {
        return getSnapshotPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Snapshot data source** can be used to search for and return an existing snapshot which can then be used to provision a server. If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned. When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name &amp; Size &amp; Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .location("us/las")
     *             .name("Snapshot Example")
     *             .size("2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Note: The size argument is in GB
     * 
     */
    public static Output<GetSnapshotResult> getSnapshot(GetSnapshotArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getSnapshot:getSnapshot", TypeShape.of(GetSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Snapshot data source** can be used to search for and return an existing snapshot which can then be used to provision a server. If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned. When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name &amp; Size &amp; Location
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .location("us/las")
     *             .name("Snapshot Example")
     *             .size("2")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * Note: The size argument is in GB
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshotPlain(GetSnapshotPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getSnapshot:getSnapshot", TypeShape.of(GetSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Target Group** data source can be used to search for and return an existing Application Load Balancer Target Group.
     * You can provide a string for the name parameter which will be compared with provisioned Application Load Balancer Target Groups.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTargetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTargetGroup(GetTargetGroupArgs.builder()
     *             .name("Target Group Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTargetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTargetGroup(GetTargetGroupArgs.builder()
     *             .name("Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTargetGroupResult> getTargetGroup() {
        return getTargetGroup(GetTargetGroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Target Group** data source can be used to search for and return an existing Application Load Balancer Target Group.
     * You can provide a string for the name parameter which will be compared with provisioned Application Load Balancer Target Groups.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTargetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTargetGroup(GetTargetGroupArgs.builder()
     *             .name("Target Group Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTargetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTargetGroup(GetTargetGroupArgs.builder()
     *             .name("Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTargetGroupResult> getTargetGroupPlain() {
        return getTargetGroupPlain(GetTargetGroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Target Group** data source can be used to search for and return an existing Application Load Balancer Target Group.
     * You can provide a string for the name parameter which will be compared with provisioned Application Load Balancer Target Groups.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTargetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTargetGroup(GetTargetGroupArgs.builder()
     *             .name("Target Group Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTargetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTargetGroup(GetTargetGroupArgs.builder()
     *             .name("Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTargetGroupResult> getTargetGroup(GetTargetGroupArgs args) {
        return getTargetGroup(args, InvokeOptions.Empty);
    }
    /**
     * The **Target Group** data source can be used to search for and return an existing Application Load Balancer Target Group.
     * You can provide a string for the name parameter which will be compared with provisioned Application Load Balancer Target Groups.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTargetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTargetGroup(GetTargetGroupArgs.builder()
     *             .name("Target Group Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTargetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTargetGroup(GetTargetGroupArgs.builder()
     *             .name("Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTargetGroupResult> getTargetGroupPlain(GetTargetGroupPlainArgs args) {
        return getTargetGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Target Group** data source can be used to search for and return an existing Application Load Balancer Target Group.
     * You can provide a string for the name parameter which will be compared with provisioned Application Load Balancer Target Groups.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTargetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTargetGroup(GetTargetGroupArgs.builder()
     *             .name("Target Group Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTargetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTargetGroup(GetTargetGroupArgs.builder()
     *             .name("Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTargetGroupResult> getTargetGroup(GetTargetGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getTargetGroup:getTargetGroup", TypeShape.of(GetTargetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Target Group** data source can be used to search for and return an existing Application Load Balancer Target Group.
     * You can provide a string for the name parameter which will be compared with provisioned Application Load Balancer Target Groups.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search and make sure that your resources have unique names.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTargetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTargetGroup(GetTargetGroupArgs.builder()
     *             .name("Target Group Example")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Name with Partial Match
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTargetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTargetGroup(GetTargetGroupArgs.builder()
     *             .name("Example")
     *             .partialMatch(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTargetGroupResult> getTargetGroupPlain(GetTargetGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getTargetGroup:getTargetGroup", TypeShape.of(GetTargetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Template data source** can be used to search for and return existing templates by providing any of template properties (name, cores, ram, storage_size).
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .name("CUBES S")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Cores
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .cores(6)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Ram
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .ram(49152)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Storage Size
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .storageSize(80)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTemplateResult> getTemplate() {
        return getTemplate(GetTemplateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Template data source** can be used to search for and return existing templates by providing any of template properties (name, cores, ram, storage_size).
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .name("CUBES S")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Cores
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .cores(6)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Ram
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .ram(49152)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Storage Size
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .storageSize(80)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTemplateResult> getTemplatePlain() {
        return getTemplatePlain(GetTemplatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **Template data source** can be used to search for and return existing templates by providing any of template properties (name, cores, ram, storage_size).
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .name("CUBES S")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Cores
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .cores(6)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Ram
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .ram(49152)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Storage Size
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .storageSize(80)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTemplateResult> getTemplate(GetTemplateArgs args) {
        return getTemplate(args, InvokeOptions.Empty);
    }
    /**
     * The **Template data source** can be used to search for and return existing templates by providing any of template properties (name, cores, ram, storage_size).
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .name("CUBES S")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Cores
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .cores(6)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Ram
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .ram(49152)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Storage Size
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .storageSize(80)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTemplateResult> getTemplatePlain(GetTemplatePlainArgs args) {
        return getTemplatePlain(args, InvokeOptions.Empty);
    }
    /**
     * The **Template data source** can be used to search for and return existing templates by providing any of template properties (name, cores, ram, storage_size).
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .name("CUBES S")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Cores
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .cores(6)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Ram
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .ram(49152)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Storage Size
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .storageSize(80)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTemplateResult> getTemplate(GetTemplateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getTemplate:getTemplate", TypeShape.of(GetTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **Template data source** can be used to search for and return existing templates by providing any of template properties (name, cores, ram, storage_size).
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Name
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .name("CUBES S")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Cores
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .cores(6)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Ram
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .ram(49152)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Storage Size
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getTemplate(GetTemplateArgs.builder()
     *             .storageSize(80)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTemplateResult> getTemplatePlain(GetTemplatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getTemplate:getTemplate", TypeShape.of(GetTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **User data source** can be used to search for and return existing users.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Email
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = IonoscloudFunctions.getUser(GetUserArgs.builder()
     *             .email("example}{@literal @}{@code email.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Email from Env Variables - Current User
     * data &#34;ionoscloud.User&#34; &#34;example&#34; {
     * }
     * 
     */
    public static Output<GetUserResult> getUser() {
        return getUser(GetUserArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **User data source** can be used to search for and return existing users.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Email
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = IonoscloudFunctions.getUser(GetUserArgs.builder()
     *             .email("example}{@literal @}{@code email.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Email from Env Variables - Current User
     * data &#34;ionoscloud.User&#34; &#34;example&#34; {
     * }
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain() {
        return getUserPlain(GetUserPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The **User data source** can be used to search for and return existing users.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Email
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = IonoscloudFunctions.getUser(GetUserArgs.builder()
     *             .email("example}{@literal @}{@code email.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Email from Env Variables - Current User
     * data &#34;ionoscloud.User&#34; &#34;example&#34; {
     * }
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args) {
        return getUser(args, InvokeOptions.Empty);
    }
    /**
     * The **User data source** can be used to search for and return existing users.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Email
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = IonoscloudFunctions.getUser(GetUserArgs.builder()
     *             .email("example}{@literal @}{@code email.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Email from Env Variables - Current User
     * data &#34;ionoscloud.User&#34; &#34;example&#34; {
     * }
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args) {
        return getUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **User data source** can be used to search for and return existing users.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Email
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = IonoscloudFunctions.getUser(GetUserArgs.builder()
     *             .email("example}{@literal @}{@code email.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Email from Env Variables - Current User
     * data &#34;ionoscloud.User&#34; &#34;example&#34; {
     * }
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **User data source** can be used to search for and return existing users.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     * ### By Email
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetUserArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = IonoscloudFunctions.getUser(GetUserArgs.builder()
     *             .email("example}{@literal @}{@code email.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Email from Env Variables - Current User
     * data &#34;ionoscloud.User&#34; &#34;example&#34; {
     * }
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **VCPU Server data source** can be used to search for and return existing VCPU servers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetVcpuServerResult> getVcpuServer(GetVcpuServerArgs args) {
        return getVcpuServer(args, InvokeOptions.Empty);
    }
    /**
     * The **VCPU Server data source** can be used to search for and return existing VCPU servers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetVcpuServerResult> getVcpuServerPlain(GetVcpuServerPlainArgs args) {
        return getVcpuServerPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **VCPU Server data source** can be used to search for and return existing VCPU servers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetVcpuServerResult> getVcpuServer(GetVcpuServerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getVcpuServer:getVcpuServer", TypeShape.of(GetVcpuServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **VCPU Server data source** can be used to search for and return existing VCPU servers.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetVcpuServerResult> getVcpuServerPlain(GetVcpuServerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getVcpuServer:getVcpuServer", TypeShape.of(GetVcpuServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The volume data source can be used to search for and return existing volumes.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetVolumeResult> getVolume(GetVolumeArgs args) {
        return getVolume(args, InvokeOptions.Empty);
    }
    /**
     * The volume data source can be used to search for and return existing volumes.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetVolumeResult> getVolumePlain(GetVolumePlainArgs args) {
        return getVolumePlain(args, InvokeOptions.Empty);
    }
    /**
     * The volume data source can be used to search for and return existing volumes.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetVolumeResult> getVolume(GetVolumeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getVolume:getVolume", TypeShape.of(GetVolumeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The volume data source can be used to search for and return existing volumes.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetVolumeResult> getVolumePlain(GetVolumePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getVolume:getVolume", TypeShape.of(GetVolumeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **VPN IPSec Gateway data source** can be used to search for and return an existing IPSec Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetVpnIpsecGatewayResult> getVpnIpsecGateway(GetVpnIpsecGatewayArgs args) {
        return getVpnIpsecGateway(args, InvokeOptions.Empty);
    }
    /**
     * The **VPN IPSec Gateway data source** can be used to search for and return an existing IPSec Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetVpnIpsecGatewayResult> getVpnIpsecGatewayPlain(GetVpnIpsecGatewayPlainArgs args) {
        return getVpnIpsecGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **VPN IPSec Gateway data source** can be used to search for and return an existing IPSec Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetVpnIpsecGatewayResult> getVpnIpsecGateway(GetVpnIpsecGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getVpnIpsecGateway:getVpnIpsecGateway", TypeShape.of(GetVpnIpsecGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **VPN IPSec Gateway data source** can be used to search for and return an existing IPSec Gateway.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateways.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetVpnIpsecGatewayResult> getVpnIpsecGatewayPlain(GetVpnIpsecGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getVpnIpsecGateway:getVpnIpsecGateway", TypeShape.of(GetVpnIpsecGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **VPN IPSec Gateway Tunnel data source** can be used to search for and return an existing IPSec Gateway Tunnel.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateway Tunnels.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetVpnIpsecTunnelResult> getVpnIpsecTunnel(GetVpnIpsecTunnelArgs args) {
        return getVpnIpsecTunnel(args, InvokeOptions.Empty);
    }
    /**
     * The **VPN IPSec Gateway Tunnel data source** can be used to search for and return an existing IPSec Gateway Tunnel.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateway Tunnels.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetVpnIpsecTunnelResult> getVpnIpsecTunnelPlain(GetVpnIpsecTunnelPlainArgs args) {
        return getVpnIpsecTunnelPlain(args, InvokeOptions.Empty);
    }
    /**
     * The **VPN IPSec Gateway Tunnel data source** can be used to search for and return an existing IPSec Gateway Tunnel.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateway Tunnels.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetVpnIpsecTunnelResult> getVpnIpsecTunnel(GetVpnIpsecTunnelArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getVpnIpsecTunnel:getVpnIpsecTunnel", TypeShape.of(GetVpnIpsecTunnelResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The **VPN IPSec Gateway Tunnel data source** can be used to search for and return an existing IPSec Gateway Tunnel.
     * You can provide a string for the name parameter which will be compared with provisioned IPSec Gateway Tunnels.
     * If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
     * When this happens, please refine your search string so that it is specific enough to return only one result.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetVpnIpsecTunnelResult> getVpnIpsecTunnelPlain(GetVpnIpsecTunnelPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getVpnIpsecTunnel:getVpnIpsecTunnel", TypeShape.of(GetVpnIpsecTunnelResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.VpnWireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetVpnWireguardGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getVpnWireguardGateway(GetVpnWireguardGatewayArgs.builder()
     *             .location("de/fra")
     *             .name("example-gateway")
     *             .build());
     * 
     *         ctx.export("vpnWireguardGatewayPublicKey", data.vpn_wireguard_gateway().example().public_key());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVpnWireguardGatewayResult> getVpnWireguardGateway(GetVpnWireguardGatewayArgs args) {
        return getVpnWireguardGateway(args, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.VpnWireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetVpnWireguardGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getVpnWireguardGateway(GetVpnWireguardGatewayArgs.builder()
     *             .location("de/fra")
     *             .name("example-gateway")
     *             .build());
     * 
     *         ctx.export("vpnWireguardGatewayPublicKey", data.vpn_wireguard_gateway().example().public_key());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVpnWireguardGatewayResult> getVpnWireguardGatewayPlain(GetVpnWireguardGatewayPlainArgs args) {
        return getVpnWireguardGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.VpnWireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetVpnWireguardGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getVpnWireguardGateway(GetVpnWireguardGatewayArgs.builder()
     *             .location("de/fra")
     *             .name("example-gateway")
     *             .build());
     * 
     *         ctx.export("vpnWireguardGatewayPublicKey", data.vpn_wireguard_gateway().example().public_key());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVpnWireguardGatewayResult> getVpnWireguardGateway(GetVpnWireguardGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getVpnWireguardGateway:getVpnWireguardGateway", TypeShape.of(GetVpnWireguardGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.VpnWireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetVpnWireguardGatewayArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getVpnWireguardGateway(GetVpnWireguardGatewayArgs.builder()
     *             .location("de/fra")
     *             .name("example-gateway")
     *             .build());
     * 
     *         ctx.export("vpnWireguardGatewayPublicKey", data.vpn_wireguard_gateway().example().public_key());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVpnWireguardGatewayResult> getVpnWireguardGatewayPlain(GetVpnWireguardGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getVpnWireguardGateway:getVpnWireguardGateway", TypeShape.of(GetVpnWireguardGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.VpnWireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetVpnWireguardPeerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getVpnWireguardPeer(GetVpnWireguardPeerArgs.builder()
     *             .location("de/fra")
     *             .gatewayId("example-gateway")
     *             .name("example-peer")
     *             .build());
     * 
     *         ctx.export("vpnWireguardPeerPublicKey", data.vpn_wireguard_peer().example().public_key());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVpnWireguardPeerResult> getVpnWireguardPeer(GetVpnWireguardPeerArgs args) {
        return getVpnWireguardPeer(args, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.VpnWireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetVpnWireguardPeerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getVpnWireguardPeer(GetVpnWireguardPeerArgs.builder()
     *             .location("de/fra")
     *             .gatewayId("example-gateway")
     *             .name("example-peer")
     *             .build());
     * 
     *         ctx.export("vpnWireguardPeerPublicKey", data.vpn_wireguard_peer().example().public_key());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVpnWireguardPeerResult> getVpnWireguardPeerPlain(GetVpnWireguardPeerPlainArgs args) {
        return getVpnWireguardPeerPlain(args, InvokeOptions.Empty);
    }
    /**
     * The `ionoscloud.VpnWireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetVpnWireguardPeerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getVpnWireguardPeer(GetVpnWireguardPeerArgs.builder()
     *             .location("de/fra")
     *             .gatewayId("example-gateway")
     *             .name("example-peer")
     *             .build());
     * 
     *         ctx.export("vpnWireguardPeerPublicKey", data.vpn_wireguard_peer().example().public_key());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetVpnWireguardPeerResult> getVpnWireguardPeer(GetVpnWireguardPeerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("ionoscloud:index/getVpnWireguardPeer:getVpnWireguardPeer", TypeShape.of(GetVpnWireguardPeerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The `ionoscloud.VpnWireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.ionoscloud.IonoscloudFunctions;
     * import com.pulumi.ionoscloud.inputs.GetVpnWireguardPeerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = IonoscloudFunctions.getVpnWireguardPeer(GetVpnWireguardPeerArgs.builder()
     *             .location("de/fra")
     *             .gatewayId("example-gateway")
     *             .name("example-peer")
     *             .build());
     * 
     *         ctx.export("vpnWireguardPeerPublicKey", data.vpn_wireguard_peer().example().public_key());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetVpnWireguardPeerResult> getVpnWireguardPeerPlain(GetVpnWireguardPeerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("ionoscloud:index/getVpnWireguardPeer:getVpnWireguardPeer", TypeShape.of(GetVpnWireguardPeerResult.class), args, Utilities.withVersion(options));
    }
}
