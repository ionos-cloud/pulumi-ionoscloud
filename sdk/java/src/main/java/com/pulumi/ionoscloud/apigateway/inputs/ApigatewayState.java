// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.ionoscloud.apigateway.inputs.ApigatewayCustomDomainArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApigatewayState extends com.pulumi.resources.ResourceArgs {

    public static final ApigatewayState Empty = new ApigatewayState();

    /**
     * [list] Custom domains for the API Gateway, a list that contains elements with the following structure:
     * 
     */
    @Import(name="customDomains")
    private @Nullable Output<List<ApigatewayCustomDomainArgs>> customDomains;

    /**
     * @return [list] Custom domains for the API Gateway, a list that contains elements with the following structure:
     * 
     */
    public Optional<Output<List<ApigatewayCustomDomainArgs>>> customDomains() {
        return Optional.ofNullable(this.customDomains);
    }

    /**
     * [bool] Enable or disable logging. Defaults to `false`. **NOTE**: Central Logging must be enabled through the Logging API to enable this feature.
     * 
     */
    @Import(name="logs")
    private @Nullable Output<Boolean> logs;

    /**
     * @return [bool] Enable or disable logging. Defaults to `false`. **NOTE**: Central Logging must be enabled through the Logging API to enable this feature.
     * 
     */
    public Optional<Output<Boolean>> logs() {
        return Optional.ofNullable(this.logs);
    }

    /**
     * [bool] Enable or disable metrics. Defaults to `false`.
     * 
     */
    @Import(name="metrics")
    private @Nullable Output<Boolean> metrics;

    /**
     * @return [bool] Enable or disable metrics. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> metrics() {
        return Optional.ofNullable(this.metrics);
    }

    /**
     * [string] The name of the API Gateway.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return [string] The name of the API Gateway.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * [string] The public endpoint of the API Gateway.
     * 
     */
    @Import(name="publicEndpoint")
    private @Nullable Output<String> publicEndpoint;

    /**
     * @return [string] The public endpoint of the API Gateway.
     * 
     */
    public Optional<Output<String>> publicEndpoint() {
        return Optional.ofNullable(this.publicEndpoint);
    }

    private ApigatewayState() {}

    private ApigatewayState(ApigatewayState $) {
        this.customDomains = $.customDomains;
        this.logs = $.logs;
        this.metrics = $.metrics;
        this.name = $.name;
        this.publicEndpoint = $.publicEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApigatewayState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApigatewayState $;

        public Builder() {
            $ = new ApigatewayState();
        }

        public Builder(ApigatewayState defaults) {
            $ = new ApigatewayState(Objects.requireNonNull(defaults));
        }

        /**
         * @param customDomains [list] Custom domains for the API Gateway, a list that contains elements with the following structure:
         * 
         * @return builder
         * 
         */
        public Builder customDomains(@Nullable Output<List<ApigatewayCustomDomainArgs>> customDomains) {
            $.customDomains = customDomains;
            return this;
        }

        /**
         * @param customDomains [list] Custom domains for the API Gateway, a list that contains elements with the following structure:
         * 
         * @return builder
         * 
         */
        public Builder customDomains(List<ApigatewayCustomDomainArgs> customDomains) {
            return customDomains(Output.of(customDomains));
        }

        /**
         * @param customDomains [list] Custom domains for the API Gateway, a list that contains elements with the following structure:
         * 
         * @return builder
         * 
         */
        public Builder customDomains(ApigatewayCustomDomainArgs... customDomains) {
            return customDomains(List.of(customDomains));
        }

        /**
         * @param logs [bool] Enable or disable logging. Defaults to `false`. **NOTE**: Central Logging must be enabled through the Logging API to enable this feature.
         * 
         * @return builder
         * 
         */
        public Builder logs(@Nullable Output<Boolean> logs) {
            $.logs = logs;
            return this;
        }

        /**
         * @param logs [bool] Enable or disable logging. Defaults to `false`. **NOTE**: Central Logging must be enabled through the Logging API to enable this feature.
         * 
         * @return builder
         * 
         */
        public Builder logs(Boolean logs) {
            return logs(Output.of(logs));
        }

        /**
         * @param metrics [bool] Enable or disable metrics. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder metrics(@Nullable Output<Boolean> metrics) {
            $.metrics = metrics;
            return this;
        }

        /**
         * @param metrics [bool] Enable or disable metrics. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder metrics(Boolean metrics) {
            return metrics(Output.of(metrics));
        }

        /**
         * @param name [string] The name of the API Gateway.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name [string] The name of the API Gateway.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicEndpoint [string] The public endpoint of the API Gateway.
         * 
         * @return builder
         * 
         */
        public Builder publicEndpoint(@Nullable Output<String> publicEndpoint) {
            $.publicEndpoint = publicEndpoint;
            return this;
        }

        /**
         * @param publicEndpoint [string] The public endpoint of the API Gateway.
         * 
         * @return builder
         * 
         */
        public Builder publicEndpoint(String publicEndpoint) {
            return publicEndpoint(Output.of(publicEndpoint));
        }

        public ApigatewayState build() {
            return $;
        }
    }

}
