// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.outputs.GetNfsClusterConnection;
import com.pulumi.ionoscloud.outputs.GetNfsClusterNf;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNfsClusterResult {
    /**
     * @return A list of connections for the Network File Storage cluster. You can specify only one connection. Each connection supports the following:
     * 
     */
    private List<GetNfsClusterConnection> connections;
    /**
     * @return The ID of the Network File Storage cluster.
     * 
     */
    private String id;
    /**
     * @return The location where the Network File Storage cluster is located.
     * 
     */
    private String location;
    /**
     * @return The name of the Network File Storage cluster.
     * 
     */
    private String name;
    /**
     * @return The NFS configuration for the Network File Storage cluster. Each NFS configuration supports the following:
     * 
     */
    private List<GetNfsClusterNf> nfs;
    private @Nullable Boolean partialMatch;
    /**
     * @return The size of the Network File Storage cluster in TiB. Note that the cluster size cannot be reduced after provisioning. This value determines the billing fees. Default is `2`. The minimum value is `2` and the maximum value is `42`.
     * 
     */
    private Integer size;

    private GetNfsClusterResult() {}
    /**
     * @return A list of connections for the Network File Storage cluster. You can specify only one connection. Each connection supports the following:
     * 
     */
    public List<GetNfsClusterConnection> connections() {
        return this.connections;
    }
    /**
     * @return The ID of the Network File Storage cluster.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The location where the Network File Storage cluster is located.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the Network File Storage cluster.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The NFS configuration for the Network File Storage cluster. Each NFS configuration supports the following:
     * 
     */
    public List<GetNfsClusterNf> nfs() {
        return this.nfs;
    }
    public Optional<Boolean> partialMatch() {
        return Optional.ofNullable(this.partialMatch);
    }
    /**
     * @return The size of the Network File Storage cluster in TiB. Note that the cluster size cannot be reduced after provisioning. This value determines the billing fees. Default is `2`. The minimum value is `2` and the maximum value is `42`.
     * 
     */
    public Integer size() {
        return this.size;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNfsClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetNfsClusterConnection> connections;
        private String id;
        private String location;
        private String name;
        private List<GetNfsClusterNf> nfs;
        private @Nullable Boolean partialMatch;
        private Integer size;
        public Builder() {}
        public Builder(GetNfsClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connections = defaults.connections;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.nfs = defaults.nfs;
    	      this.partialMatch = defaults.partialMatch;
    	      this.size = defaults.size;
        }

        @CustomType.Setter
        public Builder connections(List<GetNfsClusterConnection> connections) {
            if (connections == null) {
              throw new MissingRequiredPropertyException("GetNfsClusterResult", "connections");
            }
            this.connections = connections;
            return this;
        }
        public Builder connections(GetNfsClusterConnection... connections) {
            return connections(List.of(connections));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNfsClusterResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetNfsClusterResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNfsClusterResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nfs(List<GetNfsClusterNf> nfs) {
            if (nfs == null) {
              throw new MissingRequiredPropertyException("GetNfsClusterResult", "nfs");
            }
            this.nfs = nfs;
            return this;
        }
        public Builder nfs(GetNfsClusterNf... nfs) {
            return nfs(List.of(nfs));
        }
        @CustomType.Setter
        public Builder partialMatch(@Nullable Boolean partialMatch) {

            this.partialMatch = partialMatch;
            return this;
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetNfsClusterResult", "size");
            }
            this.size = size;
            return this;
        }
        public GetNfsClusterResult build() {
            final var _resultValue = new GetNfsClusterResult();
            _resultValue.connections = connections;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.nfs = nfs;
            _resultValue.partialMatch = partialMatch;
            _resultValue.size = size;
            return _resultValue;
        }
    }
}
