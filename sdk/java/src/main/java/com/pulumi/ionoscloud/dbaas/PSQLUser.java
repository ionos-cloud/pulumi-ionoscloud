// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.dbaas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.dbaas.PSQLUserArgs;
import com.pulumi.ionoscloud.dbaas.inputs.PSQLUserState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages a **DbaaS PgSql User**.
 * 
 * ## Example Usage
 * 
 * Create a `PgSQL` cluster as presented in the documentation for the cluster, then define a user resource
 * and link it with the previously created cluster:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.password;
 * import com.pulumi.random.PasswordArgs;
 * import com.pulumi.ionoscloud.dbaas.PSQLUser;
 * import com.pulumi.ionoscloud.dbaas.PSQLUserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var userPassword = new Password("userPassword", PasswordArgs.builder()
 *             .length(16)
 *             .special(true)
 *             .overrideSpecial("!#$%&*()-_=+[]{}<>:?")
 *             .build());
 * 
 *         var examplePgUser = new PSQLUser("examplePgUser", PSQLUserArgs.builder()
 *             .clusterId(example.id())
 *             .username("exampleuser")
 *             .password(userPassword.result())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * In order to import a PgSql user, you can define an empty user resource in the plan:
 * 
 * hcl
 * 
 * resource &#34;ionoscloud_pg_user&#34; &#34;example&#34; {
 * 
 * }
 * 
 * The resource can be imported using the `clusterId` and the `username`, for example:
 * 
 * ```sh
 * $ pulumi import ionoscloud:dbaas/pSQLUser:PSQLUser example clusterid/username
 * ```
 * 
 */
@ResourceType(type="ionoscloud:dbaas/pSQLUser:PSQLUser")
public class PSQLUser extends com.pulumi.resources.CustomResource {
    /**
     * [string] The unique ID of the cluster. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    @Export(name="clusterId", refs={String.class}, tree="[0]")
    private Output<String> clusterId;

    /**
     * @return [string] The unique ID of the cluster. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * [bool] Describes whether this user is a system user or not. A system user cannot be updated or deleted.
     * 
     */
    @Export(name="isSystemUser", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isSystemUser;

    /**
     * @return [bool] Describes whether this user is a system user or not. A system user cannot be updated or deleted.
     * 
     */
    public Output<Boolean> isSystemUser() {
        return this.isSystemUser;
    }
    /**
     * [string] User password.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output<String> password;

    /**
     * @return [string] User password.
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * [string] Used for authentication. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output<String> username;

    /**
     * @return [string] Used for authentication. Updates to the value of the field force the cluster to be re-created.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PSQLUser(java.lang.String name) {
        this(name, PSQLUserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PSQLUser(java.lang.String name, PSQLUserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PSQLUser(java.lang.String name, PSQLUserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:dbaas/pSQLUser:PSQLUser", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private PSQLUser(java.lang.String name, Output<java.lang.String> id, @Nullable PSQLUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:dbaas/pSQLUser:PSQLUser", name, state, makeResourceOptions(options, id), false);
    }

    private static PSQLUserArgs makeArgs(PSQLUserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PSQLUserArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PSQLUser get(java.lang.String name, Output<java.lang.String> id, @Nullable PSQLUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PSQLUser(name, id, state, options);
    }
}
