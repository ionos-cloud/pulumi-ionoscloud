// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationLoadbalancerFlowlogArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationLoadbalancerFlowlogArgs Empty = new ApplicationLoadbalancerFlowlogArgs();

    /**
     * [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
     * 
     */
    @Import(name="action", required=true)
    private Output<String> action;

    /**
     * @return [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
     * 
     */
    public Output<String> action() {
        return this.action;
    }

    /**
     * [string] Specifies the S3 IONOS bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return [string] Specifies the S3 IONOS bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
     * 
     */
    @Import(name="direction", required=true)
    private Output<String> direction;

    /**
     * @return [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
     * 
     */
    public Output<String> direction() {
        return this.direction;
    }

    /**
     * The resource&#39;s unique identifier.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The resource&#39;s unique identifier.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * [string] Specifies the name of the flow log.
     * 
     * ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the application load balancer resource.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return [string] Specifies the name of the flow log.
     * 
     * ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the application load balancer resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private ApplicationLoadbalancerFlowlogArgs() {}

    private ApplicationLoadbalancerFlowlogArgs(ApplicationLoadbalancerFlowlogArgs $) {
        this.action = $.action;
        this.bucket = $.bucket;
        this.direction = $.direction;
        this.id = $.id;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationLoadbalancerFlowlogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationLoadbalancerFlowlogArgs $;

        public Builder() {
            $ = new ApplicationLoadbalancerFlowlogArgs();
        }

        public Builder(ApplicationLoadbalancerFlowlogArgs defaults) {
            $ = new ApplicationLoadbalancerFlowlogArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param bucket [string] Specifies the S3 IONOS bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket [string] Specifies the S3 IONOS bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param direction [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
         * 
         * @return builder
         * 
         */
        public Builder direction(Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param id The resource&#39;s unique identifier.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The resource&#39;s unique identifier.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name [string] Specifies the name of the flow log.
         * 
         * ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the application load balancer resource.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name [string] Specifies the name of the flow log.
         * 
         * ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the application load balancer resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ApplicationLoadbalancerFlowlogArgs build() {
            if ($.action == null) {
                throw new MissingRequiredPropertyException("ApplicationLoadbalancerFlowlogArgs", "action");
            }
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("ApplicationLoadbalancerFlowlogArgs", "bucket");
            }
            if ($.direction == null) {
                throw new MissingRequiredPropertyException("ApplicationLoadbalancerFlowlogArgs", "direction");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ApplicationLoadbalancerFlowlogArgs", "name");
            }
            return $;
        }
    }

}
