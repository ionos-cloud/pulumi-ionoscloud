// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.compute.outputs.GetCrossconnectConnectableDatacenter;
import com.pulumi.ionoscloud.compute.outputs.GetCrossconnectPeer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCrossconnectResult {
    /**
     * @return Lists datacenters that can be joined to this cross connect
     * 
     */
    private List<GetCrossconnectConnectableDatacenter> connectableDatacenters;
    /**
     * @return Description of cross connect
     * 
     */
    private String description;
    /**
     * @return The UUID of the connectable datacenter
     * 
     */
    private String id;
    /**
     * @return The name of the connectable datacenter
     * 
     */
    private String name;
    /**
     * @return Lists LAN&#39;s joined to this cross connect
     * 
     */
    private List<GetCrossconnectPeer> peers;

    private GetCrossconnectResult() {}
    /**
     * @return Lists datacenters that can be joined to this cross connect
     * 
     */
    public List<GetCrossconnectConnectableDatacenter> connectableDatacenters() {
        return this.connectableDatacenters;
    }
    /**
     * @return Description of cross connect
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The UUID of the connectable datacenter
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the connectable datacenter
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Lists LAN&#39;s joined to this cross connect
     * 
     */
    public List<GetCrossconnectPeer> peers() {
        return this.peers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCrossconnectResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCrossconnectConnectableDatacenter> connectableDatacenters;
        private String description;
        private String id;
        private String name;
        private List<GetCrossconnectPeer> peers;
        public Builder() {}
        public Builder(GetCrossconnectResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectableDatacenters = defaults.connectableDatacenters;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.peers = defaults.peers;
        }

        @CustomType.Setter
        public Builder connectableDatacenters(List<GetCrossconnectConnectableDatacenter> connectableDatacenters) {
            if (connectableDatacenters == null) {
              throw new MissingRequiredPropertyException("GetCrossconnectResult", "connectableDatacenters");
            }
            this.connectableDatacenters = connectableDatacenters;
            return this;
        }
        public Builder connectableDatacenters(GetCrossconnectConnectableDatacenter... connectableDatacenters) {
            return connectableDatacenters(List.of(connectableDatacenters));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetCrossconnectResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCrossconnectResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCrossconnectResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder peers(List<GetCrossconnectPeer> peers) {
            if (peers == null) {
              throw new MissingRequiredPropertyException("GetCrossconnectResult", "peers");
            }
            this.peers = peers;
            return this;
        }
        public Builder peers(GetCrossconnectPeer... peers) {
            return peers(List.of(peers));
        }
        public GetCrossconnectResult build() {
            final var _resultValue = new GetCrossconnectResult();
            _resultValue.connectableDatacenters = connectableDatacenters;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.peers = peers;
            return _resultValue;
        }
    }
}
