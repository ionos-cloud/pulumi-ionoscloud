// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.dbaas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMariaDBBackupsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMariaDBBackupsArgs Empty = new GetMariaDBBackupsArgs();

    /**
     * [string] The unique ID of the backup.
     * 
     */
    @Import(name="backupId")
    private @Nullable Output<String> backupId;

    /**
     * @return [string] The unique ID of the backup.
     * 
     */
    public Optional<Output<String>> backupId() {
        return Optional.ofNullable(this.backupId);
    }

    /**
     * [string] The unique ID of the cluster.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return [string] The unique ID of the cluster.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * [string] The location of the cluster. Different service endpoints are used based on location, possible options are: &#34;de/fra&#34;, &#34;de/txl&#34;, &#34;es/vit&#34;, &#34;fr/par&#34;, &#34;gb/lhr&#34;, &#34;us/ewr&#34;, &#34;us/las&#34;, &#34;us/mci&#34;. If not set, the endpoint will be the one corresponding to &#34;de/txl&#34;.
     * 
     * ⚠️ **Note:** Either `cluster_id` or `backup_id` must be used, but not both at the same time.
     * 
     * &gt; **⚠ WARNING:** `Location` attribute will become required in the future.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return [string] The location of the cluster. Different service endpoints are used based on location, possible options are: &#34;de/fra&#34;, &#34;de/txl&#34;, &#34;es/vit&#34;, &#34;fr/par&#34;, &#34;gb/lhr&#34;, &#34;us/ewr&#34;, &#34;us/las&#34;, &#34;us/mci&#34;. If not set, the endpoint will be the one corresponding to &#34;de/txl&#34;.
     * 
     * ⚠️ **Note:** Either `cluster_id` or `backup_id` must be used, but not both at the same time.
     * 
     * &gt; **⚠ WARNING:** `Location` attribute will become required in the future.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    private GetMariaDBBackupsArgs() {}

    private GetMariaDBBackupsArgs(GetMariaDBBackupsArgs $) {
        this.backupId = $.backupId;
        this.clusterId = $.clusterId;
        this.location = $.location;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMariaDBBackupsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMariaDBBackupsArgs $;

        public Builder() {
            $ = new GetMariaDBBackupsArgs();
        }

        public Builder(GetMariaDBBackupsArgs defaults) {
            $ = new GetMariaDBBackupsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupId [string] The unique ID of the backup.
         * 
         * @return builder
         * 
         */
        public Builder backupId(@Nullable Output<String> backupId) {
            $.backupId = backupId;
            return this;
        }

        /**
         * @param backupId [string] The unique ID of the backup.
         * 
         * @return builder
         * 
         */
        public Builder backupId(String backupId) {
            return backupId(Output.of(backupId));
        }

        /**
         * @param clusterId [string] The unique ID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId [string] The unique ID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param location [string] The location of the cluster. Different service endpoints are used based on location, possible options are: &#34;de/fra&#34;, &#34;de/txl&#34;, &#34;es/vit&#34;, &#34;fr/par&#34;, &#34;gb/lhr&#34;, &#34;us/ewr&#34;, &#34;us/las&#34;, &#34;us/mci&#34;. If not set, the endpoint will be the one corresponding to &#34;de/txl&#34;.
         * 
         * ⚠️ **Note:** Either `cluster_id` or `backup_id` must be used, but not both at the same time.
         * 
         * &gt; **⚠ WARNING:** `Location` attribute will become required in the future.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location [string] The location of the cluster. Different service endpoints are used based on location, possible options are: &#34;de/fra&#34;, &#34;de/txl&#34;, &#34;es/vit&#34;, &#34;fr/par&#34;, &#34;gb/lhr&#34;, &#34;us/ewr&#34;, &#34;us/las&#34;, &#34;us/mci&#34;. If not set, the endpoint will be the one corresponding to &#34;de/txl&#34;.
         * 
         * ⚠️ **Note:** Either `cluster_id` or `backup_id` must be used, but not both at the same time.
         * 
         * &gt; **⚠ WARNING:** `Location` attribute will become required in the future.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        public GetMariaDBBackupsArgs build() {
            return $;
        }
    }

}
