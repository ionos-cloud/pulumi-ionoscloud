// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.ionoscloud.compute.inputs.NatGatewayLanArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NatGatewayState extends com.pulumi.resources.ResourceArgs {

    public static final NatGatewayState Empty = new NatGatewayState();

    /**
     * [string] A Datacenter&#39;s UUID.
     * 
     */
    @Import(name="datacenterId")
    private @Nullable Output<String> datacenterId;

    /**
     * @return [string] A Datacenter&#39;s UUID.
     * 
     */
    public Optional<Output<String>> datacenterId() {
        return Optional.ofNullable(this.datacenterId);
    }

    /**
     * [list] A list of Local Area Networks the node pool should be part of.
     * 
     */
    @Import(name="lans")
    private @Nullable Output<List<NatGatewayLanArgs>> lans;

    /**
     * @return [list] A list of Local Area Networks the node pool should be part of.
     * 
     */
    public Optional<Output<List<NatGatewayLanArgs>>> lans() {
        return Optional.ofNullable(this.lans);
    }

    /**
     * [string] Name of the NAT gateway.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return [string] Name of the NAT gateway.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * [list]Collection of public IP addresses of the NAT gateway. Should be customer reserved IP addresses in that location.
     * 
     */
    @Import(name="publicIps")
    private @Nullable Output<List<String>> publicIps;

    /**
     * @return [list]Collection of public IP addresses of the NAT gateway. Should be customer reserved IP addresses in that location.
     * 
     */
    public Optional<Output<List<String>>> publicIps() {
        return Optional.ofNullable(this.publicIps);
    }

    private NatGatewayState() {}

    private NatGatewayState(NatGatewayState $) {
        this.datacenterId = $.datacenterId;
        this.lans = $.lans;
        this.name = $.name;
        this.publicIps = $.publicIps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NatGatewayState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NatGatewayState $;

        public Builder() {
            $ = new NatGatewayState();
        }

        public Builder(NatGatewayState defaults) {
            $ = new NatGatewayState(Objects.requireNonNull(defaults));
        }

        /**
         * @param datacenterId [string] A Datacenter&#39;s UUID.
         * 
         * @return builder
         * 
         */
        public Builder datacenterId(@Nullable Output<String> datacenterId) {
            $.datacenterId = datacenterId;
            return this;
        }

        /**
         * @param datacenterId [string] A Datacenter&#39;s UUID.
         * 
         * @return builder
         * 
         */
        public Builder datacenterId(String datacenterId) {
            return datacenterId(Output.of(datacenterId));
        }

        /**
         * @param lans [list] A list of Local Area Networks the node pool should be part of.
         * 
         * @return builder
         * 
         */
        public Builder lans(@Nullable Output<List<NatGatewayLanArgs>> lans) {
            $.lans = lans;
            return this;
        }

        /**
         * @param lans [list] A list of Local Area Networks the node pool should be part of.
         * 
         * @return builder
         * 
         */
        public Builder lans(List<NatGatewayLanArgs> lans) {
            return lans(Output.of(lans));
        }

        /**
         * @param lans [list] A list of Local Area Networks the node pool should be part of.
         * 
         * @return builder
         * 
         */
        public Builder lans(NatGatewayLanArgs... lans) {
            return lans(List.of(lans));
        }

        /**
         * @param name [string] Name of the NAT gateway.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name [string] Name of the NAT gateway.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicIps [list]Collection of public IP addresses of the NAT gateway. Should be customer reserved IP addresses in that location.
         * 
         * @return builder
         * 
         */
        public Builder publicIps(@Nullable Output<List<String>> publicIps) {
            $.publicIps = publicIps;
            return this;
        }

        /**
         * @param publicIps [list]Collection of public IP addresses of the NAT gateway. Should be customer reserved IP addresses in that location.
         * 
         * @return builder
         * 
         */
        public Builder publicIps(List<String> publicIps) {
            return publicIps(Output.of(publicIps));
        }

        /**
         * @param publicIps [list]Collection of public IP addresses of the NAT gateway. Should be customer reserved IP addresses in that location.
         * 
         * @return builder
         * 
         */
        public Builder publicIps(String... publicIps) {
            return publicIps(List.of(publicIps));
        }

        public NatGatewayState build() {
            return $;
        }
    }

}
