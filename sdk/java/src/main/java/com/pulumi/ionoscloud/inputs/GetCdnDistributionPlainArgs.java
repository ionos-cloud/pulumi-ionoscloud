// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCdnDistributionPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCdnDistributionPlainArgs Empty = new GetCdnDistributionPlainArgs();

    /**
     * Domain of an existing distribution that you want to search for. Search by domain is case-insensitive. The whole resource domain is required if `partial_match` parameter is not set to true.
     * 
     */
    @Import(name="domain")
    private @Nullable String domain;

    /**
     * @return Domain of an existing distribution that you want to search for. Search by domain is case-insensitive. The whole resource domain is required if `partial_match` parameter is not set to true.
     * 
     */
    public Optional<String> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * ID of the distribution you want to search for.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return ID of the distribution you want to search for.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Whether partial matching is allowed or not when using domain argument. Default value is false.
     * 
     * Either `domain` or `id` must be provided. If none, or both of `domain` and `id` are provided, the datasource will return an error.
     * 
     */
    @Import(name="partialMatch")
    private @Nullable Boolean partialMatch;

    /**
     * @return Whether partial matching is allowed or not when using domain argument. Default value is false.
     * 
     * Either `domain` or `id` must be provided. If none, or both of `domain` and `id` are provided, the datasource will return an error.
     * 
     */
    public Optional<Boolean> partialMatch() {
        return Optional.ofNullable(this.partialMatch);
    }

    private GetCdnDistributionPlainArgs() {}

    private GetCdnDistributionPlainArgs(GetCdnDistributionPlainArgs $) {
        this.domain = $.domain;
        this.id = $.id;
        this.partialMatch = $.partialMatch;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCdnDistributionPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCdnDistributionPlainArgs $;

        public Builder() {
            $ = new GetCdnDistributionPlainArgs();
        }

        public Builder(GetCdnDistributionPlainArgs defaults) {
            $ = new GetCdnDistributionPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domain Domain of an existing distribution that you want to search for. Search by domain is case-insensitive. The whole resource domain is required if `partial_match` parameter is not set to true.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable String domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param id ID of the distribution you want to search for.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param partialMatch Whether partial matching is allowed or not when using domain argument. Default value is false.
         * 
         * Either `domain` or `id` must be provided. If none, or both of `domain` and `id` are provided, the datasource will return an error.
         * 
         * @return builder
         * 
         */
        public Builder partialMatch(@Nullable Boolean partialMatch) {
            $.partialMatch = partialMatch;
            return this;
        }

        public GetCdnDistributionPlainArgs build() {
            return $;
        }
    }

}
