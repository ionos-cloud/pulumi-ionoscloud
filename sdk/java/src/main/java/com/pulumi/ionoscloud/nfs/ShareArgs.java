// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.nfs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.nfs.inputs.ShareClientGroupArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ShareArgs extends com.pulumi.resources.ResourceArgs {

    public static final ShareArgs Empty = new ShareArgs();

    /**
     * The groups of clients are the systems connecting to the Network File Storage cluster. Each group includes:
     * 
     */
    @Import(name="clientGroups", required=true)
    private Output<List<ShareClientGroupArgs>> clientGroups;

    /**
     * @return The groups of clients are the systems connecting to the Network File Storage cluster. Each group includes:
     * 
     */
    public Output<List<ShareClientGroupArgs>> clientGroups() {
        return this.clientGroups;
    }

    /**
     * The ID of the Network File Storage Cluster.
     * 
     */
    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    /**
     * @return The ID of the Network File Storage Cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }

    /**
     * The group ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.
     * 
     */
    @Import(name="gid")
    private @Nullable Output<Integer> gid;

    /**
     * @return The group ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.
     * 
     */
    public Optional<Output<Integer>> gid() {
        return Optional.ofNullable(this.gid);
    }

    /**
     * The location of the Network File Storage Cluster. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location of the Network File Storage Cluster. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The directory being exported.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The directory being exported.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The quota in MiB for the export. The quota can restrict the amount of data that can be stored within the export. The quota can be disabled using `0`. Default is `0`.
     * 
     */
    @Import(name="quota")
    private @Nullable Output<Integer> quota;

    /**
     * @return The quota in MiB for the export. The quota can restrict the amount of data that can be stored within the export. The quota can be disabled using `0`. Default is `0`.
     * 
     */
    public Optional<Output<Integer>> quota() {
        return Optional.ofNullable(this.quota);
    }

    /**
     * The user ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.
     * 
     */
    @Import(name="uid")
    private @Nullable Output<Integer> uid;

    /**
     * @return The user ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.
     * 
     */
    public Optional<Output<Integer>> uid() {
        return Optional.ofNullable(this.uid);
    }

    private ShareArgs() {}

    private ShareArgs(ShareArgs $) {
        this.clientGroups = $.clientGroups;
        this.clusterId = $.clusterId;
        this.gid = $.gid;
        this.location = $.location;
        this.name = $.name;
        this.quota = $.quota;
        this.uid = $.uid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ShareArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ShareArgs $;

        public Builder() {
            $ = new ShareArgs();
        }

        public Builder(ShareArgs defaults) {
            $ = new ShareArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientGroups The groups of clients are the systems connecting to the Network File Storage cluster. Each group includes:
         * 
         * @return builder
         * 
         */
        public Builder clientGroups(Output<List<ShareClientGroupArgs>> clientGroups) {
            $.clientGroups = clientGroups;
            return this;
        }

        /**
         * @param clientGroups The groups of clients are the systems connecting to the Network File Storage cluster. Each group includes:
         * 
         * @return builder
         * 
         */
        public Builder clientGroups(List<ShareClientGroupArgs> clientGroups) {
            return clientGroups(Output.of(clientGroups));
        }

        /**
         * @param clientGroups The groups of clients are the systems connecting to the Network File Storage cluster. Each group includes:
         * 
         * @return builder
         * 
         */
        public Builder clientGroups(ShareClientGroupArgs... clientGroups) {
            return clientGroups(List.of(clientGroups));
        }

        /**
         * @param clusterId The ID of the Network File Storage Cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The ID of the Network File Storage Cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param gid The group ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.
         * 
         * @return builder
         * 
         */
        public Builder gid(@Nullable Output<Integer> gid) {
            $.gid = gid;
            return this;
        }

        /**
         * @param gid The group ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.
         * 
         * @return builder
         * 
         */
        public Builder gid(Integer gid) {
            return gid(Output.of(gid));
        }

        /**
         * @param location The location of the Network File Storage Cluster. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the Network File Storage Cluster. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The directory being exported.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The directory being exported.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param quota The quota in MiB for the export. The quota can restrict the amount of data that can be stored within the export. The quota can be disabled using `0`. Default is `0`.
         * 
         * @return builder
         * 
         */
        public Builder quota(@Nullable Output<Integer> quota) {
            $.quota = quota;
            return this;
        }

        /**
         * @param quota The quota in MiB for the export. The quota can restrict the amount of data that can be stored within the export. The quota can be disabled using `0`. Default is `0`.
         * 
         * @return builder
         * 
         */
        public Builder quota(Integer quota) {
            return quota(Output.of(quota));
        }

        /**
         * @param uid The user ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable Output<Integer> uid) {
            $.uid = uid;
            return this;
        }

        /**
         * @param uid The user ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.
         * 
         * @return builder
         * 
         */
        public Builder uid(Integer uid) {
            return uid(Output.of(uid));
        }

        public ShareArgs build() {
            if ($.clientGroups == null) {
                throw new MissingRequiredPropertyException("ShareArgs", "clientGroups");
            }
            if ($.clusterId == null) {
                throw new MissingRequiredPropertyException("ShareArgs", "clusterId");
            }
            return $;
        }
    }

}
