// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.NatgatewayRuleArgs;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.inputs.NatgatewayRuleState;
import com.pulumi.ionoscloud.outputs.NatgatewayRuleTargetPortRange;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages a **Nat Gateway Rule** on IonosCloud.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.Ipblock;
 * import com.pulumi.ionoscloud.IpblockArgs;
 * import com.pulumi.ionoscloud.Lan;
 * import com.pulumi.ionoscloud.LanArgs;
 * import com.pulumi.ionoscloud.Natgateway;
 * import com.pulumi.ionoscloud.NatgatewayArgs;
 * import com.pulumi.ionoscloud.inputs.NatgatewayLanArgs;
 * import com.pulumi.ionoscloud.NatgatewayRule;
 * import com.pulumi.ionoscloud.NatgatewayRuleArgs;
 * import com.pulumi.ionoscloud.inputs.NatgatewayRuleTargetPortRangeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleDatacenter = new Datacenter("exampleDatacenter", DatacenterArgs.builder()        
 *             .location("us/las")
 *             .description("Datacenter Description")
 *             .secAuthProtection(false)
 *             .build());
 * 
 *         var exampleIpblock = new Ipblock("exampleIpblock", IpblockArgs.builder()        
 *             .location("us/las")
 *             .size(2)
 *             .build());
 * 
 *         var exampleLan = new Lan("exampleLan", LanArgs.builder()        
 *             .datacenterId(exampleDatacenter.id())
 *             .public_(true)
 *             .build());
 * 
 *         var exampleNatgateway = new Natgateway("exampleNatgateway", NatgatewayArgs.builder()        
 *             .datacenterId(exampleDatacenter.id())
 *             .publicIps(            
 *                 exampleIpblock.ips().applyValue(ips -> ips[0]),
 *                 exampleIpblock.ips().applyValue(ips -> ips[1]))
 *             .lans(NatgatewayLanArgs.builder()
 *                 .id(exampleLan.id())
 *                 .gatewayIps("10.11.2.5")
 *                 .build())
 *             .build());
 * 
 *         var exampleNatgatewayRule = new NatgatewayRule("exampleNatgatewayRule", NatgatewayRuleArgs.builder()        
 *             .datacenterId(exampleDatacenter.id())
 *             .natgatewayId(exampleNatgateway.id())
 *             .type("SNAT")
 *             .protocol("TCP")
 *             .sourceSubnet("10.0.1.0/24")
 *             .publicIp(exampleIpblock.ips().applyValue(ips -> ips[0]))
 *             .targetSubnet("10.0.1.0/24")
 *             .targetPortRange(NatgatewayRuleTargetPortRangeArgs.builder()
 *                 .start(500)
 *                 .end(1000)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * A Nat Gateway Rule resource can be imported using its `resource id`, the `datacenter id` and the `natgateway id , e.g.
 * 
 * ```sh
 * $ pulumi import ionoscloud:index/natgatewayRule:NatgatewayRule my_natgateway_rule {datacenter uuid}/{nat gateway uuid}/{nat gateway rule uuid}
 * ```
 * 
 */
@ResourceType(type="ionoscloud:index/natgatewayRule:NatgatewayRule")
public class NatgatewayRule extends com.pulumi.resources.CustomResource {
    /**
     * [string] A Datacenter&#39;s UUID.
     * 
     */
    @Export(name="datacenterId", refs={String.class}, tree="[0]")
    private Output<String> datacenterId;

    /**
     * @return [string] A Datacenter&#39;s UUID.
     * 
     */
    public Output<String> datacenterId() {
        return this.datacenterId;
    }
    /**
     * [string] Name of the NAT gateway rule.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [string] Name of the NAT gateway rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * [string] Nat Gateway&#39;s UUID.
     * 
     */
    @Export(name="natgatewayId", refs={String.class}, tree="[0]")
    private Output<String> natgatewayId;

    /**
     * @return [string] Nat Gateway&#39;s UUID.
     * 
     */
    public Output<String> natgatewayId() {
        return this.natgatewayId;
    }
    /**
     * [string] Protocol of the NAT gateway rule. Defaults to ALL. If protocol is &#39;ICMP&#39; then targetPortRange start and end cannot be set.
     * 
     */
    @Export(name="protocol", refs={String.class}, tree="[0]")
    private Output<String> protocol;

    /**
     * @return [string] Protocol of the NAT gateway rule. Defaults to ALL. If protocol is &#39;ICMP&#39; then targetPortRange start and end cannot be set.
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }
    /**
     * [string] Public IP address of the NAT gateway rule. Specifies the address used for masking outgoing packets source address field. Should be one of the customer reserved IP address already configured on the NAT gateway resource.
     * 
     */
    @Export(name="publicIp", refs={String.class}, tree="[0]")
    private Output<String> publicIp;

    /**
     * @return [string] Public IP address of the NAT gateway rule. Specifies the address used for masking outgoing packets source address field. Should be one of the customer reserved IP address already configured on the NAT gateway resource.
     * 
     */
    public Output<String> publicIp() {
        return this.publicIp;
    }
    /**
     * [string] Source subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to based on the packets source IP address.
     * 
     */
    @Export(name="sourceSubnet", refs={String.class}, tree="[0]")
    private Output<String> sourceSubnet;

    /**
     * @return [string] Source subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to based on the packets source IP address.
     * 
     */
    public Output<String> sourceSubnet() {
        return this.sourceSubnet;
    }
    /**
     * Target port range of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to based on destination port. If none is provided, rule will match any port.
     * 
     */
    @Export(name="targetPortRange", refs={NatgatewayRuleTargetPortRange.class}, tree="[0]")
    private Output<NatgatewayRuleTargetPortRange> targetPortRange;

    /**
     * @return Target port range of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to based on destination port. If none is provided, rule will match any port.
     * 
     */
    public Output<NatgatewayRuleTargetPortRange> targetPortRange() {
        return this.targetPortRange;
    }
    /**
     * [string] Target or destination subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to based on the packets destination IP address. If none is provided, rule will match any address.
     * 
     */
    @Export(name="targetSubnet", refs={String.class}, tree="[0]")
    private Output<String> targetSubnet;

    /**
     * @return [string] Target or destination subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to based on the packets destination IP address. If none is provided, rule will match any address.
     * 
     */
    public Output<String> targetSubnet() {
        return this.targetSubnet;
    }
    /**
     * [string] Type of the NAT gateway rule.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return [string] Type of the NAT gateway rule.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NatgatewayRule(java.lang.String name) {
        this(name, NatgatewayRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NatgatewayRule(java.lang.String name, NatgatewayRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NatgatewayRule(java.lang.String name, NatgatewayRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/natgatewayRule:NatgatewayRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NatgatewayRule(java.lang.String name, Output<java.lang.String> id, @Nullable NatgatewayRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/natgatewayRule:NatgatewayRule", name, state, makeResourceOptions(options, id), false);
    }

    private static NatgatewayRuleArgs makeArgs(NatgatewayRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NatgatewayRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NatgatewayRule get(java.lang.String name, Output<java.lang.String> id, @Nullable NatgatewayRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NatgatewayRule(name, id, state, options);
    }
}
