// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetTargetGroupHealthCheck {
    /**
     * @return The interval in milliseconds between consecutive health checks; default is 2000.
     * 
     */
    private Integer checkInterval;
    /**
     * @return The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with &#39;Check Interval&#39; set, the lesser of the two  values is used once the TCP connection is established.
     * 
     */
    private Integer checkTimeout;
    /**
     * @return The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
     * 
     */
    private Integer retries;

    private GetTargetGroupHealthCheck() {}
    /**
     * @return The interval in milliseconds between consecutive health checks; default is 2000.
     * 
     */
    public Integer checkInterval() {
        return this.checkInterval;
    }
    /**
     * @return The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with &#39;Check Interval&#39; set, the lesser of the two  values is used once the TCP connection is established.
     * 
     */
    public Integer checkTimeout() {
        return this.checkTimeout;
    }
    /**
     * @return The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
     * 
     */
    public Integer retries() {
        return this.retries;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTargetGroupHealthCheck defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer checkInterval;
        private Integer checkTimeout;
        private Integer retries;
        public Builder() {}
        public Builder(GetTargetGroupHealthCheck defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checkInterval = defaults.checkInterval;
    	      this.checkTimeout = defaults.checkTimeout;
    	      this.retries = defaults.retries;
        }

        @CustomType.Setter
        public Builder checkInterval(Integer checkInterval) {
            if (checkInterval == null) {
              throw new MissingRequiredPropertyException("GetTargetGroupHealthCheck", "checkInterval");
            }
            this.checkInterval = checkInterval;
            return this;
        }
        @CustomType.Setter
        public Builder checkTimeout(Integer checkTimeout) {
            if (checkTimeout == null) {
              throw new MissingRequiredPropertyException("GetTargetGroupHealthCheck", "checkTimeout");
            }
            this.checkTimeout = checkTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder retries(Integer retries) {
            if (retries == null) {
              throw new MissingRequiredPropertyException("GetTargetGroupHealthCheck", "retries");
            }
            this.retries = retries;
            return this;
        }
        public GetTargetGroupHealthCheck build() {
            final var _resultValue = new GetTargetGroupHealthCheck();
            _resultValue.checkInterval = checkInterval;
            _resultValue.checkTimeout = checkTimeout;
            _resultValue.retries = retries;
            return _resultValue;
        }
    }
}
