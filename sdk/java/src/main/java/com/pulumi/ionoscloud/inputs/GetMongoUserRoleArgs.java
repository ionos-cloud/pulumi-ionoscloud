// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetMongoUserRoleArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetMongoUserRoleArgs Empty = new GetMongoUserRoleArgs();

    @Import(name="database", required=true)
    private Output<String> database;

    public Output<String> database() {
        return this.database;
    }

    /**
     * A list of mongodb user roles. Examples: read, readWrite, readAnyDatabase
     * 
     */
    @Import(name="role", required=true)
    private Output<String> role;

    /**
     * @return A list of mongodb user roles. Examples: read, readWrite, readAnyDatabase
     * 
     */
    public Output<String> role() {
        return this.role;
    }

    private GetMongoUserRoleArgs() {}

    private GetMongoUserRoleArgs(GetMongoUserRoleArgs $) {
        this.database = $.database;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMongoUserRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMongoUserRoleArgs $;

        public Builder() {
            $ = new GetMongoUserRoleArgs();
        }

        public Builder(GetMongoUserRoleArgs defaults) {
            $ = new GetMongoUserRoleArgs(Objects.requireNonNull(defaults));
        }

        public Builder database(Output<String> database) {
            $.database = database;
            return this;
        }

        public Builder database(String database) {
            return database(Output.of(database));
        }

        /**
         * @param role A list of mongodb user roles. Examples: read, readWrite, readAnyDatabase
         * 
         * @return builder
         * 
         */
        public Builder role(Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role A list of mongodb user roles. Examples: read, readWrite, readAnyDatabase
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        public GetMongoUserRoleArgs build() {
            if ($.database == null) {
                throw new MissingRequiredPropertyException("GetMongoUserRoleArgs", "database");
            }
            if ($.role == null) {
                throw new MissingRequiredPropertyException("GetMongoUserRoleArgs", "role");
            }
            return $;
        }
    }

}
