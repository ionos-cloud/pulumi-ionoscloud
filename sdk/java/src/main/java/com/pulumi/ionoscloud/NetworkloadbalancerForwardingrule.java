// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.NetworkloadbalancerForwardingruleArgs;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.inputs.NetworkloadbalancerForwardingruleState;
import com.pulumi.ionoscloud.outputs.NetworkloadbalancerForwardingruleHealthCheck;
import com.pulumi.ionoscloud.outputs.NetworkloadbalancerForwardingruleTarget;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages a **Network Load Balancer Forwarding Rule** on IonosCloud.
 * 
 * ## Example Usage
 * 
 * ### 
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.Lan;
 * import com.pulumi.ionoscloud.LanArgs;
 * import com.pulumi.ionoscloud.Networkloadbalancer;
 * import com.pulumi.ionoscloud.NetworkloadbalancerArgs;
 * import com.pulumi.ionoscloud.NetworkloadbalancerForwardingrule;
 * import com.pulumi.ionoscloud.NetworkloadbalancerForwardingruleArgs;
 * import com.pulumi.ionoscloud.inputs.NetworkloadbalancerForwardingruleTargetArgs;
 * import com.pulumi.ionoscloud.inputs.NetworkloadbalancerForwardingruleTargetHealthCheckArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleDatacenter = new Datacenter("exampleDatacenter", DatacenterArgs.builder()        
 *             .location("us/las")
 *             .description("Datacenter Description")
 *             .secAuthProtection(false)
 *             .build());
 * 
 *         var example1 = new Lan("example1", LanArgs.builder()        
 *             .datacenterId(exampleDatacenter.id())
 *             .public_(false)
 *             .build());
 * 
 *         var example2 = new Lan("example2", LanArgs.builder()        
 *             .datacenterId(exampleDatacenter.id())
 *             .public_(false)
 *             .build());
 * 
 *         var exampleNetworkloadbalancer = new Networkloadbalancer("exampleNetworkloadbalancer", NetworkloadbalancerArgs.builder()        
 *             .datacenterId(exampleDatacenter.id())
 *             .listenerLan(example1.id())
 *             .targetLan(example2.id())
 *             .ips("10.12.118.224")
 *             .lbPrivateIps("10.13.72.225/24")
 *             .build());
 * 
 *         var exampleNetworkloadbalancerForwardingrule = new NetworkloadbalancerForwardingrule("exampleNetworkloadbalancerForwardingrule", NetworkloadbalancerForwardingruleArgs.builder()        
 *             .datacenterId(exampleDatacenter.id())
 *             .networkloadbalancerId(exampleNetworkloadbalancer.id())
 *             .algorithm("SOURCE_IP")
 *             .protocol("TCP")
 *             .listenerIp("10.12.118.224")
 *             .listenerPort("8081")
 *             .targets(NetworkloadbalancerForwardingruleTargetArgs.builder()
 *                 .ip("22.231.2.2")
 *                 .port("8080")
 *                 .weight("123")
 *                 .proxyProtocol("v1")
 *                 .healthCheck(NetworkloadbalancerForwardingruleTargetHealthCheckArgs.builder()
 *                     .check(true)
 *                     .checkInterval(1000)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Usage with dynamic block for targets:
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.Lan;
 * import com.pulumi.ionoscloud.LanArgs;
 * import com.pulumi.ionoscloud.Networkloadbalancer;
 * import com.pulumi.ionoscloud.NetworkloadbalancerArgs;
 * import com.pulumi.ionoscloud.NetworkloadbalancerForwardingrule;
 * import com.pulumi.ionoscloud.NetworkloadbalancerForwardingruleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         var exampleDatacenter = new Datacenter("exampleDatacenter", DatacenterArgs.builder()        
 *             .location("us/las")
 *             .description("Datacenter Description")
 *             .secAuthProtection(false)
 *             .build());
 * 
 *         var example1 = new Lan("example1", LanArgs.builder()        
 *             .datacenterId(exampleDatacenter.id())
 *             .public_(false)
 *             .build());
 * 
 *         var example2 = new Lan("example2", LanArgs.builder()        
 *             .datacenterId(exampleDatacenter.id())
 *             .public_(false)
 *             .build());
 * 
 *         var exampleNetworkloadbalancer = new Networkloadbalancer("exampleNetworkloadbalancer", NetworkloadbalancerArgs.builder()        
 *             .datacenterId(exampleDatacenter.id())
 *             .listenerLan(example1.id())
 *             .targetLan(example2.id())
 *             .ips("10.12.118.224")
 *             .lbPrivateIps("10.13.72.225/24")
 *             .build());
 * 
 *         final var iPs = config.get("iPs").orElse(        
 *             "22.231.2.2",
 *             "22.231.2.3",
 *             "22.231.2.4");
 *         var exampleNetworkloadbalancerForwardingrule = new NetworkloadbalancerForwardingrule("exampleNetworkloadbalancerForwardingrule", NetworkloadbalancerForwardingruleArgs.builder()        
 *             .datacenterId(exampleDatacenter.id())
 *             .networkloadbalancerId(exampleNetworkloadbalancer.id())
 *             .algorithm("SOURCE_IP")
 *             .protocol("TCP")
 *             .listenerIp("10.12.118.224")
 *             .listenerPort("8081")
 *             .dynamic(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * A Network Load Balancer Forwarding Rule resource can be imported using its `resource id`, the `datacenter id` and the `networkloadbalancer id` e.g.
 * 
 * ```sh
 * $ pulumi import ionoscloud:index/networkloadbalancerForwardingrule:NetworkloadbalancerForwardingrule my_networkloadbalancer_forwardingrule {datacenter uuid}/{networkloadbalancer uuid}/{networkloadbalancer_forwardingrule uuid}
 * ```
 * 
 */
@ResourceType(type="ionoscloud:index/networkloadbalancerForwardingrule:NetworkloadbalancerForwardingrule")
public class NetworkloadbalancerForwardingrule extends com.pulumi.resources.CustomResource {
    /**
     * [string] Algorithm for the balancing.
     * 
     */
    @Export(name="algorithm", refs={String.class}, tree="[0]")
    private Output<String> algorithm;

    /**
     * @return [string] Algorithm for the balancing.
     * 
     */
    public Output<String> algorithm() {
        return this.algorithm;
    }
    /**
     * [string] A Datacenter&#39;s UUID.
     * 
     */
    @Export(name="datacenterId", refs={String.class}, tree="[0]")
    private Output<String> datacenterId;

    /**
     * @return [string] A Datacenter&#39;s UUID.
     * 
     */
    public Output<String> datacenterId() {
        return this.datacenterId;
    }
    /**
     * Health check attributes for Network Load Balancer forwarding rule target.
     * 
     */
    @Export(name="healthCheck", refs={NetworkloadbalancerForwardingruleHealthCheck.class}, tree="[0]")
    private Output<NetworkloadbalancerForwardingruleHealthCheck> healthCheck;

    /**
     * @return Health check attributes for Network Load Balancer forwarding rule target.
     * 
     */
    public Output<NetworkloadbalancerForwardingruleHealthCheck> healthCheck() {
        return this.healthCheck;
    }
    /**
     * [string] Listening IP. (inbound)
     * 
     */
    @Export(name="listenerIp", refs={String.class}, tree="[0]")
    private Output<String> listenerIp;

    /**
     * @return [string] Listening IP. (inbound)
     * 
     */
    public Output<String> listenerIp() {
        return this.listenerIp;
    }
    /**
     * [int] Listening port number. (inbound) (range: 1 to 65535)
     * 
     */
    @Export(name="listenerPort", refs={Integer.class}, tree="[0]")
    private Output<Integer> listenerPort;

    /**
     * @return [int] Listening port number. (inbound) (range: 1 to 65535)
     * 
     */
    public Output<Integer> listenerPort() {
        return this.listenerPort;
    }
    /**
     * [string] A name of that Network Load Balancer forwarding rule.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [string] A name of that Network Load Balancer forwarding rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="networkloadbalancerId", refs={String.class}, tree="[0]")
    private Output<String> networkloadbalancerId;

    public Output<String> networkloadbalancerId() {
        return this.networkloadbalancerId;
    }
    /**
     * [string] Protocol of the balancing.
     * 
     */
    @Export(name="protocol", refs={String.class}, tree="[0]")
    private Output<String> protocol;

    /**
     * @return [string] Protocol of the balancing.
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }
    /**
     * [Set] Array of items in that collection.
     * 
     */
    @Export(name="targets", refs={List.class,NetworkloadbalancerForwardingruleTarget.class}, tree="[0,1]")
    private Output<List<NetworkloadbalancerForwardingruleTarget>> targets;

    /**
     * @return [Set] Array of items in that collection.
     * 
     */
    public Output<List<NetworkloadbalancerForwardingruleTarget>> targets() {
        return this.targets;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkloadbalancerForwardingrule(java.lang.String name) {
        this(name, NetworkloadbalancerForwardingruleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkloadbalancerForwardingrule(java.lang.String name, NetworkloadbalancerForwardingruleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkloadbalancerForwardingrule(java.lang.String name, NetworkloadbalancerForwardingruleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/networkloadbalancerForwardingrule:NetworkloadbalancerForwardingrule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NetworkloadbalancerForwardingrule(java.lang.String name, Output<java.lang.String> id, @Nullable NetworkloadbalancerForwardingruleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/networkloadbalancerForwardingrule:NetworkloadbalancerForwardingrule", name, state, makeResourceOptions(options, id), false);
    }

    private static NetworkloadbalancerForwardingruleArgs makeArgs(NetworkloadbalancerForwardingruleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NetworkloadbalancerForwardingruleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkloadbalancerForwardingrule get(java.lang.String name, Output<java.lang.String> id, @Nullable NetworkloadbalancerForwardingruleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkloadbalancerForwardingrule(name, id, state, options);
    }
}
