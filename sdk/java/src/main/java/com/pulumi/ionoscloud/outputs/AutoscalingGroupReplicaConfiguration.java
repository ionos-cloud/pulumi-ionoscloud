// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.outputs.AutoscalingGroupReplicaConfigurationNic;
import com.pulumi.ionoscloud.outputs.AutoscalingGroupReplicaConfigurationVolume;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutoscalingGroupReplicaConfiguration {
    /**
     * @return [string] The zone where the VMs are created using this configuration. Possible values are: `AUTO`, `ZONE_1`, `ZONE_2`.
     * 
     */
    private String availabilityZone;
    /**
     * @return [int] The total number of cores for the VMs.
     * 
     */
    private Integer cores;
    /**
     * @return [string] PU family for the VMs created using this configuration. If null, the VM will be created with the default CPU family for the assigned location. Possible values are: `INTEL_SKYLAKE`, `INTEL_XEON`.
     * 
     */
    private @Nullable String cpuFamily;
    /**
     * @return Set of NICs associated with this Replica.
     * 
     */
    private @Nullable List<AutoscalingGroupReplicaConfigurationNic> nics;
    /**
     * @return [int] The amount of memory for the VMs in MB, e.g. 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB.
     * 
     */
    private Integer ram;
    /**
     * @return [list] List of volumes associated with this Replica.
     * 
     */
    private @Nullable List<AutoscalingGroupReplicaConfigurationVolume> volumes;

    private AutoscalingGroupReplicaConfiguration() {}
    /**
     * @return [string] The zone where the VMs are created using this configuration. Possible values are: `AUTO`, `ZONE_1`, `ZONE_2`.
     * 
     */
    public String availabilityZone() {
        return this.availabilityZone;
    }
    /**
     * @return [int] The total number of cores for the VMs.
     * 
     */
    public Integer cores() {
        return this.cores;
    }
    /**
     * @return [string] PU family for the VMs created using this configuration. If null, the VM will be created with the default CPU family for the assigned location. Possible values are: `INTEL_SKYLAKE`, `INTEL_XEON`.
     * 
     */
    public Optional<String> cpuFamily() {
        return Optional.ofNullable(this.cpuFamily);
    }
    /**
     * @return Set of NICs associated with this Replica.
     * 
     */
    public List<AutoscalingGroupReplicaConfigurationNic> nics() {
        return this.nics == null ? List.of() : this.nics;
    }
    /**
     * @return [int] The amount of memory for the VMs in MB, e.g. 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB.
     * 
     */
    public Integer ram() {
        return this.ram;
    }
    /**
     * @return [list] List of volumes associated with this Replica.
     * 
     */
    public List<AutoscalingGroupReplicaConfigurationVolume> volumes() {
        return this.volumes == null ? List.of() : this.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoscalingGroupReplicaConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityZone;
        private Integer cores;
        private @Nullable String cpuFamily;
        private @Nullable List<AutoscalingGroupReplicaConfigurationNic> nics;
        private Integer ram;
        private @Nullable List<AutoscalingGroupReplicaConfigurationVolume> volumes;
        public Builder() {}
        public Builder(AutoscalingGroupReplicaConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityZone = defaults.availabilityZone;
    	      this.cores = defaults.cores;
    	      this.cpuFamily = defaults.cpuFamily;
    	      this.nics = defaults.nics;
    	      this.ram = defaults.ram;
    	      this.volumes = defaults.volumes;
        }

        @CustomType.Setter
        public Builder availabilityZone(String availabilityZone) {
            if (availabilityZone == null) {
              throw new MissingRequiredPropertyException("AutoscalingGroupReplicaConfiguration", "availabilityZone");
            }
            this.availabilityZone = availabilityZone;
            return this;
        }
        @CustomType.Setter
        public Builder cores(Integer cores) {
            if (cores == null) {
              throw new MissingRequiredPropertyException("AutoscalingGroupReplicaConfiguration", "cores");
            }
            this.cores = cores;
            return this;
        }
        @CustomType.Setter
        public Builder cpuFamily(@Nullable String cpuFamily) {

            this.cpuFamily = cpuFamily;
            return this;
        }
        @CustomType.Setter
        public Builder nics(@Nullable List<AutoscalingGroupReplicaConfigurationNic> nics) {

            this.nics = nics;
            return this;
        }
        public Builder nics(AutoscalingGroupReplicaConfigurationNic... nics) {
            return nics(List.of(nics));
        }
        @CustomType.Setter
        public Builder ram(Integer ram) {
            if (ram == null) {
              throw new MissingRequiredPropertyException("AutoscalingGroupReplicaConfiguration", "ram");
            }
            this.ram = ram;
            return this;
        }
        @CustomType.Setter
        public Builder volumes(@Nullable List<AutoscalingGroupReplicaConfigurationVolume> volumes) {

            this.volumes = volumes;
            return this;
        }
        public Builder volumes(AutoscalingGroupReplicaConfigurationVolume... volumes) {
            return volumes(List.of(volumes));
        }
        public AutoscalingGroupReplicaConfiguration build() {
            final var _resultValue = new AutoscalingGroupReplicaConfiguration();
            _resultValue.availabilityZone = availabilityZone;
            _resultValue.cores = cores;
            _resultValue.cpuFamily = cpuFamily;
            _resultValue.nics = nics;
            _resultValue.ram = ram;
            _resultValue.volumes = volumes;
            return _resultValue;
        }
    }
}
