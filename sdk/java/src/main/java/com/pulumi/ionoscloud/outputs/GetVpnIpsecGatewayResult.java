// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.outputs.GetVpnIpsecGatewayConnection;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVpnIpsecGatewayResult {
    /**
     * @return The network connection for your gateway.
     * 
     */
    private List<GetVpnIpsecGatewayConnection> connections;
    /**
     * @return (Optional)[string] The human-readable description of the IPSec Gateway.
     * 
     */
    private String description;
    /**
     * @return Public IP address to be assigned to the gateway.
     * 
     */
    private String gatewayIp;
    /**
     * @return The unique ID of the IPSec Gateway.
     * 
     */
    private String id;
    private String location;
    /**
     * @return The name of the IPSec Gateway.
     * 
     */
    private String name;
    /**
     * @return The IKE version that is permitted for the VPN tunnels.
     * 
     */
    private String version;

    private GetVpnIpsecGatewayResult() {}
    /**
     * @return The network connection for your gateway.
     * 
     */
    public List<GetVpnIpsecGatewayConnection> connections() {
        return this.connections;
    }
    /**
     * @return (Optional)[string] The human-readable description of the IPSec Gateway.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Public IP address to be assigned to the gateway.
     * 
     */
    public String gatewayIp() {
        return this.gatewayIp;
    }
    /**
     * @return The unique ID of the IPSec Gateway.
     * 
     */
    public String id() {
        return this.id;
    }
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the IPSec Gateway.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The IKE version that is permitted for the VPN tunnels.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpnIpsecGatewayResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetVpnIpsecGatewayConnection> connections;
        private String description;
        private String gatewayIp;
        private String id;
        private String location;
        private String name;
        private String version;
        public Builder() {}
        public Builder(GetVpnIpsecGatewayResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connections = defaults.connections;
    	      this.description = defaults.description;
    	      this.gatewayIp = defaults.gatewayIp;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder connections(List<GetVpnIpsecGatewayConnection> connections) {
            if (connections == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecGatewayResult", "connections");
            }
            this.connections = connections;
            return this;
        }
        public Builder connections(GetVpnIpsecGatewayConnection... connections) {
            return connections(List.of(connections));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecGatewayResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayIp(String gatewayIp) {
            if (gatewayIp == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecGatewayResult", "gatewayIp");
            }
            this.gatewayIp = gatewayIp;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecGatewayResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecGatewayResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecGatewayResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecGatewayResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetVpnIpsecGatewayResult build() {
            final var _resultValue = new GetVpnIpsecGatewayResult();
            _resultValue.connections = connections;
            _resultValue.description = description;
            _resultValue.gatewayIp = gatewayIp;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
