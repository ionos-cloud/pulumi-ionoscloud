// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAutoscalingGroupReplicaConfigurationVolume {
    /**
     * @return The uuid of the Backup Unit that user has access to.
     * 
     */
    private String backupUnitId;
    /**
     * @return Determines whether the volume will be used as a boot volume: NONE - the volume will not be used as boot volume, PRIMARY - the volume will be used as boot volume, AUTO - will delegate the decision to the provisioning engine to decide whether to use the volume as boot volume.
     * 
     */
    private String bootOrder;
    /**
     * @return The bus type of the volume. Default setting is &#39;VIRTIO&#39;. The bus type &#39;IDE&#39; is also supported.
     * 
     */
    private String bus;
    /**
     * @return The image installed on the volume. Only the UUID of the image is presently supported.
     * 
     */
    private String image;
    /**
     * @return The image installed on the volume. Must be an &#39;imageAlias&#39; as specified via the images API.
     * 
     */
    private String imageAlias;
    /**
     * @return Name of an existing Autoscaling Group that you want to search for.
     * 
     * Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
     * 
     */
    private String name;
    /**
     * @return User-defined size for this replica volume in GB.
     * 
     */
    private Integer size;
    private List<String> sshKeys;
    /**
     * @return Type of resource
     * 
     */
    private String type;

    private GetAutoscalingGroupReplicaConfigurationVolume() {}
    /**
     * @return The uuid of the Backup Unit that user has access to.
     * 
     */
    public String backupUnitId() {
        return this.backupUnitId;
    }
    /**
     * @return Determines whether the volume will be used as a boot volume: NONE - the volume will not be used as boot volume, PRIMARY - the volume will be used as boot volume, AUTO - will delegate the decision to the provisioning engine to decide whether to use the volume as boot volume.
     * 
     */
    public String bootOrder() {
        return this.bootOrder;
    }
    /**
     * @return The bus type of the volume. Default setting is &#39;VIRTIO&#39;. The bus type &#39;IDE&#39; is also supported.
     * 
     */
    public String bus() {
        return this.bus;
    }
    /**
     * @return The image installed on the volume. Only the UUID of the image is presently supported.
     * 
     */
    public String image() {
        return this.image;
    }
    /**
     * @return The image installed on the volume. Must be an &#39;imageAlias&#39; as specified via the images API.
     * 
     */
    public String imageAlias() {
        return this.imageAlias;
    }
    /**
     * @return Name of an existing Autoscaling Group that you want to search for.
     * 
     * Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return User-defined size for this replica volume in GB.
     * 
     */
    public Integer size() {
        return this.size;
    }
    public List<String> sshKeys() {
        return this.sshKeys;
    }
    /**
     * @return Type of resource
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutoscalingGroupReplicaConfigurationVolume defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backupUnitId;
        private String bootOrder;
        private String bus;
        private String image;
        private String imageAlias;
        private String name;
        private Integer size;
        private List<String> sshKeys;
        private String type;
        public Builder() {}
        public Builder(GetAutoscalingGroupReplicaConfigurationVolume defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupUnitId = defaults.backupUnitId;
    	      this.bootOrder = defaults.bootOrder;
    	      this.bus = defaults.bus;
    	      this.image = defaults.image;
    	      this.imageAlias = defaults.imageAlias;
    	      this.name = defaults.name;
    	      this.size = defaults.size;
    	      this.sshKeys = defaults.sshKeys;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder backupUnitId(String backupUnitId) {
            if (backupUnitId == null) {
              throw new MissingRequiredPropertyException("GetAutoscalingGroupReplicaConfigurationVolume", "backupUnitId");
            }
            this.backupUnitId = backupUnitId;
            return this;
        }
        @CustomType.Setter
        public Builder bootOrder(String bootOrder) {
            if (bootOrder == null) {
              throw new MissingRequiredPropertyException("GetAutoscalingGroupReplicaConfigurationVolume", "bootOrder");
            }
            this.bootOrder = bootOrder;
            return this;
        }
        @CustomType.Setter
        public Builder bus(String bus) {
            if (bus == null) {
              throw new MissingRequiredPropertyException("GetAutoscalingGroupReplicaConfigurationVolume", "bus");
            }
            this.bus = bus;
            return this;
        }
        @CustomType.Setter
        public Builder image(String image) {
            if (image == null) {
              throw new MissingRequiredPropertyException("GetAutoscalingGroupReplicaConfigurationVolume", "image");
            }
            this.image = image;
            return this;
        }
        @CustomType.Setter
        public Builder imageAlias(String imageAlias) {
            if (imageAlias == null) {
              throw new MissingRequiredPropertyException("GetAutoscalingGroupReplicaConfigurationVolume", "imageAlias");
            }
            this.imageAlias = imageAlias;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAutoscalingGroupReplicaConfigurationVolume", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetAutoscalingGroupReplicaConfigurationVolume", "size");
            }
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder sshKeys(List<String> sshKeys) {
            if (sshKeys == null) {
              throw new MissingRequiredPropertyException("GetAutoscalingGroupReplicaConfigurationVolume", "sshKeys");
            }
            this.sshKeys = sshKeys;
            return this;
        }
        public Builder sshKeys(String... sshKeys) {
            return sshKeys(List.of(sshKeys));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetAutoscalingGroupReplicaConfigurationVolume", "type");
            }
            this.type = type;
            return this;
        }
        public GetAutoscalingGroupReplicaConfigurationVolume build() {
            final var _resultValue = new GetAutoscalingGroupReplicaConfigurationVolume();
            _resultValue.backupUnitId = backupUnitId;
            _resultValue.bootOrder = bootOrder;
            _resultValue.bus = bus;
            _resultValue.image = image;
            _resultValue.imageAlias = imageAlias;
            _resultValue.name = name;
            _resultValue.size = size;
            _resultValue.sshKeys = sshKeys;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
