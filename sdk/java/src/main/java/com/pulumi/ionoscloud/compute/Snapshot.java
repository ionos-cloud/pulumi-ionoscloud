// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.compute.SnapshotArgs;
import com.pulumi.ionoscloud.compute.inputs.SnapshotState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages **Snapshots** on IonosCloud.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.ComputeFunctions;
 * import com.pulumi.ionoscloud.compute.inputs.GetImageArgs;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.compute.Lan;
 * import com.pulumi.ionoscloud.compute.LanArgs;
 * import com.pulumi.random.password;
 * import com.pulumi.random.PasswordArgs;
 * import com.pulumi.ionoscloud.compute.Server;
 * import com.pulumi.ionoscloud.compute.ServerArgs;
 * import com.pulumi.ionoscloud.compute.inputs.ServerVolumeArgs;
 * import com.pulumi.ionoscloud.compute.Snapshot;
 * import com.pulumi.ionoscloud.compute.SnapshotArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var example = ComputeFunctions.getImage(GetImageArgs.builder()
 *             .type("HDD")
 *             .imageAlias("ubuntu:latest")
 *             .location("us/las")
 *             .build());
 * 
 *         var exampleDatacenter = new Datacenter("exampleDatacenter", DatacenterArgs.builder()
 *             .name("Datacenter Example")
 *             .location("us/las")
 *             .description("Datacenter Description")
 *             .secAuthProtection(false)
 *             .build());
 * 
 *         var exampleLan = new Lan("exampleLan", LanArgs.builder()
 *             .datacenterId(exampleDatacenter.id())
 *             .public_(true)
 *             .name("Lan Example")
 *             .build());
 * 
 *         var serverImagePassword = new Password("serverImagePassword", PasswordArgs.builder()
 *             .length(16)
 *             .special(false)
 *             .build());
 * 
 *         var exampleServer = new Server("exampleServer", ServerArgs.builder()
 *             .name("Server Example")
 *             .datacenterId(exampleDatacenter.id())
 *             .cores(1)
 *             .ram(1024)
 *             .availabilityZone("ZONE_1")
 *             .cpuFamily("INTEL_XEON")
 *             .imageName(example.applyValue(getImageResult -> getImageResult.id()))
 *             .imagePassword(serverImagePassword.result())
 *             .type("ENTERPRISE")
 *             .volume(ServerVolumeArgs.builder()
 *                 .name("system")
 *                 .size(5)
 *                 .diskType("SSD Standard")
 *                 .userData("foo")
 *                 .bus("VIRTIO")
 *                 .availabilityZone("ZONE_1")
 *                 .build())
 *             .build());
 * 
 *         var testSnapshot = new Snapshot("testSnapshot", SnapshotArgs.builder()
 *             .datacenterId(exampleDatacenter.id())
 *             .volumeId(exampleServer.bootVolume())
 *             .name("Snapshot Example")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Resource Snapshot can be imported using the `snapshot id`, e.g.
 * 
 * ```sh
 * $ pulumi import ionoscloud:compute/snapshot:Snapshot mysnapshot snapshot uuid
 * ```
 * 
 */
@ResourceType(type="ionoscloud:compute/snapshot:Snapshot")
public class Snapshot extends com.pulumi.resources.CustomResource {
    /**
     * (Computed)[string] Is capable of CPU hot plug (no reboot required). Can only be updated.
     * 
     */
    @Export(name="cpuHotPlug", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> cpuHotPlug;

    /**
     * @return (Computed)[string] Is capable of CPU hot plug (no reboot required). Can only be updated.
     * 
     */
    public Output<Boolean> cpuHotPlug() {
        return this.cpuHotPlug;
    }
    /**
     * Is capable of CPU hot unplug (no reboot required)
     * 
     */
    @Export(name="cpuHotUnplug", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> cpuHotUnplug;

    /**
     * @return Is capable of CPU hot unplug (no reboot required)
     * 
     */
    public Output<Boolean> cpuHotUnplug() {
        return this.cpuHotUnplug;
    }
    /**
     * [string] The ID of the Virtual Data Center.
     * 
     */
    @Export(name="datacenterId", refs={String.class}, tree="[0]")
    private Output<String> datacenterId;

    /**
     * @return [string] The ID of the Virtual Data Center.
     * 
     */
    public Output<String> datacenterId() {
        return this.datacenterId;
    }
    /**
     * (Computed)[string] Human readable description
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Computed)[string] Human readable description
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Is capable of SCSI drive hot plug (no reboot required)
     * 
     */
    @Export(name="discScsiHotPlug", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> discScsiHotPlug;

    /**
     * @return Is capable of SCSI drive hot plug (no reboot required)
     * 
     */
    public Output<Boolean> discScsiHotPlug() {
        return this.discScsiHotPlug;
    }
    /**
     * Is capable of SCSI drive hot unplug (no reboot required). This works only for non-Windows virtual Machines.
     * 
     */
    @Export(name="discScsiHotUnplug", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> discScsiHotUnplug;

    /**
     * @return Is capable of SCSI drive hot unplug (no reboot required). This works only for non-Windows virtual Machines.
     * 
     */
    public Output<Boolean> discScsiHotUnplug() {
        return this.discScsiHotUnplug;
    }
    /**
     * (Computed)[string] Is capable of Virt-IO drive hot plug (no reboot required). Can only be updated.
     * 
     */
    @Export(name="discVirtioHotPlug", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> discVirtioHotPlug;

    /**
     * @return (Computed)[string] Is capable of Virt-IO drive hot plug (no reboot required). Can only be updated.
     * 
     */
    public Output<Boolean> discVirtioHotPlug() {
        return this.discVirtioHotPlug;
    }
    /**
     * (Computed)[string] Is capable of Virt-IO drive hot unplug (no reboot required). This works only for non-Windows virtual Machines. Can only be updated.
     * 
     */
    @Export(name="discVirtioHotUnplug", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> discVirtioHotUnplug;

    /**
     * @return (Computed)[string] Is capable of Virt-IO drive hot unplug (no reboot required). This works only for non-Windows virtual Machines. Can only be updated.
     * 
     */
    public Output<Boolean> discVirtioHotUnplug() {
        return this.discVirtioHotUnplug;
    }
    /**
     * (Computed)[string] OS type of this Snapshot
     * 
     */
    @Export(name="licenceType", refs={String.class}, tree="[0]")
    private Output<String> licenceType;

    /**
     * @return (Computed)[string] OS type of this Snapshot
     * 
     */
    public Output<String> licenceType() {
        return this.licenceType;
    }
    /**
     * Location of that image/snapshot
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Location of that image/snapshot
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * [string] The name of the snapshot.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [string] The name of the snapshot.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * (Computed)[string] Is capable of nic hot plug (no reboot required). Can only be updated.
     * 
     */
    @Export(name="nicHotPlug", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> nicHotPlug;

    /**
     * @return (Computed)[string] Is capable of nic hot plug (no reboot required). Can only be updated.
     * 
     */
    public Output<Boolean> nicHotPlug() {
        return this.nicHotPlug;
    }
    /**
     * (Computed)[string] Is capable of nic hot unplug (no reboot required). Can only be updated.
     * 
     */
    @Export(name="nicHotUnplug", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> nicHotUnplug;

    /**
     * @return (Computed)[string] Is capable of nic hot unplug (no reboot required). Can only be updated.
     * 
     */
    public Output<Boolean> nicHotUnplug() {
        return this.nicHotUnplug;
    }
    /**
     * (Computed)[string] Is capable of memory hot plug (no reboot required). Can only be updated.
     * 
     */
    @Export(name="ramHotPlug", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> ramHotPlug;

    /**
     * @return (Computed)[string] Is capable of memory hot plug (no reboot required). Can only be updated.
     * 
     */
    public Output<Boolean> ramHotPlug() {
        return this.ramHotPlug;
    }
    /**
     * Is capable of memory hot unplug (no reboot required)
     * 
     */
    @Export(name="ramHotUnplug", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> ramHotUnplug;

    /**
     * @return Is capable of memory hot unplug (no reboot required)
     * 
     */
    public Output<Boolean> ramHotUnplug() {
        return this.ramHotUnplug;
    }
    /**
     * Boolean value representing if the snapshot requires extra protection e.g. two factor protection
     * 
     */
    @Export(name="secAuthProtection", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> secAuthProtection;

    /**
     * @return Boolean value representing if the snapshot requires extra protection e.g. two factor protection
     * 
     */
    public Output<Boolean> secAuthProtection() {
        return this.secAuthProtection;
    }
    /**
     * The size of the image in GB
     * 
     */
    @Export(name="size", refs={Integer.class}, tree="[0]")
    private Output<Integer> size;

    /**
     * @return The size of the image in GB
     * 
     */
    public Output<Integer> size() {
        return this.size;
    }
    /**
     * [string] The ID of the specific volume to take the snapshot from.
     * 
     */
    @Export(name="volumeId", refs={String.class}, tree="[0]")
    private Output<String> volumeId;

    /**
     * @return [string] The ID of the specific volume to take the snapshot from.
     * 
     */
    public Output<String> volumeId() {
        return this.volumeId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Snapshot(java.lang.String name) {
        this(name, SnapshotArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Snapshot(java.lang.String name, SnapshotArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Snapshot(java.lang.String name, SnapshotArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:compute/snapshot:Snapshot", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Snapshot(java.lang.String name, Output<java.lang.String> id, @Nullable SnapshotState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:compute/snapshot:Snapshot", name, state, makeResourceOptions(options, id), false);
    }

    private static SnapshotArgs makeArgs(SnapshotArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SnapshotArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Snapshot get(java.lang.String name, Output<java.lang.String> id, @Nullable SnapshotState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Snapshot(name, id, state, options);
    }
}
