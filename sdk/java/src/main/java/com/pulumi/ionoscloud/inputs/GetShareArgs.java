// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetShareArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetShareArgs Empty = new GetShareArgs();

    /**
     * The flag that specifies if the group has permission to edit privileges on this resource.
     * 
     */
    @Import(name="editPrivilege")
    private @Nullable Output<Boolean> editPrivilege;

    /**
     * @return The flag that specifies if the group has permission to edit privileges on this resource.
     * 
     */
    public Optional<Output<Boolean>> editPrivilege() {
        return Optional.ofNullable(this.editPrivilege);
    }

    /**
     * The ID of the specific group containing the resource to update.
     * 
     */
    @Import(name="groupId", required=true)
    private Output<String> groupId;

    /**
     * @return The ID of the specific group containing the resource to update.
     * 
     */
    public Output<String> groupId() {
        return this.groupId;
    }

    /**
     * The uuid of the share object
     * 
     * `id`, `resource_id` and `group_id` must be provided. If any of them are missing, the datasource will return an error.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The uuid of the share object
     * 
     * `id`, `resource_id` and `group_id` must be provided. If any of them are missing, the datasource will return an error.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * The ID of the specific resource to update.
     * 
     */
    @Import(name="resourceId", required=true)
    private Output<String> resourceId;

    /**
     * @return The ID of the specific resource to update.
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }

    /**
     * The group has permission to share this resource.
     * 
     */
    @Import(name="sharePrivilege")
    private @Nullable Output<Boolean> sharePrivilege;

    /**
     * @return The group has permission to share this resource.
     * 
     */
    public Optional<Output<Boolean>> sharePrivilege() {
        return Optional.ofNullable(this.sharePrivilege);
    }

    private GetShareArgs() {}

    private GetShareArgs(GetShareArgs $) {
        this.editPrivilege = $.editPrivilege;
        this.groupId = $.groupId;
        this.id = $.id;
        this.resourceId = $.resourceId;
        this.sharePrivilege = $.sharePrivilege;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetShareArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetShareArgs $;

        public Builder() {
            $ = new GetShareArgs();
        }

        public Builder(GetShareArgs defaults) {
            $ = new GetShareArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param editPrivilege The flag that specifies if the group has permission to edit privileges on this resource.
         * 
         * @return builder
         * 
         */
        public Builder editPrivilege(@Nullable Output<Boolean> editPrivilege) {
            $.editPrivilege = editPrivilege;
            return this;
        }

        /**
         * @param editPrivilege The flag that specifies if the group has permission to edit privileges on this resource.
         * 
         * @return builder
         * 
         */
        public Builder editPrivilege(Boolean editPrivilege) {
            return editPrivilege(Output.of(editPrivilege));
        }

        /**
         * @param groupId The ID of the specific group containing the resource to update.
         * 
         * @return builder
         * 
         */
        public Builder groupId(Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId The ID of the specific group containing the resource to update.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param id The uuid of the share object
         * 
         * `id`, `resource_id` and `group_id` must be provided. If any of them are missing, the datasource will return an error.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The uuid of the share object
         * 
         * `id`, `resource_id` and `group_id` must be provided. If any of them are missing, the datasource will return an error.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param resourceId The ID of the specific resource to update.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The ID of the specific resource to update.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param sharePrivilege The group has permission to share this resource.
         * 
         * @return builder
         * 
         */
        public Builder sharePrivilege(@Nullable Output<Boolean> sharePrivilege) {
            $.sharePrivilege = sharePrivilege;
            return this;
        }

        /**
         * @param sharePrivilege The group has permission to share this resource.
         * 
         * @return builder
         * 
         */
        public Builder sharePrivilege(Boolean sharePrivilege) {
            return sharePrivilege(Output.of(sharePrivilege));
        }

        public GetShareArgs build() {
            if ($.groupId == null) {
                throw new MissingRequiredPropertyException("GetShareArgs", "groupId");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetShareArgs", "id");
            }
            if ($.resourceId == null) {
                throw new MissingRequiredPropertyException("GetShareArgs", "resourceId");
            }
            return $;
        }
    }

}
