// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.nlb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.nlb.BalancerArgs;
import com.pulumi.ionoscloud.nlb.inputs.BalancerState;
import com.pulumi.ionoscloud.nlb.outputs.BalancerFlowlog;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a **Network Load Balancer**  on IonosCloud.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.compute.Lan;
 * import com.pulumi.ionoscloud.compute.LanArgs;
 * import com.pulumi.ionoscloud.nlb.Balancer;
 * import com.pulumi.ionoscloud.nlb.BalancerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Datacenter("example", DatacenterArgs.builder()
 *             .name("Datacenter Example")
 *             .location("us/las")
 *             .description("Datacenter Description")
 *             .secAuthProtection(false)
 *             .build());
 * 
 *         var example1 = new Lan("example1", LanArgs.builder()
 *             .datacenterId(example.id())
 *             .public_(false)
 *             .name("Lan Example 1")
 *             .build());
 * 
 *         var example2 = new Lan("example2", LanArgs.builder()
 *             .datacenterId(example.id())
 *             .public_(false)
 *             .name("Lan Example 2")
 *             .build());
 * 
 *         var exampleBalancer = new Balancer("exampleBalancer", BalancerArgs.builder()
 *             .datacenterId(example.id())
 *             .name("example")
 *             .listenerLan(example1.id())
 *             .targetLan(example2.id())
 *             .ips("10.12.118.224")
 *             .lbPrivateIps("10.13.72.225/24")
 *             .centralLogging(true)
 *             .loggingFormat("%{+Q}o %{-Q}ci - - [%trg] %r %ST %B \"\" \"\" %cp %ms %ft %b %s %TR %Tw %Tc %Tr %Ta %tsc %ac %fc %bc %sc %rc %sq %bq %CC %CS %hrl %hsl")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Example configuring Flowlog
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.nlb.Balancer;
 * import com.pulumi.ionoscloud.nlb.BalancerArgs;
 * import com.pulumi.ionoscloud.nlb.inputs.BalancerFlowlogArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Balancer("example", BalancerArgs.builder()
 *             .datacenterId(exampleIonoscloudDatacenter.id())
 *             .name("nlb with flowlog")
 *             .listenerLan(example1.id())
 *             .targetLan(example2.id())
 *             .ips("10.12.118.224")
 *             .lbPrivateIps("10.13.72.225/24")
 *             .flowlog(BalancerFlowlogArgs.builder()
 *                 .action("ALL")
 *                 .bucket("flowlog-bucket")
 *                 .direction("INGRESS")
 *                 .name("flowlog")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * This will configure flowlog for ALL(rejected and accepted) ingress traffic and will log it into an existing ionos bucket named `flowlog-bucket`. Any s3 compatible client can be used to create it. Adding a flowlog does not force re-creation or the nic, but changing any other field than
 * `name` will. Deleting a flowlog will also force nic re-creation.
 * 
 * ## Import
 * 
 * A Network Load Balancer resource can be imported using its `resource id` and the `datacenter id` e.g.
 * 
 * ```sh
 * $ pulumi import ionoscloud:nlb/balancer:Balancer my_networkloadbalancer datacenter uuid/networkloadbalancer uuid
 * ```
 * 
 */
@ResourceType(type="ionoscloud:nlb/balancer:Balancer")
public class Balancer extends com.pulumi.resources.CustomResource {
    /**
     * [bool] Turn logging on and off for this product. Default value is &#39;false&#39;.
     * 
     */
    @Export(name="centralLogging", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> centralLogging;

    /**
     * @return [bool] Turn logging on and off for this product. Default value is &#39;false&#39;.
     * 
     */
    public Output<Optional<Boolean>> centralLogging() {
        return Codegen.optional(this.centralLogging);
    }
    /**
     * [string] A Datacenter&#39;s UUID.
     * 
     */
    @Export(name="datacenterId", refs={String.class}, tree="[0]")
    private Output<String> datacenterId;

    /**
     * @return [string] A Datacenter&#39;s UUID.
     * 
     */
    public Output<String> datacenterId() {
        return this.datacenterId;
    }
    /**
     * [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
     * 
     */
    @Export(name="flowlog", refs={BalancerFlowlog.class}, tree="[0]")
    private Output</* @Nullable */ BalancerFlowlog> flowlog;

    /**
     * @return [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
     * 
     */
    public Output<Optional<BalancerFlowlog>> flowlog() {
        return Codegen.optional(this.flowlog);
    }
    /**
     * [list] Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer reserved IP for the public load balancer and private IP for the private load balancer.
     * 
     */
    @Export(name="ips", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> ips;

    /**
     * @return [list] Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer reserved IP for the public load balancer and private IP for the private load balancer.
     * 
     */
    public Output<Optional<List<String>>> ips() {
        return Codegen.optional(this.ips);
    }
    /**
     * [list] Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If user will not provide any IP then the system will generate one IP with /24 subnet.
     * 
     */
    @Export(name="lbPrivateIps", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> lbPrivateIps;

    /**
     * @return [list] Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If user will not provide any IP then the system will generate one IP with /24 subnet.
     * 
     */
    public Output<List<String>> lbPrivateIps() {
        return this.lbPrivateIps;
    }
    /**
     * [int] Id of the listening LAN. (inbound)
     * 
     */
    @Export(name="listenerLan", refs={Integer.class}, tree="[0]")
    private Output<Integer> listenerLan;

    /**
     * @return [int] Id of the listening LAN. (inbound)
     * 
     */
    public Output<Integer> listenerLan() {
        return this.listenerLan;
    }
    /**
     * Specifies the format of the logs.
     * 
     */
    @Export(name="loggingFormat", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> loggingFormat;

    /**
     * @return Specifies the format of the logs.
     * 
     */
    public Output<Optional<String>> loggingFormat() {
        return Codegen.optional(this.loggingFormat);
    }
    /**
     * [string] A name of that Network Load Balancer.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [string] A name of that Network Load Balancer.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * [int] Id of the balanced private target LAN. (outbound)
     * 
     */
    @Export(name="targetLan", refs={Integer.class}, tree="[0]")
    private Output<Integer> targetLan;

    /**
     * @return [int] Id of the balanced private target LAN. (outbound)
     * 
     */
    public Output<Integer> targetLan() {
        return this.targetLan;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Balancer(java.lang.String name) {
        this(name, BalancerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Balancer(java.lang.String name, BalancerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Balancer(java.lang.String name, BalancerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:nlb/balancer:Balancer", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Balancer(java.lang.String name, Output<java.lang.String> id, @Nullable BalancerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:nlb/balancer:Balancer", name, state, makeResourceOptions(options, id), false);
    }

    private static BalancerArgs makeArgs(BalancerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BalancerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Balancer get(java.lang.String name, Output<java.lang.String> id, @Nullable BalancerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Balancer(name, id, state, options);
    }
}
