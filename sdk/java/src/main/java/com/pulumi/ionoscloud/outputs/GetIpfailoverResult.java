// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIpfailoverResult {
    /**
     * @return The ID of a Data Center.
     * 
     */
    private String datacenterId;
    private String id;
    /**
     * @return The reserved IP address to be used in the IP failover group.
     * 
     */
    private String ip;
    /**
     * @return The ID of a LAN.
     * 
     */
    private String lanId;
    /**
     * @return The ID of a NIC.
     * 
     */
    private String nicuuid;

    private GetIpfailoverResult() {}
    /**
     * @return The ID of a Data Center.
     * 
     */
    public String datacenterId() {
        return this.datacenterId;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The reserved IP address to be used in the IP failover group.
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return The ID of a LAN.
     * 
     */
    public String lanId() {
        return this.lanId;
    }
    /**
     * @return The ID of a NIC.
     * 
     */
    public String nicuuid() {
        return this.nicuuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpfailoverResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String datacenterId;
        private String id;
        private String ip;
        private String lanId;
        private String nicuuid;
        public Builder() {}
        public Builder(GetIpfailoverResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datacenterId = defaults.datacenterId;
    	      this.id = defaults.id;
    	      this.ip = defaults.ip;
    	      this.lanId = defaults.lanId;
    	      this.nicuuid = defaults.nicuuid;
        }

        @CustomType.Setter
        public Builder datacenterId(String datacenterId) {
            if (datacenterId == null) {
              throw new MissingRequiredPropertyException("GetIpfailoverResult", "datacenterId");
            }
            this.datacenterId = datacenterId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIpfailoverResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ip(String ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetIpfailoverResult", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder lanId(String lanId) {
            if (lanId == null) {
              throw new MissingRequiredPropertyException("GetIpfailoverResult", "lanId");
            }
            this.lanId = lanId;
            return this;
        }
        @CustomType.Setter
        public Builder nicuuid(String nicuuid) {
            if (nicuuid == null) {
              throw new MissingRequiredPropertyException("GetIpfailoverResult", "nicuuid");
            }
            this.nicuuid = nicuuid;
            return this;
        }
        public GetIpfailoverResult build() {
            final var _resultValue = new GetIpfailoverResult();
            _resultValue.datacenterId = datacenterId;
            _resultValue.id = id;
            _resultValue.ip = ip;
            _resultValue.lanId = lanId;
            _resultValue.nicuuid = nicuuid;
            return _resultValue;
        }
    }
}
