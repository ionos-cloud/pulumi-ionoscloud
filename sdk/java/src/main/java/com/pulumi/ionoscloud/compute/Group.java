// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.compute.GroupArgs;
import com.pulumi.ionoscloud.compute.inputs.GroupState;
import com.pulumi.ionoscloud.compute.outputs.GroupUser;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages **Groups** and **Group Privileges** on IonosCloud.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.password;
 * import com.pulumi.random.PasswordArgs;
 * import com.pulumi.ionoscloud.compute.User;
 * import com.pulumi.ionoscloud.compute.UserArgs;
 * import com.pulumi.ionoscloud.compute.Group;
 * import com.pulumi.ionoscloud.compute.GroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var user1Password = new Password("user1Password", PasswordArgs.builder()
 *             .length(16)
 *             .special(true)
 *             .overrideSpecial("!#$%&*()-_=+[]{}<>:?")
 *             .build());
 * 
 *         var example1 = new User("example1", UserArgs.builder()
 *             .firstName("user1")
 *             .lastName("user1")
 *             .email("unique_email.com")
 *             .password(user1Password.result())
 *             .administrator(false)
 *             .forceSecAuth(false)
 *             .build());
 * 
 *         var user2Password = new Password("user2Password", PasswordArgs.builder()
 *             .length(16)
 *             .special(true)
 *             .overrideSpecial("!#$%&*()-_=+[]{}<>:?")
 *             .build());
 * 
 *         var example2 = new User("example2", UserArgs.builder()
 *             .firstName("user2")
 *             .lastName("user2")
 *             .email("unique_email.com")
 *             .password(user2Password.result())
 *             .administrator(false)
 *             .forceSecAuth(false)
 *             .build());
 * 
 *         var example = new Group("example", GroupArgs.builder()
 *             .name("Group Example")
 *             .createDatacenter(true)
 *             .createSnapshot(true)
 *             .reserveIp(true)
 *             .accessActivityLog(true)
 *             .createPcc(true)
 *             .s3Privilege(true)
 *             .createBackupUnit(true)
 *             .createInternetAccess(true)
 *             .createK8sCluster(true)
 *             .createFlowLog(true)
 *             .accessAndManageMonitoring(true)
 *             .accessAndManageCertificates(true)
 *             .manageDbaas(true)
 *             .userIds(            
 *                 example1.id(),
 *                 example2.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Resource Group can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import ionoscloud:compute/group:Group mygroup group uuid
 * ```
 * 
 * &gt; :warning: **If you are upgrading to v6.2.0**: You have to modify you plan for user_ids to match the new structure, by renaming the field old field, **user_id**, to user_ids and put the old value into an array. This is not backwards compatible.
 * 
 */
@ResourceType(type="ionoscloud:compute/group:Group")
public class Group extends com.pulumi.resources.CustomResource {
    /**
     * [Boolean] The group will be allowed to access the activity log.
     * 
     */
    @Export(name="accessActivityLog", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accessActivityLog;

    /**
     * @return [Boolean] The group will be allowed to access the activity log.
     * 
     */
    public Output<Optional<Boolean>> accessActivityLog() {
        return Codegen.optional(this.accessActivityLog);
    }
    /**
     * [Boolean]  The group will be allowed to access and manage certificates.
     * 
     */
    @Export(name="accessAndManageCertificates", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accessAndManageCertificates;

    /**
     * @return [Boolean]  The group will be allowed to access and manage certificates.
     * 
     */
    public Output<Optional<Boolean>> accessAndManageCertificates() {
        return Codegen.optional(this.accessAndManageCertificates);
    }
    /**
     * [Boolean]  The group will be allowed to access and manage monitoring.
     * 
     */
    @Export(name="accessAndManageMonitoring", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accessAndManageMonitoring;

    /**
     * @return [Boolean]  The group will be allowed to access and manage monitoring.
     * 
     */
    public Output<Optional<Boolean>> accessAndManageMonitoring() {
        return Codegen.optional(this.accessAndManageMonitoring);
    }
    /**
     * [Boolean] The group will be allowed to create backup unit privilege.
     * 
     */
    @Export(name="createBackupUnit", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> createBackupUnit;

    /**
     * @return [Boolean] The group will be allowed to create backup unit privilege.
     * 
     */
    public Output<Optional<Boolean>> createBackupUnit() {
        return Codegen.optional(this.createBackupUnit);
    }
    /**
     * [Boolean] The group will be allowed to create virtual data centers.
     * 
     */
    @Export(name="createDatacenter", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> createDatacenter;

    /**
     * @return [Boolean] The group will be allowed to create virtual data centers.
     * 
     */
    public Output<Optional<Boolean>> createDatacenter() {
        return Codegen.optional(this.createDatacenter);
    }
    /**
     * [Boolean]  The group will be allowed to create flow log.
     * 
     */
    @Export(name="createFlowLog", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> createFlowLog;

    /**
     * @return [Boolean]  The group will be allowed to create flow log.
     * 
     */
    public Output<Optional<Boolean>> createFlowLog() {
        return Codegen.optional(this.createFlowLog);
    }
    /**
     * [Boolean] The group will be allowed to create internet access privilege.
     * 
     */
    @Export(name="createInternetAccess", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> createInternetAccess;

    /**
     * @return [Boolean] The group will be allowed to create internet access privilege.
     * 
     */
    public Output<Optional<Boolean>> createInternetAccess() {
        return Codegen.optional(this.createInternetAccess);
    }
    /**
     * [Boolean]  The group will be allowed to create kubernetes cluster privilege.
     * 
     */
    @Export(name="createK8sCluster", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> createK8sCluster;

    /**
     * @return [Boolean]  The group will be allowed to create kubernetes cluster privilege.
     * 
     */
    public Output<Optional<Boolean>> createK8sCluster() {
        return Codegen.optional(this.createK8sCluster);
    }
    /**
     * [Boolean] The group will be allowed to create Cross Connects privilege.
     * 
     */
    @Export(name="createPcc", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> createPcc;

    /**
     * @return [Boolean] The group will be allowed to create Cross Connects privilege.
     * 
     */
    public Output<Optional<Boolean>> createPcc() {
        return Codegen.optional(this.createPcc);
    }
    /**
     * [Boolean] The group will be allowed to create snapshots.
     * 
     */
    @Export(name="createSnapshot", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> createSnapshot;

    /**
     * @return [Boolean] The group will be allowed to create snapshots.
     * 
     */
    public Output<Optional<Boolean>> createSnapshot() {
        return Codegen.optional(this.createSnapshot);
    }
    /**
     * [Boolean]  Privilege for a group to manage DBaaS related functionality.
     * 
     */
    @Export(name="manageDbaas", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> manageDbaas;

    /**
     * @return [Boolean]  Privilege for a group to manage DBaaS related functionality.
     * 
     */
    public Output<Optional<Boolean>> manageDbaas() {
        return Codegen.optional(this.manageDbaas);
    }
    /**
     * [string] A name for the group.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [string] A name for the group.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * [Boolean] The group will be allowed to reserve IP addresses.
     * 
     */
    @Export(name="reserveIp", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> reserveIp;

    /**
     * @return [Boolean] The group will be allowed to reserve IP addresses.
     * 
     */
    public Output<Optional<Boolean>> reserveIp() {
        return Codegen.optional(this.reserveIp);
    }
    /**
     * [Boolean] The group will have S3 privilege.
     * 
     */
    @Export(name="s3Privilege", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> s3Privilege;

    /**
     * @return [Boolean] The group will have S3 privilege.
     * 
     */
    public Output<Optional<Boolean>> s3Privilege() {
        return Codegen.optional(this.s3Privilege);
    }
    /**
     * [string] The ID of the specific user to add to the group. Please use user_ids argument since this is **DEPRECATED**
     * 
     * @deprecated
     * Please use user_ids for adding users to the group, since user_id will be removed in the future
     * 
     */
    @Deprecated /* Please use user_ids for adding users to the group, since user_id will be removed in the future */
    @Export(name="userId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userId;

    /**
     * @return [string] The ID of the specific user to add to the group. Please use user_ids argument since this is **DEPRECATED**
     * 
     */
    public Output<Optional<String>> userId() {
        return Codegen.optional(this.userId);
    }
    /**
     * [list] A list of users to add to the group.
     * 
     */
    @Export(name="userIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> userIds;

    /**
     * @return [list] A list of users to add to the group.
     * 
     */
    public Output<Optional<List<String>>> userIds() {
        return Codegen.optional(this.userIds);
    }
    /**
     * List of users - See the User section
     * 
     * **NOTE:** user_id/user_ids field cannot be used at the same time with group_ids field in user resource. Trying to add the same user to the same group in both ways in the same plan will result in a cyclic dependency error.
     * 
     */
    @Export(name="users", refs={List.class,GroupUser.class}, tree="[0,1]")
    private Output<List<GroupUser>> users;

    /**
     * @return List of users - See the User section
     * 
     * **NOTE:** user_id/user_ids field cannot be used at the same time with group_ids field in user resource. Trying to add the same user to the same group in both ways in the same plan will result in a cyclic dependency error.
     * 
     */
    public Output<List<GroupUser>> users() {
        return this.users;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Group(java.lang.String name) {
        this(name, GroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Group(java.lang.String name, @Nullable GroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Group(java.lang.String name, @Nullable GroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:compute/group:Group", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Group(java.lang.String name, Output<java.lang.String> id, @Nullable GroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:compute/group:Group", name, state, makeResourceOptions(options, id), false);
    }

    private static GroupArgs makeArgs(@Nullable GroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? GroupArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Group get(java.lang.String name, Output<java.lang.String> id, @Nullable GroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Group(name, id, state, options);
    }
}
