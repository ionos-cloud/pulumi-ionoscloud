// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetKafkaClusterTopicArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetKafkaClusterTopicArgs Empty = new GetKafkaClusterTopicArgs();

    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    public Output<String> clusterId() {
        return this.clusterId;
    }

    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="location", required=true)
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="partialMatch")
    private @Nullable Output<Boolean> partialMatch;

    public Optional<Output<Boolean>> partialMatch() {
        return Optional.ofNullable(this.partialMatch);
    }

    private GetKafkaClusterTopicArgs() {}

    private GetKafkaClusterTopicArgs(GetKafkaClusterTopicArgs $) {
        this.clusterId = $.clusterId;
        this.id = $.id;
        this.location = $.location;
        this.name = $.name;
        this.partialMatch = $.partialMatch;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKafkaClusterTopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKafkaClusterTopicArgs $;

        public Builder() {
            $ = new GetKafkaClusterTopicArgs();
        }

        public Builder(GetKafkaClusterTopicArgs defaults) {
            $ = new GetKafkaClusterTopicArgs(Objects.requireNonNull(defaults));
        }

        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder partialMatch(@Nullable Output<Boolean> partialMatch) {
            $.partialMatch = partialMatch;
            return this;
        }

        public Builder partialMatch(Boolean partialMatch) {
            return partialMatch(Output.of(partialMatch));
        }

        public GetKafkaClusterTopicArgs build() {
            if ($.clusterId == null) {
                throw new MissingRequiredPropertyException("GetKafkaClusterTopicArgs", "clusterId");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("GetKafkaClusterTopicArgs", "location");
            }
            return $;
        }
    }

}
