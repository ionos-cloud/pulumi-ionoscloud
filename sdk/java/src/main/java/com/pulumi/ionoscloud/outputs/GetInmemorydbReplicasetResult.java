// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.outputs.GetInmemorydbReplicasetConnection;
import com.pulumi.ionoscloud.outputs.GetInmemorydbReplicasetCredential;
import com.pulumi.ionoscloud.outputs.GetInmemorydbReplicasetMaintenanceWindow;
import com.pulumi.ionoscloud.outputs.GetInmemorydbReplicasetResource;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInmemorydbReplicasetResult {
    private List<GetInmemorydbReplicasetConnection> connections;
    private List<GetInmemorydbReplicasetCredential> credentials;
    private @Nullable String displayName;
    private String dnsName;
    private String evictionPolicy;
    private @Nullable String id;
    private String location;
    private List<GetInmemorydbReplicasetMaintenanceWindow> maintenanceWindows;
    private String persistenceMode;
    private Integer replicas;
    private List<GetInmemorydbReplicasetResource> resources;
    private String version;

    private GetInmemorydbReplicasetResult() {}
    public List<GetInmemorydbReplicasetConnection> connections() {
        return this.connections;
    }
    public List<GetInmemorydbReplicasetCredential> credentials() {
        return this.credentials;
    }
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public String dnsName() {
        return this.dnsName;
    }
    public String evictionPolicy() {
        return this.evictionPolicy;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String location() {
        return this.location;
    }
    public List<GetInmemorydbReplicasetMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    public String persistenceMode() {
        return this.persistenceMode;
    }
    public Integer replicas() {
        return this.replicas;
    }
    public List<GetInmemorydbReplicasetResource> resources() {
        return this.resources;
    }
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInmemorydbReplicasetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetInmemorydbReplicasetConnection> connections;
        private List<GetInmemorydbReplicasetCredential> credentials;
        private @Nullable String displayName;
        private String dnsName;
        private String evictionPolicy;
        private @Nullable String id;
        private String location;
        private List<GetInmemorydbReplicasetMaintenanceWindow> maintenanceWindows;
        private String persistenceMode;
        private Integer replicas;
        private List<GetInmemorydbReplicasetResource> resources;
        private String version;
        public Builder() {}
        public Builder(GetInmemorydbReplicasetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connections = defaults.connections;
    	      this.credentials = defaults.credentials;
    	      this.displayName = defaults.displayName;
    	      this.dnsName = defaults.dnsName;
    	      this.evictionPolicy = defaults.evictionPolicy;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.persistenceMode = defaults.persistenceMode;
    	      this.replicas = defaults.replicas;
    	      this.resources = defaults.resources;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder connections(List<GetInmemorydbReplicasetConnection> connections) {
            if (connections == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbReplicasetResult", "connections");
            }
            this.connections = connections;
            return this;
        }
        public Builder connections(GetInmemorydbReplicasetConnection... connections) {
            return connections(List.of(connections));
        }
        @CustomType.Setter
        public Builder credentials(List<GetInmemorydbReplicasetCredential> credentials) {
            if (credentials == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbReplicasetResult", "credentials");
            }
            this.credentials = credentials;
            return this;
        }
        public Builder credentials(GetInmemorydbReplicasetCredential... credentials) {
            return credentials(List.of(credentials));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder dnsName(String dnsName) {
            if (dnsName == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbReplicasetResult", "dnsName");
            }
            this.dnsName = dnsName;
            return this;
        }
        @CustomType.Setter
        public Builder evictionPolicy(String evictionPolicy) {
            if (evictionPolicy == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbReplicasetResult", "evictionPolicy");
            }
            this.evictionPolicy = evictionPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbReplicasetResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceWindows(List<GetInmemorydbReplicasetMaintenanceWindow> maintenanceWindows) {
            if (maintenanceWindows == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbReplicasetResult", "maintenanceWindows");
            }
            this.maintenanceWindows = maintenanceWindows;
            return this;
        }
        public Builder maintenanceWindows(GetInmemorydbReplicasetMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        @CustomType.Setter
        public Builder persistenceMode(String persistenceMode) {
            if (persistenceMode == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbReplicasetResult", "persistenceMode");
            }
            this.persistenceMode = persistenceMode;
            return this;
        }
        @CustomType.Setter
        public Builder replicas(Integer replicas) {
            if (replicas == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbReplicasetResult", "replicas");
            }
            this.replicas = replicas;
            return this;
        }
        @CustomType.Setter
        public Builder resources(List<GetInmemorydbReplicasetResource> resources) {
            if (resources == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbReplicasetResult", "resources");
            }
            this.resources = resources;
            return this;
        }
        public Builder resources(GetInmemorydbReplicasetResource... resources) {
            return resources(List.of(resources));
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbReplicasetResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetInmemorydbReplicasetResult build() {
            final var _resultValue = new GetInmemorydbReplicasetResult();
            _resultValue.connections = connections;
            _resultValue.credentials = credentials;
            _resultValue.displayName = displayName;
            _resultValue.dnsName = dnsName;
            _resultValue.evictionPolicy = evictionPolicy;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.maintenanceWindows = maintenanceWindows;
            _resultValue.persistenceMode = persistenceMode;
            _resultValue.replicas = replicas;
            _resultValue.resources = resources;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
