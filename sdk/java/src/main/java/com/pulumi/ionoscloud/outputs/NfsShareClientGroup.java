// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.outputs.NfsShareClientGroupNfs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NfsShareClientGroup {
    /**
     * @return Optional description for the clients groups.
     * 
     */
    private @Nullable String description;
    /**
     * @return A singular host allowed to connect to the share. The host can be specified as IP address and can be either IPv4 or IPv6.
     * 
     */
    private List<String> hosts;
    /**
     * @return The allowed host or network to which the export is being shared. The IP address can be either IPv4 or IPv6 and has to be given with CIDR notation.
     * 
     */
    private List<String> ipNetworks;
    /**
     * @return NFS specific configurations. Each configuration includes:
     * 
     */
    private @Nullable NfsShareClientGroupNfs nfs;

    private NfsShareClientGroup() {}
    /**
     * @return Optional description for the clients groups.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A singular host allowed to connect to the share. The host can be specified as IP address and can be either IPv4 or IPv6.
     * 
     */
    public List<String> hosts() {
        return this.hosts;
    }
    /**
     * @return The allowed host or network to which the export is being shared. The IP address can be either IPv4 or IPv6 and has to be given with CIDR notation.
     * 
     */
    public List<String> ipNetworks() {
        return this.ipNetworks;
    }
    /**
     * @return NFS specific configurations. Each configuration includes:
     * 
     */
    public Optional<NfsShareClientGroupNfs> nfs() {
        return Optional.ofNullable(this.nfs);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NfsShareClientGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private List<String> hosts;
        private List<String> ipNetworks;
        private @Nullable NfsShareClientGroupNfs nfs;
        public Builder() {}
        public Builder(NfsShareClientGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.hosts = defaults.hosts;
    	      this.ipNetworks = defaults.ipNetworks;
    	      this.nfs = defaults.nfs;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder hosts(List<String> hosts) {
            if (hosts == null) {
              throw new MissingRequiredPropertyException("NfsShareClientGroup", "hosts");
            }
            this.hosts = hosts;
            return this;
        }
        public Builder hosts(String... hosts) {
            return hosts(List.of(hosts));
        }
        @CustomType.Setter
        public Builder ipNetworks(List<String> ipNetworks) {
            if (ipNetworks == null) {
              throw new MissingRequiredPropertyException("NfsShareClientGroup", "ipNetworks");
            }
            this.ipNetworks = ipNetworks;
            return this;
        }
        public Builder ipNetworks(String... ipNetworks) {
            return ipNetworks(List.of(ipNetworks));
        }
        @CustomType.Setter
        public Builder nfs(@Nullable NfsShareClientGroupNfs nfs) {

            this.nfs = nfs;
            return this;
        }
        public NfsShareClientGroup build() {
            final var _resultValue = new NfsShareClientGroup();
            _resultValue.description = description;
            _resultValue.hosts = hosts;
            _resultValue.ipNetworks = ipNetworks;
            _resultValue.nfs = nfs;
            return _resultValue;
        }
    }
}
