// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.ShareArgs;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.inputs.ShareState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages **Shares** and list shares permissions granted to the group members for each shared resource.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.Group;
 * import com.pulumi.ionoscloud.GroupArgs;
 * import com.pulumi.ionoscloud.Share;
 * import com.pulumi.ionoscloud.ShareArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleDatacenter = new Datacenter("exampleDatacenter", DatacenterArgs.builder()        
 *             .location("us/las")
 *             .description("Datacenter Description")
 *             .secAuthProtection(false)
 *             .build());
 * 
 *         var exampleGroup = new Group("exampleGroup", GroupArgs.builder()        
 *             .createDatacenter(true)
 *             .createSnapshot(true)
 *             .reserveIp(true)
 *             .accessActivityLog(true)
 *             .createPcc(true)
 *             .s3Privilege(true)
 *             .createBackupUnit(true)
 *             .createInternetAccess(true)
 *             .createK8sCluster(true)
 *             .build());
 * 
 *         var exampleShare = new Share("exampleShare", ShareArgs.builder()        
 *             .groupId(exampleGroup.id())
 *             .resourceId(exampleDatacenter.id())
 *             .editPrivilege(true)
 *             .sharePrivilege(false)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Resource Share can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import ionoscloud:index/share:Share myshare {group uuid}/{resource uuid}
 * ```
 * 
 */
@ResourceType(type="ionoscloud:index/share:Share")
public class Share extends com.pulumi.resources.CustomResource {
    /**
     * [Boolean] The group has permission to edit privileges on this resource.
     * 
     */
    @Export(name="editPrivilege", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> editPrivilege;

    /**
     * @return [Boolean] The group has permission to edit privileges on this resource.
     * 
     */
    public Output<Optional<Boolean>> editPrivilege() {
        return Codegen.optional(this.editPrivilege);
    }
    /**
     * [string] The ID of the specific group containing the resource to update.
     * 
     */
    @Export(name="groupId", refs={String.class}, tree="[0]")
    private Output<String> groupId;

    /**
     * @return [string] The ID of the specific group containing the resource to update.
     * 
     */
    public Output<String> groupId() {
        return this.groupId;
    }
    /**
     * [string] The ID of the specific resource to update.
     * 
     */
    @Export(name="resourceId", refs={String.class}, tree="[0]")
    private Output<String> resourceId;

    /**
     * @return [string] The ID of the specific resource to update.
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }
    /**
     * [Boolean] The group has permission to share this resource.
     * 
     * ⚠️ **Note:** There is a limitation due to which the creation of several shares at the same time leads
     * to an error. To avoid this, `parallelism=1` can be used when running `pulumi up` command in order
     * to create the resources in a sequential manner. Another solution involves the usage of `depends_on`
     * attributes inside the `ionoscloud.Share` resource to enforce the sequential creation of the shares.
     * 
     */
    @Export(name="sharePrivilege", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> sharePrivilege;

    /**
     * @return [Boolean] The group has permission to share this resource.
     * 
     * ⚠️ **Note:** There is a limitation due to which the creation of several shares at the same time leads
     * to an error. To avoid this, `parallelism=1` can be used when running `pulumi up` command in order
     * to create the resources in a sequential manner. Another solution involves the usage of `depends_on`
     * attributes inside the `ionoscloud.Share` resource to enforce the sequential creation of the shares.
     * 
     */
    public Output<Optional<Boolean>> sharePrivilege() {
        return Codegen.optional(this.sharePrivilege);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Share(java.lang.String name) {
        this(name, ShareArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Share(java.lang.String name, ShareArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Share(java.lang.String name, ShareArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/share:Share", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Share(java.lang.String name, Output<java.lang.String> id, @Nullable ShareState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/share:Share", name, state, makeResourceOptions(options, id), false);
    }

    private static ShareArgs makeArgs(ShareArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ShareArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Share get(java.lang.String name, Output<java.lang.String> id, @Nullable ShareState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Share(name, id, state, options);
    }
}
