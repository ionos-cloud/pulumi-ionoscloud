// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.k8s.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.k8s.outputs.GetClustersClusterConfigCluster;
import com.pulumi.ionoscloud.k8s.outputs.GetClustersClusterConfigContext;
import com.pulumi.ionoscloud.k8s.outputs.GetClustersClusterConfigUser;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClustersClusterConfig {
    private String apiVersion;
    /**
     * @return list of Kubernetes clusters that match the provided filters. The elements of this list are structurally identical to the `k8s_cluster` datasource, which is limited to retrieving only 1 cluster in a single query.
     * 
     */
    private List<GetClustersClusterConfigCluster> clusters;
    private List<GetClustersClusterConfigContext> contexts;
    private String currentContext;
    private String kind;
    private List<GetClustersClusterConfigUser> users;

    private GetClustersClusterConfig() {}
    public String apiVersion() {
        return this.apiVersion;
    }
    /**
     * @return list of Kubernetes clusters that match the provided filters. The elements of this list are structurally identical to the `k8s_cluster` datasource, which is limited to retrieving only 1 cluster in a single query.
     * 
     */
    public List<GetClustersClusterConfigCluster> clusters() {
        return this.clusters;
    }
    public List<GetClustersClusterConfigContext> contexts() {
        return this.contexts;
    }
    public String currentContext() {
        return this.currentContext;
    }
    public String kind() {
        return this.kind;
    }
    public List<GetClustersClusterConfigUser> users() {
        return this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClustersClusterConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiVersion;
        private List<GetClustersClusterConfigCluster> clusters;
        private List<GetClustersClusterConfigContext> contexts;
        private String currentContext;
        private String kind;
        private List<GetClustersClusterConfigUser> users;
        public Builder() {}
        public Builder(GetClustersClusterConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiVersion = defaults.apiVersion;
    	      this.clusters = defaults.clusters;
    	      this.contexts = defaults.contexts;
    	      this.currentContext = defaults.currentContext;
    	      this.kind = defaults.kind;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder apiVersion(String apiVersion) {
            if (apiVersion == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterConfig", "apiVersion");
            }
            this.apiVersion = apiVersion;
            return this;
        }
        @CustomType.Setter
        public Builder clusters(List<GetClustersClusterConfigCluster> clusters) {
            if (clusters == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterConfig", "clusters");
            }
            this.clusters = clusters;
            return this;
        }
        public Builder clusters(GetClustersClusterConfigCluster... clusters) {
            return clusters(List.of(clusters));
        }
        @CustomType.Setter
        public Builder contexts(List<GetClustersClusterConfigContext> contexts) {
            if (contexts == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterConfig", "contexts");
            }
            this.contexts = contexts;
            return this;
        }
        public Builder contexts(GetClustersClusterConfigContext... contexts) {
            return contexts(List.of(contexts));
        }
        @CustomType.Setter
        public Builder currentContext(String currentContext) {
            if (currentContext == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterConfig", "currentContext");
            }
            this.currentContext = currentContext;
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            if (kind == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterConfig", "kind");
            }
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder users(List<GetClustersClusterConfigUser> users) {
            if (users == null) {
              throw new MissingRequiredPropertyException("GetClustersClusterConfig", "users");
            }
            this.users = users;
            return this;
        }
        public Builder users(GetClustersClusterConfigUser... users) {
            return users(List.of(users));
        }
        public GetClustersClusterConfig build() {
            final var _resultValue = new GetClustersClusterConfig();
            _resultValue.apiVersion = apiVersion;
            _resultValue.clusters = clusters;
            _resultValue.contexts = contexts;
            _resultValue.currentContext = currentContext;
            _resultValue.kind = kind;
            _resultValue.users = users;
            return _resultValue;
        }
    }
}
