// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.outputs.GetMariadbBackupsBackupBaseBackup;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMariadbBackupsBackup {
    /**
     * @return The list of backups for the specified cluster
     * 
     */
    private List<GetMariadbBackupsBackupBaseBackup> baseBackups;
    /**
     * @return The unique ID of the cluster that was backed up
     * 
     */
    private String clusterId;
    /**
     * @return The oldest available timestamp to which you can restore
     * 
     */
    private String earliestRecoveryTargetTime;
    /**
     * @return Size of all base backups in Mebibytes (MiB). This is at least the sum of all base backup sizes
     * 
     */
    private Integer size;

    private GetMariadbBackupsBackup() {}
    /**
     * @return The list of backups for the specified cluster
     * 
     */
    public List<GetMariadbBackupsBackupBaseBackup> baseBackups() {
        return this.baseBackups;
    }
    /**
     * @return The unique ID of the cluster that was backed up
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The oldest available timestamp to which you can restore
     * 
     */
    public String earliestRecoveryTargetTime() {
        return this.earliestRecoveryTargetTime;
    }
    /**
     * @return Size of all base backups in Mebibytes (MiB). This is at least the sum of all base backup sizes
     * 
     */
    public Integer size() {
        return this.size;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMariadbBackupsBackup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetMariadbBackupsBackupBaseBackup> baseBackups;
        private String clusterId;
        private String earliestRecoveryTargetTime;
        private Integer size;
        public Builder() {}
        public Builder(GetMariadbBackupsBackup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseBackups = defaults.baseBackups;
    	      this.clusterId = defaults.clusterId;
    	      this.earliestRecoveryTargetTime = defaults.earliestRecoveryTargetTime;
    	      this.size = defaults.size;
        }

        @CustomType.Setter
        public Builder baseBackups(List<GetMariadbBackupsBackupBaseBackup> baseBackups) {
            if (baseBackups == null) {
              throw new MissingRequiredPropertyException("GetMariadbBackupsBackup", "baseBackups");
            }
            this.baseBackups = baseBackups;
            return this;
        }
        public Builder baseBackups(GetMariadbBackupsBackupBaseBackup... baseBackups) {
            return baseBackups(List.of(baseBackups));
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetMariadbBackupsBackup", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder earliestRecoveryTargetTime(String earliestRecoveryTargetTime) {
            if (earliestRecoveryTargetTime == null) {
              throw new MissingRequiredPropertyException("GetMariadbBackupsBackup", "earliestRecoveryTargetTime");
            }
            this.earliestRecoveryTargetTime = earliestRecoveryTargetTime;
            return this;
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetMariadbBackupsBackup", "size");
            }
            this.size = size;
            return this;
        }
        public GetMariadbBackupsBackup build() {
            final var _resultValue = new GetMariadbBackupsBackup();
            _resultValue.baseBackups = baseBackups;
            _resultValue.clusterId = clusterId;
            _resultValue.earliestRecoveryTargetTime = earliestRecoveryTargetTime;
            _resultValue.size = size;
            return _resultValue;
        }
    }
}
