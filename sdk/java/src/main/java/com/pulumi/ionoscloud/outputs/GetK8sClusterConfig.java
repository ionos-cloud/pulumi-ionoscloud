// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.outputs.GetK8sClusterConfigCluster;
import com.pulumi.ionoscloud.outputs.GetK8sClusterConfigContext;
import com.pulumi.ionoscloud.outputs.GetK8sClusterConfigUser;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetK8sClusterConfig {
    private String apiVersion;
    private List<GetK8sClusterConfigCluster> clusters;
    private List<GetK8sClusterConfigContext> contexts;
    private String currentContext;
    private String kind;
    private List<GetK8sClusterConfigUser> users;

    private GetK8sClusterConfig() {}
    public String apiVersion() {
        return this.apiVersion;
    }
    public List<GetK8sClusterConfigCluster> clusters() {
        return this.clusters;
    }
    public List<GetK8sClusterConfigContext> contexts() {
        return this.contexts;
    }
    public String currentContext() {
        return this.currentContext;
    }
    public String kind() {
        return this.kind;
    }
    public List<GetK8sClusterConfigUser> users() {
        return this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetK8sClusterConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiVersion;
        private List<GetK8sClusterConfigCluster> clusters;
        private List<GetK8sClusterConfigContext> contexts;
        private String currentContext;
        private String kind;
        private List<GetK8sClusterConfigUser> users;
        public Builder() {}
        public Builder(GetK8sClusterConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiVersion = defaults.apiVersion;
    	      this.clusters = defaults.clusters;
    	      this.contexts = defaults.contexts;
    	      this.currentContext = defaults.currentContext;
    	      this.kind = defaults.kind;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder apiVersion(String apiVersion) {
            if (apiVersion == null) {
              throw new MissingRequiredPropertyException("GetK8sClusterConfig", "apiVersion");
            }
            this.apiVersion = apiVersion;
            return this;
        }
        @CustomType.Setter
        public Builder clusters(List<GetK8sClusterConfigCluster> clusters) {
            if (clusters == null) {
              throw new MissingRequiredPropertyException("GetK8sClusterConfig", "clusters");
            }
            this.clusters = clusters;
            return this;
        }
        public Builder clusters(GetK8sClusterConfigCluster... clusters) {
            return clusters(List.of(clusters));
        }
        @CustomType.Setter
        public Builder contexts(List<GetK8sClusterConfigContext> contexts) {
            if (contexts == null) {
              throw new MissingRequiredPropertyException("GetK8sClusterConfig", "contexts");
            }
            this.contexts = contexts;
            return this;
        }
        public Builder contexts(GetK8sClusterConfigContext... contexts) {
            return contexts(List.of(contexts));
        }
        @CustomType.Setter
        public Builder currentContext(String currentContext) {
            if (currentContext == null) {
              throw new MissingRequiredPropertyException("GetK8sClusterConfig", "currentContext");
            }
            this.currentContext = currentContext;
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            if (kind == null) {
              throw new MissingRequiredPropertyException("GetK8sClusterConfig", "kind");
            }
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder users(List<GetK8sClusterConfigUser> users) {
            if (users == null) {
              throw new MissingRequiredPropertyException("GetK8sClusterConfig", "users");
            }
            this.users = users;
            return this;
        }
        public Builder users(GetK8sClusterConfigUser... users) {
            return users(List.of(users));
        }
        public GetK8sClusterConfig build() {
            final var _resultValue = new GetK8sClusterConfig();
            _resultValue.apiVersion = apiVersion;
            _resultValue.clusters = clusters;
            _resultValue.contexts = contexts;
            _resultValue.currentContext = currentContext;
            _resultValue.kind = kind;
            _resultValue.users = users;
            return _resultValue;
        }
    }
}
