// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInmemorydbSnapshotMetadata {
    /**
     * @return The ISO 8601 creation timestamp.
     * 
     */
    private String createdDate;
    /**
     * @return The ID of the datacenter the snapshot was created in. Please mind, that the snapshot is not available in other datacenters.
     * 
     */
    private String datacenterId;
    /**
     * @return The ISO 8601 modified timestamp.
     * 
     */
    private String lastModifiedDate;
    /**
     * @return The ID of the InMemoryDB replica set the snapshot is taken from.
     * 
     */
    private String replicaSetId;
    /**
     * @return The time the snapshot was dumped from the replica set.
     * 
     */
    private String snapshotTime;

    private GetInmemorydbSnapshotMetadata() {}
    /**
     * @return The ISO 8601 creation timestamp.
     * 
     */
    public String createdDate() {
        return this.createdDate;
    }
    /**
     * @return The ID of the datacenter the snapshot was created in. Please mind, that the snapshot is not available in other datacenters.
     * 
     */
    public String datacenterId() {
        return this.datacenterId;
    }
    /**
     * @return The ISO 8601 modified timestamp.
     * 
     */
    public String lastModifiedDate() {
        return this.lastModifiedDate;
    }
    /**
     * @return The ID of the InMemoryDB replica set the snapshot is taken from.
     * 
     */
    public String replicaSetId() {
        return this.replicaSetId;
    }
    /**
     * @return The time the snapshot was dumped from the replica set.
     * 
     */
    public String snapshotTime() {
        return this.snapshotTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInmemorydbSnapshotMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdDate;
        private String datacenterId;
        private String lastModifiedDate;
        private String replicaSetId;
        private String snapshotTime;
        public Builder() {}
        public Builder(GetInmemorydbSnapshotMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdDate = defaults.createdDate;
    	      this.datacenterId = defaults.datacenterId;
    	      this.lastModifiedDate = defaults.lastModifiedDate;
    	      this.replicaSetId = defaults.replicaSetId;
    	      this.snapshotTime = defaults.snapshotTime;
        }

        @CustomType.Setter
        public Builder createdDate(String createdDate) {
            if (createdDate == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbSnapshotMetadata", "createdDate");
            }
            this.createdDate = createdDate;
            return this;
        }
        @CustomType.Setter
        public Builder datacenterId(String datacenterId) {
            if (datacenterId == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbSnapshotMetadata", "datacenterId");
            }
            this.datacenterId = datacenterId;
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedDate(String lastModifiedDate) {
            if (lastModifiedDate == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbSnapshotMetadata", "lastModifiedDate");
            }
            this.lastModifiedDate = lastModifiedDate;
            return this;
        }
        @CustomType.Setter
        public Builder replicaSetId(String replicaSetId) {
            if (replicaSetId == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbSnapshotMetadata", "replicaSetId");
            }
            this.replicaSetId = replicaSetId;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotTime(String snapshotTime) {
            if (snapshotTime == null) {
              throw new MissingRequiredPropertyException("GetInmemorydbSnapshotMetadata", "snapshotTime");
            }
            this.snapshotTime = snapshotTime;
            return this;
        }
        public GetInmemorydbSnapshotMetadata build() {
            final var _resultValue = new GetInmemorydbSnapshotMetadata();
            _resultValue.createdDate = createdDate;
            _resultValue.datacenterId = datacenterId;
            _resultValue.lastModifiedDate = lastModifiedDate;
            _resultValue.replicaSetId = replicaSetId;
            _resultValue.snapshotTime = snapshotTime;
            return _resultValue;
        }
    }
}
