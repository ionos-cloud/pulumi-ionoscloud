// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.DnsZoneArgs;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.inputs.DnsZoneState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a **DNS Zone**.
 * 
 * &gt; ⚠️  Only tokens are accepted for authorization in the **ionoscloud_dns_zone** resource. Please ensure you are using tokens as other methods will not be valid.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.DnsZone;
 * import com.pulumi.ionoscloud.DnsZoneArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new DnsZone("example", DnsZoneArgs.builder()        
 *             .description("description")
 *             .enabled(false)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * In order to import a DNS Zone, you can define an empty DNS Zone resource in the plan:
 * 
 * hcl
 * 
 * resource &#34;ionoscloud_dns_zone&#34; &#34;example&#34; {
 * 
 * }
 * 
 * The resource can be imported using the `zone_id`, for example:
 * 
 * ```sh
 * $ pulumi import ionoscloud:index/dnsZone:DnsZone example {zone_id}
 * ```
 * 
 */
@ResourceType(type="ionoscloud:index/dnsZone:DnsZone")
public class DnsZone extends com.pulumi.resources.CustomResource {
    /**
     * [string] The description for the DNS Zone.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return [string] The description for the DNS Zone.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * [bool] Indicates if the DNS Zone is active or not. Default is `true`.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return [bool] Indicates if the DNS Zone is active or not. Default is `true`.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * [string] The name of the DNS Zone.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [string] The name of the DNS Zone.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A list of available name servers.
     * 
     */
    @Export(name="nameservers", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> nameservers;

    /**
     * @return A list of available name servers.
     * 
     */
    public Output<List<String>> nameservers() {
        return this.nameservers;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DnsZone(java.lang.String name) {
        this(name, DnsZoneArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DnsZone(java.lang.String name, @Nullable DnsZoneArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DnsZone(java.lang.String name, @Nullable DnsZoneArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/dnsZone:DnsZone", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DnsZone(java.lang.String name, Output<java.lang.String> id, @Nullable DnsZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/dnsZone:DnsZone", name, state, makeResourceOptions(options, id), false);
    }

    private static DnsZoneArgs makeArgs(@Nullable DnsZoneArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DnsZoneArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DnsZone get(java.lang.String name, Output<java.lang.String> id, @Nullable DnsZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DnsZone(name, id, state, options);
    }
}
