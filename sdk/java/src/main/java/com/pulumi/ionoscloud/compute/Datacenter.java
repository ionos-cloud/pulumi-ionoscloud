// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.compute.DatacenterArgs;
import com.pulumi.ionoscloud.compute.inputs.DatacenterState;
import com.pulumi.ionoscloud.compute.outputs.DatacenterCpuArchitecture;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Virtual **Data Center** on IonosCloud.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Datacenter("example", DatacenterArgs.builder()
 *             .name("Datacenter Example")
 *             .location("us/las")
 *             .description("datacenter description")
 *             .secAuthProtection(false)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Attaching a NSG to a Datacenter
 * 
 * #### A single Network Security Group can be attached at any time to a Datacenter. To do this, use the `ionoscloud.nsg.DatacenterNsgSelection` and provide the IDs of the NSG and Datacenter to link them.
 * #### Deleting the resource or setting the empty string for the `nsg_id` field will de-attach any previously linked NSG from the Datacenter.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.nsg.Nsg;
 * import com.pulumi.ionoscloud.nsg.NsgArgs;
 * import com.pulumi.ionoscloud.nsg.DatacenterNsgSelection;
 * import com.pulumi.ionoscloud.nsg.DatacenterNsgSelectionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Datacenter("example", DatacenterArgs.builder()
 *             .name("Datacenter NSG Example")
 *             .location("de/txl")
 *             .build());
 * 
 *         var exampleNsg = new Nsg("exampleNsg", NsgArgs.builder()
 *             .name("Example NSG")
 *             .description("Example NSG Description")
 *             .datacenterId(example.id())
 *             .build());
 * 
 *         var exampleDatacenterNsgSelection = new DatacenterNsgSelection("exampleDatacenterNsgSelection", DatacenterNsgSelectionArgs.builder()
 *             .datacenterId(example.id())
 *             .nsgId(exampleNsg.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Resource Datacenter can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import ionoscloud:compute/datacenter:Datacenter mydc datacenter uuid
 * ```
 * 
 */
@ResourceType(type="ionoscloud:compute/datacenter:Datacenter")
public class Datacenter extends com.pulumi.resources.CustomResource {
    /**
     * Array of features and CPU families available in a location
     * 
     */
    @Export(name="cpuArchitectures", refs={List.class,DatacenterCpuArchitecture.class}, tree="[0,1]")
    private Output<List<DatacenterCpuArchitecture>> cpuArchitectures;

    /**
     * @return Array of features and CPU families available in a location
     * 
     */
    public Output<List<DatacenterCpuArchitecture>> cpuArchitectures() {
        return this.cpuArchitectures;
    }
    /**
     * [string] Description for the Virtual Data Center.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return [string] Description for the Virtual Data Center.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * List of features supported by the location this data center is part of
     * 
     */
    @Export(name="features", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> features;

    /**
     * @return List of features supported by the location this data center is part of
     * 
     */
    public Output<List<String>> features() {
        return this.features;
    }
    /**
     * The automatically-assigned /56 IPv6 CIDR block if IPv6 is enabled on this virtual data center
     * 
     */
    @Export(name="ipv6CidrBlock", refs={String.class}, tree="[0]")
    private Output<String> ipv6CidrBlock;

    /**
     * @return The automatically-assigned /56 IPv6 CIDR block if IPv6 is enabled on this virtual data center
     * 
     */
    public Output<String> ipv6CidrBlock() {
        return this.ipv6CidrBlock;
    }
    /**
     * [string] The regional location where the Virtual Data Center will be created. This argument is immutable.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return [string] The regional location where the Virtual Data Center will be created. This argument is immutable.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * [string] The name of the Virtual Data Center.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [string] The name of the Virtual Data Center.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * [bool] Boolean value representing if the data center requires extra protection e.g. two factor protection
     * 
     */
    @Export(name="secAuthProtection", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> secAuthProtection;

    /**
     * @return [bool] Boolean value representing if the data center requires extra protection e.g. two factor protection
     * 
     */
    public Output<Optional<Boolean>> secAuthProtection() {
        return Codegen.optional(this.secAuthProtection);
    }
    /**
     * The version of that Data Center. Gets incremented with every change
     * 
     */
    @Export(name="version", refs={Integer.class}, tree="[0]")
    private Output<Integer> version;

    /**
     * @return The version of that Data Center. Gets incremented with every change
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Datacenter(java.lang.String name) {
        this(name, DatacenterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Datacenter(java.lang.String name, DatacenterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Datacenter(java.lang.String name, DatacenterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:compute/datacenter:Datacenter", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Datacenter(java.lang.String name, Output<java.lang.String> id, @Nullable DatacenterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:compute/datacenter:Datacenter", name, state, makeResourceOptions(options, id), false);
    }

    private static DatacenterArgs makeArgs(DatacenterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DatacenterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Datacenter get(java.lang.String name, Output<java.lang.String> id, @Nullable DatacenterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Datacenter(name, id, state, options);
    }
}
