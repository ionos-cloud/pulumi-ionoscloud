// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VCPUServerNicFirewall {
    private @Nullable String icmpCode;
    private @Nullable String icmpType;
    private @Nullable String id;
    /**
     * @return [string] The name of the server.
     * 
     */
    private @Nullable String name;
    private @Nullable Integer portRangeEnd;
    private @Nullable Integer portRangeStart;
    private String protocol;
    private @Nullable String sourceIp;
    private @Nullable String sourceMac;
    private @Nullable String targetIp;
    private @Nullable String type;

    private VCPUServerNicFirewall() {}
    public Optional<String> icmpCode() {
        return Optional.ofNullable(this.icmpCode);
    }
    public Optional<String> icmpType() {
        return Optional.ofNullable(this.icmpType);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return [string] The name of the server.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<Integer> portRangeEnd() {
        return Optional.ofNullable(this.portRangeEnd);
    }
    public Optional<Integer> portRangeStart() {
        return Optional.ofNullable(this.portRangeStart);
    }
    public String protocol() {
        return this.protocol;
    }
    public Optional<String> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }
    public Optional<String> sourceMac() {
        return Optional.ofNullable(this.sourceMac);
    }
    public Optional<String> targetIp() {
        return Optional.ofNullable(this.targetIp);
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VCPUServerNicFirewall defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String icmpCode;
        private @Nullable String icmpType;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable Integer portRangeEnd;
        private @Nullable Integer portRangeStart;
        private String protocol;
        private @Nullable String sourceIp;
        private @Nullable String sourceMac;
        private @Nullable String targetIp;
        private @Nullable String type;
        public Builder() {}
        public Builder(VCPUServerNicFirewall defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.icmpCode = defaults.icmpCode;
    	      this.icmpType = defaults.icmpType;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.portRangeEnd = defaults.portRangeEnd;
    	      this.portRangeStart = defaults.portRangeStart;
    	      this.protocol = defaults.protocol;
    	      this.sourceIp = defaults.sourceIp;
    	      this.sourceMac = defaults.sourceMac;
    	      this.targetIp = defaults.targetIp;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder icmpCode(@Nullable String icmpCode) {

            this.icmpCode = icmpCode;
            return this;
        }
        @CustomType.Setter
        public Builder icmpType(@Nullable String icmpType) {

            this.icmpType = icmpType;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder portRangeEnd(@Nullable Integer portRangeEnd) {

            this.portRangeEnd = portRangeEnd;
            return this;
        }
        @CustomType.Setter
        public Builder portRangeStart(@Nullable Integer portRangeStart) {

            this.portRangeStart = portRangeStart;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("VCPUServerNicFirewall", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder sourceIp(@Nullable String sourceIp) {

            this.sourceIp = sourceIp;
            return this;
        }
        @CustomType.Setter
        public Builder sourceMac(@Nullable String sourceMac) {

            this.sourceMac = sourceMac;
            return this;
        }
        @CustomType.Setter
        public Builder targetIp(@Nullable String targetIp) {

            this.targetIp = targetIp;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public VCPUServerNicFirewall build() {
            final var _resultValue = new VCPUServerNicFirewall();
            _resultValue.icmpCode = icmpCode;
            _resultValue.icmpType = icmpType;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.portRangeEnd = portRangeEnd;
            _resultValue.portRangeStart = portRangeStart;
            _resultValue.protocol = protocol;
            _resultValue.sourceIp = sourceIp;
            _resultValue.sourceMac = sourceMac;
            _resultValue.targetIp = targetIp;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
