// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.inputs.CdnDistributionRoutingRuleUpstreamArgs;
import java.lang.String;
import java.util.Objects;


public final class CdnDistributionRoutingRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CdnDistributionRoutingRuleArgs Empty = new CdnDistributionRoutingRuleArgs();

    /**
     * [string] The prefix of the routing rule.
     * 
     */
    @Import(name="prefix", required=true)
    private Output<String> prefix;

    /**
     * @return [string] The prefix of the routing rule.
     * 
     */
    public Output<String> prefix() {
        return this.prefix;
    }

    /**
     * [string] The scheme of the routing rule.
     * 
     */
    @Import(name="scheme", required=true)
    private Output<String> scheme;

    /**
     * @return [string] The scheme of the routing rule.
     * 
     */
    public Output<String> scheme() {
        return this.scheme;
    }

    /**
     * [map] - A map of properties for the rule
     * 
     */
    @Import(name="upstream", required=true)
    private Output<CdnDistributionRoutingRuleUpstreamArgs> upstream;

    /**
     * @return [map] - A map of properties for the rule
     * 
     */
    public Output<CdnDistributionRoutingRuleUpstreamArgs> upstream() {
        return this.upstream;
    }

    private CdnDistributionRoutingRuleArgs() {}

    private CdnDistributionRoutingRuleArgs(CdnDistributionRoutingRuleArgs $) {
        this.prefix = $.prefix;
        this.scheme = $.scheme;
        this.upstream = $.upstream;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CdnDistributionRoutingRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CdnDistributionRoutingRuleArgs $;

        public Builder() {
            $ = new CdnDistributionRoutingRuleArgs();
        }

        public Builder(CdnDistributionRoutingRuleArgs defaults) {
            $ = new CdnDistributionRoutingRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param prefix [string] The prefix of the routing rule.
         * 
         * @return builder
         * 
         */
        public Builder prefix(Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix [string] The prefix of the routing rule.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param scheme [string] The scheme of the routing rule.
         * 
         * @return builder
         * 
         */
        public Builder scheme(Output<String> scheme) {
            $.scheme = scheme;
            return this;
        }

        /**
         * @param scheme [string] The scheme of the routing rule.
         * 
         * @return builder
         * 
         */
        public Builder scheme(String scheme) {
            return scheme(Output.of(scheme));
        }

        /**
         * @param upstream [map] - A map of properties for the rule
         * 
         * @return builder
         * 
         */
        public Builder upstream(Output<CdnDistributionRoutingRuleUpstreamArgs> upstream) {
            $.upstream = upstream;
            return this;
        }

        /**
         * @param upstream [map] - A map of properties for the rule
         * 
         * @return builder
         * 
         */
        public Builder upstream(CdnDistributionRoutingRuleUpstreamArgs upstream) {
            return upstream(Output.of(upstream));
        }

        public CdnDistributionRoutingRuleArgs build() {
            if ($.prefix == null) {
                throw new MissingRequiredPropertyException("CdnDistributionRoutingRuleArgs", "prefix");
            }
            if ($.scheme == null) {
                throw new MissingRequiredPropertyException("CdnDistributionRoutingRuleArgs", "scheme");
            }
            if ($.upstream == null) {
                throw new MissingRequiredPropertyException("CdnDistributionRoutingRuleArgs", "upstream");
            }
            return $;
        }
    }

}
