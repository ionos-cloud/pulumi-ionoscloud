// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.kafka.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ClusterConnectionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterConnectionsArgs Empty = new ClusterConnectionsArgs();

    /**
     * [list] IP addresses and subnet of cluster brokers. **Note** the following
     * unavailable IP range: 10.224.0.0/11
     * 
     */
    @Import(name="brokerAddresses", required=true)
    private Output<List<String>> brokerAddresses;

    /**
     * @return [list] IP addresses and subnet of cluster brokers. **Note** the following
     * unavailable IP range: 10.224.0.0/11
     * 
     */
    public Output<List<String>> brokerAddresses() {
        return this.brokerAddresses;
    }

    /**
     * [string] The datacenter to connect your instance to.
     * 
     */
    @Import(name="datacenterId", required=true)
    private Output<String> datacenterId;

    /**
     * @return [string] The datacenter to connect your instance to.
     * 
     */
    public Output<String> datacenterId() {
        return this.datacenterId;
    }

    /**
     * [string] The numeric LAN ID to connect your instance to.
     * 
     */
    @Import(name="lanId", required=true)
    private Output<String> lanId;

    /**
     * @return [string] The numeric LAN ID to connect your instance to.
     * 
     */
    public Output<String> lanId() {
        return this.lanId;
    }

    private ClusterConnectionsArgs() {}

    private ClusterConnectionsArgs(ClusterConnectionsArgs $) {
        this.brokerAddresses = $.brokerAddresses;
        this.datacenterId = $.datacenterId;
        this.lanId = $.lanId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterConnectionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterConnectionsArgs $;

        public Builder() {
            $ = new ClusterConnectionsArgs();
        }

        public Builder(ClusterConnectionsArgs defaults) {
            $ = new ClusterConnectionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param brokerAddresses [list] IP addresses and subnet of cluster brokers. **Note** the following
         * unavailable IP range: 10.224.0.0/11
         * 
         * @return builder
         * 
         */
        public Builder brokerAddresses(Output<List<String>> brokerAddresses) {
            $.brokerAddresses = brokerAddresses;
            return this;
        }

        /**
         * @param brokerAddresses [list] IP addresses and subnet of cluster brokers. **Note** the following
         * unavailable IP range: 10.224.0.0/11
         * 
         * @return builder
         * 
         */
        public Builder brokerAddresses(List<String> brokerAddresses) {
            return brokerAddresses(Output.of(brokerAddresses));
        }

        /**
         * @param brokerAddresses [list] IP addresses and subnet of cluster brokers. **Note** the following
         * unavailable IP range: 10.224.0.0/11
         * 
         * @return builder
         * 
         */
        public Builder brokerAddresses(String... brokerAddresses) {
            return brokerAddresses(List.of(brokerAddresses));
        }

        /**
         * @param datacenterId [string] The datacenter to connect your instance to.
         * 
         * @return builder
         * 
         */
        public Builder datacenterId(Output<String> datacenterId) {
            $.datacenterId = datacenterId;
            return this;
        }

        /**
         * @param datacenterId [string] The datacenter to connect your instance to.
         * 
         * @return builder
         * 
         */
        public Builder datacenterId(String datacenterId) {
            return datacenterId(Output.of(datacenterId));
        }

        /**
         * @param lanId [string] The numeric LAN ID to connect your instance to.
         * 
         * @return builder
         * 
         */
        public Builder lanId(Output<String> lanId) {
            $.lanId = lanId;
            return this;
        }

        /**
         * @param lanId [string] The numeric LAN ID to connect your instance to.
         * 
         * @return builder
         * 
         */
        public Builder lanId(String lanId) {
            return lanId(Output.of(lanId));
        }

        public ClusterConnectionsArgs build() {
            if ($.brokerAddresses == null) {
                throw new MissingRequiredPropertyException("ClusterConnectionsArgs", "brokerAddresses");
            }
            if ($.datacenterId == null) {
                throw new MissingRequiredPropertyException("ClusterConnectionsArgs", "datacenterId");
            }
            if ($.lanId == null) {
                throw new MissingRequiredPropertyException("ClusterConnectionsArgs", "lanId");
            }
            return $;
        }
    }

}
