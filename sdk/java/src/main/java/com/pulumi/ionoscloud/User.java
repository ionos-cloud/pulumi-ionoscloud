// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.UserArgs;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.inputs.UserState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages **Users** and list users and groups associated with that user.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.Group;
 * import com.pulumi.ionoscloud.GroupArgs;
 * import com.pulumi.random.RandomPassword;
 * import com.pulumi.random.RandomPasswordArgs;
 * import com.pulumi.ionoscloud.User;
 * import com.pulumi.ionoscloud.UserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var group1 = new Group("group1", GroupArgs.builder()        
 *             .createDatacenter(true)
 *             .createSnapshot(true)
 *             .reserveIp(true)
 *             .accessActivityLog(false)
 *             .createK8sCluster(true)
 *             .build());
 * 
 *         var group2 = new Group("group2", GroupArgs.builder()        
 *             .createDatacenter(true)
 *             .createSnapshot(true)
 *             .reserveIp(true)
 *             .accessActivityLog(false)
 *             .createK8sCluster(true)
 *             .build());
 * 
 *         var group3 = new Group("group3", GroupArgs.builder()        
 *             .createDatacenter(true)
 *             .createSnapshot(true)
 *             .reserveIp(true)
 *             .accessActivityLog(false)
 *             .build());
 * 
 *         var userPassword = new RandomPassword("userPassword", RandomPasswordArgs.builder()        
 *             .length(16)
 *             .special(true)
 *             .overrideSpecial("!#$%&*()-_=+[]}{}{@code <>:?")
 *             .build());
 * 
 *         var example = new User("example", UserArgs.builder()        
 *             .firstName("example")
 *             .lastName("example")
 *             .email("unique}{@literal @}{@code email.com")
 *             .password(userPassword.result())
 *             .administrator(false)
 *             .forceSecAuth(false)
 *             .active(true)
 *             .groupIds(            
 *                 group1.id(),
 *                 group2.id(),
 *                 group3.id())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Resource User can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import ionoscloud:index/user:User myuser {user uuid}
 * ```
 * 
 */
@ResourceType(type="ionoscloud:index/user:User")
public class User extends com.pulumi.resources.CustomResource {
    /**
     * [Boolean] Indicates if the user is active
     * 
     */
    @Export(name="active", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> active;

    /**
     * @return [Boolean] Indicates if the user is active
     * 
     */
    public Output<Optional<Boolean>> active() {
        return Codegen.optional(this.active);
    }
    /**
     * [Boolean] Indicates if the user has administrative rights. Administrators do not need to be managed in groups, as they automatically have access to all resources associated with the contract.
     * 
     */
    @Export(name="administrator", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> administrator;

    /**
     * @return [Boolean] Indicates if the user has administrative rights. Administrators do not need to be managed in groups, as they automatically have access to all resources associated with the contract.
     * 
     */
    public Output<Optional<Boolean>> administrator() {
        return Codegen.optional(this.administrator);
    }
    /**
     * [string] An e-mail address for the user.
     * 
     */
    @Export(name="email", refs={String.class}, tree="[0]")
    private Output<String> email;

    /**
     * @return [string] An e-mail address for the user.
     * 
     */
    public Output<String> email() {
        return this.email;
    }
    /**
     * [string] A first name for the user.
     * 
     */
    @Export(name="firstName", refs={String.class}, tree="[0]")
    private Output<String> firstName;

    /**
     * @return [string] A first name for the user.
     * 
     */
    public Output<String> firstName() {
        return this.firstName;
    }
    /**
     * [Boolean] Indicates if secure (two-factor) authentication should be forced for the user (true) or not (false).
     * 
     */
    @Export(name="forceSecAuth", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forceSecAuth;

    /**
     * @return [Boolean] Indicates if secure (two-factor) authentication should be forced for the user (true) or not (false).
     * 
     */
    public Output<Optional<Boolean>> forceSecAuth() {
        return Codegen.optional(this.forceSecAuth);
    }
    /**
     * [Set] The groups that this user will be a member of
     * 
     * **NOTE:** Group_ids field cannot be used at the same time with user_ids field in group resource. Trying to add the same user to the same group in both ways in the same plan will result in a cyclic dependency error.
     * 
     */
    @Export(name="groupIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> groupIds;

    /**
     * @return [Set] The groups that this user will be a member of
     * 
     * **NOTE:** Group_ids field cannot be used at the same time with user_ids field in group resource. Trying to add the same user to the same group in both ways in the same plan will result in a cyclic dependency error.
     * 
     */
    public Output<Optional<List<String>>> groupIds() {
        return Codegen.optional(this.groupIds);
    }
    /**
     * [string] A last name for the user.
     * 
     */
    @Export(name="lastName", refs={String.class}, tree="[0]")
    private Output<String> lastName;

    /**
     * @return [string] A last name for the user.
     * 
     */
    public Output<String> lastName() {
        return this.lastName;
    }
    /**
     * [string] A password for the user.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output<String> password;

    /**
     * @return [string] A password for the user.
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * Canonical (S3) id of the user for a given identity
     * 
     */
    @Export(name="s3CanonicalUserId", refs={String.class}, tree="[0]")
    private Output<String> s3CanonicalUserId;

    /**
     * @return Canonical (S3) id of the user for a given identity
     * 
     */
    public Output<String> s3CanonicalUserId() {
        return this.s3CanonicalUserId;
    }
    /**
     * [Boolean] Indicates if secure authentication is active for the user or not. *it can not be used in create requests - can be used in update*
     * 
     */
    @Export(name="secAuthActive", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> secAuthActive;

    /**
     * @return [Boolean] Indicates if secure authentication is active for the user or not. *it can not be used in create requests - can be used in update*
     * 
     */
    public Output<Boolean> secAuthActive() {
        return this.secAuthActive;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public User(java.lang.String name) {
        this(name, UserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public User(java.lang.String name, UserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public User(java.lang.String name, UserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/user:User", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private User(java.lang.String name, Output<java.lang.String> id, @Nullable UserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/user:User", name, state, makeResourceOptions(options, id), false);
    }

    private static UserArgs makeArgs(UserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? UserArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static User get(java.lang.String name, Output<java.lang.String> id, @Nullable UserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new User(name, id, state, options);
    }
}
