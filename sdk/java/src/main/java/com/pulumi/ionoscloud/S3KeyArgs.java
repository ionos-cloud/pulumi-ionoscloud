// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class S3KeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final S3KeyArgs Empty = new S3KeyArgs();

    /**
     * [boolean] Whether the S3 is active / enabled or not - Please keep in mind this is only required on create. Default value in true
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return [boolean] Whether the S3 is active / enabled or not - Please keep in mind this is only required on create. Default value in true
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * [string] The UUID of the user owning the S3 Key.
     * 
     */
    @Import(name="userId", required=true)
    private Output<String> userId;

    /**
     * @return [string] The UUID of the user owning the S3 Key.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    private S3KeyArgs() {}

    private S3KeyArgs(S3KeyArgs $) {
        this.active = $.active;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(S3KeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private S3KeyArgs $;

        public Builder() {
            $ = new S3KeyArgs();
        }

        public Builder(S3KeyArgs defaults) {
            $ = new S3KeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param active [boolean] Whether the S3 is active / enabled or not - Please keep in mind this is only required on create. Default value in true
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active [boolean] Whether the S3 is active / enabled or not - Please keep in mind this is only required on create. Default value in true
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param userId [string] The UUID of the user owning the S3 Key.
         * 
         * @return builder
         * 
         */
        public Builder userId(Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId [string] The UUID of the user owning the S3 Key.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public S3KeyArgs build() {
            if ($.userId == null) {
                throw new MissingRequiredPropertyException("S3KeyArgs", "userId");
            }
            return $;
        }
    }

}
