// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.dsaas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.dsaas.NodePoolArgs;
import com.pulumi.ionoscloud.dsaas.inputs.NodePoolState;
import com.pulumi.ionoscloud.dsaas.outputs.NodePoolAutoScaling;
import com.pulumi.ionoscloud.dsaas.outputs.NodePoolMaintenanceWindow;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.dsaas.Cluster;
 * import com.pulumi.ionoscloud.dsaas.ClusterArgs;
 * import com.pulumi.ionoscloud.dsaas.inputs.ClusterMaintenanceWindowArgs;
 * import com.pulumi.ionoscloud.dsaas.NodePool;
 * import com.pulumi.ionoscloud.dsaas.NodePoolArgs;
 * import com.pulumi.ionoscloud.dsaas.inputs.NodePoolMaintenanceWindowArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Datacenter("example", DatacenterArgs.builder()
 *             .name("Datacenter_Example")
 *             .location("de/txl")
 *             .description("Datacenter for testing Dataplatform Cluster")
 *             .build());
 * 
 *         var exampleCluster = new Cluster("exampleCluster", ClusterArgs.builder()
 *             .datacenterId(example.id())
 *             .name("Dataplatform_Cluster_Example")
 *             .maintenanceWindows(ClusterMaintenanceWindowArgs.builder()
 *                 .dayOfTheWeek("Sunday")
 *                 .time("09:00:00")
 *                 .build())
 *             .version("23.7")
 *             .build());
 * 
 *         var exampleNodePool = new NodePool("exampleNodePool", NodePoolArgs.builder()
 *             .clusterId(exampleCluster.id())
 *             .name("Dataplatform_Node_Pool_Example")
 *             .nodeCount(1)
 *             .cpuFamily("INTEL_SKYLAKE")
 *             .coresCount(1)
 *             .ramSize(2048)
 *             .availabilityZone("AUTO")
 *             .storageType("HDD")
 *             .storageSize(10)
 *             .maintenanceWindows(NodePoolMaintenanceWindowArgs.builder()
 *                 .dayOfTheWeek("Monday")
 *                 .time("09:00:00")
 *                 .build())
 *             .labels(Map.ofEntries(
 *                 Map.entry("foo", "bar"),
 *                 Map.entry("color", "green")
 *             ))
 *             .annotations(Map.ofEntries(
 *                 Map.entry("ann1", "value1"),
 *                 Map.entry("ann2", "value2")
 *             ))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * A Dataplatform Node Pool resource can be imported using its cluster&#39;s UUID as well as its own UUID, e.g.:
 * 
 * ```sh
 * $ pulumi import ionoscloud:dsaas/nodePool:NodePool mynodepool dataplatform_cluster_uuid/dataplatform_nodepool_id
 * ```
 * 
 */
@ResourceType(type="ionoscloud:dsaas/nodePool:NodePool")
public class NodePool extends com.pulumi.resources.CustomResource {
    /**
     * [map] Key-value pairs attached to node pool resource as [Kubernetes annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
     * 
     */
    @Export(name="annotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> annotations;

    /**
     * @return [map] Key-value pairs attached to node pool resource as [Kubernetes annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
     * 
     */
    public Output<Optional<Map<String,String>>> annotations() {
        return Codegen.optional(this.annotations);
    }
    /**
     * [string] Whether the Node Pool should autoscale. For more details, please check the API documentation
     * 
     */
    @Export(name="autoScaling", refs={NodePoolAutoScaling.class}, tree="[0]")
    private Output</* @Nullable */ NodePoolAutoScaling> autoScaling;

    /**
     * @return [string] Whether the Node Pool should autoscale. For more details, please check the API documentation
     * 
     */
    public Output<Optional<NodePoolAutoScaling>> autoScaling() {
        return Codegen.optional(this.autoScaling);
    }
    /**
     * [string] The availability zone of the virtual datacenter region where the node pool resources should be provisioned. Must be set with one of the values `AUTO`, `ZONE_1` or `ZONE_2`. The default value is `AUTO`.
     * 
     */
    @Export(name="availabilityZone", refs={String.class}, tree="[0]")
    private Output<String> availabilityZone;

    /**
     * @return [string] The availability zone of the virtual datacenter region where the node pool resources should be provisioned. Must be set with one of the values `AUTO`, `ZONE_1` or `ZONE_2`. The default value is `AUTO`.
     * 
     */
    public Output<String> availabilityZone() {
        return this.availabilityZone;
    }
    /**
     * [string] The UUID of an existing Dataplatform cluster.
     * 
     */
    @Export(name="clusterId", refs={String.class}, tree="[0]")
    private Output<String> clusterId;

    /**
     * @return [string] The UUID of an existing Dataplatform cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * [int] The number of CPU cores per node. Must be set with a minimum value of 1. The default value is `4`.
     * 
     */
    @Export(name="coresCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> coresCount;

    /**
     * @return [int] The number of CPU cores per node. Must be set with a minimum value of 1. The default value is `4`.
     * 
     */
    public Output<Integer> coresCount() {
        return this.coresCount;
    }
    /**
     * [string] A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource. The default value is `AUTO`.
     * 
     */
    @Export(name="cpuFamily", refs={String.class}, tree="[0]")
    private Output<String> cpuFamily;

    /**
     * @return [string] A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource. The default value is `AUTO`.
     * 
     */
    public Output<String> cpuFamily() {
        return this.cpuFamily;
    }
    /**
     * The UUID of the virtual data center (VDC) in which the nodepool is provisioned
     * 
     */
    @Export(name="datacenterId", refs={String.class}, tree="[0]")
    private Output<String> datacenterId;

    /**
     * @return The UUID of the virtual data center (VDC) in which the nodepool is provisioned
     * 
     */
    public Output<String> datacenterId() {
        return this.datacenterId;
    }
    /**
     * [map] Key-value pairs attached to the node pool resource as [Kubernetes labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return [map] Key-value pairs attached to the node pool resource as [Kubernetes labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
     * 
     */
    @Export(name="maintenanceWindows", refs={List.class,NodePoolMaintenanceWindow.class}, tree="[0,1]")
    private Output<List<NodePoolMaintenanceWindow>> maintenanceWindows;

    /**
     * @return Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
     * 
     */
    public Output<List<NodePoolMaintenanceWindow>> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    /**
     * [string] The name of your node pool. Must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [string] The name of your node pool. Must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * [int] The number of nodes that make up the node pool. Must be set with a minimum value of 1.
     * 
     */
    @Export(name="nodeCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> nodeCount;

    /**
     * @return [int] The number of nodes that make up the node pool. Must be set with a minimum value of 1.
     * 
     */
    public Output<Integer> nodeCount() {
        return this.nodeCount;
    }
    /**
     * [int] The RAM size for one node in MB. Must be set in multiples of `1024`MB, with a minimum size is of `2048`MB. The default value is `4096`.
     * 
     */
    @Export(name="ramSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> ramSize;

    /**
     * @return [int] The RAM size for one node in MB. Must be set in multiples of `1024`MB, with a minimum size is of `2048`MB. The default value is `4096`.
     * 
     */
    public Output<Integer> ramSize() {
        return this.ramSize;
    }
    /**
     * [int] The size of the volume in GB. The size must be greater than `10`GB. The default value is `20`.
     * 
     */
    @Export(name="storageSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> storageSize;

    /**
     * @return [int] The size of the volume in GB. The size must be greater than `10`GB. The default value is `20`.
     * 
     */
    public Output<Integer> storageSize() {
        return this.storageSize;
    }
    /**
     * [int] The type of hardware for the volume. Must be set with one of the values `HDD` or `SSD`. The default value is `SSD`.
     * 
     */
    @Export(name="storageType", refs={String.class}, tree="[0]")
    private Output<String> storageType;

    /**
     * @return [int] The type of hardware for the volume. Must be set with one of the values `HDD` or `SSD`. The default value is `SSD`.
     * 
     */
    public Output<String> storageType() {
        return this.storageType;
    }
    /**
     * The version of the Data Platform.
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    /**
     * @return The version of the Data Platform.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NodePool(java.lang.String name) {
        this(name, NodePoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NodePool(java.lang.String name, NodePoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NodePool(java.lang.String name, NodePoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:dsaas/nodePool:NodePool", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NodePool(java.lang.String name, Output<java.lang.String> id, @Nullable NodePoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:dsaas/nodePool:NodePool", name, state, makeResourceOptions(options, id), false);
    }

    private static NodePoolArgs makeArgs(NodePoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NodePoolArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NodePool get(java.lang.String name, Output<java.lang.String> id, @Nullable NodePoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NodePool(name, id, state, options);
    }
}
