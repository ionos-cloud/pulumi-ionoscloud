// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTemplatePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTemplatePlainArgs Empty = new GetTemplatePlainArgs();

    /**
     * The CPU cores count.
     * 
     */
    @Import(name="cores")
    private @Nullable Double cores;

    /**
     * @return The CPU cores count.
     * 
     */
    public Optional<Double> cores() {
        return Optional.ofNullable(this.cores);
    }

    /**
     * A name of that resource.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return A name of that resource.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The RAM size in MB.
     * 
     */
    @Import(name="ram")
    private @Nullable Double ram;

    /**
     * @return The RAM size in MB.
     * 
     */
    public Optional<Double> ram() {
        return Optional.ofNullable(this.ram);
    }

    /**
     * The storage size in GB.
     * 
     * Any of the arguments ca be provided. If none, the datasource will return an error.
     * 
     */
    @Import(name="storageSize")
    private @Nullable Double storageSize;

    /**
     * @return The storage size in GB.
     * 
     * Any of the arguments ca be provided. If none, the datasource will return an error.
     * 
     */
    public Optional<Double> storageSize() {
        return Optional.ofNullable(this.storageSize);
    }

    private GetTemplatePlainArgs() {}

    private GetTemplatePlainArgs(GetTemplatePlainArgs $) {
        this.cores = $.cores;
        this.name = $.name;
        this.ram = $.ram;
        this.storageSize = $.storageSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTemplatePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTemplatePlainArgs $;

        public Builder() {
            $ = new GetTemplatePlainArgs();
        }

        public Builder(GetTemplatePlainArgs defaults) {
            $ = new GetTemplatePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cores The CPU cores count.
         * 
         * @return builder
         * 
         */
        public Builder cores(@Nullable Double cores) {
            $.cores = cores;
            return this;
        }

        /**
         * @param name A name of that resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param ram The RAM size in MB.
         * 
         * @return builder
         * 
         */
        public Builder ram(@Nullable Double ram) {
            $.ram = ram;
            return this;
        }

        /**
         * @param storageSize The storage size in GB.
         * 
         * Any of the arguments ca be provided. If none, the datasource will return an error.
         * 
         * @return builder
         * 
         */
        public Builder storageSize(@Nullable Double storageSize) {
            $.storageSize = storageSize;
            return this;
        }

        public GetTemplatePlainArgs build() {
            return $;
        }
    }

}
