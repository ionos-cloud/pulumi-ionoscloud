// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.S3KeyArgs;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.inputs.S3KeyState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an **S3 Key** on IonosCloud.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.User;
 * import com.pulumi.ionoscloud.UserArgs;
 * import com.pulumi.ionoscloud.S3Key;
 * import com.pulumi.ionoscloud.S3KeyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var exampleUser = new User("exampleUser", UserArgs.builder()        
 *             .firstName("example")
 *             .lastName("example")
 *             .email("unique}{@literal @}{@code email.com")
 *             .password("abc123-321CBA")
 *             .administrator(false)
 *             .forceSecAuth(false)
 *             .build());
 * 
 *         var exampleS3Key = new S3Key("exampleS3Key", S3KeyArgs.builder()        
 *             .userId(exampleUser.id())
 *             .active(true)
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * An S3 Unit resource can be imported using its user id as well as its `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import ionoscloud:index/s3Key:S3Key demo {userId}/{s3KeyId}
 * ```
 * 
 * This can be helpful when you want to import S3 Keys which you have already created manually or using other means, outside of terraform.
 * 
 */
@ResourceType(type="ionoscloud:index/s3Key:S3Key")
public class S3Key extends com.pulumi.resources.CustomResource {
    /**
     * [boolean] Whether the S3 is active / enabled or not - Please keep in mind this is only required on create. Default value in true
     * 
     */
    @Export(name="active", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> active;

    /**
     * @return [boolean] Whether the S3 is active / enabled or not - Please keep in mind this is only required on create. Default value in true
     * 
     */
    public Output<Optional<Boolean>> active() {
        return Codegen.optional(this.active);
    }
    /**
     * The S3 Secret key.
     * 
     */
    @Export(name="secretKey", refs={String.class}, tree="[0]")
    private Output<String> secretKey;

    /**
     * @return The S3 Secret key.
     * 
     */
    public Output<String> secretKey() {
        return this.secretKey;
    }
    /**
     * [string] The UUID of the user owning the S3 Key.
     * 
     */
    @Export(name="userId", refs={String.class}, tree="[0]")
    private Output<String> userId;

    /**
     * @return [string] The UUID of the user owning the S3 Key.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public S3Key(java.lang.String name) {
        this(name, S3KeyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public S3Key(java.lang.String name, S3KeyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public S3Key(java.lang.String name, S3KeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/s3Key:S3Key", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private S3Key(java.lang.String name, Output<java.lang.String> id, @Nullable S3KeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/s3Key:S3Key", name, state, makeResourceOptions(options, id), false);
    }

    private static S3KeyArgs makeArgs(S3KeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? S3KeyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static S3Key get(java.lang.String name, Output<java.lang.String> id, @Nullable S3KeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new S3Key(name, id, state, options);
    }
}
