// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.VpnIpsecTunnelArgs;
import com.pulumi.ionoscloud.inputs.VpnIpsecTunnelState;
import com.pulumi.ionoscloud.outputs.VpnIpsecTunnelAuth;
import com.pulumi.ionoscloud.outputs.VpnIpsecTunnelEsp;
import com.pulumi.ionoscloud.outputs.VpnIpsecTunnelIke;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * An IPSec Gateway Tunnel resource manages the creation, management, and deletion of VPN IPSec Gateway Tunnels within the
 * IONOS Cloud infrastructure. This resource facilitates the creation of VPN IPSec Gateway Tunnels, enabling secure
 * connections between your network resources.
 * 
 * ## Usage example
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.Lan;
 * import com.pulumi.ionoscloud.LanArgs;
 * import com.pulumi.ionoscloud.Ipblock;
 * import com.pulumi.ionoscloud.IpblockArgs;
 * import com.pulumi.ionoscloud.VpnIpsecGateway;
 * import com.pulumi.ionoscloud.VpnIpsecGatewayArgs;
 * import com.pulumi.ionoscloud.inputs.VpnIpsecGatewayConnectionArgs;
 * import com.pulumi.ionoscloud.VpnIpsecTunnel;
 * import com.pulumi.ionoscloud.VpnIpsecTunnelArgs;
 * import com.pulumi.ionoscloud.inputs.VpnIpsecTunnelAuthArgs;
 * import com.pulumi.ionoscloud.inputs.VpnIpsecTunnelIkeArgs;
 * import com.pulumi.ionoscloud.inputs.VpnIpsecTunnelEspArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Basic example
 *         var testDatacenter = new Datacenter("testDatacenter", DatacenterArgs.builder()        
 *             .location("de/fra")
 *             .build());
 * 
 *         var testLan = new Lan("testLan", LanArgs.builder()        
 *             .public_(false)
 *             .datacenterId(testDatacenter.id())
 *             .build());
 * 
 *         var testIpblock = new Ipblock("testIpblock", IpblockArgs.builder()        
 *             .location("de/fra")
 *             .size(1)
 *             .build());
 * 
 *         var exampleVpnIpsecGateway = new VpnIpsecGateway("exampleVpnIpsecGateway", VpnIpsecGatewayArgs.builder()        
 *             .location("de/fra")
 *             .gatewayIp(testIpblock.ips().applyValue(ips -> ips[0]))
 *             .version("IKEv2")
 *             .description("This gateway connects site A to VDC X.")
 *             .connections(VpnIpsecGatewayConnectionArgs.builder()
 *                 .datacenterId(testDatacenter.id())
 *                 .lanId(testLan.id())
 *                 .ipv4Cidr("192.168.100.10/24")
 *                 .build())
 *             .build());
 * 
 *         var exampleVpnIpsecTunnel = new VpnIpsecTunnel("exampleVpnIpsecTunnel", VpnIpsecTunnelArgs.builder()        
 *             .location("de/fra")
 *             .gatewayId(exampleVpnIpsecGateway.id())
 *             .remoteHost("vpn.mycompany.com")
 *             .description("Allows local subnet X to connect to virtual network Y.")
 *             .auth(VpnIpsecTunnelAuthArgs.builder()
 *                 .method("PSK")
 *                 .pskKey("X2wosbaw74M8hQGbK3jCCaEusR6CCFRa")
 *                 .build())
 *             .ike(VpnIpsecTunnelIkeArgs.builder()
 *                 .diffieHellmanGroup("16-MODP4096")
 *                 .encryptionAlgorithm("AES256")
 *                 .integrityAlgorithm("SHA256")
 *                 .lifetime(86400)
 *                 .build())
 *             .esps(VpnIpsecTunnelEspArgs.builder()
 *                 .diffieHellmanGroup("16-MODP4096")
 *                 .encryptionAlgorithm("AES256")
 *                 .integrityAlgorithm("SHA256")
 *                 .lifetime(3600)
 *                 .build())
 *             .cloudNetworkCidrs("0.0.0.0/0")
 *             .peerNetworkCidrs("1.2.3.4/32")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * The resource can be imported using the `location`, `gateway_id` and `tunnel_id`, for example:
 * 
 * ```sh
 * $ pulumi import ionoscloud:index/vpnIpsecTunnel:VpnIpsecTunnel example {location}:{gateway_id}:{tunnel_id}
 * ```
 * 
 */
@ResourceType(type="ionoscloud:index/vpnIpsecTunnel:VpnIpsecTunnel")
public class VpnIpsecTunnel extends com.pulumi.resources.CustomResource {
    /**
     * [string] Properties with all data needed to define IPSec Authentication. Minimum items: 1. Maximum
     * items: 1.
     * 
     */
    @Export(name="auth", refs={VpnIpsecTunnelAuth.class}, tree="[0]")
    private Output<VpnIpsecTunnelAuth> auth;

    /**
     * @return [string] Properties with all data needed to define IPSec Authentication. Minimum items: 1. Maximum
     * items: 1.
     * 
     */
    public Output<VpnIpsecTunnelAuth> auth() {
        return this.auth;
    }
    /**
     * [list] The network CIDRs on the &#34;Left&#34; side that are allowed to connect to the IPSec
     * tunnel, i.e. the CIDRs within your IONOS Cloud LAN. Specify &#34;0.0.0.0/0&#34; or &#34;::/0&#34; for all addresses. Minimum items: 1.
     * Maximum items: 20.
     * 
     */
    @Export(name="cloudNetworkCidrs", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> cloudNetworkCidrs;

    /**
     * @return [list] The network CIDRs on the &#34;Left&#34; side that are allowed to connect to the IPSec
     * tunnel, i.e. the CIDRs within your IONOS Cloud LAN. Specify &#34;0.0.0.0/0&#34; or &#34;::/0&#34; for all addresses. Minimum items: 1.
     * Maximum items: 20.
     * 
     */
    public Output<List<String>> cloudNetworkCidrs() {
        return this.cloudNetworkCidrs;
    }
    /**
     * [string] The human-readable description of your IPSec Gateway Tunnel.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return [string] The human-readable description of your IPSec Gateway Tunnel.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * [list] Settings for the IPSec SA (ESP) phase. Minimum items: 1. Maximum items: 1.
     * 
     */
    @Export(name="esps", refs={List.class,VpnIpsecTunnelEsp.class}, tree="[0,1]")
    private Output<List<VpnIpsecTunnelEsp>> esps;

    /**
     * @return [list] Settings for the IPSec SA (ESP) phase. Minimum items: 1. Maximum items: 1.
     * 
     */
    public Output<List<VpnIpsecTunnelEsp>> esps() {
        return this.esps;
    }
    /**
     * [string] The ID of the IPSec Gateway that the tunnel belongs to.
     * 
     */
    @Export(name="gatewayId", refs={String.class}, tree="[0]")
    private Output<String> gatewayId;

    /**
     * @return [string] The ID of the IPSec Gateway that the tunnel belongs to.
     * 
     */
    public Output<String> gatewayId() {
        return this.gatewayId;
    }
    /**
     * [list] Settings for the initial security exchange phase. Minimum items: 1. Maximum items: 1.
     * 
     */
    @Export(name="ike", refs={VpnIpsecTunnelIke.class}, tree="[0]")
    private Output<VpnIpsecTunnelIke> ike;

    /**
     * @return [list] Settings for the initial security exchange phase. Minimum items: 1. Maximum items: 1.
     * 
     */
    public Output<VpnIpsecTunnelIke> ike() {
        return this.ike;
    }
    /**
     * [string] The location of the IPSec Gateway Tunnel. Supported locations: de/fra, de/txl, es/vit,
     * gb/lhr, us/ewr, us/las, us/mci, fr/par
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return [string] The location of the IPSec Gateway Tunnel. Supported locations: de/fra, de/txl, es/vit,
     * gb/lhr, us/ewr, us/las, us/mci, fr/par
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * [string] The name of the IPSec Gateway Tunnel.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [string] The name of the IPSec Gateway Tunnel.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * [list] The network CIDRs on the &#34;Right&#34; side that are allowed to connect to the IPSec
     * tunnel. Specify &#34;0.0.0.0/0&#34; or &#34;::/0&#34; for all addresses. Minimum items: 1. Maximum items: 20.
     * 
     */
    @Export(name="peerNetworkCidrs", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> peerNetworkCidrs;

    /**
     * @return [list] The network CIDRs on the &#34;Right&#34; side that are allowed to connect to the IPSec
     * tunnel. Specify &#34;0.0.0.0/0&#34; or &#34;::/0&#34; for all addresses. Minimum items: 1. Maximum items: 20.
     * 
     */
    public Output<List<String>> peerNetworkCidrs() {
        return this.peerNetworkCidrs;
    }
    /**
     * [string] The remote peer host fully qualified domain name or public IPV4 IP to connect to.
     * 
     */
    @Export(name="remoteHost", refs={String.class}, tree="[0]")
    private Output<String> remoteHost;

    /**
     * @return [string] The remote peer host fully qualified domain name or public IPV4 IP to connect to.
     * 
     */
    public Output<String> remoteHost() {
        return this.remoteHost;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VpnIpsecTunnel(java.lang.String name) {
        this(name, VpnIpsecTunnelArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VpnIpsecTunnel(java.lang.String name, VpnIpsecTunnelArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VpnIpsecTunnel(java.lang.String name, VpnIpsecTunnelArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/vpnIpsecTunnel:VpnIpsecTunnel", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private VpnIpsecTunnel(java.lang.String name, Output<java.lang.String> id, @Nullable VpnIpsecTunnelState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/vpnIpsecTunnel:VpnIpsecTunnel", name, state, makeResourceOptions(options, id), false);
    }

    private static VpnIpsecTunnelArgs makeArgs(VpnIpsecTunnelArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? VpnIpsecTunnelArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VpnIpsecTunnel get(java.lang.String name, Output<java.lang.String> id, @Nullable VpnIpsecTunnelState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VpnIpsecTunnel(name, id, state, options);
    }
}
