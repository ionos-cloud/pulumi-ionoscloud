// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.inputs.DataplatformClusterLanArgs;
import com.pulumi.ionoscloud.inputs.DataplatformClusterMaintenanceWindowArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataplatformClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataplatformClusterArgs Empty = new DataplatformClusterArgs();

    /**
     * [string] The UUID of the virtual data center (VDC) the cluster is provisioned.
     * 
     */
    @Import(name="datacenterId", required=true)
    private Output<String> datacenterId;

    /**
     * @return [string] The UUID of the virtual data center (VDC) the cluster is provisioned.
     * 
     */
    public Output<String> datacenterId() {
        return this.datacenterId;
    }

    /**
     * [list] A list of LANs you want this node pool to be part of.
     * 
     */
    @Import(name="lans")
    private @Nullable Output<List<DataplatformClusterLanArgs>> lans;

    /**
     * @return [list] A list of LANs you want this node pool to be part of.
     * 
     */
    public Optional<Output<List<DataplatformClusterLanArgs>>> lans() {
        return Optional.ofNullable(this.lans);
    }

    /**
     * [string] Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
     * 
     */
    @Import(name="maintenanceWindows")
    private @Nullable Output<List<DataplatformClusterMaintenanceWindowArgs>> maintenanceWindows;

    /**
     * @return [string] Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
     * 
     */
    public Optional<Output<List<DataplatformClusterMaintenanceWindowArgs>>> maintenanceWindows() {
        return Optional.ofNullable(this.maintenanceWindows);
    }

    /**
     * [string] The name of your cluster. Must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return [string] The name of your cluster. Must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * [int] The version of the Data Platform.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return [int] The version of the Data Platform.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private DataplatformClusterArgs() {}

    private DataplatformClusterArgs(DataplatformClusterArgs $) {
        this.datacenterId = $.datacenterId;
        this.lans = $.lans;
        this.maintenanceWindows = $.maintenanceWindows;
        this.name = $.name;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataplatformClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataplatformClusterArgs $;

        public Builder() {
            $ = new DataplatformClusterArgs();
        }

        public Builder(DataplatformClusterArgs defaults) {
            $ = new DataplatformClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datacenterId [string] The UUID of the virtual data center (VDC) the cluster is provisioned.
         * 
         * @return builder
         * 
         */
        public Builder datacenterId(Output<String> datacenterId) {
            $.datacenterId = datacenterId;
            return this;
        }

        /**
         * @param datacenterId [string] The UUID of the virtual data center (VDC) the cluster is provisioned.
         * 
         * @return builder
         * 
         */
        public Builder datacenterId(String datacenterId) {
            return datacenterId(Output.of(datacenterId));
        }

        /**
         * @param lans [list] A list of LANs you want this node pool to be part of.
         * 
         * @return builder
         * 
         */
        public Builder lans(@Nullable Output<List<DataplatformClusterLanArgs>> lans) {
            $.lans = lans;
            return this;
        }

        /**
         * @param lans [list] A list of LANs you want this node pool to be part of.
         * 
         * @return builder
         * 
         */
        public Builder lans(List<DataplatformClusterLanArgs> lans) {
            return lans(Output.of(lans));
        }

        /**
         * @param lans [list] A list of LANs you want this node pool to be part of.
         * 
         * @return builder
         * 
         */
        public Builder lans(DataplatformClusterLanArgs... lans) {
            return lans(List.of(lans));
        }

        /**
         * @param maintenanceWindows [string] Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindows(@Nullable Output<List<DataplatformClusterMaintenanceWindowArgs>> maintenanceWindows) {
            $.maintenanceWindows = maintenanceWindows;
            return this;
        }

        /**
         * @param maintenanceWindows [string] Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindows(List<DataplatformClusterMaintenanceWindowArgs> maintenanceWindows) {
            return maintenanceWindows(Output.of(maintenanceWindows));
        }

        /**
         * @param maintenanceWindows [string] Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindows(DataplatformClusterMaintenanceWindowArgs... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }

        /**
         * @param name [string] The name of your cluster. Must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name [string] The name of your cluster. Must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param version [int] The version of the Data Platform.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version [int] The version of the Data Platform.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public DataplatformClusterArgs build() {
            if ($.datacenterId == null) {
                throw new MissingRequiredPropertyException("DataplatformClusterArgs", "datacenterId");
            }
            return $;
        }
    }

}
