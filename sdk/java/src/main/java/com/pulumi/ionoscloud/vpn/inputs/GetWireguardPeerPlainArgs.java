// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.vpn.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWireguardPeerPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWireguardPeerPlainArgs Empty = new GetWireguardPeerPlainArgs();

    /**
     * [String] The ID of the WireGuard Gateway.
     * 
     */
    @Import(name="gatewayId", required=true)
    private String gatewayId;

    /**
     * @return [String] The ID of the WireGuard Gateway.
     * 
     */
    public String gatewayId() {
        return this.gatewayId;
    }

    /**
     * [String] The ID of the WireGuard Peer.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return [String] The ID of the WireGuard Peer.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * [String] The location of the WireGuard Gateway.
     * 
     */
    @Import(name="location")
    private @Nullable String location;

    /**
     * @return [String] The location of the WireGuard Gateway.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * [String] The name of the WireGuard Peer.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return [String] The name of the WireGuard Peer.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    private GetWireguardPeerPlainArgs() {}

    private GetWireguardPeerPlainArgs(GetWireguardPeerPlainArgs $) {
        this.gatewayId = $.gatewayId;
        this.id = $.id;
        this.location = $.location;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWireguardPeerPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWireguardPeerPlainArgs $;

        public Builder() {
            $ = new GetWireguardPeerPlainArgs();
        }

        public Builder(GetWireguardPeerPlainArgs defaults) {
            $ = new GetWireguardPeerPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gatewayId [String] The ID of the WireGuard Gateway.
         * 
         * @return builder
         * 
         */
        public Builder gatewayId(String gatewayId) {
            $.gatewayId = gatewayId;
            return this;
        }

        /**
         * @param id [String] The ID of the WireGuard Peer.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param location [String] The location of the WireGuard Gateway.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable String location) {
            $.location = location;
            return this;
        }

        /**
         * @param name [String] The name of the WireGuard Peer.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public GetWireguardPeerPlainArgs build() {
            if ($.gatewayId == null) {
                throw new MissingRequiredPropertyException("GetWireguardPeerPlainArgs", "gatewayId");
            }
            return $;
        }
    }

}
