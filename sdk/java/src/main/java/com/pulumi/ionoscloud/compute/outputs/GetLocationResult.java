// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.compute.outputs.GetLocationCpuArchitecture;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLocationResult {
    /**
     * @return Array of features and CPU families available in a location
     * 
     */
    private List<GetLocationCpuArchitecture> cpuArchitectures;
    private String feature;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return List of image aliases available for the location
     * 
     */
    private List<String> imageAliases;
    private String name;

    private GetLocationResult() {}
    /**
     * @return Array of features and CPU families available in a location
     * 
     */
    public List<GetLocationCpuArchitecture> cpuArchitectures() {
        return this.cpuArchitectures;
    }
    public String feature() {
        return this.feature;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of image aliases available for the location
     * 
     */
    public List<String> imageAliases() {
        return this.imageAliases;
    }
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLocationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetLocationCpuArchitecture> cpuArchitectures;
        private String feature;
        private String id;
        private List<String> imageAliases;
        private String name;
        public Builder() {}
        public Builder(GetLocationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuArchitectures = defaults.cpuArchitectures;
    	      this.feature = defaults.feature;
    	      this.id = defaults.id;
    	      this.imageAliases = defaults.imageAliases;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder cpuArchitectures(List<GetLocationCpuArchitecture> cpuArchitectures) {
            if (cpuArchitectures == null) {
              throw new MissingRequiredPropertyException("GetLocationResult", "cpuArchitectures");
            }
            this.cpuArchitectures = cpuArchitectures;
            return this;
        }
        public Builder cpuArchitectures(GetLocationCpuArchitecture... cpuArchitectures) {
            return cpuArchitectures(List.of(cpuArchitectures));
        }
        @CustomType.Setter
        public Builder feature(String feature) {
            if (feature == null) {
              throw new MissingRequiredPropertyException("GetLocationResult", "feature");
            }
            this.feature = feature;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLocationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageAliases(List<String> imageAliases) {
            if (imageAliases == null) {
              throw new MissingRequiredPropertyException("GetLocationResult", "imageAliases");
            }
            this.imageAliases = imageAliases;
            return this;
        }
        public Builder imageAliases(String... imageAliases) {
            return imageAliases(List.of(imageAliases));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetLocationResult", "name");
            }
            this.name = name;
            return this;
        }
        public GetLocationResult build() {
            final var _resultValue = new GetLocationResult();
            _resultValue.cpuArchitectures = cpuArchitectures;
            _resultValue.feature = feature;
            _resultValue.id = id;
            _resultValue.imageAliases = imageAliases;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
