// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.compute.NatGatewayArgs;
import com.pulumi.ionoscloud.compute.inputs.NatGatewayState;
import com.pulumi.ionoscloud.compute.outputs.NatGatewayLan;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages a **Nat Gateway** on IonosCloud.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.compute.IPBlock;
 * import com.pulumi.ionoscloud.compute.IPBlockArgs;
 * import com.pulumi.ionoscloud.compute.Lan;
 * import com.pulumi.ionoscloud.compute.LanArgs;
 * import com.pulumi.ionoscloud.compute.NatGateway;
 * import com.pulumi.ionoscloud.compute.NatGatewayArgs;
 * import com.pulumi.ionoscloud.compute.inputs.NatGatewayLanArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Datacenter("example", DatacenterArgs.builder()
 *             .name("Datacenter Example")
 *             .location("us/las")
 *             .description("Datacenter Description")
 *             .secAuthProtection(false)
 *             .build());
 * 
 *         var exampleIPBlock = new IPBlock("exampleIPBlock", IPBlockArgs.builder()
 *             .location("us/las")
 *             .size(2)
 *             .name("IP Block Example")
 *             .build());
 * 
 *         var exampleLan = new Lan("exampleLan", LanArgs.builder()
 *             .datacenterId(example.id())
 *             .public_(true)
 *             .name("Lan Example")
 *             .build());
 * 
 *         var exampleNatGateway = new NatGateway("exampleNatGateway", NatGatewayArgs.builder()
 *             .datacenterId(example.id())
 *             .name("example")
 *             .publicIps(            
 *                 exampleIPBlock.ips().applyValue(ips -> ips[0]),
 *                 exampleIPBlock.ips().applyValue(ips -> ips[1]))
 *             .lans(NatGatewayLanArgs.builder()
 *                 .id(exampleLan.id())
 *                 .gatewayIps("10.11.2.5")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * A Nat Gateway resource can be imported using its `resource id` and the `datacenter id`, e.g.
 * 
 * ```sh
 * $ pulumi import ionoscloud:compute/natGateway:NatGateway my_natgateway datacenter uuid/nat gateway uuid
 * ```
 * 
 */
@ResourceType(type="ionoscloud:compute/natGateway:NatGateway")
public class NatGateway extends com.pulumi.resources.CustomResource {
    /**
     * [string] A Datacenter&#39;s UUID.
     * 
     */
    @Export(name="datacenterId", refs={String.class}, tree="[0]")
    private Output<String> datacenterId;

    /**
     * @return [string] A Datacenter&#39;s UUID.
     * 
     */
    public Output<String> datacenterId() {
        return this.datacenterId;
    }
    /**
     * [list] A list of Local Area Networks the node pool should be part of.
     * 
     */
    @Export(name="lans", refs={List.class,NatGatewayLan.class}, tree="[0,1]")
    private Output<List<NatGatewayLan>> lans;

    /**
     * @return [list] A list of Local Area Networks the node pool should be part of.
     * 
     */
    public Output<List<NatGatewayLan>> lans() {
        return this.lans;
    }
    /**
     * [string] Name of the NAT gateway.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [string] Name of the NAT gateway.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * [list]Collection of public IP addresses of the NAT gateway. Should be customer reserved IP addresses in that location.
     * 
     */
    @Export(name="publicIps", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> publicIps;

    /**
     * @return [list]Collection of public IP addresses of the NAT gateway. Should be customer reserved IP addresses in that location.
     * 
     */
    public Output<List<String>> publicIps() {
        return this.publicIps;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NatGateway(java.lang.String name) {
        this(name, NatGatewayArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NatGateway(java.lang.String name, NatGatewayArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NatGateway(java.lang.String name, NatGatewayArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:compute/natGateway:NatGateway", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NatGateway(java.lang.String name, Output<java.lang.String> id, @Nullable NatGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:compute/natGateway:NatGateway", name, state, makeResourceOptions(options, id), false);
    }

    private static NatGatewayArgs makeArgs(NatGatewayArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NatGatewayArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NatGateway get(java.lang.String name, Output<java.lang.String> id, @Nullable NatGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NatGateway(name, id, state, options);
    }
}
