// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpfailoverState extends com.pulumi.resources.ResourceArgs {

    public static final IpfailoverState Empty = new IpfailoverState();

    /**
     * [string] The ID of a Virtual Data Center.
     * 
     */
    @Import(name="datacenterId")
    private @Nullable Output<String> datacenterId;

    /**
     * @return [string] The ID of a Virtual Data Center.
     * 
     */
    public Optional<Output<String>> datacenterId() {
        return Optional.ofNullable(this.datacenterId);
    }

    /**
     * [string] The reserved IP address to be used in the IP failover group.
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return [string] The reserved IP address to be used in the IP failover group.
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * [string] The ID of a LAN.
     * 
     */
    @Import(name="lanId")
    private @Nullable Output<String> lanId;

    /**
     * @return [string] The ID of a LAN.
     * 
     */
    public Optional<Output<String>> lanId() {
        return Optional.ofNullable(this.lanId);
    }

    /**
     * The UUID of the master NIC
     * 
     */
    @Import(name="nicuuid")
    private @Nullable Output<String> nicuuid;

    /**
     * @return The UUID of the master NIC
     * 
     */
    public Optional<Output<String>> nicuuid() {
        return Optional.ofNullable(this.nicuuid);
    }

    private IpfailoverState() {}

    private IpfailoverState(IpfailoverState $) {
        this.datacenterId = $.datacenterId;
        this.ip = $.ip;
        this.lanId = $.lanId;
        this.nicuuid = $.nicuuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpfailoverState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpfailoverState $;

        public Builder() {
            $ = new IpfailoverState();
        }

        public Builder(IpfailoverState defaults) {
            $ = new IpfailoverState(Objects.requireNonNull(defaults));
        }

        /**
         * @param datacenterId [string] The ID of a Virtual Data Center.
         * 
         * @return builder
         * 
         */
        public Builder datacenterId(@Nullable Output<String> datacenterId) {
            $.datacenterId = datacenterId;
            return this;
        }

        /**
         * @param datacenterId [string] The ID of a Virtual Data Center.
         * 
         * @return builder
         * 
         */
        public Builder datacenterId(String datacenterId) {
            return datacenterId(Output.of(datacenterId));
        }

        /**
         * @param ip [string] The reserved IP address to be used in the IP failover group.
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip [string] The reserved IP address to be used in the IP failover group.
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param lanId [string] The ID of a LAN.
         * 
         * @return builder
         * 
         */
        public Builder lanId(@Nullable Output<String> lanId) {
            $.lanId = lanId;
            return this;
        }

        /**
         * @param lanId [string] The ID of a LAN.
         * 
         * @return builder
         * 
         */
        public Builder lanId(String lanId) {
            return lanId(Output.of(lanId));
        }

        /**
         * @param nicuuid The UUID of the master NIC
         * 
         * @return builder
         * 
         */
        public Builder nicuuid(@Nullable Output<String> nicuuid) {
            $.nicuuid = nicuuid;
            return this;
        }

        /**
         * @param nicuuid The UUID of the master NIC
         * 
         * @return builder
         * 
         */
        public Builder nicuuid(String nicuuid) {
            return nicuuid(Output.of(nicuuid));
        }

        public IpfailoverState build() {
            return $;
        }
    }

}
