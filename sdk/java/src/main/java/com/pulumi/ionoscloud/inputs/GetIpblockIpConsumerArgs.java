// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetIpblockIpConsumerArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetIpblockIpConsumerArgs Empty = new GetIpblockIpConsumerArgs();

    @Import(name="datacenterId", required=true)
    private Output<String> datacenterId;

    public Output<String> datacenterId() {
        return this.datacenterId;
    }

    @Import(name="datacenterName", required=true)
    private Output<String> datacenterName;

    public Output<String> datacenterName() {
        return this.datacenterName;
    }

    @Import(name="ip", required=true)
    private Output<String> ip;

    public Output<String> ip() {
        return this.ip;
    }

    @Import(name="k8sClusterUuid", required=true)
    private Output<String> k8sClusterUuid;

    public Output<String> k8sClusterUuid() {
        return this.k8sClusterUuid;
    }

    @Import(name="k8sNodepoolUuid", required=true)
    private Output<String> k8sNodepoolUuid;

    public Output<String> k8sNodepoolUuid() {
        return this.k8sNodepoolUuid;
    }

    @Import(name="mac", required=true)
    private Output<String> mac;

    public Output<String> mac() {
        return this.mac;
    }

    @Import(name="nicId", required=true)
    private Output<String> nicId;

    public Output<String> nicId() {
        return this.nicId;
    }

    @Import(name="serverId", required=true)
    private Output<String> serverId;

    public Output<String> serverId() {
        return this.serverId;
    }

    @Import(name="serverName", required=true)
    private Output<String> serverName;

    public Output<String> serverName() {
        return this.serverName;
    }

    private GetIpblockIpConsumerArgs() {}

    private GetIpblockIpConsumerArgs(GetIpblockIpConsumerArgs $) {
        this.datacenterId = $.datacenterId;
        this.datacenterName = $.datacenterName;
        this.ip = $.ip;
        this.k8sClusterUuid = $.k8sClusterUuid;
        this.k8sNodepoolUuid = $.k8sNodepoolUuid;
        this.mac = $.mac;
        this.nicId = $.nicId;
        this.serverId = $.serverId;
        this.serverName = $.serverName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIpblockIpConsumerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIpblockIpConsumerArgs $;

        public Builder() {
            $ = new GetIpblockIpConsumerArgs();
        }

        public Builder(GetIpblockIpConsumerArgs defaults) {
            $ = new GetIpblockIpConsumerArgs(Objects.requireNonNull(defaults));
        }

        public Builder datacenterId(Output<String> datacenterId) {
            $.datacenterId = datacenterId;
            return this;
        }

        public Builder datacenterId(String datacenterId) {
            return datacenterId(Output.of(datacenterId));
        }

        public Builder datacenterName(Output<String> datacenterName) {
            $.datacenterName = datacenterName;
            return this;
        }

        public Builder datacenterName(String datacenterName) {
            return datacenterName(Output.of(datacenterName));
        }

        public Builder ip(Output<String> ip) {
            $.ip = ip;
            return this;
        }

        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        public Builder k8sClusterUuid(Output<String> k8sClusterUuid) {
            $.k8sClusterUuid = k8sClusterUuid;
            return this;
        }

        public Builder k8sClusterUuid(String k8sClusterUuid) {
            return k8sClusterUuid(Output.of(k8sClusterUuid));
        }

        public Builder k8sNodepoolUuid(Output<String> k8sNodepoolUuid) {
            $.k8sNodepoolUuid = k8sNodepoolUuid;
            return this;
        }

        public Builder k8sNodepoolUuid(String k8sNodepoolUuid) {
            return k8sNodepoolUuid(Output.of(k8sNodepoolUuid));
        }

        public Builder mac(Output<String> mac) {
            $.mac = mac;
            return this;
        }

        public Builder mac(String mac) {
            return mac(Output.of(mac));
        }

        public Builder nicId(Output<String> nicId) {
            $.nicId = nicId;
            return this;
        }

        public Builder nicId(String nicId) {
            return nicId(Output.of(nicId));
        }

        public Builder serverId(Output<String> serverId) {
            $.serverId = serverId;
            return this;
        }

        public Builder serverId(String serverId) {
            return serverId(Output.of(serverId));
        }

        public Builder serverName(Output<String> serverName) {
            $.serverName = serverName;
            return this;
        }

        public Builder serverName(String serverName) {
            return serverName(Output.of(serverName));
        }

        public GetIpblockIpConsumerArgs build() {
            if ($.datacenterId == null) {
                throw new MissingRequiredPropertyException("GetIpblockIpConsumerArgs", "datacenterId");
            }
            if ($.datacenterName == null) {
                throw new MissingRequiredPropertyException("GetIpblockIpConsumerArgs", "datacenterName");
            }
            if ($.ip == null) {
                throw new MissingRequiredPropertyException("GetIpblockIpConsumerArgs", "ip");
            }
            if ($.k8sClusterUuid == null) {
                throw new MissingRequiredPropertyException("GetIpblockIpConsumerArgs", "k8sClusterUuid");
            }
            if ($.k8sNodepoolUuid == null) {
                throw new MissingRequiredPropertyException("GetIpblockIpConsumerArgs", "k8sNodepoolUuid");
            }
            if ($.mac == null) {
                throw new MissingRequiredPropertyException("GetIpblockIpConsumerArgs", "mac");
            }
            if ($.nicId == null) {
                throw new MissingRequiredPropertyException("GetIpblockIpConsumerArgs", "nicId");
            }
            if ($.serverId == null) {
                throw new MissingRequiredPropertyException("GetIpblockIpConsumerArgs", "serverId");
            }
            if ($.serverName == null) {
                throw new MissingRequiredPropertyException("GetIpblockIpConsumerArgs", "serverName");
            }
            return $;
        }
    }

}
