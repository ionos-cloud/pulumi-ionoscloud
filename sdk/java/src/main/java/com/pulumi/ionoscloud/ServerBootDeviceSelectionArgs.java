// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerBootDeviceSelectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerBootDeviceSelectionArgs Empty = new ServerBootDeviceSelectionArgs();

    /**
     * [string] The ID of a bootable device such as a volume or an image data source. If this field is omitted from the configuration, the VM will be restarted with no primary boot device, and it will enter the PXE shell for network booting.
     * ***Note***: If the network booting process started by the PXE shell fails, the VM will still boot into the image of the attached storage as a fallback. This behavior imitates the &#34;Boot from Network&#34; option from [DCD](https://dcd.ionos.com/).
     * 
     */
    @Import(name="bootDeviceId")
    private @Nullable Output<String> bootDeviceId;

    /**
     * @return [string] The ID of a bootable device such as a volume or an image data source. If this field is omitted from the configuration, the VM will be restarted with no primary boot device, and it will enter the PXE shell for network booting.
     * ***Note***: If the network booting process started by the PXE shell fails, the VM will still boot into the image of the attached storage as a fallback. This behavior imitates the &#34;Boot from Network&#34; option from [DCD](https://dcd.ionos.com/).
     * 
     */
    public Optional<Output<String>> bootDeviceId() {
        return Optional.ofNullable(this.bootDeviceId);
    }

    /**
     * [string] The ID of a Virtual Data Center.
     * 
     */
    @Import(name="datacenterId", required=true)
    private Output<String> datacenterId;

    /**
     * @return [string] The ID of a Virtual Data Center.
     * 
     */
    public Output<String> datacenterId() {
        return this.datacenterId;
    }

    /**
     * [string] The ID of a server.
     * 
     */
    @Import(name="serverId", required=true)
    private Output<String> serverId;

    /**
     * @return [string] The ID of a server.
     * 
     */
    public Output<String> serverId() {
        return this.serverId;
    }

    private ServerBootDeviceSelectionArgs() {}

    private ServerBootDeviceSelectionArgs(ServerBootDeviceSelectionArgs $) {
        this.bootDeviceId = $.bootDeviceId;
        this.datacenterId = $.datacenterId;
        this.serverId = $.serverId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerBootDeviceSelectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerBootDeviceSelectionArgs $;

        public Builder() {
            $ = new ServerBootDeviceSelectionArgs();
        }

        public Builder(ServerBootDeviceSelectionArgs defaults) {
            $ = new ServerBootDeviceSelectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bootDeviceId [string] The ID of a bootable device such as a volume or an image data source. If this field is omitted from the configuration, the VM will be restarted with no primary boot device, and it will enter the PXE shell for network booting.
         * ***Note***: If the network booting process started by the PXE shell fails, the VM will still boot into the image of the attached storage as a fallback. This behavior imitates the &#34;Boot from Network&#34; option from [DCD](https://dcd.ionos.com/).
         * 
         * @return builder
         * 
         */
        public Builder bootDeviceId(@Nullable Output<String> bootDeviceId) {
            $.bootDeviceId = bootDeviceId;
            return this;
        }

        /**
         * @param bootDeviceId [string] The ID of a bootable device such as a volume or an image data source. If this field is omitted from the configuration, the VM will be restarted with no primary boot device, and it will enter the PXE shell for network booting.
         * ***Note***: If the network booting process started by the PXE shell fails, the VM will still boot into the image of the attached storage as a fallback. This behavior imitates the &#34;Boot from Network&#34; option from [DCD](https://dcd.ionos.com/).
         * 
         * @return builder
         * 
         */
        public Builder bootDeviceId(String bootDeviceId) {
            return bootDeviceId(Output.of(bootDeviceId));
        }

        /**
         * @param datacenterId [string] The ID of a Virtual Data Center.
         * 
         * @return builder
         * 
         */
        public Builder datacenterId(Output<String> datacenterId) {
            $.datacenterId = datacenterId;
            return this;
        }

        /**
         * @param datacenterId [string] The ID of a Virtual Data Center.
         * 
         * @return builder
         * 
         */
        public Builder datacenterId(String datacenterId) {
            return datacenterId(Output.of(datacenterId));
        }

        /**
         * @param serverId [string] The ID of a server.
         * 
         * @return builder
         * 
         */
        public Builder serverId(Output<String> serverId) {
            $.serverId = serverId;
            return this;
        }

        /**
         * @param serverId [string] The ID of a server.
         * 
         * @return builder
         * 
         */
        public Builder serverId(String serverId) {
            return serverId(Output.of(serverId));
        }

        public ServerBootDeviceSelectionArgs build() {
            if ($.datacenterId == null) {
                throw new MissingRequiredPropertyException("ServerBootDeviceSelectionArgs", "datacenterId");
            }
            if ($.serverId == null) {
                throw new MissingRequiredPropertyException("ServerBootDeviceSelectionArgs", "serverId");
            }
            return $;
        }
    }

}
