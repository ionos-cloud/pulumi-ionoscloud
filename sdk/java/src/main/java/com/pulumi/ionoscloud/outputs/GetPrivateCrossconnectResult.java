// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.outputs.GetPrivateCrossconnectConnectableDatacenter;
import com.pulumi.ionoscloud.outputs.GetPrivateCrossconnectPeer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPrivateCrossconnectResult {
    /**
     * @return Lists datacenters that can be joined to this cross connect
     * 
     */
    private List<GetPrivateCrossconnectConnectableDatacenter> connectableDatacenters;
    /**
     * @return Description of cross connect
     * 
     */
    private @Nullable String description;
    /**
     * @return The UUID of the connectable datacenter
     * 
     */
    private @Nullable String id;
    /**
     * @return The name of the connectable datacenter
     * 
     */
    private @Nullable String name;
    /**
     * @return Lists LAN&#39;s joined to this cross connect
     * 
     */
    private List<GetPrivateCrossconnectPeer> peers;

    private GetPrivateCrossconnectResult() {}
    /**
     * @return Lists datacenters that can be joined to this cross connect
     * 
     */
    public List<GetPrivateCrossconnectConnectableDatacenter> connectableDatacenters() {
        return this.connectableDatacenters;
    }
    /**
     * @return Description of cross connect
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The UUID of the connectable datacenter
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The name of the connectable datacenter
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Lists LAN&#39;s joined to this cross connect
     * 
     */
    public List<GetPrivateCrossconnectPeer> peers() {
        return this.peers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrivateCrossconnectResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetPrivateCrossconnectConnectableDatacenter> connectableDatacenters;
        private @Nullable String description;
        private @Nullable String id;
        private @Nullable String name;
        private List<GetPrivateCrossconnectPeer> peers;
        public Builder() {}
        public Builder(GetPrivateCrossconnectResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectableDatacenters = defaults.connectableDatacenters;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.peers = defaults.peers;
        }

        @CustomType.Setter
        public Builder connectableDatacenters(List<GetPrivateCrossconnectConnectableDatacenter> connectableDatacenters) {
            if (connectableDatacenters == null) {
              throw new MissingRequiredPropertyException("GetPrivateCrossconnectResult", "connectableDatacenters");
            }
            this.connectableDatacenters = connectableDatacenters;
            return this;
        }
        public Builder connectableDatacenters(GetPrivateCrossconnectConnectableDatacenter... connectableDatacenters) {
            return connectableDatacenters(List.of(connectableDatacenters));
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder peers(List<GetPrivateCrossconnectPeer> peers) {
            if (peers == null) {
              throw new MissingRequiredPropertyException("GetPrivateCrossconnectResult", "peers");
            }
            this.peers = peers;
            return this;
        }
        public Builder peers(GetPrivateCrossconnectPeer... peers) {
            return peers(List.of(peers));
        }
        public GetPrivateCrossconnectResult build() {
            final var _resultValue = new GetPrivateCrossconnectResult();
            _resultValue.connectableDatacenters = connectableDatacenters;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.peers = peers;
            return _resultValue;
        }
    }
}
