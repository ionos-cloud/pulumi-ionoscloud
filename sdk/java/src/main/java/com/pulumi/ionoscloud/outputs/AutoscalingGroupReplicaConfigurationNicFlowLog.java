// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutoscalingGroupReplicaConfigurationNicFlowLog {
    /**
     * @return [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
     * 
     */
    private String action;
    /**
     * @return [string] Specifies the S3 IONOS bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
     * 
     */
    private String bucket;
    /**
     * @return [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
     * 
     */
    private String direction;
    /**
     * @return The resource&#39;s unique identifier.
     * 
     */
    private @Nullable String id;
    /**
     * @return [string] Name for this replica volume.
     * 
     */
    private String name;

    private AutoscalingGroupReplicaConfigurationNicFlowLog() {}
    /**
     * @return [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return [string] Specifies the S3 IONOS bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
     * 
     */
    public String direction() {
        return this.direction;
    }
    /**
     * @return The resource&#39;s unique identifier.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return [string] Name for this replica volume.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoscalingGroupReplicaConfigurationNicFlowLog defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private String bucket;
        private String direction;
        private @Nullable String id;
        private String name;
        public Builder() {}
        public Builder(AutoscalingGroupReplicaConfigurationNicFlowLog defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.bucket = defaults.bucket;
    	      this.direction = defaults.direction;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("AutoscalingGroupReplicaConfigurationNicFlowLog", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("AutoscalingGroupReplicaConfigurationNicFlowLog", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder direction(String direction) {
            if (direction == null) {
              throw new MissingRequiredPropertyException("AutoscalingGroupReplicaConfigurationNicFlowLog", "direction");
            }
            this.direction = direction;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("AutoscalingGroupReplicaConfigurationNicFlowLog", "name");
            }
            this.name = name;
            return this;
        }
        public AutoscalingGroupReplicaConfigurationNicFlowLog build() {
            final var _resultValue = new AutoscalingGroupReplicaConfigurationNicFlowLog();
            _resultValue.action = action;
            _resultValue.bucket = bucket;
            _resultValue.direction = direction;
            _resultValue.id = id;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
