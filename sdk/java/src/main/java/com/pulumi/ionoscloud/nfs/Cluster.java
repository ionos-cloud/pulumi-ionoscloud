// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.nfs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.nfs.ClusterArgs;
import com.pulumi.ionoscloud.nfs.inputs.ClusterState;
import com.pulumi.ionoscloud.nfs.outputs.ClusterConnections;
import com.pulumi.ionoscloud.nfs.outputs.ClusterNfs;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Create clusters of Network File Storage (NFS) on IonosCloud.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ionoscloud.compute.Datacenter;
 * import com.pulumi.ionoscloud.compute.DatacenterArgs;
 * import com.pulumi.ionoscloud.compute.Lan;
 * import com.pulumi.ionoscloud.compute.LanArgs;
 * import com.pulumi.ionoscloud.nfs.Cluster;
 * import com.pulumi.ionoscloud.nfs.ClusterArgs;
 * import com.pulumi.ionoscloud.nfs.inputs.ClusterNfsArgs;
 * import com.pulumi.ionoscloud.nfs.inputs.ClusterConnectionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Basic example
 *         var nfsDc = new Datacenter("nfsDc", DatacenterArgs.builder()
 *             .name("NFS Datacenter")
 *             .location("de/txl")
 *             .description("Datacenter Description")
 *             .secAuthProtection(false)
 *             .build());
 * 
 *         var nfsLan = new Lan("nfsLan", LanArgs.builder()
 *             .datacenterId(nfsDc.id())
 *             .public_(false)
 *             .name("Lan for NFS")
 *             .build());
 * 
 *         var example = new Cluster("example", ClusterArgs.builder()
 *             .name("test")
 *             .location("de/txl")
 *             .size(2)
 *             .nfs(ClusterNfsArgs.builder()
 *                 .minVersion("4.2")
 *                 .build())
 *             .connections(ClusterConnectionsArgs.builder()
 *                 .datacenterId(nfsDc.id())
 *                 .ipAddress("192.168.100.10/24")
 *                 .lan(nfsLan.id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * A Network File Storage Cluster resource can be imported using its `location` and `resource id`:
 * 
 * ```sh
 * $ pulumi import ionoscloud:nfs/cluster:Cluster name location:uuid
 * ```
 * 
 */
@ResourceType(type="ionoscloud:nfs/cluster:Cluster")
public class Cluster extends com.pulumi.resources.CustomResource {
    /**
     * The network connections for the Network File Storage Cluster.
     * 
     */
    @Export(name="connections", refs={ClusterConnections.class}, tree="[0]")
    private Output<ClusterConnections> connections;

    /**
     * @return The network connections for the Network File Storage Cluster.
     * 
     */
    public Output<ClusterConnections> connections() {
        return this.connections;
    }
    /**
     * The location where the Network File Storage cluster is located. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
     * - `de/fra` - Frankfurt
     * - `de/txl` - Berlin
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> location;

    /**
     * @return The location where the Network File Storage cluster is located. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
     * - `de/fra` - Frankfurt
     * - `de/txl` - Berlin
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * The name of the Network File Storage cluster.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Network File Storage cluster.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="nfs", refs={ClusterNfs.class}, tree="[0]")
    private Output</* @Nullable */ ClusterNfs> nfs;

    public Output<Optional<ClusterNfs>> nfs() {
        return Codegen.optional(this.nfs);
    }
    /**
     * The size of the Network File Storage cluster in TiB. Note that the cluster size cannot be reduced after provisioning. This value determines the billing fees. Default is `2`. The minimum value is `2` and the maximum value is `42`.
     * 
     */
    @Export(name="size", refs={Integer.class}, tree="[0]")
    private Output<Integer> size;

    /**
     * @return The size of the Network File Storage cluster in TiB. Note that the cluster size cannot be reduced after provisioning. This value determines the billing fees. Default is `2`. The minimum value is `2` and the maximum value is `42`.
     * 
     */
    public Output<Integer> size() {
        return this.size;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Cluster(java.lang.String name) {
        this(name, ClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Cluster(java.lang.String name, ClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Cluster(java.lang.String name, ClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:nfs/cluster:Cluster", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Cluster(java.lang.String name, Output<java.lang.String> id, @Nullable ClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:nfs/cluster:Cluster", name, state, makeResourceOptions(options, id), false);
    }

    private static ClusterArgs makeArgs(ClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ClusterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Cluster get(java.lang.String name, Output<java.lang.String> id, @Nullable ClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Cluster(name, id, state, options);
    }
}
