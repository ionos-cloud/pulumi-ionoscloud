// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ionoscloud.LoggingPipelineArgs;
import com.pulumi.ionoscloud.Utilities;
import com.pulumi.ionoscloud.inputs.LoggingPipelineState;
import com.pulumi.ionoscloud.outputs.LoggingPipelineLog;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * In order to import a Logging pipeline, you can define an empty Logging pipeline resource in the plan:
 * 
 * hcl
 * 
 * resource &#34;ionoscloud_logging_pipeline&#34; &#34;example&#34; {
 * 
 * }
 * 
 * The resource can be imported using the `location` and `pipeline_id`, for example:
 * 
 * ```sh
 * $ pulumi import ionoscloud:index/loggingPipeline:LoggingPipeline example {location}:{pipeline_id}
 * ```
 * 
 */
@ResourceType(type="ionoscloud:index/loggingPipeline:LoggingPipeline")
public class LoggingPipeline extends com.pulumi.resources.CustomResource {
    /**
     * [string] The address of the client&#39;s grafana instance.
     * 
     */
    @Export(name="grafanaAddress", refs={String.class}, tree="[0]")
    private Output<String> grafanaAddress;

    /**
     * @return [string] The address of the client&#39;s grafana instance.
     * 
     */
    public Output<String> grafanaAddress() {
        return this.grafanaAddress;
    }
    /**
     * [string] The location of the Logging pipeline. Default: `de/txl` One of `de/fra`, `de/txl`, `gb/lhr`, `es/vit`, `fr/par`.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> location;

    /**
     * @return [string] The location of the Logging pipeline. Default: `de/txl` One of `de/fra`, `de/txl`, `gb/lhr`, `es/vit`, `fr/par`.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * [list] Pipeline logs, a list that contains elements with the following structure:
     * 
     */
    @Export(name="logs", refs={List.class,LoggingPipelineLog.class}, tree="[0,1]")
    private Output<List<LoggingPipelineLog>> logs;

    /**
     * @return [list] Pipeline logs, a list that contains elements with the following structure:
     * 
     */
    public Output<List<LoggingPipelineLog>> logs() {
        return this.logs;
    }
    /**
     * [string] The name of the Logging pipeline.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return [string] The name of the Logging pipeline.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LoggingPipeline(java.lang.String name) {
        this(name, LoggingPipelineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LoggingPipeline(java.lang.String name, LoggingPipelineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LoggingPipeline(java.lang.String name, LoggingPipelineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/loggingPipeline:LoggingPipeline", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private LoggingPipeline(java.lang.String name, Output<java.lang.String> id, @Nullable LoggingPipelineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ionoscloud:index/loggingPipeline:LoggingPipeline", name, state, makeResourceOptions(options, id), false);
    }

    private static LoggingPipelineArgs makeArgs(LoggingPipelineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? LoggingPipelineArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LoggingPipeline get(java.lang.String name, Output<java.lang.String> id, @Nullable LoggingPipelineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LoggingPipeline(name, id, state, options);
    }
}
