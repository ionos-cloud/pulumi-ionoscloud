// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRecordResult {
    /**
     * @return The content of the DNS Record.
     * 
     */
    private String content;
    /**
     * @return Indicates if the DNS Record is active or not.
     * 
     */
    private Boolean enabled;
    private String fqdn;
    /**
     * @return The UUID of the DNS Record.
     * 
     */
    private String id;
    /**
     * @return The name of the DNS Record.
     * 
     */
    private String name;
    private @Nullable Boolean partialMatch;
    /**
     * @return The priority for the DNS Record.
     * 
     */
    private Integer priority;
    /**
     * @return The time to live of the DNS Record.
     * 
     */
    private Integer ttl;
    /**
     * @return The type of the DNS Record.
     * 
     */
    private String type;
    private String zoneId;

    private GetRecordResult() {}
    /**
     * @return The content of the DNS Record.
     * 
     */
    public String content() {
        return this.content;
    }
    /**
     * @return Indicates if the DNS Record is active or not.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return The UUID of the DNS Record.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the DNS Record.
     * 
     */
    public String name() {
        return this.name;
    }
    public Optional<Boolean> partialMatch() {
        return Optional.ofNullable(this.partialMatch);
    }
    /**
     * @return The priority for the DNS Record.
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return The time to live of the DNS Record.
     * 
     */
    public Integer ttl() {
        return this.ttl;
    }
    /**
     * @return The type of the DNS Record.
     * 
     */
    public String type() {
        return this.type;
    }
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRecordResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String content;
        private Boolean enabled;
        private String fqdn;
        private String id;
        private String name;
        private @Nullable Boolean partialMatch;
        private Integer priority;
        private Integer ttl;
        private String type;
        private String zoneId;
        public Builder() {}
        public Builder(GetRecordResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.enabled = defaults.enabled;
    	      this.fqdn = defaults.fqdn;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.partialMatch = defaults.partialMatch;
    	      this.priority = defaults.priority;
    	      this.ttl = defaults.ttl;
    	      this.type = defaults.type;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder content(String content) {
            if (content == null) {
              throw new MissingRequiredPropertyException("GetRecordResult", "content");
            }
            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetRecordResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            if (fqdn == null) {
              throw new MissingRequiredPropertyException("GetRecordResult", "fqdn");
            }
            this.fqdn = fqdn;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRecordResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetRecordResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder partialMatch(@Nullable Boolean partialMatch) {

            this.partialMatch = partialMatch;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetRecordResult", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder ttl(Integer ttl) {
            if (ttl == null) {
              throw new MissingRequiredPropertyException("GetRecordResult", "ttl");
            }
            this.ttl = ttl;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetRecordResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetRecordResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetRecordResult build() {
            final var _resultValue = new GetRecordResult();
            _resultValue.content = content;
            _resultValue.enabled = enabled;
            _resultValue.fqdn = fqdn;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.partialMatch = partialMatch;
            _resultValue.priority = priority;
            _resultValue.ttl = ttl;
            _resultValue.type = type;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
