// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetApigatewayRouteUpstream {
    /**
     * @return The host of the upstream.
     * 
     */
    private String host;
    /**
     * @return The load balancer algorithm.
     * 
     */
    private String loadbalancer;
    /**
     * @return The port of the upstream.
     * 
     */
    private Integer port;
    /**
     * @return The target URL of the upstream.
     * 
     */
    private String scheme;
    /**
     * @return Weight with which to split traffic to the upstream.
     * 
     */
    private Integer weight;

    private GetApigatewayRouteUpstream() {}
    /**
     * @return The host of the upstream.
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return The load balancer algorithm.
     * 
     */
    public String loadbalancer() {
        return this.loadbalancer;
    }
    /**
     * @return The port of the upstream.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return The target URL of the upstream.
     * 
     */
    public String scheme() {
        return this.scheme;
    }
    /**
     * @return Weight with which to split traffic to the upstream.
     * 
     */
    public Integer weight() {
        return this.weight;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApigatewayRouteUpstream defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String host;
        private String loadbalancer;
        private Integer port;
        private String scheme;
        private Integer weight;
        public Builder() {}
        public Builder(GetApigatewayRouteUpstream defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.loadbalancer = defaults.loadbalancer;
    	      this.port = defaults.port;
    	      this.scheme = defaults.scheme;
    	      this.weight = defaults.weight;
        }

        @CustomType.Setter
        public Builder host(String host) {
            if (host == null) {
              throw new MissingRequiredPropertyException("GetApigatewayRouteUpstream", "host");
            }
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder loadbalancer(String loadbalancer) {
            if (loadbalancer == null) {
              throw new MissingRequiredPropertyException("GetApigatewayRouteUpstream", "loadbalancer");
            }
            this.loadbalancer = loadbalancer;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetApigatewayRouteUpstream", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder scheme(String scheme) {
            if (scheme == null) {
              throw new MissingRequiredPropertyException("GetApigatewayRouteUpstream", "scheme");
            }
            this.scheme = scheme;
            return this;
        }
        @CustomType.Setter
        public Builder weight(Integer weight) {
            if (weight == null) {
              throw new MissingRequiredPropertyException("GetApigatewayRouteUpstream", "weight");
            }
            this.weight = weight;
            return this;
        }
        public GetApigatewayRouteUpstream build() {
            final var _resultValue = new GetApigatewayRouteUpstream();
            _resultValue.host = host;
            _resultValue.loadbalancer = loadbalancer;
            _resultValue.port = port;
            _resultValue.scheme = scheme;
            _resultValue.weight = weight;
            return _resultValue;
        }
    }
}
