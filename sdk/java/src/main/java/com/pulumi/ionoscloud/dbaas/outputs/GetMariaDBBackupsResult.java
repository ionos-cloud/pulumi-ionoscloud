// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.dbaas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.dbaas.outputs.GetMariaDBBackupsBackup;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMariaDBBackupsResult {
    private String backupId;
    private List<GetMariaDBBackupsBackup> backups;
    /**
     * @return The unique ID of the cluster that was backed up.
     * 
     */
    private String clusterId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String location;

    private GetMariaDBBackupsResult() {}
    public String backupId() {
        return this.backupId;
    }
    public List<GetMariaDBBackupsBackup> backups() {
        return this.backups;
    }
    /**
     * @return The unique ID of the cluster that was backed up.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMariaDBBackupsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backupId;
        private List<GetMariaDBBackupsBackup> backups;
        private String clusterId;
        private String id;
        private @Nullable String location;
        public Builder() {}
        public Builder(GetMariaDBBackupsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupId = defaults.backupId;
    	      this.backups = defaults.backups;
    	      this.clusterId = defaults.clusterId;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
        }

        @CustomType.Setter
        public Builder backupId(String backupId) {
            if (backupId == null) {
              throw new MissingRequiredPropertyException("GetMariaDBBackupsResult", "backupId");
            }
            this.backupId = backupId;
            return this;
        }
        @CustomType.Setter
        public Builder backups(List<GetMariaDBBackupsBackup> backups) {
            if (backups == null) {
              throw new MissingRequiredPropertyException("GetMariaDBBackupsResult", "backups");
            }
            this.backups = backups;
            return this;
        }
        public Builder backups(GetMariaDBBackupsBackup... backups) {
            return backups(List.of(backups));
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetMariaDBBackupsResult", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMariaDBBackupsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {

            this.location = location;
            return this;
        }
        public GetMariaDBBackupsResult build() {
            final var _resultValue = new GetMariaDBBackupsResult();
            _resultValue.backupId = backupId;
            _resultValue.backups = backups;
            _resultValue.clusterId = clusterId;
            _resultValue.id = id;
            _resultValue.location = location;
            return _resultValue;
        }
    }
}
