// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VpnIpsecGatewayConnection {
    /**
     * @return [string] The datacenter to connect your VPN Gateway to.
     * 
     */
    private String datacenterId;
    /**
     * @return [string] Describes the private ipv4 subnet in your LAN that should be accessible by the
     * VPN Gateway. Note: this should be the subnet already assigned to the LAN
     * 
     */
    private String ipv4Cidr;
    /**
     * @return [string] Describes the ipv6 subnet in your LAN that should be accessible by the VPN
     * Gateway. **Note**: this should be the subnet already assigned to the LAN
     * 
     */
    private @Nullable String ipv6Cidr;
    /**
     * @return [string] The numeric LAN ID to connect your VPN Gateway to.
     * 
     */
    private String lanId;

    private VpnIpsecGatewayConnection() {}
    /**
     * @return [string] The datacenter to connect your VPN Gateway to.
     * 
     */
    public String datacenterId() {
        return this.datacenterId;
    }
    /**
     * @return [string] Describes the private ipv4 subnet in your LAN that should be accessible by the
     * VPN Gateway. Note: this should be the subnet already assigned to the LAN
     * 
     */
    public String ipv4Cidr() {
        return this.ipv4Cidr;
    }
    /**
     * @return [string] Describes the ipv6 subnet in your LAN that should be accessible by the VPN
     * Gateway. **Note**: this should be the subnet already assigned to the LAN
     * 
     */
    public Optional<String> ipv6Cidr() {
        return Optional.ofNullable(this.ipv6Cidr);
    }
    /**
     * @return [string] The numeric LAN ID to connect your VPN Gateway to.
     * 
     */
    public String lanId() {
        return this.lanId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpnIpsecGatewayConnection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String datacenterId;
        private String ipv4Cidr;
        private @Nullable String ipv6Cidr;
        private String lanId;
        public Builder() {}
        public Builder(VpnIpsecGatewayConnection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datacenterId = defaults.datacenterId;
    	      this.ipv4Cidr = defaults.ipv4Cidr;
    	      this.ipv6Cidr = defaults.ipv6Cidr;
    	      this.lanId = defaults.lanId;
        }

        @CustomType.Setter
        public Builder datacenterId(String datacenterId) {
            if (datacenterId == null) {
              throw new MissingRequiredPropertyException("VpnIpsecGatewayConnection", "datacenterId");
            }
            this.datacenterId = datacenterId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4Cidr(String ipv4Cidr) {
            if (ipv4Cidr == null) {
              throw new MissingRequiredPropertyException("VpnIpsecGatewayConnection", "ipv4Cidr");
            }
            this.ipv4Cidr = ipv4Cidr;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Cidr(@Nullable String ipv6Cidr) {

            this.ipv6Cidr = ipv6Cidr;
            return this;
        }
        @CustomType.Setter
        public Builder lanId(String lanId) {
            if (lanId == null) {
              throw new MissingRequiredPropertyException("VpnIpsecGatewayConnection", "lanId");
            }
            this.lanId = lanId;
            return this;
        }
        public VpnIpsecGatewayConnection build() {
            final var _resultValue = new VpnIpsecGatewayConnection();
            _resultValue.datacenterId = datacenterId;
            _resultValue.ipv4Cidr = ipv4Cidr;
            _resultValue.ipv6Cidr = ipv6Cidr;
            _resultValue.lanId = lanId;
            return _resultValue;
        }
    }
}
