// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CrossconnectPeer {
    /**
     * @return The id of the cross-connected datacenter
     * 
     */
    private @Nullable String datacenterId;
    /**
     * @return The name of the cross-connected datacenter
     * 
     */
    private @Nullable String datacenterName;
    /**
     * @return The id of the cross-connected LAN
     * 
     */
    private @Nullable String lanId;
    /**
     * @return The name of the cross-connected LAN
     * 
     */
    private @Nullable String lanName;
    /**
     * @return The location of the cross-connected datacenter
     * 
     */
    private @Nullable String location;

    private CrossconnectPeer() {}
    /**
     * @return The id of the cross-connected datacenter
     * 
     */
    public Optional<String> datacenterId() {
        return Optional.ofNullable(this.datacenterId);
    }
    /**
     * @return The name of the cross-connected datacenter
     * 
     */
    public Optional<String> datacenterName() {
        return Optional.ofNullable(this.datacenterName);
    }
    /**
     * @return The id of the cross-connected LAN
     * 
     */
    public Optional<String> lanId() {
        return Optional.ofNullable(this.lanId);
    }
    /**
     * @return The name of the cross-connected LAN
     * 
     */
    public Optional<String> lanName() {
        return Optional.ofNullable(this.lanName);
    }
    /**
     * @return The location of the cross-connected datacenter
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CrossconnectPeer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String datacenterId;
        private @Nullable String datacenterName;
        private @Nullable String lanId;
        private @Nullable String lanName;
        private @Nullable String location;
        public Builder() {}
        public Builder(CrossconnectPeer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datacenterId = defaults.datacenterId;
    	      this.datacenterName = defaults.datacenterName;
    	      this.lanId = defaults.lanId;
    	      this.lanName = defaults.lanName;
    	      this.location = defaults.location;
        }

        @CustomType.Setter
        public Builder datacenterId(@Nullable String datacenterId) {

            this.datacenterId = datacenterId;
            return this;
        }
        @CustomType.Setter
        public Builder datacenterName(@Nullable String datacenterName) {

            this.datacenterName = datacenterName;
            return this;
        }
        @CustomType.Setter
        public Builder lanId(@Nullable String lanId) {

            this.lanId = lanId;
            return this;
        }
        @CustomType.Setter
        public Builder lanName(@Nullable String lanName) {

            this.lanName = lanName;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {

            this.location = location;
            return this;
        }
        public CrossconnectPeer build() {
            final var _resultValue = new CrossconnectPeer();
            _resultValue.datacenterId = datacenterId;
            _resultValue.datacenterName = datacenterName;
            _resultValue.lanId = lanId;
            _resultValue.lanName = lanName;
            _resultValue.location = location;
            return _resultValue;
        }
    }
}
