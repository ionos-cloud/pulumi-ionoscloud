// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.outputs.GetDatacenterCpuArchitecture;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDatacenterResult {
    /**
     * @return Array of features and CPU families available in a location
     * 
     */
    private List<GetDatacenterCpuArchitecture> cpuArchitectures;
    /**
     * @return Description for the Virtual Data Center
     * 
     */
    private String description;
    /**
     * @return List of features supported by the location this data center is part of
     * 
     */
    private List<String> features;
    /**
     * @return UUID of the Virtual Data Center
     * 
     */
    private @Nullable String id;
    private String ipv6CidrBlock;
    /**
     * @return The regional location where the Virtual Data Center will be created
     * 
     */
    private @Nullable String location;
    /**
     * @return The name of the Virtual Data Center
     * 
     */
    private @Nullable String name;
    /**
     * @return Boolean value representing if the data center requires extra protection e.g. two factor protection
     * 
     */
    private Boolean secAuthProtection;
    /**
     * @return The version of that Data Center. Gets incremented with every change
     * 
     */
    private Integer version;

    private GetDatacenterResult() {}
    /**
     * @return Array of features and CPU families available in a location
     * 
     */
    public List<GetDatacenterCpuArchitecture> cpuArchitectures() {
        return this.cpuArchitectures;
    }
    /**
     * @return Description for the Virtual Data Center
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return List of features supported by the location this data center is part of
     * 
     */
    public List<String> features() {
        return this.features;
    }
    /**
     * @return UUID of the Virtual Data Center
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String ipv6CidrBlock() {
        return this.ipv6CidrBlock;
    }
    /**
     * @return The regional location where the Virtual Data Center will be created
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of the Virtual Data Center
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Boolean value representing if the data center requires extra protection e.g. two factor protection
     * 
     */
    public Boolean secAuthProtection() {
        return this.secAuthProtection;
    }
    /**
     * @return The version of that Data Center. Gets incremented with every change
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatacenterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDatacenterCpuArchitecture> cpuArchitectures;
        private String description;
        private List<String> features;
        private @Nullable String id;
        private String ipv6CidrBlock;
        private @Nullable String location;
        private @Nullable String name;
        private Boolean secAuthProtection;
        private Integer version;
        public Builder() {}
        public Builder(GetDatacenterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuArchitectures = defaults.cpuArchitectures;
    	      this.description = defaults.description;
    	      this.features = defaults.features;
    	      this.id = defaults.id;
    	      this.ipv6CidrBlock = defaults.ipv6CidrBlock;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.secAuthProtection = defaults.secAuthProtection;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder cpuArchitectures(List<GetDatacenterCpuArchitecture> cpuArchitectures) {
            if (cpuArchitectures == null) {
              throw new MissingRequiredPropertyException("GetDatacenterResult", "cpuArchitectures");
            }
            this.cpuArchitectures = cpuArchitectures;
            return this;
        }
        public Builder cpuArchitectures(GetDatacenterCpuArchitecture... cpuArchitectures) {
            return cpuArchitectures(List.of(cpuArchitectures));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetDatacenterResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder features(List<String> features) {
            if (features == null) {
              throw new MissingRequiredPropertyException("GetDatacenterResult", "features");
            }
            this.features = features;
            return this;
        }
        public Builder features(String... features) {
            return features(List.of(features));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6CidrBlock(String ipv6CidrBlock) {
            if (ipv6CidrBlock == null) {
              throw new MissingRequiredPropertyException("GetDatacenterResult", "ipv6CidrBlock");
            }
            this.ipv6CidrBlock = ipv6CidrBlock;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {

            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder secAuthProtection(Boolean secAuthProtection) {
            if (secAuthProtection == null) {
              throw new MissingRequiredPropertyException("GetDatacenterResult", "secAuthProtection");
            }
            this.secAuthProtection = secAuthProtection;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetDatacenterResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetDatacenterResult build() {
            final var _resultValue = new GetDatacenterResult();
            _resultValue.cpuArchitectures = cpuArchitectures;
            _resultValue.description = description;
            _resultValue.features = features;
            _resultValue.id = id;
            _resultValue.ipv6CidrBlock = ipv6CidrBlock;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.secAuthProtection = secAuthProtection;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
