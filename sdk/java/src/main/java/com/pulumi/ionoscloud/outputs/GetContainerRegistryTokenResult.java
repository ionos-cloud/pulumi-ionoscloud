// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.outputs.GetContainerRegistryTokenCredential;
import com.pulumi.ionoscloud.outputs.GetContainerRegistryTokenScope;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetContainerRegistryTokenResult {
    private List<GetContainerRegistryTokenCredential> credentials;
    private String expiryDate;
    /**
     * @return Id of the container registry token.
     * 
     */
    private @Nullable String id;
    private @Nullable String name;
    private @Nullable Boolean partialMatch;
    private String registryId;
    private List<GetContainerRegistryTokenScope> scopes;
    private String status;

    private GetContainerRegistryTokenResult() {}
    public List<GetContainerRegistryTokenCredential> credentials() {
        return this.credentials;
    }
    public String expiryDate() {
        return this.expiryDate;
    }
    /**
     * @return Id of the container registry token.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<Boolean> partialMatch() {
        return Optional.ofNullable(this.partialMatch);
    }
    public String registryId() {
        return this.registryId;
    }
    public List<GetContainerRegistryTokenScope> scopes() {
        return this.scopes;
    }
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainerRegistryTokenResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetContainerRegistryTokenCredential> credentials;
        private String expiryDate;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable Boolean partialMatch;
        private String registryId;
        private List<GetContainerRegistryTokenScope> scopes;
        private String status;
        public Builder() {}
        public Builder(GetContainerRegistryTokenResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentials = defaults.credentials;
    	      this.expiryDate = defaults.expiryDate;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.partialMatch = defaults.partialMatch;
    	      this.registryId = defaults.registryId;
    	      this.scopes = defaults.scopes;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder credentials(List<GetContainerRegistryTokenCredential> credentials) {
            if (credentials == null) {
              throw new MissingRequiredPropertyException("GetContainerRegistryTokenResult", "credentials");
            }
            this.credentials = credentials;
            return this;
        }
        public Builder credentials(GetContainerRegistryTokenCredential... credentials) {
            return credentials(List.of(credentials));
        }
        @CustomType.Setter
        public Builder expiryDate(String expiryDate) {
            if (expiryDate == null) {
              throw new MissingRequiredPropertyException("GetContainerRegistryTokenResult", "expiryDate");
            }
            this.expiryDate = expiryDate;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder partialMatch(@Nullable Boolean partialMatch) {

            this.partialMatch = partialMatch;
            return this;
        }
        @CustomType.Setter
        public Builder registryId(String registryId) {
            if (registryId == null) {
              throw new MissingRequiredPropertyException("GetContainerRegistryTokenResult", "registryId");
            }
            this.registryId = registryId;
            return this;
        }
        @CustomType.Setter
        public Builder scopes(List<GetContainerRegistryTokenScope> scopes) {
            if (scopes == null) {
              throw new MissingRequiredPropertyException("GetContainerRegistryTokenResult", "scopes");
            }
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(GetContainerRegistryTokenScope... scopes) {
            return scopes(List.of(scopes));
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetContainerRegistryTokenResult", "status");
            }
            this.status = status;
            return this;
        }
        public GetContainerRegistryTokenResult build() {
            final var _resultValue = new GetContainerRegistryTokenResult();
            _resultValue.credentials = credentials;
            _resultValue.expiryDate = expiryDate;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.partialMatch = partialMatch;
            _resultValue.registryId = registryId;
            _resultValue.scopes = scopes;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
