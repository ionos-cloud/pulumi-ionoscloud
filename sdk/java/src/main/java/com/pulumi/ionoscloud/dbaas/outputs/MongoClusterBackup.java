// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.dbaas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MongoClusterBackup {
    /**
     * @return [string] - The location where the cluster backups will be stored. If not set, the backup is stored in the nearest location of the cluster. Possible values are de, eu-south-2, or eu-central-2.
     * 
     */
    private @Nullable String location;
    /**
     * @return Number of hours in the past for which a point-in-time snapshot can be created.
     * 
     */
    private @Nullable Integer pointInTimeWindowHours;
    /**
     * @return Number of hours between snapshots.
     * 
     */
    private @Nullable Integer snapshotIntervalHours;

    private MongoClusterBackup() {}
    /**
     * @return [string] - The location where the cluster backups will be stored. If not set, the backup is stored in the nearest location of the cluster. Possible values are de, eu-south-2, or eu-central-2.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Number of hours in the past for which a point-in-time snapshot can be created.
     * 
     */
    public Optional<Integer> pointInTimeWindowHours() {
        return Optional.ofNullable(this.pointInTimeWindowHours);
    }
    /**
     * @return Number of hours between snapshots.
     * 
     */
    public Optional<Integer> snapshotIntervalHours() {
        return Optional.ofNullable(this.snapshotIntervalHours);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MongoClusterBackup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String location;
        private @Nullable Integer pointInTimeWindowHours;
        private @Nullable Integer snapshotIntervalHours;
        public Builder() {}
        public Builder(MongoClusterBackup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.location = defaults.location;
    	      this.pointInTimeWindowHours = defaults.pointInTimeWindowHours;
    	      this.snapshotIntervalHours = defaults.snapshotIntervalHours;
        }

        @CustomType.Setter
        public Builder location(@Nullable String location) {

            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder pointInTimeWindowHours(@Nullable Integer pointInTimeWindowHours) {

            this.pointInTimeWindowHours = pointInTimeWindowHours;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotIntervalHours(@Nullable Integer snapshotIntervalHours) {

            this.snapshotIntervalHours = snapshotIntervalHours;
            return this;
        }
        public MongoClusterBackup build() {
            final var _resultValue = new MongoClusterBackup();
            _resultValue.location = location;
            _resultValue.pointInTimeWindowHours = pointInTimeWindowHours;
            _resultValue.snapshotIntervalHours = snapshotIntervalHours;
            return _resultValue;
        }
    }
}
