// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.cert.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAutoCertificateResult {
    /**
     * @return [string] The common name (DNS) of the certificate to issue. The common name needs to be part of a zone in IONOS Cloud DNS.
     * 
     */
    private String commonName;
    private String id;
    /**
     * @return [string] The key algorithm used to generate the certificate.
     * 
     */
    private String keyAlgorithm;
    /**
     * @return [string] The ID of the last certificate that was issued.
     * 
     */
    private String lastIssuedCertificateId;
    private String location;
    private String name;
    private String providerId;
    /**
     * @return [list][string] Optional additional names to be added to the issued certificate. The additional names needs to be part of a zone in IONOS Cloud DNS.
     * 
     */
    private List<String> subjectAlternativeNames;

    private GetAutoCertificateResult() {}
    /**
     * @return [string] The common name (DNS) of the certificate to issue. The common name needs to be part of a zone in IONOS Cloud DNS.
     * 
     */
    public String commonName() {
        return this.commonName;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return [string] The key algorithm used to generate the certificate.
     * 
     */
    public String keyAlgorithm() {
        return this.keyAlgorithm;
    }
    /**
     * @return [string] The ID of the last certificate that was issued.
     * 
     */
    public String lastIssuedCertificateId() {
        return this.lastIssuedCertificateId;
    }
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    public String providerId() {
        return this.providerId;
    }
    /**
     * @return [list][string] Optional additional names to be added to the issued certificate. The additional names needs to be part of a zone in IONOS Cloud DNS.
     * 
     */
    public List<String> subjectAlternativeNames() {
        return this.subjectAlternativeNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutoCertificateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String commonName;
        private String id;
        private String keyAlgorithm;
        private String lastIssuedCertificateId;
        private String location;
        private String name;
        private String providerId;
        private List<String> subjectAlternativeNames;
        public Builder() {}
        public Builder(GetAutoCertificateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commonName = defaults.commonName;
    	      this.id = defaults.id;
    	      this.keyAlgorithm = defaults.keyAlgorithm;
    	      this.lastIssuedCertificateId = defaults.lastIssuedCertificateId;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.providerId = defaults.providerId;
    	      this.subjectAlternativeNames = defaults.subjectAlternativeNames;
        }

        @CustomType.Setter
        public Builder commonName(String commonName) {
            if (commonName == null) {
              throw new MissingRequiredPropertyException("GetAutoCertificateResult", "commonName");
            }
            this.commonName = commonName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutoCertificateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder keyAlgorithm(String keyAlgorithm) {
            if (keyAlgorithm == null) {
              throw new MissingRequiredPropertyException("GetAutoCertificateResult", "keyAlgorithm");
            }
            this.keyAlgorithm = keyAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder lastIssuedCertificateId(String lastIssuedCertificateId) {
            if (lastIssuedCertificateId == null) {
              throw new MissingRequiredPropertyException("GetAutoCertificateResult", "lastIssuedCertificateId");
            }
            this.lastIssuedCertificateId = lastIssuedCertificateId;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetAutoCertificateResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAutoCertificateResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder providerId(String providerId) {
            if (providerId == null) {
              throw new MissingRequiredPropertyException("GetAutoCertificateResult", "providerId");
            }
            this.providerId = providerId;
            return this;
        }
        @CustomType.Setter
        public Builder subjectAlternativeNames(List<String> subjectAlternativeNames) {
            if (subjectAlternativeNames == null) {
              throw new MissingRequiredPropertyException("GetAutoCertificateResult", "subjectAlternativeNames");
            }
            this.subjectAlternativeNames = subjectAlternativeNames;
            return this;
        }
        public Builder subjectAlternativeNames(String... subjectAlternativeNames) {
            return subjectAlternativeNames(List.of(subjectAlternativeNames));
        }
        public GetAutoCertificateResult build() {
            final var _resultValue = new GetAutoCertificateResult();
            _resultValue.commonName = commonName;
            _resultValue.id = id;
            _resultValue.keyAlgorithm = keyAlgorithm;
            _resultValue.lastIssuedCertificateId = lastIssuedCertificateId;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.providerId = providerId;
            _resultValue.subjectAlternativeNames = subjectAlternativeNames;
            return _resultValue;
        }
    }
}
