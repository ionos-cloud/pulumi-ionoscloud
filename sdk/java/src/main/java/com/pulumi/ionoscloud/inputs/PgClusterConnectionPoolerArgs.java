// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class PgClusterConnectionPoolerArgs extends com.pulumi.resources.ResourceArgs {

    public static final PgClusterConnectionPoolerArgs Empty = new PgClusterConnectionPoolerArgs();

    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Represents different modes of connection pooling for the connection pooler
     * 
     */
    @Import(name="poolMode", required=true)
    private Output<String> poolMode;

    /**
     * @return Represents different modes of connection pooling for the connection pooler
     * 
     */
    public Output<String> poolMode() {
        return this.poolMode;
    }

    private PgClusterConnectionPoolerArgs() {}

    private PgClusterConnectionPoolerArgs(PgClusterConnectionPoolerArgs $) {
        this.enabled = $.enabled;
        this.poolMode = $.poolMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PgClusterConnectionPoolerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PgClusterConnectionPoolerArgs $;

        public Builder() {
            $ = new PgClusterConnectionPoolerArgs();
        }

        public Builder(PgClusterConnectionPoolerArgs defaults) {
            $ = new PgClusterConnectionPoolerArgs(Objects.requireNonNull(defaults));
        }

        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param poolMode Represents different modes of connection pooling for the connection pooler
         * 
         * @return builder
         * 
         */
        public Builder poolMode(Output<String> poolMode) {
            $.poolMode = poolMode;
            return this;
        }

        /**
         * @param poolMode Represents different modes of connection pooling for the connection pooler
         * 
         * @return builder
         * 
         */
        public Builder poolMode(String poolMode) {
            return poolMode(Output.of(poolMode));
        }

        public PgClusterConnectionPoolerArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("PgClusterConnectionPoolerArgs", "enabled");
            }
            if ($.poolMode == null) {
                throw new MissingRequiredPropertyException("PgClusterConnectionPoolerArgs", "poolMode");
            }
            return $;
        }
    }

}
