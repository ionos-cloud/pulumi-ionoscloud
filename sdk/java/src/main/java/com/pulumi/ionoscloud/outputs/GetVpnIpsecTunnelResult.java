// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.outputs.GetVpnIpsecTunnelAuth;
import com.pulumi.ionoscloud.outputs.GetVpnIpsecTunnelEsp;
import com.pulumi.ionoscloud.outputs.GetVpnIpsecTunnelIke;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVpnIpsecTunnelResult {
    private List<GetVpnIpsecTunnelAuth> auths;
    private List<String> cloudNetworkCidrs;
    private String description;
    private List<GetVpnIpsecTunnelEsp> esps;
    private String gatewayId;
    private String id;
    private List<GetVpnIpsecTunnelIke> ikes;
    private String location;
    private String name;
    private List<String> peerNetworkCidrs;
    private String remoteHost;

    private GetVpnIpsecTunnelResult() {}
    public List<GetVpnIpsecTunnelAuth> auths() {
        return this.auths;
    }
    public List<String> cloudNetworkCidrs() {
        return this.cloudNetworkCidrs;
    }
    public String description() {
        return this.description;
    }
    public List<GetVpnIpsecTunnelEsp> esps() {
        return this.esps;
    }
    public String gatewayId() {
        return this.gatewayId;
    }
    public String id() {
        return this.id;
    }
    public List<GetVpnIpsecTunnelIke> ikes() {
        return this.ikes;
    }
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    public List<String> peerNetworkCidrs() {
        return this.peerNetworkCidrs;
    }
    public String remoteHost() {
        return this.remoteHost;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpnIpsecTunnelResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetVpnIpsecTunnelAuth> auths;
        private List<String> cloudNetworkCidrs;
        private String description;
        private List<GetVpnIpsecTunnelEsp> esps;
        private String gatewayId;
        private String id;
        private List<GetVpnIpsecTunnelIke> ikes;
        private String location;
        private String name;
        private List<String> peerNetworkCidrs;
        private String remoteHost;
        public Builder() {}
        public Builder(GetVpnIpsecTunnelResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auths = defaults.auths;
    	      this.cloudNetworkCidrs = defaults.cloudNetworkCidrs;
    	      this.description = defaults.description;
    	      this.esps = defaults.esps;
    	      this.gatewayId = defaults.gatewayId;
    	      this.id = defaults.id;
    	      this.ikes = defaults.ikes;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.peerNetworkCidrs = defaults.peerNetworkCidrs;
    	      this.remoteHost = defaults.remoteHost;
        }

        @CustomType.Setter
        public Builder auths(List<GetVpnIpsecTunnelAuth> auths) {
            if (auths == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecTunnelResult", "auths");
            }
            this.auths = auths;
            return this;
        }
        public Builder auths(GetVpnIpsecTunnelAuth... auths) {
            return auths(List.of(auths));
        }
        @CustomType.Setter
        public Builder cloudNetworkCidrs(List<String> cloudNetworkCidrs) {
            if (cloudNetworkCidrs == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecTunnelResult", "cloudNetworkCidrs");
            }
            this.cloudNetworkCidrs = cloudNetworkCidrs;
            return this;
        }
        public Builder cloudNetworkCidrs(String... cloudNetworkCidrs) {
            return cloudNetworkCidrs(List.of(cloudNetworkCidrs));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecTunnelResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder esps(List<GetVpnIpsecTunnelEsp> esps) {
            if (esps == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecTunnelResult", "esps");
            }
            this.esps = esps;
            return this;
        }
        public Builder esps(GetVpnIpsecTunnelEsp... esps) {
            return esps(List.of(esps));
        }
        @CustomType.Setter
        public Builder gatewayId(String gatewayId) {
            if (gatewayId == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecTunnelResult", "gatewayId");
            }
            this.gatewayId = gatewayId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecTunnelResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ikes(List<GetVpnIpsecTunnelIke> ikes) {
            if (ikes == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecTunnelResult", "ikes");
            }
            this.ikes = ikes;
            return this;
        }
        public Builder ikes(GetVpnIpsecTunnelIke... ikes) {
            return ikes(List.of(ikes));
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecTunnelResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecTunnelResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder peerNetworkCidrs(List<String> peerNetworkCidrs) {
            if (peerNetworkCidrs == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecTunnelResult", "peerNetworkCidrs");
            }
            this.peerNetworkCidrs = peerNetworkCidrs;
            return this;
        }
        public Builder peerNetworkCidrs(String... peerNetworkCidrs) {
            return peerNetworkCidrs(List.of(peerNetworkCidrs));
        }
        @CustomType.Setter
        public Builder remoteHost(String remoteHost) {
            if (remoteHost == null) {
              throw new MissingRequiredPropertyException("GetVpnIpsecTunnelResult", "remoteHost");
            }
            this.remoteHost = remoteHost;
            return this;
        }
        public GetVpnIpsecTunnelResult build() {
            final var _resultValue = new GetVpnIpsecTunnelResult();
            _resultValue.auths = auths;
            _resultValue.cloudNetworkCidrs = cloudNetworkCidrs;
            _resultValue.description = description;
            _resultValue.esps = esps;
            _resultValue.gatewayId = gatewayId;
            _resultValue.id = id;
            _resultValue.ikes = ikes;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.peerNetworkCidrs = peerNetworkCidrs;
            _resultValue.remoteHost = remoteHost;
            return _resultValue;
        }
    }
}
