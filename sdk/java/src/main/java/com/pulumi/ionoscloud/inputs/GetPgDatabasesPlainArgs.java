// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPgDatabasesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPgDatabasesPlainArgs Empty = new GetPgDatabasesPlainArgs();

    @Import(name="clusterId", required=true)
    private String clusterId;

    public String clusterId() {
        return this.clusterId;
    }

    @Import(name="owner")
    private @Nullable String owner;

    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }

    private GetPgDatabasesPlainArgs() {}

    private GetPgDatabasesPlainArgs(GetPgDatabasesPlainArgs $) {
        this.clusterId = $.clusterId;
        this.owner = $.owner;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPgDatabasesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPgDatabasesPlainArgs $;

        public Builder() {
            $ = new GetPgDatabasesPlainArgs();
        }

        public Builder(GetPgDatabasesPlainArgs defaults) {
            $ = new GetPgDatabasesPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder clusterId(String clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        public Builder owner(@Nullable String owner) {
            $.owner = owner;
            return this;
        }

        public GetPgDatabasesPlainArgs build() {
            if ($.clusterId == null) {
                throw new MissingRequiredPropertyException("GetPgDatabasesPlainArgs", "clusterId");
            }
            return $;
        }
    }

}
