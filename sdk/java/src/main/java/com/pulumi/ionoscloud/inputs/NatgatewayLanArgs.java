// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NatgatewayLanArgs extends com.pulumi.resources.ResourceArgs {

    public static final NatgatewayLanArgs Empty = new NatgatewayLanArgs();

    /**
     * [list] Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN.
     * 
     */
    @Import(name="gatewayIps")
    private @Nullable Output<List<String>> gatewayIps;

    /**
     * @return [list] Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN.
     * 
     */
    public Optional<Output<List<String>>> gatewayIps() {
        return Optional.ofNullable(this.gatewayIps);
    }

    /**
     * [int] Id for the LAN connected to the NAT gateway.
     * 
     */
    @Import(name="id", required=true)
    private Output<Integer> id;

    /**
     * @return [int] Id for the LAN connected to the NAT gateway.
     * 
     */
    public Output<Integer> id() {
        return this.id;
    }

    private NatgatewayLanArgs() {}

    private NatgatewayLanArgs(NatgatewayLanArgs $) {
        this.gatewayIps = $.gatewayIps;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NatgatewayLanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NatgatewayLanArgs $;

        public Builder() {
            $ = new NatgatewayLanArgs();
        }

        public Builder(NatgatewayLanArgs defaults) {
            $ = new NatgatewayLanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gatewayIps [list] Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN.
         * 
         * @return builder
         * 
         */
        public Builder gatewayIps(@Nullable Output<List<String>> gatewayIps) {
            $.gatewayIps = gatewayIps;
            return this;
        }

        /**
         * @param gatewayIps [list] Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN.
         * 
         * @return builder
         * 
         */
        public Builder gatewayIps(List<String> gatewayIps) {
            return gatewayIps(Output.of(gatewayIps));
        }

        /**
         * @param gatewayIps [list] Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN.
         * 
         * @return builder
         * 
         */
        public Builder gatewayIps(String... gatewayIps) {
            return gatewayIps(List.of(gatewayIps));
        }

        /**
         * @param id [int] Id for the LAN connected to the NAT gateway.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<Integer> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id [int] Id for the LAN connected to the NAT gateway.
         * 
         * @return builder
         * 
         */
        public Builder id(Integer id) {
            return id(Output.of(id));
        }

        public NatgatewayLanArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("NatgatewayLanArgs", "id");
            }
            return $;
        }
    }

}
