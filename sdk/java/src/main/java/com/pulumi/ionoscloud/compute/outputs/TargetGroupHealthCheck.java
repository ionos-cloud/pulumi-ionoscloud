// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TargetGroupHealthCheck {
    /**
     * @return [int] The interval in milliseconds between consecutive health checks; default is 2000.
     * 
     */
    private @Nullable Integer checkInterval;
    /**
     * @return [int] The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with &#39;Check Interval&#39; set, the lesser of the two  values is used once the TCP connection is established.
     * 
     */
    private @Nullable Integer checkTimeout;
    /**
     * @return [int] The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
     * 
     */
    private @Nullable Integer retries;

    private TargetGroupHealthCheck() {}
    /**
     * @return [int] The interval in milliseconds between consecutive health checks; default is 2000.
     * 
     */
    public Optional<Integer> checkInterval() {
        return Optional.ofNullable(this.checkInterval);
    }
    /**
     * @return [int] The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with &#39;Check Interval&#39; set, the lesser of the two  values is used once the TCP connection is established.
     * 
     */
    public Optional<Integer> checkTimeout() {
        return Optional.ofNullable(this.checkTimeout);
    }
    /**
     * @return [int] The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
     * 
     */
    public Optional<Integer> retries() {
        return Optional.ofNullable(this.retries);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetGroupHealthCheck defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer checkInterval;
        private @Nullable Integer checkTimeout;
        private @Nullable Integer retries;
        public Builder() {}
        public Builder(TargetGroupHealthCheck defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checkInterval = defaults.checkInterval;
    	      this.checkTimeout = defaults.checkTimeout;
    	      this.retries = defaults.retries;
        }

        @CustomType.Setter
        public Builder checkInterval(@Nullable Integer checkInterval) {

            this.checkInterval = checkInterval;
            return this;
        }
        @CustomType.Setter
        public Builder checkTimeout(@Nullable Integer checkTimeout) {

            this.checkTimeout = checkTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder retries(@Nullable Integer retries) {

            this.retries = retries;
            return this;
        }
        public TargetGroupHealthCheck build() {
            final var _resultValue = new TargetGroupHealthCheck();
            _resultValue.checkInterval = checkInterval;
            _resultValue.checkTimeout = checkTimeout;
            _resultValue.retries = retries;
            return _resultValue;
        }
    }
}
