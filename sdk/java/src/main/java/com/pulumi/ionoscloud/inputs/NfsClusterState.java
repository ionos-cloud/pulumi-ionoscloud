// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.ionoscloud.inputs.NfsClusterConnectionsArgs;
import com.pulumi.ionoscloud.inputs.NfsClusterNfsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NfsClusterState extends com.pulumi.resources.ResourceArgs {

    public static final NfsClusterState Empty = new NfsClusterState();

    /**
     * The network connections for the Network File Storage Cluster.
     * 
     */
    @Import(name="connections")
    private @Nullable Output<NfsClusterConnectionsArgs> connections;

    /**
     * @return The network connections for the Network File Storage Cluster.
     * 
     */
    public Optional<Output<NfsClusterConnectionsArgs>> connections() {
        return Optional.ofNullable(this.connections);
    }

    /**
     * The location where the Network File Storage cluster is located.
     * - `de/fra` - Frankfurt
     * - `de/txl` - Berlin
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location where the Network File Storage cluster is located.
     * - `de/fra` - Frankfurt
     * - `de/txl` - Berlin
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the Network File Storage cluster.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Network File Storage cluster.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="nfs")
    private @Nullable Output<NfsClusterNfsArgs> nfs;

    public Optional<Output<NfsClusterNfsArgs>> nfs() {
        return Optional.ofNullable(this.nfs);
    }

    /**
     * The size of the Network File Storage cluster in TiB. Note that the cluster size cannot be reduced after provisioning. This value determines the billing fees. Default is `2`. The minimum value is `2` and the maximum value is `42`.
     * 
     */
    @Import(name="size")
    private @Nullable Output<Integer> size;

    /**
     * @return The size of the Network File Storage cluster in TiB. Note that the cluster size cannot be reduced after provisioning. This value determines the billing fees. Default is `2`. The minimum value is `2` and the maximum value is `42`.
     * 
     */
    public Optional<Output<Integer>> size() {
        return Optional.ofNullable(this.size);
    }

    private NfsClusterState() {}

    private NfsClusterState(NfsClusterState $) {
        this.connections = $.connections;
        this.location = $.location;
        this.name = $.name;
        this.nfs = $.nfs;
        this.size = $.size;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NfsClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NfsClusterState $;

        public Builder() {
            $ = new NfsClusterState();
        }

        public Builder(NfsClusterState defaults) {
            $ = new NfsClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param connections The network connections for the Network File Storage Cluster.
         * 
         * @return builder
         * 
         */
        public Builder connections(@Nullable Output<NfsClusterConnectionsArgs> connections) {
            $.connections = connections;
            return this;
        }

        /**
         * @param connections The network connections for the Network File Storage Cluster.
         * 
         * @return builder
         * 
         */
        public Builder connections(NfsClusterConnectionsArgs connections) {
            return connections(Output.of(connections));
        }

        /**
         * @param location The location where the Network File Storage cluster is located.
         * - `de/fra` - Frankfurt
         * - `de/txl` - Berlin
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where the Network File Storage cluster is located.
         * - `de/fra` - Frankfurt
         * - `de/txl` - Berlin
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the Network File Storage cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Network File Storage cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder nfs(@Nullable Output<NfsClusterNfsArgs> nfs) {
            $.nfs = nfs;
            return this;
        }

        public Builder nfs(NfsClusterNfsArgs nfs) {
            return nfs(Output.of(nfs));
        }

        /**
         * @param size The size of the Network File Storage cluster in TiB. Note that the cluster size cannot be reduced after provisioning. This value determines the billing fees. Default is `2`. The minimum value is `2` and the maximum value is `42`.
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Output<Integer> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size The size of the Network File Storage cluster in TiB. Note that the cluster size cannot be reduced after provisioning. This value determines the billing fees. Default is `2`. The minimum value is `2` and the maximum value is `42`.
         * 
         * @return builder
         * 
         */
        public Builder size(Integer size) {
            return size(Output.of(size));
        }

        public NfsClusterState build() {
            return $;
        }
    }

}
