// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.compute.outputs.GetIPBlockIpConsumer;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetIPBlockResult {
    /**
     * @return The id of Ip Block
     * 
     */
    private String id;
    /**
     * @return Read-Only attribute. Lists consumption detail of an individual ip
     * 
     */
    private List<GetIPBlockIpConsumer> ipConsumers;
    /**
     * @return The list of IP addresses associated with this block.
     * 
     */
    private List<String> ips;
    /**
     * @return The regional location for this IP Block: us/las, us/ewr, de/fra, de/fkb.
     * 
     */
    private String location;
    /**
     * @return The name of Ip Block
     * 
     */
    private String name;
    /**
     * @return The number of IP addresses to reserve for this block.
     * 
     */
    private Integer size;

    private GetIPBlockResult() {}
    /**
     * @return The id of Ip Block
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Read-Only attribute. Lists consumption detail of an individual ip
     * 
     */
    public List<GetIPBlockIpConsumer> ipConsumers() {
        return this.ipConsumers;
    }
    /**
     * @return The list of IP addresses associated with this block.
     * 
     */
    public List<String> ips() {
        return this.ips;
    }
    /**
     * @return The regional location for this IP Block: us/las, us/ewr, de/fra, de/fkb.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of Ip Block
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The number of IP addresses to reserve for this block.
     * 
     */
    public Integer size() {
        return this.size;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIPBlockResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetIPBlockIpConsumer> ipConsumers;
        private List<String> ips;
        private String location;
        private String name;
        private Integer size;
        public Builder() {}
        public Builder(GetIPBlockResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.ipConsumers = defaults.ipConsumers;
    	      this.ips = defaults.ips;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.size = defaults.size;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIPBlockResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipConsumers(List<GetIPBlockIpConsumer> ipConsumers) {
            if (ipConsumers == null) {
              throw new MissingRequiredPropertyException("GetIPBlockResult", "ipConsumers");
            }
            this.ipConsumers = ipConsumers;
            return this;
        }
        public Builder ipConsumers(GetIPBlockIpConsumer... ipConsumers) {
            return ipConsumers(List.of(ipConsumers));
        }
        @CustomType.Setter
        public Builder ips(List<String> ips) {
            if (ips == null) {
              throw new MissingRequiredPropertyException("GetIPBlockResult", "ips");
            }
            this.ips = ips;
            return this;
        }
        public Builder ips(String... ips) {
            return ips(List.of(ips));
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetIPBlockResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetIPBlockResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetIPBlockResult", "size");
            }
            this.size = size;
            return this;
        }
        public GetIPBlockResult build() {
            final var _resultValue = new GetIPBlockResult();
            _resultValue.id = id;
            _resultValue.ipConsumers = ipConsumers;
            _resultValue.ips = ips;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.size = size;
            return _resultValue;
        }
    }
}
