// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PgClusterConnectionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PgClusterConnectionsArgs Empty = new PgClusterConnectionsArgs();

    /**
     * The IP and subnet for the database.
     *           Note the following unavailable IP ranges:
     *           10.233.64.0/18
     *           10.233.0.0/18
     *           10.233.114.0/24
     * 
     */
    @Import(name="cidr", required=true)
    private Output<String> cidr;

    /**
     * @return The IP and subnet for the database.
     *           Note the following unavailable IP ranges:
     *           10.233.64.0/18
     *           10.233.0.0/18
     *           10.233.114.0/24
     * 
     */
    public Output<String> cidr() {
        return this.cidr;
    }

    /**
     * The datacenter to connect your cluster to.
     * 
     */
    @Import(name="datacenterId", required=true)
    private Output<String> datacenterId;

    /**
     * @return The datacenter to connect your cluster to.
     * 
     */
    public Output<String> datacenterId() {
        return this.datacenterId;
    }

    /**
     * The LAN to connect your cluster to.
     * 
     */
    @Import(name="lanId", required=true)
    private Output<String> lanId;

    /**
     * @return The LAN to connect your cluster to.
     * 
     */
    public Output<String> lanId() {
        return this.lanId;
    }

    private PgClusterConnectionsArgs() {}

    private PgClusterConnectionsArgs(PgClusterConnectionsArgs $) {
        this.cidr = $.cidr;
        this.datacenterId = $.datacenterId;
        this.lanId = $.lanId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PgClusterConnectionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PgClusterConnectionsArgs $;

        public Builder() {
            $ = new PgClusterConnectionsArgs();
        }

        public Builder(PgClusterConnectionsArgs defaults) {
            $ = new PgClusterConnectionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidr The IP and subnet for the database.
         *           Note the following unavailable IP ranges:
         *           10.233.64.0/18
         *           10.233.0.0/18
         *           10.233.114.0/24
         * 
         * @return builder
         * 
         */
        public Builder cidr(Output<String> cidr) {
            $.cidr = cidr;
            return this;
        }

        /**
         * @param cidr The IP and subnet for the database.
         *           Note the following unavailable IP ranges:
         *           10.233.64.0/18
         *           10.233.0.0/18
         *           10.233.114.0/24
         * 
         * @return builder
         * 
         */
        public Builder cidr(String cidr) {
            return cidr(Output.of(cidr));
        }

        /**
         * @param datacenterId The datacenter to connect your cluster to.
         * 
         * @return builder
         * 
         */
        public Builder datacenterId(Output<String> datacenterId) {
            $.datacenterId = datacenterId;
            return this;
        }

        /**
         * @param datacenterId The datacenter to connect your cluster to.
         * 
         * @return builder
         * 
         */
        public Builder datacenterId(String datacenterId) {
            return datacenterId(Output.of(datacenterId));
        }

        /**
         * @param lanId The LAN to connect your cluster to.
         * 
         * @return builder
         * 
         */
        public Builder lanId(Output<String> lanId) {
            $.lanId = lanId;
            return this;
        }

        /**
         * @param lanId The LAN to connect your cluster to.
         * 
         * @return builder
         * 
         */
        public Builder lanId(String lanId) {
            return lanId(Output.of(lanId));
        }

        public PgClusterConnectionsArgs build() {
            if ($.cidr == null) {
                throw new MissingRequiredPropertyException("PgClusterConnectionsArgs", "cidr");
            }
            if ($.datacenterId == null) {
                throw new MissingRequiredPropertyException("PgClusterConnectionsArgs", "datacenterId");
            }
            if ($.lanId == null) {
                throw new MissingRequiredPropertyException("PgClusterConnectionsArgs", "lanId");
            }
            return $;
        }
    }

}
