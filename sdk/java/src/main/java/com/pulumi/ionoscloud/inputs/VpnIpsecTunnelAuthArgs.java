// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpnIpsecTunnelAuthArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpnIpsecTunnelAuthArgs Empty = new VpnIpsecTunnelAuthArgs();

    /**
     * [string] The authentication method to use for IPSec Authentication. Possible values: `PSK`.
     * Default value: `PSK`.
     * 
     */
    @Import(name="method")
    private @Nullable Output<String> method;

    /**
     * @return [string] The authentication method to use for IPSec Authentication. Possible values: `PSK`.
     * Default value: `PSK`.
     * 
     */
    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    /**
     * [string] The pre-shared key to use for IPSec Authentication. **Note**: Required if method is
     * PSK.
     * 
     */
    @Import(name="pskKey")
    private @Nullable Output<String> pskKey;

    /**
     * @return [string] The pre-shared key to use for IPSec Authentication. **Note**: Required if method is
     * PSK.
     * 
     */
    public Optional<Output<String>> pskKey() {
        return Optional.ofNullable(this.pskKey);
    }

    private VpnIpsecTunnelAuthArgs() {}

    private VpnIpsecTunnelAuthArgs(VpnIpsecTunnelAuthArgs $) {
        this.method = $.method;
        this.pskKey = $.pskKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnIpsecTunnelAuthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnIpsecTunnelAuthArgs $;

        public Builder() {
            $ = new VpnIpsecTunnelAuthArgs();
        }

        public Builder(VpnIpsecTunnelAuthArgs defaults) {
            $ = new VpnIpsecTunnelAuthArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param method [string] The authentication method to use for IPSec Authentication. Possible values: `PSK`.
         * Default value: `PSK`.
         * 
         * @return builder
         * 
         */
        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method [string] The authentication method to use for IPSec Authentication. Possible values: `PSK`.
         * Default value: `PSK`.
         * 
         * @return builder
         * 
         */
        public Builder method(String method) {
            return method(Output.of(method));
        }

        /**
         * @param pskKey [string] The pre-shared key to use for IPSec Authentication. **Note**: Required if method is
         * PSK.
         * 
         * @return builder
         * 
         */
        public Builder pskKey(@Nullable Output<String> pskKey) {
            $.pskKey = pskKey;
            return this;
        }

        /**
         * @param pskKey [string] The pre-shared key to use for IPSec Authentication. **Note**: Required if method is
         * PSK.
         * 
         * @return builder
         * 
         */
        public Builder pskKey(String pskKey) {
            return pskKey(Output.of(pskKey));
        }

        public VpnIpsecTunnelAuthArgs build() {
            return $;
        }
    }

}
