// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ionoscloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ionoscloud.outputs.GetIpblockIpConsumer;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIpblockResult {
    /**
     * @return The id of Ip Block
     * 
     */
    private @Nullable String id;
    /**
     * @return Read-Only attribute. Lists consumption detail of an individual ip
     * 
     */
    private List<GetIpblockIpConsumer> ipConsumers;
    /**
     * @return The list of IP addresses associated with this block.
     * 
     */
    private List<String> ips;
    /**
     * @return The regional location for this IP Block: us/las, us/ewr, de/fra, de/fkb.
     * 
     */
    private @Nullable String location;
    /**
     * @return The name of Ip Block
     * 
     */
    private @Nullable String name;
    /**
     * @return The number of IP addresses to reserve for this block.
     * 
     */
    private @Nullable Integer size;

    private GetIpblockResult() {}
    /**
     * @return The id of Ip Block
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Read-Only attribute. Lists consumption detail of an individual ip
     * 
     */
    public List<GetIpblockIpConsumer> ipConsumers() {
        return this.ipConsumers;
    }
    /**
     * @return The list of IP addresses associated with this block.
     * 
     */
    public List<String> ips() {
        return this.ips;
    }
    /**
     * @return The regional location for this IP Block: us/las, us/ewr, de/fra, de/fkb.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of Ip Block
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The number of IP addresses to reserve for this block.
     * 
     */
    public Optional<Integer> size() {
        return Optional.ofNullable(this.size);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpblockResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String id;
        private List<GetIpblockIpConsumer> ipConsumers;
        private List<String> ips;
        private @Nullable String location;
        private @Nullable String name;
        private @Nullable Integer size;
        public Builder() {}
        public Builder(GetIpblockResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.ipConsumers = defaults.ipConsumers;
    	      this.ips = defaults.ips;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.size = defaults.size;
        }

        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipConsumers(List<GetIpblockIpConsumer> ipConsumers) {
            if (ipConsumers == null) {
              throw new MissingRequiredPropertyException("GetIpblockResult", "ipConsumers");
            }
            this.ipConsumers = ipConsumers;
            return this;
        }
        public Builder ipConsumers(GetIpblockIpConsumer... ipConsumers) {
            return ipConsumers(List.of(ipConsumers));
        }
        @CustomType.Setter
        public Builder ips(List<String> ips) {
            if (ips == null) {
              throw new MissingRequiredPropertyException("GetIpblockResult", "ips");
            }
            this.ips = ips;
            return this;
        }
        public Builder ips(String... ips) {
            return ips(List.of(ips));
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {

            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder size(@Nullable Integer size) {

            this.size = size;
            return this;
        }
        public GetIpblockResult build() {
            final var _resultValue = new GetIpblockResult();
            _resultValue.id = id;
            _resultValue.ipConsumers = ipConsumers;
            _resultValue.ips = ips;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.size = size;
            return _resultValue;
        }
    }
}
