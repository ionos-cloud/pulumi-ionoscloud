// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logging

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type PipelineLog struct {
	// [list] The configuration of the logs datastore, a list that contains elements with the following structure:
	Destinations []PipelineLogDestination `pulumi:"destinations"`
	// [string] "Protocol to use as intake. Possible values are: http, tcp."
	Protocol string `pulumi:"protocol"`
	// [bool]
	Public *bool `pulumi:"public"`
	// [string] The source parser to be used.
	Source string `pulumi:"source"`
	// [string] The tag is used to distinguish different pipelines. Must be unique amongst the pipeline's array items.
	Tag string `pulumi:"tag"`
}

// PipelineLogInput is an input type that accepts PipelineLogArgs and PipelineLogOutput values.
// You can construct a concrete instance of `PipelineLogInput` via:
//
//	PipelineLogArgs{...}
type PipelineLogInput interface {
	pulumi.Input

	ToPipelineLogOutput() PipelineLogOutput
	ToPipelineLogOutputWithContext(context.Context) PipelineLogOutput
}

type PipelineLogArgs struct {
	// [list] The configuration of the logs datastore, a list that contains elements with the following structure:
	Destinations PipelineLogDestinationArrayInput `pulumi:"destinations"`
	// [string] "Protocol to use as intake. Possible values are: http, tcp."
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// [bool]
	Public pulumi.BoolPtrInput `pulumi:"public"`
	// [string] The source parser to be used.
	Source pulumi.StringInput `pulumi:"source"`
	// [string] The tag is used to distinguish different pipelines. Must be unique amongst the pipeline's array items.
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (PipelineLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLog)(nil)).Elem()
}

func (i PipelineLogArgs) ToPipelineLogOutput() PipelineLogOutput {
	return i.ToPipelineLogOutputWithContext(context.Background())
}

func (i PipelineLogArgs) ToPipelineLogOutputWithContext(ctx context.Context) PipelineLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogOutput)
}

// PipelineLogArrayInput is an input type that accepts PipelineLogArray and PipelineLogArrayOutput values.
// You can construct a concrete instance of `PipelineLogArrayInput` via:
//
//	PipelineLogArray{ PipelineLogArgs{...} }
type PipelineLogArrayInput interface {
	pulumi.Input

	ToPipelineLogArrayOutput() PipelineLogArrayOutput
	ToPipelineLogArrayOutputWithContext(context.Context) PipelineLogArrayOutput
}

type PipelineLogArray []PipelineLogInput

func (PipelineLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineLog)(nil)).Elem()
}

func (i PipelineLogArray) ToPipelineLogArrayOutput() PipelineLogArrayOutput {
	return i.ToPipelineLogArrayOutputWithContext(context.Background())
}

func (i PipelineLogArray) ToPipelineLogArrayOutputWithContext(ctx context.Context) PipelineLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogArrayOutput)
}

type PipelineLogOutput struct{ *pulumi.OutputState }

func (PipelineLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLog)(nil)).Elem()
}

func (o PipelineLogOutput) ToPipelineLogOutput() PipelineLogOutput {
	return o
}

func (o PipelineLogOutput) ToPipelineLogOutputWithContext(ctx context.Context) PipelineLogOutput {
	return o
}

// [list] The configuration of the logs datastore, a list that contains elements with the following structure:
func (o PipelineLogOutput) Destinations() PipelineLogDestinationArrayOutput {
	return o.ApplyT(func(v PipelineLog) []PipelineLogDestination { return v.Destinations }).(PipelineLogDestinationArrayOutput)
}

// [string] "Protocol to use as intake. Possible values are: http, tcp."
func (o PipelineLogOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineLog) string { return v.Protocol }).(pulumi.StringOutput)
}

// [bool]
func (o PipelineLogOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PipelineLog) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

// [string] The source parser to be used.
func (o PipelineLogOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineLog) string { return v.Source }).(pulumi.StringOutput)
}

// [string] The tag is used to distinguish different pipelines. Must be unique amongst the pipeline's array items.
func (o PipelineLogOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineLog) string { return v.Tag }).(pulumi.StringOutput)
}

type PipelineLogArrayOutput struct{ *pulumi.OutputState }

func (PipelineLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineLog)(nil)).Elem()
}

func (o PipelineLogArrayOutput) ToPipelineLogArrayOutput() PipelineLogArrayOutput {
	return o
}

func (o PipelineLogArrayOutput) ToPipelineLogArrayOutputWithContext(ctx context.Context) PipelineLogArrayOutput {
	return o
}

func (o PipelineLogArrayOutput) Index(i pulumi.IntInput) PipelineLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineLog {
		return vs[0].([]PipelineLog)[vs[1].(int)]
	}).(PipelineLogOutput)
}

type PipelineLogDestination struct {
	// [int] Defines the number of days a log record should be kept in loki. Works with loki destination type only. Can be one of: 7, 14, 30.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// [string] The internal output stream to send logs to.
	Type *string `pulumi:"type"`
}

// PipelineLogDestinationInput is an input type that accepts PipelineLogDestinationArgs and PipelineLogDestinationOutput values.
// You can construct a concrete instance of `PipelineLogDestinationInput` via:
//
//	PipelineLogDestinationArgs{...}
type PipelineLogDestinationInput interface {
	pulumi.Input

	ToPipelineLogDestinationOutput() PipelineLogDestinationOutput
	ToPipelineLogDestinationOutputWithContext(context.Context) PipelineLogDestinationOutput
}

type PipelineLogDestinationArgs struct {
	// [int] Defines the number of days a log record should be kept in loki. Works with loki destination type only. Can be one of: 7, 14, 30.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// [string] The internal output stream to send logs to.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PipelineLogDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLogDestination)(nil)).Elem()
}

func (i PipelineLogDestinationArgs) ToPipelineLogDestinationOutput() PipelineLogDestinationOutput {
	return i.ToPipelineLogDestinationOutputWithContext(context.Background())
}

func (i PipelineLogDestinationArgs) ToPipelineLogDestinationOutputWithContext(ctx context.Context) PipelineLogDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogDestinationOutput)
}

// PipelineLogDestinationArrayInput is an input type that accepts PipelineLogDestinationArray and PipelineLogDestinationArrayOutput values.
// You can construct a concrete instance of `PipelineLogDestinationArrayInput` via:
//
//	PipelineLogDestinationArray{ PipelineLogDestinationArgs{...} }
type PipelineLogDestinationArrayInput interface {
	pulumi.Input

	ToPipelineLogDestinationArrayOutput() PipelineLogDestinationArrayOutput
	ToPipelineLogDestinationArrayOutputWithContext(context.Context) PipelineLogDestinationArrayOutput
}

type PipelineLogDestinationArray []PipelineLogDestinationInput

func (PipelineLogDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineLogDestination)(nil)).Elem()
}

func (i PipelineLogDestinationArray) ToPipelineLogDestinationArrayOutput() PipelineLogDestinationArrayOutput {
	return i.ToPipelineLogDestinationArrayOutputWithContext(context.Background())
}

func (i PipelineLogDestinationArray) ToPipelineLogDestinationArrayOutputWithContext(ctx context.Context) PipelineLogDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLogDestinationArrayOutput)
}

type PipelineLogDestinationOutput struct{ *pulumi.OutputState }

func (PipelineLogDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLogDestination)(nil)).Elem()
}

func (o PipelineLogDestinationOutput) ToPipelineLogDestinationOutput() PipelineLogDestinationOutput {
	return o
}

func (o PipelineLogDestinationOutput) ToPipelineLogDestinationOutputWithContext(ctx context.Context) PipelineLogDestinationOutput {
	return o
}

// [int] Defines the number of days a log record should be kept in loki. Works with loki destination type only. Can be one of: 7, 14, 30.
func (o PipelineLogDestinationOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PipelineLogDestination) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// [string] The internal output stream to send logs to.
func (o PipelineLogDestinationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineLogDestination) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PipelineLogDestinationArrayOutput struct{ *pulumi.OutputState }

func (PipelineLogDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineLogDestination)(nil)).Elem()
}

func (o PipelineLogDestinationArrayOutput) ToPipelineLogDestinationArrayOutput() PipelineLogDestinationArrayOutput {
	return o
}

func (o PipelineLogDestinationArrayOutput) ToPipelineLogDestinationArrayOutputWithContext(ctx context.Context) PipelineLogDestinationArrayOutput {
	return o
}

func (o PipelineLogDestinationArrayOutput) Index(i pulumi.IntInput) PipelineLogDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineLogDestination {
		return vs[0].([]PipelineLogDestination)[vs[1].(int)]
	}).(PipelineLogDestinationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLogInput)(nil)).Elem(), PipelineLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLogArrayInput)(nil)).Elem(), PipelineLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLogDestinationInput)(nil)).Elem(), PipelineLogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLogDestinationArrayInput)(nil)).Elem(), PipelineLogDestinationArray{})
	pulumi.RegisterOutputType(PipelineLogOutput{})
	pulumi.RegisterOutputType(PipelineLogArrayOutput{})
	pulumi.RegisterOutputType(PipelineLogDestinationOutput{})
	pulumi.RegisterOutputType(PipelineLogDestinationArrayOutput{})
}
