// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ionoscloud

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **Resource data source** can be used to search for and return any existing IonosCloud resource and optionally their group associations.
// You can provide a string for the resource type (datacenter,image,snapshot,ipblock) and/or resource id parameters which will be queries against available resources.
// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
// When this happens, please refine your search string so that it is specific enough to return only one result.
//
// ## Example Usage
//
// ### By Type
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ionoscloud.GetResource(ctx, &ionoscloud.GetResourceArgs{
//				ResourceType: pulumi.StringRef("datacenter"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetResource(ctx *pulumi.Context, args *GetResourceArgs, opts ...pulumi.InvokeOption) (*GetResourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetResourceResult
	err := ctx.Invoke("ionoscloud:index/getResource:getResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResource.
type GetResourceArgs struct {
	// The ID of the specific resource to retrieve information about.
	ResourceId *string `pulumi:"resourceId"`
	// The specific type of resources to retrieve information about.
	ResourceType *string `pulumi:"resourceType"`
}

// A collection of values returned by getResource.
type GetResourceResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id           string  `pulumi:"id"`
	ResourceId   *string `pulumi:"resourceId"`
	ResourceType *string `pulumi:"resourceType"`
}

func GetResourceOutput(ctx *pulumi.Context, args GetResourceOutputArgs, opts ...pulumi.InvokeOption) GetResourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetResourceResult, error) {
			args := v.(GetResourceArgs)
			r, err := GetResource(ctx, &args, opts...)
			var s GetResourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetResourceResultOutput)
}

// A collection of arguments for invoking getResource.
type GetResourceOutputArgs struct {
	// The ID of the specific resource to retrieve information about.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// The specific type of resources to retrieve information about.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (GetResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceArgs)(nil)).Elem()
}

// A collection of values returned by getResource.
type GetResourceResultOutput struct{ *pulumi.OutputState }

func (GetResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceResult)(nil)).Elem()
}

func (o GetResourceResultOutput) ToGetResourceResultOutput() GetResourceResultOutput {
	return o
}

func (o GetResourceResultOutput) ToGetResourceResultOutputWithContext(ctx context.Context) GetResourceResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetResourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetResourceResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetResourceResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o GetResourceResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetResourceResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetResourceResultOutput{})
}
