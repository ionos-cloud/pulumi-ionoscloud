// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dsaas

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterResult
	err := ctx.Invoke("ionoscloud:dsaas/getCluster:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCluster.
type LookupClusterArgs struct {
	Id           *string `pulumi:"id"`
	Name         *string `pulumi:"name"`
	PartialMatch *bool   `pulumi:"partialMatch"`
}

// A collection of values returned by getCluster.
type LookupClusterResult struct {
	CaCrt              string                        `pulumi:"caCrt"`
	Configs            []GetClusterConfig            `pulumi:"configs"`
	DatacenterId       string                        `pulumi:"datacenterId"`
	Id                 *string                       `pulumi:"id"`
	KubeConfig         string                        `pulumi:"kubeConfig"`
	Lans               []GetClusterLan               `pulumi:"lans"`
	MaintenanceWindows []GetClusterMaintenanceWindow `pulumi:"maintenanceWindows"`
	Name               *string                       `pulumi:"name"`
	PartialMatch       *bool                         `pulumi:"partialMatch"`
	Server             string                        `pulumi:"server"`
	UserTokens         map[string]string             `pulumi:"userTokens"`
	Version            string                        `pulumi:"version"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupClusterResultOutput, error) {
			args := v.(LookupClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:dsaas/getCluster:getCluster", args, LookupClusterResultOutput{}, options).(LookupClusterResultOutput), nil
		}).(LookupClusterResultOutput)
}

// A collection of arguments for invoking getCluster.
type LookupClusterOutputArgs struct {
	Id           pulumi.StringPtrInput `pulumi:"id"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
	PartialMatch pulumi.BoolPtrInput   `pulumi:"partialMatch"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

// A collection of values returned by getCluster.
type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) CaCrt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.CaCrt }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) Configs() GetClusterConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterConfig { return v.Configs }).(GetClusterConfigArrayOutput)
}

func (o LookupClusterResultOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.DatacenterId }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupClusterResultOutput) KubeConfig() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.KubeConfig }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) Lans() GetClusterLanArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterLan { return v.Lans }).(GetClusterLanArrayOutput)
}

func (o LookupClusterResultOutput) MaintenanceWindows() GetClusterMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterMaintenanceWindow { return v.MaintenanceWindows }).(GetClusterMaintenanceWindowArrayOutput)
}

func (o LookupClusterResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupClusterResultOutput) PartialMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *bool { return v.PartialMatch }).(pulumi.BoolPtrOutput)
}

func (o LookupClusterResultOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Server }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) UserTokens() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupClusterResult) map[string]string { return v.UserTokens }).(pulumi.StringMapOutput)
}

func (o LookupClusterResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
