// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package k8s

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Cluster struct {
	pulumi.CustomResourceState

	// When set to true, allows the update of immutable fields by destroying and re-creating the cluster.
	AllowReplace pulumi.BoolPtrOutput `pulumi:"allowReplace"`
	// Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction.
	// If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will
	// be used: 32 for IPv4 and 128 for IPv6.
	ApiSubnetAllowLists pulumi.StringArrayOutput `pulumi:"apiSubnetAllowLists"`
	// The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
	// The provider will ignore downgrades of patch level.
	K8sVersion pulumi.StringOutput `pulumi:"k8sVersion"`
	// This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have
	// a data center at that location. This attribute is immutable.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
	MaintenanceWindow ClusterMaintenanceWindowOutput `pulumi:"maintenanceWindow"`
	// The desired name for the cluster
	Name pulumi.StringOutput `pulumi:"name"`
	// The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the
	// same location as the cluster's location. This attribute is mandatory if the cluster is private.
	NatGatewayIp pulumi.StringPtrOutput `pulumi:"natGatewayIp"`
	// The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid
	// CIDR notation for an IPv4 network prefix of 16 bits length.
	NodeSubnet pulumi.StringOutput `pulumi:"nodeSubnet"`
	// The indicator if the cluster is public or private.
	Public pulumi.BoolPtrOutput `pulumi:"public"`
	// List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store
	// K8s API audit logs.
	S3Buckets ClusterS3BucketArrayOutput `pulumi:"s3Buckets"`
	// List of versions that may be used for node pools under this cluster
	ViableNodePoolVersions pulumi.StringArrayOutput `pulumi:"viableNodePoolVersions"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil {
		args = &ClusterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Cluster
	err := ctx.RegisterResource("ionoscloud:k8s/cluster:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("ionoscloud:k8s/cluster:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
	// When set to true, allows the update of immutable fields by destroying and re-creating the cluster.
	AllowReplace *bool `pulumi:"allowReplace"`
	// Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction.
	// If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will
	// be used: 32 for IPv4 and 128 for IPv6.
	ApiSubnetAllowLists []string `pulumi:"apiSubnetAllowLists"`
	// The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
	// The provider will ignore downgrades of patch level.
	K8sVersion *string `pulumi:"k8sVersion"`
	// This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have
	// a data center at that location. This attribute is immutable.
	Location *string `pulumi:"location"`
	// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
	MaintenanceWindow *ClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The desired name for the cluster
	Name *string `pulumi:"name"`
	// The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the
	// same location as the cluster's location. This attribute is mandatory if the cluster is private.
	NatGatewayIp *string `pulumi:"natGatewayIp"`
	// The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid
	// CIDR notation for an IPv4 network prefix of 16 bits length.
	NodeSubnet *string `pulumi:"nodeSubnet"`
	// The indicator if the cluster is public or private.
	Public *bool `pulumi:"public"`
	// List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store
	// K8s API audit logs.
	S3Buckets []ClusterS3Bucket `pulumi:"s3Buckets"`
	// List of versions that may be used for node pools under this cluster
	ViableNodePoolVersions []string `pulumi:"viableNodePoolVersions"`
}

type ClusterState struct {
	// When set to true, allows the update of immutable fields by destroying and re-creating the cluster.
	AllowReplace pulumi.BoolPtrInput
	// Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction.
	// If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will
	// be used: 32 for IPv4 and 128 for IPv6.
	ApiSubnetAllowLists pulumi.StringArrayInput
	// The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
	// The provider will ignore downgrades of patch level.
	K8sVersion pulumi.StringPtrInput
	// This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have
	// a data center at that location. This attribute is immutable.
	Location pulumi.StringPtrInput
	// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
	MaintenanceWindow ClusterMaintenanceWindowPtrInput
	// The desired name for the cluster
	Name pulumi.StringPtrInput
	// The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the
	// same location as the cluster's location. This attribute is mandatory if the cluster is private.
	NatGatewayIp pulumi.StringPtrInput
	// The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid
	// CIDR notation for an IPv4 network prefix of 16 bits length.
	NodeSubnet pulumi.StringPtrInput
	// The indicator if the cluster is public or private.
	Public pulumi.BoolPtrInput
	// List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store
	// K8s API audit logs.
	S3Buckets ClusterS3BucketArrayInput
	// List of versions that may be used for node pools under this cluster
	ViableNodePoolVersions pulumi.StringArrayInput
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	// When set to true, allows the update of immutable fields by destroying and re-creating the cluster.
	AllowReplace *bool `pulumi:"allowReplace"`
	// Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction.
	// If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will
	// be used: 32 for IPv4 and 128 for IPv6.
	ApiSubnetAllowLists []string `pulumi:"apiSubnetAllowLists"`
	// The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
	// The provider will ignore downgrades of patch level.
	K8sVersion *string `pulumi:"k8sVersion"`
	// This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have
	// a data center at that location. This attribute is immutable.
	Location *string `pulumi:"location"`
	// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
	MaintenanceWindow *ClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The desired name for the cluster
	Name *string `pulumi:"name"`
	// The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the
	// same location as the cluster's location. This attribute is mandatory if the cluster is private.
	NatGatewayIp *string `pulumi:"natGatewayIp"`
	// The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid
	// CIDR notation for an IPv4 network prefix of 16 bits length.
	NodeSubnet *string `pulumi:"nodeSubnet"`
	// The indicator if the cluster is public or private.
	Public *bool `pulumi:"public"`
	// List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store
	// K8s API audit logs.
	S3Buckets []ClusterS3Bucket `pulumi:"s3Buckets"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	// When set to true, allows the update of immutable fields by destroying and re-creating the cluster.
	AllowReplace pulumi.BoolPtrInput
	// Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction.
	// If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will
	// be used: 32 for IPv4 and 128 for IPv6.
	ApiSubnetAllowLists pulumi.StringArrayInput
	// The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
	// The provider will ignore downgrades of patch level.
	K8sVersion pulumi.StringPtrInput
	// This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have
	// a data center at that location. This attribute is immutable.
	Location pulumi.StringPtrInput
	// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
	MaintenanceWindow ClusterMaintenanceWindowPtrInput
	// The desired name for the cluster
	Name pulumi.StringPtrInput
	// The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the
	// same location as the cluster's location. This attribute is mandatory if the cluster is private.
	NatGatewayIp pulumi.StringPtrInput
	// The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid
	// CIDR notation for an IPv4 network prefix of 16 bits length.
	NodeSubnet pulumi.StringPtrInput
	// The indicator if the cluster is public or private.
	Public pulumi.BoolPtrInput
	// List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store
	// K8s API audit logs.
	S3Buckets ClusterS3BucketArrayInput
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}

type ClusterInput interface {
	pulumi.Input

	ToClusterOutput() ClusterOutput
	ToClusterOutputWithContext(ctx context.Context) ClusterOutput
}

func (*Cluster) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (i *Cluster) ToClusterOutput() ClusterOutput {
	return i.ToClusterOutputWithContext(context.Background())
}

func (i *Cluster) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutput)
}

// ClusterArrayInput is an input type that accepts ClusterArray and ClusterArrayOutput values.
// You can construct a concrete instance of `ClusterArrayInput` via:
//
//	ClusterArray{ ClusterArgs{...} }
type ClusterArrayInput interface {
	pulumi.Input

	ToClusterArrayOutput() ClusterArrayOutput
	ToClusterArrayOutputWithContext(context.Context) ClusterArrayOutput
}

type ClusterArray []ClusterInput

func (ClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (i ClusterArray) ToClusterArrayOutput() ClusterArrayOutput {
	return i.ToClusterArrayOutputWithContext(context.Background())
}

func (i ClusterArray) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterArrayOutput)
}

// ClusterMapInput is an input type that accepts ClusterMap and ClusterMapOutput values.
// You can construct a concrete instance of `ClusterMapInput` via:
//
//	ClusterMap{ "key": ClusterArgs{...} }
type ClusterMapInput interface {
	pulumi.Input

	ToClusterMapOutput() ClusterMapOutput
	ToClusterMapOutputWithContext(context.Context) ClusterMapOutput
}

type ClusterMap map[string]ClusterInput

func (ClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (i ClusterMap) ToClusterMapOutput() ClusterMapOutput {
	return i.ToClusterMapOutputWithContext(context.Background())
}

func (i ClusterMap) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMapOutput)
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

// When set to true, allows the update of immutable fields by destroying and re-creating the cluster.
func (o ClusterOutput) AllowReplace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.AllowReplace }).(pulumi.BoolPtrOutput)
}

// Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction.
// If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will
// be used: 32 for IPv4 and 128 for IPv6.
func (o ClusterOutput) ApiSubnetAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.ApiSubnetAllowLists }).(pulumi.StringArrayOutput)
}

// The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
// The provider will ignore downgrades of patch level.
func (o ClusterOutput) K8sVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.K8sVersion }).(pulumi.StringOutput)
}

// This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have
// a data center at that location. This attribute is immutable.
func (o ClusterOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
func (o ClusterOutput) MaintenanceWindow() ClusterMaintenanceWindowOutput {
	return o.ApplyT(func(v *Cluster) ClusterMaintenanceWindowOutput { return v.MaintenanceWindow }).(ClusterMaintenanceWindowOutput)
}

// The desired name for the cluster
func (o ClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the
// same location as the cluster's location. This attribute is mandatory if the cluster is private.
func (o ClusterOutput) NatGatewayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.NatGatewayIp }).(pulumi.StringPtrOutput)
}

// The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid
// CIDR notation for an IPv4 network prefix of 16 bits length.
func (o ClusterOutput) NodeSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.NodeSubnet }).(pulumi.StringOutput)
}

// The indicator if the cluster is public or private.
func (o ClusterOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.Public }).(pulumi.BoolPtrOutput)
}

// List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store
// K8s API audit logs.
func (o ClusterOutput) S3Buckets() ClusterS3BucketArrayOutput {
	return o.ApplyT(func(v *Cluster) ClusterS3BucketArrayOutput { return v.S3Buckets }).(ClusterS3BucketArrayOutput)
}

// List of versions that may be used for node pools under this cluster
func (o ClusterOutput) ViableNodePoolVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.ViableNodePoolVersions }).(pulumi.StringArrayOutput)
}

type ClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (o ClusterArrayOutput) ToClusterArrayOutput() ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) Index(i pulumi.IntInput) ClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].([]*Cluster)[vs[1].(int)]
	}).(ClusterOutput)
}

type ClusterMapOutput struct{ *pulumi.OutputState }

func (ClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (o ClusterMapOutput) ToClusterMapOutput() ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) MapIndex(k pulumi.StringInput) ClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].(map[string]*Cluster)[vs[1].(string)]
	}).(ClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInput)(nil)).Elem(), &Cluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterArrayInput)(nil)).Elem(), ClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMapInput)(nil)).Elem(), ClusterMap{})
	pulumi.RegisterOutputType(ClusterOutput{})
	pulumi.RegisterOutputType(ClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterMapOutput{})
}
