// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package k8s

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **k8s Node Pool Nodes** data source can be used to search for and return a list of existing k8s Node Pool nodes.
// ## Example Usage
//
// ### By IDs
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/k8s"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := k8s.GetNodePoolNodes(ctx, &k8s.GetNodePoolNodesArgs{
//				NodePoolId:   "k8s_nodepool_id",
//				K8sClusterId: "k8s_cluster_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNodePoolNodes(ctx *pulumi.Context, args *GetNodePoolNodesArgs, opts ...pulumi.InvokeOption) (*GetNodePoolNodesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNodePoolNodesResult
	err := ctx.Invoke("ionoscloud:k8s/getNodePoolNodes:getNodePoolNodes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNodePoolNodes.
type GetNodePoolNodesArgs struct {
	// K8s Cluster' UUID
	K8sClusterId string `pulumi:"k8sClusterId"`
	NodePoolId   string `pulumi:"nodePoolId"`
}

// A collection of values returned by getNodePoolNodes.
type GetNodePoolNodesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	K8sClusterId string `pulumi:"k8sClusterId"`
	NodePoolId   string `pulumi:"nodePoolId"`
	// a list of the nodes that are in the nodepool
	Nodes []GetNodePoolNodesNode `pulumi:"nodes"`
}

func GetNodePoolNodesOutput(ctx *pulumi.Context, args GetNodePoolNodesOutputArgs, opts ...pulumi.InvokeOption) GetNodePoolNodesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNodePoolNodesResultOutput, error) {
			args := v.(GetNodePoolNodesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:k8s/getNodePoolNodes:getNodePoolNodes", args, GetNodePoolNodesResultOutput{}, options).(GetNodePoolNodesResultOutput), nil
		}).(GetNodePoolNodesResultOutput)
}

// A collection of arguments for invoking getNodePoolNodes.
type GetNodePoolNodesOutputArgs struct {
	// K8s Cluster' UUID
	K8sClusterId pulumi.StringInput `pulumi:"k8sClusterId"`
	NodePoolId   pulumi.StringInput `pulumi:"nodePoolId"`
}

func (GetNodePoolNodesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodePoolNodesArgs)(nil)).Elem()
}

// A collection of values returned by getNodePoolNodes.
type GetNodePoolNodesResultOutput struct{ *pulumi.OutputState }

func (GetNodePoolNodesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodePoolNodesResult)(nil)).Elem()
}

func (o GetNodePoolNodesResultOutput) ToGetNodePoolNodesResultOutput() GetNodePoolNodesResultOutput {
	return o
}

func (o GetNodePoolNodesResultOutput) ToGetNodePoolNodesResultOutputWithContext(ctx context.Context) GetNodePoolNodesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetNodePoolNodesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodePoolNodesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNodePoolNodesResultOutput) K8sClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodePoolNodesResult) string { return v.K8sClusterId }).(pulumi.StringOutput)
}

func (o GetNodePoolNodesResultOutput) NodePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodePoolNodesResult) string { return v.NodePoolId }).(pulumi.StringOutput)
}

// a list of the nodes that are in the nodepool
func (o GetNodePoolNodesResultOutput) Nodes() GetNodePoolNodesNodeArrayOutput {
	return o.ApplyT(func(v GetNodePoolNodesResult) []GetNodePoolNodesNode { return v.Nodes }).(GetNodePoolNodesNodeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNodePoolNodesResultOutput{})
}
