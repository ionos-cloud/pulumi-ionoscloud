// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package k8s

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type K8sClusterMaintenanceWindow struct {
	// [string] Day of the week when maintenance is allowed
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// [string] A clock time in the day when maintenance is allowed
	Time string `pulumi:"time"`
}

// K8sClusterMaintenanceWindowInput is an input type that accepts K8sClusterMaintenanceWindowArgs and K8sClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `K8sClusterMaintenanceWindowInput` via:
//
//	K8sClusterMaintenanceWindowArgs{...}
type K8sClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToK8sClusterMaintenanceWindowOutput() K8sClusterMaintenanceWindowOutput
	ToK8sClusterMaintenanceWindowOutputWithContext(context.Context) K8sClusterMaintenanceWindowOutput
}

type K8sClusterMaintenanceWindowArgs struct {
	// [string] Day of the week when maintenance is allowed
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// [string] A clock time in the day when maintenance is allowed
	Time pulumi.StringInput `pulumi:"time"`
}

func (K8sClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sClusterMaintenanceWindow)(nil)).Elem()
}

func (i K8sClusterMaintenanceWindowArgs) ToK8sClusterMaintenanceWindowOutput() K8sClusterMaintenanceWindowOutput {
	return i.ToK8sClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i K8sClusterMaintenanceWindowArgs) ToK8sClusterMaintenanceWindowOutputWithContext(ctx context.Context) K8sClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sClusterMaintenanceWindowOutput)
}

func (i K8sClusterMaintenanceWindowArgs) ToK8sClusterMaintenanceWindowPtrOutput() K8sClusterMaintenanceWindowPtrOutput {
	return i.ToK8sClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i K8sClusterMaintenanceWindowArgs) ToK8sClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) K8sClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sClusterMaintenanceWindowOutput).ToK8sClusterMaintenanceWindowPtrOutputWithContext(ctx)
}

// K8sClusterMaintenanceWindowPtrInput is an input type that accepts K8sClusterMaintenanceWindowArgs, K8sClusterMaintenanceWindowPtr and K8sClusterMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `K8sClusterMaintenanceWindowPtrInput` via:
//
//	        K8sClusterMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type K8sClusterMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToK8sClusterMaintenanceWindowPtrOutput() K8sClusterMaintenanceWindowPtrOutput
	ToK8sClusterMaintenanceWindowPtrOutputWithContext(context.Context) K8sClusterMaintenanceWindowPtrOutput
}

type k8sClusterMaintenanceWindowPtrType K8sClusterMaintenanceWindowArgs

func K8sClusterMaintenanceWindowPtr(v *K8sClusterMaintenanceWindowArgs) K8sClusterMaintenanceWindowPtrInput {
	return (*k8sClusterMaintenanceWindowPtrType)(v)
}

func (*k8sClusterMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sClusterMaintenanceWindow)(nil)).Elem()
}

func (i *k8sClusterMaintenanceWindowPtrType) ToK8sClusterMaintenanceWindowPtrOutput() K8sClusterMaintenanceWindowPtrOutput {
	return i.ToK8sClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *k8sClusterMaintenanceWindowPtrType) ToK8sClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) K8sClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sClusterMaintenanceWindowPtrOutput)
}

type K8sClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (K8sClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sClusterMaintenanceWindow)(nil)).Elem()
}

func (o K8sClusterMaintenanceWindowOutput) ToK8sClusterMaintenanceWindowOutput() K8sClusterMaintenanceWindowOutput {
	return o
}

func (o K8sClusterMaintenanceWindowOutput) ToK8sClusterMaintenanceWindowOutputWithContext(ctx context.Context) K8sClusterMaintenanceWindowOutput {
	return o
}

func (o K8sClusterMaintenanceWindowOutput) ToK8sClusterMaintenanceWindowPtrOutput() K8sClusterMaintenanceWindowPtrOutput {
	return o.ToK8sClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o K8sClusterMaintenanceWindowOutput) ToK8sClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) K8sClusterMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v K8sClusterMaintenanceWindow) *K8sClusterMaintenanceWindow {
		return &v
	}).(K8sClusterMaintenanceWindowPtrOutput)
}

// [string] Day of the week when maintenance is allowed
func (o K8sClusterMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v K8sClusterMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// [string] A clock time in the day when maintenance is allowed
func (o K8sClusterMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v K8sClusterMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type K8sClusterMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (K8sClusterMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sClusterMaintenanceWindow)(nil)).Elem()
}

func (o K8sClusterMaintenanceWindowPtrOutput) ToK8sClusterMaintenanceWindowPtrOutput() K8sClusterMaintenanceWindowPtrOutput {
	return o
}

func (o K8sClusterMaintenanceWindowPtrOutput) ToK8sClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) K8sClusterMaintenanceWindowPtrOutput {
	return o
}

func (o K8sClusterMaintenanceWindowPtrOutput) Elem() K8sClusterMaintenanceWindowOutput {
	return o.ApplyT(func(v *K8sClusterMaintenanceWindow) K8sClusterMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret K8sClusterMaintenanceWindow
		return ret
	}).(K8sClusterMaintenanceWindowOutput)
}

// [string] Day of the week when maintenance is allowed
func (o K8sClusterMaintenanceWindowPtrOutput) DayOfTheWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sClusterMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfTheWeek
	}).(pulumi.StringPtrOutput)
}

// [string] A clock time in the day when maintenance is allowed
func (o K8sClusterMaintenanceWindowPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sClusterMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

type K8sClusterS3Bucket struct {
	// [string] The name of the Kubernetes Cluster.
	Name *string `pulumi:"name"`
}

// K8sClusterS3BucketInput is an input type that accepts K8sClusterS3BucketArgs and K8sClusterS3BucketOutput values.
// You can construct a concrete instance of `K8sClusterS3BucketInput` via:
//
//	K8sClusterS3BucketArgs{...}
type K8sClusterS3BucketInput interface {
	pulumi.Input

	ToK8sClusterS3BucketOutput() K8sClusterS3BucketOutput
	ToK8sClusterS3BucketOutputWithContext(context.Context) K8sClusterS3BucketOutput
}

type K8sClusterS3BucketArgs struct {
	// [string] The name of the Kubernetes Cluster.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (K8sClusterS3BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sClusterS3Bucket)(nil)).Elem()
}

func (i K8sClusterS3BucketArgs) ToK8sClusterS3BucketOutput() K8sClusterS3BucketOutput {
	return i.ToK8sClusterS3BucketOutputWithContext(context.Background())
}

func (i K8sClusterS3BucketArgs) ToK8sClusterS3BucketOutputWithContext(ctx context.Context) K8sClusterS3BucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sClusterS3BucketOutput)
}

// K8sClusterS3BucketArrayInput is an input type that accepts K8sClusterS3BucketArray and K8sClusterS3BucketArrayOutput values.
// You can construct a concrete instance of `K8sClusterS3BucketArrayInput` via:
//
//	K8sClusterS3BucketArray{ K8sClusterS3BucketArgs{...} }
type K8sClusterS3BucketArrayInput interface {
	pulumi.Input

	ToK8sClusterS3BucketArrayOutput() K8sClusterS3BucketArrayOutput
	ToK8sClusterS3BucketArrayOutputWithContext(context.Context) K8sClusterS3BucketArrayOutput
}

type K8sClusterS3BucketArray []K8sClusterS3BucketInput

func (K8sClusterS3BucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]K8sClusterS3Bucket)(nil)).Elem()
}

func (i K8sClusterS3BucketArray) ToK8sClusterS3BucketArrayOutput() K8sClusterS3BucketArrayOutput {
	return i.ToK8sClusterS3BucketArrayOutputWithContext(context.Background())
}

func (i K8sClusterS3BucketArray) ToK8sClusterS3BucketArrayOutputWithContext(ctx context.Context) K8sClusterS3BucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sClusterS3BucketArrayOutput)
}

type K8sClusterS3BucketOutput struct{ *pulumi.OutputState }

func (K8sClusterS3BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sClusterS3Bucket)(nil)).Elem()
}

func (o K8sClusterS3BucketOutput) ToK8sClusterS3BucketOutput() K8sClusterS3BucketOutput {
	return o
}

func (o K8sClusterS3BucketOutput) ToK8sClusterS3BucketOutputWithContext(ctx context.Context) K8sClusterS3BucketOutput {
	return o
}

// [string] The name of the Kubernetes Cluster.
func (o K8sClusterS3BucketOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v K8sClusterS3Bucket) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type K8sClusterS3BucketArrayOutput struct{ *pulumi.OutputState }

func (K8sClusterS3BucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]K8sClusterS3Bucket)(nil)).Elem()
}

func (o K8sClusterS3BucketArrayOutput) ToK8sClusterS3BucketArrayOutput() K8sClusterS3BucketArrayOutput {
	return o
}

func (o K8sClusterS3BucketArrayOutput) ToK8sClusterS3BucketArrayOutputWithContext(ctx context.Context) K8sClusterS3BucketArrayOutput {
	return o
}

func (o K8sClusterS3BucketArrayOutput) Index(i pulumi.IntInput) K8sClusterS3BucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) K8sClusterS3Bucket {
		return vs[0].([]K8sClusterS3Bucket)[vs[1].(int)]
	}).(K8sClusterS3BucketOutput)
}

type K8sNodePoolAutoScaling struct {
	// [int] The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// [int] The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count
	MinNodeCount int `pulumi:"minNodeCount"`
}

// K8sNodePoolAutoScalingInput is an input type that accepts K8sNodePoolAutoScalingArgs and K8sNodePoolAutoScalingOutput values.
// You can construct a concrete instance of `K8sNodePoolAutoScalingInput` via:
//
//	K8sNodePoolAutoScalingArgs{...}
type K8sNodePoolAutoScalingInput interface {
	pulumi.Input

	ToK8sNodePoolAutoScalingOutput() K8sNodePoolAutoScalingOutput
	ToK8sNodePoolAutoScalingOutputWithContext(context.Context) K8sNodePoolAutoScalingOutput
}

type K8sNodePoolAutoScalingArgs struct {
	// [int] The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// [int] The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (K8sNodePoolAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sNodePoolAutoScaling)(nil)).Elem()
}

func (i K8sNodePoolAutoScalingArgs) ToK8sNodePoolAutoScalingOutput() K8sNodePoolAutoScalingOutput {
	return i.ToK8sNodePoolAutoScalingOutputWithContext(context.Background())
}

func (i K8sNodePoolAutoScalingArgs) ToK8sNodePoolAutoScalingOutputWithContext(ctx context.Context) K8sNodePoolAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNodePoolAutoScalingOutput)
}

func (i K8sNodePoolAutoScalingArgs) ToK8sNodePoolAutoScalingPtrOutput() K8sNodePoolAutoScalingPtrOutput {
	return i.ToK8sNodePoolAutoScalingPtrOutputWithContext(context.Background())
}

func (i K8sNodePoolAutoScalingArgs) ToK8sNodePoolAutoScalingPtrOutputWithContext(ctx context.Context) K8sNodePoolAutoScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNodePoolAutoScalingOutput).ToK8sNodePoolAutoScalingPtrOutputWithContext(ctx)
}

// K8sNodePoolAutoScalingPtrInput is an input type that accepts K8sNodePoolAutoScalingArgs, K8sNodePoolAutoScalingPtr and K8sNodePoolAutoScalingPtrOutput values.
// You can construct a concrete instance of `K8sNodePoolAutoScalingPtrInput` via:
//
//	        K8sNodePoolAutoScalingArgs{...}
//
//	or:
//
//	        nil
type K8sNodePoolAutoScalingPtrInput interface {
	pulumi.Input

	ToK8sNodePoolAutoScalingPtrOutput() K8sNodePoolAutoScalingPtrOutput
	ToK8sNodePoolAutoScalingPtrOutputWithContext(context.Context) K8sNodePoolAutoScalingPtrOutput
}

type k8sNodePoolAutoScalingPtrType K8sNodePoolAutoScalingArgs

func K8sNodePoolAutoScalingPtr(v *K8sNodePoolAutoScalingArgs) K8sNodePoolAutoScalingPtrInput {
	return (*k8sNodePoolAutoScalingPtrType)(v)
}

func (*k8sNodePoolAutoScalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sNodePoolAutoScaling)(nil)).Elem()
}

func (i *k8sNodePoolAutoScalingPtrType) ToK8sNodePoolAutoScalingPtrOutput() K8sNodePoolAutoScalingPtrOutput {
	return i.ToK8sNodePoolAutoScalingPtrOutputWithContext(context.Background())
}

func (i *k8sNodePoolAutoScalingPtrType) ToK8sNodePoolAutoScalingPtrOutputWithContext(ctx context.Context) K8sNodePoolAutoScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNodePoolAutoScalingPtrOutput)
}

type K8sNodePoolAutoScalingOutput struct{ *pulumi.OutputState }

func (K8sNodePoolAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sNodePoolAutoScaling)(nil)).Elem()
}

func (o K8sNodePoolAutoScalingOutput) ToK8sNodePoolAutoScalingOutput() K8sNodePoolAutoScalingOutput {
	return o
}

func (o K8sNodePoolAutoScalingOutput) ToK8sNodePoolAutoScalingOutputWithContext(ctx context.Context) K8sNodePoolAutoScalingOutput {
	return o
}

func (o K8sNodePoolAutoScalingOutput) ToK8sNodePoolAutoScalingPtrOutput() K8sNodePoolAutoScalingPtrOutput {
	return o.ToK8sNodePoolAutoScalingPtrOutputWithContext(context.Background())
}

func (o K8sNodePoolAutoScalingOutput) ToK8sNodePoolAutoScalingPtrOutputWithContext(ctx context.Context) K8sNodePoolAutoScalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v K8sNodePoolAutoScaling) *K8sNodePoolAutoScaling {
		return &v
	}).(K8sNodePoolAutoScalingPtrOutput)
}

// [int] The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count
func (o K8sNodePoolAutoScalingOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v K8sNodePoolAutoScaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// [int] The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count
func (o K8sNodePoolAutoScalingOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v K8sNodePoolAutoScaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type K8sNodePoolAutoScalingPtrOutput struct{ *pulumi.OutputState }

func (K8sNodePoolAutoScalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sNodePoolAutoScaling)(nil)).Elem()
}

func (o K8sNodePoolAutoScalingPtrOutput) ToK8sNodePoolAutoScalingPtrOutput() K8sNodePoolAutoScalingPtrOutput {
	return o
}

func (o K8sNodePoolAutoScalingPtrOutput) ToK8sNodePoolAutoScalingPtrOutputWithContext(ctx context.Context) K8sNodePoolAutoScalingPtrOutput {
	return o
}

func (o K8sNodePoolAutoScalingPtrOutput) Elem() K8sNodePoolAutoScalingOutput {
	return o.ApplyT(func(v *K8sNodePoolAutoScaling) K8sNodePoolAutoScaling {
		if v != nil {
			return *v
		}
		var ret K8sNodePoolAutoScaling
		return ret
	}).(K8sNodePoolAutoScalingOutput)
}

// [int] The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count
func (o K8sNodePoolAutoScalingPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *K8sNodePoolAutoScaling) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// [int] The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count
func (o K8sNodePoolAutoScalingPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *K8sNodePoolAutoScaling) *int {
		if v == nil {
			return nil
		}
		return &v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

type K8sNodePoolLan struct {
	// [boolean] Indicates if the Kubernetes Node Pool LAN will reserve an IP using DHCP. Default value is `true`
	Dhcp *bool `pulumi:"dhcp"`
	// [int] The LAN ID of an existing LAN at the related datacenter
	Id int `pulumi:"id"`
	// An array of additional LANs attached to worker nodes
	Routes []K8sNodePoolLanRoute `pulumi:"routes"`
}

// K8sNodePoolLanInput is an input type that accepts K8sNodePoolLanArgs and K8sNodePoolLanOutput values.
// You can construct a concrete instance of `K8sNodePoolLanInput` via:
//
//	K8sNodePoolLanArgs{...}
type K8sNodePoolLanInput interface {
	pulumi.Input

	ToK8sNodePoolLanOutput() K8sNodePoolLanOutput
	ToK8sNodePoolLanOutputWithContext(context.Context) K8sNodePoolLanOutput
}

type K8sNodePoolLanArgs struct {
	// [boolean] Indicates if the Kubernetes Node Pool LAN will reserve an IP using DHCP. Default value is `true`
	Dhcp pulumi.BoolPtrInput `pulumi:"dhcp"`
	// [int] The LAN ID of an existing LAN at the related datacenter
	Id pulumi.IntInput `pulumi:"id"`
	// An array of additional LANs attached to worker nodes
	Routes K8sNodePoolLanRouteArrayInput `pulumi:"routes"`
}

func (K8sNodePoolLanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sNodePoolLan)(nil)).Elem()
}

func (i K8sNodePoolLanArgs) ToK8sNodePoolLanOutput() K8sNodePoolLanOutput {
	return i.ToK8sNodePoolLanOutputWithContext(context.Background())
}

func (i K8sNodePoolLanArgs) ToK8sNodePoolLanOutputWithContext(ctx context.Context) K8sNodePoolLanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNodePoolLanOutput)
}

// K8sNodePoolLanArrayInput is an input type that accepts K8sNodePoolLanArray and K8sNodePoolLanArrayOutput values.
// You can construct a concrete instance of `K8sNodePoolLanArrayInput` via:
//
//	K8sNodePoolLanArray{ K8sNodePoolLanArgs{...} }
type K8sNodePoolLanArrayInput interface {
	pulumi.Input

	ToK8sNodePoolLanArrayOutput() K8sNodePoolLanArrayOutput
	ToK8sNodePoolLanArrayOutputWithContext(context.Context) K8sNodePoolLanArrayOutput
}

type K8sNodePoolLanArray []K8sNodePoolLanInput

func (K8sNodePoolLanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]K8sNodePoolLan)(nil)).Elem()
}

func (i K8sNodePoolLanArray) ToK8sNodePoolLanArrayOutput() K8sNodePoolLanArrayOutput {
	return i.ToK8sNodePoolLanArrayOutputWithContext(context.Background())
}

func (i K8sNodePoolLanArray) ToK8sNodePoolLanArrayOutputWithContext(ctx context.Context) K8sNodePoolLanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNodePoolLanArrayOutput)
}

type K8sNodePoolLanOutput struct{ *pulumi.OutputState }

func (K8sNodePoolLanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sNodePoolLan)(nil)).Elem()
}

func (o K8sNodePoolLanOutput) ToK8sNodePoolLanOutput() K8sNodePoolLanOutput {
	return o
}

func (o K8sNodePoolLanOutput) ToK8sNodePoolLanOutputWithContext(ctx context.Context) K8sNodePoolLanOutput {
	return o
}

// [boolean] Indicates if the Kubernetes Node Pool LAN will reserve an IP using DHCP. Default value is `true`
func (o K8sNodePoolLanOutput) Dhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v K8sNodePoolLan) *bool { return v.Dhcp }).(pulumi.BoolPtrOutput)
}

// [int] The LAN ID of an existing LAN at the related datacenter
func (o K8sNodePoolLanOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v K8sNodePoolLan) int { return v.Id }).(pulumi.IntOutput)
}

// An array of additional LANs attached to worker nodes
func (o K8sNodePoolLanOutput) Routes() K8sNodePoolLanRouteArrayOutput {
	return o.ApplyT(func(v K8sNodePoolLan) []K8sNodePoolLanRoute { return v.Routes }).(K8sNodePoolLanRouteArrayOutput)
}

type K8sNodePoolLanArrayOutput struct{ *pulumi.OutputState }

func (K8sNodePoolLanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]K8sNodePoolLan)(nil)).Elem()
}

func (o K8sNodePoolLanArrayOutput) ToK8sNodePoolLanArrayOutput() K8sNodePoolLanArrayOutput {
	return o
}

func (o K8sNodePoolLanArrayOutput) ToK8sNodePoolLanArrayOutputWithContext(ctx context.Context) K8sNodePoolLanArrayOutput {
	return o
}

func (o K8sNodePoolLanArrayOutput) Index(i pulumi.IntInput) K8sNodePoolLanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) K8sNodePoolLan {
		return vs[0].([]K8sNodePoolLan)[vs[1].(int)]
	}).(K8sNodePoolLanOutput)
}

type K8sNodePoolLanRoute struct {
	// [string] IPv4 or IPv6 Gateway IP for the route
	GatewayIp string `pulumi:"gatewayIp"`
	// [string] IPv4 or IPv6 CIDR to be routed via the interface
	Network string `pulumi:"network"`
}

// K8sNodePoolLanRouteInput is an input type that accepts K8sNodePoolLanRouteArgs and K8sNodePoolLanRouteOutput values.
// You can construct a concrete instance of `K8sNodePoolLanRouteInput` via:
//
//	K8sNodePoolLanRouteArgs{...}
type K8sNodePoolLanRouteInput interface {
	pulumi.Input

	ToK8sNodePoolLanRouteOutput() K8sNodePoolLanRouteOutput
	ToK8sNodePoolLanRouteOutputWithContext(context.Context) K8sNodePoolLanRouteOutput
}

type K8sNodePoolLanRouteArgs struct {
	// [string] IPv4 or IPv6 Gateway IP for the route
	GatewayIp pulumi.StringInput `pulumi:"gatewayIp"`
	// [string] IPv4 or IPv6 CIDR to be routed via the interface
	Network pulumi.StringInput `pulumi:"network"`
}

func (K8sNodePoolLanRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sNodePoolLanRoute)(nil)).Elem()
}

func (i K8sNodePoolLanRouteArgs) ToK8sNodePoolLanRouteOutput() K8sNodePoolLanRouteOutput {
	return i.ToK8sNodePoolLanRouteOutputWithContext(context.Background())
}

func (i K8sNodePoolLanRouteArgs) ToK8sNodePoolLanRouteOutputWithContext(ctx context.Context) K8sNodePoolLanRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNodePoolLanRouteOutput)
}

// K8sNodePoolLanRouteArrayInput is an input type that accepts K8sNodePoolLanRouteArray and K8sNodePoolLanRouteArrayOutput values.
// You can construct a concrete instance of `K8sNodePoolLanRouteArrayInput` via:
//
//	K8sNodePoolLanRouteArray{ K8sNodePoolLanRouteArgs{...} }
type K8sNodePoolLanRouteArrayInput interface {
	pulumi.Input

	ToK8sNodePoolLanRouteArrayOutput() K8sNodePoolLanRouteArrayOutput
	ToK8sNodePoolLanRouteArrayOutputWithContext(context.Context) K8sNodePoolLanRouteArrayOutput
}

type K8sNodePoolLanRouteArray []K8sNodePoolLanRouteInput

func (K8sNodePoolLanRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]K8sNodePoolLanRoute)(nil)).Elem()
}

func (i K8sNodePoolLanRouteArray) ToK8sNodePoolLanRouteArrayOutput() K8sNodePoolLanRouteArrayOutput {
	return i.ToK8sNodePoolLanRouteArrayOutputWithContext(context.Background())
}

func (i K8sNodePoolLanRouteArray) ToK8sNodePoolLanRouteArrayOutputWithContext(ctx context.Context) K8sNodePoolLanRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNodePoolLanRouteArrayOutput)
}

type K8sNodePoolLanRouteOutput struct{ *pulumi.OutputState }

func (K8sNodePoolLanRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sNodePoolLanRoute)(nil)).Elem()
}

func (o K8sNodePoolLanRouteOutput) ToK8sNodePoolLanRouteOutput() K8sNodePoolLanRouteOutput {
	return o
}

func (o K8sNodePoolLanRouteOutput) ToK8sNodePoolLanRouteOutputWithContext(ctx context.Context) K8sNodePoolLanRouteOutput {
	return o
}

// [string] IPv4 or IPv6 Gateway IP for the route
func (o K8sNodePoolLanRouteOutput) GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v K8sNodePoolLanRoute) string { return v.GatewayIp }).(pulumi.StringOutput)
}

// [string] IPv4 or IPv6 CIDR to be routed via the interface
func (o K8sNodePoolLanRouteOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v K8sNodePoolLanRoute) string { return v.Network }).(pulumi.StringOutput)
}

type K8sNodePoolLanRouteArrayOutput struct{ *pulumi.OutputState }

func (K8sNodePoolLanRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]K8sNodePoolLanRoute)(nil)).Elem()
}

func (o K8sNodePoolLanRouteArrayOutput) ToK8sNodePoolLanRouteArrayOutput() K8sNodePoolLanRouteArrayOutput {
	return o
}

func (o K8sNodePoolLanRouteArrayOutput) ToK8sNodePoolLanRouteArrayOutputWithContext(ctx context.Context) K8sNodePoolLanRouteArrayOutput {
	return o
}

func (o K8sNodePoolLanRouteArrayOutput) Index(i pulumi.IntInput) K8sNodePoolLanRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) K8sNodePoolLanRoute {
		return vs[0].([]K8sNodePoolLanRoute)[vs[1].(int)]
	}).(K8sNodePoolLanRouteOutput)
}

type K8sNodePoolMaintenanceWindow struct {
	// [string] Day of the week when maintenance is allowed
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// [string] A clock time in the day when maintenance is allowed
	Time string `pulumi:"time"`
}

// K8sNodePoolMaintenanceWindowInput is an input type that accepts K8sNodePoolMaintenanceWindowArgs and K8sNodePoolMaintenanceWindowOutput values.
// You can construct a concrete instance of `K8sNodePoolMaintenanceWindowInput` via:
//
//	K8sNodePoolMaintenanceWindowArgs{...}
type K8sNodePoolMaintenanceWindowInput interface {
	pulumi.Input

	ToK8sNodePoolMaintenanceWindowOutput() K8sNodePoolMaintenanceWindowOutput
	ToK8sNodePoolMaintenanceWindowOutputWithContext(context.Context) K8sNodePoolMaintenanceWindowOutput
}

type K8sNodePoolMaintenanceWindowArgs struct {
	// [string] Day of the week when maintenance is allowed
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// [string] A clock time in the day when maintenance is allowed
	Time pulumi.StringInput `pulumi:"time"`
}

func (K8sNodePoolMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sNodePoolMaintenanceWindow)(nil)).Elem()
}

func (i K8sNodePoolMaintenanceWindowArgs) ToK8sNodePoolMaintenanceWindowOutput() K8sNodePoolMaintenanceWindowOutput {
	return i.ToK8sNodePoolMaintenanceWindowOutputWithContext(context.Background())
}

func (i K8sNodePoolMaintenanceWindowArgs) ToK8sNodePoolMaintenanceWindowOutputWithContext(ctx context.Context) K8sNodePoolMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNodePoolMaintenanceWindowOutput)
}

func (i K8sNodePoolMaintenanceWindowArgs) ToK8sNodePoolMaintenanceWindowPtrOutput() K8sNodePoolMaintenanceWindowPtrOutput {
	return i.ToK8sNodePoolMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i K8sNodePoolMaintenanceWindowArgs) ToK8sNodePoolMaintenanceWindowPtrOutputWithContext(ctx context.Context) K8sNodePoolMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNodePoolMaintenanceWindowOutput).ToK8sNodePoolMaintenanceWindowPtrOutputWithContext(ctx)
}

// K8sNodePoolMaintenanceWindowPtrInput is an input type that accepts K8sNodePoolMaintenanceWindowArgs, K8sNodePoolMaintenanceWindowPtr and K8sNodePoolMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `K8sNodePoolMaintenanceWindowPtrInput` via:
//
//	        K8sNodePoolMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type K8sNodePoolMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToK8sNodePoolMaintenanceWindowPtrOutput() K8sNodePoolMaintenanceWindowPtrOutput
	ToK8sNodePoolMaintenanceWindowPtrOutputWithContext(context.Context) K8sNodePoolMaintenanceWindowPtrOutput
}

type k8sNodePoolMaintenanceWindowPtrType K8sNodePoolMaintenanceWindowArgs

func K8sNodePoolMaintenanceWindowPtr(v *K8sNodePoolMaintenanceWindowArgs) K8sNodePoolMaintenanceWindowPtrInput {
	return (*k8sNodePoolMaintenanceWindowPtrType)(v)
}

func (*k8sNodePoolMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sNodePoolMaintenanceWindow)(nil)).Elem()
}

func (i *k8sNodePoolMaintenanceWindowPtrType) ToK8sNodePoolMaintenanceWindowPtrOutput() K8sNodePoolMaintenanceWindowPtrOutput {
	return i.ToK8sNodePoolMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *k8sNodePoolMaintenanceWindowPtrType) ToK8sNodePoolMaintenanceWindowPtrOutputWithContext(ctx context.Context) K8sNodePoolMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNodePoolMaintenanceWindowPtrOutput)
}

type K8sNodePoolMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (K8sNodePoolMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*K8sNodePoolMaintenanceWindow)(nil)).Elem()
}

func (o K8sNodePoolMaintenanceWindowOutput) ToK8sNodePoolMaintenanceWindowOutput() K8sNodePoolMaintenanceWindowOutput {
	return o
}

func (o K8sNodePoolMaintenanceWindowOutput) ToK8sNodePoolMaintenanceWindowOutputWithContext(ctx context.Context) K8sNodePoolMaintenanceWindowOutput {
	return o
}

func (o K8sNodePoolMaintenanceWindowOutput) ToK8sNodePoolMaintenanceWindowPtrOutput() K8sNodePoolMaintenanceWindowPtrOutput {
	return o.ToK8sNodePoolMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o K8sNodePoolMaintenanceWindowOutput) ToK8sNodePoolMaintenanceWindowPtrOutputWithContext(ctx context.Context) K8sNodePoolMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v K8sNodePoolMaintenanceWindow) *K8sNodePoolMaintenanceWindow {
		return &v
	}).(K8sNodePoolMaintenanceWindowPtrOutput)
}

// [string] Day of the week when maintenance is allowed
func (o K8sNodePoolMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v K8sNodePoolMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// [string] A clock time in the day when maintenance is allowed
func (o K8sNodePoolMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v K8sNodePoolMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type K8sNodePoolMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (K8sNodePoolMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sNodePoolMaintenanceWindow)(nil)).Elem()
}

func (o K8sNodePoolMaintenanceWindowPtrOutput) ToK8sNodePoolMaintenanceWindowPtrOutput() K8sNodePoolMaintenanceWindowPtrOutput {
	return o
}

func (o K8sNodePoolMaintenanceWindowPtrOutput) ToK8sNodePoolMaintenanceWindowPtrOutputWithContext(ctx context.Context) K8sNodePoolMaintenanceWindowPtrOutput {
	return o
}

func (o K8sNodePoolMaintenanceWindowPtrOutput) Elem() K8sNodePoolMaintenanceWindowOutput {
	return o.ApplyT(func(v *K8sNodePoolMaintenanceWindow) K8sNodePoolMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret K8sNodePoolMaintenanceWindow
		return ret
	}).(K8sNodePoolMaintenanceWindowOutput)
}

// [string] Day of the week when maintenance is allowed
func (o K8sNodePoolMaintenanceWindowPtrOutput) DayOfTheWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sNodePoolMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfTheWeek
	}).(pulumi.StringPtrOutput)
}

// [string] A clock time in the day when maintenance is allowed
func (o K8sNodePoolMaintenanceWindowPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sNodePoolMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*K8sClusterMaintenanceWindowInput)(nil)).Elem(), K8sClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sClusterMaintenanceWindowPtrInput)(nil)).Elem(), K8sClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sClusterS3BucketInput)(nil)).Elem(), K8sClusterS3BucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sClusterS3BucketArrayInput)(nil)).Elem(), K8sClusterS3BucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sNodePoolAutoScalingInput)(nil)).Elem(), K8sNodePoolAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sNodePoolAutoScalingPtrInput)(nil)).Elem(), K8sNodePoolAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sNodePoolLanInput)(nil)).Elem(), K8sNodePoolLanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sNodePoolLanArrayInput)(nil)).Elem(), K8sNodePoolLanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sNodePoolLanRouteInput)(nil)).Elem(), K8sNodePoolLanRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sNodePoolLanRouteArrayInput)(nil)).Elem(), K8sNodePoolLanRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sNodePoolMaintenanceWindowInput)(nil)).Elem(), K8sNodePoolMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sNodePoolMaintenanceWindowPtrInput)(nil)).Elem(), K8sNodePoolMaintenanceWindowArgs{})
	pulumi.RegisterOutputType(K8sClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(K8sClusterMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(K8sClusterS3BucketOutput{})
	pulumi.RegisterOutputType(K8sClusterS3BucketArrayOutput{})
	pulumi.RegisterOutputType(K8sNodePoolAutoScalingOutput{})
	pulumi.RegisterOutputType(K8sNodePoolAutoScalingPtrOutput{})
	pulumi.RegisterOutputType(K8sNodePoolLanOutput{})
	pulumi.RegisterOutputType(K8sNodePoolLanArrayOutput{})
	pulumi.RegisterOutputType(K8sNodePoolLanRouteOutput{})
	pulumi.RegisterOutputType(K8sNodePoolLanRouteArrayOutput{})
	pulumi.RegisterOutputType(K8sNodePoolMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(K8sNodePoolMaintenanceWindowPtrOutput{})
}
