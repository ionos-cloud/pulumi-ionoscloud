// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package k8s

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterMaintenanceWindow struct {
	// [string] Day of the week when maintenance is allowed
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// [string] A clock time in the day when maintenance is allowed
	Time string `pulumi:"time"`
}

// ClusterMaintenanceWindowInput is an input type that accepts ClusterMaintenanceWindowArgs and ClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `ClusterMaintenanceWindowInput` via:
//
//	ClusterMaintenanceWindowArgs{...}
type ClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToClusterMaintenanceWindowOutput() ClusterMaintenanceWindowOutput
	ToClusterMaintenanceWindowOutputWithContext(context.Context) ClusterMaintenanceWindowOutput
}

type ClusterMaintenanceWindowArgs struct {
	// [string] Day of the week when maintenance is allowed
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// [string] A clock time in the day when maintenance is allowed
	Time pulumi.StringInput `pulumi:"time"`
}

func (ClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenanceWindow)(nil)).Elem()
}

func (i ClusterMaintenanceWindowArgs) ToClusterMaintenanceWindowOutput() ClusterMaintenanceWindowOutput {
	return i.ToClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenanceWindowArgs) ToClusterMaintenanceWindowOutputWithContext(ctx context.Context) ClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenanceWindowOutput)
}

func (i ClusterMaintenanceWindowArgs) ToClusterMaintenanceWindowPtrOutput() ClusterMaintenanceWindowPtrOutput {
	return i.ToClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenanceWindowArgs) ToClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenanceWindowOutput).ToClusterMaintenanceWindowPtrOutputWithContext(ctx)
}

// ClusterMaintenanceWindowPtrInput is an input type that accepts ClusterMaintenanceWindowArgs, ClusterMaintenanceWindowPtr and ClusterMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenanceWindowPtrInput` via:
//
//	        ClusterMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type ClusterMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToClusterMaintenanceWindowPtrOutput() ClusterMaintenanceWindowPtrOutput
	ToClusterMaintenanceWindowPtrOutputWithContext(context.Context) ClusterMaintenanceWindowPtrOutput
}

type clusterMaintenanceWindowPtrType ClusterMaintenanceWindowArgs

func ClusterMaintenanceWindowPtr(v *ClusterMaintenanceWindowArgs) ClusterMaintenanceWindowPtrInput {
	return (*clusterMaintenanceWindowPtrType)(v)
}

func (*clusterMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenanceWindow)(nil)).Elem()
}

func (i *clusterMaintenanceWindowPtrType) ToClusterMaintenanceWindowPtrOutput() ClusterMaintenanceWindowPtrOutput {
	return i.ToClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenanceWindowPtrType) ToClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenanceWindowPtrOutput)
}

type ClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenanceWindow)(nil)).Elem()
}

func (o ClusterMaintenanceWindowOutput) ToClusterMaintenanceWindowOutput() ClusterMaintenanceWindowOutput {
	return o
}

func (o ClusterMaintenanceWindowOutput) ToClusterMaintenanceWindowOutputWithContext(ctx context.Context) ClusterMaintenanceWindowOutput {
	return o
}

func (o ClusterMaintenanceWindowOutput) ToClusterMaintenanceWindowPtrOutput() ClusterMaintenanceWindowPtrOutput {
	return o.ToClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenanceWindowOutput) ToClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMaintenanceWindow) *ClusterMaintenanceWindow {
		return &v
	}).(ClusterMaintenanceWindowPtrOutput)
}

// [string] Day of the week when maintenance is allowed
func (o ClusterMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// [string] A clock time in the day when maintenance is allowed
func (o ClusterMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type ClusterMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenanceWindow)(nil)).Elem()
}

func (o ClusterMaintenanceWindowPtrOutput) ToClusterMaintenanceWindowPtrOutput() ClusterMaintenanceWindowPtrOutput {
	return o
}

func (o ClusterMaintenanceWindowPtrOutput) ToClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenanceWindowPtrOutput {
	return o
}

func (o ClusterMaintenanceWindowPtrOutput) Elem() ClusterMaintenanceWindowOutput {
	return o.ApplyT(func(v *ClusterMaintenanceWindow) ClusterMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret ClusterMaintenanceWindow
		return ret
	}).(ClusterMaintenanceWindowOutput)
}

// [string] Day of the week when maintenance is allowed
func (o ClusterMaintenanceWindowPtrOutput) DayOfTheWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfTheWeek
	}).(pulumi.StringPtrOutput)
}

// [string] A clock time in the day when maintenance is allowed
func (o ClusterMaintenanceWindowPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

type ClusterS3Bucket struct {
	// [string] The name of the Kubernetes Cluster.
	Name *string `pulumi:"name"`
}

// ClusterS3BucketInput is an input type that accepts ClusterS3BucketArgs and ClusterS3BucketOutput values.
// You can construct a concrete instance of `ClusterS3BucketInput` via:
//
//	ClusterS3BucketArgs{...}
type ClusterS3BucketInput interface {
	pulumi.Input

	ToClusterS3BucketOutput() ClusterS3BucketOutput
	ToClusterS3BucketOutputWithContext(context.Context) ClusterS3BucketOutput
}

type ClusterS3BucketArgs struct {
	// [string] The name of the Kubernetes Cluster.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ClusterS3BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterS3Bucket)(nil)).Elem()
}

func (i ClusterS3BucketArgs) ToClusterS3BucketOutput() ClusterS3BucketOutput {
	return i.ToClusterS3BucketOutputWithContext(context.Background())
}

func (i ClusterS3BucketArgs) ToClusterS3BucketOutputWithContext(ctx context.Context) ClusterS3BucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterS3BucketOutput)
}

// ClusterS3BucketArrayInput is an input type that accepts ClusterS3BucketArray and ClusterS3BucketArrayOutput values.
// You can construct a concrete instance of `ClusterS3BucketArrayInput` via:
//
//	ClusterS3BucketArray{ ClusterS3BucketArgs{...} }
type ClusterS3BucketArrayInput interface {
	pulumi.Input

	ToClusterS3BucketArrayOutput() ClusterS3BucketArrayOutput
	ToClusterS3BucketArrayOutputWithContext(context.Context) ClusterS3BucketArrayOutput
}

type ClusterS3BucketArray []ClusterS3BucketInput

func (ClusterS3BucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterS3Bucket)(nil)).Elem()
}

func (i ClusterS3BucketArray) ToClusterS3BucketArrayOutput() ClusterS3BucketArrayOutput {
	return i.ToClusterS3BucketArrayOutputWithContext(context.Background())
}

func (i ClusterS3BucketArray) ToClusterS3BucketArrayOutputWithContext(ctx context.Context) ClusterS3BucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterS3BucketArrayOutput)
}

type ClusterS3BucketOutput struct{ *pulumi.OutputState }

func (ClusterS3BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterS3Bucket)(nil)).Elem()
}

func (o ClusterS3BucketOutput) ToClusterS3BucketOutput() ClusterS3BucketOutput {
	return o
}

func (o ClusterS3BucketOutput) ToClusterS3BucketOutputWithContext(ctx context.Context) ClusterS3BucketOutput {
	return o
}

// [string] The name of the Kubernetes Cluster.
func (o ClusterS3BucketOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterS3Bucket) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ClusterS3BucketArrayOutput struct{ *pulumi.OutputState }

func (ClusterS3BucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterS3Bucket)(nil)).Elem()
}

func (o ClusterS3BucketArrayOutput) ToClusterS3BucketArrayOutput() ClusterS3BucketArrayOutput {
	return o
}

func (o ClusterS3BucketArrayOutput) ToClusterS3BucketArrayOutputWithContext(ctx context.Context) ClusterS3BucketArrayOutput {
	return o
}

func (o ClusterS3BucketArrayOutput) Index(i pulumi.IntInput) ClusterS3BucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterS3Bucket {
		return vs[0].([]ClusterS3Bucket)[vs[1].(int)]
	}).(ClusterS3BucketOutput)
}

type NodePoolAutoScaling struct {
	// [int] The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// [int] The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count
	MinNodeCount int `pulumi:"minNodeCount"`
}

// NodePoolAutoScalingInput is an input type that accepts NodePoolAutoScalingArgs and NodePoolAutoScalingOutput values.
// You can construct a concrete instance of `NodePoolAutoScalingInput` via:
//
//	NodePoolAutoScalingArgs{...}
type NodePoolAutoScalingInput interface {
	pulumi.Input

	ToNodePoolAutoScalingOutput() NodePoolAutoScalingOutput
	ToNodePoolAutoScalingOutputWithContext(context.Context) NodePoolAutoScalingOutput
}

type NodePoolAutoScalingArgs struct {
	// [int] The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// [int] The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (NodePoolAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoScaling)(nil)).Elem()
}

func (i NodePoolAutoScalingArgs) ToNodePoolAutoScalingOutput() NodePoolAutoScalingOutput {
	return i.ToNodePoolAutoScalingOutputWithContext(context.Background())
}

func (i NodePoolAutoScalingArgs) ToNodePoolAutoScalingOutputWithContext(ctx context.Context) NodePoolAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoScalingOutput)
}

func (i NodePoolAutoScalingArgs) ToNodePoolAutoScalingPtrOutput() NodePoolAutoScalingPtrOutput {
	return i.ToNodePoolAutoScalingPtrOutputWithContext(context.Background())
}

func (i NodePoolAutoScalingArgs) ToNodePoolAutoScalingPtrOutputWithContext(ctx context.Context) NodePoolAutoScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoScalingOutput).ToNodePoolAutoScalingPtrOutputWithContext(ctx)
}

// NodePoolAutoScalingPtrInput is an input type that accepts NodePoolAutoScalingArgs, NodePoolAutoScalingPtr and NodePoolAutoScalingPtrOutput values.
// You can construct a concrete instance of `NodePoolAutoScalingPtrInput` via:
//
//	        NodePoolAutoScalingArgs{...}
//
//	or:
//
//	        nil
type NodePoolAutoScalingPtrInput interface {
	pulumi.Input

	ToNodePoolAutoScalingPtrOutput() NodePoolAutoScalingPtrOutput
	ToNodePoolAutoScalingPtrOutputWithContext(context.Context) NodePoolAutoScalingPtrOutput
}

type nodePoolAutoScalingPtrType NodePoolAutoScalingArgs

func NodePoolAutoScalingPtr(v *NodePoolAutoScalingArgs) NodePoolAutoScalingPtrInput {
	return (*nodePoolAutoScalingPtrType)(v)
}

func (*nodePoolAutoScalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolAutoScaling)(nil)).Elem()
}

func (i *nodePoolAutoScalingPtrType) ToNodePoolAutoScalingPtrOutput() NodePoolAutoScalingPtrOutput {
	return i.ToNodePoolAutoScalingPtrOutputWithContext(context.Background())
}

func (i *nodePoolAutoScalingPtrType) ToNodePoolAutoScalingPtrOutputWithContext(ctx context.Context) NodePoolAutoScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoScalingPtrOutput)
}

type NodePoolAutoScalingOutput struct{ *pulumi.OutputState }

func (NodePoolAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoScaling)(nil)).Elem()
}

func (o NodePoolAutoScalingOutput) ToNodePoolAutoScalingOutput() NodePoolAutoScalingOutput {
	return o
}

func (o NodePoolAutoScalingOutput) ToNodePoolAutoScalingOutputWithContext(ctx context.Context) NodePoolAutoScalingOutput {
	return o
}

func (o NodePoolAutoScalingOutput) ToNodePoolAutoScalingPtrOutput() NodePoolAutoScalingPtrOutput {
	return o.ToNodePoolAutoScalingPtrOutputWithContext(context.Background())
}

func (o NodePoolAutoScalingOutput) ToNodePoolAutoScalingPtrOutputWithContext(ctx context.Context) NodePoolAutoScalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolAutoScaling) *NodePoolAutoScaling {
		return &v
	}).(NodePoolAutoScalingPtrOutput)
}

// [int] The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count
func (o NodePoolAutoScalingOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolAutoScaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// [int] The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count
func (o NodePoolAutoScalingOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolAutoScaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type NodePoolAutoScalingPtrOutput struct{ *pulumi.OutputState }

func (NodePoolAutoScalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolAutoScaling)(nil)).Elem()
}

func (o NodePoolAutoScalingPtrOutput) ToNodePoolAutoScalingPtrOutput() NodePoolAutoScalingPtrOutput {
	return o
}

func (o NodePoolAutoScalingPtrOutput) ToNodePoolAutoScalingPtrOutputWithContext(ctx context.Context) NodePoolAutoScalingPtrOutput {
	return o
}

func (o NodePoolAutoScalingPtrOutput) Elem() NodePoolAutoScalingOutput {
	return o.ApplyT(func(v *NodePoolAutoScaling) NodePoolAutoScaling {
		if v != nil {
			return *v
		}
		var ret NodePoolAutoScaling
		return ret
	}).(NodePoolAutoScalingOutput)
}

// [int] The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count
func (o NodePoolAutoScalingPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScaling) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// [int] The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count
func (o NodePoolAutoScalingPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoScaling) *int {
		if v == nil {
			return nil
		}
		return &v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

type NodePoolLan struct {
	// [boolean] Indicates if the Kubernetes Node Pool LAN will reserve an IP using DHCP. Default value is `true`
	Dhcp *bool `pulumi:"dhcp"`
	// [int] The LAN ID of an existing LAN at the related datacenter
	Id int `pulumi:"id"`
	// An array of additional LANs attached to worker nodes
	Routes []NodePoolLanRoute `pulumi:"routes"`
}

// NodePoolLanInput is an input type that accepts NodePoolLanArgs and NodePoolLanOutput values.
// You can construct a concrete instance of `NodePoolLanInput` via:
//
//	NodePoolLanArgs{...}
type NodePoolLanInput interface {
	pulumi.Input

	ToNodePoolLanOutput() NodePoolLanOutput
	ToNodePoolLanOutputWithContext(context.Context) NodePoolLanOutput
}

type NodePoolLanArgs struct {
	// [boolean] Indicates if the Kubernetes Node Pool LAN will reserve an IP using DHCP. Default value is `true`
	Dhcp pulumi.BoolPtrInput `pulumi:"dhcp"`
	// [int] The LAN ID of an existing LAN at the related datacenter
	Id pulumi.IntInput `pulumi:"id"`
	// An array of additional LANs attached to worker nodes
	Routes NodePoolLanRouteArrayInput `pulumi:"routes"`
}

func (NodePoolLanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolLan)(nil)).Elem()
}

func (i NodePoolLanArgs) ToNodePoolLanOutput() NodePoolLanOutput {
	return i.ToNodePoolLanOutputWithContext(context.Background())
}

func (i NodePoolLanArgs) ToNodePoolLanOutputWithContext(ctx context.Context) NodePoolLanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolLanOutput)
}

// NodePoolLanArrayInput is an input type that accepts NodePoolLanArray and NodePoolLanArrayOutput values.
// You can construct a concrete instance of `NodePoolLanArrayInput` via:
//
//	NodePoolLanArray{ NodePoolLanArgs{...} }
type NodePoolLanArrayInput interface {
	pulumi.Input

	ToNodePoolLanArrayOutput() NodePoolLanArrayOutput
	ToNodePoolLanArrayOutputWithContext(context.Context) NodePoolLanArrayOutput
}

type NodePoolLanArray []NodePoolLanInput

func (NodePoolLanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolLan)(nil)).Elem()
}

func (i NodePoolLanArray) ToNodePoolLanArrayOutput() NodePoolLanArrayOutput {
	return i.ToNodePoolLanArrayOutputWithContext(context.Background())
}

func (i NodePoolLanArray) ToNodePoolLanArrayOutputWithContext(ctx context.Context) NodePoolLanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolLanArrayOutput)
}

type NodePoolLanOutput struct{ *pulumi.OutputState }

func (NodePoolLanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolLan)(nil)).Elem()
}

func (o NodePoolLanOutput) ToNodePoolLanOutput() NodePoolLanOutput {
	return o
}

func (o NodePoolLanOutput) ToNodePoolLanOutputWithContext(ctx context.Context) NodePoolLanOutput {
	return o
}

// [boolean] Indicates if the Kubernetes Node Pool LAN will reserve an IP using DHCP. Default value is `true`
func (o NodePoolLanOutput) Dhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolLan) *bool { return v.Dhcp }).(pulumi.BoolPtrOutput)
}

// [int] The LAN ID of an existing LAN at the related datacenter
func (o NodePoolLanOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolLan) int { return v.Id }).(pulumi.IntOutput)
}

// An array of additional LANs attached to worker nodes
func (o NodePoolLanOutput) Routes() NodePoolLanRouteArrayOutput {
	return o.ApplyT(func(v NodePoolLan) []NodePoolLanRoute { return v.Routes }).(NodePoolLanRouteArrayOutput)
}

type NodePoolLanArrayOutput struct{ *pulumi.OutputState }

func (NodePoolLanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolLan)(nil)).Elem()
}

func (o NodePoolLanArrayOutput) ToNodePoolLanArrayOutput() NodePoolLanArrayOutput {
	return o
}

func (o NodePoolLanArrayOutput) ToNodePoolLanArrayOutputWithContext(ctx context.Context) NodePoolLanArrayOutput {
	return o
}

func (o NodePoolLanArrayOutput) Index(i pulumi.IntInput) NodePoolLanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolLan {
		return vs[0].([]NodePoolLan)[vs[1].(int)]
	}).(NodePoolLanOutput)
}

type NodePoolLanRoute struct {
	// [string] IPv4 or IPv6 Gateway IP for the route
	GatewayIp string `pulumi:"gatewayIp"`
	// [string] IPv4 or IPv6 CIDR to be routed via the interface
	Network string `pulumi:"network"`
}

// NodePoolLanRouteInput is an input type that accepts NodePoolLanRouteArgs and NodePoolLanRouteOutput values.
// You can construct a concrete instance of `NodePoolLanRouteInput` via:
//
//	NodePoolLanRouteArgs{...}
type NodePoolLanRouteInput interface {
	pulumi.Input

	ToNodePoolLanRouteOutput() NodePoolLanRouteOutput
	ToNodePoolLanRouteOutputWithContext(context.Context) NodePoolLanRouteOutput
}

type NodePoolLanRouteArgs struct {
	// [string] IPv4 or IPv6 Gateway IP for the route
	GatewayIp pulumi.StringInput `pulumi:"gatewayIp"`
	// [string] IPv4 or IPv6 CIDR to be routed via the interface
	Network pulumi.StringInput `pulumi:"network"`
}

func (NodePoolLanRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolLanRoute)(nil)).Elem()
}

func (i NodePoolLanRouteArgs) ToNodePoolLanRouteOutput() NodePoolLanRouteOutput {
	return i.ToNodePoolLanRouteOutputWithContext(context.Background())
}

func (i NodePoolLanRouteArgs) ToNodePoolLanRouteOutputWithContext(ctx context.Context) NodePoolLanRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolLanRouteOutput)
}

// NodePoolLanRouteArrayInput is an input type that accepts NodePoolLanRouteArray and NodePoolLanRouteArrayOutput values.
// You can construct a concrete instance of `NodePoolLanRouteArrayInput` via:
//
//	NodePoolLanRouteArray{ NodePoolLanRouteArgs{...} }
type NodePoolLanRouteArrayInput interface {
	pulumi.Input

	ToNodePoolLanRouteArrayOutput() NodePoolLanRouteArrayOutput
	ToNodePoolLanRouteArrayOutputWithContext(context.Context) NodePoolLanRouteArrayOutput
}

type NodePoolLanRouteArray []NodePoolLanRouteInput

func (NodePoolLanRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolLanRoute)(nil)).Elem()
}

func (i NodePoolLanRouteArray) ToNodePoolLanRouteArrayOutput() NodePoolLanRouteArrayOutput {
	return i.ToNodePoolLanRouteArrayOutputWithContext(context.Background())
}

func (i NodePoolLanRouteArray) ToNodePoolLanRouteArrayOutputWithContext(ctx context.Context) NodePoolLanRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolLanRouteArrayOutput)
}

type NodePoolLanRouteOutput struct{ *pulumi.OutputState }

func (NodePoolLanRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolLanRoute)(nil)).Elem()
}

func (o NodePoolLanRouteOutput) ToNodePoolLanRouteOutput() NodePoolLanRouteOutput {
	return o
}

func (o NodePoolLanRouteOutput) ToNodePoolLanRouteOutputWithContext(ctx context.Context) NodePoolLanRouteOutput {
	return o
}

// [string] IPv4 or IPv6 Gateway IP for the route
func (o NodePoolLanRouteOutput) GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolLanRoute) string { return v.GatewayIp }).(pulumi.StringOutput)
}

// [string] IPv4 or IPv6 CIDR to be routed via the interface
func (o NodePoolLanRouteOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolLanRoute) string { return v.Network }).(pulumi.StringOutput)
}

type NodePoolLanRouteArrayOutput struct{ *pulumi.OutputState }

func (NodePoolLanRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolLanRoute)(nil)).Elem()
}

func (o NodePoolLanRouteArrayOutput) ToNodePoolLanRouteArrayOutput() NodePoolLanRouteArrayOutput {
	return o
}

func (o NodePoolLanRouteArrayOutput) ToNodePoolLanRouteArrayOutputWithContext(ctx context.Context) NodePoolLanRouteArrayOutput {
	return o
}

func (o NodePoolLanRouteArrayOutput) Index(i pulumi.IntInput) NodePoolLanRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolLanRoute {
		return vs[0].([]NodePoolLanRoute)[vs[1].(int)]
	}).(NodePoolLanRouteOutput)
}

type NodePoolMaintenanceWindow struct {
	// [string] Day of the week when maintenance is allowed
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// [string] A clock time in the day when maintenance is allowed
	Time string `pulumi:"time"`
}

// NodePoolMaintenanceWindowInput is an input type that accepts NodePoolMaintenanceWindowArgs and NodePoolMaintenanceWindowOutput values.
// You can construct a concrete instance of `NodePoolMaintenanceWindowInput` via:
//
//	NodePoolMaintenanceWindowArgs{...}
type NodePoolMaintenanceWindowInput interface {
	pulumi.Input

	ToNodePoolMaintenanceWindowOutput() NodePoolMaintenanceWindowOutput
	ToNodePoolMaintenanceWindowOutputWithContext(context.Context) NodePoolMaintenanceWindowOutput
}

type NodePoolMaintenanceWindowArgs struct {
	// [string] Day of the week when maintenance is allowed
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// [string] A clock time in the day when maintenance is allowed
	Time pulumi.StringInput `pulumi:"time"`
}

func (NodePoolMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolMaintenanceWindow)(nil)).Elem()
}

func (i NodePoolMaintenanceWindowArgs) ToNodePoolMaintenanceWindowOutput() NodePoolMaintenanceWindowOutput {
	return i.ToNodePoolMaintenanceWindowOutputWithContext(context.Background())
}

func (i NodePoolMaintenanceWindowArgs) ToNodePoolMaintenanceWindowOutputWithContext(ctx context.Context) NodePoolMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolMaintenanceWindowOutput)
}

func (i NodePoolMaintenanceWindowArgs) ToNodePoolMaintenanceWindowPtrOutput() NodePoolMaintenanceWindowPtrOutput {
	return i.ToNodePoolMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i NodePoolMaintenanceWindowArgs) ToNodePoolMaintenanceWindowPtrOutputWithContext(ctx context.Context) NodePoolMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolMaintenanceWindowOutput).ToNodePoolMaintenanceWindowPtrOutputWithContext(ctx)
}

// NodePoolMaintenanceWindowPtrInput is an input type that accepts NodePoolMaintenanceWindowArgs, NodePoolMaintenanceWindowPtr and NodePoolMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `NodePoolMaintenanceWindowPtrInput` via:
//
//	        NodePoolMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type NodePoolMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToNodePoolMaintenanceWindowPtrOutput() NodePoolMaintenanceWindowPtrOutput
	ToNodePoolMaintenanceWindowPtrOutputWithContext(context.Context) NodePoolMaintenanceWindowPtrOutput
}

type nodePoolMaintenanceWindowPtrType NodePoolMaintenanceWindowArgs

func NodePoolMaintenanceWindowPtr(v *NodePoolMaintenanceWindowArgs) NodePoolMaintenanceWindowPtrInput {
	return (*nodePoolMaintenanceWindowPtrType)(v)
}

func (*nodePoolMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolMaintenanceWindow)(nil)).Elem()
}

func (i *nodePoolMaintenanceWindowPtrType) ToNodePoolMaintenanceWindowPtrOutput() NodePoolMaintenanceWindowPtrOutput {
	return i.ToNodePoolMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *nodePoolMaintenanceWindowPtrType) ToNodePoolMaintenanceWindowPtrOutputWithContext(ctx context.Context) NodePoolMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolMaintenanceWindowPtrOutput)
}

type NodePoolMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (NodePoolMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolMaintenanceWindow)(nil)).Elem()
}

func (o NodePoolMaintenanceWindowOutput) ToNodePoolMaintenanceWindowOutput() NodePoolMaintenanceWindowOutput {
	return o
}

func (o NodePoolMaintenanceWindowOutput) ToNodePoolMaintenanceWindowOutputWithContext(ctx context.Context) NodePoolMaintenanceWindowOutput {
	return o
}

func (o NodePoolMaintenanceWindowOutput) ToNodePoolMaintenanceWindowPtrOutput() NodePoolMaintenanceWindowPtrOutput {
	return o.ToNodePoolMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o NodePoolMaintenanceWindowOutput) ToNodePoolMaintenanceWindowPtrOutputWithContext(ctx context.Context) NodePoolMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodePoolMaintenanceWindow) *NodePoolMaintenanceWindow {
		return &v
	}).(NodePoolMaintenanceWindowPtrOutput)
}

// [string] Day of the week when maintenance is allowed
func (o NodePoolMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// [string] A clock time in the day when maintenance is allowed
func (o NodePoolMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type NodePoolMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (NodePoolMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolMaintenanceWindow)(nil)).Elem()
}

func (o NodePoolMaintenanceWindowPtrOutput) ToNodePoolMaintenanceWindowPtrOutput() NodePoolMaintenanceWindowPtrOutput {
	return o
}

func (o NodePoolMaintenanceWindowPtrOutput) ToNodePoolMaintenanceWindowPtrOutputWithContext(ctx context.Context) NodePoolMaintenanceWindowPtrOutput {
	return o
}

func (o NodePoolMaintenanceWindowPtrOutput) Elem() NodePoolMaintenanceWindowOutput {
	return o.ApplyT(func(v *NodePoolMaintenanceWindow) NodePoolMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret NodePoolMaintenanceWindow
		return ret
	}).(NodePoolMaintenanceWindowOutput)
}

// [string] Day of the week when maintenance is allowed
func (o NodePoolMaintenanceWindowPtrOutput) DayOfTheWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfTheWeek
	}).(pulumi.StringPtrOutput)
}

// [string] A clock time in the day when maintenance is allowed
func (o NodePoolMaintenanceWindowPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenanceWindowInput)(nil)).Elem(), ClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMaintenanceWindowPtrInput)(nil)).Elem(), ClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterS3BucketInput)(nil)).Elem(), ClusterS3BucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterS3BucketArrayInput)(nil)).Elem(), ClusterS3BucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolAutoScalingInput)(nil)).Elem(), NodePoolAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolAutoScalingPtrInput)(nil)).Elem(), NodePoolAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolLanInput)(nil)).Elem(), NodePoolLanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolLanArrayInput)(nil)).Elem(), NodePoolLanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolLanRouteInput)(nil)).Elem(), NodePoolLanRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolLanRouteArrayInput)(nil)).Elem(), NodePoolLanRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolMaintenanceWindowInput)(nil)).Elem(), NodePoolMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolMaintenanceWindowPtrInput)(nil)).Elem(), NodePoolMaintenanceWindowArgs{})
	pulumi.RegisterOutputType(ClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(ClusterS3BucketOutput{})
	pulumi.RegisterOutputType(ClusterS3BucketArrayOutput{})
	pulumi.RegisterOutputType(NodePoolAutoScalingOutput{})
	pulumi.RegisterOutputType(NodePoolAutoScalingPtrOutput{})
	pulumi.RegisterOutputType(NodePoolLanOutput{})
	pulumi.RegisterOutputType(NodePoolLanArrayOutput{})
	pulumi.RegisterOutputType(NodePoolLanRouteOutput{})
	pulumi.RegisterOutputType(NodePoolLanRouteArrayOutput{})
	pulumi.RegisterOutputType(NodePoolMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(NodePoolMaintenanceWindowPtrOutput{})
}
