// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package k8s

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterResult
	err := ctx.Invoke("ionoscloud:k8s/getCluster:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCluster.
type LookupClusterArgs struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// A collection of values returned by getCluster.
type LookupClusterResult struct {
	ApiSubnetAllowLists      []string                      `pulumi:"apiSubnetAllowLists"`
	AvailableUpgradeVersions []string                      `pulumi:"availableUpgradeVersions"`
	CaCrt                    string                        `pulumi:"caCrt"`
	Configs                  []GetClusterConfig            `pulumi:"configs"`
	Id                       *string                       `pulumi:"id"`
	K8sVersion               string                        `pulumi:"k8sVersion"`
	KubeConfig               string                        `pulumi:"kubeConfig"`
	Location                 string                        `pulumi:"location"`
	MaintenanceWindows       []GetClusterMaintenanceWindow `pulumi:"maintenanceWindows"`
	Name                     *string                       `pulumi:"name"`
	NatGatewayIp             string                        `pulumi:"natGatewayIp"`
	NodePools                []string                      `pulumi:"nodePools"`
	NodeSubnet               string                        `pulumi:"nodeSubnet"`
	Public                   bool                          `pulumi:"public"`
	S3Buckets                []GetClusterS3Bucket          `pulumi:"s3Buckets"`
	Server                   string                        `pulumi:"server"`
	State                    string                        `pulumi:"state"`
	UserTokens               map[string]string             `pulumi:"userTokens"`
	ViableNodePoolVersions   []string                      `pulumi:"viableNodePoolVersions"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupClusterResultOutput, error) {
			args := v.(LookupClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:k8s/getCluster:getCluster", args, LookupClusterResultOutput{}, options).(LookupClusterResultOutput), nil
		}).(LookupClusterResultOutput)
}

// A collection of arguments for invoking getCluster.
type LookupClusterOutputArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

// A collection of values returned by getCluster.
type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ApiSubnetAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []string { return v.ApiSubnetAllowLists }).(pulumi.StringArrayOutput)
}

func (o LookupClusterResultOutput) AvailableUpgradeVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []string { return v.AvailableUpgradeVersions }).(pulumi.StringArrayOutput)
}

func (o LookupClusterResultOutput) CaCrt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.CaCrt }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) Configs() GetClusterConfigArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterConfig { return v.Configs }).(GetClusterConfigArrayOutput)
}

func (o LookupClusterResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupClusterResultOutput) K8sVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.K8sVersion }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) KubeConfig() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.KubeConfig }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) MaintenanceWindows() GetClusterMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterMaintenanceWindow { return v.MaintenanceWindows }).(GetClusterMaintenanceWindowArrayOutput)
}

func (o LookupClusterResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupClusterResultOutput) NatGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.NatGatewayIp }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) NodePools() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []string { return v.NodePools }).(pulumi.StringArrayOutput)
}

func (o LookupClusterResultOutput) NodeSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.NodeSubnet }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClusterResult) bool { return v.Public }).(pulumi.BoolOutput)
}

func (o LookupClusterResultOutput) S3Buckets() GetClusterS3BucketArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterS3Bucket { return v.S3Buckets }).(GetClusterS3BucketArrayOutput)
}

func (o LookupClusterResultOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Server }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) UserTokens() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupClusterResult) map[string]string { return v.UserTokens }).(pulumi.StringMapOutput)
}

func (o LookupClusterResultOutput) ViableNodePoolVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []string { return v.ViableNodePoolVersions }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
