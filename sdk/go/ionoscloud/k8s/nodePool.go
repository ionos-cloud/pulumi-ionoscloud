// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package k8s

import (
	"context"
	"reflect"

	"errors"
	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a **Managed Kubernetes Node Pool**, part of a managed Kubernetes cluster on IonosCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/compute"
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/k8s"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleDatacenter, err := compute.NewDatacenter(ctx, "exampleDatacenter", &compute.DatacenterArgs{
//				Location:          pulumi.String("us/las"),
//				Description:       pulumi.String("datacenter description"),
//				SecAuthProtection: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			exampleLan, err := compute.NewLan(ctx, "exampleLan", &compute.LanArgs{
//				DatacenterId: exampleDatacenter.ID(),
//				Public:       pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			exampleIPBlock, err := compute.NewIPBlock(ctx, "exampleIPBlock", &compute.IPBlockArgs{
//				Location: pulumi.String("us/las"),
//				Size:     pulumi.Int(3),
//			})
//			if err != nil {
//				return err
//			}
//			exampleCluster, err := k8s.NewCluster(ctx, "exampleCluster", &k8s.ClusterArgs{
//				K8sVersion: pulumi.String("1.28.6"),
//				MaintenanceWindow: &k8s.ClusterMaintenanceWindowArgs{
//					DayOfTheWeek: pulumi.String("Sunday"),
//					Time:         pulumi.String("09:00:00Z"),
//				},
//				ApiSubnetAllowLists: pulumi.StringArray{
//					pulumi.String("1.2.3.4/32"),
//				},
//				S3Buckets: k8s.ClusterS3BucketArray{
//					&k8s.ClusterS3BucketArgs{
//						Name: pulumi.String("globally_unique_s3_bucket_name"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = k8s.NewNodePool(ctx, "exampleNodePool", &k8s.NodePoolArgs{
//				DatacenterId: exampleDatacenter.ID(),
//				K8sClusterId: exampleCluster.ID(),
//				K8sVersion:   exampleCluster.K8sVersion,
//				MaintenanceWindow: &k8s.NodePoolMaintenanceWindowArgs{
//					DayOfTheWeek: pulumi.String("Monday"),
//					Time:         pulumi.String("09:00:00Z"),
//				},
//				AutoScaling: &k8s.NodePoolAutoScalingArgs{
//					MinNodeCount: pulumi.Int(1),
//					MaxNodeCount: pulumi.Int(2),
//				},
//				CpuFamily:        pulumi.String("INTEL_XEON"),
//				AvailabilityZone: pulumi.String("AUTO"),
//				StorageType:      pulumi.String("SSD"),
//				NodeCount:        pulumi.Int(1),
//				CoresCount:       pulumi.Int(2),
//				RamSize:          pulumi.Int(2048),
//				StorageSize:      pulumi.Int(40),
//				PublicIps: pulumi.StringArray{
//					exampleIPBlock.Ips.ApplyT(func(ips []string) (string, error) {
//						return ips[0], nil
//					}).(pulumi.StringOutput),
//					exampleIPBlock.Ips.ApplyT(func(ips []string) (string, error) {
//						return ips[1], nil
//					}).(pulumi.StringOutput),
//					exampleIPBlock.Ips.ApplyT(func(ips []string) (string, error) {
//						return ips[2], nil
//					}).(pulumi.StringOutput),
//				},
//				Lans: k8s.NodePoolLanArray{
//					&k8s.NodePoolLanArgs{
//						Id:   exampleLan.ID(),
//						Dhcp: pulumi.Bool(true),
//						Routes: k8s.NodePoolLanRouteArray{
//							&k8s.NodePoolLanRouteArgs{
//								Network:   pulumi.String("1.2.3.5/24"),
//								GatewayIp: pulumi.String("10.1.5.17"),
//							},
//						},
//					},
//				},
//				Labels: pulumi.StringMap{
//					"lab1": pulumi.String("value1"),
//					"lab2": pulumi.String("value2"),
//				},
//				Annotations: pulumi.StringMap{
//					"ann1": pulumi.String("value1"),
//					"ann2": pulumi.String("value2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// **Note:** Set `createBeforeDestroy` on the lan resource if you want to remove it from the nodepool during an update. This is to ensure that the nodepool is updated before the lan is destroyed.
//
// ## Import
//
// A Kubernetes Node Pool resource can be imported using its Kubernetes cluster's uuid as well as its own UUID, both of which you can retrieve from the cloud API: `resource id`, e.g.:
//
// ```sh
// $ pulumi import ionoscloud:k8s/nodePool:NodePool demo {k8s_cluster_uuid}/{k8s_nodepool_id}
// ```
//
// # This can be helpful when you want to import kubernetes node pools which you have already created manually or using other means, outside of terraform, towards the goal of managing them via Terraform
//
// ⚠️ **_Warning: **During a maintenance window, k8s can update your `k8s_version` if the old one reaches end of life. This upgrade will not be shown in the plan, as we prevent
//
// terraform from doing a downgrade, as downgrading `k8s_version` is not supported._**
//
// ⚠️ **_Warning: **If you are upgrading from v5.x.x to v6.x.x**: You have to modify you plan for lans to match the new structure, by putting the ids from the old slice in lans.id fields. This is not backwards compatible._**
type NodePool struct {
	pulumi.CustomResourceState

	// When set to true, allows the update of immutable fields by destroying and re-creating the node pool
	AllowReplace pulumi.BoolPtrOutput `pulumi:"allowReplace"`
	// [map] A key/value map of annotations
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// [string] Wether the Node Pool should autoscale. For more details, please check the API documentation
	AutoScaling NodePoolAutoScalingPtrOutput `pulumi:"autoScaling"`
	// [string] - The desired Compute availability zone - See the API documentation for more information. *This attribute is immutable*.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// [int] - The CPU cores count for each node of the node pool. *This attribute is immutable*.
	CoresCount pulumi.IntOutput `pulumi:"coresCount"`
	// [string] The desired CPU Family - See the API documentation for more information. *This attribute is immutable*.
	CpuFamily pulumi.StringOutput `pulumi:"cpuFamily"`
	// [string] A Datacenter's UUID
	DatacenterId pulumi.StringOutput `pulumi:"datacenterId"`
	// [string] A k8s cluster's UUID
	K8sClusterId pulumi.StringOutput `pulumi:"k8sClusterId"`
	// [string] The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported. The provider will ignore downgrades of patch level.
	K8sVersion pulumi.StringOutput `pulumi:"k8sVersion"`
	// [map] A key/value map of labels
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// [list] A list of numeric LAN id's you want this node pool to be part of. For more details, please check the API documentation, as well as the example above
	Lans NodePoolLanArrayOutput `pulumi:"lans"`
	// See the **maintenance_window** section in the example above
	MaintenanceWindow NodePoolMaintenanceWindowOutput `pulumi:"maintenanceWindow"`
	// [string] The name of the Kubernetes Cluster. *This attribute is immutable*.
	Name pulumi.StringOutput `pulumi:"name"`
	// [int] - The desired number of nodes in the node pool
	NodeCount pulumi.IntOutput `pulumi:"nodeCount"`
	// [list] A list of public IPs associated with the node pool; must have at least `nodeCount + 1` elements
	PublicIps pulumi.StringArrayOutput `pulumi:"publicIps"`
	// [int] - The desired amount of RAM, in MB. *This attribute is immutable*.
	RamSize pulumi.IntOutput `pulumi:"ramSize"`
	// [int] - The size of the volume in GB. The size should be greater than 10GB. *This attribute is immutable*.
	StorageSize pulumi.IntOutput `pulumi:"storageSize"`
	// [string] - The desired storage type - SSD/HDD. *This attribute is immutable*.
	StorageType pulumi.StringOutput `pulumi:"storageType"`
}

// NewNodePool registers a new resource with the given unique name, arguments, and options.
func NewNodePool(ctx *pulumi.Context,
	name string, args *NodePoolArgs, opts ...pulumi.ResourceOption) (*NodePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.CoresCount == nil {
		return nil, errors.New("invalid value for required argument 'CoresCount'")
	}
	if args.CpuFamily == nil {
		return nil, errors.New("invalid value for required argument 'CpuFamily'")
	}
	if args.DatacenterId == nil {
		return nil, errors.New("invalid value for required argument 'DatacenterId'")
	}
	if args.K8sClusterId == nil {
		return nil, errors.New("invalid value for required argument 'K8sClusterId'")
	}
	if args.K8sVersion == nil {
		return nil, errors.New("invalid value for required argument 'K8sVersion'")
	}
	if args.NodeCount == nil {
		return nil, errors.New("invalid value for required argument 'NodeCount'")
	}
	if args.RamSize == nil {
		return nil, errors.New("invalid value for required argument 'RamSize'")
	}
	if args.StorageSize == nil {
		return nil, errors.New("invalid value for required argument 'StorageSize'")
	}
	if args.StorageType == nil {
		return nil, errors.New("invalid value for required argument 'StorageType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NodePool
	err := ctx.RegisterResource("ionoscloud:k8s/nodePool:NodePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNodePool gets an existing NodePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNodePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NodePoolState, opts ...pulumi.ResourceOption) (*NodePool, error) {
	var resource NodePool
	err := ctx.ReadResource("ionoscloud:k8s/nodePool:NodePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NodePool resources.
type nodePoolState struct {
	// When set to true, allows the update of immutable fields by destroying and re-creating the node pool
	AllowReplace *bool `pulumi:"allowReplace"`
	// [map] A key/value map of annotations
	Annotations map[string]string `pulumi:"annotations"`
	// [string] Wether the Node Pool should autoscale. For more details, please check the API documentation
	AutoScaling *NodePoolAutoScaling `pulumi:"autoScaling"`
	// [string] - The desired Compute availability zone - See the API documentation for more information. *This attribute is immutable*.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// [int] - The CPU cores count for each node of the node pool. *This attribute is immutable*.
	CoresCount *int `pulumi:"coresCount"`
	// [string] The desired CPU Family - See the API documentation for more information. *This attribute is immutable*.
	CpuFamily *string `pulumi:"cpuFamily"`
	// [string] A Datacenter's UUID
	DatacenterId *string `pulumi:"datacenterId"`
	// [string] A k8s cluster's UUID
	K8sClusterId *string `pulumi:"k8sClusterId"`
	// [string] The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported. The provider will ignore downgrades of patch level.
	K8sVersion *string `pulumi:"k8sVersion"`
	// [map] A key/value map of labels
	Labels map[string]string `pulumi:"labels"`
	// [list] A list of numeric LAN id's you want this node pool to be part of. For more details, please check the API documentation, as well as the example above
	Lans []NodePoolLan `pulumi:"lans"`
	// See the **maintenance_window** section in the example above
	MaintenanceWindow *NodePoolMaintenanceWindow `pulumi:"maintenanceWindow"`
	// [string] The name of the Kubernetes Cluster. *This attribute is immutable*.
	Name *string `pulumi:"name"`
	// [int] - The desired number of nodes in the node pool
	NodeCount *int `pulumi:"nodeCount"`
	// [list] A list of public IPs associated with the node pool; must have at least `nodeCount + 1` elements
	PublicIps []string `pulumi:"publicIps"`
	// [int] - The desired amount of RAM, in MB. *This attribute is immutable*.
	RamSize *int `pulumi:"ramSize"`
	// [int] - The size of the volume in GB. The size should be greater than 10GB. *This attribute is immutable*.
	StorageSize *int `pulumi:"storageSize"`
	// [string] - The desired storage type - SSD/HDD. *This attribute is immutable*.
	StorageType *string `pulumi:"storageType"`
}

type NodePoolState struct {
	// When set to true, allows the update of immutable fields by destroying and re-creating the node pool
	AllowReplace pulumi.BoolPtrInput
	// [map] A key/value map of annotations
	Annotations pulumi.StringMapInput
	// [string] Wether the Node Pool should autoscale. For more details, please check the API documentation
	AutoScaling NodePoolAutoScalingPtrInput
	// [string] - The desired Compute availability zone - See the API documentation for more information. *This attribute is immutable*.
	AvailabilityZone pulumi.StringPtrInput
	// [int] - The CPU cores count for each node of the node pool. *This attribute is immutable*.
	CoresCount pulumi.IntPtrInput
	// [string] The desired CPU Family - See the API documentation for more information. *This attribute is immutable*.
	CpuFamily pulumi.StringPtrInput
	// [string] A Datacenter's UUID
	DatacenterId pulumi.StringPtrInput
	// [string] A k8s cluster's UUID
	K8sClusterId pulumi.StringPtrInput
	// [string] The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported. The provider will ignore downgrades of patch level.
	K8sVersion pulumi.StringPtrInput
	// [map] A key/value map of labels
	Labels pulumi.StringMapInput
	// [list] A list of numeric LAN id's you want this node pool to be part of. For more details, please check the API documentation, as well as the example above
	Lans NodePoolLanArrayInput
	// See the **maintenance_window** section in the example above
	MaintenanceWindow NodePoolMaintenanceWindowPtrInput
	// [string] The name of the Kubernetes Cluster. *This attribute is immutable*.
	Name pulumi.StringPtrInput
	// [int] - The desired number of nodes in the node pool
	NodeCount pulumi.IntPtrInput
	// [list] A list of public IPs associated with the node pool; must have at least `nodeCount + 1` elements
	PublicIps pulumi.StringArrayInput
	// [int] - The desired amount of RAM, in MB. *This attribute is immutable*.
	RamSize pulumi.IntPtrInput
	// [int] - The size of the volume in GB. The size should be greater than 10GB. *This attribute is immutable*.
	StorageSize pulumi.IntPtrInput
	// [string] - The desired storage type - SSD/HDD. *This attribute is immutable*.
	StorageType pulumi.StringPtrInput
}

func (NodePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*nodePoolState)(nil)).Elem()
}

type nodePoolArgs struct {
	// When set to true, allows the update of immutable fields by destroying and re-creating the node pool
	AllowReplace *bool `pulumi:"allowReplace"`
	// [map] A key/value map of annotations
	Annotations map[string]string `pulumi:"annotations"`
	// [string] Wether the Node Pool should autoscale. For more details, please check the API documentation
	AutoScaling *NodePoolAutoScaling `pulumi:"autoScaling"`
	// [string] - The desired Compute availability zone - See the API documentation for more information. *This attribute is immutable*.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// [int] - The CPU cores count for each node of the node pool. *This attribute is immutable*.
	CoresCount int `pulumi:"coresCount"`
	// [string] The desired CPU Family - See the API documentation for more information. *This attribute is immutable*.
	CpuFamily string `pulumi:"cpuFamily"`
	// [string] A Datacenter's UUID
	DatacenterId string `pulumi:"datacenterId"`
	// [string] A k8s cluster's UUID
	K8sClusterId string `pulumi:"k8sClusterId"`
	// [string] The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported. The provider will ignore downgrades of patch level.
	K8sVersion string `pulumi:"k8sVersion"`
	// [map] A key/value map of labels
	Labels map[string]string `pulumi:"labels"`
	// [list] A list of numeric LAN id's you want this node pool to be part of. For more details, please check the API documentation, as well as the example above
	Lans []NodePoolLan `pulumi:"lans"`
	// See the **maintenance_window** section in the example above
	MaintenanceWindow *NodePoolMaintenanceWindow `pulumi:"maintenanceWindow"`
	// [string] The name of the Kubernetes Cluster. *This attribute is immutable*.
	Name *string `pulumi:"name"`
	// [int] - The desired number of nodes in the node pool
	NodeCount int `pulumi:"nodeCount"`
	// [list] A list of public IPs associated with the node pool; must have at least `nodeCount + 1` elements
	PublicIps []string `pulumi:"publicIps"`
	// [int] - The desired amount of RAM, in MB. *This attribute is immutable*.
	RamSize int `pulumi:"ramSize"`
	// [int] - The size of the volume in GB. The size should be greater than 10GB. *This attribute is immutable*.
	StorageSize int `pulumi:"storageSize"`
	// [string] - The desired storage type - SSD/HDD. *This attribute is immutable*.
	StorageType string `pulumi:"storageType"`
}

// The set of arguments for constructing a NodePool resource.
type NodePoolArgs struct {
	// When set to true, allows the update of immutable fields by destroying and re-creating the node pool
	AllowReplace pulumi.BoolPtrInput
	// [map] A key/value map of annotations
	Annotations pulumi.StringMapInput
	// [string] Wether the Node Pool should autoscale. For more details, please check the API documentation
	AutoScaling NodePoolAutoScalingPtrInput
	// [string] - The desired Compute availability zone - See the API documentation for more information. *This attribute is immutable*.
	AvailabilityZone pulumi.StringInput
	// [int] - The CPU cores count for each node of the node pool. *This attribute is immutable*.
	CoresCount pulumi.IntInput
	// [string] The desired CPU Family - See the API documentation for more information. *This attribute is immutable*.
	CpuFamily pulumi.StringInput
	// [string] A Datacenter's UUID
	DatacenterId pulumi.StringInput
	// [string] A k8s cluster's UUID
	K8sClusterId pulumi.StringInput
	// [string] The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported. The provider will ignore downgrades of patch level.
	K8sVersion pulumi.StringInput
	// [map] A key/value map of labels
	Labels pulumi.StringMapInput
	// [list] A list of numeric LAN id's you want this node pool to be part of. For more details, please check the API documentation, as well as the example above
	Lans NodePoolLanArrayInput
	// See the **maintenance_window** section in the example above
	MaintenanceWindow NodePoolMaintenanceWindowPtrInput
	// [string] The name of the Kubernetes Cluster. *This attribute is immutable*.
	Name pulumi.StringPtrInput
	// [int] - The desired number of nodes in the node pool
	NodeCount pulumi.IntInput
	// [list] A list of public IPs associated with the node pool; must have at least `nodeCount + 1` elements
	PublicIps pulumi.StringArrayInput
	// [int] - The desired amount of RAM, in MB. *This attribute is immutable*.
	RamSize pulumi.IntInput
	// [int] - The size of the volume in GB. The size should be greater than 10GB. *This attribute is immutable*.
	StorageSize pulumi.IntInput
	// [string] - The desired storage type - SSD/HDD. *This attribute is immutable*.
	StorageType pulumi.StringInput
}

func (NodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nodePoolArgs)(nil)).Elem()
}

type NodePoolInput interface {
	pulumi.Input

	ToNodePoolOutput() NodePoolOutput
	ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput
}

func (*NodePool) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePool)(nil)).Elem()
}

func (i *NodePool) ToNodePoolOutput() NodePoolOutput {
	return i.ToNodePoolOutputWithContext(context.Background())
}

func (i *NodePool) ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolOutput)
}

// NodePoolArrayInput is an input type that accepts NodePoolArray and NodePoolArrayOutput values.
// You can construct a concrete instance of `NodePoolArrayInput` via:
//
//	NodePoolArray{ NodePoolArgs{...} }
type NodePoolArrayInput interface {
	pulumi.Input

	ToNodePoolArrayOutput() NodePoolArrayOutput
	ToNodePoolArrayOutputWithContext(context.Context) NodePoolArrayOutput
}

type NodePoolArray []NodePoolInput

func (NodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodePool)(nil)).Elem()
}

func (i NodePoolArray) ToNodePoolArrayOutput() NodePoolArrayOutput {
	return i.ToNodePoolArrayOutputWithContext(context.Background())
}

func (i NodePoolArray) ToNodePoolArrayOutputWithContext(ctx context.Context) NodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolArrayOutput)
}

// NodePoolMapInput is an input type that accepts NodePoolMap and NodePoolMapOutput values.
// You can construct a concrete instance of `NodePoolMapInput` via:
//
//	NodePoolMap{ "key": NodePoolArgs{...} }
type NodePoolMapInput interface {
	pulumi.Input

	ToNodePoolMapOutput() NodePoolMapOutput
	ToNodePoolMapOutputWithContext(context.Context) NodePoolMapOutput
}

type NodePoolMap map[string]NodePoolInput

func (NodePoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodePool)(nil)).Elem()
}

func (i NodePoolMap) ToNodePoolMapOutput() NodePoolMapOutput {
	return i.ToNodePoolMapOutputWithContext(context.Background())
}

func (i NodePoolMap) ToNodePoolMapOutputWithContext(ctx context.Context) NodePoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolMapOutput)
}

type NodePoolOutput struct{ *pulumi.OutputState }

func (NodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePool)(nil)).Elem()
}

func (o NodePoolOutput) ToNodePoolOutput() NodePoolOutput {
	return o
}

func (o NodePoolOutput) ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput {
	return o
}

// When set to true, allows the update of immutable fields by destroying and re-creating the node pool
func (o NodePoolOutput) AllowReplace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.BoolPtrOutput { return v.AllowReplace }).(pulumi.BoolPtrOutput)
}

// [map] A key/value map of annotations
func (o NodePoolOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// [string] Wether the Node Pool should autoscale. For more details, please check the API documentation
func (o NodePoolOutput) AutoScaling() NodePoolAutoScalingPtrOutput {
	return o.ApplyT(func(v *NodePool) NodePoolAutoScalingPtrOutput { return v.AutoScaling }).(NodePoolAutoScalingPtrOutput)
}

// [string] - The desired Compute availability zone - See the API documentation for more information. *This attribute is immutable*.
func (o NodePoolOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// [int] - The CPU cores count for each node of the node pool. *This attribute is immutable*.
func (o NodePoolOutput) CoresCount() pulumi.IntOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntOutput { return v.CoresCount }).(pulumi.IntOutput)
}

// [string] The desired CPU Family - See the API documentation for more information. *This attribute is immutable*.
func (o NodePoolOutput) CpuFamily() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.CpuFamily }).(pulumi.StringOutput)
}

// [string] A Datacenter's UUID
func (o NodePoolOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.DatacenterId }).(pulumi.StringOutput)
}

// [string] A k8s cluster's UUID
func (o NodePoolOutput) K8sClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.K8sClusterId }).(pulumi.StringOutput)
}

// [string] The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported. The provider will ignore downgrades of patch level.
func (o NodePoolOutput) K8sVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.K8sVersion }).(pulumi.StringOutput)
}

// [map] A key/value map of labels
func (o NodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// [list] A list of numeric LAN id's you want this node pool to be part of. For more details, please check the API documentation, as well as the example above
func (o NodePoolOutput) Lans() NodePoolLanArrayOutput {
	return o.ApplyT(func(v *NodePool) NodePoolLanArrayOutput { return v.Lans }).(NodePoolLanArrayOutput)
}

// See the **maintenance_window** section in the example above
func (o NodePoolOutput) MaintenanceWindow() NodePoolMaintenanceWindowOutput {
	return o.ApplyT(func(v *NodePool) NodePoolMaintenanceWindowOutput { return v.MaintenanceWindow }).(NodePoolMaintenanceWindowOutput)
}

// [string] The name of the Kubernetes Cluster. *This attribute is immutable*.
func (o NodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// [int] - The desired number of nodes in the node pool
func (o NodePoolOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntOutput { return v.NodeCount }).(pulumi.IntOutput)
}

// [list] A list of public IPs associated with the node pool; must have at least `nodeCount + 1` elements
func (o NodePoolOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringArrayOutput { return v.PublicIps }).(pulumi.StringArrayOutput)
}

// [int] - The desired amount of RAM, in MB. *This attribute is immutable*.
func (o NodePoolOutput) RamSize() pulumi.IntOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntOutput { return v.RamSize }).(pulumi.IntOutput)
}

// [int] - The size of the volume in GB. The size should be greater than 10GB. *This attribute is immutable*.
func (o NodePoolOutput) StorageSize() pulumi.IntOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntOutput { return v.StorageSize }).(pulumi.IntOutput)
}

// [string] - The desired storage type - SSD/HDD. *This attribute is immutable*.
func (o NodePoolOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.StorageType }).(pulumi.StringOutput)
}

type NodePoolArrayOutput struct{ *pulumi.OutputState }

func (NodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodePool)(nil)).Elem()
}

func (o NodePoolArrayOutput) ToNodePoolArrayOutput() NodePoolArrayOutput {
	return o
}

func (o NodePoolArrayOutput) ToNodePoolArrayOutputWithContext(ctx context.Context) NodePoolArrayOutput {
	return o
}

func (o NodePoolArrayOutput) Index(i pulumi.IntInput) NodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NodePool {
		return vs[0].([]*NodePool)[vs[1].(int)]
	}).(NodePoolOutput)
}

type NodePoolMapOutput struct{ *pulumi.OutputState }

func (NodePoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodePool)(nil)).Elem()
}

func (o NodePoolMapOutput) ToNodePoolMapOutput() NodePoolMapOutput {
	return o
}

func (o NodePoolMapOutput) ToNodePoolMapOutputWithContext(ctx context.Context) NodePoolMapOutput {
	return o
}

func (o NodePoolMapOutput) MapIndex(k pulumi.StringInput) NodePoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NodePool {
		return vs[0].(map[string]*NodePool)[vs[1].(string)]
	}).(NodePoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolInput)(nil)).Elem(), &NodePool{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolArrayInput)(nil)).Elem(), NodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolMapInput)(nil)).Elem(), NodePoolMap{})
	pulumi.RegisterOutputType(NodePoolOutput{})
	pulumi.RegisterOutputType(NodePoolArrayOutput{})
	pulumi.RegisterOutputType(NodePoolMapOutput{})
}
