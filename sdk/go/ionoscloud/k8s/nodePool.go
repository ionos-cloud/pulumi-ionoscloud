// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package k8s

import (
	"context"
	"reflect"

	"errors"
	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NodePool struct {
	pulumi.CustomResourceState

	// When set to true, allows the update of immutable fields by destroying and re-creating the node pool
	AllowReplace pulumi.BoolPtrOutput   `pulumi:"allowReplace"`
	Annotations  pulumi.StringMapOutput `pulumi:"annotations"`
	// The range defining the minimum and maximum number of worker nodes that the managed node group can scale in
	AutoScaling NodePoolAutoScalingPtrOutput `pulumi:"autoScaling"`
	// The compute availability zone in which the nodes should exist
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// CPU cores count
	CoresCount pulumi.IntOutput `pulumi:"coresCount"`
	// CPU Family
	CpuFamily pulumi.StringOutput `pulumi:"cpuFamily"`
	// The UUID of the VDC
	DatacenterId pulumi.StringOutput `pulumi:"datacenterId"`
	// The UUID of an existing kubernetes cluster
	K8sClusterId pulumi.StringOutput `pulumi:"k8sClusterId"`
	// The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
	// The provider will ignore downgrades of patch level.
	K8sVersion pulumi.StringOutput    `pulumi:"k8sVersion"`
	Labels     pulumi.StringMapOutput `pulumi:"labels"`
	// A list of Local Area Networks the node pool should be part of
	Lans NodePoolLanArrayOutput `pulumi:"lans"`
	// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
	MaintenanceWindow NodePoolMaintenanceWindowOutput `pulumi:"maintenanceWindow"`
	// The desired name for the node pool
	Name pulumi.StringOutput `pulumi:"name"`
	// The number of nodes in this node pool
	NodeCount pulumi.IntOutput `pulumi:"nodeCount"`
	// A list of fixed IPs. Cannot be set on private clusters.
	PublicIps pulumi.StringArrayOutput `pulumi:"publicIps"`
	// The amount of RAM in MB
	RamSize pulumi.IntOutput `pulumi:"ramSize"`
	// The total allocated storage capacity of a node in GB
	StorageSize pulumi.IntOutput `pulumi:"storageSize"`
	// Storage type to use
	StorageType pulumi.StringOutput `pulumi:"storageType"`
}

// NewNodePool registers a new resource with the given unique name, arguments, and options.
func NewNodePool(ctx *pulumi.Context,
	name string, args *NodePoolArgs, opts ...pulumi.ResourceOption) (*NodePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.CoresCount == nil {
		return nil, errors.New("invalid value for required argument 'CoresCount'")
	}
	if args.CpuFamily == nil {
		return nil, errors.New("invalid value for required argument 'CpuFamily'")
	}
	if args.DatacenterId == nil {
		return nil, errors.New("invalid value for required argument 'DatacenterId'")
	}
	if args.K8sClusterId == nil {
		return nil, errors.New("invalid value for required argument 'K8sClusterId'")
	}
	if args.K8sVersion == nil {
		return nil, errors.New("invalid value for required argument 'K8sVersion'")
	}
	if args.NodeCount == nil {
		return nil, errors.New("invalid value for required argument 'NodeCount'")
	}
	if args.RamSize == nil {
		return nil, errors.New("invalid value for required argument 'RamSize'")
	}
	if args.StorageSize == nil {
		return nil, errors.New("invalid value for required argument 'StorageSize'")
	}
	if args.StorageType == nil {
		return nil, errors.New("invalid value for required argument 'StorageType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NodePool
	err := ctx.RegisterResource("ionoscloud:k8s/nodePool:NodePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNodePool gets an existing NodePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNodePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NodePoolState, opts ...pulumi.ResourceOption) (*NodePool, error) {
	var resource NodePool
	err := ctx.ReadResource("ionoscloud:k8s/nodePool:NodePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NodePool resources.
type nodePoolState struct {
	// When set to true, allows the update of immutable fields by destroying and re-creating the node pool
	AllowReplace *bool             `pulumi:"allowReplace"`
	Annotations  map[string]string `pulumi:"annotations"`
	// The range defining the minimum and maximum number of worker nodes that the managed node group can scale in
	AutoScaling *NodePoolAutoScaling `pulumi:"autoScaling"`
	// The compute availability zone in which the nodes should exist
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// CPU cores count
	CoresCount *int `pulumi:"coresCount"`
	// CPU Family
	CpuFamily *string `pulumi:"cpuFamily"`
	// The UUID of the VDC
	DatacenterId *string `pulumi:"datacenterId"`
	// The UUID of an existing kubernetes cluster
	K8sClusterId *string `pulumi:"k8sClusterId"`
	// The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
	// The provider will ignore downgrades of patch level.
	K8sVersion *string           `pulumi:"k8sVersion"`
	Labels     map[string]string `pulumi:"labels"`
	// A list of Local Area Networks the node pool should be part of
	Lans []NodePoolLan `pulumi:"lans"`
	// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
	MaintenanceWindow *NodePoolMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The desired name for the node pool
	Name *string `pulumi:"name"`
	// The number of nodes in this node pool
	NodeCount *int `pulumi:"nodeCount"`
	// A list of fixed IPs. Cannot be set on private clusters.
	PublicIps []string `pulumi:"publicIps"`
	// The amount of RAM in MB
	RamSize *int `pulumi:"ramSize"`
	// The total allocated storage capacity of a node in GB
	StorageSize *int `pulumi:"storageSize"`
	// Storage type to use
	StorageType *string `pulumi:"storageType"`
}

type NodePoolState struct {
	// When set to true, allows the update of immutable fields by destroying and re-creating the node pool
	AllowReplace pulumi.BoolPtrInput
	Annotations  pulumi.StringMapInput
	// The range defining the minimum and maximum number of worker nodes that the managed node group can scale in
	AutoScaling NodePoolAutoScalingPtrInput
	// The compute availability zone in which the nodes should exist
	AvailabilityZone pulumi.StringPtrInput
	// CPU cores count
	CoresCount pulumi.IntPtrInput
	// CPU Family
	CpuFamily pulumi.StringPtrInput
	// The UUID of the VDC
	DatacenterId pulumi.StringPtrInput
	// The UUID of an existing kubernetes cluster
	K8sClusterId pulumi.StringPtrInput
	// The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
	// The provider will ignore downgrades of patch level.
	K8sVersion pulumi.StringPtrInput
	Labels     pulumi.StringMapInput
	// A list of Local Area Networks the node pool should be part of
	Lans NodePoolLanArrayInput
	// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
	MaintenanceWindow NodePoolMaintenanceWindowPtrInput
	// The desired name for the node pool
	Name pulumi.StringPtrInput
	// The number of nodes in this node pool
	NodeCount pulumi.IntPtrInput
	// A list of fixed IPs. Cannot be set on private clusters.
	PublicIps pulumi.StringArrayInput
	// The amount of RAM in MB
	RamSize pulumi.IntPtrInput
	// The total allocated storage capacity of a node in GB
	StorageSize pulumi.IntPtrInput
	// Storage type to use
	StorageType pulumi.StringPtrInput
}

func (NodePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*nodePoolState)(nil)).Elem()
}

type nodePoolArgs struct {
	// When set to true, allows the update of immutable fields by destroying and re-creating the node pool
	AllowReplace *bool             `pulumi:"allowReplace"`
	Annotations  map[string]string `pulumi:"annotations"`
	// The range defining the minimum and maximum number of worker nodes that the managed node group can scale in
	AutoScaling *NodePoolAutoScaling `pulumi:"autoScaling"`
	// The compute availability zone in which the nodes should exist
	AvailabilityZone string `pulumi:"availabilityZone"`
	// CPU cores count
	CoresCount int `pulumi:"coresCount"`
	// CPU Family
	CpuFamily string `pulumi:"cpuFamily"`
	// The UUID of the VDC
	DatacenterId string `pulumi:"datacenterId"`
	// The UUID of an existing kubernetes cluster
	K8sClusterId string `pulumi:"k8sClusterId"`
	// The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
	// The provider will ignore downgrades of patch level.
	K8sVersion string            `pulumi:"k8sVersion"`
	Labels     map[string]string `pulumi:"labels"`
	// A list of Local Area Networks the node pool should be part of
	Lans []NodePoolLan `pulumi:"lans"`
	// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
	MaintenanceWindow *NodePoolMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The desired name for the node pool
	Name *string `pulumi:"name"`
	// The number of nodes in this node pool
	NodeCount int `pulumi:"nodeCount"`
	// A list of fixed IPs. Cannot be set on private clusters.
	PublicIps []string `pulumi:"publicIps"`
	// The amount of RAM in MB
	RamSize int `pulumi:"ramSize"`
	// The total allocated storage capacity of a node in GB
	StorageSize int `pulumi:"storageSize"`
	// Storage type to use
	StorageType string `pulumi:"storageType"`
}

// The set of arguments for constructing a NodePool resource.
type NodePoolArgs struct {
	// When set to true, allows the update of immutable fields by destroying and re-creating the node pool
	AllowReplace pulumi.BoolPtrInput
	Annotations  pulumi.StringMapInput
	// The range defining the minimum and maximum number of worker nodes that the managed node group can scale in
	AutoScaling NodePoolAutoScalingPtrInput
	// The compute availability zone in which the nodes should exist
	AvailabilityZone pulumi.StringInput
	// CPU cores count
	CoresCount pulumi.IntInput
	// CPU Family
	CpuFamily pulumi.StringInput
	// The UUID of the VDC
	DatacenterId pulumi.StringInput
	// The UUID of an existing kubernetes cluster
	K8sClusterId pulumi.StringInput
	// The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
	// The provider will ignore downgrades of patch level.
	K8sVersion pulumi.StringInput
	Labels     pulumi.StringMapInput
	// A list of Local Area Networks the node pool should be part of
	Lans NodePoolLanArrayInput
	// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
	MaintenanceWindow NodePoolMaintenanceWindowPtrInput
	// The desired name for the node pool
	Name pulumi.StringPtrInput
	// The number of nodes in this node pool
	NodeCount pulumi.IntInput
	// A list of fixed IPs. Cannot be set on private clusters.
	PublicIps pulumi.StringArrayInput
	// The amount of RAM in MB
	RamSize pulumi.IntInput
	// The total allocated storage capacity of a node in GB
	StorageSize pulumi.IntInput
	// Storage type to use
	StorageType pulumi.StringInput
}

func (NodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nodePoolArgs)(nil)).Elem()
}

type NodePoolInput interface {
	pulumi.Input

	ToNodePoolOutput() NodePoolOutput
	ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput
}

func (*NodePool) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePool)(nil)).Elem()
}

func (i *NodePool) ToNodePoolOutput() NodePoolOutput {
	return i.ToNodePoolOutputWithContext(context.Background())
}

func (i *NodePool) ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolOutput)
}

// NodePoolArrayInput is an input type that accepts NodePoolArray and NodePoolArrayOutput values.
// You can construct a concrete instance of `NodePoolArrayInput` via:
//
//	NodePoolArray{ NodePoolArgs{...} }
type NodePoolArrayInput interface {
	pulumi.Input

	ToNodePoolArrayOutput() NodePoolArrayOutput
	ToNodePoolArrayOutputWithContext(context.Context) NodePoolArrayOutput
}

type NodePoolArray []NodePoolInput

func (NodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodePool)(nil)).Elem()
}

func (i NodePoolArray) ToNodePoolArrayOutput() NodePoolArrayOutput {
	return i.ToNodePoolArrayOutputWithContext(context.Background())
}

func (i NodePoolArray) ToNodePoolArrayOutputWithContext(ctx context.Context) NodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolArrayOutput)
}

// NodePoolMapInput is an input type that accepts NodePoolMap and NodePoolMapOutput values.
// You can construct a concrete instance of `NodePoolMapInput` via:
//
//	NodePoolMap{ "key": NodePoolArgs{...} }
type NodePoolMapInput interface {
	pulumi.Input

	ToNodePoolMapOutput() NodePoolMapOutput
	ToNodePoolMapOutputWithContext(context.Context) NodePoolMapOutput
}

type NodePoolMap map[string]NodePoolInput

func (NodePoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodePool)(nil)).Elem()
}

func (i NodePoolMap) ToNodePoolMapOutput() NodePoolMapOutput {
	return i.ToNodePoolMapOutputWithContext(context.Background())
}

func (i NodePoolMap) ToNodePoolMapOutputWithContext(ctx context.Context) NodePoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolMapOutput)
}

type NodePoolOutput struct{ *pulumi.OutputState }

func (NodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePool)(nil)).Elem()
}

func (o NodePoolOutput) ToNodePoolOutput() NodePoolOutput {
	return o
}

func (o NodePoolOutput) ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput {
	return o
}

// When set to true, allows the update of immutable fields by destroying and re-creating the node pool
func (o NodePoolOutput) AllowReplace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.BoolPtrOutput { return v.AllowReplace }).(pulumi.BoolPtrOutput)
}

func (o NodePoolOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// The range defining the minimum and maximum number of worker nodes that the managed node group can scale in
func (o NodePoolOutput) AutoScaling() NodePoolAutoScalingPtrOutput {
	return o.ApplyT(func(v *NodePool) NodePoolAutoScalingPtrOutput { return v.AutoScaling }).(NodePoolAutoScalingPtrOutput)
}

// The compute availability zone in which the nodes should exist
func (o NodePoolOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// CPU cores count
func (o NodePoolOutput) CoresCount() pulumi.IntOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntOutput { return v.CoresCount }).(pulumi.IntOutput)
}

// CPU Family
func (o NodePoolOutput) CpuFamily() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.CpuFamily }).(pulumi.StringOutput)
}

// The UUID of the VDC
func (o NodePoolOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.DatacenterId }).(pulumi.StringOutput)
}

// The UUID of an existing kubernetes cluster
func (o NodePoolOutput) K8sClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.K8sClusterId }).(pulumi.StringOutput)
}

// The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.
// The provider will ignore downgrades of patch level.
func (o NodePoolOutput) K8sVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.K8sVersion }).(pulumi.StringOutput)
}

func (o NodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// A list of Local Area Networks the node pool should be part of
func (o NodePoolOutput) Lans() NodePoolLanArrayOutput {
	return o.ApplyT(func(v *NodePool) NodePoolLanArrayOutput { return v.Lans }).(NodePoolLanArrayOutput)
}

// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
func (o NodePoolOutput) MaintenanceWindow() NodePoolMaintenanceWindowOutput {
	return o.ApplyT(func(v *NodePool) NodePoolMaintenanceWindowOutput { return v.MaintenanceWindow }).(NodePoolMaintenanceWindowOutput)
}

// The desired name for the node pool
func (o NodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The number of nodes in this node pool
func (o NodePoolOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntOutput { return v.NodeCount }).(pulumi.IntOutput)
}

// A list of fixed IPs. Cannot be set on private clusters.
func (o NodePoolOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringArrayOutput { return v.PublicIps }).(pulumi.StringArrayOutput)
}

// The amount of RAM in MB
func (o NodePoolOutput) RamSize() pulumi.IntOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntOutput { return v.RamSize }).(pulumi.IntOutput)
}

// The total allocated storage capacity of a node in GB
func (o NodePoolOutput) StorageSize() pulumi.IntOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntOutput { return v.StorageSize }).(pulumi.IntOutput)
}

// Storage type to use
func (o NodePoolOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.StorageType }).(pulumi.StringOutput)
}

type NodePoolArrayOutput struct{ *pulumi.OutputState }

func (NodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodePool)(nil)).Elem()
}

func (o NodePoolArrayOutput) ToNodePoolArrayOutput() NodePoolArrayOutput {
	return o
}

func (o NodePoolArrayOutput) ToNodePoolArrayOutputWithContext(ctx context.Context) NodePoolArrayOutput {
	return o
}

func (o NodePoolArrayOutput) Index(i pulumi.IntInput) NodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NodePool {
		return vs[0].([]*NodePool)[vs[1].(int)]
	}).(NodePoolOutput)
}

type NodePoolMapOutput struct{ *pulumi.OutputState }

func (NodePoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodePool)(nil)).Elem()
}

func (o NodePoolMapOutput) ToNodePoolMapOutput() NodePoolMapOutput {
	return o
}

func (o NodePoolMapOutput) ToNodePoolMapOutputWithContext(ctx context.Context) NodePoolMapOutput {
	return o
}

func (o NodePoolMapOutput) MapIndex(k pulumi.StringInput) NodePoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NodePool {
		return vs[0].(map[string]*NodePool)[vs[1].(string)]
	}).(NodePoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolInput)(nil)).Elem(), &NodePool{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolArrayInput)(nil)).Elem(), NodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolMapInput)(nil)).Elem(), NodePoolMap{})
	pulumi.RegisterOutputType(NodePoolOutput{})
	pulumi.RegisterOutputType(NodePoolArrayOutput{})
	pulumi.RegisterOutputType(NodePoolMapOutput{})
}
