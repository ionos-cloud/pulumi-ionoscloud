// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupVolume(ctx *pulumi.Context, args *LookupVolumeArgs, opts ...pulumi.InvokeOption) (*LookupVolumeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVolumeResult
	err := ctx.Invoke("ionoscloud:compute/getVolume:getVolume", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVolume.
type LookupVolumeArgs struct {
	DatacenterId string  `pulumi:"datacenterId"`
	Id           *string `pulumi:"id"`
	Name         *string `pulumi:"name"`
}

// A collection of values returned by getVolume.
type LookupVolumeResult struct {
	AvailabilityZone    string  `pulumi:"availabilityZone"`
	BackupUnitId        string  `pulumi:"backupUnitId"`
	BootServer          string  `pulumi:"bootServer"`
	Bus                 string  `pulumi:"bus"`
	CpuHotPlug          bool    `pulumi:"cpuHotPlug"`
	DatacenterId        string  `pulumi:"datacenterId"`
	DeviceNumber        int     `pulumi:"deviceNumber"`
	DiscVirtioHotPlug   bool    `pulumi:"discVirtioHotPlug"`
	DiscVirtioHotUnplug bool    `pulumi:"discVirtioHotUnplug"`
	DiskType            string  `pulumi:"diskType"`
	Id                  *string `pulumi:"id"`
	Image               string  `pulumi:"image"`
	ImagePassword       string  `pulumi:"imagePassword"`
	LicenceType         string  `pulumi:"licenceType"`
	Name                *string `pulumi:"name"`
	NicHotPlug          bool    `pulumi:"nicHotPlug"`
	NicHotUnplug        bool    `pulumi:"nicHotUnplug"`
	RamHotPlug          bool    `pulumi:"ramHotPlug"`
	Size                int     `pulumi:"size"`
	Sshkey              string  `pulumi:"sshkey"`
	UserData            string  `pulumi:"userData"`
}

func LookupVolumeOutput(ctx *pulumi.Context, args LookupVolumeOutputArgs, opts ...pulumi.InvokeOption) LookupVolumeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVolumeResultOutput, error) {
			args := v.(LookupVolumeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:compute/getVolume:getVolume", args, LookupVolumeResultOutput{}, options).(LookupVolumeResultOutput), nil
		}).(LookupVolumeResultOutput)
}

// A collection of arguments for invoking getVolume.
type LookupVolumeOutputArgs struct {
	DatacenterId pulumi.StringInput    `pulumi:"datacenterId"`
	Id           pulumi.StringPtrInput `pulumi:"id"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupVolumeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVolumeArgs)(nil)).Elem()
}

// A collection of values returned by getVolume.
type LookupVolumeResultOutput struct{ *pulumi.OutputState }

func (LookupVolumeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVolumeResult)(nil)).Elem()
}

func (o LookupVolumeResultOutput) ToLookupVolumeResultOutput() LookupVolumeResultOutput {
	return o
}

func (o LookupVolumeResultOutput) ToLookupVolumeResultOutputWithContext(ctx context.Context) LookupVolumeResultOutput {
	return o
}

func (o LookupVolumeResultOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) BackupUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.BackupUnitId }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) BootServer() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.BootServer }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Bus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.Bus }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) CpuHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVolumeResult) bool { return v.CpuHotPlug }).(pulumi.BoolOutput)
}

func (o LookupVolumeResultOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.DatacenterId }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVolumeResult) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

func (o LookupVolumeResultOutput) DiscVirtioHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVolumeResult) bool { return v.DiscVirtioHotPlug }).(pulumi.BoolOutput)
}

func (o LookupVolumeResultOutput) DiscVirtioHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVolumeResult) bool { return v.DiscVirtioHotUnplug }).(pulumi.BoolOutput)
}

func (o LookupVolumeResultOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupVolumeResultOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.Image }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) ImagePassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.ImagePassword }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) LicenceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.LicenceType }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupVolumeResultOutput) NicHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVolumeResult) bool { return v.NicHotPlug }).(pulumi.BoolOutput)
}

func (o LookupVolumeResultOutput) NicHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVolumeResult) bool { return v.NicHotUnplug }).(pulumi.BoolOutput)
}

func (o LookupVolumeResultOutput) RamHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVolumeResult) bool { return v.RamHotPlug }).(pulumi.BoolOutput)
}

func (o LookupVolumeResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVolumeResult) int { return v.Size }).(pulumi.IntOutput)
}

func (o LookupVolumeResultOutput) Sshkey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.Sshkey }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) UserData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.UserData }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVolumeResultOutput{})
}
