// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCubeServer(ctx *pulumi.Context, args *LookupCubeServerArgs, opts ...pulumi.InvokeOption) (*LookupCubeServerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCubeServerResult
	err := ctx.Invoke("ionoscloud:compute/getCubeServer:getCubeServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCubeServer.
type LookupCubeServerArgs struct {
	DatacenterId string  `pulumi:"datacenterId"`
	Id           *string `pulumi:"id"`
	Name         *string `pulumi:"name"`
	TemplateUuid *string `pulumi:"templateUuid"`
}

// A collection of values returned by getCubeServer.
type LookupCubeServerResult struct {
	AvailabilityZone string                `pulumi:"availabilityZone"`
	BootCdrom        string                `pulumi:"bootCdrom"`
	BootImage        string                `pulumi:"bootImage"`
	BootVolume       string                `pulumi:"bootVolume"`
	Cdroms           []GetCubeServerCdrom  `pulumi:"cdroms"`
	Cores            int                   `pulumi:"cores"`
	CpuFamily        string                `pulumi:"cpuFamily"`
	DatacenterId     string                `pulumi:"datacenterId"`
	Id               *string               `pulumi:"id"`
	Name             *string               `pulumi:"name"`
	Nics             []GetCubeServerNic    `pulumi:"nics"`
	Ram              int                   `pulumi:"ram"`
	TemplateUuid     *string               `pulumi:"templateUuid"`
	Token            string                `pulumi:"token"`
	VmState          string                `pulumi:"vmState"`
	Volumes          []GetCubeServerVolume `pulumi:"volumes"`
}

func LookupCubeServerOutput(ctx *pulumi.Context, args LookupCubeServerOutputArgs, opts ...pulumi.InvokeOption) LookupCubeServerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCubeServerResultOutput, error) {
			args := v.(LookupCubeServerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:compute/getCubeServer:getCubeServer", args, LookupCubeServerResultOutput{}, options).(LookupCubeServerResultOutput), nil
		}).(LookupCubeServerResultOutput)
}

// A collection of arguments for invoking getCubeServer.
type LookupCubeServerOutputArgs struct {
	DatacenterId pulumi.StringInput    `pulumi:"datacenterId"`
	Id           pulumi.StringPtrInput `pulumi:"id"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
	TemplateUuid pulumi.StringPtrInput `pulumi:"templateUuid"`
}

func (LookupCubeServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCubeServerArgs)(nil)).Elem()
}

// A collection of values returned by getCubeServer.
type LookupCubeServerResultOutput struct{ *pulumi.OutputState }

func (LookupCubeServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCubeServerResult)(nil)).Elem()
}

func (o LookupCubeServerResultOutput) ToLookupCubeServerResultOutput() LookupCubeServerResultOutput {
	return o
}

func (o LookupCubeServerResultOutput) ToLookupCubeServerResultOutputWithContext(ctx context.Context) LookupCubeServerResultOutput {
	return o
}

func (o LookupCubeServerResultOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCubeServerResult) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o LookupCubeServerResultOutput) BootCdrom() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCubeServerResult) string { return v.BootCdrom }).(pulumi.StringOutput)
}

func (o LookupCubeServerResultOutput) BootImage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCubeServerResult) string { return v.BootImage }).(pulumi.StringOutput)
}

func (o LookupCubeServerResultOutput) BootVolume() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCubeServerResult) string { return v.BootVolume }).(pulumi.StringOutput)
}

func (o LookupCubeServerResultOutput) Cdroms() GetCubeServerCdromArrayOutput {
	return o.ApplyT(func(v LookupCubeServerResult) []GetCubeServerCdrom { return v.Cdroms }).(GetCubeServerCdromArrayOutput)
}

func (o LookupCubeServerResultOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCubeServerResult) int { return v.Cores }).(pulumi.IntOutput)
}

func (o LookupCubeServerResultOutput) CpuFamily() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCubeServerResult) string { return v.CpuFamily }).(pulumi.StringOutput)
}

func (o LookupCubeServerResultOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCubeServerResult) string { return v.DatacenterId }).(pulumi.StringOutput)
}

func (o LookupCubeServerResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCubeServerResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupCubeServerResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCubeServerResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupCubeServerResultOutput) Nics() GetCubeServerNicArrayOutput {
	return o.ApplyT(func(v LookupCubeServerResult) []GetCubeServerNic { return v.Nics }).(GetCubeServerNicArrayOutput)
}

func (o LookupCubeServerResultOutput) Ram() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCubeServerResult) int { return v.Ram }).(pulumi.IntOutput)
}

func (o LookupCubeServerResultOutput) TemplateUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCubeServerResult) *string { return v.TemplateUuid }).(pulumi.StringPtrOutput)
}

func (o LookupCubeServerResultOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCubeServerResult) string { return v.Token }).(pulumi.StringOutput)
}

func (o LookupCubeServerResultOutput) VmState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCubeServerResult) string { return v.VmState }).(pulumi.StringOutput)
}

func (o LookupCubeServerResultOutput) Volumes() GetCubeServerVolumeArrayOutput {
	return o.ApplyT(func(v LookupCubeServerResult) []GetCubeServerVolume { return v.Volumes }).(GetCubeServerVolumeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCubeServerResultOutput{})
}
