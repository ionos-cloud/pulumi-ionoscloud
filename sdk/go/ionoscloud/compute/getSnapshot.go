// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSnapshot(ctx *pulumi.Context, args *LookupSnapshotArgs, opts ...pulumi.InvokeOption) (*LookupSnapshotResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSnapshotResult
	err := ctx.Invoke("ionoscloud:compute/getSnapshot:getSnapshot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSnapshot.
type LookupSnapshotArgs struct {
	Id       *string `pulumi:"id"`
	Location *string `pulumi:"location"`
	Name     *string `pulumi:"name"`
	Size     *int    `pulumi:"size"`
}

// A collection of values returned by getSnapshot.
type LookupSnapshotResult struct {
	CpuHotPlug          bool    `pulumi:"cpuHotPlug"`
	CpuHotUnplug        bool    `pulumi:"cpuHotUnplug"`
	Description         string  `pulumi:"description"`
	DiscScsiHotPlug     bool    `pulumi:"discScsiHotPlug"`
	DiscScsiHotUnplug   bool    `pulumi:"discScsiHotUnplug"`
	DiscVirtioHotPlug   bool    `pulumi:"discVirtioHotPlug"`
	DiscVirtioHotUnplug bool    `pulumi:"discVirtioHotUnplug"`
	Id                  *string `pulumi:"id"`
	LicenceType         string  `pulumi:"licenceType"`
	Location            string  `pulumi:"location"`
	Name                string  `pulumi:"name"`
	NicHotPlug          bool    `pulumi:"nicHotPlug"`
	NicHotUnplug        bool    `pulumi:"nicHotUnplug"`
	RamHotPlug          bool    `pulumi:"ramHotPlug"`
	RamHotUnplug        bool    `pulumi:"ramHotUnplug"`
	SecAuthProtection   bool    `pulumi:"secAuthProtection"`
	Size                int     `pulumi:"size"`
}

func LookupSnapshotOutput(ctx *pulumi.Context, args LookupSnapshotOutputArgs, opts ...pulumi.InvokeOption) LookupSnapshotResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSnapshotResultOutput, error) {
			args := v.(LookupSnapshotArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:compute/getSnapshot:getSnapshot", args, LookupSnapshotResultOutput{}, options).(LookupSnapshotResultOutput), nil
		}).(LookupSnapshotResultOutput)
}

// A collection of arguments for invoking getSnapshot.
type LookupSnapshotOutputArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Location pulumi.StringPtrInput `pulumi:"location"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Size     pulumi.IntPtrInput    `pulumi:"size"`
}

func (LookupSnapshotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnapshotArgs)(nil)).Elem()
}

// A collection of values returned by getSnapshot.
type LookupSnapshotResultOutput struct{ *pulumi.OutputState }

func (LookupSnapshotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnapshotResult)(nil)).Elem()
}

func (o LookupSnapshotResultOutput) ToLookupSnapshotResultOutput() LookupSnapshotResultOutput {
	return o
}

func (o LookupSnapshotResultOutput) ToLookupSnapshotResultOutputWithContext(ctx context.Context) LookupSnapshotResultOutput {
	return o
}

func (o LookupSnapshotResultOutput) CpuHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSnapshotResult) bool { return v.CpuHotPlug }).(pulumi.BoolOutput)
}

func (o LookupSnapshotResultOutput) CpuHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSnapshotResult) bool { return v.CpuHotUnplug }).(pulumi.BoolOutput)
}

func (o LookupSnapshotResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) DiscScsiHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSnapshotResult) bool { return v.DiscScsiHotPlug }).(pulumi.BoolOutput)
}

func (o LookupSnapshotResultOutput) DiscScsiHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSnapshotResult) bool { return v.DiscScsiHotUnplug }).(pulumi.BoolOutput)
}

func (o LookupSnapshotResultOutput) DiscVirtioHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSnapshotResult) bool { return v.DiscVirtioHotPlug }).(pulumi.BoolOutput)
}

func (o LookupSnapshotResultOutput) DiscVirtioHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSnapshotResult) bool { return v.DiscVirtioHotUnplug }).(pulumi.BoolOutput)
}

func (o LookupSnapshotResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSnapshotResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupSnapshotResultOutput) LicenceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.LicenceType }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) NicHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSnapshotResult) bool { return v.NicHotPlug }).(pulumi.BoolOutput)
}

func (o LookupSnapshotResultOutput) NicHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSnapshotResult) bool { return v.NicHotUnplug }).(pulumi.BoolOutput)
}

func (o LookupSnapshotResultOutput) RamHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSnapshotResult) bool { return v.RamHotPlug }).(pulumi.BoolOutput)
}

func (o LookupSnapshotResultOutput) RamHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSnapshotResult) bool { return v.RamHotUnplug }).(pulumi.BoolOutput)
}

func (o LookupSnapshotResultOutput) SecAuthProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSnapshotResult) bool { return v.SecAuthProtection }).(pulumi.BoolOutput)
}

func (o LookupSnapshotResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSnapshotResult) int { return v.Size }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSnapshotResultOutput{})
}
