// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupIPBlock(ctx *pulumi.Context, args *LookupIPBlockArgs, opts ...pulumi.InvokeOption) (*LookupIPBlockResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIPBlockResult
	err := ctx.Invoke("ionoscloud:compute/getIPBlock:getIPBlock", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIPBlock.
type LookupIPBlockArgs struct {
	Id          *string                `pulumi:"id"`
	IpConsumers []GetIPBlockIpConsumer `pulumi:"ipConsumers"`
	Location    *string                `pulumi:"location"`
	Name        *string                `pulumi:"name"`
	Size        *int                   `pulumi:"size"`
}

// A collection of values returned by getIPBlock.
type LookupIPBlockResult struct {
	Id          *string                `pulumi:"id"`
	IpConsumers []GetIPBlockIpConsumer `pulumi:"ipConsumers"`
	Ips         []string               `pulumi:"ips"`
	Location    *string                `pulumi:"location"`
	Name        *string                `pulumi:"name"`
	Size        *int                   `pulumi:"size"`
}

func LookupIPBlockOutput(ctx *pulumi.Context, args LookupIPBlockOutputArgs, opts ...pulumi.InvokeOption) LookupIPBlockResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupIPBlockResultOutput, error) {
			args := v.(LookupIPBlockArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:compute/getIPBlock:getIPBlock", args, LookupIPBlockResultOutput{}, options).(LookupIPBlockResultOutput), nil
		}).(LookupIPBlockResultOutput)
}

// A collection of arguments for invoking getIPBlock.
type LookupIPBlockOutputArgs struct {
	Id          pulumi.StringPtrInput          `pulumi:"id"`
	IpConsumers GetIPBlockIpConsumerArrayInput `pulumi:"ipConsumers"`
	Location    pulumi.StringPtrInput          `pulumi:"location"`
	Name        pulumi.StringPtrInput          `pulumi:"name"`
	Size        pulumi.IntPtrInput             `pulumi:"size"`
}

func (LookupIPBlockOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIPBlockArgs)(nil)).Elem()
}

// A collection of values returned by getIPBlock.
type LookupIPBlockResultOutput struct{ *pulumi.OutputState }

func (LookupIPBlockResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIPBlockResult)(nil)).Elem()
}

func (o LookupIPBlockResultOutput) ToLookupIPBlockResultOutput() LookupIPBlockResultOutput {
	return o
}

func (o LookupIPBlockResultOutput) ToLookupIPBlockResultOutputWithContext(ctx context.Context) LookupIPBlockResultOutput {
	return o
}

func (o LookupIPBlockResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIPBlockResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupIPBlockResultOutput) IpConsumers() GetIPBlockIpConsumerArrayOutput {
	return o.ApplyT(func(v LookupIPBlockResult) []GetIPBlockIpConsumer { return v.IpConsumers }).(GetIPBlockIpConsumerArrayOutput)
}

func (o LookupIPBlockResultOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIPBlockResult) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o LookupIPBlockResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIPBlockResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o LookupIPBlockResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIPBlockResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupIPBlockResultOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupIPBlockResult) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIPBlockResultOutput{})
}
