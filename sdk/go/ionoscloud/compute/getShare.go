// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupShare(ctx *pulumi.Context, args *LookupShareArgs, opts ...pulumi.InvokeOption) (*LookupShareResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupShareResult
	err := ctx.Invoke("ionoscloud:compute/getShare:getShare", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getShare.
type LookupShareArgs struct {
	EditPrivilege  *bool  `pulumi:"editPrivilege"`
	GroupId        string `pulumi:"groupId"`
	Id             string `pulumi:"id"`
	ResourceId     string `pulumi:"resourceId"`
	SharePrivilege *bool  `pulumi:"sharePrivilege"`
}

// A collection of values returned by getShare.
type LookupShareResult struct {
	EditPrivilege  *bool  `pulumi:"editPrivilege"`
	GroupId        string `pulumi:"groupId"`
	Id             string `pulumi:"id"`
	ResourceId     string `pulumi:"resourceId"`
	SharePrivilege *bool  `pulumi:"sharePrivilege"`
}

func LookupShareOutput(ctx *pulumi.Context, args LookupShareOutputArgs, opts ...pulumi.InvokeOption) LookupShareResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupShareResultOutput, error) {
			args := v.(LookupShareArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:compute/getShare:getShare", args, LookupShareResultOutput{}, options).(LookupShareResultOutput), nil
		}).(LookupShareResultOutput)
}

// A collection of arguments for invoking getShare.
type LookupShareOutputArgs struct {
	EditPrivilege  pulumi.BoolPtrInput `pulumi:"editPrivilege"`
	GroupId        pulumi.StringInput  `pulumi:"groupId"`
	Id             pulumi.StringInput  `pulumi:"id"`
	ResourceId     pulumi.StringInput  `pulumi:"resourceId"`
	SharePrivilege pulumi.BoolPtrInput `pulumi:"sharePrivilege"`
}

func (LookupShareOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupShareArgs)(nil)).Elem()
}

// A collection of values returned by getShare.
type LookupShareResultOutput struct{ *pulumi.OutputState }

func (LookupShareResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupShareResult)(nil)).Elem()
}

func (o LookupShareResultOutput) ToLookupShareResultOutput() LookupShareResultOutput {
	return o
}

func (o LookupShareResultOutput) ToLookupShareResultOutputWithContext(ctx context.Context) LookupShareResultOutput {
	return o
}

func (o LookupShareResultOutput) EditPrivilege() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupShareResult) *bool { return v.EditPrivilege }).(pulumi.BoolPtrOutput)
}

func (o LookupShareResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.GroupId }).(pulumi.StringOutput)
}

func (o LookupShareResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupShareResultOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.ResourceId }).(pulumi.StringOutput)
}

func (o LookupShareResultOutput) SharePrivilege() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupShareResult) *bool { return v.SharePrivilege }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupShareResultOutput{})
}
