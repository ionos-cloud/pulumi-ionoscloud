// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupGroup(ctx *pulumi.Context, args *LookupGroupArgs, opts ...pulumi.InvokeOption) (*LookupGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGroupResult
	err := ctx.Invoke("ionoscloud:compute/getGroup:getGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroup.
type LookupGroupArgs struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// A collection of values returned by getGroup.
type LookupGroupResult struct {
	AccessActivityLog           bool           `pulumi:"accessActivityLog"`
	AccessAndManageCertificates bool           `pulumi:"accessAndManageCertificates"`
	AccessAndManageMonitoring   bool           `pulumi:"accessAndManageMonitoring"`
	CreateBackupUnit            bool           `pulumi:"createBackupUnit"`
	CreateDatacenter            bool           `pulumi:"createDatacenter"`
	CreateFlowLog               bool           `pulumi:"createFlowLog"`
	CreateInternetAccess        bool           `pulumi:"createInternetAccess"`
	CreateK8sCluster            bool           `pulumi:"createK8sCluster"`
	CreatePcc                   bool           `pulumi:"createPcc"`
	CreateSnapshot              bool           `pulumi:"createSnapshot"`
	Id                          *string        `pulumi:"id"`
	ManageDbaas                 bool           `pulumi:"manageDbaas"`
	Name                        *string        `pulumi:"name"`
	ReserveIp                   bool           `pulumi:"reserveIp"`
	S3Privilege                 bool           `pulumi:"s3Privilege"`
	Users                       []GetGroupUser `pulumi:"users"`
}

func LookupGroupOutput(ctx *pulumi.Context, args LookupGroupOutputArgs, opts ...pulumi.InvokeOption) LookupGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupGroupResultOutput, error) {
			args := v.(LookupGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:compute/getGroup:getGroup", args, LookupGroupResultOutput{}, options).(LookupGroupResultOutput), nil
		}).(LookupGroupResultOutput)
}

// A collection of arguments for invoking getGroup.
type LookupGroupOutputArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupArgs)(nil)).Elem()
}

// A collection of values returned by getGroup.
type LookupGroupResultOutput struct{ *pulumi.OutputState }

func (LookupGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupResult)(nil)).Elem()
}

func (o LookupGroupResultOutput) ToLookupGroupResultOutput() LookupGroupResultOutput {
	return o
}

func (o LookupGroupResultOutput) ToLookupGroupResultOutputWithContext(ctx context.Context) LookupGroupResultOutput {
	return o
}

func (o LookupGroupResultOutput) AccessActivityLog() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.AccessActivityLog }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) AccessAndManageCertificates() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.AccessAndManageCertificates }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) AccessAndManageMonitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.AccessAndManageMonitoring }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) CreateBackupUnit() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.CreateBackupUnit }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) CreateDatacenter() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.CreateDatacenter }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) CreateFlowLog() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.CreateFlowLog }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) CreateInternetAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.CreateInternetAccess }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) CreateK8sCluster() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.CreateK8sCluster }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) CreatePcc() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.CreatePcc }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) CreateSnapshot() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.CreateSnapshot }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupGroupResultOutput) ManageDbaas() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.ManageDbaas }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupGroupResultOutput) ReserveIp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.ReserveIp }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) S3Privilege() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGroupResult) bool { return v.S3Privilege }).(pulumi.BoolOutput)
}

func (o LookupGroupResultOutput) Users() GetGroupUserArrayOutput {
	return o.ApplyT(func(v LookupGroupResult) []GetGroupUser { return v.Users }).(GetGroupUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGroupResultOutput{})
}
