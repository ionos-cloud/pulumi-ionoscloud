// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupLan(ctx *pulumi.Context, args *LookupLanArgs, opts ...pulumi.InvokeOption) (*LookupLanResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLanResult
	err := ctx.Invoke("ionoscloud:compute/getLan:getLan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLan.
type LookupLanArgs struct {
	DatacenterId string  `pulumi:"datacenterId"`
	Id           *string `pulumi:"id"`
	Name         *string `pulumi:"name"`
}

// A collection of values returned by getLan.
type LookupLanResult struct {
	DatacenterId  string             `pulumi:"datacenterId"`
	Id            *string            `pulumi:"id"`
	IpFailovers   []GetLanIpFailover `pulumi:"ipFailovers"`
	Ipv6CidrBlock string             `pulumi:"ipv6CidrBlock"`
	Name          *string            `pulumi:"name"`
	Pcc           string             `pulumi:"pcc"`
	Public        bool               `pulumi:"public"`
}

func LookupLanOutput(ctx *pulumi.Context, args LookupLanOutputArgs, opts ...pulumi.InvokeOption) LookupLanResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLanResultOutput, error) {
			args := v.(LookupLanArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:compute/getLan:getLan", args, LookupLanResultOutput{}, options).(LookupLanResultOutput), nil
		}).(LookupLanResultOutput)
}

// A collection of arguments for invoking getLan.
type LookupLanOutputArgs struct {
	DatacenterId pulumi.StringInput    `pulumi:"datacenterId"`
	Id           pulumi.StringPtrInput `pulumi:"id"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupLanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLanArgs)(nil)).Elem()
}

// A collection of values returned by getLan.
type LookupLanResultOutput struct{ *pulumi.OutputState }

func (LookupLanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLanResult)(nil)).Elem()
}

func (o LookupLanResultOutput) ToLookupLanResultOutput() LookupLanResultOutput {
	return o
}

func (o LookupLanResultOutput) ToLookupLanResultOutputWithContext(ctx context.Context) LookupLanResultOutput {
	return o
}

func (o LookupLanResultOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLanResult) string { return v.DatacenterId }).(pulumi.StringOutput)
}

func (o LookupLanResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLanResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupLanResultOutput) IpFailovers() GetLanIpFailoverArrayOutput {
	return o.ApplyT(func(v LookupLanResult) []GetLanIpFailover { return v.IpFailovers }).(GetLanIpFailoverArrayOutput)
}

func (o LookupLanResultOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLanResult) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

func (o LookupLanResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLanResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupLanResultOutput) Pcc() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLanResult) string { return v.Pcc }).(pulumi.StringOutput)
}

func (o LookupLanResultOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupLanResult) bool { return v.Public }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLanResultOutput{})
}
