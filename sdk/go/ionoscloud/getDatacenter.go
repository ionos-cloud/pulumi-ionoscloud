// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ionoscloud

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **Datacenter data source** can be used to search for and return an existing Virtual Data Center.
// You can provide a string for the name and location parameters which will be compared with provisioned Virtual Data Centers.
// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
// When this happens, please refine your search string so that it is specific enough to return only one result.
//
// ## Example Usage
//
// ### By Name & Location
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ionoscloud.GetDatacenter(ctx, &ionoscloud.GetDatacenterArgs{
//				Location: pulumi.StringRef("us/las"),
//				Name:     pulumi.StringRef("Datacenter Example"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDatacenter(ctx *pulumi.Context, args *GetDatacenterArgs, opts ...pulumi.InvokeOption) (*GetDatacenterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDatacenterResult
	err := ctx.Invoke("ionoscloud:index/getDatacenter:getDatacenter", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatacenter.
type GetDatacenterArgs struct {
	// Id of an existing Virtual Data Center that you want to search for.
	Id *string `pulumi:"id"`
	// Id of the existing Virtual Data Center's location.
	//
	// Either `name`, `location` or `id` must be provided. If none, the datasource will return an error.
	Location *string `pulumi:"location"`
	// Name of an existing Virtual Data Center that you want to search for.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getDatacenter.
type GetDatacenterResult struct {
	// Array of features and CPU families available in a location
	CpuArchitectures []GetDatacenterCpuArchitecture `pulumi:"cpuArchitectures"`
	// Description for the Virtual Data Center
	Description string `pulumi:"description"`
	// List of features supported by the location this data center is part of
	Features []string `pulumi:"features"`
	// UUID of the Virtual Data Center
	Id            *string `pulumi:"id"`
	Ipv6CidrBlock string  `pulumi:"ipv6CidrBlock"`
	// The regional location where the Virtual Data Center will be created
	Location *string `pulumi:"location"`
	// The name of the Virtual Data Center
	Name *string `pulumi:"name"`
	// Boolean value representing if the data center requires extra protection e.g. two factor protection
	SecAuthProtection bool `pulumi:"secAuthProtection"`
	// The version of that Data Center. Gets incremented with every change
	Version int `pulumi:"version"`
}

func GetDatacenterOutput(ctx *pulumi.Context, args GetDatacenterOutputArgs, opts ...pulumi.InvokeOption) GetDatacenterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDatacenterResultOutput, error) {
			args := v.(GetDatacenterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:index/getDatacenter:getDatacenter", args, GetDatacenterResultOutput{}, options).(GetDatacenterResultOutput), nil
		}).(GetDatacenterResultOutput)
}

// A collection of arguments for invoking getDatacenter.
type GetDatacenterOutputArgs struct {
	// Id of an existing Virtual Data Center that you want to search for.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Id of the existing Virtual Data Center's location.
	//
	// Either `name`, `location` or `id` must be provided. If none, the datasource will return an error.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Name of an existing Virtual Data Center that you want to search for.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetDatacenterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatacenterArgs)(nil)).Elem()
}

// A collection of values returned by getDatacenter.
type GetDatacenterResultOutput struct{ *pulumi.OutputState }

func (GetDatacenterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatacenterResult)(nil)).Elem()
}

func (o GetDatacenterResultOutput) ToGetDatacenterResultOutput() GetDatacenterResultOutput {
	return o
}

func (o GetDatacenterResultOutput) ToGetDatacenterResultOutputWithContext(ctx context.Context) GetDatacenterResultOutput {
	return o
}

// Array of features and CPU families available in a location
func (o GetDatacenterResultOutput) CpuArchitectures() GetDatacenterCpuArchitectureArrayOutput {
	return o.ApplyT(func(v GetDatacenterResult) []GetDatacenterCpuArchitecture { return v.CpuArchitectures }).(GetDatacenterCpuArchitectureArrayOutput)
}

// Description for the Virtual Data Center
func (o GetDatacenterResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatacenterResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of features supported by the location this data center is part of
func (o GetDatacenterResultOutput) Features() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatacenterResult) []string { return v.Features }).(pulumi.StringArrayOutput)
}

// UUID of the Virtual Data Center
func (o GetDatacenterResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatacenterResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetDatacenterResultOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatacenterResult) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

// The regional location where the Virtual Data Center will be created
func (o GetDatacenterResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatacenterResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the Virtual Data Center
func (o GetDatacenterResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatacenterResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Boolean value representing if the data center requires extra protection e.g. two factor protection
func (o GetDatacenterResultOutput) SecAuthProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatacenterResult) bool { return v.SecAuthProtection }).(pulumi.BoolOutput)
}

// The version of that Data Center. Gets incremented with every change
func (o GetDatacenterResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatacenterResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatacenterResultOutput{})
}
