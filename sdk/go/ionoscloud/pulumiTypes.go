// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ionoscloud

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApigatewayCustomDomain struct {
	// [string] The certificate ID for the domain. Must be a valid certificate in UUID form.
	CertificateId *string `pulumi:"certificateId"`
	// [string] The domain name. Externally reachable.
	Name string `pulumi:"name"`
}

// ApigatewayCustomDomainInput is an input type that accepts ApigatewayCustomDomainArgs and ApigatewayCustomDomainOutput values.
// You can construct a concrete instance of `ApigatewayCustomDomainInput` via:
//
//	ApigatewayCustomDomainArgs{...}
type ApigatewayCustomDomainInput interface {
	pulumi.Input

	ToApigatewayCustomDomainOutput() ApigatewayCustomDomainOutput
	ToApigatewayCustomDomainOutputWithContext(context.Context) ApigatewayCustomDomainOutput
}

type ApigatewayCustomDomainArgs struct {
	// [string] The certificate ID for the domain. Must be a valid certificate in UUID form.
	CertificateId pulumi.StringPtrInput `pulumi:"certificateId"`
	// [string] The domain name. Externally reachable.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ApigatewayCustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayCustomDomain)(nil)).Elem()
}

func (i ApigatewayCustomDomainArgs) ToApigatewayCustomDomainOutput() ApigatewayCustomDomainOutput {
	return i.ToApigatewayCustomDomainOutputWithContext(context.Background())
}

func (i ApigatewayCustomDomainArgs) ToApigatewayCustomDomainOutputWithContext(ctx context.Context) ApigatewayCustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayCustomDomainOutput)
}

// ApigatewayCustomDomainArrayInput is an input type that accepts ApigatewayCustomDomainArray and ApigatewayCustomDomainArrayOutput values.
// You can construct a concrete instance of `ApigatewayCustomDomainArrayInput` via:
//
//	ApigatewayCustomDomainArray{ ApigatewayCustomDomainArgs{...} }
type ApigatewayCustomDomainArrayInput interface {
	pulumi.Input

	ToApigatewayCustomDomainArrayOutput() ApigatewayCustomDomainArrayOutput
	ToApigatewayCustomDomainArrayOutputWithContext(context.Context) ApigatewayCustomDomainArrayOutput
}

type ApigatewayCustomDomainArray []ApigatewayCustomDomainInput

func (ApigatewayCustomDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayCustomDomain)(nil)).Elem()
}

func (i ApigatewayCustomDomainArray) ToApigatewayCustomDomainArrayOutput() ApigatewayCustomDomainArrayOutput {
	return i.ToApigatewayCustomDomainArrayOutputWithContext(context.Background())
}

func (i ApigatewayCustomDomainArray) ToApigatewayCustomDomainArrayOutputWithContext(ctx context.Context) ApigatewayCustomDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayCustomDomainArrayOutput)
}

type ApigatewayCustomDomainOutput struct{ *pulumi.OutputState }

func (ApigatewayCustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayCustomDomain)(nil)).Elem()
}

func (o ApigatewayCustomDomainOutput) ToApigatewayCustomDomainOutput() ApigatewayCustomDomainOutput {
	return o
}

func (o ApigatewayCustomDomainOutput) ToApigatewayCustomDomainOutputWithContext(ctx context.Context) ApigatewayCustomDomainOutput {
	return o
}

// [string] The certificate ID for the domain. Must be a valid certificate in UUID form.
func (o ApigatewayCustomDomainOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigatewayCustomDomain) *string { return v.CertificateId }).(pulumi.StringPtrOutput)
}

// [string] The domain name. Externally reachable.
func (o ApigatewayCustomDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApigatewayCustomDomain) string { return v.Name }).(pulumi.StringOutput)
}

type ApigatewayCustomDomainArrayOutput struct{ *pulumi.OutputState }

func (ApigatewayCustomDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayCustomDomain)(nil)).Elem()
}

func (o ApigatewayCustomDomainArrayOutput) ToApigatewayCustomDomainArrayOutput() ApigatewayCustomDomainArrayOutput {
	return o
}

func (o ApigatewayCustomDomainArrayOutput) ToApigatewayCustomDomainArrayOutputWithContext(ctx context.Context) ApigatewayCustomDomainArrayOutput {
	return o
}

func (o ApigatewayCustomDomainArrayOutput) Index(i pulumi.IntInput) ApigatewayCustomDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigatewayCustomDomain {
		return vs[0].([]ApigatewayCustomDomain)[vs[1].(int)]
	}).(ApigatewayCustomDomainOutput)
}

type ApigatewayRouteUpstream struct {
	// [string] The host of the upstream.
	Host string `pulumi:"host"`
	// [string] The load balancer algorithm. Default value: `roundrobin`.
	Loadbalancer *string `pulumi:"loadbalancer"`
	// [int] The port of the upstream. Default value: `80`.
	Port *int `pulumi:"port"`
	// [string] The target URL of the upstream. Default value: `http`.
	Scheme *string `pulumi:"scheme"`
	// [int] Weight with which to split traffic to the upstream. Default value: `100`.
	Weight *int `pulumi:"weight"`
}

// ApigatewayRouteUpstreamInput is an input type that accepts ApigatewayRouteUpstreamArgs and ApigatewayRouteUpstreamOutput values.
// You can construct a concrete instance of `ApigatewayRouteUpstreamInput` via:
//
//	ApigatewayRouteUpstreamArgs{...}
type ApigatewayRouteUpstreamInput interface {
	pulumi.Input

	ToApigatewayRouteUpstreamOutput() ApigatewayRouteUpstreamOutput
	ToApigatewayRouteUpstreamOutputWithContext(context.Context) ApigatewayRouteUpstreamOutput
}

type ApigatewayRouteUpstreamArgs struct {
	// [string] The host of the upstream.
	Host pulumi.StringInput `pulumi:"host"`
	// [string] The load balancer algorithm. Default value: `roundrobin`.
	Loadbalancer pulumi.StringPtrInput `pulumi:"loadbalancer"`
	// [int] The port of the upstream. Default value: `80`.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// [string] The target URL of the upstream. Default value: `http`.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
	// [int] Weight with which to split traffic to the upstream. Default value: `100`.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (ApigatewayRouteUpstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayRouteUpstream)(nil)).Elem()
}

func (i ApigatewayRouteUpstreamArgs) ToApigatewayRouteUpstreamOutput() ApigatewayRouteUpstreamOutput {
	return i.ToApigatewayRouteUpstreamOutputWithContext(context.Background())
}

func (i ApigatewayRouteUpstreamArgs) ToApigatewayRouteUpstreamOutputWithContext(ctx context.Context) ApigatewayRouteUpstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayRouteUpstreamOutput)
}

// ApigatewayRouteUpstreamArrayInput is an input type that accepts ApigatewayRouteUpstreamArray and ApigatewayRouteUpstreamArrayOutput values.
// You can construct a concrete instance of `ApigatewayRouteUpstreamArrayInput` via:
//
//	ApigatewayRouteUpstreamArray{ ApigatewayRouteUpstreamArgs{...} }
type ApigatewayRouteUpstreamArrayInput interface {
	pulumi.Input

	ToApigatewayRouteUpstreamArrayOutput() ApigatewayRouteUpstreamArrayOutput
	ToApigatewayRouteUpstreamArrayOutputWithContext(context.Context) ApigatewayRouteUpstreamArrayOutput
}

type ApigatewayRouteUpstreamArray []ApigatewayRouteUpstreamInput

func (ApigatewayRouteUpstreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayRouteUpstream)(nil)).Elem()
}

func (i ApigatewayRouteUpstreamArray) ToApigatewayRouteUpstreamArrayOutput() ApigatewayRouteUpstreamArrayOutput {
	return i.ToApigatewayRouteUpstreamArrayOutputWithContext(context.Background())
}

func (i ApigatewayRouteUpstreamArray) ToApigatewayRouteUpstreamArrayOutputWithContext(ctx context.Context) ApigatewayRouteUpstreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigatewayRouteUpstreamArrayOutput)
}

type ApigatewayRouteUpstreamOutput struct{ *pulumi.OutputState }

func (ApigatewayRouteUpstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApigatewayRouteUpstream)(nil)).Elem()
}

func (o ApigatewayRouteUpstreamOutput) ToApigatewayRouteUpstreamOutput() ApigatewayRouteUpstreamOutput {
	return o
}

func (o ApigatewayRouteUpstreamOutput) ToApigatewayRouteUpstreamOutputWithContext(ctx context.Context) ApigatewayRouteUpstreamOutput {
	return o
}

// [string] The host of the upstream.
func (o ApigatewayRouteUpstreamOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v ApigatewayRouteUpstream) string { return v.Host }).(pulumi.StringOutput)
}

// [string] The load balancer algorithm. Default value: `roundrobin`.
func (o ApigatewayRouteUpstreamOutput) Loadbalancer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigatewayRouteUpstream) *string { return v.Loadbalancer }).(pulumi.StringPtrOutput)
}

// [int] The port of the upstream. Default value: `80`.
func (o ApigatewayRouteUpstreamOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigatewayRouteUpstream) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// [string] The target URL of the upstream. Default value: `http`.
func (o ApigatewayRouteUpstreamOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApigatewayRouteUpstream) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

// [int] Weight with which to split traffic to the upstream. Default value: `100`.
func (o ApigatewayRouteUpstreamOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApigatewayRouteUpstream) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ApigatewayRouteUpstreamArrayOutput struct{ *pulumi.OutputState }

func (ApigatewayRouteUpstreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApigatewayRouteUpstream)(nil)).Elem()
}

func (o ApigatewayRouteUpstreamArrayOutput) ToApigatewayRouteUpstreamArrayOutput() ApigatewayRouteUpstreamArrayOutput {
	return o
}

func (o ApigatewayRouteUpstreamArrayOutput) ToApigatewayRouteUpstreamArrayOutputWithContext(ctx context.Context) ApigatewayRouteUpstreamArrayOutput {
	return o
}

func (o ApigatewayRouteUpstreamArrayOutput) Index(i pulumi.IntInput) ApigatewayRouteUpstreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApigatewayRouteUpstream {
		return vs[0].([]ApigatewayRouteUpstream)[vs[1].(int)]
	}).(ApigatewayRouteUpstreamOutput)
}

type ApplicationLoadbalancerFlowlog struct {
	// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	Action string `pulumi:"action"`
	// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	Bucket string `pulumi:"bucket"`
	// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	Direction string `pulumi:"direction"`
	// The resource's unique identifier.
	Id *string `pulumi:"id"`
	// [string] Specifies the name of the flow log.
	//
	// ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the application load balancer resource.
	Name string `pulumi:"name"`
}

// ApplicationLoadbalancerFlowlogInput is an input type that accepts ApplicationLoadbalancerFlowlogArgs and ApplicationLoadbalancerFlowlogOutput values.
// You can construct a concrete instance of `ApplicationLoadbalancerFlowlogInput` via:
//
//	ApplicationLoadbalancerFlowlogArgs{...}
type ApplicationLoadbalancerFlowlogInput interface {
	pulumi.Input

	ToApplicationLoadbalancerFlowlogOutput() ApplicationLoadbalancerFlowlogOutput
	ToApplicationLoadbalancerFlowlogOutputWithContext(context.Context) ApplicationLoadbalancerFlowlogOutput
}

type ApplicationLoadbalancerFlowlogArgs struct {
	// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	Action pulumi.StringInput `pulumi:"action"`
	// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The resource's unique identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// [string] Specifies the name of the flow log.
	//
	// ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the application load balancer resource.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ApplicationLoadbalancerFlowlogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLoadbalancerFlowlog)(nil)).Elem()
}

func (i ApplicationLoadbalancerFlowlogArgs) ToApplicationLoadbalancerFlowlogOutput() ApplicationLoadbalancerFlowlogOutput {
	return i.ToApplicationLoadbalancerFlowlogOutputWithContext(context.Background())
}

func (i ApplicationLoadbalancerFlowlogArgs) ToApplicationLoadbalancerFlowlogOutputWithContext(ctx context.Context) ApplicationLoadbalancerFlowlogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerFlowlogOutput)
}

func (i ApplicationLoadbalancerFlowlogArgs) ToApplicationLoadbalancerFlowlogPtrOutput() ApplicationLoadbalancerFlowlogPtrOutput {
	return i.ToApplicationLoadbalancerFlowlogPtrOutputWithContext(context.Background())
}

func (i ApplicationLoadbalancerFlowlogArgs) ToApplicationLoadbalancerFlowlogPtrOutputWithContext(ctx context.Context) ApplicationLoadbalancerFlowlogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerFlowlogOutput).ToApplicationLoadbalancerFlowlogPtrOutputWithContext(ctx)
}

// ApplicationLoadbalancerFlowlogPtrInput is an input type that accepts ApplicationLoadbalancerFlowlogArgs, ApplicationLoadbalancerFlowlogPtr and ApplicationLoadbalancerFlowlogPtrOutput values.
// You can construct a concrete instance of `ApplicationLoadbalancerFlowlogPtrInput` via:
//
//	        ApplicationLoadbalancerFlowlogArgs{...}
//
//	or:
//
//	        nil
type ApplicationLoadbalancerFlowlogPtrInput interface {
	pulumi.Input

	ToApplicationLoadbalancerFlowlogPtrOutput() ApplicationLoadbalancerFlowlogPtrOutput
	ToApplicationLoadbalancerFlowlogPtrOutputWithContext(context.Context) ApplicationLoadbalancerFlowlogPtrOutput
}

type applicationLoadbalancerFlowlogPtrType ApplicationLoadbalancerFlowlogArgs

func ApplicationLoadbalancerFlowlogPtr(v *ApplicationLoadbalancerFlowlogArgs) ApplicationLoadbalancerFlowlogPtrInput {
	return (*applicationLoadbalancerFlowlogPtrType)(v)
}

func (*applicationLoadbalancerFlowlogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationLoadbalancerFlowlog)(nil)).Elem()
}

func (i *applicationLoadbalancerFlowlogPtrType) ToApplicationLoadbalancerFlowlogPtrOutput() ApplicationLoadbalancerFlowlogPtrOutput {
	return i.ToApplicationLoadbalancerFlowlogPtrOutputWithContext(context.Background())
}

func (i *applicationLoadbalancerFlowlogPtrType) ToApplicationLoadbalancerFlowlogPtrOutputWithContext(ctx context.Context) ApplicationLoadbalancerFlowlogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerFlowlogPtrOutput)
}

type ApplicationLoadbalancerFlowlogOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerFlowlogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLoadbalancerFlowlog)(nil)).Elem()
}

func (o ApplicationLoadbalancerFlowlogOutput) ToApplicationLoadbalancerFlowlogOutput() ApplicationLoadbalancerFlowlogOutput {
	return o
}

func (o ApplicationLoadbalancerFlowlogOutput) ToApplicationLoadbalancerFlowlogOutputWithContext(ctx context.Context) ApplicationLoadbalancerFlowlogOutput {
	return o
}

func (o ApplicationLoadbalancerFlowlogOutput) ToApplicationLoadbalancerFlowlogPtrOutput() ApplicationLoadbalancerFlowlogPtrOutput {
	return o.ToApplicationLoadbalancerFlowlogPtrOutputWithContext(context.Background())
}

func (o ApplicationLoadbalancerFlowlogOutput) ToApplicationLoadbalancerFlowlogPtrOutputWithContext(ctx context.Context) ApplicationLoadbalancerFlowlogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationLoadbalancerFlowlog) *ApplicationLoadbalancerFlowlog {
		return &v
	}).(ApplicationLoadbalancerFlowlogPtrOutput)
}

// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
func (o ApplicationLoadbalancerFlowlogOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerFlowlog) string { return v.Action }).(pulumi.StringOutput)
}

// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
func (o ApplicationLoadbalancerFlowlogOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerFlowlog) string { return v.Bucket }).(pulumi.StringOutput)
}

// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
func (o ApplicationLoadbalancerFlowlogOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerFlowlog) string { return v.Direction }).(pulumi.StringOutput)
}

// The resource's unique identifier.
func (o ApplicationLoadbalancerFlowlogOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerFlowlog) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// [string] Specifies the name of the flow log.
//
// ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the application load balancer resource.
func (o ApplicationLoadbalancerFlowlogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerFlowlog) string { return v.Name }).(pulumi.StringOutput)
}

type ApplicationLoadbalancerFlowlogPtrOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerFlowlogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationLoadbalancerFlowlog)(nil)).Elem()
}

func (o ApplicationLoadbalancerFlowlogPtrOutput) ToApplicationLoadbalancerFlowlogPtrOutput() ApplicationLoadbalancerFlowlogPtrOutput {
	return o
}

func (o ApplicationLoadbalancerFlowlogPtrOutput) ToApplicationLoadbalancerFlowlogPtrOutputWithContext(ctx context.Context) ApplicationLoadbalancerFlowlogPtrOutput {
	return o
}

func (o ApplicationLoadbalancerFlowlogPtrOutput) Elem() ApplicationLoadbalancerFlowlogOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerFlowlog) ApplicationLoadbalancerFlowlog {
		if v != nil {
			return *v
		}
		var ret ApplicationLoadbalancerFlowlog
		return ret
	}).(ApplicationLoadbalancerFlowlogOutput)
}

// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
func (o ApplicationLoadbalancerFlowlogPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
func (o ApplicationLoadbalancerFlowlogPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
func (o ApplicationLoadbalancerFlowlogPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The resource's unique identifier.
func (o ApplicationLoadbalancerFlowlogPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// [string] Specifies the name of the flow log.
//
// ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the application load balancer resource.
func (o ApplicationLoadbalancerFlowlogPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ApplicationLoadbalancerForwardingruleHttpRule struct {
	// [list] - An array of items in the collection.The action is only performed if each and every condition is met; if no conditions are set, the rule will always be performed.
	Conditions []ApplicationLoadbalancerForwardingruleHttpRuleCondition `pulumi:"conditions"`
	// [string] Valid only for STATIC actions.
	ContentType *string `pulumi:"contentType"`
	// [bool] Default is false; valid only for REDIRECT actions.
	DropQuery *bool `pulumi:"dropQuery"`
	// [string] The location for redirecting; mandatory and valid only for REDIRECT actions.
	Location *string `pulumi:"location"`
	// [string] The unique name of the Application Load Balancer HTTP rule.
	Name string `pulumi:"name"`
	// [string] The response message of the request; mandatory for STATIC action.
	ResponseMessage *string `pulumi:"responseMessage"`
	// [int] Valid only for REDIRECT and STATIC actions. For REDIRECT actions, default is 301 and possible values are 301, 302, 303, 307, and 308. For STATIC actions, default is 503 and valid range is 200 to 599.
	StatusCode *int `pulumi:"statusCode"`
	// [string] The UUID of the target group; mandatory for FORWARD action.
	TargetGroup *string `pulumi:"targetGroup"`
	// [string] Type of the Http Rule condition.
	Type string `pulumi:"type"`
}

// ApplicationLoadbalancerForwardingruleHttpRuleInput is an input type that accepts ApplicationLoadbalancerForwardingruleHttpRuleArgs and ApplicationLoadbalancerForwardingruleHttpRuleOutput values.
// You can construct a concrete instance of `ApplicationLoadbalancerForwardingruleHttpRuleInput` via:
//
//	ApplicationLoadbalancerForwardingruleHttpRuleArgs{...}
type ApplicationLoadbalancerForwardingruleHttpRuleInput interface {
	pulumi.Input

	ToApplicationLoadbalancerForwardingruleHttpRuleOutput() ApplicationLoadbalancerForwardingruleHttpRuleOutput
	ToApplicationLoadbalancerForwardingruleHttpRuleOutputWithContext(context.Context) ApplicationLoadbalancerForwardingruleHttpRuleOutput
}

type ApplicationLoadbalancerForwardingruleHttpRuleArgs struct {
	// [list] - An array of items in the collection.The action is only performed if each and every condition is met; if no conditions are set, the rule will always be performed.
	Conditions ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput `pulumi:"conditions"`
	// [string] Valid only for STATIC actions.
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	// [bool] Default is false; valid only for REDIRECT actions.
	DropQuery pulumi.BoolPtrInput `pulumi:"dropQuery"`
	// [string] The location for redirecting; mandatory and valid only for REDIRECT actions.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// [string] The unique name of the Application Load Balancer HTTP rule.
	Name pulumi.StringInput `pulumi:"name"`
	// [string] The response message of the request; mandatory for STATIC action.
	ResponseMessage pulumi.StringPtrInput `pulumi:"responseMessage"`
	// [int] Valid only for REDIRECT and STATIC actions. For REDIRECT actions, default is 301 and possible values are 301, 302, 303, 307, and 308. For STATIC actions, default is 503 and valid range is 200 to 599.
	StatusCode pulumi.IntPtrInput `pulumi:"statusCode"`
	// [string] The UUID of the target group; mandatory for FORWARD action.
	TargetGroup pulumi.StringPtrInput `pulumi:"targetGroup"`
	// [string] Type of the Http Rule condition.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationLoadbalancerForwardingruleHttpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRule)(nil)).Elem()
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleArgs) ToApplicationLoadbalancerForwardingruleHttpRuleOutput() ApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return i.ToApplicationLoadbalancerForwardingruleHttpRuleOutputWithContext(context.Background())
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleArgs) ToApplicationLoadbalancerForwardingruleHttpRuleOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerForwardingruleHttpRuleOutput)
}

// ApplicationLoadbalancerForwardingruleHttpRuleArrayInput is an input type that accepts ApplicationLoadbalancerForwardingruleHttpRuleArray and ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationLoadbalancerForwardingruleHttpRuleArrayInput` via:
//
//	ApplicationLoadbalancerForwardingruleHttpRuleArray{ ApplicationLoadbalancerForwardingruleHttpRuleArgs{...} }
type ApplicationLoadbalancerForwardingruleHttpRuleArrayInput interface {
	pulumi.Input

	ToApplicationLoadbalancerForwardingruleHttpRuleArrayOutput() ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput
	ToApplicationLoadbalancerForwardingruleHttpRuleArrayOutputWithContext(context.Context) ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput
}

type ApplicationLoadbalancerForwardingruleHttpRuleArray []ApplicationLoadbalancerForwardingruleHttpRuleInput

func (ApplicationLoadbalancerForwardingruleHttpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLoadbalancerForwardingruleHttpRule)(nil)).Elem()
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleArray) ToApplicationLoadbalancerForwardingruleHttpRuleArrayOutput() ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput {
	return i.ToApplicationLoadbalancerForwardingruleHttpRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleArray) ToApplicationLoadbalancerForwardingruleHttpRuleArrayOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput)
}

type ApplicationLoadbalancerForwardingruleHttpRuleOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerForwardingruleHttpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRule)(nil)).Elem()
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) ToApplicationLoadbalancerForwardingruleHttpRuleOutput() ApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) ToApplicationLoadbalancerForwardingruleHttpRuleOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return o
}

// [list] - An array of items in the collection.The action is only performed if each and every condition is met; if no conditions are set, the rule will always be performed.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) Conditions() ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) []ApplicationLoadbalancerForwardingruleHttpRuleCondition {
		return v.Conditions
	}).(ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput)
}

// [string] Valid only for STATIC actions.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

// [bool] Default is false; valid only for REDIRECT actions.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) DropQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) *bool { return v.DropQuery }).(pulumi.BoolPtrOutput)
}

// [string] The location for redirecting; mandatory and valid only for REDIRECT actions.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// [string] The unique name of the Application Load Balancer HTTP rule.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) string { return v.Name }).(pulumi.StringOutput)
}

// [string] The response message of the request; mandatory for STATIC action.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) ResponseMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) *string { return v.ResponseMessage }).(pulumi.StringPtrOutput)
}

// [int] Valid only for REDIRECT and STATIC actions. For REDIRECT actions, default is 301 and possible values are 301, 302, 303, 307, and 308. For STATIC actions, default is 503 and valid range is 200 to 599.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

// [string] The UUID of the target group; mandatory for FORWARD action.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) TargetGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) *string { return v.TargetGroup }).(pulumi.StringPtrOutput)
}

// [string] Type of the Http Rule condition.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLoadbalancerForwardingruleHttpRule)(nil)).Elem()
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput) ToApplicationLoadbalancerForwardingruleHttpRuleArrayOutput() ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput) ToApplicationLoadbalancerForwardingruleHttpRuleArrayOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput) Index(i pulumi.IntInput) ApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationLoadbalancerForwardingruleHttpRule {
		return vs[0].([]ApplicationLoadbalancerForwardingruleHttpRule)[vs[1].(int)]
	}).(ApplicationLoadbalancerForwardingruleHttpRuleOutput)
}

type ApplicationLoadbalancerForwardingruleHttpRuleCondition struct {
	// [string] Matching rule for the HTTP rule condition attribute; mandatory for HEADER, PATH, QUERY, METHOD, HOST, and COOKIE types; must be null when type is SOURCE_IP.
	Condition *string `pulumi:"condition"`
	// [string] Must be null when type is PATH, METHOD, HOST, or SOURCE_IP. Key can only be set when type is COOKIES, HEADER, or QUERY.
	Key *string `pulumi:"key"`
	// [bool] Specifies whether the condition is negated or not; the default is False.
	Negate *bool `pulumi:"negate"`
	// [string] Type of the Http Rule condition.
	Type string `pulumi:"type"`
	// [string] Mandatory for conditions CONTAINS, EQUALS, MATCHES, STARTS_WITH, ENDS_WITH; must be null when condition is EXISTS; should be a valid CIDR if provided and if type is SOURCE_IP.
	Value *string `pulumi:"value"`
}

// ApplicationLoadbalancerForwardingruleHttpRuleConditionInput is an input type that accepts ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs and ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput values.
// You can construct a concrete instance of `ApplicationLoadbalancerForwardingruleHttpRuleConditionInput` via:
//
//	ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs{...}
type ApplicationLoadbalancerForwardingruleHttpRuleConditionInput interface {
	pulumi.Input

	ToApplicationLoadbalancerForwardingruleHttpRuleConditionOutput() ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput
	ToApplicationLoadbalancerForwardingruleHttpRuleConditionOutputWithContext(context.Context) ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput
}

type ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs struct {
	// [string] Matching rule for the HTTP rule condition attribute; mandatory for HEADER, PATH, QUERY, METHOD, HOST, and COOKIE types; must be null when type is SOURCE_IP.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// [string] Must be null when type is PATH, METHOD, HOST, or SOURCE_IP. Key can only be set when type is COOKIES, HEADER, or QUERY.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// [bool] Specifies whether the condition is negated or not; the default is False.
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// [string] Type of the Http Rule condition.
	Type pulumi.StringInput `pulumi:"type"`
	// [string] Mandatory for conditions CONTAINS, EQUALS, MATCHES, STARTS_WITH, ENDS_WITH; must be null when condition is EXISTS; should be a valid CIDR if provided and if type is SOURCE_IP.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRuleCondition)(nil)).Elem()
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs) ToApplicationLoadbalancerForwardingruleHttpRuleConditionOutput() ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return i.ToApplicationLoadbalancerForwardingruleHttpRuleConditionOutputWithContext(context.Background())
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs) ToApplicationLoadbalancerForwardingruleHttpRuleConditionOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput)
}

// ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput is an input type that accepts ApplicationLoadbalancerForwardingruleHttpRuleConditionArray and ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput values.
// You can construct a concrete instance of `ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput` via:
//
//	ApplicationLoadbalancerForwardingruleHttpRuleConditionArray{ ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs{...} }
type ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput interface {
	pulumi.Input

	ToApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput() ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput
	ToApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutputWithContext(context.Context) ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput
}

type ApplicationLoadbalancerForwardingruleHttpRuleConditionArray []ApplicationLoadbalancerForwardingruleHttpRuleConditionInput

func (ApplicationLoadbalancerForwardingruleHttpRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLoadbalancerForwardingruleHttpRuleCondition)(nil)).Elem()
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleConditionArray) ToApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput() ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return i.ToApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutputWithContext(context.Background())
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleConditionArray) ToApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput)
}

type ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRuleCondition)(nil)).Elem()
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) ToApplicationLoadbalancerForwardingruleHttpRuleConditionOutput() ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) ToApplicationLoadbalancerForwardingruleHttpRuleConditionOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return o
}

// [string] Matching rule for the HTTP rule condition attribute; mandatory for HEADER, PATH, QUERY, METHOD, HOST, and COOKIE types; must be null when type is SOURCE_IP.
func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRuleCondition) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// [string] Must be null when type is PATH, METHOD, HOST, or SOURCE_IP. Key can only be set when type is COOKIES, HEADER, or QUERY.
func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRuleCondition) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// [bool] Specifies whether the condition is negated or not; the default is False.
func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRuleCondition) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// [string] Type of the Http Rule condition.
func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRuleCondition) string { return v.Type }).(pulumi.StringOutput)
}

// [string] Mandatory for conditions CONTAINS, EQUALS, MATCHES, STARTS_WITH, ENDS_WITH; must be null when condition is EXISTS; should be a valid CIDR if provided and if type is SOURCE_IP.
func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRuleCondition) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLoadbalancerForwardingruleHttpRuleCondition)(nil)).Elem()
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput) ToApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput() ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput) ToApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput) Index(i pulumi.IntInput) ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationLoadbalancerForwardingruleHttpRuleCondition {
		return vs[0].([]ApplicationLoadbalancerForwardingruleHttpRuleCondition)[vs[1].(int)]
	}).(ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput)
}

type AutoCertificateProviderExternalAccountBinding struct {
	// The key ID of the external account binding
	KeyId string `pulumi:"keyId"`
	// The secret of the external account binding
	KeySecret string `pulumi:"keySecret"`
}

// AutoCertificateProviderExternalAccountBindingInput is an input type that accepts AutoCertificateProviderExternalAccountBindingArgs and AutoCertificateProviderExternalAccountBindingOutput values.
// You can construct a concrete instance of `AutoCertificateProviderExternalAccountBindingInput` via:
//
//	AutoCertificateProviderExternalAccountBindingArgs{...}
type AutoCertificateProviderExternalAccountBindingInput interface {
	pulumi.Input

	ToAutoCertificateProviderExternalAccountBindingOutput() AutoCertificateProviderExternalAccountBindingOutput
	ToAutoCertificateProviderExternalAccountBindingOutputWithContext(context.Context) AutoCertificateProviderExternalAccountBindingOutput
}

type AutoCertificateProviderExternalAccountBindingArgs struct {
	// The key ID of the external account binding
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// The secret of the external account binding
	KeySecret pulumi.StringInput `pulumi:"keySecret"`
}

func (AutoCertificateProviderExternalAccountBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoCertificateProviderExternalAccountBinding)(nil)).Elem()
}

func (i AutoCertificateProviderExternalAccountBindingArgs) ToAutoCertificateProviderExternalAccountBindingOutput() AutoCertificateProviderExternalAccountBindingOutput {
	return i.ToAutoCertificateProviderExternalAccountBindingOutputWithContext(context.Background())
}

func (i AutoCertificateProviderExternalAccountBindingArgs) ToAutoCertificateProviderExternalAccountBindingOutputWithContext(ctx context.Context) AutoCertificateProviderExternalAccountBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoCertificateProviderExternalAccountBindingOutput)
}

func (i AutoCertificateProviderExternalAccountBindingArgs) ToAutoCertificateProviderExternalAccountBindingPtrOutput() AutoCertificateProviderExternalAccountBindingPtrOutput {
	return i.ToAutoCertificateProviderExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (i AutoCertificateProviderExternalAccountBindingArgs) ToAutoCertificateProviderExternalAccountBindingPtrOutputWithContext(ctx context.Context) AutoCertificateProviderExternalAccountBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoCertificateProviderExternalAccountBindingOutput).ToAutoCertificateProviderExternalAccountBindingPtrOutputWithContext(ctx)
}

// AutoCertificateProviderExternalAccountBindingPtrInput is an input type that accepts AutoCertificateProviderExternalAccountBindingArgs, AutoCertificateProviderExternalAccountBindingPtr and AutoCertificateProviderExternalAccountBindingPtrOutput values.
// You can construct a concrete instance of `AutoCertificateProviderExternalAccountBindingPtrInput` via:
//
//	        AutoCertificateProviderExternalAccountBindingArgs{...}
//
//	or:
//
//	        nil
type AutoCertificateProviderExternalAccountBindingPtrInput interface {
	pulumi.Input

	ToAutoCertificateProviderExternalAccountBindingPtrOutput() AutoCertificateProviderExternalAccountBindingPtrOutput
	ToAutoCertificateProviderExternalAccountBindingPtrOutputWithContext(context.Context) AutoCertificateProviderExternalAccountBindingPtrOutput
}

type autoCertificateProviderExternalAccountBindingPtrType AutoCertificateProviderExternalAccountBindingArgs

func AutoCertificateProviderExternalAccountBindingPtr(v *AutoCertificateProviderExternalAccountBindingArgs) AutoCertificateProviderExternalAccountBindingPtrInput {
	return (*autoCertificateProviderExternalAccountBindingPtrType)(v)
}

func (*autoCertificateProviderExternalAccountBindingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoCertificateProviderExternalAccountBinding)(nil)).Elem()
}

func (i *autoCertificateProviderExternalAccountBindingPtrType) ToAutoCertificateProviderExternalAccountBindingPtrOutput() AutoCertificateProviderExternalAccountBindingPtrOutput {
	return i.ToAutoCertificateProviderExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (i *autoCertificateProviderExternalAccountBindingPtrType) ToAutoCertificateProviderExternalAccountBindingPtrOutputWithContext(ctx context.Context) AutoCertificateProviderExternalAccountBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoCertificateProviderExternalAccountBindingPtrOutput)
}

type AutoCertificateProviderExternalAccountBindingOutput struct{ *pulumi.OutputState }

func (AutoCertificateProviderExternalAccountBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoCertificateProviderExternalAccountBinding)(nil)).Elem()
}

func (o AutoCertificateProviderExternalAccountBindingOutput) ToAutoCertificateProviderExternalAccountBindingOutput() AutoCertificateProviderExternalAccountBindingOutput {
	return o
}

func (o AutoCertificateProviderExternalAccountBindingOutput) ToAutoCertificateProviderExternalAccountBindingOutputWithContext(ctx context.Context) AutoCertificateProviderExternalAccountBindingOutput {
	return o
}

func (o AutoCertificateProviderExternalAccountBindingOutput) ToAutoCertificateProviderExternalAccountBindingPtrOutput() AutoCertificateProviderExternalAccountBindingPtrOutput {
	return o.ToAutoCertificateProviderExternalAccountBindingPtrOutputWithContext(context.Background())
}

func (o AutoCertificateProviderExternalAccountBindingOutput) ToAutoCertificateProviderExternalAccountBindingPtrOutputWithContext(ctx context.Context) AutoCertificateProviderExternalAccountBindingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoCertificateProviderExternalAccountBinding) *AutoCertificateProviderExternalAccountBinding {
		return &v
	}).(AutoCertificateProviderExternalAccountBindingPtrOutput)
}

// The key ID of the external account binding
func (o AutoCertificateProviderExternalAccountBindingOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v AutoCertificateProviderExternalAccountBinding) string { return v.KeyId }).(pulumi.StringOutput)
}

// The secret of the external account binding
func (o AutoCertificateProviderExternalAccountBindingOutput) KeySecret() pulumi.StringOutput {
	return o.ApplyT(func(v AutoCertificateProviderExternalAccountBinding) string { return v.KeySecret }).(pulumi.StringOutput)
}

type AutoCertificateProviderExternalAccountBindingPtrOutput struct{ *pulumi.OutputState }

func (AutoCertificateProviderExternalAccountBindingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoCertificateProviderExternalAccountBinding)(nil)).Elem()
}

func (o AutoCertificateProviderExternalAccountBindingPtrOutput) ToAutoCertificateProviderExternalAccountBindingPtrOutput() AutoCertificateProviderExternalAccountBindingPtrOutput {
	return o
}

func (o AutoCertificateProviderExternalAccountBindingPtrOutput) ToAutoCertificateProviderExternalAccountBindingPtrOutputWithContext(ctx context.Context) AutoCertificateProviderExternalAccountBindingPtrOutput {
	return o
}

func (o AutoCertificateProviderExternalAccountBindingPtrOutput) Elem() AutoCertificateProviderExternalAccountBindingOutput {
	return o.ApplyT(func(v *AutoCertificateProviderExternalAccountBinding) AutoCertificateProviderExternalAccountBinding {
		if v != nil {
			return *v
		}
		var ret AutoCertificateProviderExternalAccountBinding
		return ret
	}).(AutoCertificateProviderExternalAccountBindingOutput)
}

// The key ID of the external account binding
func (o AutoCertificateProviderExternalAccountBindingPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoCertificateProviderExternalAccountBinding) *string {
		if v == nil {
			return nil
		}
		return &v.KeyId
	}).(pulumi.StringPtrOutput)
}

// The secret of the external account binding
func (o AutoCertificateProviderExternalAccountBindingPtrOutput) KeySecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoCertificateProviderExternalAccountBinding) *string {
		if v == nil {
			return nil
		}
		return &v.KeySecret
	}).(pulumi.StringPtrOutput)
}

type AutoscalingGroupPolicy struct {
	// [string] The Metric that should trigger the scaling actions. Metric values are checked at fixed intervals. Possible values: `INSTANCE_CPU_UTILIZATION_AVERAGE`, `INSTANCE_NETWORK_IN_BYTES`, `INSTANCE_NETWORK_IN_PACKETS`, `INSTANCE_NETWORK_OUT_BYTES`, `INSTANCE_NETWORK_OUT_PACKETS`
	Metric string `pulumi:"metric"`
	// [string] Defines the time range, for which the samples will be aggregated. Default is 120s. *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
	Range *string `pulumi:"range"`
	// [list] Specifies the action to take when the `scaleInThreshold` is exceeded. Hereby, scaling in is always about removing VMs that are currently associated with this autoscaling group. Default termination policy is OLDEST_SERVER_FIRST.
	ScaleInAction AutoscalingGroupPolicyScaleInAction `pulumi:"scaleInAction"`
	// [int] A lower threshold on the value of `metric`. Will be used with `less than` (<) operator. Exceeding this will start a Scale-In Action as specified by the `scaleInAction` property. The value must have a higher minimum delta to the `scaleOutThreshold` depending on the `metric` to avoid competitive actions at the same time.
	ScaleInThreshold int `pulumi:"scaleInThreshold"`
	// [list] Specifies the action to take when the `scaleOutThreshold` is exceeded. Hereby, scaling out is always about adding new VMs to this autoscaling group.
	ScaleOutAction AutoscalingGroupPolicyScaleOutAction `pulumi:"scaleOutAction"`
	// [int] The upper threshold for the value of the `metric`. Used with the `greater than` (>) operator. A scale-out action is triggered when this value is exceeded, specified by the `scaleOutAction` property. The value must have a lower minimum delta to the `scaleInThreshold`, depending on the metric, to avoid competing for actions simultaneously. If `properties.policy.unit=TOTAL`, a value >= 40 must be chosen.
	ScaleOutThreshold int `pulumi:"scaleOutThreshold"`
	// [string] Units of the applied Metric. Possible values are: `PER_HOUR`, `PER_MINUTE`, `PER_SECOND`, `TOTAL`.
	Unit string `pulumi:"unit"`
}

// AutoscalingGroupPolicyInput is an input type that accepts AutoscalingGroupPolicyArgs and AutoscalingGroupPolicyOutput values.
// You can construct a concrete instance of `AutoscalingGroupPolicyInput` via:
//
//	AutoscalingGroupPolicyArgs{...}
type AutoscalingGroupPolicyInput interface {
	pulumi.Input

	ToAutoscalingGroupPolicyOutput() AutoscalingGroupPolicyOutput
	ToAutoscalingGroupPolicyOutputWithContext(context.Context) AutoscalingGroupPolicyOutput
}

type AutoscalingGroupPolicyArgs struct {
	// [string] The Metric that should trigger the scaling actions. Metric values are checked at fixed intervals. Possible values: `INSTANCE_CPU_UTILIZATION_AVERAGE`, `INSTANCE_NETWORK_IN_BYTES`, `INSTANCE_NETWORK_IN_PACKETS`, `INSTANCE_NETWORK_OUT_BYTES`, `INSTANCE_NETWORK_OUT_PACKETS`
	Metric pulumi.StringInput `pulumi:"metric"`
	// [string] Defines the time range, for which the samples will be aggregated. Default is 120s. *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
	Range pulumi.StringPtrInput `pulumi:"range"`
	// [list] Specifies the action to take when the `scaleInThreshold` is exceeded. Hereby, scaling in is always about removing VMs that are currently associated with this autoscaling group. Default termination policy is OLDEST_SERVER_FIRST.
	ScaleInAction AutoscalingGroupPolicyScaleInActionInput `pulumi:"scaleInAction"`
	// [int] A lower threshold on the value of `metric`. Will be used with `less than` (<) operator. Exceeding this will start a Scale-In Action as specified by the `scaleInAction` property. The value must have a higher minimum delta to the `scaleOutThreshold` depending on the `metric` to avoid competitive actions at the same time.
	ScaleInThreshold pulumi.IntInput `pulumi:"scaleInThreshold"`
	// [list] Specifies the action to take when the `scaleOutThreshold` is exceeded. Hereby, scaling out is always about adding new VMs to this autoscaling group.
	ScaleOutAction AutoscalingGroupPolicyScaleOutActionInput `pulumi:"scaleOutAction"`
	// [int] The upper threshold for the value of the `metric`. Used with the `greater than` (>) operator. A scale-out action is triggered when this value is exceeded, specified by the `scaleOutAction` property. The value must have a lower minimum delta to the `scaleInThreshold`, depending on the metric, to avoid competing for actions simultaneously. If `properties.policy.unit=TOTAL`, a value >= 40 must be chosen.
	ScaleOutThreshold pulumi.IntInput `pulumi:"scaleOutThreshold"`
	// [string] Units of the applied Metric. Possible values are: `PER_HOUR`, `PER_MINUTE`, `PER_SECOND`, `TOTAL`.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (AutoscalingGroupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupPolicy)(nil)).Elem()
}

func (i AutoscalingGroupPolicyArgs) ToAutoscalingGroupPolicyOutput() AutoscalingGroupPolicyOutput {
	return i.ToAutoscalingGroupPolicyOutputWithContext(context.Background())
}

func (i AutoscalingGroupPolicyArgs) ToAutoscalingGroupPolicyOutputWithContext(ctx context.Context) AutoscalingGroupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupPolicyOutput)
}

func (i AutoscalingGroupPolicyArgs) ToAutoscalingGroupPolicyPtrOutput() AutoscalingGroupPolicyPtrOutput {
	return i.ToAutoscalingGroupPolicyPtrOutputWithContext(context.Background())
}

func (i AutoscalingGroupPolicyArgs) ToAutoscalingGroupPolicyPtrOutputWithContext(ctx context.Context) AutoscalingGroupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupPolicyOutput).ToAutoscalingGroupPolicyPtrOutputWithContext(ctx)
}

// AutoscalingGroupPolicyPtrInput is an input type that accepts AutoscalingGroupPolicyArgs, AutoscalingGroupPolicyPtr and AutoscalingGroupPolicyPtrOutput values.
// You can construct a concrete instance of `AutoscalingGroupPolicyPtrInput` via:
//
//	        AutoscalingGroupPolicyArgs{...}
//
//	or:
//
//	        nil
type AutoscalingGroupPolicyPtrInput interface {
	pulumi.Input

	ToAutoscalingGroupPolicyPtrOutput() AutoscalingGroupPolicyPtrOutput
	ToAutoscalingGroupPolicyPtrOutputWithContext(context.Context) AutoscalingGroupPolicyPtrOutput
}

type autoscalingGroupPolicyPtrType AutoscalingGroupPolicyArgs

func AutoscalingGroupPolicyPtr(v *AutoscalingGroupPolicyArgs) AutoscalingGroupPolicyPtrInput {
	return (*autoscalingGroupPolicyPtrType)(v)
}

func (*autoscalingGroupPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingGroupPolicy)(nil)).Elem()
}

func (i *autoscalingGroupPolicyPtrType) ToAutoscalingGroupPolicyPtrOutput() AutoscalingGroupPolicyPtrOutput {
	return i.ToAutoscalingGroupPolicyPtrOutputWithContext(context.Background())
}

func (i *autoscalingGroupPolicyPtrType) ToAutoscalingGroupPolicyPtrOutputWithContext(ctx context.Context) AutoscalingGroupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupPolicyPtrOutput)
}

type AutoscalingGroupPolicyOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupPolicy)(nil)).Elem()
}

func (o AutoscalingGroupPolicyOutput) ToAutoscalingGroupPolicyOutput() AutoscalingGroupPolicyOutput {
	return o
}

func (o AutoscalingGroupPolicyOutput) ToAutoscalingGroupPolicyOutputWithContext(ctx context.Context) AutoscalingGroupPolicyOutput {
	return o
}

func (o AutoscalingGroupPolicyOutput) ToAutoscalingGroupPolicyPtrOutput() AutoscalingGroupPolicyPtrOutput {
	return o.ToAutoscalingGroupPolicyPtrOutputWithContext(context.Background())
}

func (o AutoscalingGroupPolicyOutput) ToAutoscalingGroupPolicyPtrOutputWithContext(ctx context.Context) AutoscalingGroupPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalingGroupPolicy) *AutoscalingGroupPolicy {
		return &v
	}).(AutoscalingGroupPolicyPtrOutput)
}

// [string] The Metric that should trigger the scaling actions. Metric values are checked at fixed intervals. Possible values: `INSTANCE_CPU_UTILIZATION_AVERAGE`, `INSTANCE_NETWORK_IN_BYTES`, `INSTANCE_NETWORK_IN_PACKETS`, `INSTANCE_NETWORK_OUT_BYTES`, `INSTANCE_NETWORK_OUT_PACKETS`
func (o AutoscalingGroupPolicyOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicy) string { return v.Metric }).(pulumi.StringOutput)
}

// [string] Defines the time range, for which the samples will be aggregated. Default is 120s. *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
func (o AutoscalingGroupPolicyOutput) Range() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicy) *string { return v.Range }).(pulumi.StringPtrOutput)
}

// [list] Specifies the action to take when the `scaleInThreshold` is exceeded. Hereby, scaling in is always about removing VMs that are currently associated with this autoscaling group. Default termination policy is OLDEST_SERVER_FIRST.
func (o AutoscalingGroupPolicyOutput) ScaleInAction() AutoscalingGroupPolicyScaleInActionOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicy) AutoscalingGroupPolicyScaleInAction { return v.ScaleInAction }).(AutoscalingGroupPolicyScaleInActionOutput)
}

// [int] A lower threshold on the value of `metric`. Will be used with `less than` (<) operator. Exceeding this will start a Scale-In Action as specified by the `scaleInAction` property. The value must have a higher minimum delta to the `scaleOutThreshold` depending on the `metric` to avoid competitive actions at the same time.
func (o AutoscalingGroupPolicyOutput) ScaleInThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicy) int { return v.ScaleInThreshold }).(pulumi.IntOutput)
}

// [list] Specifies the action to take when the `scaleOutThreshold` is exceeded. Hereby, scaling out is always about adding new VMs to this autoscaling group.
func (o AutoscalingGroupPolicyOutput) ScaleOutAction() AutoscalingGroupPolicyScaleOutActionOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicy) AutoscalingGroupPolicyScaleOutAction { return v.ScaleOutAction }).(AutoscalingGroupPolicyScaleOutActionOutput)
}

// [int] The upper threshold for the value of the `metric`. Used with the `greater than` (>) operator. A scale-out action is triggered when this value is exceeded, specified by the `scaleOutAction` property. The value must have a lower minimum delta to the `scaleInThreshold`, depending on the metric, to avoid competing for actions simultaneously. If `properties.policy.unit=TOTAL`, a value >= 40 must be chosen.
func (o AutoscalingGroupPolicyOutput) ScaleOutThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicy) int { return v.ScaleOutThreshold }).(pulumi.IntOutput)
}

// [string] Units of the applied Metric. Possible values are: `PER_HOUR`, `PER_MINUTE`, `PER_SECOND`, `TOTAL`.
func (o AutoscalingGroupPolicyOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicy) string { return v.Unit }).(pulumi.StringOutput)
}

type AutoscalingGroupPolicyPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingGroupPolicy)(nil)).Elem()
}

func (o AutoscalingGroupPolicyPtrOutput) ToAutoscalingGroupPolicyPtrOutput() AutoscalingGroupPolicyPtrOutput {
	return o
}

func (o AutoscalingGroupPolicyPtrOutput) ToAutoscalingGroupPolicyPtrOutputWithContext(ctx context.Context) AutoscalingGroupPolicyPtrOutput {
	return o
}

func (o AutoscalingGroupPolicyPtrOutput) Elem() AutoscalingGroupPolicyOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicy) AutoscalingGroupPolicy {
		if v != nil {
			return *v
		}
		var ret AutoscalingGroupPolicy
		return ret
	}).(AutoscalingGroupPolicyOutput)
}

// [string] The Metric that should trigger the scaling actions. Metric values are checked at fixed intervals. Possible values: `INSTANCE_CPU_UTILIZATION_AVERAGE`, `INSTANCE_NETWORK_IN_BYTES`, `INSTANCE_NETWORK_IN_PACKETS`, `INSTANCE_NETWORK_OUT_BYTES`, `INSTANCE_NETWORK_OUT_PACKETS`
func (o AutoscalingGroupPolicyPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Metric
	}).(pulumi.StringPtrOutput)
}

// [string] Defines the time range, for which the samples will be aggregated. Default is 120s. *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
func (o AutoscalingGroupPolicyPtrOutput) Range() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Range
	}).(pulumi.StringPtrOutput)
}

// [list] Specifies the action to take when the `scaleInThreshold` is exceeded. Hereby, scaling in is always about removing VMs that are currently associated with this autoscaling group. Default termination policy is OLDEST_SERVER_FIRST.
func (o AutoscalingGroupPolicyPtrOutput) ScaleInAction() AutoscalingGroupPolicyScaleInActionPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicy) *AutoscalingGroupPolicyScaleInAction {
		if v == nil {
			return nil
		}
		return &v.ScaleInAction
	}).(AutoscalingGroupPolicyScaleInActionPtrOutput)
}

// [int] A lower threshold on the value of `metric`. Will be used with `less than` (<) operator. Exceeding this will start a Scale-In Action as specified by the `scaleInAction` property. The value must have a higher minimum delta to the `scaleOutThreshold` depending on the `metric` to avoid competitive actions at the same time.
func (o AutoscalingGroupPolicyPtrOutput) ScaleInThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.ScaleInThreshold
	}).(pulumi.IntPtrOutput)
}

// [list] Specifies the action to take when the `scaleOutThreshold` is exceeded. Hereby, scaling out is always about adding new VMs to this autoscaling group.
func (o AutoscalingGroupPolicyPtrOutput) ScaleOutAction() AutoscalingGroupPolicyScaleOutActionPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicy) *AutoscalingGroupPolicyScaleOutAction {
		if v == nil {
			return nil
		}
		return &v.ScaleOutAction
	}).(AutoscalingGroupPolicyScaleOutActionPtrOutput)
}

// [int] The upper threshold for the value of the `metric`. Used with the `greater than` (>) operator. A scale-out action is triggered when this value is exceeded, specified by the `scaleOutAction` property. The value must have a lower minimum delta to the `scaleInThreshold`, depending on the metric, to avoid competing for actions simultaneously. If `properties.policy.unit=TOTAL`, a value >= 40 must be chosen.
func (o AutoscalingGroupPolicyPtrOutput) ScaleOutThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.ScaleOutThreshold
	}).(pulumi.IntPtrOutput)
}

// [string] Units of the applied Metric. Possible values are: `PER_HOUR`, `PER_MINUTE`, `PER_SECOND`, `TOTAL`.
func (o AutoscalingGroupPolicyPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

type AutoscalingGroupPolicyScaleInAction struct {
	// [int] When `amountType=ABSOLUTE` specifies the absolute number of VMs that are added. The value must be between 1 to 10. `amountType=PERCENTAGE` specifies the percentage value that is applied to the current number of replicas of the VM Auto Scaling Group. The value must be between 1 to 200. At least one VM is always added.
	Amount int `pulumi:"amount"`
	// [string] The type for the given amount. Possible values are: `ABSOLUTE`, `PERCENTAGE`.
	AmountType string `pulumi:"amountType"`
	// [string] Minimum time to pass after this Scaling action has started, until the next Scaling action will be started. Additionally, if a Scaling action is currently in progress, no second Scaling action will be started for the same autoscaling group. Instead, the Metric will be re-evaluated after the current Scaling action is completed (either successfully or with failures). This is validated with a minimum value of 2 minutes and a maximum of 24 hours currently. Default value is 5 minutes if not given. *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
	CooldownPeriod *string `pulumi:"cooldownPeriod"`
	// [bool] If set to `true`, when deleting a replica during scale in, any attached volume will also be deleted. When set to `false`, all volumes remain in the datacenter and must be deleted manually. Note that every scale-out creates new volumes. When they are not deleted, they will eventually use all of your contracts resource limits. At this point, scaling out would not be possible anymore.
	DeleteVolumes bool `pulumi:"deleteVolumes"`
	// [string] The type of the termination policy for the autoscaling group so that a specific pattern is followed for Scaling-In replicas. Default termination policy is `OLDEST_SERVER_FIRST`. Possible values are: `OLDEST_SERVER_FIRST`, `NEWEST_SERVER_FIRST`, `RANDOM`
	TerminationPolicyType *string `pulumi:"terminationPolicyType"`
}

// AutoscalingGroupPolicyScaleInActionInput is an input type that accepts AutoscalingGroupPolicyScaleInActionArgs and AutoscalingGroupPolicyScaleInActionOutput values.
// You can construct a concrete instance of `AutoscalingGroupPolicyScaleInActionInput` via:
//
//	AutoscalingGroupPolicyScaleInActionArgs{...}
type AutoscalingGroupPolicyScaleInActionInput interface {
	pulumi.Input

	ToAutoscalingGroupPolicyScaleInActionOutput() AutoscalingGroupPolicyScaleInActionOutput
	ToAutoscalingGroupPolicyScaleInActionOutputWithContext(context.Context) AutoscalingGroupPolicyScaleInActionOutput
}

type AutoscalingGroupPolicyScaleInActionArgs struct {
	// [int] When `amountType=ABSOLUTE` specifies the absolute number of VMs that are added. The value must be between 1 to 10. `amountType=PERCENTAGE` specifies the percentage value that is applied to the current number of replicas of the VM Auto Scaling Group. The value must be between 1 to 200. At least one VM is always added.
	Amount pulumi.IntInput `pulumi:"amount"`
	// [string] The type for the given amount. Possible values are: `ABSOLUTE`, `PERCENTAGE`.
	AmountType pulumi.StringInput `pulumi:"amountType"`
	// [string] Minimum time to pass after this Scaling action has started, until the next Scaling action will be started. Additionally, if a Scaling action is currently in progress, no second Scaling action will be started for the same autoscaling group. Instead, the Metric will be re-evaluated after the current Scaling action is completed (either successfully or with failures). This is validated with a minimum value of 2 minutes and a maximum of 24 hours currently. Default value is 5 minutes if not given. *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
	CooldownPeriod pulumi.StringPtrInput `pulumi:"cooldownPeriod"`
	// [bool] If set to `true`, when deleting a replica during scale in, any attached volume will also be deleted. When set to `false`, all volumes remain in the datacenter and must be deleted manually. Note that every scale-out creates new volumes. When they are not deleted, they will eventually use all of your contracts resource limits. At this point, scaling out would not be possible anymore.
	DeleteVolumes pulumi.BoolInput `pulumi:"deleteVolumes"`
	// [string] The type of the termination policy for the autoscaling group so that a specific pattern is followed for Scaling-In replicas. Default termination policy is `OLDEST_SERVER_FIRST`. Possible values are: `OLDEST_SERVER_FIRST`, `NEWEST_SERVER_FIRST`, `RANDOM`
	TerminationPolicyType pulumi.StringPtrInput `pulumi:"terminationPolicyType"`
}

func (AutoscalingGroupPolicyScaleInActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupPolicyScaleInAction)(nil)).Elem()
}

func (i AutoscalingGroupPolicyScaleInActionArgs) ToAutoscalingGroupPolicyScaleInActionOutput() AutoscalingGroupPolicyScaleInActionOutput {
	return i.ToAutoscalingGroupPolicyScaleInActionOutputWithContext(context.Background())
}

func (i AutoscalingGroupPolicyScaleInActionArgs) ToAutoscalingGroupPolicyScaleInActionOutputWithContext(ctx context.Context) AutoscalingGroupPolicyScaleInActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupPolicyScaleInActionOutput)
}

func (i AutoscalingGroupPolicyScaleInActionArgs) ToAutoscalingGroupPolicyScaleInActionPtrOutput() AutoscalingGroupPolicyScaleInActionPtrOutput {
	return i.ToAutoscalingGroupPolicyScaleInActionPtrOutputWithContext(context.Background())
}

func (i AutoscalingGroupPolicyScaleInActionArgs) ToAutoscalingGroupPolicyScaleInActionPtrOutputWithContext(ctx context.Context) AutoscalingGroupPolicyScaleInActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupPolicyScaleInActionOutput).ToAutoscalingGroupPolicyScaleInActionPtrOutputWithContext(ctx)
}

// AutoscalingGroupPolicyScaleInActionPtrInput is an input type that accepts AutoscalingGroupPolicyScaleInActionArgs, AutoscalingGroupPolicyScaleInActionPtr and AutoscalingGroupPolicyScaleInActionPtrOutput values.
// You can construct a concrete instance of `AutoscalingGroupPolicyScaleInActionPtrInput` via:
//
//	        AutoscalingGroupPolicyScaleInActionArgs{...}
//
//	or:
//
//	        nil
type AutoscalingGroupPolicyScaleInActionPtrInput interface {
	pulumi.Input

	ToAutoscalingGroupPolicyScaleInActionPtrOutput() AutoscalingGroupPolicyScaleInActionPtrOutput
	ToAutoscalingGroupPolicyScaleInActionPtrOutputWithContext(context.Context) AutoscalingGroupPolicyScaleInActionPtrOutput
}

type autoscalingGroupPolicyScaleInActionPtrType AutoscalingGroupPolicyScaleInActionArgs

func AutoscalingGroupPolicyScaleInActionPtr(v *AutoscalingGroupPolicyScaleInActionArgs) AutoscalingGroupPolicyScaleInActionPtrInput {
	return (*autoscalingGroupPolicyScaleInActionPtrType)(v)
}

func (*autoscalingGroupPolicyScaleInActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingGroupPolicyScaleInAction)(nil)).Elem()
}

func (i *autoscalingGroupPolicyScaleInActionPtrType) ToAutoscalingGroupPolicyScaleInActionPtrOutput() AutoscalingGroupPolicyScaleInActionPtrOutput {
	return i.ToAutoscalingGroupPolicyScaleInActionPtrOutputWithContext(context.Background())
}

func (i *autoscalingGroupPolicyScaleInActionPtrType) ToAutoscalingGroupPolicyScaleInActionPtrOutputWithContext(ctx context.Context) AutoscalingGroupPolicyScaleInActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupPolicyScaleInActionPtrOutput)
}

type AutoscalingGroupPolicyScaleInActionOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupPolicyScaleInActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupPolicyScaleInAction)(nil)).Elem()
}

func (o AutoscalingGroupPolicyScaleInActionOutput) ToAutoscalingGroupPolicyScaleInActionOutput() AutoscalingGroupPolicyScaleInActionOutput {
	return o
}

func (o AutoscalingGroupPolicyScaleInActionOutput) ToAutoscalingGroupPolicyScaleInActionOutputWithContext(ctx context.Context) AutoscalingGroupPolicyScaleInActionOutput {
	return o
}

func (o AutoscalingGroupPolicyScaleInActionOutput) ToAutoscalingGroupPolicyScaleInActionPtrOutput() AutoscalingGroupPolicyScaleInActionPtrOutput {
	return o.ToAutoscalingGroupPolicyScaleInActionPtrOutputWithContext(context.Background())
}

func (o AutoscalingGroupPolicyScaleInActionOutput) ToAutoscalingGroupPolicyScaleInActionPtrOutputWithContext(ctx context.Context) AutoscalingGroupPolicyScaleInActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalingGroupPolicyScaleInAction) *AutoscalingGroupPolicyScaleInAction {
		return &v
	}).(AutoscalingGroupPolicyScaleInActionPtrOutput)
}

// [int] When `amountType=ABSOLUTE` specifies the absolute number of VMs that are added. The value must be between 1 to 10. `amountType=PERCENTAGE` specifies the percentage value that is applied to the current number of replicas of the VM Auto Scaling Group. The value must be between 1 to 200. At least one VM is always added.
func (o AutoscalingGroupPolicyScaleInActionOutput) Amount() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicyScaleInAction) int { return v.Amount }).(pulumi.IntOutput)
}

// [string] The type for the given amount. Possible values are: `ABSOLUTE`, `PERCENTAGE`.
func (o AutoscalingGroupPolicyScaleInActionOutput) AmountType() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicyScaleInAction) string { return v.AmountType }).(pulumi.StringOutput)
}

// [string] Minimum time to pass after this Scaling action has started, until the next Scaling action will be started. Additionally, if a Scaling action is currently in progress, no second Scaling action will be started for the same autoscaling group. Instead, the Metric will be re-evaluated after the current Scaling action is completed (either successfully or with failures). This is validated with a minimum value of 2 minutes and a maximum of 24 hours currently. Default value is 5 minutes if not given. *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
func (o AutoscalingGroupPolicyScaleInActionOutput) CooldownPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicyScaleInAction) *string { return v.CooldownPeriod }).(pulumi.StringPtrOutput)
}

// [bool] If set to `true`, when deleting a replica during scale in, any attached volume will also be deleted. When set to `false`, all volumes remain in the datacenter and must be deleted manually. Note that every scale-out creates new volumes. When they are not deleted, they will eventually use all of your contracts resource limits. At this point, scaling out would not be possible anymore.
func (o AutoscalingGroupPolicyScaleInActionOutput) DeleteVolumes() pulumi.BoolOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicyScaleInAction) bool { return v.DeleteVolumes }).(pulumi.BoolOutput)
}

// [string] The type of the termination policy for the autoscaling group so that a specific pattern is followed for Scaling-In replicas. Default termination policy is `OLDEST_SERVER_FIRST`. Possible values are: `OLDEST_SERVER_FIRST`, `NEWEST_SERVER_FIRST`, `RANDOM`
func (o AutoscalingGroupPolicyScaleInActionOutput) TerminationPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicyScaleInAction) *string { return v.TerminationPolicyType }).(pulumi.StringPtrOutput)
}

type AutoscalingGroupPolicyScaleInActionPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupPolicyScaleInActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingGroupPolicyScaleInAction)(nil)).Elem()
}

func (o AutoscalingGroupPolicyScaleInActionPtrOutput) ToAutoscalingGroupPolicyScaleInActionPtrOutput() AutoscalingGroupPolicyScaleInActionPtrOutput {
	return o
}

func (o AutoscalingGroupPolicyScaleInActionPtrOutput) ToAutoscalingGroupPolicyScaleInActionPtrOutputWithContext(ctx context.Context) AutoscalingGroupPolicyScaleInActionPtrOutput {
	return o
}

func (o AutoscalingGroupPolicyScaleInActionPtrOutput) Elem() AutoscalingGroupPolicyScaleInActionOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicyScaleInAction) AutoscalingGroupPolicyScaleInAction {
		if v != nil {
			return *v
		}
		var ret AutoscalingGroupPolicyScaleInAction
		return ret
	}).(AutoscalingGroupPolicyScaleInActionOutput)
}

// [int] When `amountType=ABSOLUTE` specifies the absolute number of VMs that are added. The value must be between 1 to 10. `amountType=PERCENTAGE` specifies the percentage value that is applied to the current number of replicas of the VM Auto Scaling Group. The value must be between 1 to 200. At least one VM is always added.
func (o AutoscalingGroupPolicyScaleInActionPtrOutput) Amount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicyScaleInAction) *int {
		if v == nil {
			return nil
		}
		return &v.Amount
	}).(pulumi.IntPtrOutput)
}

// [string] The type for the given amount. Possible values are: `ABSOLUTE`, `PERCENTAGE`.
func (o AutoscalingGroupPolicyScaleInActionPtrOutput) AmountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicyScaleInAction) *string {
		if v == nil {
			return nil
		}
		return &v.AmountType
	}).(pulumi.StringPtrOutput)
}

// [string] Minimum time to pass after this Scaling action has started, until the next Scaling action will be started. Additionally, if a Scaling action is currently in progress, no second Scaling action will be started for the same autoscaling group. Instead, the Metric will be re-evaluated after the current Scaling action is completed (either successfully or with failures). This is validated with a minimum value of 2 minutes and a maximum of 24 hours currently. Default value is 5 minutes if not given. *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
func (o AutoscalingGroupPolicyScaleInActionPtrOutput) CooldownPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicyScaleInAction) *string {
		if v == nil {
			return nil
		}
		return v.CooldownPeriod
	}).(pulumi.StringPtrOutput)
}

// [bool] If set to `true`, when deleting a replica during scale in, any attached volume will also be deleted. When set to `false`, all volumes remain in the datacenter and must be deleted manually. Note that every scale-out creates new volumes. When they are not deleted, they will eventually use all of your contracts resource limits. At this point, scaling out would not be possible anymore.
func (o AutoscalingGroupPolicyScaleInActionPtrOutput) DeleteVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicyScaleInAction) *bool {
		if v == nil {
			return nil
		}
		return &v.DeleteVolumes
	}).(pulumi.BoolPtrOutput)
}

// [string] The type of the termination policy for the autoscaling group so that a specific pattern is followed for Scaling-In replicas. Default termination policy is `OLDEST_SERVER_FIRST`. Possible values are: `OLDEST_SERVER_FIRST`, `NEWEST_SERVER_FIRST`, `RANDOM`
func (o AutoscalingGroupPolicyScaleInActionPtrOutput) TerminationPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicyScaleInAction) *string {
		if v == nil {
			return nil
		}
		return v.TerminationPolicyType
	}).(pulumi.StringPtrOutput)
}

type AutoscalingGroupPolicyScaleOutAction struct {
	// [int] When `amountType=ABSOLUTE` specifies the absolute number of VMs that are added. The value must be between 1 to 10. `amountType=PERCENTAGE` specifies the percentage value that is applied to the current number of replicas of the VM Auto Scaling Group. The value must be between 1 to 200. At least one VM is always added.
	Amount int `pulumi:"amount"`
	// [string] The type for the given amount. Possible values are: `ABSOLUTE`, `PERCENTAGE`.
	AmountType string `pulumi:"amountType"`
	// [string] Minimum time to pass after this Scaling action has started, until the next Scaling action will be started. Additionally, if a Scaling action is currently in progress, no second Scaling action will be started for the same autoscaling group. Instead, the Metric will be re-evaluated after the current Scaling action is completed (either successfully or with failures). This is validated with a minimum value of 2 minutes and a maximum of 24 hours currently. Default value is 5 minutes if not given. *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
	CooldownPeriod *string `pulumi:"cooldownPeriod"`
}

// AutoscalingGroupPolicyScaleOutActionInput is an input type that accepts AutoscalingGroupPolicyScaleOutActionArgs and AutoscalingGroupPolicyScaleOutActionOutput values.
// You can construct a concrete instance of `AutoscalingGroupPolicyScaleOutActionInput` via:
//
//	AutoscalingGroupPolicyScaleOutActionArgs{...}
type AutoscalingGroupPolicyScaleOutActionInput interface {
	pulumi.Input

	ToAutoscalingGroupPolicyScaleOutActionOutput() AutoscalingGroupPolicyScaleOutActionOutput
	ToAutoscalingGroupPolicyScaleOutActionOutputWithContext(context.Context) AutoscalingGroupPolicyScaleOutActionOutput
}

type AutoscalingGroupPolicyScaleOutActionArgs struct {
	// [int] When `amountType=ABSOLUTE` specifies the absolute number of VMs that are added. The value must be between 1 to 10. `amountType=PERCENTAGE` specifies the percentage value that is applied to the current number of replicas of the VM Auto Scaling Group. The value must be between 1 to 200. At least one VM is always added.
	Amount pulumi.IntInput `pulumi:"amount"`
	// [string] The type for the given amount. Possible values are: `ABSOLUTE`, `PERCENTAGE`.
	AmountType pulumi.StringInput `pulumi:"amountType"`
	// [string] Minimum time to pass after this Scaling action has started, until the next Scaling action will be started. Additionally, if a Scaling action is currently in progress, no second Scaling action will be started for the same autoscaling group. Instead, the Metric will be re-evaluated after the current Scaling action is completed (either successfully or with failures). This is validated with a minimum value of 2 minutes and a maximum of 24 hours currently. Default value is 5 minutes if not given. *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
	CooldownPeriod pulumi.StringPtrInput `pulumi:"cooldownPeriod"`
}

func (AutoscalingGroupPolicyScaleOutActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupPolicyScaleOutAction)(nil)).Elem()
}

func (i AutoscalingGroupPolicyScaleOutActionArgs) ToAutoscalingGroupPolicyScaleOutActionOutput() AutoscalingGroupPolicyScaleOutActionOutput {
	return i.ToAutoscalingGroupPolicyScaleOutActionOutputWithContext(context.Background())
}

func (i AutoscalingGroupPolicyScaleOutActionArgs) ToAutoscalingGroupPolicyScaleOutActionOutputWithContext(ctx context.Context) AutoscalingGroupPolicyScaleOutActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupPolicyScaleOutActionOutput)
}

func (i AutoscalingGroupPolicyScaleOutActionArgs) ToAutoscalingGroupPolicyScaleOutActionPtrOutput() AutoscalingGroupPolicyScaleOutActionPtrOutput {
	return i.ToAutoscalingGroupPolicyScaleOutActionPtrOutputWithContext(context.Background())
}

func (i AutoscalingGroupPolicyScaleOutActionArgs) ToAutoscalingGroupPolicyScaleOutActionPtrOutputWithContext(ctx context.Context) AutoscalingGroupPolicyScaleOutActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupPolicyScaleOutActionOutput).ToAutoscalingGroupPolicyScaleOutActionPtrOutputWithContext(ctx)
}

// AutoscalingGroupPolicyScaleOutActionPtrInput is an input type that accepts AutoscalingGroupPolicyScaleOutActionArgs, AutoscalingGroupPolicyScaleOutActionPtr and AutoscalingGroupPolicyScaleOutActionPtrOutput values.
// You can construct a concrete instance of `AutoscalingGroupPolicyScaleOutActionPtrInput` via:
//
//	        AutoscalingGroupPolicyScaleOutActionArgs{...}
//
//	or:
//
//	        nil
type AutoscalingGroupPolicyScaleOutActionPtrInput interface {
	pulumi.Input

	ToAutoscalingGroupPolicyScaleOutActionPtrOutput() AutoscalingGroupPolicyScaleOutActionPtrOutput
	ToAutoscalingGroupPolicyScaleOutActionPtrOutputWithContext(context.Context) AutoscalingGroupPolicyScaleOutActionPtrOutput
}

type autoscalingGroupPolicyScaleOutActionPtrType AutoscalingGroupPolicyScaleOutActionArgs

func AutoscalingGroupPolicyScaleOutActionPtr(v *AutoscalingGroupPolicyScaleOutActionArgs) AutoscalingGroupPolicyScaleOutActionPtrInput {
	return (*autoscalingGroupPolicyScaleOutActionPtrType)(v)
}

func (*autoscalingGroupPolicyScaleOutActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingGroupPolicyScaleOutAction)(nil)).Elem()
}

func (i *autoscalingGroupPolicyScaleOutActionPtrType) ToAutoscalingGroupPolicyScaleOutActionPtrOutput() AutoscalingGroupPolicyScaleOutActionPtrOutput {
	return i.ToAutoscalingGroupPolicyScaleOutActionPtrOutputWithContext(context.Background())
}

func (i *autoscalingGroupPolicyScaleOutActionPtrType) ToAutoscalingGroupPolicyScaleOutActionPtrOutputWithContext(ctx context.Context) AutoscalingGroupPolicyScaleOutActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupPolicyScaleOutActionPtrOutput)
}

type AutoscalingGroupPolicyScaleOutActionOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupPolicyScaleOutActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupPolicyScaleOutAction)(nil)).Elem()
}

func (o AutoscalingGroupPolicyScaleOutActionOutput) ToAutoscalingGroupPolicyScaleOutActionOutput() AutoscalingGroupPolicyScaleOutActionOutput {
	return o
}

func (o AutoscalingGroupPolicyScaleOutActionOutput) ToAutoscalingGroupPolicyScaleOutActionOutputWithContext(ctx context.Context) AutoscalingGroupPolicyScaleOutActionOutput {
	return o
}

func (o AutoscalingGroupPolicyScaleOutActionOutput) ToAutoscalingGroupPolicyScaleOutActionPtrOutput() AutoscalingGroupPolicyScaleOutActionPtrOutput {
	return o.ToAutoscalingGroupPolicyScaleOutActionPtrOutputWithContext(context.Background())
}

func (o AutoscalingGroupPolicyScaleOutActionOutput) ToAutoscalingGroupPolicyScaleOutActionPtrOutputWithContext(ctx context.Context) AutoscalingGroupPolicyScaleOutActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalingGroupPolicyScaleOutAction) *AutoscalingGroupPolicyScaleOutAction {
		return &v
	}).(AutoscalingGroupPolicyScaleOutActionPtrOutput)
}

// [int] When `amountType=ABSOLUTE` specifies the absolute number of VMs that are added. The value must be between 1 to 10. `amountType=PERCENTAGE` specifies the percentage value that is applied to the current number of replicas of the VM Auto Scaling Group. The value must be between 1 to 200. At least one VM is always added.
func (o AutoscalingGroupPolicyScaleOutActionOutput) Amount() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicyScaleOutAction) int { return v.Amount }).(pulumi.IntOutput)
}

// [string] The type for the given amount. Possible values are: `ABSOLUTE`, `PERCENTAGE`.
func (o AutoscalingGroupPolicyScaleOutActionOutput) AmountType() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicyScaleOutAction) string { return v.AmountType }).(pulumi.StringOutput)
}

// [string] Minimum time to pass after this Scaling action has started, until the next Scaling action will be started. Additionally, if a Scaling action is currently in progress, no second Scaling action will be started for the same autoscaling group. Instead, the Metric will be re-evaluated after the current Scaling action is completed (either successfully or with failures). This is validated with a minimum value of 2 minutes and a maximum of 24 hours currently. Default value is 5 minutes if not given. *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
func (o AutoscalingGroupPolicyScaleOutActionOutput) CooldownPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupPolicyScaleOutAction) *string { return v.CooldownPeriod }).(pulumi.StringPtrOutput)
}

type AutoscalingGroupPolicyScaleOutActionPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupPolicyScaleOutActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingGroupPolicyScaleOutAction)(nil)).Elem()
}

func (o AutoscalingGroupPolicyScaleOutActionPtrOutput) ToAutoscalingGroupPolicyScaleOutActionPtrOutput() AutoscalingGroupPolicyScaleOutActionPtrOutput {
	return o
}

func (o AutoscalingGroupPolicyScaleOutActionPtrOutput) ToAutoscalingGroupPolicyScaleOutActionPtrOutputWithContext(ctx context.Context) AutoscalingGroupPolicyScaleOutActionPtrOutput {
	return o
}

func (o AutoscalingGroupPolicyScaleOutActionPtrOutput) Elem() AutoscalingGroupPolicyScaleOutActionOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicyScaleOutAction) AutoscalingGroupPolicyScaleOutAction {
		if v != nil {
			return *v
		}
		var ret AutoscalingGroupPolicyScaleOutAction
		return ret
	}).(AutoscalingGroupPolicyScaleOutActionOutput)
}

// [int] When `amountType=ABSOLUTE` specifies the absolute number of VMs that are added. The value must be between 1 to 10. `amountType=PERCENTAGE` specifies the percentage value that is applied to the current number of replicas of the VM Auto Scaling Group. The value must be between 1 to 200. At least one VM is always added.
func (o AutoscalingGroupPolicyScaleOutActionPtrOutput) Amount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicyScaleOutAction) *int {
		if v == nil {
			return nil
		}
		return &v.Amount
	}).(pulumi.IntPtrOutput)
}

// [string] The type for the given amount. Possible values are: `ABSOLUTE`, `PERCENTAGE`.
func (o AutoscalingGroupPolicyScaleOutActionPtrOutput) AmountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicyScaleOutAction) *string {
		if v == nil {
			return nil
		}
		return &v.AmountType
	}).(pulumi.StringPtrOutput)
}

// [string] Minimum time to pass after this Scaling action has started, until the next Scaling action will be started. Additionally, if a Scaling action is currently in progress, no second Scaling action will be started for the same autoscaling group. Instead, the Metric will be re-evaluated after the current Scaling action is completed (either successfully or with failures). This is validated with a minimum value of 2 minutes and a maximum of 24 hours currently. Default value is 5 minutes if not given. *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
func (o AutoscalingGroupPolicyScaleOutActionPtrOutput) CooldownPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupPolicyScaleOutAction) *string {
		if v == nil {
			return nil
		}
		return v.CooldownPeriod
	}).(pulumi.StringPtrOutput)
}

type AutoscalingGroupReplicaConfiguration struct {
	// [string] The zone where the VMs are created using this configuration. Possible values are: `AUTO`, `ZONE_1`, `ZONE_2`.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// [int] The total number of cores for the VMs.
	Cores int `pulumi:"cores"`
	// [string] PU family for the VMs created using this configuration. If null, the VM will be created with the default CPU family for the assigned location. Possible values are: `INTEL_SKYLAKE`, `INTEL_XEON`.
	CpuFamily *string `pulumi:"cpuFamily"`
	// Set of NICs associated with this Replica.
	Nics []AutoscalingGroupReplicaConfigurationNic `pulumi:"nics"`
	// [int] The amount of memory for the VMs in MB, e.g. 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB.
	Ram int `pulumi:"ram"`
	// [list] List of volumes associated with this Replica.
	Volumes []AutoscalingGroupReplicaConfigurationVolume `pulumi:"volumes"`
}

// AutoscalingGroupReplicaConfigurationInput is an input type that accepts AutoscalingGroupReplicaConfigurationArgs and AutoscalingGroupReplicaConfigurationOutput values.
// You can construct a concrete instance of `AutoscalingGroupReplicaConfigurationInput` via:
//
//	AutoscalingGroupReplicaConfigurationArgs{...}
type AutoscalingGroupReplicaConfigurationInput interface {
	pulumi.Input

	ToAutoscalingGroupReplicaConfigurationOutput() AutoscalingGroupReplicaConfigurationOutput
	ToAutoscalingGroupReplicaConfigurationOutputWithContext(context.Context) AutoscalingGroupReplicaConfigurationOutput
}

type AutoscalingGroupReplicaConfigurationArgs struct {
	// [string] The zone where the VMs are created using this configuration. Possible values are: `AUTO`, `ZONE_1`, `ZONE_2`.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// [int] The total number of cores for the VMs.
	Cores pulumi.IntInput `pulumi:"cores"`
	// [string] PU family for the VMs created using this configuration. If null, the VM will be created with the default CPU family for the assigned location. Possible values are: `INTEL_SKYLAKE`, `INTEL_XEON`.
	CpuFamily pulumi.StringPtrInput `pulumi:"cpuFamily"`
	// Set of NICs associated with this Replica.
	Nics AutoscalingGroupReplicaConfigurationNicArrayInput `pulumi:"nics"`
	// [int] The amount of memory for the VMs in MB, e.g. 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB.
	Ram pulumi.IntInput `pulumi:"ram"`
	// [list] List of volumes associated with this Replica.
	Volumes AutoscalingGroupReplicaConfigurationVolumeArrayInput `pulumi:"volumes"`
}

func (AutoscalingGroupReplicaConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupReplicaConfiguration)(nil)).Elem()
}

func (i AutoscalingGroupReplicaConfigurationArgs) ToAutoscalingGroupReplicaConfigurationOutput() AutoscalingGroupReplicaConfigurationOutput {
	return i.ToAutoscalingGroupReplicaConfigurationOutputWithContext(context.Background())
}

func (i AutoscalingGroupReplicaConfigurationArgs) ToAutoscalingGroupReplicaConfigurationOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupReplicaConfigurationOutput)
}

func (i AutoscalingGroupReplicaConfigurationArgs) ToAutoscalingGroupReplicaConfigurationPtrOutput() AutoscalingGroupReplicaConfigurationPtrOutput {
	return i.ToAutoscalingGroupReplicaConfigurationPtrOutputWithContext(context.Background())
}

func (i AutoscalingGroupReplicaConfigurationArgs) ToAutoscalingGroupReplicaConfigurationPtrOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupReplicaConfigurationOutput).ToAutoscalingGroupReplicaConfigurationPtrOutputWithContext(ctx)
}

// AutoscalingGroupReplicaConfigurationPtrInput is an input type that accepts AutoscalingGroupReplicaConfigurationArgs, AutoscalingGroupReplicaConfigurationPtr and AutoscalingGroupReplicaConfigurationPtrOutput values.
// You can construct a concrete instance of `AutoscalingGroupReplicaConfigurationPtrInput` via:
//
//	        AutoscalingGroupReplicaConfigurationArgs{...}
//
//	or:
//
//	        nil
type AutoscalingGroupReplicaConfigurationPtrInput interface {
	pulumi.Input

	ToAutoscalingGroupReplicaConfigurationPtrOutput() AutoscalingGroupReplicaConfigurationPtrOutput
	ToAutoscalingGroupReplicaConfigurationPtrOutputWithContext(context.Context) AutoscalingGroupReplicaConfigurationPtrOutput
}

type autoscalingGroupReplicaConfigurationPtrType AutoscalingGroupReplicaConfigurationArgs

func AutoscalingGroupReplicaConfigurationPtr(v *AutoscalingGroupReplicaConfigurationArgs) AutoscalingGroupReplicaConfigurationPtrInput {
	return (*autoscalingGroupReplicaConfigurationPtrType)(v)
}

func (*autoscalingGroupReplicaConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingGroupReplicaConfiguration)(nil)).Elem()
}

func (i *autoscalingGroupReplicaConfigurationPtrType) ToAutoscalingGroupReplicaConfigurationPtrOutput() AutoscalingGroupReplicaConfigurationPtrOutput {
	return i.ToAutoscalingGroupReplicaConfigurationPtrOutputWithContext(context.Background())
}

func (i *autoscalingGroupReplicaConfigurationPtrType) ToAutoscalingGroupReplicaConfigurationPtrOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupReplicaConfigurationPtrOutput)
}

type AutoscalingGroupReplicaConfigurationOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupReplicaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupReplicaConfiguration)(nil)).Elem()
}

func (o AutoscalingGroupReplicaConfigurationOutput) ToAutoscalingGroupReplicaConfigurationOutput() AutoscalingGroupReplicaConfigurationOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationOutput) ToAutoscalingGroupReplicaConfigurationOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationOutput) ToAutoscalingGroupReplicaConfigurationPtrOutput() AutoscalingGroupReplicaConfigurationPtrOutput {
	return o.ToAutoscalingGroupReplicaConfigurationPtrOutputWithContext(context.Background())
}

func (o AutoscalingGroupReplicaConfigurationOutput) ToAutoscalingGroupReplicaConfigurationPtrOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalingGroupReplicaConfiguration) *AutoscalingGroupReplicaConfiguration {
		return &v
	}).(AutoscalingGroupReplicaConfigurationPtrOutput)
}

// [string] The zone where the VMs are created using this configuration. Possible values are: `AUTO`, `ZONE_1`, `ZONE_2`.
func (o AutoscalingGroupReplicaConfigurationOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfiguration) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// [int] The total number of cores for the VMs.
func (o AutoscalingGroupReplicaConfigurationOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfiguration) int { return v.Cores }).(pulumi.IntOutput)
}

// [string] PU family for the VMs created using this configuration. If null, the VM will be created with the default CPU family for the assigned location. Possible values are: `INTEL_SKYLAKE`, `INTEL_XEON`.
func (o AutoscalingGroupReplicaConfigurationOutput) CpuFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfiguration) *string { return v.CpuFamily }).(pulumi.StringPtrOutput)
}

// Set of NICs associated with this Replica.
func (o AutoscalingGroupReplicaConfigurationOutput) Nics() AutoscalingGroupReplicaConfigurationNicArrayOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfiguration) []AutoscalingGroupReplicaConfigurationNic { return v.Nics }).(AutoscalingGroupReplicaConfigurationNicArrayOutput)
}

// [int] The amount of memory for the VMs in MB, e.g. 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB.
func (o AutoscalingGroupReplicaConfigurationOutput) Ram() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfiguration) int { return v.Ram }).(pulumi.IntOutput)
}

// [list] List of volumes associated with this Replica.
func (o AutoscalingGroupReplicaConfigurationOutput) Volumes() AutoscalingGroupReplicaConfigurationVolumeArrayOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfiguration) []AutoscalingGroupReplicaConfigurationVolume {
		return v.Volumes
	}).(AutoscalingGroupReplicaConfigurationVolumeArrayOutput)
}

type AutoscalingGroupReplicaConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupReplicaConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingGroupReplicaConfiguration)(nil)).Elem()
}

func (o AutoscalingGroupReplicaConfigurationPtrOutput) ToAutoscalingGroupReplicaConfigurationPtrOutput() AutoscalingGroupReplicaConfigurationPtrOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationPtrOutput) ToAutoscalingGroupReplicaConfigurationPtrOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationPtrOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationPtrOutput) Elem() AutoscalingGroupReplicaConfigurationOutput {
	return o.ApplyT(func(v *AutoscalingGroupReplicaConfiguration) AutoscalingGroupReplicaConfiguration {
		if v != nil {
			return *v
		}
		var ret AutoscalingGroupReplicaConfiguration
		return ret
	}).(AutoscalingGroupReplicaConfigurationOutput)
}

// [string] The zone where the VMs are created using this configuration. Possible values are: `AUTO`, `ZONE_1`, `ZONE_2`.
func (o AutoscalingGroupReplicaConfigurationPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupReplicaConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.AvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// [int] The total number of cores for the VMs.
func (o AutoscalingGroupReplicaConfigurationPtrOutput) Cores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupReplicaConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.Cores
	}).(pulumi.IntPtrOutput)
}

// [string] PU family for the VMs created using this configuration. If null, the VM will be created with the default CPU family for the assigned location. Possible values are: `INTEL_SKYLAKE`, `INTEL_XEON`.
func (o AutoscalingGroupReplicaConfigurationPtrOutput) CpuFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupReplicaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CpuFamily
	}).(pulumi.StringPtrOutput)
}

// Set of NICs associated with this Replica.
func (o AutoscalingGroupReplicaConfigurationPtrOutput) Nics() AutoscalingGroupReplicaConfigurationNicArrayOutput {
	return o.ApplyT(func(v *AutoscalingGroupReplicaConfiguration) []AutoscalingGroupReplicaConfigurationNic {
		if v == nil {
			return nil
		}
		return v.Nics
	}).(AutoscalingGroupReplicaConfigurationNicArrayOutput)
}

// [int] The amount of memory for the VMs in MB, e.g. 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB.
func (o AutoscalingGroupReplicaConfigurationPtrOutput) Ram() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupReplicaConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.Ram
	}).(pulumi.IntPtrOutput)
}

// [list] List of volumes associated with this Replica.
func (o AutoscalingGroupReplicaConfigurationPtrOutput) Volumes() AutoscalingGroupReplicaConfigurationVolumeArrayOutput {
	return o.ApplyT(func(v *AutoscalingGroupReplicaConfiguration) []AutoscalingGroupReplicaConfigurationVolume {
		if v == nil {
			return nil
		}
		return v.Volumes
	}).(AutoscalingGroupReplicaConfigurationVolumeArrayOutput)
}

type AutoscalingGroupReplicaConfigurationNic struct {
	// [bool] Dhcp flag for this replica Nic. This is an optional attribute with default value of `true` if not given in the request payload or given as null.
	Dhcp *bool `pulumi:"dhcp"`
	// [bool] Firewall active flag.
	FirewallActive *bool `pulumi:"firewallActive"`
	// List of all firewall rules for the specified NIC.
	FirewallRules []AutoscalingGroupReplicaConfigurationNicFirewallRule `pulumi:"firewallRules"`
	// [string] The type of firewall rules that will be allowed on the NIC. Valid values: INGRESS EGRESS BIDIRECTIONAL. If not specified, the default INGRESS value is used.
	FirewallType *string `pulumi:"firewallType"`
	// [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
	FlowLogs []AutoscalingGroupReplicaConfigurationNicFlowLog `pulumi:"flowLogs"`
	// [int] Lan ID for this replica Nic.
	Lan int `pulumi:"lan"`
	// [string] Name for this replica volume.
	Name string `pulumi:"name"`
	// [list] In order to link VM to ALB, target group must be provided
	TargetGroup *AutoscalingGroupReplicaConfigurationNicTargetGroup `pulumi:"targetGroup"`
}

// AutoscalingGroupReplicaConfigurationNicInput is an input type that accepts AutoscalingGroupReplicaConfigurationNicArgs and AutoscalingGroupReplicaConfigurationNicOutput values.
// You can construct a concrete instance of `AutoscalingGroupReplicaConfigurationNicInput` via:
//
//	AutoscalingGroupReplicaConfigurationNicArgs{...}
type AutoscalingGroupReplicaConfigurationNicInput interface {
	pulumi.Input

	ToAutoscalingGroupReplicaConfigurationNicOutput() AutoscalingGroupReplicaConfigurationNicOutput
	ToAutoscalingGroupReplicaConfigurationNicOutputWithContext(context.Context) AutoscalingGroupReplicaConfigurationNicOutput
}

type AutoscalingGroupReplicaConfigurationNicArgs struct {
	// [bool] Dhcp flag for this replica Nic. This is an optional attribute with default value of `true` if not given in the request payload or given as null.
	Dhcp pulumi.BoolPtrInput `pulumi:"dhcp"`
	// [bool] Firewall active flag.
	FirewallActive pulumi.BoolPtrInput `pulumi:"firewallActive"`
	// List of all firewall rules for the specified NIC.
	FirewallRules AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayInput `pulumi:"firewallRules"`
	// [string] The type of firewall rules that will be allowed on the NIC. Valid values: INGRESS EGRESS BIDIRECTIONAL. If not specified, the default INGRESS value is used.
	FirewallType pulumi.StringPtrInput `pulumi:"firewallType"`
	// [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
	FlowLogs AutoscalingGroupReplicaConfigurationNicFlowLogArrayInput `pulumi:"flowLogs"`
	// [int] Lan ID for this replica Nic.
	Lan pulumi.IntInput `pulumi:"lan"`
	// [string] Name for this replica volume.
	Name pulumi.StringInput `pulumi:"name"`
	// [list] In order to link VM to ALB, target group must be provided
	TargetGroup AutoscalingGroupReplicaConfigurationNicTargetGroupPtrInput `pulumi:"targetGroup"`
}

func (AutoscalingGroupReplicaConfigurationNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNic)(nil)).Elem()
}

func (i AutoscalingGroupReplicaConfigurationNicArgs) ToAutoscalingGroupReplicaConfigurationNicOutput() AutoscalingGroupReplicaConfigurationNicOutput {
	return i.ToAutoscalingGroupReplicaConfigurationNicOutputWithContext(context.Background())
}

func (i AutoscalingGroupReplicaConfigurationNicArgs) ToAutoscalingGroupReplicaConfigurationNicOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupReplicaConfigurationNicOutput)
}

// AutoscalingGroupReplicaConfigurationNicArrayInput is an input type that accepts AutoscalingGroupReplicaConfigurationNicArray and AutoscalingGroupReplicaConfigurationNicArrayOutput values.
// You can construct a concrete instance of `AutoscalingGroupReplicaConfigurationNicArrayInput` via:
//
//	AutoscalingGroupReplicaConfigurationNicArray{ AutoscalingGroupReplicaConfigurationNicArgs{...} }
type AutoscalingGroupReplicaConfigurationNicArrayInput interface {
	pulumi.Input

	ToAutoscalingGroupReplicaConfigurationNicArrayOutput() AutoscalingGroupReplicaConfigurationNicArrayOutput
	ToAutoscalingGroupReplicaConfigurationNicArrayOutputWithContext(context.Context) AutoscalingGroupReplicaConfigurationNicArrayOutput
}

type AutoscalingGroupReplicaConfigurationNicArray []AutoscalingGroupReplicaConfigurationNicInput

func (AutoscalingGroupReplicaConfigurationNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutoscalingGroupReplicaConfigurationNic)(nil)).Elem()
}

func (i AutoscalingGroupReplicaConfigurationNicArray) ToAutoscalingGroupReplicaConfigurationNicArrayOutput() AutoscalingGroupReplicaConfigurationNicArrayOutput {
	return i.ToAutoscalingGroupReplicaConfigurationNicArrayOutputWithContext(context.Background())
}

func (i AutoscalingGroupReplicaConfigurationNicArray) ToAutoscalingGroupReplicaConfigurationNicArrayOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupReplicaConfigurationNicArrayOutput)
}

type AutoscalingGroupReplicaConfigurationNicOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupReplicaConfigurationNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNic)(nil)).Elem()
}

func (o AutoscalingGroupReplicaConfigurationNicOutput) ToAutoscalingGroupReplicaConfigurationNicOutput() AutoscalingGroupReplicaConfigurationNicOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationNicOutput) ToAutoscalingGroupReplicaConfigurationNicOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicOutput {
	return o
}

// [bool] Dhcp flag for this replica Nic. This is an optional attribute with default value of `true` if not given in the request payload or given as null.
func (o AutoscalingGroupReplicaConfigurationNicOutput) Dhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNic) *bool { return v.Dhcp }).(pulumi.BoolPtrOutput)
}

// [bool] Firewall active flag.
func (o AutoscalingGroupReplicaConfigurationNicOutput) FirewallActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNic) *bool { return v.FirewallActive }).(pulumi.BoolPtrOutput)
}

// List of all firewall rules for the specified NIC.
func (o AutoscalingGroupReplicaConfigurationNicOutput) FirewallRules() AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNic) []AutoscalingGroupReplicaConfigurationNicFirewallRule {
		return v.FirewallRules
	}).(AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput)
}

// [string] The type of firewall rules that will be allowed on the NIC. Valid values: INGRESS EGRESS BIDIRECTIONAL. If not specified, the default INGRESS value is used.
func (o AutoscalingGroupReplicaConfigurationNicOutput) FirewallType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNic) *string { return v.FirewallType }).(pulumi.StringPtrOutput)
}

// [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
func (o AutoscalingGroupReplicaConfigurationNicOutput) FlowLogs() AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNic) []AutoscalingGroupReplicaConfigurationNicFlowLog {
		return v.FlowLogs
	}).(AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput)
}

// [int] Lan ID for this replica Nic.
func (o AutoscalingGroupReplicaConfigurationNicOutput) Lan() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNic) int { return v.Lan }).(pulumi.IntOutput)
}

// [string] Name for this replica volume.
func (o AutoscalingGroupReplicaConfigurationNicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNic) string { return v.Name }).(pulumi.StringOutput)
}

// [list] In order to link VM to ALB, target group must be provided
func (o AutoscalingGroupReplicaConfigurationNicOutput) TargetGroup() AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNic) *AutoscalingGroupReplicaConfigurationNicTargetGroup {
		return v.TargetGroup
	}).(AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput)
}

type AutoscalingGroupReplicaConfigurationNicArrayOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupReplicaConfigurationNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutoscalingGroupReplicaConfigurationNic)(nil)).Elem()
}

func (o AutoscalingGroupReplicaConfigurationNicArrayOutput) ToAutoscalingGroupReplicaConfigurationNicArrayOutput() AutoscalingGroupReplicaConfigurationNicArrayOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationNicArrayOutput) ToAutoscalingGroupReplicaConfigurationNicArrayOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicArrayOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationNicArrayOutput) Index(i pulumi.IntInput) AutoscalingGroupReplicaConfigurationNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutoscalingGroupReplicaConfigurationNic {
		return vs[0].([]AutoscalingGroupReplicaConfigurationNic)[vs[1].(int)]
	}).(AutoscalingGroupReplicaConfigurationNicOutput)
}

type AutoscalingGroupReplicaConfigurationNicFirewallRule struct {
	// [int] Defines the allowed code (from 0 to 254) if protocol ICMP is chosen.
	IcmpCode *int `pulumi:"icmpCode"`
	// [string] Defines the allowed code (from 0 to 254) if protocol ICMP is chosen. Value null allows all codes.
	IcmpType *int `pulumi:"icmpType"`
	// [string] Name for this replica volume.
	Name *string `pulumi:"name"`
	// [int] Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd null to allow all ports.
	PortRangeEnd *int `pulumi:"portRangeEnd"`
	// [int] Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd null to allow all ports.
	PortRangeStart *int `pulumi:"portRangeStart"`
	// [string] The protocol for the rule: TCP, UDP, ICMP, ANY. Property cannot be modified after creation (disallowed in update requests).
	Protocol string `pulumi:"protocol"`
	// [string] Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs.
	SourceIp *string `pulumi:"sourceIp"`
	// [string] Only traffic originating from the respective MAC address is allowed. Valid format: aa:bb:cc:dd:ee:ff. Value null allows all source MAC address. Valid format: aa:bb:cc:dd:ee:ff.
	SourceMac *string `pulumi:"sourceMac"`
	// [string] In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed. Value null allows all target IPs.
	TargetIp *string `pulumi:"targetIp"`
	// [string] Storage Type for this replica volume. Possible values: `SSD`, `HDD`, `SSD_STANDARD` or `SSD_PREMIUM`.
	Type *string `pulumi:"type"`
}

// AutoscalingGroupReplicaConfigurationNicFirewallRuleInput is an input type that accepts AutoscalingGroupReplicaConfigurationNicFirewallRuleArgs and AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput values.
// You can construct a concrete instance of `AutoscalingGroupReplicaConfigurationNicFirewallRuleInput` via:
//
//	AutoscalingGroupReplicaConfigurationNicFirewallRuleArgs{...}
type AutoscalingGroupReplicaConfigurationNicFirewallRuleInput interface {
	pulumi.Input

	ToAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput() AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput
	ToAutoscalingGroupReplicaConfigurationNicFirewallRuleOutputWithContext(context.Context) AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput
}

type AutoscalingGroupReplicaConfigurationNicFirewallRuleArgs struct {
	// [int] Defines the allowed code (from 0 to 254) if protocol ICMP is chosen.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// [string] Defines the allowed code (from 0 to 254) if protocol ICMP is chosen. Value null allows all codes.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// [string] Name for this replica volume.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// [int] Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd null to allow all ports.
	PortRangeEnd pulumi.IntPtrInput `pulumi:"portRangeEnd"`
	// [int] Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd null to allow all ports.
	PortRangeStart pulumi.IntPtrInput `pulumi:"portRangeStart"`
	// [string] The protocol for the rule: TCP, UDP, ICMP, ANY. Property cannot be modified after creation (disallowed in update requests).
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// [string] Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs.
	SourceIp pulumi.StringPtrInput `pulumi:"sourceIp"`
	// [string] Only traffic originating from the respective MAC address is allowed. Valid format: aa:bb:cc:dd:ee:ff. Value null allows all source MAC address. Valid format: aa:bb:cc:dd:ee:ff.
	SourceMac pulumi.StringPtrInput `pulumi:"sourceMac"`
	// [string] In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed. Value null allows all target IPs.
	TargetIp pulumi.StringPtrInput `pulumi:"targetIp"`
	// [string] Storage Type for this replica volume. Possible values: `SSD`, `HDD`, `SSD_STANDARD` or `SSD_PREMIUM`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AutoscalingGroupReplicaConfigurationNicFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNicFirewallRule)(nil)).Elem()
}

func (i AutoscalingGroupReplicaConfigurationNicFirewallRuleArgs) ToAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput() AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput {
	return i.ToAutoscalingGroupReplicaConfigurationNicFirewallRuleOutputWithContext(context.Background())
}

func (i AutoscalingGroupReplicaConfigurationNicFirewallRuleArgs) ToAutoscalingGroupReplicaConfigurationNicFirewallRuleOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput)
}

// AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayInput is an input type that accepts AutoscalingGroupReplicaConfigurationNicFirewallRuleArray and AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput values.
// You can construct a concrete instance of `AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayInput` via:
//
//	AutoscalingGroupReplicaConfigurationNicFirewallRuleArray{ AutoscalingGroupReplicaConfigurationNicFirewallRuleArgs{...} }
type AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayInput interface {
	pulumi.Input

	ToAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput() AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput
	ToAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutputWithContext(context.Context) AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput
}

type AutoscalingGroupReplicaConfigurationNicFirewallRuleArray []AutoscalingGroupReplicaConfigurationNicFirewallRuleInput

func (AutoscalingGroupReplicaConfigurationNicFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutoscalingGroupReplicaConfigurationNicFirewallRule)(nil)).Elem()
}

func (i AutoscalingGroupReplicaConfigurationNicFirewallRuleArray) ToAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput() AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput {
	return i.ToAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutputWithContext(context.Background())
}

func (i AutoscalingGroupReplicaConfigurationNicFirewallRuleArray) ToAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput)
}

type AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNicFirewallRule)(nil)).Elem()
}

func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) ToAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput() AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) ToAutoscalingGroupReplicaConfigurationNicFirewallRuleOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput {
	return o
}

// [int] Defines the allowed code (from 0 to 254) if protocol ICMP is chosen.
func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFirewallRule) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// [string] Defines the allowed code (from 0 to 254) if protocol ICMP is chosen. Value null allows all codes.
func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFirewallRule) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// [string] Name for this replica volume.
func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFirewallRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// [int] Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd null to allow all ports.
func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) PortRangeEnd() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFirewallRule) *int { return v.PortRangeEnd }).(pulumi.IntPtrOutput)
}

// [int] Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd null to allow all ports.
func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) PortRangeStart() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFirewallRule) *int { return v.PortRangeStart }).(pulumi.IntPtrOutput)
}

// [string] The protocol for the rule: TCP, UDP, ICMP, ANY. Property cannot be modified after creation (disallowed in update requests).
func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFirewallRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// [string] Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs.
func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFirewallRule) *string { return v.SourceIp }).(pulumi.StringPtrOutput)
}

// [string] Only traffic originating from the respective MAC address is allowed. Valid format: aa:bb:cc:dd:ee:ff. Value null allows all source MAC address. Valid format: aa:bb:cc:dd:ee:ff.
func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) SourceMac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFirewallRule) *string { return v.SourceMac }).(pulumi.StringPtrOutput)
}

// [string] In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed. Value null allows all target IPs.
func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) TargetIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFirewallRule) *string { return v.TargetIp }).(pulumi.StringPtrOutput)
}

// [string] Storage Type for this replica volume. Possible values: `SSD`, `HDD`, `SSD_STANDARD` or `SSD_PREMIUM`.
func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFirewallRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutoscalingGroupReplicaConfigurationNicFirewallRule)(nil)).Elem()
}

func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput) ToAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput() AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput) ToAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput) Index(i pulumi.IntInput) AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutoscalingGroupReplicaConfigurationNicFirewallRule {
		return vs[0].([]AutoscalingGroupReplicaConfigurationNicFirewallRule)[vs[1].(int)]
	}).(AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput)
}

type AutoscalingGroupReplicaConfigurationNicFlowLog struct {
	// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	Action string `pulumi:"action"`
	// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	Bucket string `pulumi:"bucket"`
	// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	Direction string `pulumi:"direction"`
	// The resource's unique identifier.
	Id *string `pulumi:"id"`
	// [string] Name for this replica volume.
	Name string `pulumi:"name"`
}

// AutoscalingGroupReplicaConfigurationNicFlowLogInput is an input type that accepts AutoscalingGroupReplicaConfigurationNicFlowLogArgs and AutoscalingGroupReplicaConfigurationNicFlowLogOutput values.
// You can construct a concrete instance of `AutoscalingGroupReplicaConfigurationNicFlowLogInput` via:
//
//	AutoscalingGroupReplicaConfigurationNicFlowLogArgs{...}
type AutoscalingGroupReplicaConfigurationNicFlowLogInput interface {
	pulumi.Input

	ToAutoscalingGroupReplicaConfigurationNicFlowLogOutput() AutoscalingGroupReplicaConfigurationNicFlowLogOutput
	ToAutoscalingGroupReplicaConfigurationNicFlowLogOutputWithContext(context.Context) AutoscalingGroupReplicaConfigurationNicFlowLogOutput
}

type AutoscalingGroupReplicaConfigurationNicFlowLogArgs struct {
	// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	Action pulumi.StringInput `pulumi:"action"`
	// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The resource's unique identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// [string] Name for this replica volume.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AutoscalingGroupReplicaConfigurationNicFlowLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNicFlowLog)(nil)).Elem()
}

func (i AutoscalingGroupReplicaConfigurationNicFlowLogArgs) ToAutoscalingGroupReplicaConfigurationNicFlowLogOutput() AutoscalingGroupReplicaConfigurationNicFlowLogOutput {
	return i.ToAutoscalingGroupReplicaConfigurationNicFlowLogOutputWithContext(context.Background())
}

func (i AutoscalingGroupReplicaConfigurationNicFlowLogArgs) ToAutoscalingGroupReplicaConfigurationNicFlowLogOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicFlowLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupReplicaConfigurationNicFlowLogOutput)
}

// AutoscalingGroupReplicaConfigurationNicFlowLogArrayInput is an input type that accepts AutoscalingGroupReplicaConfigurationNicFlowLogArray and AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput values.
// You can construct a concrete instance of `AutoscalingGroupReplicaConfigurationNicFlowLogArrayInput` via:
//
//	AutoscalingGroupReplicaConfigurationNicFlowLogArray{ AutoscalingGroupReplicaConfigurationNicFlowLogArgs{...} }
type AutoscalingGroupReplicaConfigurationNicFlowLogArrayInput interface {
	pulumi.Input

	ToAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput() AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput
	ToAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutputWithContext(context.Context) AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput
}

type AutoscalingGroupReplicaConfigurationNicFlowLogArray []AutoscalingGroupReplicaConfigurationNicFlowLogInput

func (AutoscalingGroupReplicaConfigurationNicFlowLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutoscalingGroupReplicaConfigurationNicFlowLog)(nil)).Elem()
}

func (i AutoscalingGroupReplicaConfigurationNicFlowLogArray) ToAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput() AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput {
	return i.ToAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutputWithContext(context.Background())
}

func (i AutoscalingGroupReplicaConfigurationNicFlowLogArray) ToAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput)
}

type AutoscalingGroupReplicaConfigurationNicFlowLogOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupReplicaConfigurationNicFlowLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNicFlowLog)(nil)).Elem()
}

func (o AutoscalingGroupReplicaConfigurationNicFlowLogOutput) ToAutoscalingGroupReplicaConfigurationNicFlowLogOutput() AutoscalingGroupReplicaConfigurationNicFlowLogOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationNicFlowLogOutput) ToAutoscalingGroupReplicaConfigurationNicFlowLogOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicFlowLogOutput {
	return o
}

// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
func (o AutoscalingGroupReplicaConfigurationNicFlowLogOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFlowLog) string { return v.Action }).(pulumi.StringOutput)
}

// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
func (o AutoscalingGroupReplicaConfigurationNicFlowLogOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFlowLog) string { return v.Bucket }).(pulumi.StringOutput)
}

// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
func (o AutoscalingGroupReplicaConfigurationNicFlowLogOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFlowLog) string { return v.Direction }).(pulumi.StringOutput)
}

// The resource's unique identifier.
func (o AutoscalingGroupReplicaConfigurationNicFlowLogOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFlowLog) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// [string] Name for this replica volume.
func (o AutoscalingGroupReplicaConfigurationNicFlowLogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicFlowLog) string { return v.Name }).(pulumi.StringOutput)
}

type AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutoscalingGroupReplicaConfigurationNicFlowLog)(nil)).Elem()
}

func (o AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput) ToAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput() AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput) ToAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput) Index(i pulumi.IntInput) AutoscalingGroupReplicaConfigurationNicFlowLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutoscalingGroupReplicaConfigurationNicFlowLog {
		return vs[0].([]AutoscalingGroupReplicaConfigurationNicFlowLog)[vs[1].(int)]
	}).(AutoscalingGroupReplicaConfigurationNicFlowLogOutput)
}

type AutoscalingGroupReplicaConfigurationNicTargetGroup struct {
	// [int] The port of the target group.
	Port int `pulumi:"port"`
	// [string] The ID of the target group.
	TargetGroupId string `pulumi:"targetGroupId"`
	// [int] The weight of the target group.
	Weight int `pulumi:"weight"`
}

// AutoscalingGroupReplicaConfigurationNicTargetGroupInput is an input type that accepts AutoscalingGroupReplicaConfigurationNicTargetGroupArgs and AutoscalingGroupReplicaConfigurationNicTargetGroupOutput values.
// You can construct a concrete instance of `AutoscalingGroupReplicaConfigurationNicTargetGroupInput` via:
//
//	AutoscalingGroupReplicaConfigurationNicTargetGroupArgs{...}
type AutoscalingGroupReplicaConfigurationNicTargetGroupInput interface {
	pulumi.Input

	ToAutoscalingGroupReplicaConfigurationNicTargetGroupOutput() AutoscalingGroupReplicaConfigurationNicTargetGroupOutput
	ToAutoscalingGroupReplicaConfigurationNicTargetGroupOutputWithContext(context.Context) AutoscalingGroupReplicaConfigurationNicTargetGroupOutput
}

type AutoscalingGroupReplicaConfigurationNicTargetGroupArgs struct {
	// [int] The port of the target group.
	Port pulumi.IntInput `pulumi:"port"`
	// [string] The ID of the target group.
	TargetGroupId pulumi.StringInput `pulumi:"targetGroupId"`
	// [int] The weight of the target group.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (AutoscalingGroupReplicaConfigurationNicTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNicTargetGroup)(nil)).Elem()
}

func (i AutoscalingGroupReplicaConfigurationNicTargetGroupArgs) ToAutoscalingGroupReplicaConfigurationNicTargetGroupOutput() AutoscalingGroupReplicaConfigurationNicTargetGroupOutput {
	return i.ToAutoscalingGroupReplicaConfigurationNicTargetGroupOutputWithContext(context.Background())
}

func (i AutoscalingGroupReplicaConfigurationNicTargetGroupArgs) ToAutoscalingGroupReplicaConfigurationNicTargetGroupOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupReplicaConfigurationNicTargetGroupOutput)
}

func (i AutoscalingGroupReplicaConfigurationNicTargetGroupArgs) ToAutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput() AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput {
	return i.ToAutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutputWithContext(context.Background())
}

func (i AutoscalingGroupReplicaConfigurationNicTargetGroupArgs) ToAutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupReplicaConfigurationNicTargetGroupOutput).ToAutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutputWithContext(ctx)
}

// AutoscalingGroupReplicaConfigurationNicTargetGroupPtrInput is an input type that accepts AutoscalingGroupReplicaConfigurationNicTargetGroupArgs, AutoscalingGroupReplicaConfigurationNicTargetGroupPtr and AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput values.
// You can construct a concrete instance of `AutoscalingGroupReplicaConfigurationNicTargetGroupPtrInput` via:
//
//	        AutoscalingGroupReplicaConfigurationNicTargetGroupArgs{...}
//
//	or:
//
//	        nil
type AutoscalingGroupReplicaConfigurationNicTargetGroupPtrInput interface {
	pulumi.Input

	ToAutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput() AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput
	ToAutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutputWithContext(context.Context) AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput
}

type autoscalingGroupReplicaConfigurationNicTargetGroupPtrType AutoscalingGroupReplicaConfigurationNicTargetGroupArgs

func AutoscalingGroupReplicaConfigurationNicTargetGroupPtr(v *AutoscalingGroupReplicaConfigurationNicTargetGroupArgs) AutoscalingGroupReplicaConfigurationNicTargetGroupPtrInput {
	return (*autoscalingGroupReplicaConfigurationNicTargetGroupPtrType)(v)
}

func (*autoscalingGroupReplicaConfigurationNicTargetGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingGroupReplicaConfigurationNicTargetGroup)(nil)).Elem()
}

func (i *autoscalingGroupReplicaConfigurationNicTargetGroupPtrType) ToAutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput() AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput {
	return i.ToAutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutputWithContext(context.Background())
}

func (i *autoscalingGroupReplicaConfigurationNicTargetGroupPtrType) ToAutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput)
}

type AutoscalingGroupReplicaConfigurationNicTargetGroupOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupReplicaConfigurationNicTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNicTargetGroup)(nil)).Elem()
}

func (o AutoscalingGroupReplicaConfigurationNicTargetGroupOutput) ToAutoscalingGroupReplicaConfigurationNicTargetGroupOutput() AutoscalingGroupReplicaConfigurationNicTargetGroupOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationNicTargetGroupOutput) ToAutoscalingGroupReplicaConfigurationNicTargetGroupOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicTargetGroupOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationNicTargetGroupOutput) ToAutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput() AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput {
	return o.ToAutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutputWithContext(context.Background())
}

func (o AutoscalingGroupReplicaConfigurationNicTargetGroupOutput) ToAutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalingGroupReplicaConfigurationNicTargetGroup) *AutoscalingGroupReplicaConfigurationNicTargetGroup {
		return &v
	}).(AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput)
}

// [int] The port of the target group.
func (o AutoscalingGroupReplicaConfigurationNicTargetGroupOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicTargetGroup) int { return v.Port }).(pulumi.IntOutput)
}

// [string] The ID of the target group.
func (o AutoscalingGroupReplicaConfigurationNicTargetGroupOutput) TargetGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicTargetGroup) string { return v.TargetGroupId }).(pulumi.StringOutput)
}

// [int] The weight of the target group.
func (o AutoscalingGroupReplicaConfigurationNicTargetGroupOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationNicTargetGroup) int { return v.Weight }).(pulumi.IntOutput)
}

type AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingGroupReplicaConfigurationNicTargetGroup)(nil)).Elem()
}

func (o AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput) ToAutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput() AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput) ToAutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput) Elem() AutoscalingGroupReplicaConfigurationNicTargetGroupOutput {
	return o.ApplyT(func(v *AutoscalingGroupReplicaConfigurationNicTargetGroup) AutoscalingGroupReplicaConfigurationNicTargetGroup {
		if v != nil {
			return *v
		}
		var ret AutoscalingGroupReplicaConfigurationNicTargetGroup
		return ret
	}).(AutoscalingGroupReplicaConfigurationNicTargetGroupOutput)
}

// [int] The port of the target group.
func (o AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupReplicaConfigurationNicTargetGroup) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// [string] The ID of the target group.
func (o AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput) TargetGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupReplicaConfigurationNicTargetGroup) *string {
		if v == nil {
			return nil
		}
		return &v.TargetGroupId
	}).(pulumi.StringPtrOutput)
}

// [int] The weight of the target group.
func (o AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingGroupReplicaConfigurationNicTargetGroup) *int {
		if v == nil {
			return nil
		}
		return &v.Weight
	}).(pulumi.IntPtrOutput)
}

type AutoscalingGroupReplicaConfigurationVolume struct {
	// [string] The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either `public image` or `imageAlias` in conjunction with this property.
	BackupUnitId *string `pulumi:"backupUnitId"`
	// [string] Determines whether the volume will be used as a boot volume. Set to NONE, the volume will not be used as boot volume. Set to PRIMARY, the volume will be used as boot volume and set to AUTO will delegate the decision to the provisioning engine to decide whether to use the volume as boot volume.
	// Notice that exactly one volume can be set to PRIMARY or all of them set to AUTO.
	BootOrder string `pulumi:"bootOrder"`
	// [string] The bus type of the volume. Default setting is `VIRTIO`. The bus type `IDE` is also supported.
	Bus *string `pulumi:"bus"`
	// [string] The image installed on the volume. Only the UUID of the image is presently supported.
	Image *string `pulumi:"image"`
	// [string] The image installed on the volume. Must be an `imageAlias` as specified via the images API. Note that one of `image` or `imageAlias` must be set, but not both.
	ImageAlias *string `pulumi:"imageAlias"`
	// [string] Image password for this replica volume.
	ImagePassword *string `pulumi:"imagePassword"`
	// [string] Name for this replica volume.
	Name string `pulumi:"name"`
	// [int] Name for this replica volume.
	Size int `pulumi:"size"`
	// List of ssh keys, supports values or paths to files. Cannot be changed at update.
	SshKeys []string `pulumi:"sshKeys"`
	// [string] Storage Type for this replica volume. Possible values: `SSD`, `HDD`, `SSD_STANDARD` or `SSD_PREMIUM`.
	Type string `pulumi:"type"`
	// [string] User-data (Cloud Init) for this replica volume. Make sure you provide a Cloud Init compatible image in conjunction with this parameter.
	UserData *string `pulumi:"userData"`
}

// AutoscalingGroupReplicaConfigurationVolumeInput is an input type that accepts AutoscalingGroupReplicaConfigurationVolumeArgs and AutoscalingGroupReplicaConfigurationVolumeOutput values.
// You can construct a concrete instance of `AutoscalingGroupReplicaConfigurationVolumeInput` via:
//
//	AutoscalingGroupReplicaConfigurationVolumeArgs{...}
type AutoscalingGroupReplicaConfigurationVolumeInput interface {
	pulumi.Input

	ToAutoscalingGroupReplicaConfigurationVolumeOutput() AutoscalingGroupReplicaConfigurationVolumeOutput
	ToAutoscalingGroupReplicaConfigurationVolumeOutputWithContext(context.Context) AutoscalingGroupReplicaConfigurationVolumeOutput
}

type AutoscalingGroupReplicaConfigurationVolumeArgs struct {
	// [string] The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either `public image` or `imageAlias` in conjunction with this property.
	BackupUnitId pulumi.StringPtrInput `pulumi:"backupUnitId"`
	// [string] Determines whether the volume will be used as a boot volume. Set to NONE, the volume will not be used as boot volume. Set to PRIMARY, the volume will be used as boot volume and set to AUTO will delegate the decision to the provisioning engine to decide whether to use the volume as boot volume.
	// Notice that exactly one volume can be set to PRIMARY or all of them set to AUTO.
	BootOrder pulumi.StringInput `pulumi:"bootOrder"`
	// [string] The bus type of the volume. Default setting is `VIRTIO`. The bus type `IDE` is also supported.
	Bus pulumi.StringPtrInput `pulumi:"bus"`
	// [string] The image installed on the volume. Only the UUID of the image is presently supported.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// [string] The image installed on the volume. Must be an `imageAlias` as specified via the images API. Note that one of `image` or `imageAlias` must be set, but not both.
	ImageAlias pulumi.StringPtrInput `pulumi:"imageAlias"`
	// [string] Image password for this replica volume.
	ImagePassword pulumi.StringPtrInput `pulumi:"imagePassword"`
	// [string] Name for this replica volume.
	Name pulumi.StringInput `pulumi:"name"`
	// [int] Name for this replica volume.
	Size pulumi.IntInput `pulumi:"size"`
	// List of ssh keys, supports values or paths to files. Cannot be changed at update.
	SshKeys pulumi.StringArrayInput `pulumi:"sshKeys"`
	// [string] Storage Type for this replica volume. Possible values: `SSD`, `HDD`, `SSD_STANDARD` or `SSD_PREMIUM`.
	Type pulumi.StringInput `pulumi:"type"`
	// [string] User-data (Cloud Init) for this replica volume. Make sure you provide a Cloud Init compatible image in conjunction with this parameter.
	UserData pulumi.StringPtrInput `pulumi:"userData"`
}

func (AutoscalingGroupReplicaConfigurationVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupReplicaConfigurationVolume)(nil)).Elem()
}

func (i AutoscalingGroupReplicaConfigurationVolumeArgs) ToAutoscalingGroupReplicaConfigurationVolumeOutput() AutoscalingGroupReplicaConfigurationVolumeOutput {
	return i.ToAutoscalingGroupReplicaConfigurationVolumeOutputWithContext(context.Background())
}

func (i AutoscalingGroupReplicaConfigurationVolumeArgs) ToAutoscalingGroupReplicaConfigurationVolumeOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupReplicaConfigurationVolumeOutput)
}

// AutoscalingGroupReplicaConfigurationVolumeArrayInput is an input type that accepts AutoscalingGroupReplicaConfigurationVolumeArray and AutoscalingGroupReplicaConfigurationVolumeArrayOutput values.
// You can construct a concrete instance of `AutoscalingGroupReplicaConfigurationVolumeArrayInput` via:
//
//	AutoscalingGroupReplicaConfigurationVolumeArray{ AutoscalingGroupReplicaConfigurationVolumeArgs{...} }
type AutoscalingGroupReplicaConfigurationVolumeArrayInput interface {
	pulumi.Input

	ToAutoscalingGroupReplicaConfigurationVolumeArrayOutput() AutoscalingGroupReplicaConfigurationVolumeArrayOutput
	ToAutoscalingGroupReplicaConfigurationVolumeArrayOutputWithContext(context.Context) AutoscalingGroupReplicaConfigurationVolumeArrayOutput
}

type AutoscalingGroupReplicaConfigurationVolumeArray []AutoscalingGroupReplicaConfigurationVolumeInput

func (AutoscalingGroupReplicaConfigurationVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutoscalingGroupReplicaConfigurationVolume)(nil)).Elem()
}

func (i AutoscalingGroupReplicaConfigurationVolumeArray) ToAutoscalingGroupReplicaConfigurationVolumeArrayOutput() AutoscalingGroupReplicaConfigurationVolumeArrayOutput {
	return i.ToAutoscalingGroupReplicaConfigurationVolumeArrayOutputWithContext(context.Background())
}

func (i AutoscalingGroupReplicaConfigurationVolumeArray) ToAutoscalingGroupReplicaConfigurationVolumeArrayOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingGroupReplicaConfigurationVolumeArrayOutput)
}

type AutoscalingGroupReplicaConfigurationVolumeOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupReplicaConfigurationVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingGroupReplicaConfigurationVolume)(nil)).Elem()
}

func (o AutoscalingGroupReplicaConfigurationVolumeOutput) ToAutoscalingGroupReplicaConfigurationVolumeOutput() AutoscalingGroupReplicaConfigurationVolumeOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationVolumeOutput) ToAutoscalingGroupReplicaConfigurationVolumeOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationVolumeOutput {
	return o
}

// [string] The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either `public image` or `imageAlias` in conjunction with this property.
func (o AutoscalingGroupReplicaConfigurationVolumeOutput) BackupUnitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationVolume) *string { return v.BackupUnitId }).(pulumi.StringPtrOutput)
}

// [string] Determines whether the volume will be used as a boot volume. Set to NONE, the volume will not be used as boot volume. Set to PRIMARY, the volume will be used as boot volume and set to AUTO will delegate the decision to the provisioning engine to decide whether to use the volume as boot volume.
// Notice that exactly one volume can be set to PRIMARY or all of them set to AUTO.
func (o AutoscalingGroupReplicaConfigurationVolumeOutput) BootOrder() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationVolume) string { return v.BootOrder }).(pulumi.StringOutput)
}

// [string] The bus type of the volume. Default setting is `VIRTIO`. The bus type `IDE` is also supported.
func (o AutoscalingGroupReplicaConfigurationVolumeOutput) Bus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationVolume) *string { return v.Bus }).(pulumi.StringPtrOutput)
}

// [string] The image installed on the volume. Only the UUID of the image is presently supported.
func (o AutoscalingGroupReplicaConfigurationVolumeOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationVolume) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// [string] The image installed on the volume. Must be an `imageAlias` as specified via the images API. Note that one of `image` or `imageAlias` must be set, but not both.
func (o AutoscalingGroupReplicaConfigurationVolumeOutput) ImageAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationVolume) *string { return v.ImageAlias }).(pulumi.StringPtrOutput)
}

// [string] Image password for this replica volume.
func (o AutoscalingGroupReplicaConfigurationVolumeOutput) ImagePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationVolume) *string { return v.ImagePassword }).(pulumi.StringPtrOutput)
}

// [string] Name for this replica volume.
func (o AutoscalingGroupReplicaConfigurationVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationVolume) string { return v.Name }).(pulumi.StringOutput)
}

// [int] Name for this replica volume.
func (o AutoscalingGroupReplicaConfigurationVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationVolume) int { return v.Size }).(pulumi.IntOutput)
}

// List of ssh keys, supports values or paths to files. Cannot be changed at update.
func (o AutoscalingGroupReplicaConfigurationVolumeOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationVolume) []string { return v.SshKeys }).(pulumi.StringArrayOutput)
}

// [string] Storage Type for this replica volume. Possible values: `SSD`, `HDD`, `SSD_STANDARD` or `SSD_PREMIUM`.
func (o AutoscalingGroupReplicaConfigurationVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationVolume) string { return v.Type }).(pulumi.StringOutput)
}

// [string] User-data (Cloud Init) for this replica volume. Make sure you provide a Cloud Init compatible image in conjunction with this parameter.
func (o AutoscalingGroupReplicaConfigurationVolumeOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingGroupReplicaConfigurationVolume) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type AutoscalingGroupReplicaConfigurationVolumeArrayOutput struct{ *pulumi.OutputState }

func (AutoscalingGroupReplicaConfigurationVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutoscalingGroupReplicaConfigurationVolume)(nil)).Elem()
}

func (o AutoscalingGroupReplicaConfigurationVolumeArrayOutput) ToAutoscalingGroupReplicaConfigurationVolumeArrayOutput() AutoscalingGroupReplicaConfigurationVolumeArrayOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationVolumeArrayOutput) ToAutoscalingGroupReplicaConfigurationVolumeArrayOutputWithContext(ctx context.Context) AutoscalingGroupReplicaConfigurationVolumeArrayOutput {
	return o
}

func (o AutoscalingGroupReplicaConfigurationVolumeArrayOutput) Index(i pulumi.IntInput) AutoscalingGroupReplicaConfigurationVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutoscalingGroupReplicaConfigurationVolume {
		return vs[0].([]AutoscalingGroupReplicaConfigurationVolume)[vs[1].(int)]
	}).(AutoscalingGroupReplicaConfigurationVolumeOutput)
}

type KafkaClusterConnections struct {
	// [list] IP address and port of cluster brokers.
	BrokerAddresses []string `pulumi:"brokerAddresses"`
	// [string] The datacenter to connect your instance to.
	DatacenterId string `pulumi:"datacenterId"`
	// [string] The numeric LAN ID to connect your instance to.
	LanId string `pulumi:"lanId"`
}

// KafkaClusterConnectionsInput is an input type that accepts KafkaClusterConnectionsArgs and KafkaClusterConnectionsOutput values.
// You can construct a concrete instance of `KafkaClusterConnectionsInput` via:
//
//	KafkaClusterConnectionsArgs{...}
type KafkaClusterConnectionsInput interface {
	pulumi.Input

	ToKafkaClusterConnectionsOutput() KafkaClusterConnectionsOutput
	ToKafkaClusterConnectionsOutputWithContext(context.Context) KafkaClusterConnectionsOutput
}

type KafkaClusterConnectionsArgs struct {
	// [list] IP address and port of cluster brokers.
	BrokerAddresses pulumi.StringArrayInput `pulumi:"brokerAddresses"`
	// [string] The datacenter to connect your instance to.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// [string] The numeric LAN ID to connect your instance to.
	LanId pulumi.StringInput `pulumi:"lanId"`
}

func (KafkaClusterConnectionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterConnections)(nil)).Elem()
}

func (i KafkaClusterConnectionsArgs) ToKafkaClusterConnectionsOutput() KafkaClusterConnectionsOutput {
	return i.ToKafkaClusterConnectionsOutputWithContext(context.Background())
}

func (i KafkaClusterConnectionsArgs) ToKafkaClusterConnectionsOutputWithContext(ctx context.Context) KafkaClusterConnectionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConnectionsOutput)
}

func (i KafkaClusterConnectionsArgs) ToKafkaClusterConnectionsPtrOutput() KafkaClusterConnectionsPtrOutput {
	return i.ToKafkaClusterConnectionsPtrOutputWithContext(context.Background())
}

func (i KafkaClusterConnectionsArgs) ToKafkaClusterConnectionsPtrOutputWithContext(ctx context.Context) KafkaClusterConnectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConnectionsOutput).ToKafkaClusterConnectionsPtrOutputWithContext(ctx)
}

// KafkaClusterConnectionsPtrInput is an input type that accepts KafkaClusterConnectionsArgs, KafkaClusterConnectionsPtr and KafkaClusterConnectionsPtrOutput values.
// You can construct a concrete instance of `KafkaClusterConnectionsPtrInput` via:
//
//	        KafkaClusterConnectionsArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterConnectionsPtrInput interface {
	pulumi.Input

	ToKafkaClusterConnectionsPtrOutput() KafkaClusterConnectionsPtrOutput
	ToKafkaClusterConnectionsPtrOutputWithContext(context.Context) KafkaClusterConnectionsPtrOutput
}

type kafkaClusterConnectionsPtrType KafkaClusterConnectionsArgs

func KafkaClusterConnectionsPtr(v *KafkaClusterConnectionsArgs) KafkaClusterConnectionsPtrInput {
	return (*kafkaClusterConnectionsPtrType)(v)
}

func (*kafkaClusterConnectionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterConnections)(nil)).Elem()
}

func (i *kafkaClusterConnectionsPtrType) ToKafkaClusterConnectionsPtrOutput() KafkaClusterConnectionsPtrOutput {
	return i.ToKafkaClusterConnectionsPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterConnectionsPtrType) ToKafkaClusterConnectionsPtrOutputWithContext(ctx context.Context) KafkaClusterConnectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConnectionsPtrOutput)
}

type KafkaClusterConnectionsOutput struct{ *pulumi.OutputState }

func (KafkaClusterConnectionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterConnections)(nil)).Elem()
}

func (o KafkaClusterConnectionsOutput) ToKafkaClusterConnectionsOutput() KafkaClusterConnectionsOutput {
	return o
}

func (o KafkaClusterConnectionsOutput) ToKafkaClusterConnectionsOutputWithContext(ctx context.Context) KafkaClusterConnectionsOutput {
	return o
}

func (o KafkaClusterConnectionsOutput) ToKafkaClusterConnectionsPtrOutput() KafkaClusterConnectionsPtrOutput {
	return o.ToKafkaClusterConnectionsPtrOutputWithContext(context.Background())
}

func (o KafkaClusterConnectionsOutput) ToKafkaClusterConnectionsPtrOutputWithContext(ctx context.Context) KafkaClusterConnectionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterConnections) *KafkaClusterConnections {
		return &v
	}).(KafkaClusterConnectionsPtrOutput)
}

// [list] IP address and port of cluster brokers.
func (o KafkaClusterConnectionsOutput) BrokerAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaClusterConnections) []string { return v.BrokerAddresses }).(pulumi.StringArrayOutput)
}

// [string] The datacenter to connect your instance to.
func (o KafkaClusterConnectionsOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterConnections) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// [string] The numeric LAN ID to connect your instance to.
func (o KafkaClusterConnectionsOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterConnections) string { return v.LanId }).(pulumi.StringOutput)
}

type KafkaClusterConnectionsPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterConnectionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterConnections)(nil)).Elem()
}

func (o KafkaClusterConnectionsPtrOutput) ToKafkaClusterConnectionsPtrOutput() KafkaClusterConnectionsPtrOutput {
	return o
}

func (o KafkaClusterConnectionsPtrOutput) ToKafkaClusterConnectionsPtrOutputWithContext(ctx context.Context) KafkaClusterConnectionsPtrOutput {
	return o
}

func (o KafkaClusterConnectionsPtrOutput) Elem() KafkaClusterConnectionsOutput {
	return o.ApplyT(func(v *KafkaClusterConnections) KafkaClusterConnections {
		if v != nil {
			return *v
		}
		var ret KafkaClusterConnections
		return ret
	}).(KafkaClusterConnectionsOutput)
}

// [list] IP address and port of cluster brokers.
func (o KafkaClusterConnectionsPtrOutput) BrokerAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaClusterConnections) []string {
		if v == nil {
			return nil
		}
		return v.BrokerAddresses
	}).(pulumi.StringArrayOutput)
}

// [string] The datacenter to connect your instance to.
func (o KafkaClusterConnectionsPtrOutput) DatacenterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterConnections) *string {
		if v == nil {
			return nil
		}
		return &v.DatacenterId
	}).(pulumi.StringPtrOutput)
}

// [string] The numeric LAN ID to connect your instance to.
func (o KafkaClusterConnectionsPtrOutput) LanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterConnections) *string {
		if v == nil {
			return nil
		}
		return &v.LanId
	}).(pulumi.StringPtrOutput)
}

type LoggingPipelineLog struct {
	// [list] The configuration of the logs datastore, a list that contains elements with the following structure:
	Destinations []LoggingPipelineLogDestination `pulumi:"destinations"`
	// [string] "Protocol to use as intake. Possible values are: http, tcp."
	Protocol string `pulumi:"protocol"`
	// [bool]
	Public *bool `pulumi:"public"`
	// [string] The source parser to be used.
	Source string `pulumi:"source"`
	// [string] The tag is used to distinguish different pipelines. Must be unique amongst the pipeline's array items.
	Tag string `pulumi:"tag"`
}

// LoggingPipelineLogInput is an input type that accepts LoggingPipelineLogArgs and LoggingPipelineLogOutput values.
// You can construct a concrete instance of `LoggingPipelineLogInput` via:
//
//	LoggingPipelineLogArgs{...}
type LoggingPipelineLogInput interface {
	pulumi.Input

	ToLoggingPipelineLogOutput() LoggingPipelineLogOutput
	ToLoggingPipelineLogOutputWithContext(context.Context) LoggingPipelineLogOutput
}

type LoggingPipelineLogArgs struct {
	// [list] The configuration of the logs datastore, a list that contains elements with the following structure:
	Destinations LoggingPipelineLogDestinationArrayInput `pulumi:"destinations"`
	// [string] "Protocol to use as intake. Possible values are: http, tcp."
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// [bool]
	Public pulumi.BoolPtrInput `pulumi:"public"`
	// [string] The source parser to be used.
	Source pulumi.StringInput `pulumi:"source"`
	// [string] The tag is used to distinguish different pipelines. Must be unique amongst the pipeline's array items.
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (LoggingPipelineLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingPipelineLog)(nil)).Elem()
}

func (i LoggingPipelineLogArgs) ToLoggingPipelineLogOutput() LoggingPipelineLogOutput {
	return i.ToLoggingPipelineLogOutputWithContext(context.Background())
}

func (i LoggingPipelineLogArgs) ToLoggingPipelineLogOutputWithContext(ctx context.Context) LoggingPipelineLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingPipelineLogOutput)
}

// LoggingPipelineLogArrayInput is an input type that accepts LoggingPipelineLogArray and LoggingPipelineLogArrayOutput values.
// You can construct a concrete instance of `LoggingPipelineLogArrayInput` via:
//
//	LoggingPipelineLogArray{ LoggingPipelineLogArgs{...} }
type LoggingPipelineLogArrayInput interface {
	pulumi.Input

	ToLoggingPipelineLogArrayOutput() LoggingPipelineLogArrayOutput
	ToLoggingPipelineLogArrayOutputWithContext(context.Context) LoggingPipelineLogArrayOutput
}

type LoggingPipelineLogArray []LoggingPipelineLogInput

func (LoggingPipelineLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoggingPipelineLog)(nil)).Elem()
}

func (i LoggingPipelineLogArray) ToLoggingPipelineLogArrayOutput() LoggingPipelineLogArrayOutput {
	return i.ToLoggingPipelineLogArrayOutputWithContext(context.Background())
}

func (i LoggingPipelineLogArray) ToLoggingPipelineLogArrayOutputWithContext(ctx context.Context) LoggingPipelineLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingPipelineLogArrayOutput)
}

type LoggingPipelineLogOutput struct{ *pulumi.OutputState }

func (LoggingPipelineLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingPipelineLog)(nil)).Elem()
}

func (o LoggingPipelineLogOutput) ToLoggingPipelineLogOutput() LoggingPipelineLogOutput {
	return o
}

func (o LoggingPipelineLogOutput) ToLoggingPipelineLogOutputWithContext(ctx context.Context) LoggingPipelineLogOutput {
	return o
}

// [list] The configuration of the logs datastore, a list that contains elements with the following structure:
func (o LoggingPipelineLogOutput) Destinations() LoggingPipelineLogDestinationArrayOutput {
	return o.ApplyT(func(v LoggingPipelineLog) []LoggingPipelineLogDestination { return v.Destinations }).(LoggingPipelineLogDestinationArrayOutput)
}

// [string] "Protocol to use as intake. Possible values are: http, tcp."
func (o LoggingPipelineLogOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoggingPipelineLog) string { return v.Protocol }).(pulumi.StringOutput)
}

// [bool]
func (o LoggingPipelineLogOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoggingPipelineLog) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

// [string] The source parser to be used.
func (o LoggingPipelineLogOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v LoggingPipelineLog) string { return v.Source }).(pulumi.StringOutput)
}

// [string] The tag is used to distinguish different pipelines. Must be unique amongst the pipeline's array items.
func (o LoggingPipelineLogOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v LoggingPipelineLog) string { return v.Tag }).(pulumi.StringOutput)
}

type LoggingPipelineLogArrayOutput struct{ *pulumi.OutputState }

func (LoggingPipelineLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoggingPipelineLog)(nil)).Elem()
}

func (o LoggingPipelineLogArrayOutput) ToLoggingPipelineLogArrayOutput() LoggingPipelineLogArrayOutput {
	return o
}

func (o LoggingPipelineLogArrayOutput) ToLoggingPipelineLogArrayOutputWithContext(ctx context.Context) LoggingPipelineLogArrayOutput {
	return o
}

func (o LoggingPipelineLogArrayOutput) Index(i pulumi.IntInput) LoggingPipelineLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoggingPipelineLog {
		return vs[0].([]LoggingPipelineLog)[vs[1].(int)]
	}).(LoggingPipelineLogOutput)
}

type LoggingPipelineLogDestination struct {
	// [int] Defines the number of days a log record should be kept in loki. Works with loki destination type only. Can be one of: 7, 14, 30.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// [string] The internal output stream to send logs to.
	Type *string `pulumi:"type"`
}

// LoggingPipelineLogDestinationInput is an input type that accepts LoggingPipelineLogDestinationArgs and LoggingPipelineLogDestinationOutput values.
// You can construct a concrete instance of `LoggingPipelineLogDestinationInput` via:
//
//	LoggingPipelineLogDestinationArgs{...}
type LoggingPipelineLogDestinationInput interface {
	pulumi.Input

	ToLoggingPipelineLogDestinationOutput() LoggingPipelineLogDestinationOutput
	ToLoggingPipelineLogDestinationOutputWithContext(context.Context) LoggingPipelineLogDestinationOutput
}

type LoggingPipelineLogDestinationArgs struct {
	// [int] Defines the number of days a log record should be kept in loki. Works with loki destination type only. Can be one of: 7, 14, 30.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// [string] The internal output stream to send logs to.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (LoggingPipelineLogDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingPipelineLogDestination)(nil)).Elem()
}

func (i LoggingPipelineLogDestinationArgs) ToLoggingPipelineLogDestinationOutput() LoggingPipelineLogDestinationOutput {
	return i.ToLoggingPipelineLogDestinationOutputWithContext(context.Background())
}

func (i LoggingPipelineLogDestinationArgs) ToLoggingPipelineLogDestinationOutputWithContext(ctx context.Context) LoggingPipelineLogDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingPipelineLogDestinationOutput)
}

// LoggingPipelineLogDestinationArrayInput is an input type that accepts LoggingPipelineLogDestinationArray and LoggingPipelineLogDestinationArrayOutput values.
// You can construct a concrete instance of `LoggingPipelineLogDestinationArrayInput` via:
//
//	LoggingPipelineLogDestinationArray{ LoggingPipelineLogDestinationArgs{...} }
type LoggingPipelineLogDestinationArrayInput interface {
	pulumi.Input

	ToLoggingPipelineLogDestinationArrayOutput() LoggingPipelineLogDestinationArrayOutput
	ToLoggingPipelineLogDestinationArrayOutputWithContext(context.Context) LoggingPipelineLogDestinationArrayOutput
}

type LoggingPipelineLogDestinationArray []LoggingPipelineLogDestinationInput

func (LoggingPipelineLogDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoggingPipelineLogDestination)(nil)).Elem()
}

func (i LoggingPipelineLogDestinationArray) ToLoggingPipelineLogDestinationArrayOutput() LoggingPipelineLogDestinationArrayOutput {
	return i.ToLoggingPipelineLogDestinationArrayOutputWithContext(context.Background())
}

func (i LoggingPipelineLogDestinationArray) ToLoggingPipelineLogDestinationArrayOutputWithContext(ctx context.Context) LoggingPipelineLogDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingPipelineLogDestinationArrayOutput)
}

type LoggingPipelineLogDestinationOutput struct{ *pulumi.OutputState }

func (LoggingPipelineLogDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingPipelineLogDestination)(nil)).Elem()
}

func (o LoggingPipelineLogDestinationOutput) ToLoggingPipelineLogDestinationOutput() LoggingPipelineLogDestinationOutput {
	return o
}

func (o LoggingPipelineLogDestinationOutput) ToLoggingPipelineLogDestinationOutputWithContext(ctx context.Context) LoggingPipelineLogDestinationOutput {
	return o
}

// [int] Defines the number of days a log record should be kept in loki. Works with loki destination type only. Can be one of: 7, 14, 30.
func (o LoggingPipelineLogDestinationOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoggingPipelineLogDestination) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// [string] The internal output stream to send logs to.
func (o LoggingPipelineLogDestinationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggingPipelineLogDestination) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type LoggingPipelineLogDestinationArrayOutput struct{ *pulumi.OutputState }

func (LoggingPipelineLogDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoggingPipelineLogDestination)(nil)).Elem()
}

func (o LoggingPipelineLogDestinationArrayOutput) ToLoggingPipelineLogDestinationArrayOutput() LoggingPipelineLogDestinationArrayOutput {
	return o
}

func (o LoggingPipelineLogDestinationArrayOutput) ToLoggingPipelineLogDestinationArrayOutputWithContext(ctx context.Context) LoggingPipelineLogDestinationArrayOutput {
	return o
}

func (o LoggingPipelineLogDestinationArrayOutput) Index(i pulumi.IntInput) LoggingPipelineLogDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoggingPipelineLogDestination {
		return vs[0].([]LoggingPipelineLogDestination)[vs[1].(int)]
	}).(LoggingPipelineLogDestinationOutput)
}

type NatgatewayLan struct {
	// [list] Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN.
	GatewayIps []string `pulumi:"gatewayIps"`
	// [int] Id for the LAN connected to the NAT gateway.
	Id int `pulumi:"id"`
}

// NatgatewayLanInput is an input type that accepts NatgatewayLanArgs and NatgatewayLanOutput values.
// You can construct a concrete instance of `NatgatewayLanInput` via:
//
//	NatgatewayLanArgs{...}
type NatgatewayLanInput interface {
	pulumi.Input

	ToNatgatewayLanOutput() NatgatewayLanOutput
	ToNatgatewayLanOutputWithContext(context.Context) NatgatewayLanOutput
}

type NatgatewayLanArgs struct {
	// [list] Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN.
	GatewayIps pulumi.StringArrayInput `pulumi:"gatewayIps"`
	// [int] Id for the LAN connected to the NAT gateway.
	Id pulumi.IntInput `pulumi:"id"`
}

func (NatgatewayLanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatgatewayLan)(nil)).Elem()
}

func (i NatgatewayLanArgs) ToNatgatewayLanOutput() NatgatewayLanOutput {
	return i.ToNatgatewayLanOutputWithContext(context.Background())
}

func (i NatgatewayLanArgs) ToNatgatewayLanOutputWithContext(ctx context.Context) NatgatewayLanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatgatewayLanOutput)
}

// NatgatewayLanArrayInput is an input type that accepts NatgatewayLanArray and NatgatewayLanArrayOutput values.
// You can construct a concrete instance of `NatgatewayLanArrayInput` via:
//
//	NatgatewayLanArray{ NatgatewayLanArgs{...} }
type NatgatewayLanArrayInput interface {
	pulumi.Input

	ToNatgatewayLanArrayOutput() NatgatewayLanArrayOutput
	ToNatgatewayLanArrayOutputWithContext(context.Context) NatgatewayLanArrayOutput
}

type NatgatewayLanArray []NatgatewayLanInput

func (NatgatewayLanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NatgatewayLan)(nil)).Elem()
}

func (i NatgatewayLanArray) ToNatgatewayLanArrayOutput() NatgatewayLanArrayOutput {
	return i.ToNatgatewayLanArrayOutputWithContext(context.Background())
}

func (i NatgatewayLanArray) ToNatgatewayLanArrayOutputWithContext(ctx context.Context) NatgatewayLanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatgatewayLanArrayOutput)
}

type NatgatewayLanOutput struct{ *pulumi.OutputState }

func (NatgatewayLanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatgatewayLan)(nil)).Elem()
}

func (o NatgatewayLanOutput) ToNatgatewayLanOutput() NatgatewayLanOutput {
	return o
}

func (o NatgatewayLanOutput) ToNatgatewayLanOutputWithContext(ctx context.Context) NatgatewayLanOutput {
	return o
}

// [list] Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN.
func (o NatgatewayLanOutput) GatewayIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatgatewayLan) []string { return v.GatewayIps }).(pulumi.StringArrayOutput)
}

// [int] Id for the LAN connected to the NAT gateway.
func (o NatgatewayLanOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v NatgatewayLan) int { return v.Id }).(pulumi.IntOutput)
}

type NatgatewayLanArrayOutput struct{ *pulumi.OutputState }

func (NatgatewayLanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NatgatewayLan)(nil)).Elem()
}

func (o NatgatewayLanArrayOutput) ToNatgatewayLanArrayOutput() NatgatewayLanArrayOutput {
	return o
}

func (o NatgatewayLanArrayOutput) ToNatgatewayLanArrayOutputWithContext(ctx context.Context) NatgatewayLanArrayOutput {
	return o
}

func (o NatgatewayLanArrayOutput) Index(i pulumi.IntInput) NatgatewayLanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NatgatewayLan {
		return vs[0].([]NatgatewayLan)[vs[1].(int)]
	}).(NatgatewayLanOutput)
}

type NatgatewayRuleTargetPortRange struct {
	// [int] Target port range end associated with the NAT gateway rule.
	End *int `pulumi:"end"`
	// [int] Target port range start associated with the NAT gateway rule.
	Start *int `pulumi:"start"`
}

// NatgatewayRuleTargetPortRangeInput is an input type that accepts NatgatewayRuleTargetPortRangeArgs and NatgatewayRuleTargetPortRangeOutput values.
// You can construct a concrete instance of `NatgatewayRuleTargetPortRangeInput` via:
//
//	NatgatewayRuleTargetPortRangeArgs{...}
type NatgatewayRuleTargetPortRangeInput interface {
	pulumi.Input

	ToNatgatewayRuleTargetPortRangeOutput() NatgatewayRuleTargetPortRangeOutput
	ToNatgatewayRuleTargetPortRangeOutputWithContext(context.Context) NatgatewayRuleTargetPortRangeOutput
}

type NatgatewayRuleTargetPortRangeArgs struct {
	// [int] Target port range end associated with the NAT gateway rule.
	End pulumi.IntPtrInput `pulumi:"end"`
	// [int] Target port range start associated with the NAT gateway rule.
	Start pulumi.IntPtrInput `pulumi:"start"`
}

func (NatgatewayRuleTargetPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatgatewayRuleTargetPortRange)(nil)).Elem()
}

func (i NatgatewayRuleTargetPortRangeArgs) ToNatgatewayRuleTargetPortRangeOutput() NatgatewayRuleTargetPortRangeOutput {
	return i.ToNatgatewayRuleTargetPortRangeOutputWithContext(context.Background())
}

func (i NatgatewayRuleTargetPortRangeArgs) ToNatgatewayRuleTargetPortRangeOutputWithContext(ctx context.Context) NatgatewayRuleTargetPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatgatewayRuleTargetPortRangeOutput)
}

func (i NatgatewayRuleTargetPortRangeArgs) ToNatgatewayRuleTargetPortRangePtrOutput() NatgatewayRuleTargetPortRangePtrOutput {
	return i.ToNatgatewayRuleTargetPortRangePtrOutputWithContext(context.Background())
}

func (i NatgatewayRuleTargetPortRangeArgs) ToNatgatewayRuleTargetPortRangePtrOutputWithContext(ctx context.Context) NatgatewayRuleTargetPortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatgatewayRuleTargetPortRangeOutput).ToNatgatewayRuleTargetPortRangePtrOutputWithContext(ctx)
}

// NatgatewayRuleTargetPortRangePtrInput is an input type that accepts NatgatewayRuleTargetPortRangeArgs, NatgatewayRuleTargetPortRangePtr and NatgatewayRuleTargetPortRangePtrOutput values.
// You can construct a concrete instance of `NatgatewayRuleTargetPortRangePtrInput` via:
//
//	        NatgatewayRuleTargetPortRangeArgs{...}
//
//	or:
//
//	        nil
type NatgatewayRuleTargetPortRangePtrInput interface {
	pulumi.Input

	ToNatgatewayRuleTargetPortRangePtrOutput() NatgatewayRuleTargetPortRangePtrOutput
	ToNatgatewayRuleTargetPortRangePtrOutputWithContext(context.Context) NatgatewayRuleTargetPortRangePtrOutput
}

type natgatewayRuleTargetPortRangePtrType NatgatewayRuleTargetPortRangeArgs

func NatgatewayRuleTargetPortRangePtr(v *NatgatewayRuleTargetPortRangeArgs) NatgatewayRuleTargetPortRangePtrInput {
	return (*natgatewayRuleTargetPortRangePtrType)(v)
}

func (*natgatewayRuleTargetPortRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NatgatewayRuleTargetPortRange)(nil)).Elem()
}

func (i *natgatewayRuleTargetPortRangePtrType) ToNatgatewayRuleTargetPortRangePtrOutput() NatgatewayRuleTargetPortRangePtrOutput {
	return i.ToNatgatewayRuleTargetPortRangePtrOutputWithContext(context.Background())
}

func (i *natgatewayRuleTargetPortRangePtrType) ToNatgatewayRuleTargetPortRangePtrOutputWithContext(ctx context.Context) NatgatewayRuleTargetPortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatgatewayRuleTargetPortRangePtrOutput)
}

type NatgatewayRuleTargetPortRangeOutput struct{ *pulumi.OutputState }

func (NatgatewayRuleTargetPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatgatewayRuleTargetPortRange)(nil)).Elem()
}

func (o NatgatewayRuleTargetPortRangeOutput) ToNatgatewayRuleTargetPortRangeOutput() NatgatewayRuleTargetPortRangeOutput {
	return o
}

func (o NatgatewayRuleTargetPortRangeOutput) ToNatgatewayRuleTargetPortRangeOutputWithContext(ctx context.Context) NatgatewayRuleTargetPortRangeOutput {
	return o
}

func (o NatgatewayRuleTargetPortRangeOutput) ToNatgatewayRuleTargetPortRangePtrOutput() NatgatewayRuleTargetPortRangePtrOutput {
	return o.ToNatgatewayRuleTargetPortRangePtrOutputWithContext(context.Background())
}

func (o NatgatewayRuleTargetPortRangeOutput) ToNatgatewayRuleTargetPortRangePtrOutputWithContext(ctx context.Context) NatgatewayRuleTargetPortRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NatgatewayRuleTargetPortRange) *NatgatewayRuleTargetPortRange {
		return &v
	}).(NatgatewayRuleTargetPortRangePtrOutput)
}

// [int] Target port range end associated with the NAT gateway rule.
func (o NatgatewayRuleTargetPortRangeOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NatgatewayRuleTargetPortRange) *int { return v.End }).(pulumi.IntPtrOutput)
}

// [int] Target port range start associated with the NAT gateway rule.
func (o NatgatewayRuleTargetPortRangeOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NatgatewayRuleTargetPortRange) *int { return v.Start }).(pulumi.IntPtrOutput)
}

type NatgatewayRuleTargetPortRangePtrOutput struct{ *pulumi.OutputState }

func (NatgatewayRuleTargetPortRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatgatewayRuleTargetPortRange)(nil)).Elem()
}

func (o NatgatewayRuleTargetPortRangePtrOutput) ToNatgatewayRuleTargetPortRangePtrOutput() NatgatewayRuleTargetPortRangePtrOutput {
	return o
}

func (o NatgatewayRuleTargetPortRangePtrOutput) ToNatgatewayRuleTargetPortRangePtrOutputWithContext(ctx context.Context) NatgatewayRuleTargetPortRangePtrOutput {
	return o
}

func (o NatgatewayRuleTargetPortRangePtrOutput) Elem() NatgatewayRuleTargetPortRangeOutput {
	return o.ApplyT(func(v *NatgatewayRuleTargetPortRange) NatgatewayRuleTargetPortRange {
		if v != nil {
			return *v
		}
		var ret NatgatewayRuleTargetPortRange
		return ret
	}).(NatgatewayRuleTargetPortRangeOutput)
}

// [int] Target port range end associated with the NAT gateway rule.
func (o NatgatewayRuleTargetPortRangePtrOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatgatewayRuleTargetPortRange) *int {
		if v == nil {
			return nil
		}
		return v.End
	}).(pulumi.IntPtrOutput)
}

// [int] Target port range start associated with the NAT gateway rule.
func (o NatgatewayRuleTargetPortRangePtrOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatgatewayRuleTargetPortRange) *int {
		if v == nil {
			return nil
		}
		return v.Start
	}).(pulumi.IntPtrOutput)
}

type NetworkloadbalancerFlowlog struct {
	// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	Action string `pulumi:"action"`
	// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	Bucket string `pulumi:"bucket"`
	// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	Direction string `pulumi:"direction"`
	// The resource's unique identifier.
	Id *string `pulumi:"id"`
	// [string] Specifies the name of the flow log.
	//
	// ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the network load balancer resource.
	Name string `pulumi:"name"`
}

// NetworkloadbalancerFlowlogInput is an input type that accepts NetworkloadbalancerFlowlogArgs and NetworkloadbalancerFlowlogOutput values.
// You can construct a concrete instance of `NetworkloadbalancerFlowlogInput` via:
//
//	NetworkloadbalancerFlowlogArgs{...}
type NetworkloadbalancerFlowlogInput interface {
	pulumi.Input

	ToNetworkloadbalancerFlowlogOutput() NetworkloadbalancerFlowlogOutput
	ToNetworkloadbalancerFlowlogOutputWithContext(context.Context) NetworkloadbalancerFlowlogOutput
}

type NetworkloadbalancerFlowlogArgs struct {
	// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	Action pulumi.StringInput `pulumi:"action"`
	// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The resource's unique identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// [string] Specifies the name of the flow log.
	//
	// ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the network load balancer resource.
	Name pulumi.StringInput `pulumi:"name"`
}

func (NetworkloadbalancerFlowlogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkloadbalancerFlowlog)(nil)).Elem()
}

func (i NetworkloadbalancerFlowlogArgs) ToNetworkloadbalancerFlowlogOutput() NetworkloadbalancerFlowlogOutput {
	return i.ToNetworkloadbalancerFlowlogOutputWithContext(context.Background())
}

func (i NetworkloadbalancerFlowlogArgs) ToNetworkloadbalancerFlowlogOutputWithContext(ctx context.Context) NetworkloadbalancerFlowlogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkloadbalancerFlowlogOutput)
}

func (i NetworkloadbalancerFlowlogArgs) ToNetworkloadbalancerFlowlogPtrOutput() NetworkloadbalancerFlowlogPtrOutput {
	return i.ToNetworkloadbalancerFlowlogPtrOutputWithContext(context.Background())
}

func (i NetworkloadbalancerFlowlogArgs) ToNetworkloadbalancerFlowlogPtrOutputWithContext(ctx context.Context) NetworkloadbalancerFlowlogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkloadbalancerFlowlogOutput).ToNetworkloadbalancerFlowlogPtrOutputWithContext(ctx)
}

// NetworkloadbalancerFlowlogPtrInput is an input type that accepts NetworkloadbalancerFlowlogArgs, NetworkloadbalancerFlowlogPtr and NetworkloadbalancerFlowlogPtrOutput values.
// You can construct a concrete instance of `NetworkloadbalancerFlowlogPtrInput` via:
//
//	        NetworkloadbalancerFlowlogArgs{...}
//
//	or:
//
//	        nil
type NetworkloadbalancerFlowlogPtrInput interface {
	pulumi.Input

	ToNetworkloadbalancerFlowlogPtrOutput() NetworkloadbalancerFlowlogPtrOutput
	ToNetworkloadbalancerFlowlogPtrOutputWithContext(context.Context) NetworkloadbalancerFlowlogPtrOutput
}

type networkloadbalancerFlowlogPtrType NetworkloadbalancerFlowlogArgs

func NetworkloadbalancerFlowlogPtr(v *NetworkloadbalancerFlowlogArgs) NetworkloadbalancerFlowlogPtrInput {
	return (*networkloadbalancerFlowlogPtrType)(v)
}

func (*networkloadbalancerFlowlogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkloadbalancerFlowlog)(nil)).Elem()
}

func (i *networkloadbalancerFlowlogPtrType) ToNetworkloadbalancerFlowlogPtrOutput() NetworkloadbalancerFlowlogPtrOutput {
	return i.ToNetworkloadbalancerFlowlogPtrOutputWithContext(context.Background())
}

func (i *networkloadbalancerFlowlogPtrType) ToNetworkloadbalancerFlowlogPtrOutputWithContext(ctx context.Context) NetworkloadbalancerFlowlogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkloadbalancerFlowlogPtrOutput)
}

type NetworkloadbalancerFlowlogOutput struct{ *pulumi.OutputState }

func (NetworkloadbalancerFlowlogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkloadbalancerFlowlog)(nil)).Elem()
}

func (o NetworkloadbalancerFlowlogOutput) ToNetworkloadbalancerFlowlogOutput() NetworkloadbalancerFlowlogOutput {
	return o
}

func (o NetworkloadbalancerFlowlogOutput) ToNetworkloadbalancerFlowlogOutputWithContext(ctx context.Context) NetworkloadbalancerFlowlogOutput {
	return o
}

func (o NetworkloadbalancerFlowlogOutput) ToNetworkloadbalancerFlowlogPtrOutput() NetworkloadbalancerFlowlogPtrOutput {
	return o.ToNetworkloadbalancerFlowlogPtrOutputWithContext(context.Background())
}

func (o NetworkloadbalancerFlowlogOutput) ToNetworkloadbalancerFlowlogPtrOutputWithContext(ctx context.Context) NetworkloadbalancerFlowlogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkloadbalancerFlowlog) *NetworkloadbalancerFlowlog {
		return &v
	}).(NetworkloadbalancerFlowlogPtrOutput)
}

// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
func (o NetworkloadbalancerFlowlogOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkloadbalancerFlowlog) string { return v.Action }).(pulumi.StringOutput)
}

// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
func (o NetworkloadbalancerFlowlogOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkloadbalancerFlowlog) string { return v.Bucket }).(pulumi.StringOutput)
}

// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
func (o NetworkloadbalancerFlowlogOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkloadbalancerFlowlog) string { return v.Direction }).(pulumi.StringOutput)
}

// The resource's unique identifier.
func (o NetworkloadbalancerFlowlogOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkloadbalancerFlowlog) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// [string] Specifies the name of the flow log.
//
// ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the network load balancer resource.
func (o NetworkloadbalancerFlowlogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkloadbalancerFlowlog) string { return v.Name }).(pulumi.StringOutput)
}

type NetworkloadbalancerFlowlogPtrOutput struct{ *pulumi.OutputState }

func (NetworkloadbalancerFlowlogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkloadbalancerFlowlog)(nil)).Elem()
}

func (o NetworkloadbalancerFlowlogPtrOutput) ToNetworkloadbalancerFlowlogPtrOutput() NetworkloadbalancerFlowlogPtrOutput {
	return o
}

func (o NetworkloadbalancerFlowlogPtrOutput) ToNetworkloadbalancerFlowlogPtrOutputWithContext(ctx context.Context) NetworkloadbalancerFlowlogPtrOutput {
	return o
}

func (o NetworkloadbalancerFlowlogPtrOutput) Elem() NetworkloadbalancerFlowlogOutput {
	return o.ApplyT(func(v *NetworkloadbalancerFlowlog) NetworkloadbalancerFlowlog {
		if v != nil {
			return *v
		}
		var ret NetworkloadbalancerFlowlog
		return ret
	}).(NetworkloadbalancerFlowlogOutput)
}

// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
func (o NetworkloadbalancerFlowlogPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkloadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
func (o NetworkloadbalancerFlowlogPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkloadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
func (o NetworkloadbalancerFlowlogPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkloadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The resource's unique identifier.
func (o NetworkloadbalancerFlowlogPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkloadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// [string] Specifies the name of the flow log.
//
// ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the network load balancer resource.
func (o NetworkloadbalancerFlowlogPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkloadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type NetworkloadbalancerForwardingruleHealthCheck struct {
	// [int] ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
	ClientTimeout *int `pulumi:"clientTimeout"`
	// [int] It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
	ConnectTimeout *int `pulumi:"connectTimeout"`
	// [int] Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
	Retries *int `pulumi:"retries"`
	// [int] TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
	TargetTimeout *int `pulumi:"targetTimeout"`
}

// NetworkloadbalancerForwardingruleHealthCheckInput is an input type that accepts NetworkloadbalancerForwardingruleHealthCheckArgs and NetworkloadbalancerForwardingruleHealthCheckOutput values.
// You can construct a concrete instance of `NetworkloadbalancerForwardingruleHealthCheckInput` via:
//
//	NetworkloadbalancerForwardingruleHealthCheckArgs{...}
type NetworkloadbalancerForwardingruleHealthCheckInput interface {
	pulumi.Input

	ToNetworkloadbalancerForwardingruleHealthCheckOutput() NetworkloadbalancerForwardingruleHealthCheckOutput
	ToNetworkloadbalancerForwardingruleHealthCheckOutputWithContext(context.Context) NetworkloadbalancerForwardingruleHealthCheckOutput
}

type NetworkloadbalancerForwardingruleHealthCheckArgs struct {
	// [int] ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
	ClientTimeout pulumi.IntPtrInput `pulumi:"clientTimeout"`
	// [int] It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
	ConnectTimeout pulumi.IntPtrInput `pulumi:"connectTimeout"`
	// [int] Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
	Retries pulumi.IntPtrInput `pulumi:"retries"`
	// [int] TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
	TargetTimeout pulumi.IntPtrInput `pulumi:"targetTimeout"`
}

func (NetworkloadbalancerForwardingruleHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkloadbalancerForwardingruleHealthCheck)(nil)).Elem()
}

func (i NetworkloadbalancerForwardingruleHealthCheckArgs) ToNetworkloadbalancerForwardingruleHealthCheckOutput() NetworkloadbalancerForwardingruleHealthCheckOutput {
	return i.ToNetworkloadbalancerForwardingruleHealthCheckOutputWithContext(context.Background())
}

func (i NetworkloadbalancerForwardingruleHealthCheckArgs) ToNetworkloadbalancerForwardingruleHealthCheckOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkloadbalancerForwardingruleHealthCheckOutput)
}

func (i NetworkloadbalancerForwardingruleHealthCheckArgs) ToNetworkloadbalancerForwardingruleHealthCheckPtrOutput() NetworkloadbalancerForwardingruleHealthCheckPtrOutput {
	return i.ToNetworkloadbalancerForwardingruleHealthCheckPtrOutputWithContext(context.Background())
}

func (i NetworkloadbalancerForwardingruleHealthCheckArgs) ToNetworkloadbalancerForwardingruleHealthCheckPtrOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkloadbalancerForwardingruleHealthCheckOutput).ToNetworkloadbalancerForwardingruleHealthCheckPtrOutputWithContext(ctx)
}

// NetworkloadbalancerForwardingruleHealthCheckPtrInput is an input type that accepts NetworkloadbalancerForwardingruleHealthCheckArgs, NetworkloadbalancerForwardingruleHealthCheckPtr and NetworkloadbalancerForwardingruleHealthCheckPtrOutput values.
// You can construct a concrete instance of `NetworkloadbalancerForwardingruleHealthCheckPtrInput` via:
//
//	        NetworkloadbalancerForwardingruleHealthCheckArgs{...}
//
//	or:
//
//	        nil
type NetworkloadbalancerForwardingruleHealthCheckPtrInput interface {
	pulumi.Input

	ToNetworkloadbalancerForwardingruleHealthCheckPtrOutput() NetworkloadbalancerForwardingruleHealthCheckPtrOutput
	ToNetworkloadbalancerForwardingruleHealthCheckPtrOutputWithContext(context.Context) NetworkloadbalancerForwardingruleHealthCheckPtrOutput
}

type networkloadbalancerForwardingruleHealthCheckPtrType NetworkloadbalancerForwardingruleHealthCheckArgs

func NetworkloadbalancerForwardingruleHealthCheckPtr(v *NetworkloadbalancerForwardingruleHealthCheckArgs) NetworkloadbalancerForwardingruleHealthCheckPtrInput {
	return (*networkloadbalancerForwardingruleHealthCheckPtrType)(v)
}

func (*networkloadbalancerForwardingruleHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkloadbalancerForwardingruleHealthCheck)(nil)).Elem()
}

func (i *networkloadbalancerForwardingruleHealthCheckPtrType) ToNetworkloadbalancerForwardingruleHealthCheckPtrOutput() NetworkloadbalancerForwardingruleHealthCheckPtrOutput {
	return i.ToNetworkloadbalancerForwardingruleHealthCheckPtrOutputWithContext(context.Background())
}

func (i *networkloadbalancerForwardingruleHealthCheckPtrType) ToNetworkloadbalancerForwardingruleHealthCheckPtrOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkloadbalancerForwardingruleHealthCheckPtrOutput)
}

type NetworkloadbalancerForwardingruleHealthCheckOutput struct{ *pulumi.OutputState }

func (NetworkloadbalancerForwardingruleHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkloadbalancerForwardingruleHealthCheck)(nil)).Elem()
}

func (o NetworkloadbalancerForwardingruleHealthCheckOutput) ToNetworkloadbalancerForwardingruleHealthCheckOutput() NetworkloadbalancerForwardingruleHealthCheckOutput {
	return o
}

func (o NetworkloadbalancerForwardingruleHealthCheckOutput) ToNetworkloadbalancerForwardingruleHealthCheckOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleHealthCheckOutput {
	return o
}

func (o NetworkloadbalancerForwardingruleHealthCheckOutput) ToNetworkloadbalancerForwardingruleHealthCheckPtrOutput() NetworkloadbalancerForwardingruleHealthCheckPtrOutput {
	return o.ToNetworkloadbalancerForwardingruleHealthCheckPtrOutputWithContext(context.Background())
}

func (o NetworkloadbalancerForwardingruleHealthCheckOutput) ToNetworkloadbalancerForwardingruleHealthCheckPtrOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkloadbalancerForwardingruleHealthCheck) *NetworkloadbalancerForwardingruleHealthCheck {
		return &v
	}).(NetworkloadbalancerForwardingruleHealthCheckPtrOutput)
}

// [int] ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
func (o NetworkloadbalancerForwardingruleHealthCheckOutput) ClientTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkloadbalancerForwardingruleHealthCheck) *int { return v.ClientTimeout }).(pulumi.IntPtrOutput)
}

// [int] It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
func (o NetworkloadbalancerForwardingruleHealthCheckOutput) ConnectTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkloadbalancerForwardingruleHealthCheck) *int { return v.ConnectTimeout }).(pulumi.IntPtrOutput)
}

// [int] Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
func (o NetworkloadbalancerForwardingruleHealthCheckOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkloadbalancerForwardingruleHealthCheck) *int { return v.Retries }).(pulumi.IntPtrOutput)
}

// [int] TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
func (o NetworkloadbalancerForwardingruleHealthCheckOutput) TargetTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkloadbalancerForwardingruleHealthCheck) *int { return v.TargetTimeout }).(pulumi.IntPtrOutput)
}

type NetworkloadbalancerForwardingruleHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (NetworkloadbalancerForwardingruleHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkloadbalancerForwardingruleHealthCheck)(nil)).Elem()
}

func (o NetworkloadbalancerForwardingruleHealthCheckPtrOutput) ToNetworkloadbalancerForwardingruleHealthCheckPtrOutput() NetworkloadbalancerForwardingruleHealthCheckPtrOutput {
	return o
}

func (o NetworkloadbalancerForwardingruleHealthCheckPtrOutput) ToNetworkloadbalancerForwardingruleHealthCheckPtrOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleHealthCheckPtrOutput {
	return o
}

func (o NetworkloadbalancerForwardingruleHealthCheckPtrOutput) Elem() NetworkloadbalancerForwardingruleHealthCheckOutput {
	return o.ApplyT(func(v *NetworkloadbalancerForwardingruleHealthCheck) NetworkloadbalancerForwardingruleHealthCheck {
		if v != nil {
			return *v
		}
		var ret NetworkloadbalancerForwardingruleHealthCheck
		return ret
	}).(NetworkloadbalancerForwardingruleHealthCheckOutput)
}

// [int] ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
func (o NetworkloadbalancerForwardingruleHealthCheckPtrOutput) ClientTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkloadbalancerForwardingruleHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.ClientTimeout
	}).(pulumi.IntPtrOutput)
}

// [int] It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
func (o NetworkloadbalancerForwardingruleHealthCheckPtrOutput) ConnectTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkloadbalancerForwardingruleHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.IntPtrOutput)
}

// [int] Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
func (o NetworkloadbalancerForwardingruleHealthCheckPtrOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkloadbalancerForwardingruleHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Retries
	}).(pulumi.IntPtrOutput)
}

// [int] TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
func (o NetworkloadbalancerForwardingruleHealthCheckPtrOutput) TargetTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkloadbalancerForwardingruleHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.TargetTimeout
	}).(pulumi.IntPtrOutput)
}

type NetworkloadbalancerForwardingruleTarget struct {
	// Health check attributes for Network Load Balancer forwarding rule target.
	HealthCheck *NetworkloadbalancerForwardingruleTargetHealthCheck `pulumi:"healthCheck"`
	// [string] IP of a balanced target VM.
	Ip string `pulumi:"ip"`
	// [int] Port of the balanced target service. (range: 1 to 65535).
	Port int `pulumi:"port"`
	// [string] The proxy protocol version. Accepted values are `none`, `v1`, `v2`, `v2ssl`. If unspecified, the default value of `none` is used.
	ProxyProtocol *string `pulumi:"proxyProtocol"`
	// [int] Weight parameter is used to adjust the target VM's weight relative to other target VMs.
	Weight int `pulumi:"weight"`
}

// NetworkloadbalancerForwardingruleTargetInput is an input type that accepts NetworkloadbalancerForwardingruleTargetArgs and NetworkloadbalancerForwardingruleTargetOutput values.
// You can construct a concrete instance of `NetworkloadbalancerForwardingruleTargetInput` via:
//
//	NetworkloadbalancerForwardingruleTargetArgs{...}
type NetworkloadbalancerForwardingruleTargetInput interface {
	pulumi.Input

	ToNetworkloadbalancerForwardingruleTargetOutput() NetworkloadbalancerForwardingruleTargetOutput
	ToNetworkloadbalancerForwardingruleTargetOutputWithContext(context.Context) NetworkloadbalancerForwardingruleTargetOutput
}

type NetworkloadbalancerForwardingruleTargetArgs struct {
	// Health check attributes for Network Load Balancer forwarding rule target.
	HealthCheck NetworkloadbalancerForwardingruleTargetHealthCheckPtrInput `pulumi:"healthCheck"`
	// [string] IP of a balanced target VM.
	Ip pulumi.StringInput `pulumi:"ip"`
	// [int] Port of the balanced target service. (range: 1 to 65535).
	Port pulumi.IntInput `pulumi:"port"`
	// [string] The proxy protocol version. Accepted values are `none`, `v1`, `v2`, `v2ssl`. If unspecified, the default value of `none` is used.
	ProxyProtocol pulumi.StringPtrInput `pulumi:"proxyProtocol"`
	// [int] Weight parameter is used to adjust the target VM's weight relative to other target VMs.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (NetworkloadbalancerForwardingruleTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkloadbalancerForwardingruleTarget)(nil)).Elem()
}

func (i NetworkloadbalancerForwardingruleTargetArgs) ToNetworkloadbalancerForwardingruleTargetOutput() NetworkloadbalancerForwardingruleTargetOutput {
	return i.ToNetworkloadbalancerForwardingruleTargetOutputWithContext(context.Background())
}

func (i NetworkloadbalancerForwardingruleTargetArgs) ToNetworkloadbalancerForwardingruleTargetOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkloadbalancerForwardingruleTargetOutput)
}

// NetworkloadbalancerForwardingruleTargetArrayInput is an input type that accepts NetworkloadbalancerForwardingruleTargetArray and NetworkloadbalancerForwardingruleTargetArrayOutput values.
// You can construct a concrete instance of `NetworkloadbalancerForwardingruleTargetArrayInput` via:
//
//	NetworkloadbalancerForwardingruleTargetArray{ NetworkloadbalancerForwardingruleTargetArgs{...} }
type NetworkloadbalancerForwardingruleTargetArrayInput interface {
	pulumi.Input

	ToNetworkloadbalancerForwardingruleTargetArrayOutput() NetworkloadbalancerForwardingruleTargetArrayOutput
	ToNetworkloadbalancerForwardingruleTargetArrayOutputWithContext(context.Context) NetworkloadbalancerForwardingruleTargetArrayOutput
}

type NetworkloadbalancerForwardingruleTargetArray []NetworkloadbalancerForwardingruleTargetInput

func (NetworkloadbalancerForwardingruleTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkloadbalancerForwardingruleTarget)(nil)).Elem()
}

func (i NetworkloadbalancerForwardingruleTargetArray) ToNetworkloadbalancerForwardingruleTargetArrayOutput() NetworkloadbalancerForwardingruleTargetArrayOutput {
	return i.ToNetworkloadbalancerForwardingruleTargetArrayOutputWithContext(context.Background())
}

func (i NetworkloadbalancerForwardingruleTargetArray) ToNetworkloadbalancerForwardingruleTargetArrayOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkloadbalancerForwardingruleTargetArrayOutput)
}

type NetworkloadbalancerForwardingruleTargetOutput struct{ *pulumi.OutputState }

func (NetworkloadbalancerForwardingruleTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkloadbalancerForwardingruleTarget)(nil)).Elem()
}

func (o NetworkloadbalancerForwardingruleTargetOutput) ToNetworkloadbalancerForwardingruleTargetOutput() NetworkloadbalancerForwardingruleTargetOutput {
	return o
}

func (o NetworkloadbalancerForwardingruleTargetOutput) ToNetworkloadbalancerForwardingruleTargetOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleTargetOutput {
	return o
}

// Health check attributes for Network Load Balancer forwarding rule target.
func (o NetworkloadbalancerForwardingruleTargetOutput) HealthCheck() NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput {
	return o.ApplyT(func(v NetworkloadbalancerForwardingruleTarget) *NetworkloadbalancerForwardingruleTargetHealthCheck {
		return v.HealthCheck
	}).(NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput)
}

// [string] IP of a balanced target VM.
func (o NetworkloadbalancerForwardingruleTargetOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkloadbalancerForwardingruleTarget) string { return v.Ip }).(pulumi.StringOutput)
}

// [int] Port of the balanced target service. (range: 1 to 65535).
func (o NetworkloadbalancerForwardingruleTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkloadbalancerForwardingruleTarget) int { return v.Port }).(pulumi.IntOutput)
}

// [string] The proxy protocol version. Accepted values are `none`, `v1`, `v2`, `v2ssl`. If unspecified, the default value of `none` is used.
func (o NetworkloadbalancerForwardingruleTargetOutput) ProxyProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkloadbalancerForwardingruleTarget) *string { return v.ProxyProtocol }).(pulumi.StringPtrOutput)
}

// [int] Weight parameter is used to adjust the target VM's weight relative to other target VMs.
func (o NetworkloadbalancerForwardingruleTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkloadbalancerForwardingruleTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type NetworkloadbalancerForwardingruleTargetArrayOutput struct{ *pulumi.OutputState }

func (NetworkloadbalancerForwardingruleTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkloadbalancerForwardingruleTarget)(nil)).Elem()
}

func (o NetworkloadbalancerForwardingruleTargetArrayOutput) ToNetworkloadbalancerForwardingruleTargetArrayOutput() NetworkloadbalancerForwardingruleTargetArrayOutput {
	return o
}

func (o NetworkloadbalancerForwardingruleTargetArrayOutput) ToNetworkloadbalancerForwardingruleTargetArrayOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleTargetArrayOutput {
	return o
}

func (o NetworkloadbalancerForwardingruleTargetArrayOutput) Index(i pulumi.IntInput) NetworkloadbalancerForwardingruleTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkloadbalancerForwardingruleTarget {
		return vs[0].([]NetworkloadbalancerForwardingruleTarget)[vs[1].(int)]
	}).(NetworkloadbalancerForwardingruleTargetOutput)
}

type NetworkloadbalancerForwardingruleTargetHealthCheck struct {
	// [boolean] Check specifies whether the target VM's health is checked.
	Check *bool `pulumi:"check"`
	// [int] CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
	CheckInterval *int `pulumi:"checkInterval"`
	// [boolean] Maintenance specifies if a target VM should be marked as down, even if it is not.
	Maintenance *bool `pulumi:"maintenance"`
}

// NetworkloadbalancerForwardingruleTargetHealthCheckInput is an input type that accepts NetworkloadbalancerForwardingruleTargetHealthCheckArgs and NetworkloadbalancerForwardingruleTargetHealthCheckOutput values.
// You can construct a concrete instance of `NetworkloadbalancerForwardingruleTargetHealthCheckInput` via:
//
//	NetworkloadbalancerForwardingruleTargetHealthCheckArgs{...}
type NetworkloadbalancerForwardingruleTargetHealthCheckInput interface {
	pulumi.Input

	ToNetworkloadbalancerForwardingruleTargetHealthCheckOutput() NetworkloadbalancerForwardingruleTargetHealthCheckOutput
	ToNetworkloadbalancerForwardingruleTargetHealthCheckOutputWithContext(context.Context) NetworkloadbalancerForwardingruleTargetHealthCheckOutput
}

type NetworkloadbalancerForwardingruleTargetHealthCheckArgs struct {
	// [boolean] Check specifies whether the target VM's health is checked.
	Check pulumi.BoolPtrInput `pulumi:"check"`
	// [int] CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
	CheckInterval pulumi.IntPtrInput `pulumi:"checkInterval"`
	// [boolean] Maintenance specifies if a target VM should be marked as down, even if it is not.
	Maintenance pulumi.BoolPtrInput `pulumi:"maintenance"`
}

func (NetworkloadbalancerForwardingruleTargetHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkloadbalancerForwardingruleTargetHealthCheck)(nil)).Elem()
}

func (i NetworkloadbalancerForwardingruleTargetHealthCheckArgs) ToNetworkloadbalancerForwardingruleTargetHealthCheckOutput() NetworkloadbalancerForwardingruleTargetHealthCheckOutput {
	return i.ToNetworkloadbalancerForwardingruleTargetHealthCheckOutputWithContext(context.Background())
}

func (i NetworkloadbalancerForwardingruleTargetHealthCheckArgs) ToNetworkloadbalancerForwardingruleTargetHealthCheckOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleTargetHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkloadbalancerForwardingruleTargetHealthCheckOutput)
}

func (i NetworkloadbalancerForwardingruleTargetHealthCheckArgs) ToNetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput() NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput {
	return i.ToNetworkloadbalancerForwardingruleTargetHealthCheckPtrOutputWithContext(context.Background())
}

func (i NetworkloadbalancerForwardingruleTargetHealthCheckArgs) ToNetworkloadbalancerForwardingruleTargetHealthCheckPtrOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkloadbalancerForwardingruleTargetHealthCheckOutput).ToNetworkloadbalancerForwardingruleTargetHealthCheckPtrOutputWithContext(ctx)
}

// NetworkloadbalancerForwardingruleTargetHealthCheckPtrInput is an input type that accepts NetworkloadbalancerForwardingruleTargetHealthCheckArgs, NetworkloadbalancerForwardingruleTargetHealthCheckPtr and NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput values.
// You can construct a concrete instance of `NetworkloadbalancerForwardingruleTargetHealthCheckPtrInput` via:
//
//	        NetworkloadbalancerForwardingruleTargetHealthCheckArgs{...}
//
//	or:
//
//	        nil
type NetworkloadbalancerForwardingruleTargetHealthCheckPtrInput interface {
	pulumi.Input

	ToNetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput() NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput
	ToNetworkloadbalancerForwardingruleTargetHealthCheckPtrOutputWithContext(context.Context) NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput
}

type networkloadbalancerForwardingruleTargetHealthCheckPtrType NetworkloadbalancerForwardingruleTargetHealthCheckArgs

func NetworkloadbalancerForwardingruleTargetHealthCheckPtr(v *NetworkloadbalancerForwardingruleTargetHealthCheckArgs) NetworkloadbalancerForwardingruleTargetHealthCheckPtrInput {
	return (*networkloadbalancerForwardingruleTargetHealthCheckPtrType)(v)
}

func (*networkloadbalancerForwardingruleTargetHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkloadbalancerForwardingruleTargetHealthCheck)(nil)).Elem()
}

func (i *networkloadbalancerForwardingruleTargetHealthCheckPtrType) ToNetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput() NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput {
	return i.ToNetworkloadbalancerForwardingruleTargetHealthCheckPtrOutputWithContext(context.Background())
}

func (i *networkloadbalancerForwardingruleTargetHealthCheckPtrType) ToNetworkloadbalancerForwardingruleTargetHealthCheckPtrOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput)
}

type NetworkloadbalancerForwardingruleTargetHealthCheckOutput struct{ *pulumi.OutputState }

func (NetworkloadbalancerForwardingruleTargetHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkloadbalancerForwardingruleTargetHealthCheck)(nil)).Elem()
}

func (o NetworkloadbalancerForwardingruleTargetHealthCheckOutput) ToNetworkloadbalancerForwardingruleTargetHealthCheckOutput() NetworkloadbalancerForwardingruleTargetHealthCheckOutput {
	return o
}

func (o NetworkloadbalancerForwardingruleTargetHealthCheckOutput) ToNetworkloadbalancerForwardingruleTargetHealthCheckOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleTargetHealthCheckOutput {
	return o
}

func (o NetworkloadbalancerForwardingruleTargetHealthCheckOutput) ToNetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput() NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput {
	return o.ToNetworkloadbalancerForwardingruleTargetHealthCheckPtrOutputWithContext(context.Background())
}

func (o NetworkloadbalancerForwardingruleTargetHealthCheckOutput) ToNetworkloadbalancerForwardingruleTargetHealthCheckPtrOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkloadbalancerForwardingruleTargetHealthCheck) *NetworkloadbalancerForwardingruleTargetHealthCheck {
		return &v
	}).(NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput)
}

// [boolean] Check specifies whether the target VM's health is checked.
func (o NetworkloadbalancerForwardingruleTargetHealthCheckOutput) Check() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkloadbalancerForwardingruleTargetHealthCheck) *bool { return v.Check }).(pulumi.BoolPtrOutput)
}

// [int] CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
func (o NetworkloadbalancerForwardingruleTargetHealthCheckOutput) CheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkloadbalancerForwardingruleTargetHealthCheck) *int { return v.CheckInterval }).(pulumi.IntPtrOutput)
}

// [boolean] Maintenance specifies if a target VM should be marked as down, even if it is not.
func (o NetworkloadbalancerForwardingruleTargetHealthCheckOutput) Maintenance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkloadbalancerForwardingruleTargetHealthCheck) *bool { return v.Maintenance }).(pulumi.BoolPtrOutput)
}

type NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkloadbalancerForwardingruleTargetHealthCheck)(nil)).Elem()
}

func (o NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput) ToNetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput() NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput {
	return o
}

func (o NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput) ToNetworkloadbalancerForwardingruleTargetHealthCheckPtrOutputWithContext(ctx context.Context) NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput {
	return o
}

func (o NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput) Elem() NetworkloadbalancerForwardingruleTargetHealthCheckOutput {
	return o.ApplyT(func(v *NetworkloadbalancerForwardingruleTargetHealthCheck) NetworkloadbalancerForwardingruleTargetHealthCheck {
		if v != nil {
			return *v
		}
		var ret NetworkloadbalancerForwardingruleTargetHealthCheck
		return ret
	}).(NetworkloadbalancerForwardingruleTargetHealthCheckOutput)
}

// [boolean] Check specifies whether the target VM's health is checked.
func (o NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput) Check() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkloadbalancerForwardingruleTargetHealthCheck) *bool {
		if v == nil {
			return nil
		}
		return v.Check
	}).(pulumi.BoolPtrOutput)
}

// [int] CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
func (o NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput) CheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkloadbalancerForwardingruleTargetHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.CheckInterval
	}).(pulumi.IntPtrOutput)
}

// [boolean] Maintenance specifies if a target VM should be marked as down, even if it is not.
func (o NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput) Maintenance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkloadbalancerForwardingruleTargetHealthCheck) *bool {
		if v == nil {
			return nil
		}
		return v.Maintenance
	}).(pulumi.BoolPtrOutput)
}

type TargetGroupHealthCheck struct {
	// [int] The interval in milliseconds between consecutive health checks; default is 2000.
	CheckInterval *int `pulumi:"checkInterval"`
	// [int] The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.
	CheckTimeout *int `pulumi:"checkTimeout"`
	// [int] The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
	Retries *int `pulumi:"retries"`
}

// TargetGroupHealthCheckInput is an input type that accepts TargetGroupHealthCheckArgs and TargetGroupHealthCheckOutput values.
// You can construct a concrete instance of `TargetGroupHealthCheckInput` via:
//
//	TargetGroupHealthCheckArgs{...}
type TargetGroupHealthCheckInput interface {
	pulumi.Input

	ToTargetGroupHealthCheckOutput() TargetGroupHealthCheckOutput
	ToTargetGroupHealthCheckOutputWithContext(context.Context) TargetGroupHealthCheckOutput
}

type TargetGroupHealthCheckArgs struct {
	// [int] The interval in milliseconds between consecutive health checks; default is 2000.
	CheckInterval pulumi.IntPtrInput `pulumi:"checkInterval"`
	// [int] The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.
	CheckTimeout pulumi.IntPtrInput `pulumi:"checkTimeout"`
	// [int] The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
	Retries pulumi.IntPtrInput `pulumi:"retries"`
}

func (TargetGroupHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupHealthCheck)(nil)).Elem()
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckOutput() TargetGroupHealthCheckOutput {
	return i.ToTargetGroupHealthCheckOutputWithContext(context.Background())
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckOutputWithContext(ctx context.Context) TargetGroupHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHealthCheckOutput)
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return i.ToTargetGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHealthCheckOutput).ToTargetGroupHealthCheckPtrOutputWithContext(ctx)
}

// TargetGroupHealthCheckPtrInput is an input type that accepts TargetGroupHealthCheckArgs, TargetGroupHealthCheckPtr and TargetGroupHealthCheckPtrOutput values.
// You can construct a concrete instance of `TargetGroupHealthCheckPtrInput` via:
//
//	        TargetGroupHealthCheckArgs{...}
//
//	or:
//
//	        nil
type TargetGroupHealthCheckPtrInput interface {
	pulumi.Input

	ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput
	ToTargetGroupHealthCheckPtrOutputWithContext(context.Context) TargetGroupHealthCheckPtrOutput
}

type targetGroupHealthCheckPtrType TargetGroupHealthCheckArgs

func TargetGroupHealthCheckPtr(v *TargetGroupHealthCheckArgs) TargetGroupHealthCheckPtrInput {
	return (*targetGroupHealthCheckPtrType)(v)
}

func (*targetGroupHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupHealthCheck)(nil)).Elem()
}

func (i *targetGroupHealthCheckPtrType) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return i.ToTargetGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (i *targetGroupHealthCheckPtrType) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHealthCheckPtrOutput)
}

type TargetGroupHealthCheckOutput struct{ *pulumi.OutputState }

func (TargetGroupHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupHealthCheck)(nil)).Elem()
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckOutput() TargetGroupHealthCheckOutput {
	return o
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckOutputWithContext(ctx context.Context) TargetGroupHealthCheckOutput {
	return o
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return o.ToTargetGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetGroupHealthCheck) *TargetGroupHealthCheck {
		return &v
	}).(TargetGroupHealthCheckPtrOutput)
}

// [int] The interval in milliseconds between consecutive health checks; default is 2000.
func (o TargetGroupHealthCheckOutput) CheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.CheckInterval }).(pulumi.IntPtrOutput)
}

// [int] The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.
func (o TargetGroupHealthCheckOutput) CheckTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.CheckTimeout }).(pulumi.IntPtrOutput)
}

// [int] The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
func (o TargetGroupHealthCheckOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.Retries }).(pulumi.IntPtrOutput)
}

type TargetGroupHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (TargetGroupHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupHealthCheck)(nil)).Elem()
}

func (o TargetGroupHealthCheckPtrOutput) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return o
}

func (o TargetGroupHealthCheckPtrOutput) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return o
}

func (o TargetGroupHealthCheckPtrOutput) Elem() TargetGroupHealthCheckOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) TargetGroupHealthCheck {
		if v != nil {
			return *v
		}
		var ret TargetGroupHealthCheck
		return ret
	}).(TargetGroupHealthCheckOutput)
}

// [int] The interval in milliseconds between consecutive health checks; default is 2000.
func (o TargetGroupHealthCheckPtrOutput) CheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.CheckInterval
	}).(pulumi.IntPtrOutput)
}

// [int] The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.
func (o TargetGroupHealthCheckPtrOutput) CheckTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.CheckTimeout
	}).(pulumi.IntPtrOutput)
}

// [int] The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
func (o TargetGroupHealthCheckPtrOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Retries
	}).(pulumi.IntPtrOutput)
}

type TargetGroupHttpHealthCheck struct {
	// [string]
	MatchType string `pulumi:"matchType"`
	// [string] The method for the HTTP health check.
	Method *string `pulumi:"method"`
	// [bool]
	Negate *bool `pulumi:"negate"`
	// [string] The path (destination URL) for the HTTP health check request; the default is /.
	Path *string `pulumi:"path"`
	// [bool]
	Regex *bool `pulumi:"regex"`
	// [string] The response returned by the request, depending on the match type.
	Response string `pulumi:"response"`
}

// TargetGroupHttpHealthCheckInput is an input type that accepts TargetGroupHttpHealthCheckArgs and TargetGroupHttpHealthCheckOutput values.
// You can construct a concrete instance of `TargetGroupHttpHealthCheckInput` via:
//
//	TargetGroupHttpHealthCheckArgs{...}
type TargetGroupHttpHealthCheckInput interface {
	pulumi.Input

	ToTargetGroupHttpHealthCheckOutput() TargetGroupHttpHealthCheckOutput
	ToTargetGroupHttpHealthCheckOutputWithContext(context.Context) TargetGroupHttpHealthCheckOutput
}

type TargetGroupHttpHealthCheckArgs struct {
	// [string]
	MatchType pulumi.StringInput `pulumi:"matchType"`
	// [string] The method for the HTTP health check.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// [bool]
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// [string] The path (destination URL) for the HTTP health check request; the default is /.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// [bool]
	Regex pulumi.BoolPtrInput `pulumi:"regex"`
	// [string] The response returned by the request, depending on the match type.
	Response pulumi.StringInput `pulumi:"response"`
}

func (TargetGroupHttpHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupHttpHealthCheck)(nil)).Elem()
}

func (i TargetGroupHttpHealthCheckArgs) ToTargetGroupHttpHealthCheckOutput() TargetGroupHttpHealthCheckOutput {
	return i.ToTargetGroupHttpHealthCheckOutputWithContext(context.Background())
}

func (i TargetGroupHttpHealthCheckArgs) ToTargetGroupHttpHealthCheckOutputWithContext(ctx context.Context) TargetGroupHttpHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHttpHealthCheckOutput)
}

func (i TargetGroupHttpHealthCheckArgs) ToTargetGroupHttpHealthCheckPtrOutput() TargetGroupHttpHealthCheckPtrOutput {
	return i.ToTargetGroupHttpHealthCheckPtrOutputWithContext(context.Background())
}

func (i TargetGroupHttpHealthCheckArgs) ToTargetGroupHttpHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHttpHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHttpHealthCheckOutput).ToTargetGroupHttpHealthCheckPtrOutputWithContext(ctx)
}

// TargetGroupHttpHealthCheckPtrInput is an input type that accepts TargetGroupHttpHealthCheckArgs, TargetGroupHttpHealthCheckPtr and TargetGroupHttpHealthCheckPtrOutput values.
// You can construct a concrete instance of `TargetGroupHttpHealthCheckPtrInput` via:
//
//	        TargetGroupHttpHealthCheckArgs{...}
//
//	or:
//
//	        nil
type TargetGroupHttpHealthCheckPtrInput interface {
	pulumi.Input

	ToTargetGroupHttpHealthCheckPtrOutput() TargetGroupHttpHealthCheckPtrOutput
	ToTargetGroupHttpHealthCheckPtrOutputWithContext(context.Context) TargetGroupHttpHealthCheckPtrOutput
}

type targetGroupHttpHealthCheckPtrType TargetGroupHttpHealthCheckArgs

func TargetGroupHttpHealthCheckPtr(v *TargetGroupHttpHealthCheckArgs) TargetGroupHttpHealthCheckPtrInput {
	return (*targetGroupHttpHealthCheckPtrType)(v)
}

func (*targetGroupHttpHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupHttpHealthCheck)(nil)).Elem()
}

func (i *targetGroupHttpHealthCheckPtrType) ToTargetGroupHttpHealthCheckPtrOutput() TargetGroupHttpHealthCheckPtrOutput {
	return i.ToTargetGroupHttpHealthCheckPtrOutputWithContext(context.Background())
}

func (i *targetGroupHttpHealthCheckPtrType) ToTargetGroupHttpHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHttpHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHttpHealthCheckPtrOutput)
}

type TargetGroupHttpHealthCheckOutput struct{ *pulumi.OutputState }

func (TargetGroupHttpHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupHttpHealthCheck)(nil)).Elem()
}

func (o TargetGroupHttpHealthCheckOutput) ToTargetGroupHttpHealthCheckOutput() TargetGroupHttpHealthCheckOutput {
	return o
}

func (o TargetGroupHttpHealthCheckOutput) ToTargetGroupHttpHealthCheckOutputWithContext(ctx context.Context) TargetGroupHttpHealthCheckOutput {
	return o
}

func (o TargetGroupHttpHealthCheckOutput) ToTargetGroupHttpHealthCheckPtrOutput() TargetGroupHttpHealthCheckPtrOutput {
	return o.ToTargetGroupHttpHealthCheckPtrOutputWithContext(context.Background())
}

func (o TargetGroupHttpHealthCheckOutput) ToTargetGroupHttpHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHttpHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetGroupHttpHealthCheck) *TargetGroupHttpHealthCheck {
		return &v
	}).(TargetGroupHttpHealthCheckPtrOutput)
}

// [string]
func (o TargetGroupHttpHealthCheckOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupHttpHealthCheck) string { return v.MatchType }).(pulumi.StringOutput)
}

// [string] The method for the HTTP health check.
func (o TargetGroupHttpHealthCheckOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHttpHealthCheck) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// [bool]
func (o TargetGroupHttpHealthCheckOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupHttpHealthCheck) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// [string] The path (destination URL) for the HTTP health check request; the default is /.
func (o TargetGroupHttpHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHttpHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// [bool]
func (o TargetGroupHttpHealthCheckOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupHttpHealthCheck) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

// [string] The response returned by the request, depending on the match type.
func (o TargetGroupHttpHealthCheckOutput) Response() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupHttpHealthCheck) string { return v.Response }).(pulumi.StringOutput)
}

type TargetGroupHttpHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (TargetGroupHttpHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupHttpHealthCheck)(nil)).Elem()
}

func (o TargetGroupHttpHealthCheckPtrOutput) ToTargetGroupHttpHealthCheckPtrOutput() TargetGroupHttpHealthCheckPtrOutput {
	return o
}

func (o TargetGroupHttpHealthCheckPtrOutput) ToTargetGroupHttpHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHttpHealthCheckPtrOutput {
	return o
}

func (o TargetGroupHttpHealthCheckPtrOutput) Elem() TargetGroupHttpHealthCheckOutput {
	return o.ApplyT(func(v *TargetGroupHttpHealthCheck) TargetGroupHttpHealthCheck {
		if v != nil {
			return *v
		}
		var ret TargetGroupHttpHealthCheck
		return ret
	}).(TargetGroupHttpHealthCheckOutput)
}

// [string]
func (o TargetGroupHttpHealthCheckPtrOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupHttpHealthCheck) *string {
		if v == nil {
			return nil
		}
		return &v.MatchType
	}).(pulumi.StringPtrOutput)
}

// [string] The method for the HTTP health check.
func (o TargetGroupHttpHealthCheckPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupHttpHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// [bool]
func (o TargetGroupHttpHealthCheckPtrOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TargetGroupHttpHealthCheck) *bool {
		if v == nil {
			return nil
		}
		return v.Negate
	}).(pulumi.BoolPtrOutput)
}

// [string] The path (destination URL) for the HTTP health check request; the default is /.
func (o TargetGroupHttpHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupHttpHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// [bool]
func (o TargetGroupHttpHealthCheckPtrOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TargetGroupHttpHealthCheck) *bool {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.BoolPtrOutput)
}

// [string] The response returned by the request, depending on the match type.
func (o TargetGroupHttpHealthCheckPtrOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupHttpHealthCheck) *string {
		if v == nil {
			return nil
		}
		return &v.Response
	}).(pulumi.StringPtrOutput)
}

type TargetGroupTarget struct {
	// [bool] Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.
	HealthCheckEnabled *bool `pulumi:"healthCheckEnabled"`
	// [string] The IP of the balanced target VM.
	Ip string `pulumi:"ip"`
	// [bool] Maintenance mode prevents the target from receiving balanced traffic.
	MaintenanceEnabled *bool `pulumi:"maintenanceEnabled"`
	// [int] The port of the balanced target service; valid range is 1 to 65535.
	Port int `pulumi:"port"`
	// [string] The proxy protocol version. Accepted values are `none`, `v1`, `v2`, `v2ssl`. If unspecified, the default value of `none` is used.
	ProxyProtocol *string `pulumi:"proxyProtocol"`
	// [int] Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.
	Weight int `pulumi:"weight"`
}

// TargetGroupTargetInput is an input type that accepts TargetGroupTargetArgs and TargetGroupTargetOutput values.
// You can construct a concrete instance of `TargetGroupTargetInput` via:
//
//	TargetGroupTargetArgs{...}
type TargetGroupTargetInput interface {
	pulumi.Input

	ToTargetGroupTargetOutput() TargetGroupTargetOutput
	ToTargetGroupTargetOutputWithContext(context.Context) TargetGroupTargetOutput
}

type TargetGroupTargetArgs struct {
	// [bool] Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.
	HealthCheckEnabled pulumi.BoolPtrInput `pulumi:"healthCheckEnabled"`
	// [string] The IP of the balanced target VM.
	Ip pulumi.StringInput `pulumi:"ip"`
	// [bool] Maintenance mode prevents the target from receiving balanced traffic.
	MaintenanceEnabled pulumi.BoolPtrInput `pulumi:"maintenanceEnabled"`
	// [int] The port of the balanced target service; valid range is 1 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// [string] The proxy protocol version. Accepted values are `none`, `v1`, `v2`, `v2ssl`. If unspecified, the default value of `none` is used.
	ProxyProtocol pulumi.StringPtrInput `pulumi:"proxyProtocol"`
	// [int] Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (TargetGroupTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTarget)(nil)).Elem()
}

func (i TargetGroupTargetArgs) ToTargetGroupTargetOutput() TargetGroupTargetOutput {
	return i.ToTargetGroupTargetOutputWithContext(context.Background())
}

func (i TargetGroupTargetArgs) ToTargetGroupTargetOutputWithContext(ctx context.Context) TargetGroupTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupTargetOutput)
}

// TargetGroupTargetArrayInput is an input type that accepts TargetGroupTargetArray and TargetGroupTargetArrayOutput values.
// You can construct a concrete instance of `TargetGroupTargetArrayInput` via:
//
//	TargetGroupTargetArray{ TargetGroupTargetArgs{...} }
type TargetGroupTargetArrayInput interface {
	pulumi.Input

	ToTargetGroupTargetArrayOutput() TargetGroupTargetArrayOutput
	ToTargetGroupTargetArrayOutputWithContext(context.Context) TargetGroupTargetArrayOutput
}

type TargetGroupTargetArray []TargetGroupTargetInput

func (TargetGroupTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTarget)(nil)).Elem()
}

func (i TargetGroupTargetArray) ToTargetGroupTargetArrayOutput() TargetGroupTargetArrayOutput {
	return i.ToTargetGroupTargetArrayOutputWithContext(context.Background())
}

func (i TargetGroupTargetArray) ToTargetGroupTargetArrayOutputWithContext(ctx context.Context) TargetGroupTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupTargetArrayOutput)
}

type TargetGroupTargetOutput struct{ *pulumi.OutputState }

func (TargetGroupTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTarget)(nil)).Elem()
}

func (o TargetGroupTargetOutput) ToTargetGroupTargetOutput() TargetGroupTargetOutput {
	return o
}

func (o TargetGroupTargetOutput) ToTargetGroupTargetOutputWithContext(ctx context.Context) TargetGroupTargetOutput {
	return o
}

// [bool] Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.
func (o TargetGroupTargetOutput) HealthCheckEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupTarget) *bool { return v.HealthCheckEnabled }).(pulumi.BoolPtrOutput)
}

// [string] The IP of the balanced target VM.
func (o TargetGroupTargetOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupTarget) string { return v.Ip }).(pulumi.StringOutput)
}

// [bool] Maintenance mode prevents the target from receiving balanced traffic.
func (o TargetGroupTargetOutput) MaintenanceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupTarget) *bool { return v.MaintenanceEnabled }).(pulumi.BoolPtrOutput)
}

// [int] The port of the balanced target service; valid range is 1 to 65535.
func (o TargetGroupTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v TargetGroupTarget) int { return v.Port }).(pulumi.IntOutput)
}

// [string] The proxy protocol version. Accepted values are `none`, `v1`, `v2`, `v2ssl`. If unspecified, the default value of `none` is used.
func (o TargetGroupTargetOutput) ProxyProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupTarget) *string { return v.ProxyProtocol }).(pulumi.StringPtrOutput)
}

// [int] Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.
func (o TargetGroupTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v TargetGroupTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type TargetGroupTargetArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTarget)(nil)).Elem()
}

func (o TargetGroupTargetArrayOutput) ToTargetGroupTargetArrayOutput() TargetGroupTargetArrayOutput {
	return o
}

func (o TargetGroupTargetArrayOutput) ToTargetGroupTargetArrayOutputWithContext(ctx context.Context) TargetGroupTargetArrayOutput {
	return o
}

func (o TargetGroupTargetArrayOutput) Index(i pulumi.IntInput) TargetGroupTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupTarget {
		return vs[0].([]TargetGroupTarget)[vs[1].(int)]
	}).(TargetGroupTargetOutput)
}

type GetApigatewayCustomDomain struct {
	// The ID of the certificate to use for the distribution.
	CertificateId string `pulumi:"certificateId"`
	// Name of an existing API Gateway that you want to search for.
	Name string `pulumi:"name"`
}

// GetApigatewayCustomDomainInput is an input type that accepts GetApigatewayCustomDomainArgs and GetApigatewayCustomDomainOutput values.
// You can construct a concrete instance of `GetApigatewayCustomDomainInput` via:
//
//	GetApigatewayCustomDomainArgs{...}
type GetApigatewayCustomDomainInput interface {
	pulumi.Input

	ToGetApigatewayCustomDomainOutput() GetApigatewayCustomDomainOutput
	ToGetApigatewayCustomDomainOutputWithContext(context.Context) GetApigatewayCustomDomainOutput
}

type GetApigatewayCustomDomainArgs struct {
	// The ID of the certificate to use for the distribution.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// Name of an existing API Gateway that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetApigatewayCustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigatewayCustomDomain)(nil)).Elem()
}

func (i GetApigatewayCustomDomainArgs) ToGetApigatewayCustomDomainOutput() GetApigatewayCustomDomainOutput {
	return i.ToGetApigatewayCustomDomainOutputWithContext(context.Background())
}

func (i GetApigatewayCustomDomainArgs) ToGetApigatewayCustomDomainOutputWithContext(ctx context.Context) GetApigatewayCustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigatewayCustomDomainOutput)
}

// GetApigatewayCustomDomainArrayInput is an input type that accepts GetApigatewayCustomDomainArray and GetApigatewayCustomDomainArrayOutput values.
// You can construct a concrete instance of `GetApigatewayCustomDomainArrayInput` via:
//
//	GetApigatewayCustomDomainArray{ GetApigatewayCustomDomainArgs{...} }
type GetApigatewayCustomDomainArrayInput interface {
	pulumi.Input

	ToGetApigatewayCustomDomainArrayOutput() GetApigatewayCustomDomainArrayOutput
	ToGetApigatewayCustomDomainArrayOutputWithContext(context.Context) GetApigatewayCustomDomainArrayOutput
}

type GetApigatewayCustomDomainArray []GetApigatewayCustomDomainInput

func (GetApigatewayCustomDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigatewayCustomDomain)(nil)).Elem()
}

func (i GetApigatewayCustomDomainArray) ToGetApigatewayCustomDomainArrayOutput() GetApigatewayCustomDomainArrayOutput {
	return i.ToGetApigatewayCustomDomainArrayOutputWithContext(context.Background())
}

func (i GetApigatewayCustomDomainArray) ToGetApigatewayCustomDomainArrayOutputWithContext(ctx context.Context) GetApigatewayCustomDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigatewayCustomDomainArrayOutput)
}

type GetApigatewayCustomDomainOutput struct{ *pulumi.OutputState }

func (GetApigatewayCustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigatewayCustomDomain)(nil)).Elem()
}

func (o GetApigatewayCustomDomainOutput) ToGetApigatewayCustomDomainOutput() GetApigatewayCustomDomainOutput {
	return o
}

func (o GetApigatewayCustomDomainOutput) ToGetApigatewayCustomDomainOutputWithContext(ctx context.Context) GetApigatewayCustomDomainOutput {
	return o
}

// The ID of the certificate to use for the distribution.
func (o GetApigatewayCustomDomainOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigatewayCustomDomain) string { return v.CertificateId }).(pulumi.StringOutput)
}

// Name of an existing API Gateway that you want to search for.
func (o GetApigatewayCustomDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigatewayCustomDomain) string { return v.Name }).(pulumi.StringOutput)
}

type GetApigatewayCustomDomainArrayOutput struct{ *pulumi.OutputState }

func (GetApigatewayCustomDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigatewayCustomDomain)(nil)).Elem()
}

func (o GetApigatewayCustomDomainArrayOutput) ToGetApigatewayCustomDomainArrayOutput() GetApigatewayCustomDomainArrayOutput {
	return o
}

func (o GetApigatewayCustomDomainArrayOutput) ToGetApigatewayCustomDomainArrayOutputWithContext(ctx context.Context) GetApigatewayCustomDomainArrayOutput {
	return o
}

func (o GetApigatewayCustomDomainArrayOutput) Index(i pulumi.IntInput) GetApigatewayCustomDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigatewayCustomDomain {
		return vs[0].([]GetApigatewayCustomDomain)[vs[1].(int)]
	}).(GetApigatewayCustomDomainOutput)
}

type GetApigatewayRouteUpstream struct {
	// The host of the upstream.
	Host string `pulumi:"host"`
	// The load balancer algorithm.
	Loadbalancer string `pulumi:"loadbalancer"`
	// The port of the upstream.
	Port int `pulumi:"port"`
	// The target URL of the upstream.
	Scheme string `pulumi:"scheme"`
	// Weight with which to split traffic to the upstream.
	Weight int `pulumi:"weight"`
}

// GetApigatewayRouteUpstreamInput is an input type that accepts GetApigatewayRouteUpstreamArgs and GetApigatewayRouteUpstreamOutput values.
// You can construct a concrete instance of `GetApigatewayRouteUpstreamInput` via:
//
//	GetApigatewayRouteUpstreamArgs{...}
type GetApigatewayRouteUpstreamInput interface {
	pulumi.Input

	ToGetApigatewayRouteUpstreamOutput() GetApigatewayRouteUpstreamOutput
	ToGetApigatewayRouteUpstreamOutputWithContext(context.Context) GetApigatewayRouteUpstreamOutput
}

type GetApigatewayRouteUpstreamArgs struct {
	// The host of the upstream.
	Host pulumi.StringInput `pulumi:"host"`
	// The load balancer algorithm.
	Loadbalancer pulumi.StringInput `pulumi:"loadbalancer"`
	// The port of the upstream.
	Port pulumi.IntInput `pulumi:"port"`
	// The target URL of the upstream.
	Scheme pulumi.StringInput `pulumi:"scheme"`
	// Weight with which to split traffic to the upstream.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetApigatewayRouteUpstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigatewayRouteUpstream)(nil)).Elem()
}

func (i GetApigatewayRouteUpstreamArgs) ToGetApigatewayRouteUpstreamOutput() GetApigatewayRouteUpstreamOutput {
	return i.ToGetApigatewayRouteUpstreamOutputWithContext(context.Background())
}

func (i GetApigatewayRouteUpstreamArgs) ToGetApigatewayRouteUpstreamOutputWithContext(ctx context.Context) GetApigatewayRouteUpstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigatewayRouteUpstreamOutput)
}

// GetApigatewayRouteUpstreamArrayInput is an input type that accepts GetApigatewayRouteUpstreamArray and GetApigatewayRouteUpstreamArrayOutput values.
// You can construct a concrete instance of `GetApigatewayRouteUpstreamArrayInput` via:
//
//	GetApigatewayRouteUpstreamArray{ GetApigatewayRouteUpstreamArgs{...} }
type GetApigatewayRouteUpstreamArrayInput interface {
	pulumi.Input

	ToGetApigatewayRouteUpstreamArrayOutput() GetApigatewayRouteUpstreamArrayOutput
	ToGetApigatewayRouteUpstreamArrayOutputWithContext(context.Context) GetApigatewayRouteUpstreamArrayOutput
}

type GetApigatewayRouteUpstreamArray []GetApigatewayRouteUpstreamInput

func (GetApigatewayRouteUpstreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigatewayRouteUpstream)(nil)).Elem()
}

func (i GetApigatewayRouteUpstreamArray) ToGetApigatewayRouteUpstreamArrayOutput() GetApigatewayRouteUpstreamArrayOutput {
	return i.ToGetApigatewayRouteUpstreamArrayOutputWithContext(context.Background())
}

func (i GetApigatewayRouteUpstreamArray) ToGetApigatewayRouteUpstreamArrayOutputWithContext(ctx context.Context) GetApigatewayRouteUpstreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApigatewayRouteUpstreamArrayOutput)
}

type GetApigatewayRouteUpstreamOutput struct{ *pulumi.OutputState }

func (GetApigatewayRouteUpstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApigatewayRouteUpstream)(nil)).Elem()
}

func (o GetApigatewayRouteUpstreamOutput) ToGetApigatewayRouteUpstreamOutput() GetApigatewayRouteUpstreamOutput {
	return o
}

func (o GetApigatewayRouteUpstreamOutput) ToGetApigatewayRouteUpstreamOutputWithContext(ctx context.Context) GetApigatewayRouteUpstreamOutput {
	return o
}

// The host of the upstream.
func (o GetApigatewayRouteUpstreamOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigatewayRouteUpstream) string { return v.Host }).(pulumi.StringOutput)
}

// The load balancer algorithm.
func (o GetApigatewayRouteUpstreamOutput) Loadbalancer() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigatewayRouteUpstream) string { return v.Loadbalancer }).(pulumi.StringOutput)
}

// The port of the upstream.
func (o GetApigatewayRouteUpstreamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigatewayRouteUpstream) int { return v.Port }).(pulumi.IntOutput)
}

// The target URL of the upstream.
func (o GetApigatewayRouteUpstreamOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetApigatewayRouteUpstream) string { return v.Scheme }).(pulumi.StringOutput)
}

// Weight with which to split traffic to the upstream.
func (o GetApigatewayRouteUpstreamOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetApigatewayRouteUpstream) int { return v.Weight }).(pulumi.IntOutput)
}

type GetApigatewayRouteUpstreamArrayOutput struct{ *pulumi.OutputState }

func (GetApigatewayRouteUpstreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApigatewayRouteUpstream)(nil)).Elem()
}

func (o GetApigatewayRouteUpstreamArrayOutput) ToGetApigatewayRouteUpstreamArrayOutput() GetApigatewayRouteUpstreamArrayOutput {
	return o
}

func (o GetApigatewayRouteUpstreamArrayOutput) ToGetApigatewayRouteUpstreamArrayOutputWithContext(ctx context.Context) GetApigatewayRouteUpstreamArrayOutput {
	return o
}

func (o GetApigatewayRouteUpstreamArrayOutput) Index(i pulumi.IntInput) GetApigatewayRouteUpstreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApigatewayRouteUpstream {
		return vs[0].([]GetApigatewayRouteUpstream)[vs[1].(int)]
	}).(GetApigatewayRouteUpstreamOutput)
}

type GetApplicationLoadbalancerFlowlog struct {
	// Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	Action string `pulumi:"action"`
	// Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	Bucket string `pulumi:"bucket"`
	// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	Direction string `pulumi:"direction"`
	// ID of the application load balancer you want to search for.
	Id string `pulumi:"id"`
	// Name of an existing application load balancer that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name string `pulumi:"name"`
}

// GetApplicationLoadbalancerFlowlogInput is an input type that accepts GetApplicationLoadbalancerFlowlogArgs and GetApplicationLoadbalancerFlowlogOutput values.
// You can construct a concrete instance of `GetApplicationLoadbalancerFlowlogInput` via:
//
//	GetApplicationLoadbalancerFlowlogArgs{...}
type GetApplicationLoadbalancerFlowlogInput interface {
	pulumi.Input

	ToGetApplicationLoadbalancerFlowlogOutput() GetApplicationLoadbalancerFlowlogOutput
	ToGetApplicationLoadbalancerFlowlogOutputWithContext(context.Context) GetApplicationLoadbalancerFlowlogOutput
}

type GetApplicationLoadbalancerFlowlogArgs struct {
	// Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	Action pulumi.StringInput `pulumi:"action"`
	// Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	Direction pulumi.StringInput `pulumi:"direction"`
	// ID of the application load balancer you want to search for.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of an existing application load balancer that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetApplicationLoadbalancerFlowlogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadbalancerFlowlog)(nil)).Elem()
}

func (i GetApplicationLoadbalancerFlowlogArgs) ToGetApplicationLoadbalancerFlowlogOutput() GetApplicationLoadbalancerFlowlogOutput {
	return i.ToGetApplicationLoadbalancerFlowlogOutputWithContext(context.Background())
}

func (i GetApplicationLoadbalancerFlowlogArgs) ToGetApplicationLoadbalancerFlowlogOutputWithContext(ctx context.Context) GetApplicationLoadbalancerFlowlogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadbalancerFlowlogOutput)
}

// GetApplicationLoadbalancerFlowlogArrayInput is an input type that accepts GetApplicationLoadbalancerFlowlogArray and GetApplicationLoadbalancerFlowlogArrayOutput values.
// You can construct a concrete instance of `GetApplicationLoadbalancerFlowlogArrayInput` via:
//
//	GetApplicationLoadbalancerFlowlogArray{ GetApplicationLoadbalancerFlowlogArgs{...} }
type GetApplicationLoadbalancerFlowlogArrayInput interface {
	pulumi.Input

	ToGetApplicationLoadbalancerFlowlogArrayOutput() GetApplicationLoadbalancerFlowlogArrayOutput
	ToGetApplicationLoadbalancerFlowlogArrayOutputWithContext(context.Context) GetApplicationLoadbalancerFlowlogArrayOutput
}

type GetApplicationLoadbalancerFlowlogArray []GetApplicationLoadbalancerFlowlogInput

func (GetApplicationLoadbalancerFlowlogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadbalancerFlowlog)(nil)).Elem()
}

func (i GetApplicationLoadbalancerFlowlogArray) ToGetApplicationLoadbalancerFlowlogArrayOutput() GetApplicationLoadbalancerFlowlogArrayOutput {
	return i.ToGetApplicationLoadbalancerFlowlogArrayOutputWithContext(context.Background())
}

func (i GetApplicationLoadbalancerFlowlogArray) ToGetApplicationLoadbalancerFlowlogArrayOutputWithContext(ctx context.Context) GetApplicationLoadbalancerFlowlogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadbalancerFlowlogArrayOutput)
}

type GetApplicationLoadbalancerFlowlogOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadbalancerFlowlogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadbalancerFlowlog)(nil)).Elem()
}

func (o GetApplicationLoadbalancerFlowlogOutput) ToGetApplicationLoadbalancerFlowlogOutput() GetApplicationLoadbalancerFlowlogOutput {
	return o
}

func (o GetApplicationLoadbalancerFlowlogOutput) ToGetApplicationLoadbalancerFlowlogOutputWithContext(ctx context.Context) GetApplicationLoadbalancerFlowlogOutput {
	return o
}

// Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
func (o GetApplicationLoadbalancerFlowlogOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerFlowlog) string { return v.Action }).(pulumi.StringOutput)
}

// Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
func (o GetApplicationLoadbalancerFlowlogOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerFlowlog) string { return v.Bucket }).(pulumi.StringOutput)
}

// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
func (o GetApplicationLoadbalancerFlowlogOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerFlowlog) string { return v.Direction }).(pulumi.StringOutput)
}

// ID of the application load balancer you want to search for.
func (o GetApplicationLoadbalancerFlowlogOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerFlowlog) string { return v.Id }).(pulumi.StringOutput)
}

// Name of an existing application load balancer that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
func (o GetApplicationLoadbalancerFlowlogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerFlowlog) string { return v.Name }).(pulumi.StringOutput)
}

type GetApplicationLoadbalancerFlowlogArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadbalancerFlowlogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadbalancerFlowlog)(nil)).Elem()
}

func (o GetApplicationLoadbalancerFlowlogArrayOutput) ToGetApplicationLoadbalancerFlowlogArrayOutput() GetApplicationLoadbalancerFlowlogArrayOutput {
	return o
}

func (o GetApplicationLoadbalancerFlowlogArrayOutput) ToGetApplicationLoadbalancerFlowlogArrayOutputWithContext(ctx context.Context) GetApplicationLoadbalancerFlowlogArrayOutput {
	return o
}

func (o GetApplicationLoadbalancerFlowlogArrayOutput) Index(i pulumi.IntInput) GetApplicationLoadbalancerFlowlogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationLoadbalancerFlowlog {
		return vs[0].([]GetApplicationLoadbalancerFlowlog)[vs[1].(int)]
	}).(GetApplicationLoadbalancerFlowlogOutput)
}

type GetApplicationLoadbalancerForwardingruleHttpRule struct {
	// An array of items in the collection.The action is only performed if each and every condition is met; if no conditions are set, the rule will always be performed.
	Conditions []GetApplicationLoadbalancerForwardingruleHttpRuleCondition `pulumi:"conditions"`
	// Valid only for STATIC actions.
	ContentType string `pulumi:"contentType"`
	// Default is false; valid only for REDIRECT actions.
	DropQuery bool `pulumi:"dropQuery"`
	// The location for redirecting; mandatory and valid only for REDIRECT actions.
	Location string `pulumi:"location"`
	// Name of an existing application load balancer that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name string `pulumi:"name"`
	// The response message of the request; mandatory for STATIC action.
	ResponseMessage string `pulumi:"responseMessage"`
	// Valid only for REDIRECT and STATIC actions. For REDIRECT actions, default is 301 and possible values are 301, 302, 303, 307, and 308. For STATIC actions, default is 503 and valid range is 200 to 599.
	StatusCode int `pulumi:"statusCode"`
	// The UUID of the target group; mandatory for FORWARD action.
	TargetGroup string `pulumi:"targetGroup"`
	// Type of the Http Rule condition.
	Type string `pulumi:"type"`
}

// GetApplicationLoadbalancerForwardingruleHttpRuleInput is an input type that accepts GetApplicationLoadbalancerForwardingruleHttpRuleArgs and GetApplicationLoadbalancerForwardingruleHttpRuleOutput values.
// You can construct a concrete instance of `GetApplicationLoadbalancerForwardingruleHttpRuleInput` via:
//
//	GetApplicationLoadbalancerForwardingruleHttpRuleArgs{...}
type GetApplicationLoadbalancerForwardingruleHttpRuleInput interface {
	pulumi.Input

	ToGetApplicationLoadbalancerForwardingruleHttpRuleOutput() GetApplicationLoadbalancerForwardingruleHttpRuleOutput
	ToGetApplicationLoadbalancerForwardingruleHttpRuleOutputWithContext(context.Context) GetApplicationLoadbalancerForwardingruleHttpRuleOutput
}

type GetApplicationLoadbalancerForwardingruleHttpRuleArgs struct {
	// An array of items in the collection.The action is only performed if each and every condition is met; if no conditions are set, the rule will always be performed.
	Conditions GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput `pulumi:"conditions"`
	// Valid only for STATIC actions.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// Default is false; valid only for REDIRECT actions.
	DropQuery pulumi.BoolInput `pulumi:"dropQuery"`
	// The location for redirecting; mandatory and valid only for REDIRECT actions.
	Location pulumi.StringInput `pulumi:"location"`
	// Name of an existing application load balancer that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name pulumi.StringInput `pulumi:"name"`
	// The response message of the request; mandatory for STATIC action.
	ResponseMessage pulumi.StringInput `pulumi:"responseMessage"`
	// Valid only for REDIRECT and STATIC actions. For REDIRECT actions, default is 301 and possible values are 301, 302, 303, 307, and 308. For STATIC actions, default is 503 and valid range is 200 to 599.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
	// The UUID of the target group; mandatory for FORWARD action.
	TargetGroup pulumi.StringInput `pulumi:"targetGroup"`
	// Type of the Http Rule condition.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetApplicationLoadbalancerForwardingruleHttpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadbalancerForwardingruleHttpRule)(nil)).Elem()
}

func (i GetApplicationLoadbalancerForwardingruleHttpRuleArgs) ToGetApplicationLoadbalancerForwardingruleHttpRuleOutput() GetApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return i.ToGetApplicationLoadbalancerForwardingruleHttpRuleOutputWithContext(context.Background())
}

func (i GetApplicationLoadbalancerForwardingruleHttpRuleArgs) ToGetApplicationLoadbalancerForwardingruleHttpRuleOutputWithContext(ctx context.Context) GetApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadbalancerForwardingruleHttpRuleOutput)
}

// GetApplicationLoadbalancerForwardingruleHttpRuleArrayInput is an input type that accepts GetApplicationLoadbalancerForwardingruleHttpRuleArray and GetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput values.
// You can construct a concrete instance of `GetApplicationLoadbalancerForwardingruleHttpRuleArrayInput` via:
//
//	GetApplicationLoadbalancerForwardingruleHttpRuleArray{ GetApplicationLoadbalancerForwardingruleHttpRuleArgs{...} }
type GetApplicationLoadbalancerForwardingruleHttpRuleArrayInput interface {
	pulumi.Input

	ToGetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput() GetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput
	ToGetApplicationLoadbalancerForwardingruleHttpRuleArrayOutputWithContext(context.Context) GetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput
}

type GetApplicationLoadbalancerForwardingruleHttpRuleArray []GetApplicationLoadbalancerForwardingruleHttpRuleInput

func (GetApplicationLoadbalancerForwardingruleHttpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadbalancerForwardingruleHttpRule)(nil)).Elem()
}

func (i GetApplicationLoadbalancerForwardingruleHttpRuleArray) ToGetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput() GetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput {
	return i.ToGetApplicationLoadbalancerForwardingruleHttpRuleArrayOutputWithContext(context.Background())
}

func (i GetApplicationLoadbalancerForwardingruleHttpRuleArray) ToGetApplicationLoadbalancerForwardingruleHttpRuleArrayOutputWithContext(ctx context.Context) GetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput)
}

type GetApplicationLoadbalancerForwardingruleHttpRuleOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadbalancerForwardingruleHttpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadbalancerForwardingruleHttpRule)(nil)).Elem()
}

func (o GetApplicationLoadbalancerForwardingruleHttpRuleOutput) ToGetApplicationLoadbalancerForwardingruleHttpRuleOutput() GetApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return o
}

func (o GetApplicationLoadbalancerForwardingruleHttpRuleOutput) ToGetApplicationLoadbalancerForwardingruleHttpRuleOutputWithContext(ctx context.Context) GetApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return o
}

// An array of items in the collection.The action is only performed if each and every condition is met; if no conditions are set, the rule will always be performed.
func (o GetApplicationLoadbalancerForwardingruleHttpRuleOutput) Conditions() GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerForwardingruleHttpRule) []GetApplicationLoadbalancerForwardingruleHttpRuleCondition {
		return v.Conditions
	}).(GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput)
}

// Valid only for STATIC actions.
func (o GetApplicationLoadbalancerForwardingruleHttpRuleOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerForwardingruleHttpRule) string { return v.ContentType }).(pulumi.StringOutput)
}

// Default is false; valid only for REDIRECT actions.
func (o GetApplicationLoadbalancerForwardingruleHttpRuleOutput) DropQuery() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerForwardingruleHttpRule) bool { return v.DropQuery }).(pulumi.BoolOutput)
}

// The location for redirecting; mandatory and valid only for REDIRECT actions.
func (o GetApplicationLoadbalancerForwardingruleHttpRuleOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerForwardingruleHttpRule) string { return v.Location }).(pulumi.StringOutput)
}

// Name of an existing application load balancer that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
func (o GetApplicationLoadbalancerForwardingruleHttpRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerForwardingruleHttpRule) string { return v.Name }).(pulumi.StringOutput)
}

// The response message of the request; mandatory for STATIC action.
func (o GetApplicationLoadbalancerForwardingruleHttpRuleOutput) ResponseMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerForwardingruleHttpRule) string { return v.ResponseMessage }).(pulumi.StringOutput)
}

// Valid only for REDIRECT and STATIC actions. For REDIRECT actions, default is 301 and possible values are 301, 302, 303, 307, and 308. For STATIC actions, default is 503 and valid range is 200 to 599.
func (o GetApplicationLoadbalancerForwardingruleHttpRuleOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerForwardingruleHttpRule) int { return v.StatusCode }).(pulumi.IntOutput)
}

// The UUID of the target group; mandatory for FORWARD action.
func (o GetApplicationLoadbalancerForwardingruleHttpRuleOutput) TargetGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerForwardingruleHttpRule) string { return v.TargetGroup }).(pulumi.StringOutput)
}

// Type of the Http Rule condition.
func (o GetApplicationLoadbalancerForwardingruleHttpRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerForwardingruleHttpRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadbalancerForwardingruleHttpRule)(nil)).Elem()
}

func (o GetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput) ToGetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput() GetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput {
	return o
}

func (o GetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput) ToGetApplicationLoadbalancerForwardingruleHttpRuleArrayOutputWithContext(ctx context.Context) GetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput {
	return o
}

func (o GetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput) Index(i pulumi.IntInput) GetApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationLoadbalancerForwardingruleHttpRule {
		return vs[0].([]GetApplicationLoadbalancerForwardingruleHttpRule)[vs[1].(int)]
	}).(GetApplicationLoadbalancerForwardingruleHttpRuleOutput)
}

type GetApplicationLoadbalancerForwardingruleHttpRuleCondition struct {
	// Matching rule for the HTTP rule condition attribute; mandatory for HEADER, PATH, QUERY, METHOD, HOST, and COOKIE types; must be null when type is SOURCE_IP.
	Condition string `pulumi:"condition"`
	// Must be null when type is PATH, METHOD, HOST, or SOURCE_IP. Key can only be set when type is COOKIES, HEADER, or QUERY.
	Key string `pulumi:"key"`
	// Specifies whether the condition is negated or not; the default is False.
	Negate bool `pulumi:"negate"`
	// Type of the Http Rule condition.
	Type string `pulumi:"type"`
	// Mandatory for conditions CONTAINS, EQUALS, MATCHES, STARTS_WITH, ENDS_WITH; must be null when condition is EXISTS; should be a valid CIDR if provided and if type is SOURCE_IP.
	Value string `pulumi:"value"`
}

// GetApplicationLoadbalancerForwardingruleHttpRuleConditionInput is an input type that accepts GetApplicationLoadbalancerForwardingruleHttpRuleConditionArgs and GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput values.
// You can construct a concrete instance of `GetApplicationLoadbalancerForwardingruleHttpRuleConditionInput` via:
//
//	GetApplicationLoadbalancerForwardingruleHttpRuleConditionArgs{...}
type GetApplicationLoadbalancerForwardingruleHttpRuleConditionInput interface {
	pulumi.Input

	ToGetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput() GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput
	ToGetApplicationLoadbalancerForwardingruleHttpRuleConditionOutputWithContext(context.Context) GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput
}

type GetApplicationLoadbalancerForwardingruleHttpRuleConditionArgs struct {
	// Matching rule for the HTTP rule condition attribute; mandatory for HEADER, PATH, QUERY, METHOD, HOST, and COOKIE types; must be null when type is SOURCE_IP.
	Condition pulumi.StringInput `pulumi:"condition"`
	// Must be null when type is PATH, METHOD, HOST, or SOURCE_IP. Key can only be set when type is COOKIES, HEADER, or QUERY.
	Key pulumi.StringInput `pulumi:"key"`
	// Specifies whether the condition is negated or not; the default is False.
	Negate pulumi.BoolInput `pulumi:"negate"`
	// Type of the Http Rule condition.
	Type pulumi.StringInput `pulumi:"type"`
	// Mandatory for conditions CONTAINS, EQUALS, MATCHES, STARTS_WITH, ENDS_WITH; must be null when condition is EXISTS; should be a valid CIDR if provided and if type is SOURCE_IP.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationLoadbalancerForwardingruleHttpRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadbalancerForwardingruleHttpRuleCondition)(nil)).Elem()
}

func (i GetApplicationLoadbalancerForwardingruleHttpRuleConditionArgs) ToGetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput() GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return i.ToGetApplicationLoadbalancerForwardingruleHttpRuleConditionOutputWithContext(context.Background())
}

func (i GetApplicationLoadbalancerForwardingruleHttpRuleConditionArgs) ToGetApplicationLoadbalancerForwardingruleHttpRuleConditionOutputWithContext(ctx context.Context) GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput)
}

// GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput is an input type that accepts GetApplicationLoadbalancerForwardingruleHttpRuleConditionArray and GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput values.
// You can construct a concrete instance of `GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput` via:
//
//	GetApplicationLoadbalancerForwardingruleHttpRuleConditionArray{ GetApplicationLoadbalancerForwardingruleHttpRuleConditionArgs{...} }
type GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput interface {
	pulumi.Input

	ToGetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput() GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput
	ToGetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutputWithContext(context.Context) GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput
}

type GetApplicationLoadbalancerForwardingruleHttpRuleConditionArray []GetApplicationLoadbalancerForwardingruleHttpRuleConditionInput

func (GetApplicationLoadbalancerForwardingruleHttpRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadbalancerForwardingruleHttpRuleCondition)(nil)).Elem()
}

func (i GetApplicationLoadbalancerForwardingruleHttpRuleConditionArray) ToGetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput() GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return i.ToGetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutputWithContext(context.Background())
}

func (i GetApplicationLoadbalancerForwardingruleHttpRuleConditionArray) ToGetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutputWithContext(ctx context.Context) GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput)
}

type GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationLoadbalancerForwardingruleHttpRuleCondition)(nil)).Elem()
}

func (o GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) ToGetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput() GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return o
}

func (o GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) ToGetApplicationLoadbalancerForwardingruleHttpRuleConditionOutputWithContext(ctx context.Context) GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return o
}

// Matching rule for the HTTP rule condition attribute; mandatory for HEADER, PATH, QUERY, METHOD, HOST, and COOKIE types; must be null when type is SOURCE_IP.
func (o GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerForwardingruleHttpRuleCondition) string { return v.Condition }).(pulumi.StringOutput)
}

// Must be null when type is PATH, METHOD, HOST, or SOURCE_IP. Key can only be set when type is COOKIES, HEADER, or QUERY.
func (o GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerForwardingruleHttpRuleCondition) string { return v.Key }).(pulumi.StringOutput)
}

// Specifies whether the condition is negated or not; the default is False.
func (o GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Negate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerForwardingruleHttpRuleCondition) bool { return v.Negate }).(pulumi.BoolOutput)
}

// Type of the Http Rule condition.
func (o GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerForwardingruleHttpRuleCondition) string { return v.Type }).(pulumi.StringOutput)
}

// Mandatory for conditions CONTAINS, EQUALS, MATCHES, STARTS_WITH, ENDS_WITH; must be null when condition is EXISTS; should be a valid CIDR if provided and if type is SOURCE_IP.
func (o GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationLoadbalancerForwardingruleHttpRuleCondition) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationLoadbalancerForwardingruleHttpRuleCondition)(nil)).Elem()
}

func (o GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput) ToGetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput() GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return o
}

func (o GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput) ToGetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutputWithContext(ctx context.Context) GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return o
}

func (o GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput) Index(i pulumi.IntInput) GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationLoadbalancerForwardingruleHttpRuleCondition {
		return vs[0].([]GetApplicationLoadbalancerForwardingruleHttpRuleCondition)[vs[1].(int)]
	}).(GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput)
}

type GetAutoCertificateProviderExternalAccountBinding struct {
	// The key ID of the external account binding
	KeyId string `pulumi:"keyId"`
}

// GetAutoCertificateProviderExternalAccountBindingInput is an input type that accepts GetAutoCertificateProviderExternalAccountBindingArgs and GetAutoCertificateProviderExternalAccountBindingOutput values.
// You can construct a concrete instance of `GetAutoCertificateProviderExternalAccountBindingInput` via:
//
//	GetAutoCertificateProviderExternalAccountBindingArgs{...}
type GetAutoCertificateProviderExternalAccountBindingInput interface {
	pulumi.Input

	ToGetAutoCertificateProviderExternalAccountBindingOutput() GetAutoCertificateProviderExternalAccountBindingOutput
	ToGetAutoCertificateProviderExternalAccountBindingOutputWithContext(context.Context) GetAutoCertificateProviderExternalAccountBindingOutput
}

type GetAutoCertificateProviderExternalAccountBindingArgs struct {
	// The key ID of the external account binding
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (GetAutoCertificateProviderExternalAccountBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoCertificateProviderExternalAccountBinding)(nil)).Elem()
}

func (i GetAutoCertificateProviderExternalAccountBindingArgs) ToGetAutoCertificateProviderExternalAccountBindingOutput() GetAutoCertificateProviderExternalAccountBindingOutput {
	return i.ToGetAutoCertificateProviderExternalAccountBindingOutputWithContext(context.Background())
}

func (i GetAutoCertificateProviderExternalAccountBindingArgs) ToGetAutoCertificateProviderExternalAccountBindingOutputWithContext(ctx context.Context) GetAutoCertificateProviderExternalAccountBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoCertificateProviderExternalAccountBindingOutput)
}

// GetAutoCertificateProviderExternalAccountBindingArrayInput is an input type that accepts GetAutoCertificateProviderExternalAccountBindingArray and GetAutoCertificateProviderExternalAccountBindingArrayOutput values.
// You can construct a concrete instance of `GetAutoCertificateProviderExternalAccountBindingArrayInput` via:
//
//	GetAutoCertificateProviderExternalAccountBindingArray{ GetAutoCertificateProviderExternalAccountBindingArgs{...} }
type GetAutoCertificateProviderExternalAccountBindingArrayInput interface {
	pulumi.Input

	ToGetAutoCertificateProviderExternalAccountBindingArrayOutput() GetAutoCertificateProviderExternalAccountBindingArrayOutput
	ToGetAutoCertificateProviderExternalAccountBindingArrayOutputWithContext(context.Context) GetAutoCertificateProviderExternalAccountBindingArrayOutput
}

type GetAutoCertificateProviderExternalAccountBindingArray []GetAutoCertificateProviderExternalAccountBindingInput

func (GetAutoCertificateProviderExternalAccountBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoCertificateProviderExternalAccountBinding)(nil)).Elem()
}

func (i GetAutoCertificateProviderExternalAccountBindingArray) ToGetAutoCertificateProviderExternalAccountBindingArrayOutput() GetAutoCertificateProviderExternalAccountBindingArrayOutput {
	return i.ToGetAutoCertificateProviderExternalAccountBindingArrayOutputWithContext(context.Background())
}

func (i GetAutoCertificateProviderExternalAccountBindingArray) ToGetAutoCertificateProviderExternalAccountBindingArrayOutputWithContext(ctx context.Context) GetAutoCertificateProviderExternalAccountBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoCertificateProviderExternalAccountBindingArrayOutput)
}

type GetAutoCertificateProviderExternalAccountBindingOutput struct{ *pulumi.OutputState }

func (GetAutoCertificateProviderExternalAccountBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoCertificateProviderExternalAccountBinding)(nil)).Elem()
}

func (o GetAutoCertificateProviderExternalAccountBindingOutput) ToGetAutoCertificateProviderExternalAccountBindingOutput() GetAutoCertificateProviderExternalAccountBindingOutput {
	return o
}

func (o GetAutoCertificateProviderExternalAccountBindingOutput) ToGetAutoCertificateProviderExternalAccountBindingOutputWithContext(ctx context.Context) GetAutoCertificateProviderExternalAccountBindingOutput {
	return o
}

// The key ID of the external account binding
func (o GetAutoCertificateProviderExternalAccountBindingOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoCertificateProviderExternalAccountBinding) string { return v.KeyId }).(pulumi.StringOutput)
}

type GetAutoCertificateProviderExternalAccountBindingArrayOutput struct{ *pulumi.OutputState }

func (GetAutoCertificateProviderExternalAccountBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoCertificateProviderExternalAccountBinding)(nil)).Elem()
}

func (o GetAutoCertificateProviderExternalAccountBindingArrayOutput) ToGetAutoCertificateProviderExternalAccountBindingArrayOutput() GetAutoCertificateProviderExternalAccountBindingArrayOutput {
	return o
}

func (o GetAutoCertificateProviderExternalAccountBindingArrayOutput) ToGetAutoCertificateProviderExternalAccountBindingArrayOutputWithContext(ctx context.Context) GetAutoCertificateProviderExternalAccountBindingArrayOutput {
	return o
}

func (o GetAutoCertificateProviderExternalAccountBindingArrayOutput) Index(i pulumi.IntInput) GetAutoCertificateProviderExternalAccountBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoCertificateProviderExternalAccountBinding {
		return vs[0].([]GetAutoCertificateProviderExternalAccountBinding)[vs[1].(int)]
	}).(GetAutoCertificateProviderExternalAccountBindingOutput)
}

type GetAutoscalingGroupPolicy struct {
	// The Metric that should trigger Scaling Actions. The values of the Metric are checked in fixed intervals.
	Metric string `pulumi:"metric"`
	// Defines the range of time from which samples will be aggregated. Default is 120s.
	// *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
	Range string `pulumi:"range"`
	// Specifies the Action to take when the `scaleInThreshold`
	ScaleInActions []GetAutoscalingGroupPolicyScaleInAction `pulumi:"scaleInActions"`
	// A lower threshold on the value of `metric`. Will be used with `less than` (<) operator. Exceeding this will start a Scale-In Action as specified by the `scaleInAction` property. The value must have a higher minimum delta to the `scaleOutThreshold` depending on the `metric` to avoid competitive actions at the same time.
	ScaleInThreshold int `pulumi:"scaleInThreshold"`
	// Specifies the action to take when the `scaleOutThreshold` is exceeded. Hereby, scaling out is always about adding new VMs to this autoscaling group
	ScaleOutActions []GetAutoscalingGroupPolicyScaleOutAction `pulumi:"scaleOutActions"`
	// The upper threshold for the value of the `metric`. Used with the `greater than` (>) operator. A scale-out action is triggered when this value is exceeded, specified by the `scaleOutAction` property. The value must have a lower minimum delta to the `scaleInThreshold`, depending on the metric, to avoid competing for actions simultaneously. If `properties.policy.unit=TOTAL`, a value >= 40 must be chosen.
	ScaleOutThreshold int `pulumi:"scaleOutThreshold"`
	// Specifies the Action to take when the `scaleInThreshold` is exceeded. Hereby, scaling in is always about removing VMs that are currently associated with this Autoscaling Group.
	Unit string `pulumi:"unit"`
}

// GetAutoscalingGroupPolicyInput is an input type that accepts GetAutoscalingGroupPolicyArgs and GetAutoscalingGroupPolicyOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupPolicyInput` via:
//
//	GetAutoscalingGroupPolicyArgs{...}
type GetAutoscalingGroupPolicyInput interface {
	pulumi.Input

	ToGetAutoscalingGroupPolicyOutput() GetAutoscalingGroupPolicyOutput
	ToGetAutoscalingGroupPolicyOutputWithContext(context.Context) GetAutoscalingGroupPolicyOutput
}

type GetAutoscalingGroupPolicyArgs struct {
	// The Metric that should trigger Scaling Actions. The values of the Metric are checked in fixed intervals.
	Metric pulumi.StringInput `pulumi:"metric"`
	// Defines the range of time from which samples will be aggregated. Default is 120s.
	// *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
	Range pulumi.StringInput `pulumi:"range"`
	// Specifies the Action to take when the `scaleInThreshold`
	ScaleInActions GetAutoscalingGroupPolicyScaleInActionArrayInput `pulumi:"scaleInActions"`
	// A lower threshold on the value of `metric`. Will be used with `less than` (<) operator. Exceeding this will start a Scale-In Action as specified by the `scaleInAction` property. The value must have a higher minimum delta to the `scaleOutThreshold` depending on the `metric` to avoid competitive actions at the same time.
	ScaleInThreshold pulumi.IntInput `pulumi:"scaleInThreshold"`
	// Specifies the action to take when the `scaleOutThreshold` is exceeded. Hereby, scaling out is always about adding new VMs to this autoscaling group
	ScaleOutActions GetAutoscalingGroupPolicyScaleOutActionArrayInput `pulumi:"scaleOutActions"`
	// The upper threshold for the value of the `metric`. Used with the `greater than` (>) operator. A scale-out action is triggered when this value is exceeded, specified by the `scaleOutAction` property. The value must have a lower minimum delta to the `scaleInThreshold`, depending on the metric, to avoid competing for actions simultaneously. If `properties.policy.unit=TOTAL`, a value >= 40 must be chosen.
	ScaleOutThreshold pulumi.IntInput `pulumi:"scaleOutThreshold"`
	// Specifies the Action to take when the `scaleInThreshold` is exceeded. Hereby, scaling in is always about removing VMs that are currently associated with this Autoscaling Group.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (GetAutoscalingGroupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupPolicy)(nil)).Elem()
}

func (i GetAutoscalingGroupPolicyArgs) ToGetAutoscalingGroupPolicyOutput() GetAutoscalingGroupPolicyOutput {
	return i.ToGetAutoscalingGroupPolicyOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupPolicyArgs) ToGetAutoscalingGroupPolicyOutputWithContext(ctx context.Context) GetAutoscalingGroupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupPolicyOutput)
}

// GetAutoscalingGroupPolicyArrayInput is an input type that accepts GetAutoscalingGroupPolicyArray and GetAutoscalingGroupPolicyArrayOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupPolicyArrayInput` via:
//
//	GetAutoscalingGroupPolicyArray{ GetAutoscalingGroupPolicyArgs{...} }
type GetAutoscalingGroupPolicyArrayInput interface {
	pulumi.Input

	ToGetAutoscalingGroupPolicyArrayOutput() GetAutoscalingGroupPolicyArrayOutput
	ToGetAutoscalingGroupPolicyArrayOutputWithContext(context.Context) GetAutoscalingGroupPolicyArrayOutput
}

type GetAutoscalingGroupPolicyArray []GetAutoscalingGroupPolicyInput

func (GetAutoscalingGroupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupPolicy)(nil)).Elem()
}

func (i GetAutoscalingGroupPolicyArray) ToGetAutoscalingGroupPolicyArrayOutput() GetAutoscalingGroupPolicyArrayOutput {
	return i.ToGetAutoscalingGroupPolicyArrayOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupPolicyArray) ToGetAutoscalingGroupPolicyArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupPolicyArrayOutput)
}

type GetAutoscalingGroupPolicyOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupPolicy)(nil)).Elem()
}

func (o GetAutoscalingGroupPolicyOutput) ToGetAutoscalingGroupPolicyOutput() GetAutoscalingGroupPolicyOutput {
	return o
}

func (o GetAutoscalingGroupPolicyOutput) ToGetAutoscalingGroupPolicyOutputWithContext(ctx context.Context) GetAutoscalingGroupPolicyOutput {
	return o
}

// The Metric that should trigger Scaling Actions. The values of the Metric are checked in fixed intervals.
func (o GetAutoscalingGroupPolicyOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicy) string { return v.Metric }).(pulumi.StringOutput)
}

// Defines the range of time from which samples will be aggregated. Default is 120s.
// *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
func (o GetAutoscalingGroupPolicyOutput) Range() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicy) string { return v.Range }).(pulumi.StringOutput)
}

// Specifies the Action to take when the `scaleInThreshold`
func (o GetAutoscalingGroupPolicyOutput) ScaleInActions() GetAutoscalingGroupPolicyScaleInActionArrayOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicy) []GetAutoscalingGroupPolicyScaleInAction { return v.ScaleInActions }).(GetAutoscalingGroupPolicyScaleInActionArrayOutput)
}

// A lower threshold on the value of `metric`. Will be used with `less than` (<) operator. Exceeding this will start a Scale-In Action as specified by the `scaleInAction` property. The value must have a higher minimum delta to the `scaleOutThreshold` depending on the `metric` to avoid competitive actions at the same time.
func (o GetAutoscalingGroupPolicyOutput) ScaleInThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicy) int { return v.ScaleInThreshold }).(pulumi.IntOutput)
}

// Specifies the action to take when the `scaleOutThreshold` is exceeded. Hereby, scaling out is always about adding new VMs to this autoscaling group
func (o GetAutoscalingGroupPolicyOutput) ScaleOutActions() GetAutoscalingGroupPolicyScaleOutActionArrayOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicy) []GetAutoscalingGroupPolicyScaleOutAction { return v.ScaleOutActions }).(GetAutoscalingGroupPolicyScaleOutActionArrayOutput)
}

// The upper threshold for the value of the `metric`. Used with the `greater than` (>) operator. A scale-out action is triggered when this value is exceeded, specified by the `scaleOutAction` property. The value must have a lower minimum delta to the `scaleInThreshold`, depending on the metric, to avoid competing for actions simultaneously. If `properties.policy.unit=TOTAL`, a value >= 40 must be chosen.
func (o GetAutoscalingGroupPolicyOutput) ScaleOutThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicy) int { return v.ScaleOutThreshold }).(pulumi.IntOutput)
}

// Specifies the Action to take when the `scaleInThreshold` is exceeded. Hereby, scaling in is always about removing VMs that are currently associated with this Autoscaling Group.
func (o GetAutoscalingGroupPolicyOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicy) string { return v.Unit }).(pulumi.StringOutput)
}

type GetAutoscalingGroupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupPolicy)(nil)).Elem()
}

func (o GetAutoscalingGroupPolicyArrayOutput) ToGetAutoscalingGroupPolicyArrayOutput() GetAutoscalingGroupPolicyArrayOutput {
	return o
}

func (o GetAutoscalingGroupPolicyArrayOutput) ToGetAutoscalingGroupPolicyArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupPolicyArrayOutput {
	return o
}

func (o GetAutoscalingGroupPolicyArrayOutput) Index(i pulumi.IntInput) GetAutoscalingGroupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoscalingGroupPolicy {
		return vs[0].([]GetAutoscalingGroupPolicy)[vs[1].(int)]
	}).(GetAutoscalingGroupPolicyOutput)
}

type GetAutoscalingGroupPolicyScaleInAction struct {
	// When `amountType == ABSOLUTE`, this is the number of VMs added or removed in one step. When `amountType == PERCENTAGE`, this is a percentage value, which will be applied to the Autoscaling Group's current `targetReplicaCount` in order to derive the number of VMs that will be added or removed in one step. There will always be at least one VM added or removed.
	Amount int `pulumi:"amount"`
	// The type for the given amount. Possible values are: [ABSOLUTE, PERCENTAGE].
	AmountType string `pulumi:"amountType"`
	// Minimum time to pass after this Scaling Action has started, until the next Scaling Action will be started. Additionally, if a Scaling Action is currently in progress, no second Scaling Action will be started for the same Autoscaling Group. Instead, the Metric will be re-evaluated after the current Scaling Action completed (either successful or with failures).
	// *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
	CooldownPeriod string `pulumi:"cooldownPeriod"`
	// If set to 'true', when deleting an replica during scale in, any attached volume will also be deleted. When set to 'false', all volumes remain in the datacenter and must be deleted manually. Note that every scale-out creates new volumes. When they are not deleted, they will eventually use all of your contracts resource limits. At this point, scaling out would not be possible anymore.
	DeleteVolumes bool `pulumi:"deleteVolumes"`
	// The type of the termination policy for the autoscaling group so that a specific pattern is followed for Scaling-In instances. Default termination policy is OLDEST_SERVER_FIRST.
	TerminationPolicyType string `pulumi:"terminationPolicyType"`
}

// GetAutoscalingGroupPolicyScaleInActionInput is an input type that accepts GetAutoscalingGroupPolicyScaleInActionArgs and GetAutoscalingGroupPolicyScaleInActionOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupPolicyScaleInActionInput` via:
//
//	GetAutoscalingGroupPolicyScaleInActionArgs{...}
type GetAutoscalingGroupPolicyScaleInActionInput interface {
	pulumi.Input

	ToGetAutoscalingGroupPolicyScaleInActionOutput() GetAutoscalingGroupPolicyScaleInActionOutput
	ToGetAutoscalingGroupPolicyScaleInActionOutputWithContext(context.Context) GetAutoscalingGroupPolicyScaleInActionOutput
}

type GetAutoscalingGroupPolicyScaleInActionArgs struct {
	// When `amountType == ABSOLUTE`, this is the number of VMs added or removed in one step. When `amountType == PERCENTAGE`, this is a percentage value, which will be applied to the Autoscaling Group's current `targetReplicaCount` in order to derive the number of VMs that will be added or removed in one step. There will always be at least one VM added or removed.
	Amount pulumi.IntInput `pulumi:"amount"`
	// The type for the given amount. Possible values are: [ABSOLUTE, PERCENTAGE].
	AmountType pulumi.StringInput `pulumi:"amountType"`
	// Minimum time to pass after this Scaling Action has started, until the next Scaling Action will be started. Additionally, if a Scaling Action is currently in progress, no second Scaling Action will be started for the same Autoscaling Group. Instead, the Metric will be re-evaluated after the current Scaling Action completed (either successful or with failures).
	// *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
	CooldownPeriod pulumi.StringInput `pulumi:"cooldownPeriod"`
	// If set to 'true', when deleting an replica during scale in, any attached volume will also be deleted. When set to 'false', all volumes remain in the datacenter and must be deleted manually. Note that every scale-out creates new volumes. When they are not deleted, they will eventually use all of your contracts resource limits. At this point, scaling out would not be possible anymore.
	DeleteVolumes pulumi.BoolInput `pulumi:"deleteVolumes"`
	// The type of the termination policy for the autoscaling group so that a specific pattern is followed for Scaling-In instances. Default termination policy is OLDEST_SERVER_FIRST.
	TerminationPolicyType pulumi.StringInput `pulumi:"terminationPolicyType"`
}

func (GetAutoscalingGroupPolicyScaleInActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupPolicyScaleInAction)(nil)).Elem()
}

func (i GetAutoscalingGroupPolicyScaleInActionArgs) ToGetAutoscalingGroupPolicyScaleInActionOutput() GetAutoscalingGroupPolicyScaleInActionOutput {
	return i.ToGetAutoscalingGroupPolicyScaleInActionOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupPolicyScaleInActionArgs) ToGetAutoscalingGroupPolicyScaleInActionOutputWithContext(ctx context.Context) GetAutoscalingGroupPolicyScaleInActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupPolicyScaleInActionOutput)
}

// GetAutoscalingGroupPolicyScaleInActionArrayInput is an input type that accepts GetAutoscalingGroupPolicyScaleInActionArray and GetAutoscalingGroupPolicyScaleInActionArrayOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupPolicyScaleInActionArrayInput` via:
//
//	GetAutoscalingGroupPolicyScaleInActionArray{ GetAutoscalingGroupPolicyScaleInActionArgs{...} }
type GetAutoscalingGroupPolicyScaleInActionArrayInput interface {
	pulumi.Input

	ToGetAutoscalingGroupPolicyScaleInActionArrayOutput() GetAutoscalingGroupPolicyScaleInActionArrayOutput
	ToGetAutoscalingGroupPolicyScaleInActionArrayOutputWithContext(context.Context) GetAutoscalingGroupPolicyScaleInActionArrayOutput
}

type GetAutoscalingGroupPolicyScaleInActionArray []GetAutoscalingGroupPolicyScaleInActionInput

func (GetAutoscalingGroupPolicyScaleInActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupPolicyScaleInAction)(nil)).Elem()
}

func (i GetAutoscalingGroupPolicyScaleInActionArray) ToGetAutoscalingGroupPolicyScaleInActionArrayOutput() GetAutoscalingGroupPolicyScaleInActionArrayOutput {
	return i.ToGetAutoscalingGroupPolicyScaleInActionArrayOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupPolicyScaleInActionArray) ToGetAutoscalingGroupPolicyScaleInActionArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupPolicyScaleInActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupPolicyScaleInActionArrayOutput)
}

type GetAutoscalingGroupPolicyScaleInActionOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupPolicyScaleInActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupPolicyScaleInAction)(nil)).Elem()
}

func (o GetAutoscalingGroupPolicyScaleInActionOutput) ToGetAutoscalingGroupPolicyScaleInActionOutput() GetAutoscalingGroupPolicyScaleInActionOutput {
	return o
}

func (o GetAutoscalingGroupPolicyScaleInActionOutput) ToGetAutoscalingGroupPolicyScaleInActionOutputWithContext(ctx context.Context) GetAutoscalingGroupPolicyScaleInActionOutput {
	return o
}

// When `amountType == ABSOLUTE`, this is the number of VMs added or removed in one step. When `amountType == PERCENTAGE`, this is a percentage value, which will be applied to the Autoscaling Group's current `targetReplicaCount` in order to derive the number of VMs that will be added or removed in one step. There will always be at least one VM added or removed.
func (o GetAutoscalingGroupPolicyScaleInActionOutput) Amount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicyScaleInAction) int { return v.Amount }).(pulumi.IntOutput)
}

// The type for the given amount. Possible values are: [ABSOLUTE, PERCENTAGE].
func (o GetAutoscalingGroupPolicyScaleInActionOutput) AmountType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicyScaleInAction) string { return v.AmountType }).(pulumi.StringOutput)
}

// Minimum time to pass after this Scaling Action has started, until the next Scaling Action will be started. Additionally, if a Scaling Action is currently in progress, no second Scaling Action will be started for the same Autoscaling Group. Instead, the Metric will be re-evaluated after the current Scaling Action completed (either successful or with failures).
// *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
func (o GetAutoscalingGroupPolicyScaleInActionOutput) CooldownPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicyScaleInAction) string { return v.CooldownPeriod }).(pulumi.StringOutput)
}

// If set to 'true', when deleting an replica during scale in, any attached volume will also be deleted. When set to 'false', all volumes remain in the datacenter and must be deleted manually. Note that every scale-out creates new volumes. When they are not deleted, they will eventually use all of your contracts resource limits. At this point, scaling out would not be possible anymore.
func (o GetAutoscalingGroupPolicyScaleInActionOutput) DeleteVolumes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicyScaleInAction) bool { return v.DeleteVolumes }).(pulumi.BoolOutput)
}

// The type of the termination policy for the autoscaling group so that a specific pattern is followed for Scaling-In instances. Default termination policy is OLDEST_SERVER_FIRST.
func (o GetAutoscalingGroupPolicyScaleInActionOutput) TerminationPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicyScaleInAction) string { return v.TerminationPolicyType }).(pulumi.StringOutput)
}

type GetAutoscalingGroupPolicyScaleInActionArrayOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupPolicyScaleInActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupPolicyScaleInAction)(nil)).Elem()
}

func (o GetAutoscalingGroupPolicyScaleInActionArrayOutput) ToGetAutoscalingGroupPolicyScaleInActionArrayOutput() GetAutoscalingGroupPolicyScaleInActionArrayOutput {
	return o
}

func (o GetAutoscalingGroupPolicyScaleInActionArrayOutput) ToGetAutoscalingGroupPolicyScaleInActionArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupPolicyScaleInActionArrayOutput {
	return o
}

func (o GetAutoscalingGroupPolicyScaleInActionArrayOutput) Index(i pulumi.IntInput) GetAutoscalingGroupPolicyScaleInActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoscalingGroupPolicyScaleInAction {
		return vs[0].([]GetAutoscalingGroupPolicyScaleInAction)[vs[1].(int)]
	}).(GetAutoscalingGroupPolicyScaleInActionOutput)
}

type GetAutoscalingGroupPolicyScaleOutAction struct {
	// When `amountType == ABSOLUTE`, this is the number of VMs added or removed in one step. When `amountType == PERCENTAGE`, this is a percentage value, which will be applied to the Autoscaling Group's current `targetReplicaCount` in order to derive the number of VMs that will be added or removed in one step. There will always be at least one VM added or removed.
	Amount int `pulumi:"amount"`
	// The type for the given amount. Possible values are: [ABSOLUTE, PERCENTAGE].
	AmountType string `pulumi:"amountType"`
	// Minimum time to pass after this Scaling Action has started, until the next Scaling Action will be started. Additionally, if a Scaling Action is currently in progress, no second Scaling Action will be started for the same Autoscaling Group. Instead, the Metric will be re-evaluated after the current Scaling Action completed (either successful or with failures).
	// *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
	CooldownPeriod string `pulumi:"cooldownPeriod"`
}

// GetAutoscalingGroupPolicyScaleOutActionInput is an input type that accepts GetAutoscalingGroupPolicyScaleOutActionArgs and GetAutoscalingGroupPolicyScaleOutActionOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupPolicyScaleOutActionInput` via:
//
//	GetAutoscalingGroupPolicyScaleOutActionArgs{...}
type GetAutoscalingGroupPolicyScaleOutActionInput interface {
	pulumi.Input

	ToGetAutoscalingGroupPolicyScaleOutActionOutput() GetAutoscalingGroupPolicyScaleOutActionOutput
	ToGetAutoscalingGroupPolicyScaleOutActionOutputWithContext(context.Context) GetAutoscalingGroupPolicyScaleOutActionOutput
}

type GetAutoscalingGroupPolicyScaleOutActionArgs struct {
	// When `amountType == ABSOLUTE`, this is the number of VMs added or removed in one step. When `amountType == PERCENTAGE`, this is a percentage value, which will be applied to the Autoscaling Group's current `targetReplicaCount` in order to derive the number of VMs that will be added or removed in one step. There will always be at least one VM added or removed.
	Amount pulumi.IntInput `pulumi:"amount"`
	// The type for the given amount. Possible values are: [ABSOLUTE, PERCENTAGE].
	AmountType pulumi.StringInput `pulumi:"amountType"`
	// Minimum time to pass after this Scaling Action has started, until the next Scaling Action will be started. Additionally, if a Scaling Action is currently in progress, no second Scaling Action will be started for the same Autoscaling Group. Instead, the Metric will be re-evaluated after the current Scaling Action completed (either successful or with failures).
	// *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
	CooldownPeriod pulumi.StringInput `pulumi:"cooldownPeriod"`
}

func (GetAutoscalingGroupPolicyScaleOutActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupPolicyScaleOutAction)(nil)).Elem()
}

func (i GetAutoscalingGroupPolicyScaleOutActionArgs) ToGetAutoscalingGroupPolicyScaleOutActionOutput() GetAutoscalingGroupPolicyScaleOutActionOutput {
	return i.ToGetAutoscalingGroupPolicyScaleOutActionOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupPolicyScaleOutActionArgs) ToGetAutoscalingGroupPolicyScaleOutActionOutputWithContext(ctx context.Context) GetAutoscalingGroupPolicyScaleOutActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupPolicyScaleOutActionOutput)
}

// GetAutoscalingGroupPolicyScaleOutActionArrayInput is an input type that accepts GetAutoscalingGroupPolicyScaleOutActionArray and GetAutoscalingGroupPolicyScaleOutActionArrayOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupPolicyScaleOutActionArrayInput` via:
//
//	GetAutoscalingGroupPolicyScaleOutActionArray{ GetAutoscalingGroupPolicyScaleOutActionArgs{...} }
type GetAutoscalingGroupPolicyScaleOutActionArrayInput interface {
	pulumi.Input

	ToGetAutoscalingGroupPolicyScaleOutActionArrayOutput() GetAutoscalingGroupPolicyScaleOutActionArrayOutput
	ToGetAutoscalingGroupPolicyScaleOutActionArrayOutputWithContext(context.Context) GetAutoscalingGroupPolicyScaleOutActionArrayOutput
}

type GetAutoscalingGroupPolicyScaleOutActionArray []GetAutoscalingGroupPolicyScaleOutActionInput

func (GetAutoscalingGroupPolicyScaleOutActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupPolicyScaleOutAction)(nil)).Elem()
}

func (i GetAutoscalingGroupPolicyScaleOutActionArray) ToGetAutoscalingGroupPolicyScaleOutActionArrayOutput() GetAutoscalingGroupPolicyScaleOutActionArrayOutput {
	return i.ToGetAutoscalingGroupPolicyScaleOutActionArrayOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupPolicyScaleOutActionArray) ToGetAutoscalingGroupPolicyScaleOutActionArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupPolicyScaleOutActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupPolicyScaleOutActionArrayOutput)
}

type GetAutoscalingGroupPolicyScaleOutActionOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupPolicyScaleOutActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupPolicyScaleOutAction)(nil)).Elem()
}

func (o GetAutoscalingGroupPolicyScaleOutActionOutput) ToGetAutoscalingGroupPolicyScaleOutActionOutput() GetAutoscalingGroupPolicyScaleOutActionOutput {
	return o
}

func (o GetAutoscalingGroupPolicyScaleOutActionOutput) ToGetAutoscalingGroupPolicyScaleOutActionOutputWithContext(ctx context.Context) GetAutoscalingGroupPolicyScaleOutActionOutput {
	return o
}

// When `amountType == ABSOLUTE`, this is the number of VMs added or removed in one step. When `amountType == PERCENTAGE`, this is a percentage value, which will be applied to the Autoscaling Group's current `targetReplicaCount` in order to derive the number of VMs that will be added or removed in one step. There will always be at least one VM added or removed.
func (o GetAutoscalingGroupPolicyScaleOutActionOutput) Amount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicyScaleOutAction) int { return v.Amount }).(pulumi.IntOutput)
}

// The type for the given amount. Possible values are: [ABSOLUTE, PERCENTAGE].
func (o GetAutoscalingGroupPolicyScaleOutActionOutput) AmountType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicyScaleOutAction) string { return v.AmountType }).(pulumi.StringOutput)
}

// Minimum time to pass after this Scaling Action has started, until the next Scaling Action will be started. Additionally, if a Scaling Action is currently in progress, no second Scaling Action will be started for the same Autoscaling Group. Instead, the Metric will be re-evaluated after the current Scaling Action completed (either successful or with failures).
// *Note that when you set it to values like 5m the API will automatically transform it in PT5M, so the plan will show you a diff in state that should be ignored.*
func (o GetAutoscalingGroupPolicyScaleOutActionOutput) CooldownPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupPolicyScaleOutAction) string { return v.CooldownPeriod }).(pulumi.StringOutput)
}

type GetAutoscalingGroupPolicyScaleOutActionArrayOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupPolicyScaleOutActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupPolicyScaleOutAction)(nil)).Elem()
}

func (o GetAutoscalingGroupPolicyScaleOutActionArrayOutput) ToGetAutoscalingGroupPolicyScaleOutActionArrayOutput() GetAutoscalingGroupPolicyScaleOutActionArrayOutput {
	return o
}

func (o GetAutoscalingGroupPolicyScaleOutActionArrayOutput) ToGetAutoscalingGroupPolicyScaleOutActionArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupPolicyScaleOutActionArrayOutput {
	return o
}

func (o GetAutoscalingGroupPolicyScaleOutActionArrayOutput) Index(i pulumi.IntInput) GetAutoscalingGroupPolicyScaleOutActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoscalingGroupPolicyScaleOutAction {
		return vs[0].([]GetAutoscalingGroupPolicyScaleOutAction)[vs[1].(int)]
	}).(GetAutoscalingGroupPolicyScaleOutActionOutput)
}

type GetAutoscalingGroupReplicaConfiguration struct {
	// The zone where the VMs are created using this configuration.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The total number of cores for the VMs.
	Cores int `pulumi:"cores"`
	// The zone where the VMs are created using this configuration.
	CpuFamily string `pulumi:"cpuFamily"`
	// List of NICs associated with this Replica.
	Nics []GetAutoscalingGroupReplicaConfigurationNic `pulumi:"nics"`
	// The amount of memory for the VMs in MB, e.g. 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB.
	Ram int `pulumi:"ram"`
	// List of volumes associated with this Replica. Only a single volume is currently supported.
	Volumes []GetAutoscalingGroupReplicaConfigurationVolume `pulumi:"volumes"`
}

// GetAutoscalingGroupReplicaConfigurationInput is an input type that accepts GetAutoscalingGroupReplicaConfigurationArgs and GetAutoscalingGroupReplicaConfigurationOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupReplicaConfigurationInput` via:
//
//	GetAutoscalingGroupReplicaConfigurationArgs{...}
type GetAutoscalingGroupReplicaConfigurationInput interface {
	pulumi.Input

	ToGetAutoscalingGroupReplicaConfigurationOutput() GetAutoscalingGroupReplicaConfigurationOutput
	ToGetAutoscalingGroupReplicaConfigurationOutputWithContext(context.Context) GetAutoscalingGroupReplicaConfigurationOutput
}

type GetAutoscalingGroupReplicaConfigurationArgs struct {
	// The zone where the VMs are created using this configuration.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// The total number of cores for the VMs.
	Cores pulumi.IntInput `pulumi:"cores"`
	// The zone where the VMs are created using this configuration.
	CpuFamily pulumi.StringInput `pulumi:"cpuFamily"`
	// List of NICs associated with this Replica.
	Nics GetAutoscalingGroupReplicaConfigurationNicArrayInput `pulumi:"nics"`
	// The amount of memory for the VMs in MB, e.g. 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB.
	Ram pulumi.IntInput `pulumi:"ram"`
	// List of volumes associated with this Replica. Only a single volume is currently supported.
	Volumes GetAutoscalingGroupReplicaConfigurationVolumeArrayInput `pulumi:"volumes"`
}

func (GetAutoscalingGroupReplicaConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupReplicaConfiguration)(nil)).Elem()
}

func (i GetAutoscalingGroupReplicaConfigurationArgs) ToGetAutoscalingGroupReplicaConfigurationOutput() GetAutoscalingGroupReplicaConfigurationOutput {
	return i.ToGetAutoscalingGroupReplicaConfigurationOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupReplicaConfigurationArgs) ToGetAutoscalingGroupReplicaConfigurationOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupReplicaConfigurationOutput)
}

// GetAutoscalingGroupReplicaConfigurationArrayInput is an input type that accepts GetAutoscalingGroupReplicaConfigurationArray and GetAutoscalingGroupReplicaConfigurationArrayOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupReplicaConfigurationArrayInput` via:
//
//	GetAutoscalingGroupReplicaConfigurationArray{ GetAutoscalingGroupReplicaConfigurationArgs{...} }
type GetAutoscalingGroupReplicaConfigurationArrayInput interface {
	pulumi.Input

	ToGetAutoscalingGroupReplicaConfigurationArrayOutput() GetAutoscalingGroupReplicaConfigurationArrayOutput
	ToGetAutoscalingGroupReplicaConfigurationArrayOutputWithContext(context.Context) GetAutoscalingGroupReplicaConfigurationArrayOutput
}

type GetAutoscalingGroupReplicaConfigurationArray []GetAutoscalingGroupReplicaConfigurationInput

func (GetAutoscalingGroupReplicaConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupReplicaConfiguration)(nil)).Elem()
}

func (i GetAutoscalingGroupReplicaConfigurationArray) ToGetAutoscalingGroupReplicaConfigurationArrayOutput() GetAutoscalingGroupReplicaConfigurationArrayOutput {
	return i.ToGetAutoscalingGroupReplicaConfigurationArrayOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupReplicaConfigurationArray) ToGetAutoscalingGroupReplicaConfigurationArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupReplicaConfigurationArrayOutput)
}

type GetAutoscalingGroupReplicaConfigurationOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupReplicaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupReplicaConfiguration)(nil)).Elem()
}

func (o GetAutoscalingGroupReplicaConfigurationOutput) ToGetAutoscalingGroupReplicaConfigurationOutput() GetAutoscalingGroupReplicaConfigurationOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationOutput) ToGetAutoscalingGroupReplicaConfigurationOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationOutput {
	return o
}

// The zone where the VMs are created using this configuration.
func (o GetAutoscalingGroupReplicaConfigurationOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfiguration) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The total number of cores for the VMs.
func (o GetAutoscalingGroupReplicaConfigurationOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfiguration) int { return v.Cores }).(pulumi.IntOutput)
}

// The zone where the VMs are created using this configuration.
func (o GetAutoscalingGroupReplicaConfigurationOutput) CpuFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfiguration) string { return v.CpuFamily }).(pulumi.StringOutput)
}

// List of NICs associated with this Replica.
func (o GetAutoscalingGroupReplicaConfigurationOutput) Nics() GetAutoscalingGroupReplicaConfigurationNicArrayOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfiguration) []GetAutoscalingGroupReplicaConfigurationNic {
		return v.Nics
	}).(GetAutoscalingGroupReplicaConfigurationNicArrayOutput)
}

// The amount of memory for the VMs in MB, e.g. 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB.
func (o GetAutoscalingGroupReplicaConfigurationOutput) Ram() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfiguration) int { return v.Ram }).(pulumi.IntOutput)
}

// List of volumes associated with this Replica. Only a single volume is currently supported.
func (o GetAutoscalingGroupReplicaConfigurationOutput) Volumes() GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfiguration) []GetAutoscalingGroupReplicaConfigurationVolume {
		return v.Volumes
	}).(GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput)
}

type GetAutoscalingGroupReplicaConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupReplicaConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupReplicaConfiguration)(nil)).Elem()
}

func (o GetAutoscalingGroupReplicaConfigurationArrayOutput) ToGetAutoscalingGroupReplicaConfigurationArrayOutput() GetAutoscalingGroupReplicaConfigurationArrayOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationArrayOutput) ToGetAutoscalingGroupReplicaConfigurationArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationArrayOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationArrayOutput) Index(i pulumi.IntInput) GetAutoscalingGroupReplicaConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoscalingGroupReplicaConfiguration {
		return vs[0].([]GetAutoscalingGroupReplicaConfiguration)[vs[1].(int)]
	}).(GetAutoscalingGroupReplicaConfigurationOutput)
}

type GetAutoscalingGroupReplicaConfigurationNic struct {
	// Dhcp flag for this replica Nic. This is an optional attribute with default value of 'true' if not given in the request payload or given as null.
	Dhcp bool `pulumi:"dhcp"`
	// Activate or deactivate the firewall. By default, an active firewall without any defined rules will block all incoming network traffic except for the firewall rules that explicitly allows certain protocols, IP addresses and ports.
	FirewallActive bool `pulumi:"firewallActive"`
	// List of all firewall rules for the specified NIC.
	FirewallRules []GetAutoscalingGroupReplicaConfigurationNicFirewallRule `pulumi:"firewallRules"`
	// The type of firewall rules that will be allowed on the NIC. If not specified, the default INGRESS value is used.
	FirewallType string `pulumi:"firewallType"`
	// Flow log configuration for the NIC. By default, the flow log is inactive. If you want to activate the flow log, you must specify the target resource and the type of traffic to log.
	FlowLogs []GetAutoscalingGroupReplicaConfigurationNicFlowLog `pulumi:"flowLogs"`
	// Lan ID for this replica Nic.
	Lan int `pulumi:"lan"`
	// Name of an existing Autoscaling Group that you want to search for.
	//
	// Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
	Name string `pulumi:"name"`
	// In order to link VM to ALB, target group must be provided.
	TargetGroups []GetAutoscalingGroupReplicaConfigurationNicTargetGroup `pulumi:"targetGroups"`
}

// GetAutoscalingGroupReplicaConfigurationNicInput is an input type that accepts GetAutoscalingGroupReplicaConfigurationNicArgs and GetAutoscalingGroupReplicaConfigurationNicOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupReplicaConfigurationNicInput` via:
//
//	GetAutoscalingGroupReplicaConfigurationNicArgs{...}
type GetAutoscalingGroupReplicaConfigurationNicInput interface {
	pulumi.Input

	ToGetAutoscalingGroupReplicaConfigurationNicOutput() GetAutoscalingGroupReplicaConfigurationNicOutput
	ToGetAutoscalingGroupReplicaConfigurationNicOutputWithContext(context.Context) GetAutoscalingGroupReplicaConfigurationNicOutput
}

type GetAutoscalingGroupReplicaConfigurationNicArgs struct {
	// Dhcp flag for this replica Nic. This is an optional attribute with default value of 'true' if not given in the request payload or given as null.
	Dhcp pulumi.BoolInput `pulumi:"dhcp"`
	// Activate or deactivate the firewall. By default, an active firewall without any defined rules will block all incoming network traffic except for the firewall rules that explicitly allows certain protocols, IP addresses and ports.
	FirewallActive pulumi.BoolInput `pulumi:"firewallActive"`
	// List of all firewall rules for the specified NIC.
	FirewallRules GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayInput `pulumi:"firewallRules"`
	// The type of firewall rules that will be allowed on the NIC. If not specified, the default INGRESS value is used.
	FirewallType pulumi.StringInput `pulumi:"firewallType"`
	// Flow log configuration for the NIC. By default, the flow log is inactive. If you want to activate the flow log, you must specify the target resource and the type of traffic to log.
	FlowLogs GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayInput `pulumi:"flowLogs"`
	// Lan ID for this replica Nic.
	Lan pulumi.IntInput `pulumi:"lan"`
	// Name of an existing Autoscaling Group that you want to search for.
	//
	// Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
	Name pulumi.StringInput `pulumi:"name"`
	// In order to link VM to ALB, target group must be provided.
	TargetGroups GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayInput `pulumi:"targetGroups"`
}

func (GetAutoscalingGroupReplicaConfigurationNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNic)(nil)).Elem()
}

func (i GetAutoscalingGroupReplicaConfigurationNicArgs) ToGetAutoscalingGroupReplicaConfigurationNicOutput() GetAutoscalingGroupReplicaConfigurationNicOutput {
	return i.ToGetAutoscalingGroupReplicaConfigurationNicOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupReplicaConfigurationNicArgs) ToGetAutoscalingGroupReplicaConfigurationNicOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupReplicaConfigurationNicOutput)
}

// GetAutoscalingGroupReplicaConfigurationNicArrayInput is an input type that accepts GetAutoscalingGroupReplicaConfigurationNicArray and GetAutoscalingGroupReplicaConfigurationNicArrayOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupReplicaConfigurationNicArrayInput` via:
//
//	GetAutoscalingGroupReplicaConfigurationNicArray{ GetAutoscalingGroupReplicaConfigurationNicArgs{...} }
type GetAutoscalingGroupReplicaConfigurationNicArrayInput interface {
	pulumi.Input

	ToGetAutoscalingGroupReplicaConfigurationNicArrayOutput() GetAutoscalingGroupReplicaConfigurationNicArrayOutput
	ToGetAutoscalingGroupReplicaConfigurationNicArrayOutputWithContext(context.Context) GetAutoscalingGroupReplicaConfigurationNicArrayOutput
}

type GetAutoscalingGroupReplicaConfigurationNicArray []GetAutoscalingGroupReplicaConfigurationNicInput

func (GetAutoscalingGroupReplicaConfigurationNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupReplicaConfigurationNic)(nil)).Elem()
}

func (i GetAutoscalingGroupReplicaConfigurationNicArray) ToGetAutoscalingGroupReplicaConfigurationNicArrayOutput() GetAutoscalingGroupReplicaConfigurationNicArrayOutput {
	return i.ToGetAutoscalingGroupReplicaConfigurationNicArrayOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupReplicaConfigurationNicArray) ToGetAutoscalingGroupReplicaConfigurationNicArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupReplicaConfigurationNicArrayOutput)
}

type GetAutoscalingGroupReplicaConfigurationNicOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupReplicaConfigurationNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNic)(nil)).Elem()
}

func (o GetAutoscalingGroupReplicaConfigurationNicOutput) ToGetAutoscalingGroupReplicaConfigurationNicOutput() GetAutoscalingGroupReplicaConfigurationNicOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationNicOutput) ToGetAutoscalingGroupReplicaConfigurationNicOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicOutput {
	return o
}

// Dhcp flag for this replica Nic. This is an optional attribute with default value of 'true' if not given in the request payload or given as null.
func (o GetAutoscalingGroupReplicaConfigurationNicOutput) Dhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNic) bool { return v.Dhcp }).(pulumi.BoolOutput)
}

// Activate or deactivate the firewall. By default, an active firewall without any defined rules will block all incoming network traffic except for the firewall rules that explicitly allows certain protocols, IP addresses and ports.
func (o GetAutoscalingGroupReplicaConfigurationNicOutput) FirewallActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNic) bool { return v.FirewallActive }).(pulumi.BoolOutput)
}

// List of all firewall rules for the specified NIC.
func (o GetAutoscalingGroupReplicaConfigurationNicOutput) FirewallRules() GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNic) []GetAutoscalingGroupReplicaConfigurationNicFirewallRule {
		return v.FirewallRules
	}).(GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput)
}

// The type of firewall rules that will be allowed on the NIC. If not specified, the default INGRESS value is used.
func (o GetAutoscalingGroupReplicaConfigurationNicOutput) FirewallType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNic) string { return v.FirewallType }).(pulumi.StringOutput)
}

// Flow log configuration for the NIC. By default, the flow log is inactive. If you want to activate the flow log, you must specify the target resource and the type of traffic to log.
func (o GetAutoscalingGroupReplicaConfigurationNicOutput) FlowLogs() GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNic) []GetAutoscalingGroupReplicaConfigurationNicFlowLog {
		return v.FlowLogs
	}).(GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput)
}

// Lan ID for this replica Nic.
func (o GetAutoscalingGroupReplicaConfigurationNicOutput) Lan() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNic) int { return v.Lan }).(pulumi.IntOutput)
}

// Name of an existing Autoscaling Group that you want to search for.
//
// Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
func (o GetAutoscalingGroupReplicaConfigurationNicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNic) string { return v.Name }).(pulumi.StringOutput)
}

// In order to link VM to ALB, target group must be provided.
func (o GetAutoscalingGroupReplicaConfigurationNicOutput) TargetGroups() GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNic) []GetAutoscalingGroupReplicaConfigurationNicTargetGroup {
		return v.TargetGroups
	}).(GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput)
}

type GetAutoscalingGroupReplicaConfigurationNicArrayOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupReplicaConfigurationNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupReplicaConfigurationNic)(nil)).Elem()
}

func (o GetAutoscalingGroupReplicaConfigurationNicArrayOutput) ToGetAutoscalingGroupReplicaConfigurationNicArrayOutput() GetAutoscalingGroupReplicaConfigurationNicArrayOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationNicArrayOutput) ToGetAutoscalingGroupReplicaConfigurationNicArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicArrayOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationNicArrayOutput) Index(i pulumi.IntInput) GetAutoscalingGroupReplicaConfigurationNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoscalingGroupReplicaConfigurationNic {
		return vs[0].([]GetAutoscalingGroupReplicaConfigurationNic)[vs[1].(int)]
	}).(GetAutoscalingGroupReplicaConfigurationNicOutput)
}

type GetAutoscalingGroupReplicaConfigurationNicFirewallRule struct {
	// Sets the allowed code (from 0 to 254) when ICMP protocol is selected. The value 'null' allows all codes.
	IcmpCode int `pulumi:"icmpCode"`
	// Sets the allowed type (from 0 to 254) if the protocol ICMP is selected. The value 'null' allows all types.
	IcmpType int `pulumi:"icmpType"`
	// Name of an existing Autoscaling Group that you want to search for.
	//
	// Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
	Name string `pulumi:"name"`
	// Sets the end range of the allowed port (from 1 to 65535) if the protocol TCP or UDP is selected. The value 'null' for 'port_range_start' and 'port_range_end' allows all ports.
	PortRangeEnd int `pulumi:"portRangeEnd"`
	// Sets the initial range of the allowed port (from 1 to 65535) if the protocol TCP or UDP is selected. The value 'null' for 'port_range_start' and 'port_range_end' allows all ports.
	PortRangeStart int `pulumi:"portRangeStart"`
	// The protocol for the rule. The property cannot be modified after its creation (not allowed in update requests).
	Protocol string `pulumi:"protocol"`
	// Only traffic originating from the respective IPv4 address is permitted. The value 'null' allows traffic from any IP address.
	SourceIp string `pulumi:"sourceIp"`
	// Only traffic originating from the respective MAC address is permitted. Valid format: 'aa:bb:cc:dd:ee:ff'. The value 'null' allows traffic from any MAC address.
	SourceMac string `pulumi:"sourceMac"`
	// If the target NIC has multiple IP addresses, only the traffic directed to the respective IP address of the NIC is allowed. The value 'null' allows traffic to any target IP address.
	TargetIp string `pulumi:"targetIp"`
	// Type of resource
	Type string `pulumi:"type"`
}

// GetAutoscalingGroupReplicaConfigurationNicFirewallRuleInput is an input type that accepts GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArgs and GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupReplicaConfigurationNicFirewallRuleInput` via:
//
//	GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArgs{...}
type GetAutoscalingGroupReplicaConfigurationNicFirewallRuleInput interface {
	pulumi.Input

	ToGetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput() GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput
	ToGetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutputWithContext(context.Context) GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput
}

type GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArgs struct {
	// Sets the allowed code (from 0 to 254) when ICMP protocol is selected. The value 'null' allows all codes.
	IcmpCode pulumi.IntInput `pulumi:"icmpCode"`
	// Sets the allowed type (from 0 to 254) if the protocol ICMP is selected. The value 'null' allows all types.
	IcmpType pulumi.IntInput `pulumi:"icmpType"`
	// Name of an existing Autoscaling Group that you want to search for.
	//
	// Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
	Name pulumi.StringInput `pulumi:"name"`
	// Sets the end range of the allowed port (from 1 to 65535) if the protocol TCP or UDP is selected. The value 'null' for 'port_range_start' and 'port_range_end' allows all ports.
	PortRangeEnd pulumi.IntInput `pulumi:"portRangeEnd"`
	// Sets the initial range of the allowed port (from 1 to 65535) if the protocol TCP or UDP is selected. The value 'null' for 'port_range_start' and 'port_range_end' allows all ports.
	PortRangeStart pulumi.IntInput `pulumi:"portRangeStart"`
	// The protocol for the rule. The property cannot be modified after its creation (not allowed in update requests).
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Only traffic originating from the respective IPv4 address is permitted. The value 'null' allows traffic from any IP address.
	SourceIp pulumi.StringInput `pulumi:"sourceIp"`
	// Only traffic originating from the respective MAC address is permitted. Valid format: 'aa:bb:cc:dd:ee:ff'. The value 'null' allows traffic from any MAC address.
	SourceMac pulumi.StringInput `pulumi:"sourceMac"`
	// If the target NIC has multiple IP addresses, only the traffic directed to the respective IP address of the NIC is allowed. The value 'null' allows traffic to any target IP address.
	TargetIp pulumi.StringInput `pulumi:"targetIp"`
	// Type of resource
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNicFirewallRule)(nil)).Elem()
}

func (i GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArgs) ToGetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput() GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput {
	return i.ToGetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArgs) ToGetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput)
}

// GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayInput is an input type that accepts GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArray and GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayInput` via:
//
//	GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArray{ GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArgs{...} }
type GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayInput interface {
	pulumi.Input

	ToGetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput() GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput
	ToGetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutputWithContext(context.Context) GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput
}

type GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArray []GetAutoscalingGroupReplicaConfigurationNicFirewallRuleInput

func (GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupReplicaConfigurationNicFirewallRule)(nil)).Elem()
}

func (i GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArray) ToGetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput() GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput {
	return i.ToGetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArray) ToGetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput)
}

type GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNicFirewallRule)(nil)).Elem()
}

func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) ToGetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput() GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) ToGetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput {
	return o
}

// Sets the allowed code (from 0 to 254) when ICMP protocol is selected. The value 'null' allows all codes.
func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) IcmpCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFirewallRule) int { return v.IcmpCode }).(pulumi.IntOutput)
}

// Sets the allowed type (from 0 to 254) if the protocol ICMP is selected. The value 'null' allows all types.
func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) IcmpType() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFirewallRule) int { return v.IcmpType }).(pulumi.IntOutput)
}

// Name of an existing Autoscaling Group that you want to search for.
//
// Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFirewallRule) string { return v.Name }).(pulumi.StringOutput)
}

// Sets the end range of the allowed port (from 1 to 65535) if the protocol TCP or UDP is selected. The value 'null' for 'port_range_start' and 'port_range_end' allows all ports.
func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) PortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFirewallRule) int { return v.PortRangeEnd }).(pulumi.IntOutput)
}

// Sets the initial range of the allowed port (from 1 to 65535) if the protocol TCP or UDP is selected. The value 'null' for 'port_range_start' and 'port_range_end' allows all ports.
func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) PortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFirewallRule) int { return v.PortRangeStart }).(pulumi.IntOutput)
}

// The protocol for the rule. The property cannot be modified after its creation (not allowed in update requests).
func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFirewallRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// Only traffic originating from the respective IPv4 address is permitted. The value 'null' allows traffic from any IP address.
func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFirewallRule) string { return v.SourceIp }).(pulumi.StringOutput)
}

// Only traffic originating from the respective MAC address is permitted. Valid format: 'aa:bb:cc:dd:ee:ff'. The value 'null' allows traffic from any MAC address.
func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) SourceMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFirewallRule) string { return v.SourceMac }).(pulumi.StringOutput)
}

// If the target NIC has multiple IP addresses, only the traffic directed to the respective IP address of the NIC is allowed. The value 'null' allows traffic to any target IP address.
func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) TargetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFirewallRule) string { return v.TargetIp }).(pulumi.StringOutput)
}

// Type of resource
func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFirewallRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupReplicaConfigurationNicFirewallRule)(nil)).Elem()
}

func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput) ToGetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput() GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput) ToGetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput) Index(i pulumi.IntInput) GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoscalingGroupReplicaConfigurationNicFirewallRule {
		return vs[0].([]GetAutoscalingGroupReplicaConfigurationNicFirewallRule)[vs[1].(int)]
	}).(GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput)
}

type GetAutoscalingGroupReplicaConfigurationNicFlowLog struct {
	// Specifies the traffic direction pattern. Valid values: ACCEPTED, REJECTED, ALL.
	Action string `pulumi:"action"`
	// The bucket name of an existing IONOS Object Storage bucket.
	Bucket string `pulumi:"bucket"`
	// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL.
	Direction string `pulumi:"direction"`
	// Id of an existing Autoscaling Group that you want to search for.
	Id string `pulumi:"id"`
	// Name of an existing Autoscaling Group that you want to search for.
	//
	// Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
	Name string `pulumi:"name"`
}

// GetAutoscalingGroupReplicaConfigurationNicFlowLogInput is an input type that accepts GetAutoscalingGroupReplicaConfigurationNicFlowLogArgs and GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupReplicaConfigurationNicFlowLogInput` via:
//
//	GetAutoscalingGroupReplicaConfigurationNicFlowLogArgs{...}
type GetAutoscalingGroupReplicaConfigurationNicFlowLogInput interface {
	pulumi.Input

	ToGetAutoscalingGroupReplicaConfigurationNicFlowLogOutput() GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput
	ToGetAutoscalingGroupReplicaConfigurationNicFlowLogOutputWithContext(context.Context) GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput
}

type GetAutoscalingGroupReplicaConfigurationNicFlowLogArgs struct {
	// Specifies the traffic direction pattern. Valid values: ACCEPTED, REJECTED, ALL.
	Action pulumi.StringInput `pulumi:"action"`
	// The bucket name of an existing IONOS Object Storage bucket.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Id of an existing Autoscaling Group that you want to search for.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of an existing Autoscaling Group that you want to search for.
	//
	// Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAutoscalingGroupReplicaConfigurationNicFlowLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNicFlowLog)(nil)).Elem()
}

func (i GetAutoscalingGroupReplicaConfigurationNicFlowLogArgs) ToGetAutoscalingGroupReplicaConfigurationNicFlowLogOutput() GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput {
	return i.ToGetAutoscalingGroupReplicaConfigurationNicFlowLogOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupReplicaConfigurationNicFlowLogArgs) ToGetAutoscalingGroupReplicaConfigurationNicFlowLogOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput)
}

// GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayInput is an input type that accepts GetAutoscalingGroupReplicaConfigurationNicFlowLogArray and GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayInput` via:
//
//	GetAutoscalingGroupReplicaConfigurationNicFlowLogArray{ GetAutoscalingGroupReplicaConfigurationNicFlowLogArgs{...} }
type GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayInput interface {
	pulumi.Input

	ToGetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput() GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput
	ToGetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutputWithContext(context.Context) GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput
}

type GetAutoscalingGroupReplicaConfigurationNicFlowLogArray []GetAutoscalingGroupReplicaConfigurationNicFlowLogInput

func (GetAutoscalingGroupReplicaConfigurationNicFlowLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupReplicaConfigurationNicFlowLog)(nil)).Elem()
}

func (i GetAutoscalingGroupReplicaConfigurationNicFlowLogArray) ToGetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput() GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput {
	return i.ToGetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupReplicaConfigurationNicFlowLogArray) ToGetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput)
}

type GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNicFlowLog)(nil)).Elem()
}

func (o GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput) ToGetAutoscalingGroupReplicaConfigurationNicFlowLogOutput() GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput) ToGetAutoscalingGroupReplicaConfigurationNicFlowLogOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput {
	return o
}

// Specifies the traffic direction pattern. Valid values: ACCEPTED, REJECTED, ALL.
func (o GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFlowLog) string { return v.Action }).(pulumi.StringOutput)
}

// The bucket name of an existing IONOS Object Storage bucket.
func (o GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFlowLog) string { return v.Bucket }).(pulumi.StringOutput)
}

// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL.
func (o GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFlowLog) string { return v.Direction }).(pulumi.StringOutput)
}

// Id of an existing Autoscaling Group that you want to search for.
func (o GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFlowLog) string { return v.Id }).(pulumi.StringOutput)
}

// Name of an existing Autoscaling Group that you want to search for.
//
// Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
func (o GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicFlowLog) string { return v.Name }).(pulumi.StringOutput)
}

type GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupReplicaConfigurationNicFlowLog)(nil)).Elem()
}

func (o GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput) ToGetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput() GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput) ToGetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput) Index(i pulumi.IntInput) GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoscalingGroupReplicaConfigurationNicFlowLog {
		return vs[0].([]GetAutoscalingGroupReplicaConfigurationNicFlowLog)[vs[1].(int)]
	}).(GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput)
}

type GetAutoscalingGroupReplicaConfigurationNicTargetGroup struct {
	// The port for the target group.
	Port int `pulumi:"port"`
	// The ID of the target group.
	TargetGroupId string `pulumi:"targetGroupId"`
	// The weight for the target group.
	Weight int `pulumi:"weight"`
}

// GetAutoscalingGroupReplicaConfigurationNicTargetGroupInput is an input type that accepts GetAutoscalingGroupReplicaConfigurationNicTargetGroupArgs and GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupReplicaConfigurationNicTargetGroupInput` via:
//
//	GetAutoscalingGroupReplicaConfigurationNicTargetGroupArgs{...}
type GetAutoscalingGroupReplicaConfigurationNicTargetGroupInput interface {
	pulumi.Input

	ToGetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput() GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput
	ToGetAutoscalingGroupReplicaConfigurationNicTargetGroupOutputWithContext(context.Context) GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput
}

type GetAutoscalingGroupReplicaConfigurationNicTargetGroupArgs struct {
	// The port for the target group.
	Port pulumi.IntInput `pulumi:"port"`
	// The ID of the target group.
	TargetGroupId pulumi.StringInput `pulumi:"targetGroupId"`
	// The weight for the target group.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetAutoscalingGroupReplicaConfigurationNicTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNicTargetGroup)(nil)).Elem()
}

func (i GetAutoscalingGroupReplicaConfigurationNicTargetGroupArgs) ToGetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput() GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput {
	return i.ToGetAutoscalingGroupReplicaConfigurationNicTargetGroupOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupReplicaConfigurationNicTargetGroupArgs) ToGetAutoscalingGroupReplicaConfigurationNicTargetGroupOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput)
}

// GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayInput is an input type that accepts GetAutoscalingGroupReplicaConfigurationNicTargetGroupArray and GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayInput` via:
//
//	GetAutoscalingGroupReplicaConfigurationNicTargetGroupArray{ GetAutoscalingGroupReplicaConfigurationNicTargetGroupArgs{...} }
type GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayInput interface {
	pulumi.Input

	ToGetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput() GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput
	ToGetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutputWithContext(context.Context) GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput
}

type GetAutoscalingGroupReplicaConfigurationNicTargetGroupArray []GetAutoscalingGroupReplicaConfigurationNicTargetGroupInput

func (GetAutoscalingGroupReplicaConfigurationNicTargetGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupReplicaConfigurationNicTargetGroup)(nil)).Elem()
}

func (i GetAutoscalingGroupReplicaConfigurationNicTargetGroupArray) ToGetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput() GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput {
	return i.ToGetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupReplicaConfigurationNicTargetGroupArray) ToGetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput)
}

type GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNicTargetGroup)(nil)).Elem()
}

func (o GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput) ToGetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput() GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput) ToGetAutoscalingGroupReplicaConfigurationNicTargetGroupOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput {
	return o
}

// The port for the target group.
func (o GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicTargetGroup) int { return v.Port }).(pulumi.IntOutput)
}

// The ID of the target group.
func (o GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput) TargetGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicTargetGroup) string { return v.TargetGroupId }).(pulumi.StringOutput)
}

// The weight for the target group.
func (o GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationNicTargetGroup) int { return v.Weight }).(pulumi.IntOutput)
}

type GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupReplicaConfigurationNicTargetGroup)(nil)).Elem()
}

func (o GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput) ToGetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput() GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput) ToGetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput) Index(i pulumi.IntInput) GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoscalingGroupReplicaConfigurationNicTargetGroup {
		return vs[0].([]GetAutoscalingGroupReplicaConfigurationNicTargetGroup)[vs[1].(int)]
	}).(GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput)
}

type GetAutoscalingGroupReplicaConfigurationVolume struct {
	// The uuid of the Backup Unit that user has access to.
	BackupUnitId string `pulumi:"backupUnitId"`
	// Determines whether the volume will be used as a boot volume: NONE - the volume will not be used as boot volume, PRIMARY - the volume will be used as boot volume, AUTO - will delegate the decision to the provisioning engine to decide whether to use the volume as boot volume.
	BootOrder string `pulumi:"bootOrder"`
	// The bus type of the volume. Default setting is 'VIRTIO'. The bus type 'IDE' is also supported.
	Bus string `pulumi:"bus"`
	// The image installed on the volume. Only the UUID of the image is presently supported.
	Image string `pulumi:"image"`
	// The image installed on the volume. Must be an 'imageAlias' as specified via the images API.
	ImageAlias string `pulumi:"imageAlias"`
	// Name of an existing Autoscaling Group that you want to search for.
	//
	// Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
	Name string `pulumi:"name"`
	// User-defined size for this replica volume in GB.
	Size    int      `pulumi:"size"`
	SshKeys []string `pulumi:"sshKeys"`
	// Type of resource
	Type string `pulumi:"type"`
}

// GetAutoscalingGroupReplicaConfigurationVolumeInput is an input type that accepts GetAutoscalingGroupReplicaConfigurationVolumeArgs and GetAutoscalingGroupReplicaConfigurationVolumeOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupReplicaConfigurationVolumeInput` via:
//
//	GetAutoscalingGroupReplicaConfigurationVolumeArgs{...}
type GetAutoscalingGroupReplicaConfigurationVolumeInput interface {
	pulumi.Input

	ToGetAutoscalingGroupReplicaConfigurationVolumeOutput() GetAutoscalingGroupReplicaConfigurationVolumeOutput
	ToGetAutoscalingGroupReplicaConfigurationVolumeOutputWithContext(context.Context) GetAutoscalingGroupReplicaConfigurationVolumeOutput
}

type GetAutoscalingGroupReplicaConfigurationVolumeArgs struct {
	// The uuid of the Backup Unit that user has access to.
	BackupUnitId pulumi.StringInput `pulumi:"backupUnitId"`
	// Determines whether the volume will be used as a boot volume: NONE - the volume will not be used as boot volume, PRIMARY - the volume will be used as boot volume, AUTO - will delegate the decision to the provisioning engine to decide whether to use the volume as boot volume.
	BootOrder pulumi.StringInput `pulumi:"bootOrder"`
	// The bus type of the volume. Default setting is 'VIRTIO'. The bus type 'IDE' is also supported.
	Bus pulumi.StringInput `pulumi:"bus"`
	// The image installed on the volume. Only the UUID of the image is presently supported.
	Image pulumi.StringInput `pulumi:"image"`
	// The image installed on the volume. Must be an 'imageAlias' as specified via the images API.
	ImageAlias pulumi.StringInput `pulumi:"imageAlias"`
	// Name of an existing Autoscaling Group that you want to search for.
	//
	// Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
	Name pulumi.StringInput `pulumi:"name"`
	// User-defined size for this replica volume in GB.
	Size    pulumi.IntInput         `pulumi:"size"`
	SshKeys pulumi.StringArrayInput `pulumi:"sshKeys"`
	// Type of resource
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAutoscalingGroupReplicaConfigurationVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationVolume)(nil)).Elem()
}

func (i GetAutoscalingGroupReplicaConfigurationVolumeArgs) ToGetAutoscalingGroupReplicaConfigurationVolumeOutput() GetAutoscalingGroupReplicaConfigurationVolumeOutput {
	return i.ToGetAutoscalingGroupReplicaConfigurationVolumeOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupReplicaConfigurationVolumeArgs) ToGetAutoscalingGroupReplicaConfigurationVolumeOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupReplicaConfigurationVolumeOutput)
}

// GetAutoscalingGroupReplicaConfigurationVolumeArrayInput is an input type that accepts GetAutoscalingGroupReplicaConfigurationVolumeArray and GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupReplicaConfigurationVolumeArrayInput` via:
//
//	GetAutoscalingGroupReplicaConfigurationVolumeArray{ GetAutoscalingGroupReplicaConfigurationVolumeArgs{...} }
type GetAutoscalingGroupReplicaConfigurationVolumeArrayInput interface {
	pulumi.Input

	ToGetAutoscalingGroupReplicaConfigurationVolumeArrayOutput() GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput
	ToGetAutoscalingGroupReplicaConfigurationVolumeArrayOutputWithContext(context.Context) GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput
}

type GetAutoscalingGroupReplicaConfigurationVolumeArray []GetAutoscalingGroupReplicaConfigurationVolumeInput

func (GetAutoscalingGroupReplicaConfigurationVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupReplicaConfigurationVolume)(nil)).Elem()
}

func (i GetAutoscalingGroupReplicaConfigurationVolumeArray) ToGetAutoscalingGroupReplicaConfigurationVolumeArrayOutput() GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput {
	return i.ToGetAutoscalingGroupReplicaConfigurationVolumeArrayOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupReplicaConfigurationVolumeArray) ToGetAutoscalingGroupReplicaConfigurationVolumeArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput)
}

type GetAutoscalingGroupReplicaConfigurationVolumeOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupReplicaConfigurationVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationVolume)(nil)).Elem()
}

func (o GetAutoscalingGroupReplicaConfigurationVolumeOutput) ToGetAutoscalingGroupReplicaConfigurationVolumeOutput() GetAutoscalingGroupReplicaConfigurationVolumeOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationVolumeOutput) ToGetAutoscalingGroupReplicaConfigurationVolumeOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationVolumeOutput {
	return o
}

// The uuid of the Backup Unit that user has access to.
func (o GetAutoscalingGroupReplicaConfigurationVolumeOutput) BackupUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationVolume) string { return v.BackupUnitId }).(pulumi.StringOutput)
}

// Determines whether the volume will be used as a boot volume: NONE - the volume will not be used as boot volume, PRIMARY - the volume will be used as boot volume, AUTO - will delegate the decision to the provisioning engine to decide whether to use the volume as boot volume.
func (o GetAutoscalingGroupReplicaConfigurationVolumeOutput) BootOrder() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationVolume) string { return v.BootOrder }).(pulumi.StringOutput)
}

// The bus type of the volume. Default setting is 'VIRTIO'. The bus type 'IDE' is also supported.
func (o GetAutoscalingGroupReplicaConfigurationVolumeOutput) Bus() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationVolume) string { return v.Bus }).(pulumi.StringOutput)
}

// The image installed on the volume. Only the UUID of the image is presently supported.
func (o GetAutoscalingGroupReplicaConfigurationVolumeOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationVolume) string { return v.Image }).(pulumi.StringOutput)
}

// The image installed on the volume. Must be an 'imageAlias' as specified via the images API.
func (o GetAutoscalingGroupReplicaConfigurationVolumeOutput) ImageAlias() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationVolume) string { return v.ImageAlias }).(pulumi.StringOutput)
}

// Name of an existing Autoscaling Group that you want to search for.
//
// Either `name` or `id` must be provided. If none or both are provided, the datasource will return an error.
func (o GetAutoscalingGroupReplicaConfigurationVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationVolume) string { return v.Name }).(pulumi.StringOutput)
}

// User-defined size for this replica volume in GB.
func (o GetAutoscalingGroupReplicaConfigurationVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetAutoscalingGroupReplicaConfigurationVolumeOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationVolume) []string { return v.SshKeys }).(pulumi.StringArrayOutput)
}

// Type of resource
func (o GetAutoscalingGroupReplicaConfigurationVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupReplicaConfigurationVolume) string { return v.Type }).(pulumi.StringOutput)
}

type GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupReplicaConfigurationVolume)(nil)).Elem()
}

func (o GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput) ToGetAutoscalingGroupReplicaConfigurationVolumeArrayOutput() GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput) ToGetAutoscalingGroupReplicaConfigurationVolumeArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput {
	return o
}

func (o GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput) Index(i pulumi.IntInput) GetAutoscalingGroupReplicaConfigurationVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoscalingGroupReplicaConfigurationVolume {
		return vs[0].([]GetAutoscalingGroupReplicaConfigurationVolume)[vs[1].(int)]
	}).(GetAutoscalingGroupReplicaConfigurationVolumeOutput)
}

type GetAutoscalingGroupServersServer struct {
	// The unique ID of the server.
	Id string `pulumi:"id"`
}

// GetAutoscalingGroupServersServerInput is an input type that accepts GetAutoscalingGroupServersServerArgs and GetAutoscalingGroupServersServerOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupServersServerInput` via:
//
//	GetAutoscalingGroupServersServerArgs{...}
type GetAutoscalingGroupServersServerInput interface {
	pulumi.Input

	ToGetAutoscalingGroupServersServerOutput() GetAutoscalingGroupServersServerOutput
	ToGetAutoscalingGroupServersServerOutputWithContext(context.Context) GetAutoscalingGroupServersServerOutput
}

type GetAutoscalingGroupServersServerArgs struct {
	// The unique ID of the server.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAutoscalingGroupServersServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupServersServer)(nil)).Elem()
}

func (i GetAutoscalingGroupServersServerArgs) ToGetAutoscalingGroupServersServerOutput() GetAutoscalingGroupServersServerOutput {
	return i.ToGetAutoscalingGroupServersServerOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupServersServerArgs) ToGetAutoscalingGroupServersServerOutputWithContext(ctx context.Context) GetAutoscalingGroupServersServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupServersServerOutput)
}

// GetAutoscalingGroupServersServerArrayInput is an input type that accepts GetAutoscalingGroupServersServerArray and GetAutoscalingGroupServersServerArrayOutput values.
// You can construct a concrete instance of `GetAutoscalingGroupServersServerArrayInput` via:
//
//	GetAutoscalingGroupServersServerArray{ GetAutoscalingGroupServersServerArgs{...} }
type GetAutoscalingGroupServersServerArrayInput interface {
	pulumi.Input

	ToGetAutoscalingGroupServersServerArrayOutput() GetAutoscalingGroupServersServerArrayOutput
	ToGetAutoscalingGroupServersServerArrayOutputWithContext(context.Context) GetAutoscalingGroupServersServerArrayOutput
}

type GetAutoscalingGroupServersServerArray []GetAutoscalingGroupServersServerInput

func (GetAutoscalingGroupServersServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupServersServer)(nil)).Elem()
}

func (i GetAutoscalingGroupServersServerArray) ToGetAutoscalingGroupServersServerArrayOutput() GetAutoscalingGroupServersServerArrayOutput {
	return i.ToGetAutoscalingGroupServersServerArrayOutputWithContext(context.Background())
}

func (i GetAutoscalingGroupServersServerArray) ToGetAutoscalingGroupServersServerArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupServersServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAutoscalingGroupServersServerArrayOutput)
}

type GetAutoscalingGroupServersServerOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupServersServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoscalingGroupServersServer)(nil)).Elem()
}

func (o GetAutoscalingGroupServersServerOutput) ToGetAutoscalingGroupServersServerOutput() GetAutoscalingGroupServersServerOutput {
	return o
}

func (o GetAutoscalingGroupServersServerOutput) ToGetAutoscalingGroupServersServerOutputWithContext(ctx context.Context) GetAutoscalingGroupServersServerOutput {
	return o
}

// The unique ID of the server.
func (o GetAutoscalingGroupServersServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoscalingGroupServersServer) string { return v.Id }).(pulumi.StringOutput)
}

type GetAutoscalingGroupServersServerArrayOutput struct{ *pulumi.OutputState }

func (GetAutoscalingGroupServersServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAutoscalingGroupServersServer)(nil)).Elem()
}

func (o GetAutoscalingGroupServersServerArrayOutput) ToGetAutoscalingGroupServersServerArrayOutput() GetAutoscalingGroupServersServerArrayOutput {
	return o
}

func (o GetAutoscalingGroupServersServerArrayOutput) ToGetAutoscalingGroupServersServerArrayOutputWithContext(ctx context.Context) GetAutoscalingGroupServersServerArrayOutput {
	return o
}

func (o GetAutoscalingGroupServersServerArrayOutput) Index(i pulumi.IntInput) GetAutoscalingGroupServersServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAutoscalingGroupServersServer {
		return vs[0].([]GetAutoscalingGroupServersServer)[vs[1].(int)]
	}).(GetAutoscalingGroupServersServerOutput)
}

type GetCdnDistributionRoutingRule struct {
	// The prefix of the routing rule.
	Prefix string `pulumi:"prefix"`
	// The scheme of the routing rule.
	Scheme string `pulumi:"scheme"`
	// A map of properties for the rule
	Upstreams []GetCdnDistributionRoutingRuleUpstream `pulumi:"upstreams"`
}

// GetCdnDistributionRoutingRuleInput is an input type that accepts GetCdnDistributionRoutingRuleArgs and GetCdnDistributionRoutingRuleOutput values.
// You can construct a concrete instance of `GetCdnDistributionRoutingRuleInput` via:
//
//	GetCdnDistributionRoutingRuleArgs{...}
type GetCdnDistributionRoutingRuleInput interface {
	pulumi.Input

	ToGetCdnDistributionRoutingRuleOutput() GetCdnDistributionRoutingRuleOutput
	ToGetCdnDistributionRoutingRuleOutputWithContext(context.Context) GetCdnDistributionRoutingRuleOutput
}

type GetCdnDistributionRoutingRuleArgs struct {
	// The prefix of the routing rule.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// The scheme of the routing rule.
	Scheme pulumi.StringInput `pulumi:"scheme"`
	// A map of properties for the rule
	Upstreams GetCdnDistributionRoutingRuleUpstreamArrayInput `pulumi:"upstreams"`
}

func (GetCdnDistributionRoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCdnDistributionRoutingRule)(nil)).Elem()
}

func (i GetCdnDistributionRoutingRuleArgs) ToGetCdnDistributionRoutingRuleOutput() GetCdnDistributionRoutingRuleOutput {
	return i.ToGetCdnDistributionRoutingRuleOutputWithContext(context.Background())
}

func (i GetCdnDistributionRoutingRuleArgs) ToGetCdnDistributionRoutingRuleOutputWithContext(ctx context.Context) GetCdnDistributionRoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCdnDistributionRoutingRuleOutput)
}

// GetCdnDistributionRoutingRuleArrayInput is an input type that accepts GetCdnDistributionRoutingRuleArray and GetCdnDistributionRoutingRuleArrayOutput values.
// You can construct a concrete instance of `GetCdnDistributionRoutingRuleArrayInput` via:
//
//	GetCdnDistributionRoutingRuleArray{ GetCdnDistributionRoutingRuleArgs{...} }
type GetCdnDistributionRoutingRuleArrayInput interface {
	pulumi.Input

	ToGetCdnDistributionRoutingRuleArrayOutput() GetCdnDistributionRoutingRuleArrayOutput
	ToGetCdnDistributionRoutingRuleArrayOutputWithContext(context.Context) GetCdnDistributionRoutingRuleArrayOutput
}

type GetCdnDistributionRoutingRuleArray []GetCdnDistributionRoutingRuleInput

func (GetCdnDistributionRoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCdnDistributionRoutingRule)(nil)).Elem()
}

func (i GetCdnDistributionRoutingRuleArray) ToGetCdnDistributionRoutingRuleArrayOutput() GetCdnDistributionRoutingRuleArrayOutput {
	return i.ToGetCdnDistributionRoutingRuleArrayOutputWithContext(context.Background())
}

func (i GetCdnDistributionRoutingRuleArray) ToGetCdnDistributionRoutingRuleArrayOutputWithContext(ctx context.Context) GetCdnDistributionRoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCdnDistributionRoutingRuleArrayOutput)
}

type GetCdnDistributionRoutingRuleOutput struct{ *pulumi.OutputState }

func (GetCdnDistributionRoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCdnDistributionRoutingRule)(nil)).Elem()
}

func (o GetCdnDistributionRoutingRuleOutput) ToGetCdnDistributionRoutingRuleOutput() GetCdnDistributionRoutingRuleOutput {
	return o
}

func (o GetCdnDistributionRoutingRuleOutput) ToGetCdnDistributionRoutingRuleOutputWithContext(ctx context.Context) GetCdnDistributionRoutingRuleOutput {
	return o
}

// The prefix of the routing rule.
func (o GetCdnDistributionRoutingRuleOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetCdnDistributionRoutingRule) string { return v.Prefix }).(pulumi.StringOutput)
}

// The scheme of the routing rule.
func (o GetCdnDistributionRoutingRuleOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetCdnDistributionRoutingRule) string { return v.Scheme }).(pulumi.StringOutput)
}

// A map of properties for the rule
func (o GetCdnDistributionRoutingRuleOutput) Upstreams() GetCdnDistributionRoutingRuleUpstreamArrayOutput {
	return o.ApplyT(func(v GetCdnDistributionRoutingRule) []GetCdnDistributionRoutingRuleUpstream { return v.Upstreams }).(GetCdnDistributionRoutingRuleUpstreamArrayOutput)
}

type GetCdnDistributionRoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (GetCdnDistributionRoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCdnDistributionRoutingRule)(nil)).Elem()
}

func (o GetCdnDistributionRoutingRuleArrayOutput) ToGetCdnDistributionRoutingRuleArrayOutput() GetCdnDistributionRoutingRuleArrayOutput {
	return o
}

func (o GetCdnDistributionRoutingRuleArrayOutput) ToGetCdnDistributionRoutingRuleArrayOutputWithContext(ctx context.Context) GetCdnDistributionRoutingRuleArrayOutput {
	return o
}

func (o GetCdnDistributionRoutingRuleArrayOutput) Index(i pulumi.IntInput) GetCdnDistributionRoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCdnDistributionRoutingRule {
		return vs[0].([]GetCdnDistributionRoutingRule)[vs[1].(int)]
	}).(GetCdnDistributionRoutingRuleOutput)
}

type GetCdnDistributionRoutingRuleUpstream struct {
	// Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
	Caching bool `pulumi:"caching"`
	// A map of geo_restrictions
	GeoRestrictions []GetCdnDistributionRoutingRuleUpstreamGeoRestriction `pulumi:"geoRestrictions"`
	// The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
	Host string `pulumi:"host"`
	// Rate limit class that will be applied to limit the number of incoming requests per IP.
	RateLimitClass string `pulumi:"rateLimitClass"`
	// The SNI (Server Name Indication) mode of the upstream. It supports two modes: 1) `distribution`: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured domain of the CDN distribution; 2) `origin`: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured upstream/origin hostname.
	SniMode string `pulumi:"sniMode"`
	// Enable or disable WAF to protect the upstream host.
	Waf bool `pulumi:"waf"`
}

// GetCdnDistributionRoutingRuleUpstreamInput is an input type that accepts GetCdnDistributionRoutingRuleUpstreamArgs and GetCdnDistributionRoutingRuleUpstreamOutput values.
// You can construct a concrete instance of `GetCdnDistributionRoutingRuleUpstreamInput` via:
//
//	GetCdnDistributionRoutingRuleUpstreamArgs{...}
type GetCdnDistributionRoutingRuleUpstreamInput interface {
	pulumi.Input

	ToGetCdnDistributionRoutingRuleUpstreamOutput() GetCdnDistributionRoutingRuleUpstreamOutput
	ToGetCdnDistributionRoutingRuleUpstreamOutputWithContext(context.Context) GetCdnDistributionRoutingRuleUpstreamOutput
}

type GetCdnDistributionRoutingRuleUpstreamArgs struct {
	// Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
	Caching pulumi.BoolInput `pulumi:"caching"`
	// A map of geo_restrictions
	GeoRestrictions GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayInput `pulumi:"geoRestrictions"`
	// The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
	Host pulumi.StringInput `pulumi:"host"`
	// Rate limit class that will be applied to limit the number of incoming requests per IP.
	RateLimitClass pulumi.StringInput `pulumi:"rateLimitClass"`
	// The SNI (Server Name Indication) mode of the upstream. It supports two modes: 1) `distribution`: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured domain of the CDN distribution; 2) `origin`: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured upstream/origin hostname.
	SniMode pulumi.StringInput `pulumi:"sniMode"`
	// Enable or disable WAF to protect the upstream host.
	Waf pulumi.BoolInput `pulumi:"waf"`
}

func (GetCdnDistributionRoutingRuleUpstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCdnDistributionRoutingRuleUpstream)(nil)).Elem()
}

func (i GetCdnDistributionRoutingRuleUpstreamArgs) ToGetCdnDistributionRoutingRuleUpstreamOutput() GetCdnDistributionRoutingRuleUpstreamOutput {
	return i.ToGetCdnDistributionRoutingRuleUpstreamOutputWithContext(context.Background())
}

func (i GetCdnDistributionRoutingRuleUpstreamArgs) ToGetCdnDistributionRoutingRuleUpstreamOutputWithContext(ctx context.Context) GetCdnDistributionRoutingRuleUpstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCdnDistributionRoutingRuleUpstreamOutput)
}

// GetCdnDistributionRoutingRuleUpstreamArrayInput is an input type that accepts GetCdnDistributionRoutingRuleUpstreamArray and GetCdnDistributionRoutingRuleUpstreamArrayOutput values.
// You can construct a concrete instance of `GetCdnDistributionRoutingRuleUpstreamArrayInput` via:
//
//	GetCdnDistributionRoutingRuleUpstreamArray{ GetCdnDistributionRoutingRuleUpstreamArgs{...} }
type GetCdnDistributionRoutingRuleUpstreamArrayInput interface {
	pulumi.Input

	ToGetCdnDistributionRoutingRuleUpstreamArrayOutput() GetCdnDistributionRoutingRuleUpstreamArrayOutput
	ToGetCdnDistributionRoutingRuleUpstreamArrayOutputWithContext(context.Context) GetCdnDistributionRoutingRuleUpstreamArrayOutput
}

type GetCdnDistributionRoutingRuleUpstreamArray []GetCdnDistributionRoutingRuleUpstreamInput

func (GetCdnDistributionRoutingRuleUpstreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCdnDistributionRoutingRuleUpstream)(nil)).Elem()
}

func (i GetCdnDistributionRoutingRuleUpstreamArray) ToGetCdnDistributionRoutingRuleUpstreamArrayOutput() GetCdnDistributionRoutingRuleUpstreamArrayOutput {
	return i.ToGetCdnDistributionRoutingRuleUpstreamArrayOutputWithContext(context.Background())
}

func (i GetCdnDistributionRoutingRuleUpstreamArray) ToGetCdnDistributionRoutingRuleUpstreamArrayOutputWithContext(ctx context.Context) GetCdnDistributionRoutingRuleUpstreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCdnDistributionRoutingRuleUpstreamArrayOutput)
}

type GetCdnDistributionRoutingRuleUpstreamOutput struct{ *pulumi.OutputState }

func (GetCdnDistributionRoutingRuleUpstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCdnDistributionRoutingRuleUpstream)(nil)).Elem()
}

func (o GetCdnDistributionRoutingRuleUpstreamOutput) ToGetCdnDistributionRoutingRuleUpstreamOutput() GetCdnDistributionRoutingRuleUpstreamOutput {
	return o
}

func (o GetCdnDistributionRoutingRuleUpstreamOutput) ToGetCdnDistributionRoutingRuleUpstreamOutputWithContext(ctx context.Context) GetCdnDistributionRoutingRuleUpstreamOutput {
	return o
}

// Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
func (o GetCdnDistributionRoutingRuleUpstreamOutput) Caching() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCdnDistributionRoutingRuleUpstream) bool { return v.Caching }).(pulumi.BoolOutput)
}

// A map of geo_restrictions
func (o GetCdnDistributionRoutingRuleUpstreamOutput) GeoRestrictions() GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput {
	return o.ApplyT(func(v GetCdnDistributionRoutingRuleUpstream) []GetCdnDistributionRoutingRuleUpstreamGeoRestriction {
		return v.GeoRestrictions
	}).(GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput)
}

// The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
func (o GetCdnDistributionRoutingRuleUpstreamOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetCdnDistributionRoutingRuleUpstream) string { return v.Host }).(pulumi.StringOutput)
}

// Rate limit class that will be applied to limit the number of incoming requests per IP.
func (o GetCdnDistributionRoutingRuleUpstreamOutput) RateLimitClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetCdnDistributionRoutingRuleUpstream) string { return v.RateLimitClass }).(pulumi.StringOutput)
}

// The SNI (Server Name Indication) mode of the upstream. It supports two modes: 1) `distribution`: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured domain of the CDN distribution; 2) `origin`: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured upstream/origin hostname.
func (o GetCdnDistributionRoutingRuleUpstreamOutput) SniMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCdnDistributionRoutingRuleUpstream) string { return v.SniMode }).(pulumi.StringOutput)
}

// Enable or disable WAF to protect the upstream host.
func (o GetCdnDistributionRoutingRuleUpstreamOutput) Waf() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCdnDistributionRoutingRuleUpstream) bool { return v.Waf }).(pulumi.BoolOutput)
}

type GetCdnDistributionRoutingRuleUpstreamArrayOutput struct{ *pulumi.OutputState }

func (GetCdnDistributionRoutingRuleUpstreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCdnDistributionRoutingRuleUpstream)(nil)).Elem()
}

func (o GetCdnDistributionRoutingRuleUpstreamArrayOutput) ToGetCdnDistributionRoutingRuleUpstreamArrayOutput() GetCdnDistributionRoutingRuleUpstreamArrayOutput {
	return o
}

func (o GetCdnDistributionRoutingRuleUpstreamArrayOutput) ToGetCdnDistributionRoutingRuleUpstreamArrayOutputWithContext(ctx context.Context) GetCdnDistributionRoutingRuleUpstreamArrayOutput {
	return o
}

func (o GetCdnDistributionRoutingRuleUpstreamArrayOutput) Index(i pulumi.IntInput) GetCdnDistributionRoutingRuleUpstreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCdnDistributionRoutingRuleUpstream {
		return vs[0].([]GetCdnDistributionRoutingRuleUpstream)[vs[1].(int)]
	}).(GetCdnDistributionRoutingRuleUpstreamOutput)
}

type GetCdnDistributionRoutingRuleUpstreamGeoRestriction struct {
	// List of allowed countries
	AllowLists []string `pulumi:"allowLists"`
	// List of blocked countries
	BlockLists []string `pulumi:"blockLists"`
}

// GetCdnDistributionRoutingRuleUpstreamGeoRestrictionInput is an input type that accepts GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArgs and GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput values.
// You can construct a concrete instance of `GetCdnDistributionRoutingRuleUpstreamGeoRestrictionInput` via:
//
//	GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArgs{...}
type GetCdnDistributionRoutingRuleUpstreamGeoRestrictionInput interface {
	pulumi.Input

	ToGetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput() GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput
	ToGetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutputWithContext(context.Context) GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput
}

type GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArgs struct {
	// List of allowed countries
	AllowLists pulumi.StringArrayInput `pulumi:"allowLists"`
	// List of blocked countries
	BlockLists pulumi.StringArrayInput `pulumi:"blockLists"`
}

func (GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCdnDistributionRoutingRuleUpstreamGeoRestriction)(nil)).Elem()
}

func (i GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArgs) ToGetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput() GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput {
	return i.ToGetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutputWithContext(context.Background())
}

func (i GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArgs) ToGetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutputWithContext(ctx context.Context) GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput)
}

// GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayInput is an input type that accepts GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArray and GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput values.
// You can construct a concrete instance of `GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayInput` via:
//
//	GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArray{ GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArgs{...} }
type GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayInput interface {
	pulumi.Input

	ToGetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput() GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput
	ToGetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutputWithContext(context.Context) GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput
}

type GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArray []GetCdnDistributionRoutingRuleUpstreamGeoRestrictionInput

func (GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCdnDistributionRoutingRuleUpstreamGeoRestriction)(nil)).Elem()
}

func (i GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArray) ToGetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput() GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput {
	return i.ToGetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutputWithContext(context.Background())
}

func (i GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArray) ToGetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutputWithContext(ctx context.Context) GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput)
}

type GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput struct{ *pulumi.OutputState }

func (GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCdnDistributionRoutingRuleUpstreamGeoRestriction)(nil)).Elem()
}

func (o GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput) ToGetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput() GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput {
	return o
}

func (o GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput) ToGetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutputWithContext(ctx context.Context) GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput {
	return o
}

// List of allowed countries
func (o GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCdnDistributionRoutingRuleUpstreamGeoRestriction) []string { return v.AllowLists }).(pulumi.StringArrayOutput)
}

// List of blocked countries
func (o GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput) BlockLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCdnDistributionRoutingRuleUpstreamGeoRestriction) []string { return v.BlockLists }).(pulumi.StringArrayOutput)
}

type GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput struct{ *pulumi.OutputState }

func (GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCdnDistributionRoutingRuleUpstreamGeoRestriction)(nil)).Elem()
}

func (o GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput) ToGetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput() GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput {
	return o
}

func (o GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput) ToGetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutputWithContext(ctx context.Context) GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput {
	return o
}

func (o GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput) Index(i pulumi.IntInput) GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCdnDistributionRoutingRuleUpstreamGeoRestriction {
		return vs[0].([]GetCdnDistributionRoutingRuleUpstreamGeoRestriction)[vs[1].(int)]
	}).(GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput)
}

type GetContainerRegistryFeature struct {
	VulnerabilityScanning bool `pulumi:"vulnerabilityScanning"`
}

// GetContainerRegistryFeatureInput is an input type that accepts GetContainerRegistryFeatureArgs and GetContainerRegistryFeatureOutput values.
// You can construct a concrete instance of `GetContainerRegistryFeatureInput` via:
//
//	GetContainerRegistryFeatureArgs{...}
type GetContainerRegistryFeatureInput interface {
	pulumi.Input

	ToGetContainerRegistryFeatureOutput() GetContainerRegistryFeatureOutput
	ToGetContainerRegistryFeatureOutputWithContext(context.Context) GetContainerRegistryFeatureOutput
}

type GetContainerRegistryFeatureArgs struct {
	VulnerabilityScanning pulumi.BoolInput `pulumi:"vulnerabilityScanning"`
}

func (GetContainerRegistryFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryFeature)(nil)).Elem()
}

func (i GetContainerRegistryFeatureArgs) ToGetContainerRegistryFeatureOutput() GetContainerRegistryFeatureOutput {
	return i.ToGetContainerRegistryFeatureOutputWithContext(context.Background())
}

func (i GetContainerRegistryFeatureArgs) ToGetContainerRegistryFeatureOutputWithContext(ctx context.Context) GetContainerRegistryFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryFeatureOutput)
}

// GetContainerRegistryFeatureArrayInput is an input type that accepts GetContainerRegistryFeatureArray and GetContainerRegistryFeatureArrayOutput values.
// You can construct a concrete instance of `GetContainerRegistryFeatureArrayInput` via:
//
//	GetContainerRegistryFeatureArray{ GetContainerRegistryFeatureArgs{...} }
type GetContainerRegistryFeatureArrayInput interface {
	pulumi.Input

	ToGetContainerRegistryFeatureArrayOutput() GetContainerRegistryFeatureArrayOutput
	ToGetContainerRegistryFeatureArrayOutputWithContext(context.Context) GetContainerRegistryFeatureArrayOutput
}

type GetContainerRegistryFeatureArray []GetContainerRegistryFeatureInput

func (GetContainerRegistryFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryFeature)(nil)).Elem()
}

func (i GetContainerRegistryFeatureArray) ToGetContainerRegistryFeatureArrayOutput() GetContainerRegistryFeatureArrayOutput {
	return i.ToGetContainerRegistryFeatureArrayOutputWithContext(context.Background())
}

func (i GetContainerRegistryFeatureArray) ToGetContainerRegistryFeatureArrayOutputWithContext(ctx context.Context) GetContainerRegistryFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryFeatureArrayOutput)
}

type GetContainerRegistryFeatureOutput struct{ *pulumi.OutputState }

func (GetContainerRegistryFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryFeature)(nil)).Elem()
}

func (o GetContainerRegistryFeatureOutput) ToGetContainerRegistryFeatureOutput() GetContainerRegistryFeatureOutput {
	return o
}

func (o GetContainerRegistryFeatureOutput) ToGetContainerRegistryFeatureOutputWithContext(ctx context.Context) GetContainerRegistryFeatureOutput {
	return o
}

func (o GetContainerRegistryFeatureOutput) VulnerabilityScanning() pulumi.BoolOutput {
	return o.ApplyT(func(v GetContainerRegistryFeature) bool { return v.VulnerabilityScanning }).(pulumi.BoolOutput)
}

type GetContainerRegistryFeatureArrayOutput struct{ *pulumi.OutputState }

func (GetContainerRegistryFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryFeature)(nil)).Elem()
}

func (o GetContainerRegistryFeatureArrayOutput) ToGetContainerRegistryFeatureArrayOutput() GetContainerRegistryFeatureArrayOutput {
	return o
}

func (o GetContainerRegistryFeatureArrayOutput) ToGetContainerRegistryFeatureArrayOutputWithContext(ctx context.Context) GetContainerRegistryFeatureArrayOutput {
	return o
}

func (o GetContainerRegistryFeatureArrayOutput) Index(i pulumi.IntInput) GetContainerRegistryFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerRegistryFeature {
		return vs[0].([]GetContainerRegistryFeature)[vs[1].(int)]
	}).(GetContainerRegistryFeatureOutput)
}

type GetContainerRegistryGarbageCollectionSchedule struct {
	Days []string `pulumi:"days"`
	Time string   `pulumi:"time"`
}

// GetContainerRegistryGarbageCollectionScheduleInput is an input type that accepts GetContainerRegistryGarbageCollectionScheduleArgs and GetContainerRegistryGarbageCollectionScheduleOutput values.
// You can construct a concrete instance of `GetContainerRegistryGarbageCollectionScheduleInput` via:
//
//	GetContainerRegistryGarbageCollectionScheduleArgs{...}
type GetContainerRegistryGarbageCollectionScheduleInput interface {
	pulumi.Input

	ToGetContainerRegistryGarbageCollectionScheduleOutput() GetContainerRegistryGarbageCollectionScheduleOutput
	ToGetContainerRegistryGarbageCollectionScheduleOutputWithContext(context.Context) GetContainerRegistryGarbageCollectionScheduleOutput
}

type GetContainerRegistryGarbageCollectionScheduleArgs struct {
	Days pulumi.StringArrayInput `pulumi:"days"`
	Time pulumi.StringInput      `pulumi:"time"`
}

func (GetContainerRegistryGarbageCollectionScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryGarbageCollectionSchedule)(nil)).Elem()
}

func (i GetContainerRegistryGarbageCollectionScheduleArgs) ToGetContainerRegistryGarbageCollectionScheduleOutput() GetContainerRegistryGarbageCollectionScheduleOutput {
	return i.ToGetContainerRegistryGarbageCollectionScheduleOutputWithContext(context.Background())
}

func (i GetContainerRegistryGarbageCollectionScheduleArgs) ToGetContainerRegistryGarbageCollectionScheduleOutputWithContext(ctx context.Context) GetContainerRegistryGarbageCollectionScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryGarbageCollectionScheduleOutput)
}

// GetContainerRegistryGarbageCollectionScheduleArrayInput is an input type that accepts GetContainerRegistryGarbageCollectionScheduleArray and GetContainerRegistryGarbageCollectionScheduleArrayOutput values.
// You can construct a concrete instance of `GetContainerRegistryGarbageCollectionScheduleArrayInput` via:
//
//	GetContainerRegistryGarbageCollectionScheduleArray{ GetContainerRegistryGarbageCollectionScheduleArgs{...} }
type GetContainerRegistryGarbageCollectionScheduleArrayInput interface {
	pulumi.Input

	ToGetContainerRegistryGarbageCollectionScheduleArrayOutput() GetContainerRegistryGarbageCollectionScheduleArrayOutput
	ToGetContainerRegistryGarbageCollectionScheduleArrayOutputWithContext(context.Context) GetContainerRegistryGarbageCollectionScheduleArrayOutput
}

type GetContainerRegistryGarbageCollectionScheduleArray []GetContainerRegistryGarbageCollectionScheduleInput

func (GetContainerRegistryGarbageCollectionScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryGarbageCollectionSchedule)(nil)).Elem()
}

func (i GetContainerRegistryGarbageCollectionScheduleArray) ToGetContainerRegistryGarbageCollectionScheduleArrayOutput() GetContainerRegistryGarbageCollectionScheduleArrayOutput {
	return i.ToGetContainerRegistryGarbageCollectionScheduleArrayOutputWithContext(context.Background())
}

func (i GetContainerRegistryGarbageCollectionScheduleArray) ToGetContainerRegistryGarbageCollectionScheduleArrayOutputWithContext(ctx context.Context) GetContainerRegistryGarbageCollectionScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryGarbageCollectionScheduleArrayOutput)
}

type GetContainerRegistryGarbageCollectionScheduleOutput struct{ *pulumi.OutputState }

func (GetContainerRegistryGarbageCollectionScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryGarbageCollectionSchedule)(nil)).Elem()
}

func (o GetContainerRegistryGarbageCollectionScheduleOutput) ToGetContainerRegistryGarbageCollectionScheduleOutput() GetContainerRegistryGarbageCollectionScheduleOutput {
	return o
}

func (o GetContainerRegistryGarbageCollectionScheduleOutput) ToGetContainerRegistryGarbageCollectionScheduleOutputWithContext(ctx context.Context) GetContainerRegistryGarbageCollectionScheduleOutput {
	return o
}

func (o GetContainerRegistryGarbageCollectionScheduleOutput) Days() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetContainerRegistryGarbageCollectionSchedule) []string { return v.Days }).(pulumi.StringArrayOutput)
}

func (o GetContainerRegistryGarbageCollectionScheduleOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRegistryGarbageCollectionSchedule) string { return v.Time }).(pulumi.StringOutput)
}

type GetContainerRegistryGarbageCollectionScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetContainerRegistryGarbageCollectionScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryGarbageCollectionSchedule)(nil)).Elem()
}

func (o GetContainerRegistryGarbageCollectionScheduleArrayOutput) ToGetContainerRegistryGarbageCollectionScheduleArrayOutput() GetContainerRegistryGarbageCollectionScheduleArrayOutput {
	return o
}

func (o GetContainerRegistryGarbageCollectionScheduleArrayOutput) ToGetContainerRegistryGarbageCollectionScheduleArrayOutputWithContext(ctx context.Context) GetContainerRegistryGarbageCollectionScheduleArrayOutput {
	return o
}

func (o GetContainerRegistryGarbageCollectionScheduleArrayOutput) Index(i pulumi.IntInput) GetContainerRegistryGarbageCollectionScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerRegistryGarbageCollectionSchedule {
		return vs[0].([]GetContainerRegistryGarbageCollectionSchedule)[vs[1].(int)]
	}).(GetContainerRegistryGarbageCollectionScheduleOutput)
}

type GetContainerRegistryMaintenanceWindow struct {
	Days []string `pulumi:"days"`
	Time string   `pulumi:"time"`
}

// GetContainerRegistryMaintenanceWindowInput is an input type that accepts GetContainerRegistryMaintenanceWindowArgs and GetContainerRegistryMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetContainerRegistryMaintenanceWindowInput` via:
//
//	GetContainerRegistryMaintenanceWindowArgs{...}
type GetContainerRegistryMaintenanceWindowInput interface {
	pulumi.Input

	ToGetContainerRegistryMaintenanceWindowOutput() GetContainerRegistryMaintenanceWindowOutput
	ToGetContainerRegistryMaintenanceWindowOutputWithContext(context.Context) GetContainerRegistryMaintenanceWindowOutput
}

type GetContainerRegistryMaintenanceWindowArgs struct {
	Days pulumi.StringArrayInput `pulumi:"days"`
	Time pulumi.StringInput      `pulumi:"time"`
}

func (GetContainerRegistryMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryMaintenanceWindow)(nil)).Elem()
}

func (i GetContainerRegistryMaintenanceWindowArgs) ToGetContainerRegistryMaintenanceWindowOutput() GetContainerRegistryMaintenanceWindowOutput {
	return i.ToGetContainerRegistryMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetContainerRegistryMaintenanceWindowArgs) ToGetContainerRegistryMaintenanceWindowOutputWithContext(ctx context.Context) GetContainerRegistryMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryMaintenanceWindowOutput)
}

// GetContainerRegistryMaintenanceWindowArrayInput is an input type that accepts GetContainerRegistryMaintenanceWindowArray and GetContainerRegistryMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetContainerRegistryMaintenanceWindowArrayInput` via:
//
//	GetContainerRegistryMaintenanceWindowArray{ GetContainerRegistryMaintenanceWindowArgs{...} }
type GetContainerRegistryMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetContainerRegistryMaintenanceWindowArrayOutput() GetContainerRegistryMaintenanceWindowArrayOutput
	ToGetContainerRegistryMaintenanceWindowArrayOutputWithContext(context.Context) GetContainerRegistryMaintenanceWindowArrayOutput
}

type GetContainerRegistryMaintenanceWindowArray []GetContainerRegistryMaintenanceWindowInput

func (GetContainerRegistryMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryMaintenanceWindow)(nil)).Elem()
}

func (i GetContainerRegistryMaintenanceWindowArray) ToGetContainerRegistryMaintenanceWindowArrayOutput() GetContainerRegistryMaintenanceWindowArrayOutput {
	return i.ToGetContainerRegistryMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetContainerRegistryMaintenanceWindowArray) ToGetContainerRegistryMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetContainerRegistryMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryMaintenanceWindowArrayOutput)
}

type GetContainerRegistryMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetContainerRegistryMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryMaintenanceWindow)(nil)).Elem()
}

func (o GetContainerRegistryMaintenanceWindowOutput) ToGetContainerRegistryMaintenanceWindowOutput() GetContainerRegistryMaintenanceWindowOutput {
	return o
}

func (o GetContainerRegistryMaintenanceWindowOutput) ToGetContainerRegistryMaintenanceWindowOutputWithContext(ctx context.Context) GetContainerRegistryMaintenanceWindowOutput {
	return o
}

func (o GetContainerRegistryMaintenanceWindowOutput) Days() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetContainerRegistryMaintenanceWindow) []string { return v.Days }).(pulumi.StringArrayOutput)
}

func (o GetContainerRegistryMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRegistryMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type GetContainerRegistryMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetContainerRegistryMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryMaintenanceWindow)(nil)).Elem()
}

func (o GetContainerRegistryMaintenanceWindowArrayOutput) ToGetContainerRegistryMaintenanceWindowArrayOutput() GetContainerRegistryMaintenanceWindowArrayOutput {
	return o
}

func (o GetContainerRegistryMaintenanceWindowArrayOutput) ToGetContainerRegistryMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetContainerRegistryMaintenanceWindowArrayOutput {
	return o
}

func (o GetContainerRegistryMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetContainerRegistryMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerRegistryMaintenanceWindow {
		return vs[0].([]GetContainerRegistryMaintenanceWindow)[vs[1].(int)]
	}).(GetContainerRegistryMaintenanceWindowOutput)
}

type GetContainerRegistryStorageUsage struct {
	Bytes     int    `pulumi:"bytes"`
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetContainerRegistryStorageUsageInput is an input type that accepts GetContainerRegistryStorageUsageArgs and GetContainerRegistryStorageUsageOutput values.
// You can construct a concrete instance of `GetContainerRegistryStorageUsageInput` via:
//
//	GetContainerRegistryStorageUsageArgs{...}
type GetContainerRegistryStorageUsageInput interface {
	pulumi.Input

	ToGetContainerRegistryStorageUsageOutput() GetContainerRegistryStorageUsageOutput
	ToGetContainerRegistryStorageUsageOutputWithContext(context.Context) GetContainerRegistryStorageUsageOutput
}

type GetContainerRegistryStorageUsageArgs struct {
	Bytes     pulumi.IntInput    `pulumi:"bytes"`
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetContainerRegistryStorageUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryStorageUsage)(nil)).Elem()
}

func (i GetContainerRegistryStorageUsageArgs) ToGetContainerRegistryStorageUsageOutput() GetContainerRegistryStorageUsageOutput {
	return i.ToGetContainerRegistryStorageUsageOutputWithContext(context.Background())
}

func (i GetContainerRegistryStorageUsageArgs) ToGetContainerRegistryStorageUsageOutputWithContext(ctx context.Context) GetContainerRegistryStorageUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryStorageUsageOutput)
}

// GetContainerRegistryStorageUsageArrayInput is an input type that accepts GetContainerRegistryStorageUsageArray and GetContainerRegistryStorageUsageArrayOutput values.
// You can construct a concrete instance of `GetContainerRegistryStorageUsageArrayInput` via:
//
//	GetContainerRegistryStorageUsageArray{ GetContainerRegistryStorageUsageArgs{...} }
type GetContainerRegistryStorageUsageArrayInput interface {
	pulumi.Input

	ToGetContainerRegistryStorageUsageArrayOutput() GetContainerRegistryStorageUsageArrayOutput
	ToGetContainerRegistryStorageUsageArrayOutputWithContext(context.Context) GetContainerRegistryStorageUsageArrayOutput
}

type GetContainerRegistryStorageUsageArray []GetContainerRegistryStorageUsageInput

func (GetContainerRegistryStorageUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryStorageUsage)(nil)).Elem()
}

func (i GetContainerRegistryStorageUsageArray) ToGetContainerRegistryStorageUsageArrayOutput() GetContainerRegistryStorageUsageArrayOutput {
	return i.ToGetContainerRegistryStorageUsageArrayOutputWithContext(context.Background())
}

func (i GetContainerRegistryStorageUsageArray) ToGetContainerRegistryStorageUsageArrayOutputWithContext(ctx context.Context) GetContainerRegistryStorageUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryStorageUsageArrayOutput)
}

type GetContainerRegistryStorageUsageOutput struct{ *pulumi.OutputState }

func (GetContainerRegistryStorageUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryStorageUsage)(nil)).Elem()
}

func (o GetContainerRegistryStorageUsageOutput) ToGetContainerRegistryStorageUsageOutput() GetContainerRegistryStorageUsageOutput {
	return o
}

func (o GetContainerRegistryStorageUsageOutput) ToGetContainerRegistryStorageUsageOutputWithContext(ctx context.Context) GetContainerRegistryStorageUsageOutput {
	return o
}

func (o GetContainerRegistryStorageUsageOutput) Bytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerRegistryStorageUsage) int { return v.Bytes }).(pulumi.IntOutput)
}

func (o GetContainerRegistryStorageUsageOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRegistryStorageUsage) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetContainerRegistryStorageUsageArrayOutput struct{ *pulumi.OutputState }

func (GetContainerRegistryStorageUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryStorageUsage)(nil)).Elem()
}

func (o GetContainerRegistryStorageUsageArrayOutput) ToGetContainerRegistryStorageUsageArrayOutput() GetContainerRegistryStorageUsageArrayOutput {
	return o
}

func (o GetContainerRegistryStorageUsageArrayOutput) ToGetContainerRegistryStorageUsageArrayOutputWithContext(ctx context.Context) GetContainerRegistryStorageUsageArrayOutput {
	return o
}

func (o GetContainerRegistryStorageUsageArrayOutput) Index(i pulumi.IntInput) GetContainerRegistryStorageUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerRegistryStorageUsage {
		return vs[0].([]GetContainerRegistryStorageUsage)[vs[1].(int)]
	}).(GetContainerRegistryStorageUsageOutput)
}

type GetContainerRegistryTokenCredential struct {
	// * `expiry-date`
	Username string `pulumi:"username"`
}

// GetContainerRegistryTokenCredentialInput is an input type that accepts GetContainerRegistryTokenCredentialArgs and GetContainerRegistryTokenCredentialOutput values.
// You can construct a concrete instance of `GetContainerRegistryTokenCredentialInput` via:
//
//	GetContainerRegistryTokenCredentialArgs{...}
type GetContainerRegistryTokenCredentialInput interface {
	pulumi.Input

	ToGetContainerRegistryTokenCredentialOutput() GetContainerRegistryTokenCredentialOutput
	ToGetContainerRegistryTokenCredentialOutputWithContext(context.Context) GetContainerRegistryTokenCredentialOutput
}

type GetContainerRegistryTokenCredentialArgs struct {
	// * `expiry-date`
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetContainerRegistryTokenCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryTokenCredential)(nil)).Elem()
}

func (i GetContainerRegistryTokenCredentialArgs) ToGetContainerRegistryTokenCredentialOutput() GetContainerRegistryTokenCredentialOutput {
	return i.ToGetContainerRegistryTokenCredentialOutputWithContext(context.Background())
}

func (i GetContainerRegistryTokenCredentialArgs) ToGetContainerRegistryTokenCredentialOutputWithContext(ctx context.Context) GetContainerRegistryTokenCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryTokenCredentialOutput)
}

// GetContainerRegistryTokenCredentialArrayInput is an input type that accepts GetContainerRegistryTokenCredentialArray and GetContainerRegistryTokenCredentialArrayOutput values.
// You can construct a concrete instance of `GetContainerRegistryTokenCredentialArrayInput` via:
//
//	GetContainerRegistryTokenCredentialArray{ GetContainerRegistryTokenCredentialArgs{...} }
type GetContainerRegistryTokenCredentialArrayInput interface {
	pulumi.Input

	ToGetContainerRegistryTokenCredentialArrayOutput() GetContainerRegistryTokenCredentialArrayOutput
	ToGetContainerRegistryTokenCredentialArrayOutputWithContext(context.Context) GetContainerRegistryTokenCredentialArrayOutput
}

type GetContainerRegistryTokenCredentialArray []GetContainerRegistryTokenCredentialInput

func (GetContainerRegistryTokenCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryTokenCredential)(nil)).Elem()
}

func (i GetContainerRegistryTokenCredentialArray) ToGetContainerRegistryTokenCredentialArrayOutput() GetContainerRegistryTokenCredentialArrayOutput {
	return i.ToGetContainerRegistryTokenCredentialArrayOutputWithContext(context.Background())
}

func (i GetContainerRegistryTokenCredentialArray) ToGetContainerRegistryTokenCredentialArrayOutputWithContext(ctx context.Context) GetContainerRegistryTokenCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryTokenCredentialArrayOutput)
}

type GetContainerRegistryTokenCredentialOutput struct{ *pulumi.OutputState }

func (GetContainerRegistryTokenCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryTokenCredential)(nil)).Elem()
}

func (o GetContainerRegistryTokenCredentialOutput) ToGetContainerRegistryTokenCredentialOutput() GetContainerRegistryTokenCredentialOutput {
	return o
}

func (o GetContainerRegistryTokenCredentialOutput) ToGetContainerRegistryTokenCredentialOutputWithContext(ctx context.Context) GetContainerRegistryTokenCredentialOutput {
	return o
}

// * `expiry-date`
func (o GetContainerRegistryTokenCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRegistryTokenCredential) string { return v.Username }).(pulumi.StringOutput)
}

type GetContainerRegistryTokenCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetContainerRegistryTokenCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryTokenCredential)(nil)).Elem()
}

func (o GetContainerRegistryTokenCredentialArrayOutput) ToGetContainerRegistryTokenCredentialArrayOutput() GetContainerRegistryTokenCredentialArrayOutput {
	return o
}

func (o GetContainerRegistryTokenCredentialArrayOutput) ToGetContainerRegistryTokenCredentialArrayOutputWithContext(ctx context.Context) GetContainerRegistryTokenCredentialArrayOutput {
	return o
}

func (o GetContainerRegistryTokenCredentialArrayOutput) Index(i pulumi.IntInput) GetContainerRegistryTokenCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerRegistryTokenCredential {
		return vs[0].([]GetContainerRegistryTokenCredential)[vs[1].(int)]
	}).(GetContainerRegistryTokenCredentialOutput)
}

type GetContainerRegistryTokenScope struct {
	Actions []string `pulumi:"actions"`
	// Name of an existing container registry token that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name string `pulumi:"name"`
	Type string `pulumi:"type"`
}

// GetContainerRegistryTokenScopeInput is an input type that accepts GetContainerRegistryTokenScopeArgs and GetContainerRegistryTokenScopeOutput values.
// You can construct a concrete instance of `GetContainerRegistryTokenScopeInput` via:
//
//	GetContainerRegistryTokenScopeArgs{...}
type GetContainerRegistryTokenScopeInput interface {
	pulumi.Input

	ToGetContainerRegistryTokenScopeOutput() GetContainerRegistryTokenScopeOutput
	ToGetContainerRegistryTokenScopeOutputWithContext(context.Context) GetContainerRegistryTokenScopeOutput
}

type GetContainerRegistryTokenScopeArgs struct {
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// Name of an existing container registry token that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name pulumi.StringInput `pulumi:"name"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetContainerRegistryTokenScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryTokenScope)(nil)).Elem()
}

func (i GetContainerRegistryTokenScopeArgs) ToGetContainerRegistryTokenScopeOutput() GetContainerRegistryTokenScopeOutput {
	return i.ToGetContainerRegistryTokenScopeOutputWithContext(context.Background())
}

func (i GetContainerRegistryTokenScopeArgs) ToGetContainerRegistryTokenScopeOutputWithContext(ctx context.Context) GetContainerRegistryTokenScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryTokenScopeOutput)
}

// GetContainerRegistryTokenScopeArrayInput is an input type that accepts GetContainerRegistryTokenScopeArray and GetContainerRegistryTokenScopeArrayOutput values.
// You can construct a concrete instance of `GetContainerRegistryTokenScopeArrayInput` via:
//
//	GetContainerRegistryTokenScopeArray{ GetContainerRegistryTokenScopeArgs{...} }
type GetContainerRegistryTokenScopeArrayInput interface {
	pulumi.Input

	ToGetContainerRegistryTokenScopeArrayOutput() GetContainerRegistryTokenScopeArrayOutput
	ToGetContainerRegistryTokenScopeArrayOutputWithContext(context.Context) GetContainerRegistryTokenScopeArrayOutput
}

type GetContainerRegistryTokenScopeArray []GetContainerRegistryTokenScopeInput

func (GetContainerRegistryTokenScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryTokenScope)(nil)).Elem()
}

func (i GetContainerRegistryTokenScopeArray) ToGetContainerRegistryTokenScopeArrayOutput() GetContainerRegistryTokenScopeArrayOutput {
	return i.ToGetContainerRegistryTokenScopeArrayOutputWithContext(context.Background())
}

func (i GetContainerRegistryTokenScopeArray) ToGetContainerRegistryTokenScopeArrayOutputWithContext(ctx context.Context) GetContainerRegistryTokenScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryTokenScopeArrayOutput)
}

type GetContainerRegistryTokenScopeOutput struct{ *pulumi.OutputState }

func (GetContainerRegistryTokenScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryTokenScope)(nil)).Elem()
}

func (o GetContainerRegistryTokenScopeOutput) ToGetContainerRegistryTokenScopeOutput() GetContainerRegistryTokenScopeOutput {
	return o
}

func (o GetContainerRegistryTokenScopeOutput) ToGetContainerRegistryTokenScopeOutputWithContext(ctx context.Context) GetContainerRegistryTokenScopeOutput {
	return o
}

func (o GetContainerRegistryTokenScopeOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetContainerRegistryTokenScope) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// Name of an existing container registry token that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
func (o GetContainerRegistryTokenScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRegistryTokenScope) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetContainerRegistryTokenScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerRegistryTokenScope) string { return v.Type }).(pulumi.StringOutput)
}

type GetContainerRegistryTokenScopeArrayOutput struct{ *pulumi.OutputState }

func (GetContainerRegistryTokenScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryTokenScope)(nil)).Elem()
}

func (o GetContainerRegistryTokenScopeArrayOutput) ToGetContainerRegistryTokenScopeArrayOutput() GetContainerRegistryTokenScopeArrayOutput {
	return o
}

func (o GetContainerRegistryTokenScopeArrayOutput) ToGetContainerRegistryTokenScopeArrayOutputWithContext(ctx context.Context) GetContainerRegistryTokenScopeArrayOutput {
	return o
}

func (o GetContainerRegistryTokenScopeArrayOutput) Index(i pulumi.IntInput) GetContainerRegistryTokenScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerRegistryTokenScope {
		return vs[0].([]GetContainerRegistryTokenScope)[vs[1].(int)]
	}).(GetContainerRegistryTokenScopeOutput)
}

type GetCubeServerCdrom struct {
	// Cloud init compatibility
	CloudInit string `pulumi:"cloudInit"`
	// Is capable of CPU hot plug (no reboot required)
	CpuHotPlug bool `pulumi:"cpuHotPlug"`
	// Is capable of CPU hot unplug (no reboot required)
	CpuHotUnplug bool `pulumi:"cpuHotUnplug"`
	// Description of cdrom
	Description string `pulumi:"description"`
	// Is capable of SCSI drive hot plug (no reboot required)
	DiscScsiHotPlug bool `pulumi:"discScsiHotPlug"`
	// Is capable of SCSI drive hot unplug (no reboot required)
	DiscScsiHotUnplug bool `pulumi:"discScsiHotUnplug"`
	// Is capable of Virt-IO drive hot plug (no reboot required)
	DiscVirtioHotPlug bool `pulumi:"discVirtioHotPlug"`
	// Is capable of Virt-IO drive hot unplug (no reboot required)
	DiscVirtioHotUnplug bool `pulumi:"discVirtioHotUnplug"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id string `pulumi:"id"`
	// List of image aliases mapped for this Image
	ImageAliases []string `pulumi:"imageAliases"`
	// Type of image
	ImageType string `pulumi:"imageType"`
	// OS type of this volume
	LicenceType string `pulumi:"licenceType"`
	// Location of that image/snapshot
	Location string `pulumi:"location"`
	// Name of an existing server that you want to search for.
	Name string `pulumi:"name"`
	// Is capable of nic hot plug (no reboot required)
	NicHotPlug bool `pulumi:"nicHotPlug"`
	// Is capable of nic hot unplug (no reboot required)
	NicHotUnplug bool `pulumi:"nicHotUnplug"`
	// Indicates if the image is part of the public repository or not
	Public bool `pulumi:"public"`
	// Is capable of memory hot plug (no reboot required)
	RamHotPlug bool `pulumi:"ramHotPlug"`
	// Is capable of memory hot unplug (no reboot required)
	RamHotUnplug bool `pulumi:"ramHotUnplug"`
	// The size of the image in GB
	Size float64 `pulumi:"size"`
}

// GetCubeServerCdromInput is an input type that accepts GetCubeServerCdromArgs and GetCubeServerCdromOutput values.
// You can construct a concrete instance of `GetCubeServerCdromInput` via:
//
//	GetCubeServerCdromArgs{...}
type GetCubeServerCdromInput interface {
	pulumi.Input

	ToGetCubeServerCdromOutput() GetCubeServerCdromOutput
	ToGetCubeServerCdromOutputWithContext(context.Context) GetCubeServerCdromOutput
}

type GetCubeServerCdromArgs struct {
	// Cloud init compatibility
	CloudInit pulumi.StringInput `pulumi:"cloudInit"`
	// Is capable of CPU hot plug (no reboot required)
	CpuHotPlug pulumi.BoolInput `pulumi:"cpuHotPlug"`
	// Is capable of CPU hot unplug (no reboot required)
	CpuHotUnplug pulumi.BoolInput `pulumi:"cpuHotUnplug"`
	// Description of cdrom
	Description pulumi.StringInput `pulumi:"description"`
	// Is capable of SCSI drive hot plug (no reboot required)
	DiscScsiHotPlug pulumi.BoolInput `pulumi:"discScsiHotPlug"`
	// Is capable of SCSI drive hot unplug (no reboot required)
	DiscScsiHotUnplug pulumi.BoolInput `pulumi:"discScsiHotUnplug"`
	// Is capable of Virt-IO drive hot plug (no reboot required)
	DiscVirtioHotPlug pulumi.BoolInput `pulumi:"discVirtioHotPlug"`
	// Is capable of Virt-IO drive hot unplug (no reboot required)
	DiscVirtioHotUnplug pulumi.BoolInput `pulumi:"discVirtioHotUnplug"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id pulumi.StringInput `pulumi:"id"`
	// List of image aliases mapped for this Image
	ImageAliases pulumi.StringArrayInput `pulumi:"imageAliases"`
	// Type of image
	ImageType pulumi.StringInput `pulumi:"imageType"`
	// OS type of this volume
	LicenceType pulumi.StringInput `pulumi:"licenceType"`
	// Location of that image/snapshot
	Location pulumi.StringInput `pulumi:"location"`
	// Name of an existing server that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
	// Is capable of nic hot plug (no reboot required)
	NicHotPlug pulumi.BoolInput `pulumi:"nicHotPlug"`
	// Is capable of nic hot unplug (no reboot required)
	NicHotUnplug pulumi.BoolInput `pulumi:"nicHotUnplug"`
	// Indicates if the image is part of the public repository or not
	Public pulumi.BoolInput `pulumi:"public"`
	// Is capable of memory hot plug (no reboot required)
	RamHotPlug pulumi.BoolInput `pulumi:"ramHotPlug"`
	// Is capable of memory hot unplug (no reboot required)
	RamHotUnplug pulumi.BoolInput `pulumi:"ramHotUnplug"`
	// The size of the image in GB
	Size pulumi.Float64Input `pulumi:"size"`
}

func (GetCubeServerCdromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCubeServerCdrom)(nil)).Elem()
}

func (i GetCubeServerCdromArgs) ToGetCubeServerCdromOutput() GetCubeServerCdromOutput {
	return i.ToGetCubeServerCdromOutputWithContext(context.Background())
}

func (i GetCubeServerCdromArgs) ToGetCubeServerCdromOutputWithContext(ctx context.Context) GetCubeServerCdromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCubeServerCdromOutput)
}

// GetCubeServerCdromArrayInput is an input type that accepts GetCubeServerCdromArray and GetCubeServerCdromArrayOutput values.
// You can construct a concrete instance of `GetCubeServerCdromArrayInput` via:
//
//	GetCubeServerCdromArray{ GetCubeServerCdromArgs{...} }
type GetCubeServerCdromArrayInput interface {
	pulumi.Input

	ToGetCubeServerCdromArrayOutput() GetCubeServerCdromArrayOutput
	ToGetCubeServerCdromArrayOutputWithContext(context.Context) GetCubeServerCdromArrayOutput
}

type GetCubeServerCdromArray []GetCubeServerCdromInput

func (GetCubeServerCdromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCubeServerCdrom)(nil)).Elem()
}

func (i GetCubeServerCdromArray) ToGetCubeServerCdromArrayOutput() GetCubeServerCdromArrayOutput {
	return i.ToGetCubeServerCdromArrayOutputWithContext(context.Background())
}

func (i GetCubeServerCdromArray) ToGetCubeServerCdromArrayOutputWithContext(ctx context.Context) GetCubeServerCdromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCubeServerCdromArrayOutput)
}

type GetCubeServerCdromOutput struct{ *pulumi.OutputState }

func (GetCubeServerCdromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCubeServerCdrom)(nil)).Elem()
}

func (o GetCubeServerCdromOutput) ToGetCubeServerCdromOutput() GetCubeServerCdromOutput {
	return o
}

func (o GetCubeServerCdromOutput) ToGetCubeServerCdromOutputWithContext(ctx context.Context) GetCubeServerCdromOutput {
	return o
}

// Cloud init compatibility
func (o GetCubeServerCdromOutput) CloudInit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) string { return v.CloudInit }).(pulumi.StringOutput)
}

// Is capable of CPU hot plug (no reboot required)
func (o GetCubeServerCdromOutput) CpuHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) bool { return v.CpuHotPlug }).(pulumi.BoolOutput)
}

// Is capable of CPU hot unplug (no reboot required)
func (o GetCubeServerCdromOutput) CpuHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) bool { return v.CpuHotUnplug }).(pulumi.BoolOutput)
}

// Description of cdrom
func (o GetCubeServerCdromOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) string { return v.Description }).(pulumi.StringOutput)
}

// Is capable of SCSI drive hot plug (no reboot required)
func (o GetCubeServerCdromOutput) DiscScsiHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) bool { return v.DiscScsiHotPlug }).(pulumi.BoolOutput)
}

// Is capable of SCSI drive hot unplug (no reboot required)
func (o GetCubeServerCdromOutput) DiscScsiHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) bool { return v.DiscScsiHotUnplug }).(pulumi.BoolOutput)
}

// Is capable of Virt-IO drive hot plug (no reboot required)
func (o GetCubeServerCdromOutput) DiscVirtioHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) bool { return v.DiscVirtioHotPlug }).(pulumi.BoolOutput)
}

// Is capable of Virt-IO drive hot unplug (no reboot required)
func (o GetCubeServerCdromOutput) DiscVirtioHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) bool { return v.DiscVirtioHotUnplug }).(pulumi.BoolOutput)
}

// ID of the server you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetCubeServerCdromOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) string { return v.Id }).(pulumi.StringOutput)
}

// List of image aliases mapped for this Image
func (o GetCubeServerCdromOutput) ImageAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) []string { return v.ImageAliases }).(pulumi.StringArrayOutput)
}

// Type of image
func (o GetCubeServerCdromOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) string { return v.ImageType }).(pulumi.StringOutput)
}

// OS type of this volume
func (o GetCubeServerCdromOutput) LicenceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) string { return v.LicenceType }).(pulumi.StringOutput)
}

// Location of that image/snapshot
func (o GetCubeServerCdromOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) string { return v.Location }).(pulumi.StringOutput)
}

// Name of an existing server that you want to search for.
func (o GetCubeServerCdromOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) string { return v.Name }).(pulumi.StringOutput)
}

// Is capable of nic hot plug (no reboot required)
func (o GetCubeServerCdromOutput) NicHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) bool { return v.NicHotPlug }).(pulumi.BoolOutput)
}

// Is capable of nic hot unplug (no reboot required)
func (o GetCubeServerCdromOutput) NicHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) bool { return v.NicHotUnplug }).(pulumi.BoolOutput)
}

// Indicates if the image is part of the public repository or not
func (o GetCubeServerCdromOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) bool { return v.Public }).(pulumi.BoolOutput)
}

// Is capable of memory hot plug (no reboot required)
func (o GetCubeServerCdromOutput) RamHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) bool { return v.RamHotPlug }).(pulumi.BoolOutput)
}

// Is capable of memory hot unplug (no reboot required)
func (o GetCubeServerCdromOutput) RamHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerCdrom) bool { return v.RamHotUnplug }).(pulumi.BoolOutput)
}

// The size of the image in GB
func (o GetCubeServerCdromOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v GetCubeServerCdrom) float64 { return v.Size }).(pulumi.Float64Output)
}

type GetCubeServerCdromArrayOutput struct{ *pulumi.OutputState }

func (GetCubeServerCdromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCubeServerCdrom)(nil)).Elem()
}

func (o GetCubeServerCdromArrayOutput) ToGetCubeServerCdromArrayOutput() GetCubeServerCdromArrayOutput {
	return o
}

func (o GetCubeServerCdromArrayOutput) ToGetCubeServerCdromArrayOutputWithContext(ctx context.Context) GetCubeServerCdromArrayOutput {
	return o
}

func (o GetCubeServerCdromArrayOutput) Index(i pulumi.IntInput) GetCubeServerCdromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCubeServerCdrom {
		return vs[0].([]GetCubeServerCdrom)[vs[1].(int)]
	}).(GetCubeServerCdromOutput)
}

type GetCubeServerNic struct {
	// The Logical Unit Number (LUN) of the storage volume
	DeviceNumber int `pulumi:"deviceNumber"`
	// Indicates if the nic will reserve an IP using DHCP
	Dhcp   bool  `pulumi:"dhcp"`
	Dhcpv6 *bool `pulumi:"dhcpv6"`
	// Activate or deactivate the firewall
	FirewallActive bool `pulumi:"firewallActive"`
	// list of
	FirewallRules []GetCubeServerNicFirewallRule `pulumi:"firewallRules"`
	// The type of firewall rules that will be allowed on the NIC
	FirewallType string `pulumi:"firewallType"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id string `pulumi:"id"`
	// Collection of IP addresses assigned to a nic
	Ips           []string `pulumi:"ips"`
	Ipv6CidrBlock string   `pulumi:"ipv6CidrBlock"`
	Ipv6Ips       []string `pulumi:"ipv6Ips"`
	// The LAN ID the NIC will sit on
	Lan int `pulumi:"lan"`
	// The MAC address of the NIC
	Mac string `pulumi:"mac"`
	// Name of an existing server that you want to search for.
	Name string `pulumi:"name"`
	// The PCI slot number of the Nic
	PciSlot int `pulumi:"pciSlot"`
}

// GetCubeServerNicInput is an input type that accepts GetCubeServerNicArgs and GetCubeServerNicOutput values.
// You can construct a concrete instance of `GetCubeServerNicInput` via:
//
//	GetCubeServerNicArgs{...}
type GetCubeServerNicInput interface {
	pulumi.Input

	ToGetCubeServerNicOutput() GetCubeServerNicOutput
	ToGetCubeServerNicOutputWithContext(context.Context) GetCubeServerNicOutput
}

type GetCubeServerNicArgs struct {
	// The Logical Unit Number (LUN) of the storage volume
	DeviceNumber pulumi.IntInput `pulumi:"deviceNumber"`
	// Indicates if the nic will reserve an IP using DHCP
	Dhcp   pulumi.BoolInput    `pulumi:"dhcp"`
	Dhcpv6 pulumi.BoolPtrInput `pulumi:"dhcpv6"`
	// Activate or deactivate the firewall
	FirewallActive pulumi.BoolInput `pulumi:"firewallActive"`
	// list of
	FirewallRules GetCubeServerNicFirewallRuleArrayInput `pulumi:"firewallRules"`
	// The type of firewall rules that will be allowed on the NIC
	FirewallType pulumi.StringInput `pulumi:"firewallType"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id pulumi.StringInput `pulumi:"id"`
	// Collection of IP addresses assigned to a nic
	Ips           pulumi.StringArrayInput `pulumi:"ips"`
	Ipv6CidrBlock pulumi.StringInput      `pulumi:"ipv6CidrBlock"`
	Ipv6Ips       pulumi.StringArrayInput `pulumi:"ipv6Ips"`
	// The LAN ID the NIC will sit on
	Lan pulumi.IntInput `pulumi:"lan"`
	// The MAC address of the NIC
	Mac pulumi.StringInput `pulumi:"mac"`
	// Name of an existing server that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
	// The PCI slot number of the Nic
	PciSlot pulumi.IntInput `pulumi:"pciSlot"`
}

func (GetCubeServerNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCubeServerNic)(nil)).Elem()
}

func (i GetCubeServerNicArgs) ToGetCubeServerNicOutput() GetCubeServerNicOutput {
	return i.ToGetCubeServerNicOutputWithContext(context.Background())
}

func (i GetCubeServerNicArgs) ToGetCubeServerNicOutputWithContext(ctx context.Context) GetCubeServerNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCubeServerNicOutput)
}

// GetCubeServerNicArrayInput is an input type that accepts GetCubeServerNicArray and GetCubeServerNicArrayOutput values.
// You can construct a concrete instance of `GetCubeServerNicArrayInput` via:
//
//	GetCubeServerNicArray{ GetCubeServerNicArgs{...} }
type GetCubeServerNicArrayInput interface {
	pulumi.Input

	ToGetCubeServerNicArrayOutput() GetCubeServerNicArrayOutput
	ToGetCubeServerNicArrayOutputWithContext(context.Context) GetCubeServerNicArrayOutput
}

type GetCubeServerNicArray []GetCubeServerNicInput

func (GetCubeServerNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCubeServerNic)(nil)).Elem()
}

func (i GetCubeServerNicArray) ToGetCubeServerNicArrayOutput() GetCubeServerNicArrayOutput {
	return i.ToGetCubeServerNicArrayOutputWithContext(context.Background())
}

func (i GetCubeServerNicArray) ToGetCubeServerNicArrayOutputWithContext(ctx context.Context) GetCubeServerNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCubeServerNicArrayOutput)
}

type GetCubeServerNicOutput struct{ *pulumi.OutputState }

func (GetCubeServerNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCubeServerNic)(nil)).Elem()
}

func (o GetCubeServerNicOutput) ToGetCubeServerNicOutput() GetCubeServerNicOutput {
	return o
}

func (o GetCubeServerNicOutput) ToGetCubeServerNicOutputWithContext(ctx context.Context) GetCubeServerNicOutput {
	return o
}

// The Logical Unit Number (LUN) of the storage volume
func (o GetCubeServerNicOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetCubeServerNic) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

// Indicates if the nic will reserve an IP using DHCP
func (o GetCubeServerNicOutput) Dhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerNic) bool { return v.Dhcp }).(pulumi.BoolOutput)
}

func (o GetCubeServerNicOutput) Dhcpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCubeServerNic) *bool { return v.Dhcpv6 }).(pulumi.BoolPtrOutput)
}

// Activate or deactivate the firewall
func (o GetCubeServerNicOutput) FirewallActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerNic) bool { return v.FirewallActive }).(pulumi.BoolOutput)
}

// list of
func (o GetCubeServerNicOutput) FirewallRules() GetCubeServerNicFirewallRuleArrayOutput {
	return o.ApplyT(func(v GetCubeServerNic) []GetCubeServerNicFirewallRule { return v.FirewallRules }).(GetCubeServerNicFirewallRuleArrayOutput)
}

// The type of firewall rules that will be allowed on the NIC
func (o GetCubeServerNicOutput) FirewallType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerNic) string { return v.FirewallType }).(pulumi.StringOutput)
}

// ID of the server you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetCubeServerNicOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerNic) string { return v.Id }).(pulumi.StringOutput)
}

// Collection of IP addresses assigned to a nic
func (o GetCubeServerNicOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCubeServerNic) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o GetCubeServerNicOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerNic) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

func (o GetCubeServerNicOutput) Ipv6Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCubeServerNic) []string { return v.Ipv6Ips }).(pulumi.StringArrayOutput)
}

// The LAN ID the NIC will sit on
func (o GetCubeServerNicOutput) Lan() pulumi.IntOutput {
	return o.ApplyT(func(v GetCubeServerNic) int { return v.Lan }).(pulumi.IntOutput)
}

// The MAC address of the NIC
func (o GetCubeServerNicOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerNic) string { return v.Mac }).(pulumi.StringOutput)
}

// Name of an existing server that you want to search for.
func (o GetCubeServerNicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerNic) string { return v.Name }).(pulumi.StringOutput)
}

// The PCI slot number of the Nic
func (o GetCubeServerNicOutput) PciSlot() pulumi.IntOutput {
	return o.ApplyT(func(v GetCubeServerNic) int { return v.PciSlot }).(pulumi.IntOutput)
}

type GetCubeServerNicArrayOutput struct{ *pulumi.OutputState }

func (GetCubeServerNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCubeServerNic)(nil)).Elem()
}

func (o GetCubeServerNicArrayOutput) ToGetCubeServerNicArrayOutput() GetCubeServerNicArrayOutput {
	return o
}

func (o GetCubeServerNicArrayOutput) ToGetCubeServerNicArrayOutputWithContext(ctx context.Context) GetCubeServerNicArrayOutput {
	return o
}

func (o GetCubeServerNicArrayOutput) Index(i pulumi.IntInput) GetCubeServerNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCubeServerNic {
		return vs[0].([]GetCubeServerNic)[vs[1].(int)]
	}).(GetCubeServerNicOutput)
}

type GetCubeServerNicFirewallRule struct {
	// Defines the allowed code (from 0 to 254) if protocol ICMP is chosen
	IcmpCode int `pulumi:"icmpCode"`
	// Defines the allowed type (from 0 to 254) if the protocol ICMP is chosen
	IcmpType int `pulumi:"icmpType"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id string `pulumi:"id"`
	// Name of an existing server that you want to search for.
	Name string `pulumi:"name"`
	// Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen
	PortRangeEnd int `pulumi:"portRangeEnd"`
	// Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen
	PortRangeStart int `pulumi:"portRangeStart"`
	// he protocol for the rule
	Protocol string `pulumi:"protocol"`
	// Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs
	SourceIp string `pulumi:"sourceIp"`
	// Only traffic originating from the respective MAC address is allowed
	SourceMac string `pulumi:"sourceMac"`
	// In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed
	TargetIp string `pulumi:"targetIp"`
	// The type of firewall rule
	Type string `pulumi:"type"`
}

// GetCubeServerNicFirewallRuleInput is an input type that accepts GetCubeServerNicFirewallRuleArgs and GetCubeServerNicFirewallRuleOutput values.
// You can construct a concrete instance of `GetCubeServerNicFirewallRuleInput` via:
//
//	GetCubeServerNicFirewallRuleArgs{...}
type GetCubeServerNicFirewallRuleInput interface {
	pulumi.Input

	ToGetCubeServerNicFirewallRuleOutput() GetCubeServerNicFirewallRuleOutput
	ToGetCubeServerNicFirewallRuleOutputWithContext(context.Context) GetCubeServerNicFirewallRuleOutput
}

type GetCubeServerNicFirewallRuleArgs struct {
	// Defines the allowed code (from 0 to 254) if protocol ICMP is chosen
	IcmpCode pulumi.IntInput `pulumi:"icmpCode"`
	// Defines the allowed type (from 0 to 254) if the protocol ICMP is chosen
	IcmpType pulumi.IntInput `pulumi:"icmpType"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of an existing server that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen
	PortRangeEnd pulumi.IntInput `pulumi:"portRangeEnd"`
	// Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen
	PortRangeStart pulumi.IntInput `pulumi:"portRangeStart"`
	// he protocol for the rule
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs
	SourceIp pulumi.StringInput `pulumi:"sourceIp"`
	// Only traffic originating from the respective MAC address is allowed
	SourceMac pulumi.StringInput `pulumi:"sourceMac"`
	// In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed
	TargetIp pulumi.StringInput `pulumi:"targetIp"`
	// The type of firewall rule
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCubeServerNicFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCubeServerNicFirewallRule)(nil)).Elem()
}

func (i GetCubeServerNicFirewallRuleArgs) ToGetCubeServerNicFirewallRuleOutput() GetCubeServerNicFirewallRuleOutput {
	return i.ToGetCubeServerNicFirewallRuleOutputWithContext(context.Background())
}

func (i GetCubeServerNicFirewallRuleArgs) ToGetCubeServerNicFirewallRuleOutputWithContext(ctx context.Context) GetCubeServerNicFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCubeServerNicFirewallRuleOutput)
}

// GetCubeServerNicFirewallRuleArrayInput is an input type that accepts GetCubeServerNicFirewallRuleArray and GetCubeServerNicFirewallRuleArrayOutput values.
// You can construct a concrete instance of `GetCubeServerNicFirewallRuleArrayInput` via:
//
//	GetCubeServerNicFirewallRuleArray{ GetCubeServerNicFirewallRuleArgs{...} }
type GetCubeServerNicFirewallRuleArrayInput interface {
	pulumi.Input

	ToGetCubeServerNicFirewallRuleArrayOutput() GetCubeServerNicFirewallRuleArrayOutput
	ToGetCubeServerNicFirewallRuleArrayOutputWithContext(context.Context) GetCubeServerNicFirewallRuleArrayOutput
}

type GetCubeServerNicFirewallRuleArray []GetCubeServerNicFirewallRuleInput

func (GetCubeServerNicFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCubeServerNicFirewallRule)(nil)).Elem()
}

func (i GetCubeServerNicFirewallRuleArray) ToGetCubeServerNicFirewallRuleArrayOutput() GetCubeServerNicFirewallRuleArrayOutput {
	return i.ToGetCubeServerNicFirewallRuleArrayOutputWithContext(context.Background())
}

func (i GetCubeServerNicFirewallRuleArray) ToGetCubeServerNicFirewallRuleArrayOutputWithContext(ctx context.Context) GetCubeServerNicFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCubeServerNicFirewallRuleArrayOutput)
}

type GetCubeServerNicFirewallRuleOutput struct{ *pulumi.OutputState }

func (GetCubeServerNicFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCubeServerNicFirewallRule)(nil)).Elem()
}

func (o GetCubeServerNicFirewallRuleOutput) ToGetCubeServerNicFirewallRuleOutput() GetCubeServerNicFirewallRuleOutput {
	return o
}

func (o GetCubeServerNicFirewallRuleOutput) ToGetCubeServerNicFirewallRuleOutputWithContext(ctx context.Context) GetCubeServerNicFirewallRuleOutput {
	return o
}

// Defines the allowed code (from 0 to 254) if protocol ICMP is chosen
func (o GetCubeServerNicFirewallRuleOutput) IcmpCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetCubeServerNicFirewallRule) int { return v.IcmpCode }).(pulumi.IntOutput)
}

// Defines the allowed type (from 0 to 254) if the protocol ICMP is chosen
func (o GetCubeServerNicFirewallRuleOutput) IcmpType() pulumi.IntOutput {
	return o.ApplyT(func(v GetCubeServerNicFirewallRule) int { return v.IcmpType }).(pulumi.IntOutput)
}

// ID of the server you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetCubeServerNicFirewallRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerNicFirewallRule) string { return v.Id }).(pulumi.StringOutput)
}

// Name of an existing server that you want to search for.
func (o GetCubeServerNicFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerNicFirewallRule) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen
func (o GetCubeServerNicFirewallRuleOutput) PortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v GetCubeServerNicFirewallRule) int { return v.PortRangeEnd }).(pulumi.IntOutput)
}

// Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen
func (o GetCubeServerNicFirewallRuleOutput) PortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v GetCubeServerNicFirewallRule) int { return v.PortRangeStart }).(pulumi.IntOutput)
}

// he protocol for the rule
func (o GetCubeServerNicFirewallRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerNicFirewallRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs
func (o GetCubeServerNicFirewallRuleOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerNicFirewallRule) string { return v.SourceIp }).(pulumi.StringOutput)
}

// Only traffic originating from the respective MAC address is allowed
func (o GetCubeServerNicFirewallRuleOutput) SourceMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerNicFirewallRule) string { return v.SourceMac }).(pulumi.StringOutput)
}

// In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed
func (o GetCubeServerNicFirewallRuleOutput) TargetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerNicFirewallRule) string { return v.TargetIp }).(pulumi.StringOutput)
}

// The type of firewall rule
func (o GetCubeServerNicFirewallRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerNicFirewallRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetCubeServerNicFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (GetCubeServerNicFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCubeServerNicFirewallRule)(nil)).Elem()
}

func (o GetCubeServerNicFirewallRuleArrayOutput) ToGetCubeServerNicFirewallRuleArrayOutput() GetCubeServerNicFirewallRuleArrayOutput {
	return o
}

func (o GetCubeServerNicFirewallRuleArrayOutput) ToGetCubeServerNicFirewallRuleArrayOutputWithContext(ctx context.Context) GetCubeServerNicFirewallRuleArrayOutput {
	return o
}

func (o GetCubeServerNicFirewallRuleArrayOutput) Index(i pulumi.IntInput) GetCubeServerNicFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCubeServerNicFirewallRule {
		return vs[0].([]GetCubeServerNicFirewallRule)[vs[1].(int)]
	}).(GetCubeServerNicFirewallRuleOutput)
}

type GetCubeServerVolume struct {
	// The availability zone in which the volume should exist
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The uuid of the Backup Unit that user has access to
	BackupUnitId string `pulumi:"backupUnitId"`
	// The UUID of the attached server.
	BootServer string `pulumi:"bootServer"`
	// The bus type of the volume
	Bus string `pulumi:"bus"`
	// Is capable of CPU hot plug (no reboot required)
	CpuHotPlug bool `pulumi:"cpuHotPlug"`
	// The Logical Unit Number (LUN) of the storage volume
	DeviceNumber int `pulumi:"deviceNumber"`
	// Is capable of Virt-IO drive hot plug (no reboot required)
	DiscVirtioHotPlug bool `pulumi:"discVirtioHotPlug"`
	// Is capable of Virt-IO drive hot unplug (no reboot required)
	DiscVirtioHotUnplug bool `pulumi:"discVirtioHotUnplug"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id        string `pulumi:"id"`
	ImageName string `pulumi:"imageName"`
	// Initial password to be set for installed OS
	ImagePassword string `pulumi:"imagePassword"`
	// OS type of this volume
	LicenceType string `pulumi:"licenceType"`
	// Name of an existing server that you want to search for.
	Name string `pulumi:"name"`
	// Is capable of nic hot plug (no reboot required)
	NicHotPlug bool `pulumi:"nicHotPlug"`
	// Is capable of nic hot unplug (no reboot required)
	NicHotUnplug bool `pulumi:"nicHotUnplug"`
	// The PCI slot number of the Nic
	PciSlot int `pulumi:"pciSlot"`
	// Is capable of memory hot plug (no reboot required)
	RamHotPlug bool `pulumi:"ramHotPlug"`
	// Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key
	SshKeys []string `pulumi:"sshKeys"`
	// The type of firewall rule
	Type string `pulumi:"type"`
	// The cloud-init configuration for the volume as base64 encoded string
	UserData *string `pulumi:"userData"`
}

// GetCubeServerVolumeInput is an input type that accepts GetCubeServerVolumeArgs and GetCubeServerVolumeOutput values.
// You can construct a concrete instance of `GetCubeServerVolumeInput` via:
//
//	GetCubeServerVolumeArgs{...}
type GetCubeServerVolumeInput interface {
	pulumi.Input

	ToGetCubeServerVolumeOutput() GetCubeServerVolumeOutput
	ToGetCubeServerVolumeOutputWithContext(context.Context) GetCubeServerVolumeOutput
}

type GetCubeServerVolumeArgs struct {
	// The availability zone in which the volume should exist
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// The uuid of the Backup Unit that user has access to
	BackupUnitId pulumi.StringInput `pulumi:"backupUnitId"`
	// The UUID of the attached server.
	BootServer pulumi.StringInput `pulumi:"bootServer"`
	// The bus type of the volume
	Bus pulumi.StringInput `pulumi:"bus"`
	// Is capable of CPU hot plug (no reboot required)
	CpuHotPlug pulumi.BoolInput `pulumi:"cpuHotPlug"`
	// The Logical Unit Number (LUN) of the storage volume
	DeviceNumber pulumi.IntInput `pulumi:"deviceNumber"`
	// Is capable of Virt-IO drive hot plug (no reboot required)
	DiscVirtioHotPlug pulumi.BoolInput `pulumi:"discVirtioHotPlug"`
	// Is capable of Virt-IO drive hot unplug (no reboot required)
	DiscVirtioHotUnplug pulumi.BoolInput `pulumi:"discVirtioHotUnplug"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id        pulumi.StringInput `pulumi:"id"`
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// Initial password to be set for installed OS
	ImagePassword pulumi.StringInput `pulumi:"imagePassword"`
	// OS type of this volume
	LicenceType pulumi.StringInput `pulumi:"licenceType"`
	// Name of an existing server that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
	// Is capable of nic hot plug (no reboot required)
	NicHotPlug pulumi.BoolInput `pulumi:"nicHotPlug"`
	// Is capable of nic hot unplug (no reboot required)
	NicHotUnplug pulumi.BoolInput `pulumi:"nicHotUnplug"`
	// The PCI slot number of the Nic
	PciSlot pulumi.IntInput `pulumi:"pciSlot"`
	// Is capable of memory hot plug (no reboot required)
	RamHotPlug pulumi.BoolInput `pulumi:"ramHotPlug"`
	// Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key
	SshKeys pulumi.StringArrayInput `pulumi:"sshKeys"`
	// The type of firewall rule
	Type pulumi.StringInput `pulumi:"type"`
	// The cloud-init configuration for the volume as base64 encoded string
	UserData pulumi.StringPtrInput `pulumi:"userData"`
}

func (GetCubeServerVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCubeServerVolume)(nil)).Elem()
}

func (i GetCubeServerVolumeArgs) ToGetCubeServerVolumeOutput() GetCubeServerVolumeOutput {
	return i.ToGetCubeServerVolumeOutputWithContext(context.Background())
}

func (i GetCubeServerVolumeArgs) ToGetCubeServerVolumeOutputWithContext(ctx context.Context) GetCubeServerVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCubeServerVolumeOutput)
}

// GetCubeServerVolumeArrayInput is an input type that accepts GetCubeServerVolumeArray and GetCubeServerVolumeArrayOutput values.
// You can construct a concrete instance of `GetCubeServerVolumeArrayInput` via:
//
//	GetCubeServerVolumeArray{ GetCubeServerVolumeArgs{...} }
type GetCubeServerVolumeArrayInput interface {
	pulumi.Input

	ToGetCubeServerVolumeArrayOutput() GetCubeServerVolumeArrayOutput
	ToGetCubeServerVolumeArrayOutputWithContext(context.Context) GetCubeServerVolumeArrayOutput
}

type GetCubeServerVolumeArray []GetCubeServerVolumeInput

func (GetCubeServerVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCubeServerVolume)(nil)).Elem()
}

func (i GetCubeServerVolumeArray) ToGetCubeServerVolumeArrayOutput() GetCubeServerVolumeArrayOutput {
	return i.ToGetCubeServerVolumeArrayOutputWithContext(context.Background())
}

func (i GetCubeServerVolumeArray) ToGetCubeServerVolumeArrayOutputWithContext(ctx context.Context) GetCubeServerVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCubeServerVolumeArrayOutput)
}

type GetCubeServerVolumeOutput struct{ *pulumi.OutputState }

func (GetCubeServerVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCubeServerVolume)(nil)).Elem()
}

func (o GetCubeServerVolumeOutput) ToGetCubeServerVolumeOutput() GetCubeServerVolumeOutput {
	return o
}

func (o GetCubeServerVolumeOutput) ToGetCubeServerVolumeOutputWithContext(ctx context.Context) GetCubeServerVolumeOutput {
	return o
}

// The availability zone in which the volume should exist
func (o GetCubeServerVolumeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerVolume) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The uuid of the Backup Unit that user has access to
func (o GetCubeServerVolumeOutput) BackupUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerVolume) string { return v.BackupUnitId }).(pulumi.StringOutput)
}

// The UUID of the attached server.
func (o GetCubeServerVolumeOutput) BootServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerVolume) string { return v.BootServer }).(pulumi.StringOutput)
}

// The bus type of the volume
func (o GetCubeServerVolumeOutput) Bus() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerVolume) string { return v.Bus }).(pulumi.StringOutput)
}

// Is capable of CPU hot plug (no reboot required)
func (o GetCubeServerVolumeOutput) CpuHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerVolume) bool { return v.CpuHotPlug }).(pulumi.BoolOutput)
}

// The Logical Unit Number (LUN) of the storage volume
func (o GetCubeServerVolumeOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetCubeServerVolume) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

// Is capable of Virt-IO drive hot plug (no reboot required)
func (o GetCubeServerVolumeOutput) DiscVirtioHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerVolume) bool { return v.DiscVirtioHotPlug }).(pulumi.BoolOutput)
}

// Is capable of Virt-IO drive hot unplug (no reboot required)
func (o GetCubeServerVolumeOutput) DiscVirtioHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerVolume) bool { return v.DiscVirtioHotUnplug }).(pulumi.BoolOutput)
}

// ID of the server you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetCubeServerVolumeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerVolume) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCubeServerVolumeOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerVolume) string { return v.ImageName }).(pulumi.StringOutput)
}

// Initial password to be set for installed OS
func (o GetCubeServerVolumeOutput) ImagePassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerVolume) string { return v.ImagePassword }).(pulumi.StringOutput)
}

// OS type of this volume
func (o GetCubeServerVolumeOutput) LicenceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerVolume) string { return v.LicenceType }).(pulumi.StringOutput)
}

// Name of an existing server that you want to search for.
func (o GetCubeServerVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerVolume) string { return v.Name }).(pulumi.StringOutput)
}

// Is capable of nic hot plug (no reboot required)
func (o GetCubeServerVolumeOutput) NicHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerVolume) bool { return v.NicHotPlug }).(pulumi.BoolOutput)
}

// Is capable of nic hot unplug (no reboot required)
func (o GetCubeServerVolumeOutput) NicHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerVolume) bool { return v.NicHotUnplug }).(pulumi.BoolOutput)
}

// The PCI slot number of the Nic
func (o GetCubeServerVolumeOutput) PciSlot() pulumi.IntOutput {
	return o.ApplyT(func(v GetCubeServerVolume) int { return v.PciSlot }).(pulumi.IntOutput)
}

// Is capable of memory hot plug (no reboot required)
func (o GetCubeServerVolumeOutput) RamHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCubeServerVolume) bool { return v.RamHotPlug }).(pulumi.BoolOutput)
}

// Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key
func (o GetCubeServerVolumeOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCubeServerVolume) []string { return v.SshKeys }).(pulumi.StringArrayOutput)
}

// The type of firewall rule
func (o GetCubeServerVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCubeServerVolume) string { return v.Type }).(pulumi.StringOutput)
}

// The cloud-init configuration for the volume as base64 encoded string
func (o GetCubeServerVolumeOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCubeServerVolume) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type GetCubeServerVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetCubeServerVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCubeServerVolume)(nil)).Elem()
}

func (o GetCubeServerVolumeArrayOutput) ToGetCubeServerVolumeArrayOutput() GetCubeServerVolumeArrayOutput {
	return o
}

func (o GetCubeServerVolumeArrayOutput) ToGetCubeServerVolumeArrayOutputWithContext(ctx context.Context) GetCubeServerVolumeArrayOutput {
	return o
}

func (o GetCubeServerVolumeArrayOutput) Index(i pulumi.IntInput) GetCubeServerVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCubeServerVolume {
		return vs[0].([]GetCubeServerVolume)[vs[1].(int)]
	}).(GetCubeServerVolumeOutput)
}

type GetDatacenterCpuArchitecture struct {
	// A valid CPU family name
	CpuFamily string `pulumi:"cpuFamily"`
	// The maximum number of cores available
	MaxCores int `pulumi:"maxCores"`
	// The maximum number of RAM in MB
	MaxRam int `pulumi:"maxRam"`
	// A valid CPU vendor name
	Vendor string `pulumi:"vendor"`
}

// GetDatacenterCpuArchitectureInput is an input type that accepts GetDatacenterCpuArchitectureArgs and GetDatacenterCpuArchitectureOutput values.
// You can construct a concrete instance of `GetDatacenterCpuArchitectureInput` via:
//
//	GetDatacenterCpuArchitectureArgs{...}
type GetDatacenterCpuArchitectureInput interface {
	pulumi.Input

	ToGetDatacenterCpuArchitectureOutput() GetDatacenterCpuArchitectureOutput
	ToGetDatacenterCpuArchitectureOutputWithContext(context.Context) GetDatacenterCpuArchitectureOutput
}

type GetDatacenterCpuArchitectureArgs struct {
	// A valid CPU family name
	CpuFamily pulumi.StringInput `pulumi:"cpuFamily"`
	// The maximum number of cores available
	MaxCores pulumi.IntInput `pulumi:"maxCores"`
	// The maximum number of RAM in MB
	MaxRam pulumi.IntInput `pulumi:"maxRam"`
	// A valid CPU vendor name
	Vendor pulumi.StringInput `pulumi:"vendor"`
}

func (GetDatacenterCpuArchitectureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatacenterCpuArchitecture)(nil)).Elem()
}

func (i GetDatacenterCpuArchitectureArgs) ToGetDatacenterCpuArchitectureOutput() GetDatacenterCpuArchitectureOutput {
	return i.ToGetDatacenterCpuArchitectureOutputWithContext(context.Background())
}

func (i GetDatacenterCpuArchitectureArgs) ToGetDatacenterCpuArchitectureOutputWithContext(ctx context.Context) GetDatacenterCpuArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatacenterCpuArchitectureOutput)
}

// GetDatacenterCpuArchitectureArrayInput is an input type that accepts GetDatacenterCpuArchitectureArray and GetDatacenterCpuArchitectureArrayOutput values.
// You can construct a concrete instance of `GetDatacenterCpuArchitectureArrayInput` via:
//
//	GetDatacenterCpuArchitectureArray{ GetDatacenterCpuArchitectureArgs{...} }
type GetDatacenterCpuArchitectureArrayInput interface {
	pulumi.Input

	ToGetDatacenterCpuArchitectureArrayOutput() GetDatacenterCpuArchitectureArrayOutput
	ToGetDatacenterCpuArchitectureArrayOutputWithContext(context.Context) GetDatacenterCpuArchitectureArrayOutput
}

type GetDatacenterCpuArchitectureArray []GetDatacenterCpuArchitectureInput

func (GetDatacenterCpuArchitectureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatacenterCpuArchitecture)(nil)).Elem()
}

func (i GetDatacenterCpuArchitectureArray) ToGetDatacenterCpuArchitectureArrayOutput() GetDatacenterCpuArchitectureArrayOutput {
	return i.ToGetDatacenterCpuArchitectureArrayOutputWithContext(context.Background())
}

func (i GetDatacenterCpuArchitectureArray) ToGetDatacenterCpuArchitectureArrayOutputWithContext(ctx context.Context) GetDatacenterCpuArchitectureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatacenterCpuArchitectureArrayOutput)
}

type GetDatacenterCpuArchitectureOutput struct{ *pulumi.OutputState }

func (GetDatacenterCpuArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatacenterCpuArchitecture)(nil)).Elem()
}

func (o GetDatacenterCpuArchitectureOutput) ToGetDatacenterCpuArchitectureOutput() GetDatacenterCpuArchitectureOutput {
	return o
}

func (o GetDatacenterCpuArchitectureOutput) ToGetDatacenterCpuArchitectureOutputWithContext(ctx context.Context) GetDatacenterCpuArchitectureOutput {
	return o
}

// A valid CPU family name
func (o GetDatacenterCpuArchitectureOutput) CpuFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatacenterCpuArchitecture) string { return v.CpuFamily }).(pulumi.StringOutput)
}

// The maximum number of cores available
func (o GetDatacenterCpuArchitectureOutput) MaxCores() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatacenterCpuArchitecture) int { return v.MaxCores }).(pulumi.IntOutput)
}

// The maximum number of RAM in MB
func (o GetDatacenterCpuArchitectureOutput) MaxRam() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatacenterCpuArchitecture) int { return v.MaxRam }).(pulumi.IntOutput)
}

// A valid CPU vendor name
func (o GetDatacenterCpuArchitectureOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatacenterCpuArchitecture) string { return v.Vendor }).(pulumi.StringOutput)
}

type GetDatacenterCpuArchitectureArrayOutput struct{ *pulumi.OutputState }

func (GetDatacenterCpuArchitectureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatacenterCpuArchitecture)(nil)).Elem()
}

func (o GetDatacenterCpuArchitectureArrayOutput) ToGetDatacenterCpuArchitectureArrayOutput() GetDatacenterCpuArchitectureArrayOutput {
	return o
}

func (o GetDatacenterCpuArchitectureArrayOutput) ToGetDatacenterCpuArchitectureArrayOutputWithContext(ctx context.Context) GetDatacenterCpuArchitectureArrayOutput {
	return o
}

func (o GetDatacenterCpuArchitectureArrayOutput) Index(i pulumi.IntInput) GetDatacenterCpuArchitectureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatacenterCpuArchitecture {
		return vs[0].([]GetDatacenterCpuArchitecture)[vs[1].(int)]
	}).(GetDatacenterCpuArchitectureOutput)
}

type GetDataplatformClusterConfig struct {
	ApiVersion     string                                `pulumi:"apiVersion"`
	Clusters       []GetDataplatformClusterConfigCluster `pulumi:"clusters"`
	Contexts       []GetDataplatformClusterConfigContext `pulumi:"contexts"`
	CurrentContext string                                `pulumi:"currentContext"`
	Kind           string                                `pulumi:"kind"`
	Users          []GetDataplatformClusterConfigUser    `pulumi:"users"`
}

// GetDataplatformClusterConfigInput is an input type that accepts GetDataplatformClusterConfigArgs and GetDataplatformClusterConfigOutput values.
// You can construct a concrete instance of `GetDataplatformClusterConfigInput` via:
//
//	GetDataplatformClusterConfigArgs{...}
type GetDataplatformClusterConfigInput interface {
	pulumi.Input

	ToGetDataplatformClusterConfigOutput() GetDataplatformClusterConfigOutput
	ToGetDataplatformClusterConfigOutputWithContext(context.Context) GetDataplatformClusterConfigOutput
}

type GetDataplatformClusterConfigArgs struct {
	ApiVersion     pulumi.StringInput                            `pulumi:"apiVersion"`
	Clusters       GetDataplatformClusterConfigClusterArrayInput `pulumi:"clusters"`
	Contexts       GetDataplatformClusterConfigContextArrayInput `pulumi:"contexts"`
	CurrentContext pulumi.StringInput                            `pulumi:"currentContext"`
	Kind           pulumi.StringInput                            `pulumi:"kind"`
	Users          GetDataplatformClusterConfigUserArrayInput    `pulumi:"users"`
}

func (GetDataplatformClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformClusterConfig)(nil)).Elem()
}

func (i GetDataplatformClusterConfigArgs) ToGetDataplatformClusterConfigOutput() GetDataplatformClusterConfigOutput {
	return i.ToGetDataplatformClusterConfigOutputWithContext(context.Background())
}

func (i GetDataplatformClusterConfigArgs) ToGetDataplatformClusterConfigOutputWithContext(ctx context.Context) GetDataplatformClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformClusterConfigOutput)
}

// GetDataplatformClusterConfigArrayInput is an input type that accepts GetDataplatformClusterConfigArray and GetDataplatformClusterConfigArrayOutput values.
// You can construct a concrete instance of `GetDataplatformClusterConfigArrayInput` via:
//
//	GetDataplatformClusterConfigArray{ GetDataplatformClusterConfigArgs{...} }
type GetDataplatformClusterConfigArrayInput interface {
	pulumi.Input

	ToGetDataplatformClusterConfigArrayOutput() GetDataplatformClusterConfigArrayOutput
	ToGetDataplatformClusterConfigArrayOutputWithContext(context.Context) GetDataplatformClusterConfigArrayOutput
}

type GetDataplatformClusterConfigArray []GetDataplatformClusterConfigInput

func (GetDataplatformClusterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformClusterConfig)(nil)).Elem()
}

func (i GetDataplatformClusterConfigArray) ToGetDataplatformClusterConfigArrayOutput() GetDataplatformClusterConfigArrayOutput {
	return i.ToGetDataplatformClusterConfigArrayOutputWithContext(context.Background())
}

func (i GetDataplatformClusterConfigArray) ToGetDataplatformClusterConfigArrayOutputWithContext(ctx context.Context) GetDataplatformClusterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformClusterConfigArrayOutput)
}

type GetDataplatformClusterConfigOutput struct{ *pulumi.OutputState }

func (GetDataplatformClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformClusterConfig)(nil)).Elem()
}

func (o GetDataplatformClusterConfigOutput) ToGetDataplatformClusterConfigOutput() GetDataplatformClusterConfigOutput {
	return o
}

func (o GetDataplatformClusterConfigOutput) ToGetDataplatformClusterConfigOutputWithContext(ctx context.Context) GetDataplatformClusterConfigOutput {
	return o
}

func (o GetDataplatformClusterConfigOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformClusterConfig) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o GetDataplatformClusterConfigOutput) Clusters() GetDataplatformClusterConfigClusterArrayOutput {
	return o.ApplyT(func(v GetDataplatformClusterConfig) []GetDataplatformClusterConfigCluster { return v.Clusters }).(GetDataplatformClusterConfigClusterArrayOutput)
}

func (o GetDataplatformClusterConfigOutput) Contexts() GetDataplatformClusterConfigContextArrayOutput {
	return o.ApplyT(func(v GetDataplatformClusterConfig) []GetDataplatformClusterConfigContext { return v.Contexts }).(GetDataplatformClusterConfigContextArrayOutput)
}

func (o GetDataplatformClusterConfigOutput) CurrentContext() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformClusterConfig) string { return v.CurrentContext }).(pulumi.StringOutput)
}

func (o GetDataplatformClusterConfigOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformClusterConfig) string { return v.Kind }).(pulumi.StringOutput)
}

func (o GetDataplatformClusterConfigOutput) Users() GetDataplatformClusterConfigUserArrayOutput {
	return o.ApplyT(func(v GetDataplatformClusterConfig) []GetDataplatformClusterConfigUser { return v.Users }).(GetDataplatformClusterConfigUserArrayOutput)
}

type GetDataplatformClusterConfigArrayOutput struct{ *pulumi.OutputState }

func (GetDataplatformClusterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformClusterConfig)(nil)).Elem()
}

func (o GetDataplatformClusterConfigArrayOutput) ToGetDataplatformClusterConfigArrayOutput() GetDataplatformClusterConfigArrayOutput {
	return o
}

func (o GetDataplatformClusterConfigArrayOutput) ToGetDataplatformClusterConfigArrayOutputWithContext(ctx context.Context) GetDataplatformClusterConfigArrayOutput {
	return o
}

func (o GetDataplatformClusterConfigArrayOutput) Index(i pulumi.IntInput) GetDataplatformClusterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataplatformClusterConfig {
		return vs[0].([]GetDataplatformClusterConfig)[vs[1].(int)]
	}).(GetDataplatformClusterConfigOutput)
}

type GetDataplatformClusterConfigCluster struct {
	Cluster map[string]string `pulumi:"cluster"`
	// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name string `pulumi:"name"`
}

// GetDataplatformClusterConfigClusterInput is an input type that accepts GetDataplatformClusterConfigClusterArgs and GetDataplatformClusterConfigClusterOutput values.
// You can construct a concrete instance of `GetDataplatformClusterConfigClusterInput` via:
//
//	GetDataplatformClusterConfigClusterArgs{...}
type GetDataplatformClusterConfigClusterInput interface {
	pulumi.Input

	ToGetDataplatformClusterConfigClusterOutput() GetDataplatformClusterConfigClusterOutput
	ToGetDataplatformClusterConfigClusterOutputWithContext(context.Context) GetDataplatformClusterConfigClusterOutput
}

type GetDataplatformClusterConfigClusterArgs struct {
	Cluster pulumi.StringMapInput `pulumi:"cluster"`
	// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDataplatformClusterConfigClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformClusterConfigCluster)(nil)).Elem()
}

func (i GetDataplatformClusterConfigClusterArgs) ToGetDataplatformClusterConfigClusterOutput() GetDataplatformClusterConfigClusterOutput {
	return i.ToGetDataplatformClusterConfigClusterOutputWithContext(context.Background())
}

func (i GetDataplatformClusterConfigClusterArgs) ToGetDataplatformClusterConfigClusterOutputWithContext(ctx context.Context) GetDataplatformClusterConfigClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformClusterConfigClusterOutput)
}

// GetDataplatformClusterConfigClusterArrayInput is an input type that accepts GetDataplatformClusterConfigClusterArray and GetDataplatformClusterConfigClusterArrayOutput values.
// You can construct a concrete instance of `GetDataplatformClusterConfigClusterArrayInput` via:
//
//	GetDataplatformClusterConfigClusterArray{ GetDataplatformClusterConfigClusterArgs{...} }
type GetDataplatformClusterConfigClusterArrayInput interface {
	pulumi.Input

	ToGetDataplatformClusterConfigClusterArrayOutput() GetDataplatformClusterConfigClusterArrayOutput
	ToGetDataplatformClusterConfigClusterArrayOutputWithContext(context.Context) GetDataplatformClusterConfigClusterArrayOutput
}

type GetDataplatformClusterConfigClusterArray []GetDataplatformClusterConfigClusterInput

func (GetDataplatformClusterConfigClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformClusterConfigCluster)(nil)).Elem()
}

func (i GetDataplatformClusterConfigClusterArray) ToGetDataplatformClusterConfigClusterArrayOutput() GetDataplatformClusterConfigClusterArrayOutput {
	return i.ToGetDataplatformClusterConfigClusterArrayOutputWithContext(context.Background())
}

func (i GetDataplatformClusterConfigClusterArray) ToGetDataplatformClusterConfigClusterArrayOutputWithContext(ctx context.Context) GetDataplatformClusterConfigClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformClusterConfigClusterArrayOutput)
}

type GetDataplatformClusterConfigClusterOutput struct{ *pulumi.OutputState }

func (GetDataplatformClusterConfigClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformClusterConfigCluster)(nil)).Elem()
}

func (o GetDataplatformClusterConfigClusterOutput) ToGetDataplatformClusterConfigClusterOutput() GetDataplatformClusterConfigClusterOutput {
	return o
}

func (o GetDataplatformClusterConfigClusterOutput) ToGetDataplatformClusterConfigClusterOutputWithContext(ctx context.Context) GetDataplatformClusterConfigClusterOutput {
	return o
}

func (o GetDataplatformClusterConfigClusterOutput) Cluster() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDataplatformClusterConfigCluster) map[string]string { return v.Cluster }).(pulumi.StringMapOutput)
}

// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
func (o GetDataplatformClusterConfigClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformClusterConfigCluster) string { return v.Name }).(pulumi.StringOutput)
}

type GetDataplatformClusterConfigClusterArrayOutput struct{ *pulumi.OutputState }

func (GetDataplatformClusterConfigClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformClusterConfigCluster)(nil)).Elem()
}

func (o GetDataplatformClusterConfigClusterArrayOutput) ToGetDataplatformClusterConfigClusterArrayOutput() GetDataplatformClusterConfigClusterArrayOutput {
	return o
}

func (o GetDataplatformClusterConfigClusterArrayOutput) ToGetDataplatformClusterConfigClusterArrayOutputWithContext(ctx context.Context) GetDataplatformClusterConfigClusterArrayOutput {
	return o
}

func (o GetDataplatformClusterConfigClusterArrayOutput) Index(i pulumi.IntInput) GetDataplatformClusterConfigClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataplatformClusterConfigCluster {
		return vs[0].([]GetDataplatformClusterConfigCluster)[vs[1].(int)]
	}).(GetDataplatformClusterConfigClusterOutput)
}

type GetDataplatformClusterConfigContext struct {
	Context map[string]string `pulumi:"context"`
	// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name string `pulumi:"name"`
}

// GetDataplatformClusterConfigContextInput is an input type that accepts GetDataplatformClusterConfigContextArgs and GetDataplatformClusterConfigContextOutput values.
// You can construct a concrete instance of `GetDataplatformClusterConfigContextInput` via:
//
//	GetDataplatformClusterConfigContextArgs{...}
type GetDataplatformClusterConfigContextInput interface {
	pulumi.Input

	ToGetDataplatformClusterConfigContextOutput() GetDataplatformClusterConfigContextOutput
	ToGetDataplatformClusterConfigContextOutputWithContext(context.Context) GetDataplatformClusterConfigContextOutput
}

type GetDataplatformClusterConfigContextArgs struct {
	Context pulumi.StringMapInput `pulumi:"context"`
	// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDataplatformClusterConfigContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformClusterConfigContext)(nil)).Elem()
}

func (i GetDataplatformClusterConfigContextArgs) ToGetDataplatformClusterConfigContextOutput() GetDataplatformClusterConfigContextOutput {
	return i.ToGetDataplatformClusterConfigContextOutputWithContext(context.Background())
}

func (i GetDataplatformClusterConfigContextArgs) ToGetDataplatformClusterConfigContextOutputWithContext(ctx context.Context) GetDataplatformClusterConfigContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformClusterConfigContextOutput)
}

// GetDataplatformClusterConfigContextArrayInput is an input type that accepts GetDataplatformClusterConfigContextArray and GetDataplatformClusterConfigContextArrayOutput values.
// You can construct a concrete instance of `GetDataplatformClusterConfigContextArrayInput` via:
//
//	GetDataplatformClusterConfigContextArray{ GetDataplatformClusterConfigContextArgs{...} }
type GetDataplatformClusterConfigContextArrayInput interface {
	pulumi.Input

	ToGetDataplatformClusterConfigContextArrayOutput() GetDataplatformClusterConfigContextArrayOutput
	ToGetDataplatformClusterConfigContextArrayOutputWithContext(context.Context) GetDataplatformClusterConfigContextArrayOutput
}

type GetDataplatformClusterConfigContextArray []GetDataplatformClusterConfigContextInput

func (GetDataplatformClusterConfigContextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformClusterConfigContext)(nil)).Elem()
}

func (i GetDataplatformClusterConfigContextArray) ToGetDataplatformClusterConfigContextArrayOutput() GetDataplatformClusterConfigContextArrayOutput {
	return i.ToGetDataplatformClusterConfigContextArrayOutputWithContext(context.Background())
}

func (i GetDataplatformClusterConfigContextArray) ToGetDataplatformClusterConfigContextArrayOutputWithContext(ctx context.Context) GetDataplatformClusterConfigContextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformClusterConfigContextArrayOutput)
}

type GetDataplatformClusterConfigContextOutput struct{ *pulumi.OutputState }

func (GetDataplatformClusterConfigContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformClusterConfigContext)(nil)).Elem()
}

func (o GetDataplatformClusterConfigContextOutput) ToGetDataplatformClusterConfigContextOutput() GetDataplatformClusterConfigContextOutput {
	return o
}

func (o GetDataplatformClusterConfigContextOutput) ToGetDataplatformClusterConfigContextOutputWithContext(ctx context.Context) GetDataplatformClusterConfigContextOutput {
	return o
}

func (o GetDataplatformClusterConfigContextOutput) Context() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDataplatformClusterConfigContext) map[string]string { return v.Context }).(pulumi.StringMapOutput)
}

// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
func (o GetDataplatformClusterConfigContextOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformClusterConfigContext) string { return v.Name }).(pulumi.StringOutput)
}

type GetDataplatformClusterConfigContextArrayOutput struct{ *pulumi.OutputState }

func (GetDataplatformClusterConfigContextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformClusterConfigContext)(nil)).Elem()
}

func (o GetDataplatformClusterConfigContextArrayOutput) ToGetDataplatformClusterConfigContextArrayOutput() GetDataplatformClusterConfigContextArrayOutput {
	return o
}

func (o GetDataplatformClusterConfigContextArrayOutput) ToGetDataplatformClusterConfigContextArrayOutputWithContext(ctx context.Context) GetDataplatformClusterConfigContextArrayOutput {
	return o
}

func (o GetDataplatformClusterConfigContextArrayOutput) Index(i pulumi.IntInput) GetDataplatformClusterConfigContextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataplatformClusterConfigContext {
		return vs[0].([]GetDataplatformClusterConfigContext)[vs[1].(int)]
	}).(GetDataplatformClusterConfigContextOutput)
}

type GetDataplatformClusterConfigUser struct {
	// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name string            `pulumi:"name"`
	User map[string]string `pulumi:"user"`
}

// GetDataplatformClusterConfigUserInput is an input type that accepts GetDataplatformClusterConfigUserArgs and GetDataplatformClusterConfigUserOutput values.
// You can construct a concrete instance of `GetDataplatformClusterConfigUserInput` via:
//
//	GetDataplatformClusterConfigUserArgs{...}
type GetDataplatformClusterConfigUserInput interface {
	pulumi.Input

	ToGetDataplatformClusterConfigUserOutput() GetDataplatformClusterConfigUserOutput
	ToGetDataplatformClusterConfigUserOutputWithContext(context.Context) GetDataplatformClusterConfigUserOutput
}

type GetDataplatformClusterConfigUserArgs struct {
	// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name pulumi.StringInput    `pulumi:"name"`
	User pulumi.StringMapInput `pulumi:"user"`
}

func (GetDataplatformClusterConfigUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformClusterConfigUser)(nil)).Elem()
}

func (i GetDataplatformClusterConfigUserArgs) ToGetDataplatformClusterConfigUserOutput() GetDataplatformClusterConfigUserOutput {
	return i.ToGetDataplatformClusterConfigUserOutputWithContext(context.Background())
}

func (i GetDataplatformClusterConfigUserArgs) ToGetDataplatformClusterConfigUserOutputWithContext(ctx context.Context) GetDataplatformClusterConfigUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformClusterConfigUserOutput)
}

// GetDataplatformClusterConfigUserArrayInput is an input type that accepts GetDataplatformClusterConfigUserArray and GetDataplatformClusterConfigUserArrayOutput values.
// You can construct a concrete instance of `GetDataplatformClusterConfigUserArrayInput` via:
//
//	GetDataplatformClusterConfigUserArray{ GetDataplatformClusterConfigUserArgs{...} }
type GetDataplatformClusterConfigUserArrayInput interface {
	pulumi.Input

	ToGetDataplatformClusterConfigUserArrayOutput() GetDataplatformClusterConfigUserArrayOutput
	ToGetDataplatformClusterConfigUserArrayOutputWithContext(context.Context) GetDataplatformClusterConfigUserArrayOutput
}

type GetDataplatformClusterConfigUserArray []GetDataplatformClusterConfigUserInput

func (GetDataplatformClusterConfigUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformClusterConfigUser)(nil)).Elem()
}

func (i GetDataplatformClusterConfigUserArray) ToGetDataplatformClusterConfigUserArrayOutput() GetDataplatformClusterConfigUserArrayOutput {
	return i.ToGetDataplatformClusterConfigUserArrayOutputWithContext(context.Background())
}

func (i GetDataplatformClusterConfigUserArray) ToGetDataplatformClusterConfigUserArrayOutputWithContext(ctx context.Context) GetDataplatformClusterConfigUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformClusterConfigUserArrayOutput)
}

type GetDataplatformClusterConfigUserOutput struct{ *pulumi.OutputState }

func (GetDataplatformClusterConfigUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformClusterConfigUser)(nil)).Elem()
}

func (o GetDataplatformClusterConfigUserOutput) ToGetDataplatformClusterConfigUserOutput() GetDataplatformClusterConfigUserOutput {
	return o
}

func (o GetDataplatformClusterConfigUserOutput) ToGetDataplatformClusterConfigUserOutputWithContext(ctx context.Context) GetDataplatformClusterConfigUserOutput {
	return o
}

// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
func (o GetDataplatformClusterConfigUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformClusterConfigUser) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataplatformClusterConfigUserOutput) User() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDataplatformClusterConfigUser) map[string]string { return v.User }).(pulumi.StringMapOutput)
}

type GetDataplatformClusterConfigUserArrayOutput struct{ *pulumi.OutputState }

func (GetDataplatformClusterConfigUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformClusterConfigUser)(nil)).Elem()
}

func (o GetDataplatformClusterConfigUserArrayOutput) ToGetDataplatformClusterConfigUserArrayOutput() GetDataplatformClusterConfigUserArrayOutput {
	return o
}

func (o GetDataplatformClusterConfigUserArrayOutput) ToGetDataplatformClusterConfigUserArrayOutputWithContext(ctx context.Context) GetDataplatformClusterConfigUserArrayOutput {
	return o
}

func (o GetDataplatformClusterConfigUserArrayOutput) Index(i pulumi.IntInput) GetDataplatformClusterConfigUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataplatformClusterConfigUser {
		return vs[0].([]GetDataplatformClusterConfigUser)[vs[1].(int)]
	}).(GetDataplatformClusterConfigUserOutput)
}

type GetDataplatformClusterLan struct {
	// Indicates if the Kubernetes node pool LAN will reserve an IP using DHCP. The default value is 'true'.
	Dhcp bool `pulumi:"dhcp"`
	// The LAN ID of an existing LAN at the related data center
	LanId string `pulumi:"lanId"`
	// An array of additional LANs attached to worker nodes
	Routes []GetDataplatformClusterLanRoute `pulumi:"routes"`
}

// GetDataplatformClusterLanInput is an input type that accepts GetDataplatformClusterLanArgs and GetDataplatformClusterLanOutput values.
// You can construct a concrete instance of `GetDataplatformClusterLanInput` via:
//
//	GetDataplatformClusterLanArgs{...}
type GetDataplatformClusterLanInput interface {
	pulumi.Input

	ToGetDataplatformClusterLanOutput() GetDataplatformClusterLanOutput
	ToGetDataplatformClusterLanOutputWithContext(context.Context) GetDataplatformClusterLanOutput
}

type GetDataplatformClusterLanArgs struct {
	// Indicates if the Kubernetes node pool LAN will reserve an IP using DHCP. The default value is 'true'.
	Dhcp pulumi.BoolInput `pulumi:"dhcp"`
	// The LAN ID of an existing LAN at the related data center
	LanId pulumi.StringInput `pulumi:"lanId"`
	// An array of additional LANs attached to worker nodes
	Routes GetDataplatformClusterLanRouteArrayInput `pulumi:"routes"`
}

func (GetDataplatformClusterLanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformClusterLan)(nil)).Elem()
}

func (i GetDataplatformClusterLanArgs) ToGetDataplatformClusterLanOutput() GetDataplatformClusterLanOutput {
	return i.ToGetDataplatformClusterLanOutputWithContext(context.Background())
}

func (i GetDataplatformClusterLanArgs) ToGetDataplatformClusterLanOutputWithContext(ctx context.Context) GetDataplatformClusterLanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformClusterLanOutput)
}

// GetDataplatformClusterLanArrayInput is an input type that accepts GetDataplatformClusterLanArray and GetDataplatformClusterLanArrayOutput values.
// You can construct a concrete instance of `GetDataplatformClusterLanArrayInput` via:
//
//	GetDataplatformClusterLanArray{ GetDataplatformClusterLanArgs{...} }
type GetDataplatformClusterLanArrayInput interface {
	pulumi.Input

	ToGetDataplatformClusterLanArrayOutput() GetDataplatformClusterLanArrayOutput
	ToGetDataplatformClusterLanArrayOutputWithContext(context.Context) GetDataplatformClusterLanArrayOutput
}

type GetDataplatformClusterLanArray []GetDataplatformClusterLanInput

func (GetDataplatformClusterLanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformClusterLan)(nil)).Elem()
}

func (i GetDataplatformClusterLanArray) ToGetDataplatformClusterLanArrayOutput() GetDataplatformClusterLanArrayOutput {
	return i.ToGetDataplatformClusterLanArrayOutputWithContext(context.Background())
}

func (i GetDataplatformClusterLanArray) ToGetDataplatformClusterLanArrayOutputWithContext(ctx context.Context) GetDataplatformClusterLanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformClusterLanArrayOutput)
}

type GetDataplatformClusterLanOutput struct{ *pulumi.OutputState }

func (GetDataplatformClusterLanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformClusterLan)(nil)).Elem()
}

func (o GetDataplatformClusterLanOutput) ToGetDataplatformClusterLanOutput() GetDataplatformClusterLanOutput {
	return o
}

func (o GetDataplatformClusterLanOutput) ToGetDataplatformClusterLanOutputWithContext(ctx context.Context) GetDataplatformClusterLanOutput {
	return o
}

// Indicates if the Kubernetes node pool LAN will reserve an IP using DHCP. The default value is 'true'.
func (o GetDataplatformClusterLanOutput) Dhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDataplatformClusterLan) bool { return v.Dhcp }).(pulumi.BoolOutput)
}

// The LAN ID of an existing LAN at the related data center
func (o GetDataplatformClusterLanOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformClusterLan) string { return v.LanId }).(pulumi.StringOutput)
}

// An array of additional LANs attached to worker nodes
func (o GetDataplatformClusterLanOutput) Routes() GetDataplatformClusterLanRouteArrayOutput {
	return o.ApplyT(func(v GetDataplatformClusterLan) []GetDataplatformClusterLanRoute { return v.Routes }).(GetDataplatformClusterLanRouteArrayOutput)
}

type GetDataplatformClusterLanArrayOutput struct{ *pulumi.OutputState }

func (GetDataplatformClusterLanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformClusterLan)(nil)).Elem()
}

func (o GetDataplatformClusterLanArrayOutput) ToGetDataplatformClusterLanArrayOutput() GetDataplatformClusterLanArrayOutput {
	return o
}

func (o GetDataplatformClusterLanArrayOutput) ToGetDataplatformClusterLanArrayOutputWithContext(ctx context.Context) GetDataplatformClusterLanArrayOutput {
	return o
}

func (o GetDataplatformClusterLanArrayOutput) Index(i pulumi.IntInput) GetDataplatformClusterLanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataplatformClusterLan {
		return vs[0].([]GetDataplatformClusterLan)[vs[1].(int)]
	}).(GetDataplatformClusterLanOutput)
}

type GetDataplatformClusterLanRoute struct {
	// IPv4 or IPv6 gateway IP for the route
	Gateway string `pulumi:"gateway"`
	// IPv4 or IPv6 CIDR to be routed via the interface
	Network string `pulumi:"network"`
}

// GetDataplatformClusterLanRouteInput is an input type that accepts GetDataplatformClusterLanRouteArgs and GetDataplatformClusterLanRouteOutput values.
// You can construct a concrete instance of `GetDataplatformClusterLanRouteInput` via:
//
//	GetDataplatformClusterLanRouteArgs{...}
type GetDataplatformClusterLanRouteInput interface {
	pulumi.Input

	ToGetDataplatformClusterLanRouteOutput() GetDataplatformClusterLanRouteOutput
	ToGetDataplatformClusterLanRouteOutputWithContext(context.Context) GetDataplatformClusterLanRouteOutput
}

type GetDataplatformClusterLanRouteArgs struct {
	// IPv4 or IPv6 gateway IP for the route
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// IPv4 or IPv6 CIDR to be routed via the interface
	Network pulumi.StringInput `pulumi:"network"`
}

func (GetDataplatformClusterLanRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformClusterLanRoute)(nil)).Elem()
}

func (i GetDataplatformClusterLanRouteArgs) ToGetDataplatformClusterLanRouteOutput() GetDataplatformClusterLanRouteOutput {
	return i.ToGetDataplatformClusterLanRouteOutputWithContext(context.Background())
}

func (i GetDataplatformClusterLanRouteArgs) ToGetDataplatformClusterLanRouteOutputWithContext(ctx context.Context) GetDataplatformClusterLanRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformClusterLanRouteOutput)
}

// GetDataplatformClusterLanRouteArrayInput is an input type that accepts GetDataplatformClusterLanRouteArray and GetDataplatformClusterLanRouteArrayOutput values.
// You can construct a concrete instance of `GetDataplatformClusterLanRouteArrayInput` via:
//
//	GetDataplatformClusterLanRouteArray{ GetDataplatformClusterLanRouteArgs{...} }
type GetDataplatformClusterLanRouteArrayInput interface {
	pulumi.Input

	ToGetDataplatformClusterLanRouteArrayOutput() GetDataplatformClusterLanRouteArrayOutput
	ToGetDataplatformClusterLanRouteArrayOutputWithContext(context.Context) GetDataplatformClusterLanRouteArrayOutput
}

type GetDataplatformClusterLanRouteArray []GetDataplatformClusterLanRouteInput

func (GetDataplatformClusterLanRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformClusterLanRoute)(nil)).Elem()
}

func (i GetDataplatformClusterLanRouteArray) ToGetDataplatformClusterLanRouteArrayOutput() GetDataplatformClusterLanRouteArrayOutput {
	return i.ToGetDataplatformClusterLanRouteArrayOutputWithContext(context.Background())
}

func (i GetDataplatformClusterLanRouteArray) ToGetDataplatformClusterLanRouteArrayOutputWithContext(ctx context.Context) GetDataplatformClusterLanRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformClusterLanRouteArrayOutput)
}

type GetDataplatformClusterLanRouteOutput struct{ *pulumi.OutputState }

func (GetDataplatformClusterLanRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformClusterLanRoute)(nil)).Elem()
}

func (o GetDataplatformClusterLanRouteOutput) ToGetDataplatformClusterLanRouteOutput() GetDataplatformClusterLanRouteOutput {
	return o
}

func (o GetDataplatformClusterLanRouteOutput) ToGetDataplatformClusterLanRouteOutputWithContext(ctx context.Context) GetDataplatformClusterLanRouteOutput {
	return o
}

// IPv4 or IPv6 gateway IP for the route
func (o GetDataplatformClusterLanRouteOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformClusterLanRoute) string { return v.Gateway }).(pulumi.StringOutput)
}

// IPv4 or IPv6 CIDR to be routed via the interface
func (o GetDataplatformClusterLanRouteOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformClusterLanRoute) string { return v.Network }).(pulumi.StringOutput)
}

type GetDataplatformClusterLanRouteArrayOutput struct{ *pulumi.OutputState }

func (GetDataplatformClusterLanRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformClusterLanRoute)(nil)).Elem()
}

func (o GetDataplatformClusterLanRouteArrayOutput) ToGetDataplatformClusterLanRouteArrayOutput() GetDataplatformClusterLanRouteArrayOutput {
	return o
}

func (o GetDataplatformClusterLanRouteArrayOutput) ToGetDataplatformClusterLanRouteArrayOutputWithContext(ctx context.Context) GetDataplatformClusterLanRouteArrayOutput {
	return o
}

func (o GetDataplatformClusterLanRouteArrayOutput) Index(i pulumi.IntInput) GetDataplatformClusterLanRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataplatformClusterLanRoute {
		return vs[0].([]GetDataplatformClusterLanRoute)[vs[1].(int)]
	}).(GetDataplatformClusterLanRouteOutput)
}

type GetDataplatformClusterMaintenanceWindow struct {
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// Time at which the maintenance should start.
	Time string `pulumi:"time"`
}

// GetDataplatformClusterMaintenanceWindowInput is an input type that accepts GetDataplatformClusterMaintenanceWindowArgs and GetDataplatformClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetDataplatformClusterMaintenanceWindowInput` via:
//
//	GetDataplatformClusterMaintenanceWindowArgs{...}
type GetDataplatformClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToGetDataplatformClusterMaintenanceWindowOutput() GetDataplatformClusterMaintenanceWindowOutput
	ToGetDataplatformClusterMaintenanceWindowOutputWithContext(context.Context) GetDataplatformClusterMaintenanceWindowOutput
}

type GetDataplatformClusterMaintenanceWindowArgs struct {
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// Time at which the maintenance should start.
	Time pulumi.StringInput `pulumi:"time"`
}

func (GetDataplatformClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetDataplatformClusterMaintenanceWindowArgs) ToGetDataplatformClusterMaintenanceWindowOutput() GetDataplatformClusterMaintenanceWindowOutput {
	return i.ToGetDataplatformClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetDataplatformClusterMaintenanceWindowArgs) ToGetDataplatformClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetDataplatformClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformClusterMaintenanceWindowOutput)
}

// GetDataplatformClusterMaintenanceWindowArrayInput is an input type that accepts GetDataplatformClusterMaintenanceWindowArray and GetDataplatformClusterMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetDataplatformClusterMaintenanceWindowArrayInput` via:
//
//	GetDataplatformClusterMaintenanceWindowArray{ GetDataplatformClusterMaintenanceWindowArgs{...} }
type GetDataplatformClusterMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetDataplatformClusterMaintenanceWindowArrayOutput() GetDataplatformClusterMaintenanceWindowArrayOutput
	ToGetDataplatformClusterMaintenanceWindowArrayOutputWithContext(context.Context) GetDataplatformClusterMaintenanceWindowArrayOutput
}

type GetDataplatformClusterMaintenanceWindowArray []GetDataplatformClusterMaintenanceWindowInput

func (GetDataplatformClusterMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetDataplatformClusterMaintenanceWindowArray) ToGetDataplatformClusterMaintenanceWindowArrayOutput() GetDataplatformClusterMaintenanceWindowArrayOutput {
	return i.ToGetDataplatformClusterMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetDataplatformClusterMaintenanceWindowArray) ToGetDataplatformClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetDataplatformClusterMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformClusterMaintenanceWindowArrayOutput)
}

type GetDataplatformClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetDataplatformClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetDataplatformClusterMaintenanceWindowOutput) ToGetDataplatformClusterMaintenanceWindowOutput() GetDataplatformClusterMaintenanceWindowOutput {
	return o
}

func (o GetDataplatformClusterMaintenanceWindowOutput) ToGetDataplatformClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetDataplatformClusterMaintenanceWindowOutput {
	return o
}

func (o GetDataplatformClusterMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformClusterMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// Time at which the maintenance should start.
func (o GetDataplatformClusterMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformClusterMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type GetDataplatformClusterMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetDataplatformClusterMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetDataplatformClusterMaintenanceWindowArrayOutput) ToGetDataplatformClusterMaintenanceWindowArrayOutput() GetDataplatformClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetDataplatformClusterMaintenanceWindowArrayOutput) ToGetDataplatformClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetDataplatformClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetDataplatformClusterMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetDataplatformClusterMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataplatformClusterMaintenanceWindow {
		return vs[0].([]GetDataplatformClusterMaintenanceWindow)[vs[1].(int)]
	}).(GetDataplatformClusterMaintenanceWindowOutput)
}

type GetDataplatformNodePoolMaintenanceWindow struct {
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// Time at which the maintenance should start.
	Time string `pulumi:"time"`
}

// GetDataplatformNodePoolMaintenanceWindowInput is an input type that accepts GetDataplatformNodePoolMaintenanceWindowArgs and GetDataplatformNodePoolMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetDataplatformNodePoolMaintenanceWindowInput` via:
//
//	GetDataplatformNodePoolMaintenanceWindowArgs{...}
type GetDataplatformNodePoolMaintenanceWindowInput interface {
	pulumi.Input

	ToGetDataplatformNodePoolMaintenanceWindowOutput() GetDataplatformNodePoolMaintenanceWindowOutput
	ToGetDataplatformNodePoolMaintenanceWindowOutputWithContext(context.Context) GetDataplatformNodePoolMaintenanceWindowOutput
}

type GetDataplatformNodePoolMaintenanceWindowArgs struct {
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// Time at which the maintenance should start.
	Time pulumi.StringInput `pulumi:"time"`
}

func (GetDataplatformNodePoolMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformNodePoolMaintenanceWindow)(nil)).Elem()
}

func (i GetDataplatformNodePoolMaintenanceWindowArgs) ToGetDataplatformNodePoolMaintenanceWindowOutput() GetDataplatformNodePoolMaintenanceWindowOutput {
	return i.ToGetDataplatformNodePoolMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetDataplatformNodePoolMaintenanceWindowArgs) ToGetDataplatformNodePoolMaintenanceWindowOutputWithContext(ctx context.Context) GetDataplatformNodePoolMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformNodePoolMaintenanceWindowOutput)
}

// GetDataplatformNodePoolMaintenanceWindowArrayInput is an input type that accepts GetDataplatformNodePoolMaintenanceWindowArray and GetDataplatformNodePoolMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetDataplatformNodePoolMaintenanceWindowArrayInput` via:
//
//	GetDataplatformNodePoolMaintenanceWindowArray{ GetDataplatformNodePoolMaintenanceWindowArgs{...} }
type GetDataplatformNodePoolMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetDataplatformNodePoolMaintenanceWindowArrayOutput() GetDataplatformNodePoolMaintenanceWindowArrayOutput
	ToGetDataplatformNodePoolMaintenanceWindowArrayOutputWithContext(context.Context) GetDataplatformNodePoolMaintenanceWindowArrayOutput
}

type GetDataplatformNodePoolMaintenanceWindowArray []GetDataplatformNodePoolMaintenanceWindowInput

func (GetDataplatformNodePoolMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformNodePoolMaintenanceWindow)(nil)).Elem()
}

func (i GetDataplatformNodePoolMaintenanceWindowArray) ToGetDataplatformNodePoolMaintenanceWindowArrayOutput() GetDataplatformNodePoolMaintenanceWindowArrayOutput {
	return i.ToGetDataplatformNodePoolMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetDataplatformNodePoolMaintenanceWindowArray) ToGetDataplatformNodePoolMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetDataplatformNodePoolMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformNodePoolMaintenanceWindowArrayOutput)
}

type GetDataplatformNodePoolMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetDataplatformNodePoolMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformNodePoolMaintenanceWindow)(nil)).Elem()
}

func (o GetDataplatformNodePoolMaintenanceWindowOutput) ToGetDataplatformNodePoolMaintenanceWindowOutput() GetDataplatformNodePoolMaintenanceWindowOutput {
	return o
}

func (o GetDataplatformNodePoolMaintenanceWindowOutput) ToGetDataplatformNodePoolMaintenanceWindowOutputWithContext(ctx context.Context) GetDataplatformNodePoolMaintenanceWindowOutput {
	return o
}

func (o GetDataplatformNodePoolMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// Time at which the maintenance should start.
func (o GetDataplatformNodePoolMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type GetDataplatformNodePoolMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetDataplatformNodePoolMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformNodePoolMaintenanceWindow)(nil)).Elem()
}

func (o GetDataplatformNodePoolMaintenanceWindowArrayOutput) ToGetDataplatformNodePoolMaintenanceWindowArrayOutput() GetDataplatformNodePoolMaintenanceWindowArrayOutput {
	return o
}

func (o GetDataplatformNodePoolMaintenanceWindowArrayOutput) ToGetDataplatformNodePoolMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetDataplatformNodePoolMaintenanceWindowArrayOutput {
	return o
}

func (o GetDataplatformNodePoolMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetDataplatformNodePoolMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataplatformNodePoolMaintenanceWindow {
		return vs[0].([]GetDataplatformNodePoolMaintenanceWindow)[vs[1].(int)]
	}).(GetDataplatformNodePoolMaintenanceWindowOutput)
}

type GetDataplatformNodePoolsNodePool struct {
	// Key-value pairs attached to node pool resource as kubernetes annotations
	Annotations map[string]string `pulumi:"annotations"`
	// The availability zone of the virtual datacenter region where the node pool resources should be provisioned.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The number of CPU cores per node.
	CoresCount int `pulumi:"coresCount"`
	// A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource.
	CpuFamily string `pulumi:"cpuFamily"`
	// The UUID of the virtual data center (VDC) in which the node pool is provisioned
	DatacenterId string `pulumi:"datacenterId"`
	Id           string `pulumi:"id"`
	// Key-value pairs attached to the node pool resource as kubernetes labels
	Labels map[string]string `pulumi:"labels"`
	// Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
	MaintenanceWindows []GetDataplatformNodePoolsNodePoolMaintenanceWindow `pulumi:"maintenanceWindows"`
	// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name string `pulumi:"name"`
	// The number of nodes that make up the node pool.
	NodeCount int `pulumi:"nodeCount"`
	// The RAM size for one node in MB. Must be set in multiples of 1024 MB, with a minimum size is of 2048 MB.
	RamSize int `pulumi:"ramSize"`
	// The size of the volume in GB. The size must be greater than 10GB.
	StorageSize int `pulumi:"storageSize"`
	// The type of hardware for the volume.
	StorageType string `pulumi:"storageType"`
	// The version of the Data Platform.
	Version string `pulumi:"version"`
}

// GetDataplatformNodePoolsNodePoolInput is an input type that accepts GetDataplatformNodePoolsNodePoolArgs and GetDataplatformNodePoolsNodePoolOutput values.
// You can construct a concrete instance of `GetDataplatformNodePoolsNodePoolInput` via:
//
//	GetDataplatformNodePoolsNodePoolArgs{...}
type GetDataplatformNodePoolsNodePoolInput interface {
	pulumi.Input

	ToGetDataplatformNodePoolsNodePoolOutput() GetDataplatformNodePoolsNodePoolOutput
	ToGetDataplatformNodePoolsNodePoolOutputWithContext(context.Context) GetDataplatformNodePoolsNodePoolOutput
}

type GetDataplatformNodePoolsNodePoolArgs struct {
	// Key-value pairs attached to node pool resource as kubernetes annotations
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// The availability zone of the virtual datacenter region where the node pool resources should be provisioned.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// The number of CPU cores per node.
	CoresCount pulumi.IntInput `pulumi:"coresCount"`
	// A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource.
	CpuFamily pulumi.StringInput `pulumi:"cpuFamily"`
	// The UUID of the virtual data center (VDC) in which the node pool is provisioned
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	Id           pulumi.StringInput `pulumi:"id"`
	// Key-value pairs attached to the node pool resource as kubernetes labels
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
	MaintenanceWindows GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayInput `pulumi:"maintenanceWindows"`
	// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of nodes that make up the node pool.
	NodeCount pulumi.IntInput `pulumi:"nodeCount"`
	// The RAM size for one node in MB. Must be set in multiples of 1024 MB, with a minimum size is of 2048 MB.
	RamSize pulumi.IntInput `pulumi:"ramSize"`
	// The size of the volume in GB. The size must be greater than 10GB.
	StorageSize pulumi.IntInput `pulumi:"storageSize"`
	// The type of hardware for the volume.
	StorageType pulumi.StringInput `pulumi:"storageType"`
	// The version of the Data Platform.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetDataplatformNodePoolsNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformNodePoolsNodePool)(nil)).Elem()
}

func (i GetDataplatformNodePoolsNodePoolArgs) ToGetDataplatformNodePoolsNodePoolOutput() GetDataplatformNodePoolsNodePoolOutput {
	return i.ToGetDataplatformNodePoolsNodePoolOutputWithContext(context.Background())
}

func (i GetDataplatformNodePoolsNodePoolArgs) ToGetDataplatformNodePoolsNodePoolOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformNodePoolsNodePoolOutput)
}

// GetDataplatformNodePoolsNodePoolArrayInput is an input type that accepts GetDataplatformNodePoolsNodePoolArray and GetDataplatformNodePoolsNodePoolArrayOutput values.
// You can construct a concrete instance of `GetDataplatformNodePoolsNodePoolArrayInput` via:
//
//	GetDataplatformNodePoolsNodePoolArray{ GetDataplatformNodePoolsNodePoolArgs{...} }
type GetDataplatformNodePoolsNodePoolArrayInput interface {
	pulumi.Input

	ToGetDataplatformNodePoolsNodePoolArrayOutput() GetDataplatformNodePoolsNodePoolArrayOutput
	ToGetDataplatformNodePoolsNodePoolArrayOutputWithContext(context.Context) GetDataplatformNodePoolsNodePoolArrayOutput
}

type GetDataplatformNodePoolsNodePoolArray []GetDataplatformNodePoolsNodePoolInput

func (GetDataplatformNodePoolsNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformNodePoolsNodePool)(nil)).Elem()
}

func (i GetDataplatformNodePoolsNodePoolArray) ToGetDataplatformNodePoolsNodePoolArrayOutput() GetDataplatformNodePoolsNodePoolArrayOutput {
	return i.ToGetDataplatformNodePoolsNodePoolArrayOutputWithContext(context.Background())
}

func (i GetDataplatformNodePoolsNodePoolArray) ToGetDataplatformNodePoolsNodePoolArrayOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformNodePoolsNodePoolArrayOutput)
}

type GetDataplatformNodePoolsNodePoolOutput struct{ *pulumi.OutputState }

func (GetDataplatformNodePoolsNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformNodePoolsNodePool)(nil)).Elem()
}

func (o GetDataplatformNodePoolsNodePoolOutput) ToGetDataplatformNodePoolsNodePoolOutput() GetDataplatformNodePoolsNodePoolOutput {
	return o
}

func (o GetDataplatformNodePoolsNodePoolOutput) ToGetDataplatformNodePoolsNodePoolOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolOutput {
	return o
}

// Key-value pairs attached to node pool resource as kubernetes annotations
func (o GetDataplatformNodePoolsNodePoolOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// The availability zone of the virtual datacenter region where the node pool resources should be provisioned.
func (o GetDataplatformNodePoolsNodePoolOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The number of CPU cores per node.
func (o GetDataplatformNodePoolsNodePoolOutput) CoresCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) int { return v.CoresCount }).(pulumi.IntOutput)
}

// A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource.
func (o GetDataplatformNodePoolsNodePoolOutput) CpuFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) string { return v.CpuFamily }).(pulumi.StringOutput)
}

// The UUID of the virtual data center (VDC) in which the node pool is provisioned
func (o GetDataplatformNodePoolsNodePoolOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) string { return v.DatacenterId }).(pulumi.StringOutput)
}

func (o GetDataplatformNodePoolsNodePoolOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) string { return v.Id }).(pulumi.StringOutput)
}

// Key-value pairs attached to the node pool resource as kubernetes labels
func (o GetDataplatformNodePoolsNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
func (o GetDataplatformNodePoolsNodePoolOutput) MaintenanceWindows() GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) []GetDataplatformNodePoolsNodePoolMaintenanceWindow {
		return v.MaintenanceWindows
	}).(GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput)
}

// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
func (o GetDataplatformNodePoolsNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) string { return v.Name }).(pulumi.StringOutput)
}

// The number of nodes that make up the node pool.
func (o GetDataplatformNodePoolsNodePoolOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) int { return v.NodeCount }).(pulumi.IntOutput)
}

// The RAM size for one node in MB. Must be set in multiples of 1024 MB, with a minimum size is of 2048 MB.
func (o GetDataplatformNodePoolsNodePoolOutput) RamSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) int { return v.RamSize }).(pulumi.IntOutput)
}

// The size of the volume in GB. The size must be greater than 10GB.
func (o GetDataplatformNodePoolsNodePoolOutput) StorageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) int { return v.StorageSize }).(pulumi.IntOutput)
}

// The type of hardware for the volume.
func (o GetDataplatformNodePoolsNodePoolOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) string { return v.StorageType }).(pulumi.StringOutput)
}

// The version of the Data Platform.
func (o GetDataplatformNodePoolsNodePoolOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) string { return v.Version }).(pulumi.StringOutput)
}

type GetDataplatformNodePoolsNodePoolArrayOutput struct{ *pulumi.OutputState }

func (GetDataplatformNodePoolsNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformNodePoolsNodePool)(nil)).Elem()
}

func (o GetDataplatformNodePoolsNodePoolArrayOutput) ToGetDataplatformNodePoolsNodePoolArrayOutput() GetDataplatformNodePoolsNodePoolArrayOutput {
	return o
}

func (o GetDataplatformNodePoolsNodePoolArrayOutput) ToGetDataplatformNodePoolsNodePoolArrayOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolArrayOutput {
	return o
}

func (o GetDataplatformNodePoolsNodePoolArrayOutput) Index(i pulumi.IntInput) GetDataplatformNodePoolsNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataplatformNodePoolsNodePool {
		return vs[0].([]GetDataplatformNodePoolsNodePool)[vs[1].(int)]
	}).(GetDataplatformNodePoolsNodePoolOutput)
}

type GetDataplatformNodePoolsNodePoolMaintenanceWindow struct {
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// Time at which the maintenance should start. Must conform to the 'HH:MM:SS' 24-hour format.
	Time string `pulumi:"time"`
}

// GetDataplatformNodePoolsNodePoolMaintenanceWindowInput is an input type that accepts GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs and GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetDataplatformNodePoolsNodePoolMaintenanceWindowInput` via:
//
//	GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs{...}
type GetDataplatformNodePoolsNodePoolMaintenanceWindowInput interface {
	pulumi.Input

	ToGetDataplatformNodePoolsNodePoolMaintenanceWindowOutput() GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput
	ToGetDataplatformNodePoolsNodePoolMaintenanceWindowOutputWithContext(context.Context) GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput
}

type GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs struct {
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// Time at which the maintenance should start. Must conform to the 'HH:MM:SS' 24-hour format.
	Time pulumi.StringInput `pulumi:"time"`
}

func (GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformNodePoolsNodePoolMaintenanceWindow)(nil)).Elem()
}

func (i GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowOutput() GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput {
	return i.ToGetDataplatformNodePoolsNodePoolMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput)
}

// GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayInput is an input type that accepts GetDataplatformNodePoolsNodePoolMaintenanceWindowArray and GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayInput` via:
//
//	GetDataplatformNodePoolsNodePoolMaintenanceWindowArray{ GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs{...} }
type GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput() GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput
	ToGetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutputWithContext(context.Context) GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput
}

type GetDataplatformNodePoolsNodePoolMaintenanceWindowArray []GetDataplatformNodePoolsNodePoolMaintenanceWindowInput

func (GetDataplatformNodePoolsNodePoolMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformNodePoolsNodePoolMaintenanceWindow)(nil)).Elem()
}

func (i GetDataplatformNodePoolsNodePoolMaintenanceWindowArray) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput() GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput {
	return i.ToGetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetDataplatformNodePoolsNodePoolMaintenanceWindowArray) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput)
}

type GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformNodePoolsNodePoolMaintenanceWindow)(nil)).Elem()
}

func (o GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowOutput() GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput {
	return o
}

func (o GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput {
	return o
}

func (o GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePoolMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// Time at which the maintenance should start. Must conform to the 'HH:MM:SS' 24-hour format.
func (o GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePoolMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformNodePoolsNodePoolMaintenanceWindow)(nil)).Elem()
}

func (o GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput() GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput {
	return o
}

func (o GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput {
	return o
}

func (o GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataplatformNodePoolsNodePoolMaintenanceWindow {
		return vs[0].([]GetDataplatformNodePoolsNodePoolMaintenanceWindow)[vs[1].(int)]
	}).(GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput)
}

type GetGroupUser struct {
	Administrator bool   `pulumi:"administrator"`
	Email         string `pulumi:"email"`
	FirstName     string `pulumi:"firstName"`
	ForceSecAuth  bool   `pulumi:"forceSecAuth"`
	// ID of the group you want to search for.
	//
	// Either `name` or `id` must be provided. If none, or both are provided, the datasource will return an error.
	Id       string `pulumi:"id"`
	LastName string `pulumi:"lastName"`
}

// GetGroupUserInput is an input type that accepts GetGroupUserArgs and GetGroupUserOutput values.
// You can construct a concrete instance of `GetGroupUserInput` via:
//
//	GetGroupUserArgs{...}
type GetGroupUserInput interface {
	pulumi.Input

	ToGetGroupUserOutput() GetGroupUserOutput
	ToGetGroupUserOutputWithContext(context.Context) GetGroupUserOutput
}

type GetGroupUserArgs struct {
	Administrator pulumi.BoolInput   `pulumi:"administrator"`
	Email         pulumi.StringInput `pulumi:"email"`
	FirstName     pulumi.StringInput `pulumi:"firstName"`
	ForceSecAuth  pulumi.BoolInput   `pulumi:"forceSecAuth"`
	// ID of the group you want to search for.
	//
	// Either `name` or `id` must be provided. If none, or both are provided, the datasource will return an error.
	Id       pulumi.StringInput `pulumi:"id"`
	LastName pulumi.StringInput `pulumi:"lastName"`
}

func (GetGroupUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupUser)(nil)).Elem()
}

func (i GetGroupUserArgs) ToGetGroupUserOutput() GetGroupUserOutput {
	return i.ToGetGroupUserOutputWithContext(context.Background())
}

func (i GetGroupUserArgs) ToGetGroupUserOutputWithContext(ctx context.Context) GetGroupUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupUserOutput)
}

// GetGroupUserArrayInput is an input type that accepts GetGroupUserArray and GetGroupUserArrayOutput values.
// You can construct a concrete instance of `GetGroupUserArrayInput` via:
//
//	GetGroupUserArray{ GetGroupUserArgs{...} }
type GetGroupUserArrayInput interface {
	pulumi.Input

	ToGetGroupUserArrayOutput() GetGroupUserArrayOutput
	ToGetGroupUserArrayOutputWithContext(context.Context) GetGroupUserArrayOutput
}

type GetGroupUserArray []GetGroupUserInput

func (GetGroupUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupUser)(nil)).Elem()
}

func (i GetGroupUserArray) ToGetGroupUserArrayOutput() GetGroupUserArrayOutput {
	return i.ToGetGroupUserArrayOutputWithContext(context.Background())
}

func (i GetGroupUserArray) ToGetGroupUserArrayOutputWithContext(ctx context.Context) GetGroupUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupUserArrayOutput)
}

type GetGroupUserOutput struct{ *pulumi.OutputState }

func (GetGroupUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupUser)(nil)).Elem()
}

func (o GetGroupUserOutput) ToGetGroupUserOutput() GetGroupUserOutput {
	return o
}

func (o GetGroupUserOutput) ToGetGroupUserOutputWithContext(ctx context.Context) GetGroupUserOutput {
	return o
}

func (o GetGroupUserOutput) Administrator() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGroupUser) bool { return v.Administrator }).(pulumi.BoolOutput)
}

func (o GetGroupUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupUser) string { return v.Email }).(pulumi.StringOutput)
}

func (o GetGroupUserOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupUser) string { return v.FirstName }).(pulumi.StringOutput)
}

func (o GetGroupUserOutput) ForceSecAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGroupUser) bool { return v.ForceSecAuth }).(pulumi.BoolOutput)
}

// ID of the group you want to search for.
//
// Either `name` or `id` must be provided. If none, or both are provided, the datasource will return an error.
func (o GetGroupUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetGroupUserOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupUser) string { return v.LastName }).(pulumi.StringOutput)
}

type GetGroupUserArrayOutput struct{ *pulumi.OutputState }

func (GetGroupUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupUser)(nil)).Elem()
}

func (o GetGroupUserArrayOutput) ToGetGroupUserArrayOutput() GetGroupUserArrayOutput {
	return o
}

func (o GetGroupUserArrayOutput) ToGetGroupUserArrayOutputWithContext(ctx context.Context) GetGroupUserArrayOutput {
	return o
}

func (o GetGroupUserArrayOutput) Index(i pulumi.IntInput) GetGroupUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupUser {
		return vs[0].([]GetGroupUser)[vs[1].(int)]
	}).(GetGroupUserOutput)
}

type GetInmemorydbReplicasetConnection struct {
	// The IP and subnet for your Replicaset.
	Cidr string `pulumi:"cidr"`
	// The datacenter to connect your Replicaset to.
	DatacenterId string `pulumi:"datacenterId"`
	// The numeric LAN ID to connect your Replicaset to.
	LanId string `pulumi:"lanId"`
}

// GetInmemorydbReplicasetConnectionInput is an input type that accepts GetInmemorydbReplicasetConnectionArgs and GetInmemorydbReplicasetConnectionOutput values.
// You can construct a concrete instance of `GetInmemorydbReplicasetConnectionInput` via:
//
//	GetInmemorydbReplicasetConnectionArgs{...}
type GetInmemorydbReplicasetConnectionInput interface {
	pulumi.Input

	ToGetInmemorydbReplicasetConnectionOutput() GetInmemorydbReplicasetConnectionOutput
	ToGetInmemorydbReplicasetConnectionOutputWithContext(context.Context) GetInmemorydbReplicasetConnectionOutput
}

type GetInmemorydbReplicasetConnectionArgs struct {
	// The IP and subnet for your Replicaset.
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// The datacenter to connect your Replicaset to.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// The numeric LAN ID to connect your Replicaset to.
	LanId pulumi.StringInput `pulumi:"lanId"`
}

func (GetInmemorydbReplicasetConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInmemorydbReplicasetConnection)(nil)).Elem()
}

func (i GetInmemorydbReplicasetConnectionArgs) ToGetInmemorydbReplicasetConnectionOutput() GetInmemorydbReplicasetConnectionOutput {
	return i.ToGetInmemorydbReplicasetConnectionOutputWithContext(context.Background())
}

func (i GetInmemorydbReplicasetConnectionArgs) ToGetInmemorydbReplicasetConnectionOutputWithContext(ctx context.Context) GetInmemorydbReplicasetConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInmemorydbReplicasetConnectionOutput)
}

// GetInmemorydbReplicasetConnectionArrayInput is an input type that accepts GetInmemorydbReplicasetConnectionArray and GetInmemorydbReplicasetConnectionArrayOutput values.
// You can construct a concrete instance of `GetInmemorydbReplicasetConnectionArrayInput` via:
//
//	GetInmemorydbReplicasetConnectionArray{ GetInmemorydbReplicasetConnectionArgs{...} }
type GetInmemorydbReplicasetConnectionArrayInput interface {
	pulumi.Input

	ToGetInmemorydbReplicasetConnectionArrayOutput() GetInmemorydbReplicasetConnectionArrayOutput
	ToGetInmemorydbReplicasetConnectionArrayOutputWithContext(context.Context) GetInmemorydbReplicasetConnectionArrayOutput
}

type GetInmemorydbReplicasetConnectionArray []GetInmemorydbReplicasetConnectionInput

func (GetInmemorydbReplicasetConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInmemorydbReplicasetConnection)(nil)).Elem()
}

func (i GetInmemorydbReplicasetConnectionArray) ToGetInmemorydbReplicasetConnectionArrayOutput() GetInmemorydbReplicasetConnectionArrayOutput {
	return i.ToGetInmemorydbReplicasetConnectionArrayOutputWithContext(context.Background())
}

func (i GetInmemorydbReplicasetConnectionArray) ToGetInmemorydbReplicasetConnectionArrayOutputWithContext(ctx context.Context) GetInmemorydbReplicasetConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInmemorydbReplicasetConnectionArrayOutput)
}

type GetInmemorydbReplicasetConnectionOutput struct{ *pulumi.OutputState }

func (GetInmemorydbReplicasetConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInmemorydbReplicasetConnection)(nil)).Elem()
}

func (o GetInmemorydbReplicasetConnectionOutput) ToGetInmemorydbReplicasetConnectionOutput() GetInmemorydbReplicasetConnectionOutput {
	return o
}

func (o GetInmemorydbReplicasetConnectionOutput) ToGetInmemorydbReplicasetConnectionOutputWithContext(ctx context.Context) GetInmemorydbReplicasetConnectionOutput {
	return o
}

// The IP and subnet for your Replicaset.
func (o GetInmemorydbReplicasetConnectionOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbReplicasetConnection) string { return v.Cidr }).(pulumi.StringOutput)
}

// The datacenter to connect your Replicaset to.
func (o GetInmemorydbReplicasetConnectionOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbReplicasetConnection) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// The numeric LAN ID to connect your Replicaset to.
func (o GetInmemorydbReplicasetConnectionOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbReplicasetConnection) string { return v.LanId }).(pulumi.StringOutput)
}

type GetInmemorydbReplicasetConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetInmemorydbReplicasetConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInmemorydbReplicasetConnection)(nil)).Elem()
}

func (o GetInmemorydbReplicasetConnectionArrayOutput) ToGetInmemorydbReplicasetConnectionArrayOutput() GetInmemorydbReplicasetConnectionArrayOutput {
	return o
}

func (o GetInmemorydbReplicasetConnectionArrayOutput) ToGetInmemorydbReplicasetConnectionArrayOutputWithContext(ctx context.Context) GetInmemorydbReplicasetConnectionArrayOutput {
	return o
}

func (o GetInmemorydbReplicasetConnectionArrayOutput) Index(i pulumi.IntInput) GetInmemorydbReplicasetConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInmemorydbReplicasetConnection {
		return vs[0].([]GetInmemorydbReplicasetConnection)[vs[1].(int)]
	}).(GetInmemorydbReplicasetConnectionOutput)
}

type GetInmemorydbReplicasetCredential struct {
	// The username for your Replicaset.
	Username string `pulumi:"username"`
}

// GetInmemorydbReplicasetCredentialInput is an input type that accepts GetInmemorydbReplicasetCredentialArgs and GetInmemorydbReplicasetCredentialOutput values.
// You can construct a concrete instance of `GetInmemorydbReplicasetCredentialInput` via:
//
//	GetInmemorydbReplicasetCredentialArgs{...}
type GetInmemorydbReplicasetCredentialInput interface {
	pulumi.Input

	ToGetInmemorydbReplicasetCredentialOutput() GetInmemorydbReplicasetCredentialOutput
	ToGetInmemorydbReplicasetCredentialOutputWithContext(context.Context) GetInmemorydbReplicasetCredentialOutput
}

type GetInmemorydbReplicasetCredentialArgs struct {
	// The username for your Replicaset.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetInmemorydbReplicasetCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInmemorydbReplicasetCredential)(nil)).Elem()
}

func (i GetInmemorydbReplicasetCredentialArgs) ToGetInmemorydbReplicasetCredentialOutput() GetInmemorydbReplicasetCredentialOutput {
	return i.ToGetInmemorydbReplicasetCredentialOutputWithContext(context.Background())
}

func (i GetInmemorydbReplicasetCredentialArgs) ToGetInmemorydbReplicasetCredentialOutputWithContext(ctx context.Context) GetInmemorydbReplicasetCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInmemorydbReplicasetCredentialOutput)
}

// GetInmemorydbReplicasetCredentialArrayInput is an input type that accepts GetInmemorydbReplicasetCredentialArray and GetInmemorydbReplicasetCredentialArrayOutput values.
// You can construct a concrete instance of `GetInmemorydbReplicasetCredentialArrayInput` via:
//
//	GetInmemorydbReplicasetCredentialArray{ GetInmemorydbReplicasetCredentialArgs{...} }
type GetInmemorydbReplicasetCredentialArrayInput interface {
	pulumi.Input

	ToGetInmemorydbReplicasetCredentialArrayOutput() GetInmemorydbReplicasetCredentialArrayOutput
	ToGetInmemorydbReplicasetCredentialArrayOutputWithContext(context.Context) GetInmemorydbReplicasetCredentialArrayOutput
}

type GetInmemorydbReplicasetCredentialArray []GetInmemorydbReplicasetCredentialInput

func (GetInmemorydbReplicasetCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInmemorydbReplicasetCredential)(nil)).Elem()
}

func (i GetInmemorydbReplicasetCredentialArray) ToGetInmemorydbReplicasetCredentialArrayOutput() GetInmemorydbReplicasetCredentialArrayOutput {
	return i.ToGetInmemorydbReplicasetCredentialArrayOutputWithContext(context.Background())
}

func (i GetInmemorydbReplicasetCredentialArray) ToGetInmemorydbReplicasetCredentialArrayOutputWithContext(ctx context.Context) GetInmemorydbReplicasetCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInmemorydbReplicasetCredentialArrayOutput)
}

type GetInmemorydbReplicasetCredentialOutput struct{ *pulumi.OutputState }

func (GetInmemorydbReplicasetCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInmemorydbReplicasetCredential)(nil)).Elem()
}

func (o GetInmemorydbReplicasetCredentialOutput) ToGetInmemorydbReplicasetCredentialOutput() GetInmemorydbReplicasetCredentialOutput {
	return o
}

func (o GetInmemorydbReplicasetCredentialOutput) ToGetInmemorydbReplicasetCredentialOutputWithContext(ctx context.Context) GetInmemorydbReplicasetCredentialOutput {
	return o
}

// The username for your Replicaset.
func (o GetInmemorydbReplicasetCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbReplicasetCredential) string { return v.Username }).(pulumi.StringOutput)
}

type GetInmemorydbReplicasetCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetInmemorydbReplicasetCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInmemorydbReplicasetCredential)(nil)).Elem()
}

func (o GetInmemorydbReplicasetCredentialArrayOutput) ToGetInmemorydbReplicasetCredentialArrayOutput() GetInmemorydbReplicasetCredentialArrayOutput {
	return o
}

func (o GetInmemorydbReplicasetCredentialArrayOutput) ToGetInmemorydbReplicasetCredentialArrayOutputWithContext(ctx context.Context) GetInmemorydbReplicasetCredentialArrayOutput {
	return o
}

func (o GetInmemorydbReplicasetCredentialArrayOutput) Index(i pulumi.IntInput) GetInmemorydbReplicasetCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInmemorydbReplicasetCredential {
		return vs[0].([]GetInmemorydbReplicasetCredential)[vs[1].(int)]
	}).(GetInmemorydbReplicasetCredentialOutput)
}

type GetInmemorydbReplicasetMaintenanceWindow struct {
	// The name of the week day.
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// Start of the maintenance window in UTC time.
	Time string `pulumi:"time"`
}

// GetInmemorydbReplicasetMaintenanceWindowInput is an input type that accepts GetInmemorydbReplicasetMaintenanceWindowArgs and GetInmemorydbReplicasetMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetInmemorydbReplicasetMaintenanceWindowInput` via:
//
//	GetInmemorydbReplicasetMaintenanceWindowArgs{...}
type GetInmemorydbReplicasetMaintenanceWindowInput interface {
	pulumi.Input

	ToGetInmemorydbReplicasetMaintenanceWindowOutput() GetInmemorydbReplicasetMaintenanceWindowOutput
	ToGetInmemorydbReplicasetMaintenanceWindowOutputWithContext(context.Context) GetInmemorydbReplicasetMaintenanceWindowOutput
}

type GetInmemorydbReplicasetMaintenanceWindowArgs struct {
	// The name of the week day.
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// Start of the maintenance window in UTC time.
	Time pulumi.StringInput `pulumi:"time"`
}

func (GetInmemorydbReplicasetMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInmemorydbReplicasetMaintenanceWindow)(nil)).Elem()
}

func (i GetInmemorydbReplicasetMaintenanceWindowArgs) ToGetInmemorydbReplicasetMaintenanceWindowOutput() GetInmemorydbReplicasetMaintenanceWindowOutput {
	return i.ToGetInmemorydbReplicasetMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetInmemorydbReplicasetMaintenanceWindowArgs) ToGetInmemorydbReplicasetMaintenanceWindowOutputWithContext(ctx context.Context) GetInmemorydbReplicasetMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInmemorydbReplicasetMaintenanceWindowOutput)
}

// GetInmemorydbReplicasetMaintenanceWindowArrayInput is an input type that accepts GetInmemorydbReplicasetMaintenanceWindowArray and GetInmemorydbReplicasetMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetInmemorydbReplicasetMaintenanceWindowArrayInput` via:
//
//	GetInmemorydbReplicasetMaintenanceWindowArray{ GetInmemorydbReplicasetMaintenanceWindowArgs{...} }
type GetInmemorydbReplicasetMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetInmemorydbReplicasetMaintenanceWindowArrayOutput() GetInmemorydbReplicasetMaintenanceWindowArrayOutput
	ToGetInmemorydbReplicasetMaintenanceWindowArrayOutputWithContext(context.Context) GetInmemorydbReplicasetMaintenanceWindowArrayOutput
}

type GetInmemorydbReplicasetMaintenanceWindowArray []GetInmemorydbReplicasetMaintenanceWindowInput

func (GetInmemorydbReplicasetMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInmemorydbReplicasetMaintenanceWindow)(nil)).Elem()
}

func (i GetInmemorydbReplicasetMaintenanceWindowArray) ToGetInmemorydbReplicasetMaintenanceWindowArrayOutput() GetInmemorydbReplicasetMaintenanceWindowArrayOutput {
	return i.ToGetInmemorydbReplicasetMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetInmemorydbReplicasetMaintenanceWindowArray) ToGetInmemorydbReplicasetMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetInmemorydbReplicasetMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInmemorydbReplicasetMaintenanceWindowArrayOutput)
}

type GetInmemorydbReplicasetMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetInmemorydbReplicasetMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInmemorydbReplicasetMaintenanceWindow)(nil)).Elem()
}

func (o GetInmemorydbReplicasetMaintenanceWindowOutput) ToGetInmemorydbReplicasetMaintenanceWindowOutput() GetInmemorydbReplicasetMaintenanceWindowOutput {
	return o
}

func (o GetInmemorydbReplicasetMaintenanceWindowOutput) ToGetInmemorydbReplicasetMaintenanceWindowOutputWithContext(ctx context.Context) GetInmemorydbReplicasetMaintenanceWindowOutput {
	return o
}

// The name of the week day.
func (o GetInmemorydbReplicasetMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbReplicasetMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// Start of the maintenance window in UTC time.
func (o GetInmemorydbReplicasetMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbReplicasetMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type GetInmemorydbReplicasetMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetInmemorydbReplicasetMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInmemorydbReplicasetMaintenanceWindow)(nil)).Elem()
}

func (o GetInmemorydbReplicasetMaintenanceWindowArrayOutput) ToGetInmemorydbReplicasetMaintenanceWindowArrayOutput() GetInmemorydbReplicasetMaintenanceWindowArrayOutput {
	return o
}

func (o GetInmemorydbReplicasetMaintenanceWindowArrayOutput) ToGetInmemorydbReplicasetMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetInmemorydbReplicasetMaintenanceWindowArrayOutput {
	return o
}

func (o GetInmemorydbReplicasetMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetInmemorydbReplicasetMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInmemorydbReplicasetMaintenanceWindow {
		return vs[0].([]GetInmemorydbReplicasetMaintenanceWindow)[vs[1].(int)]
	}).(GetInmemorydbReplicasetMaintenanceWindowOutput)
}

type GetInmemorydbReplicasetResource struct {
	// The number of CPU cores per instance.
	Cores int `pulumi:"cores"`
	// The amount of memory per instance in gigabytes (GB).
	Ram int `pulumi:"ram"`
	// The amount of storage per instance in gigabytes (GB).
	Storage int `pulumi:"storage"`
}

// GetInmemorydbReplicasetResourceInput is an input type that accepts GetInmemorydbReplicasetResourceArgs and GetInmemorydbReplicasetResourceOutput values.
// You can construct a concrete instance of `GetInmemorydbReplicasetResourceInput` via:
//
//	GetInmemorydbReplicasetResourceArgs{...}
type GetInmemorydbReplicasetResourceInput interface {
	pulumi.Input

	ToGetInmemorydbReplicasetResourceOutput() GetInmemorydbReplicasetResourceOutput
	ToGetInmemorydbReplicasetResourceOutputWithContext(context.Context) GetInmemorydbReplicasetResourceOutput
}

type GetInmemorydbReplicasetResourceArgs struct {
	// The number of CPU cores per instance.
	Cores pulumi.IntInput `pulumi:"cores"`
	// The amount of memory per instance in gigabytes (GB).
	Ram pulumi.IntInput `pulumi:"ram"`
	// The amount of storage per instance in gigabytes (GB).
	Storage pulumi.IntInput `pulumi:"storage"`
}

func (GetInmemorydbReplicasetResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInmemorydbReplicasetResource)(nil)).Elem()
}

func (i GetInmemorydbReplicasetResourceArgs) ToGetInmemorydbReplicasetResourceOutput() GetInmemorydbReplicasetResourceOutput {
	return i.ToGetInmemorydbReplicasetResourceOutputWithContext(context.Background())
}

func (i GetInmemorydbReplicasetResourceArgs) ToGetInmemorydbReplicasetResourceOutputWithContext(ctx context.Context) GetInmemorydbReplicasetResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInmemorydbReplicasetResourceOutput)
}

// GetInmemorydbReplicasetResourceArrayInput is an input type that accepts GetInmemorydbReplicasetResourceArray and GetInmemorydbReplicasetResourceArrayOutput values.
// You can construct a concrete instance of `GetInmemorydbReplicasetResourceArrayInput` via:
//
//	GetInmemorydbReplicasetResourceArray{ GetInmemorydbReplicasetResourceArgs{...} }
type GetInmemorydbReplicasetResourceArrayInput interface {
	pulumi.Input

	ToGetInmemorydbReplicasetResourceArrayOutput() GetInmemorydbReplicasetResourceArrayOutput
	ToGetInmemorydbReplicasetResourceArrayOutputWithContext(context.Context) GetInmemorydbReplicasetResourceArrayOutput
}

type GetInmemorydbReplicasetResourceArray []GetInmemorydbReplicasetResourceInput

func (GetInmemorydbReplicasetResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInmemorydbReplicasetResource)(nil)).Elem()
}

func (i GetInmemorydbReplicasetResourceArray) ToGetInmemorydbReplicasetResourceArrayOutput() GetInmemorydbReplicasetResourceArrayOutput {
	return i.ToGetInmemorydbReplicasetResourceArrayOutputWithContext(context.Background())
}

func (i GetInmemorydbReplicasetResourceArray) ToGetInmemorydbReplicasetResourceArrayOutputWithContext(ctx context.Context) GetInmemorydbReplicasetResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInmemorydbReplicasetResourceArrayOutput)
}

type GetInmemorydbReplicasetResourceOutput struct{ *pulumi.OutputState }

func (GetInmemorydbReplicasetResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInmemorydbReplicasetResource)(nil)).Elem()
}

func (o GetInmemorydbReplicasetResourceOutput) ToGetInmemorydbReplicasetResourceOutput() GetInmemorydbReplicasetResourceOutput {
	return o
}

func (o GetInmemorydbReplicasetResourceOutput) ToGetInmemorydbReplicasetResourceOutputWithContext(ctx context.Context) GetInmemorydbReplicasetResourceOutput {
	return o
}

// The number of CPU cores per instance.
func (o GetInmemorydbReplicasetResourceOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v GetInmemorydbReplicasetResource) int { return v.Cores }).(pulumi.IntOutput)
}

// The amount of memory per instance in gigabytes (GB).
func (o GetInmemorydbReplicasetResourceOutput) Ram() pulumi.IntOutput {
	return o.ApplyT(func(v GetInmemorydbReplicasetResource) int { return v.Ram }).(pulumi.IntOutput)
}

// The amount of storage per instance in gigabytes (GB).
func (o GetInmemorydbReplicasetResourceOutput) Storage() pulumi.IntOutput {
	return o.ApplyT(func(v GetInmemorydbReplicasetResource) int { return v.Storage }).(pulumi.IntOutput)
}

type GetInmemorydbReplicasetResourceArrayOutput struct{ *pulumi.OutputState }

func (GetInmemorydbReplicasetResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInmemorydbReplicasetResource)(nil)).Elem()
}

func (o GetInmemorydbReplicasetResourceArrayOutput) ToGetInmemorydbReplicasetResourceArrayOutput() GetInmemorydbReplicasetResourceArrayOutput {
	return o
}

func (o GetInmemorydbReplicasetResourceArrayOutput) ToGetInmemorydbReplicasetResourceArrayOutputWithContext(ctx context.Context) GetInmemorydbReplicasetResourceArrayOutput {
	return o
}

func (o GetInmemorydbReplicasetResourceArrayOutput) Index(i pulumi.IntInput) GetInmemorydbReplicasetResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInmemorydbReplicasetResource {
		return vs[0].([]GetInmemorydbReplicasetResource)[vs[1].(int)]
	}).(GetInmemorydbReplicasetResourceOutput)
}

type GetInmemorydbSnapshotMetadata struct {
	// The ISO 8601 creation timestamp.
	CreatedDate string `pulumi:"createdDate"`
	// The ID of the datacenter the snapshot was created in. Please mind, that the snapshot is not available in other datacenters.
	DatacenterId string `pulumi:"datacenterId"`
	// The ISO 8601 modified timestamp.
	LastModifiedDate string `pulumi:"lastModifiedDate"`
	// The ID of the InMemoryDB replica set the snapshot is taken from.
	ReplicaSetId string `pulumi:"replicaSetId"`
	// The time the snapshot was dumped from the replica set.
	SnapshotTime string `pulumi:"snapshotTime"`
}

// GetInmemorydbSnapshotMetadataInput is an input type that accepts GetInmemorydbSnapshotMetadataArgs and GetInmemorydbSnapshotMetadataOutput values.
// You can construct a concrete instance of `GetInmemorydbSnapshotMetadataInput` via:
//
//	GetInmemorydbSnapshotMetadataArgs{...}
type GetInmemorydbSnapshotMetadataInput interface {
	pulumi.Input

	ToGetInmemorydbSnapshotMetadataOutput() GetInmemorydbSnapshotMetadataOutput
	ToGetInmemorydbSnapshotMetadataOutputWithContext(context.Context) GetInmemorydbSnapshotMetadataOutput
}

type GetInmemorydbSnapshotMetadataArgs struct {
	// The ISO 8601 creation timestamp.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The ID of the datacenter the snapshot was created in. Please mind, that the snapshot is not available in other datacenters.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// The ISO 8601 modified timestamp.
	LastModifiedDate pulumi.StringInput `pulumi:"lastModifiedDate"`
	// The ID of the InMemoryDB replica set the snapshot is taken from.
	ReplicaSetId pulumi.StringInput `pulumi:"replicaSetId"`
	// The time the snapshot was dumped from the replica set.
	SnapshotTime pulumi.StringInput `pulumi:"snapshotTime"`
}

func (GetInmemorydbSnapshotMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInmemorydbSnapshotMetadata)(nil)).Elem()
}

func (i GetInmemorydbSnapshotMetadataArgs) ToGetInmemorydbSnapshotMetadataOutput() GetInmemorydbSnapshotMetadataOutput {
	return i.ToGetInmemorydbSnapshotMetadataOutputWithContext(context.Background())
}

func (i GetInmemorydbSnapshotMetadataArgs) ToGetInmemorydbSnapshotMetadataOutputWithContext(ctx context.Context) GetInmemorydbSnapshotMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInmemorydbSnapshotMetadataOutput)
}

// GetInmemorydbSnapshotMetadataArrayInput is an input type that accepts GetInmemorydbSnapshotMetadataArray and GetInmemorydbSnapshotMetadataArrayOutput values.
// You can construct a concrete instance of `GetInmemorydbSnapshotMetadataArrayInput` via:
//
//	GetInmemorydbSnapshotMetadataArray{ GetInmemorydbSnapshotMetadataArgs{...} }
type GetInmemorydbSnapshotMetadataArrayInput interface {
	pulumi.Input

	ToGetInmemorydbSnapshotMetadataArrayOutput() GetInmemorydbSnapshotMetadataArrayOutput
	ToGetInmemorydbSnapshotMetadataArrayOutputWithContext(context.Context) GetInmemorydbSnapshotMetadataArrayOutput
}

type GetInmemorydbSnapshotMetadataArray []GetInmemorydbSnapshotMetadataInput

func (GetInmemorydbSnapshotMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInmemorydbSnapshotMetadata)(nil)).Elem()
}

func (i GetInmemorydbSnapshotMetadataArray) ToGetInmemorydbSnapshotMetadataArrayOutput() GetInmemorydbSnapshotMetadataArrayOutput {
	return i.ToGetInmemorydbSnapshotMetadataArrayOutputWithContext(context.Background())
}

func (i GetInmemorydbSnapshotMetadataArray) ToGetInmemorydbSnapshotMetadataArrayOutputWithContext(ctx context.Context) GetInmemorydbSnapshotMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInmemorydbSnapshotMetadataArrayOutput)
}

type GetInmemorydbSnapshotMetadataOutput struct{ *pulumi.OutputState }

func (GetInmemorydbSnapshotMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInmemorydbSnapshotMetadata)(nil)).Elem()
}

func (o GetInmemorydbSnapshotMetadataOutput) ToGetInmemorydbSnapshotMetadataOutput() GetInmemorydbSnapshotMetadataOutput {
	return o
}

func (o GetInmemorydbSnapshotMetadataOutput) ToGetInmemorydbSnapshotMetadataOutputWithContext(ctx context.Context) GetInmemorydbSnapshotMetadataOutput {
	return o
}

// The ISO 8601 creation timestamp.
func (o GetInmemorydbSnapshotMetadataOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbSnapshotMetadata) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The ID of the datacenter the snapshot was created in. Please mind, that the snapshot is not available in other datacenters.
func (o GetInmemorydbSnapshotMetadataOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbSnapshotMetadata) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// The ISO 8601 modified timestamp.
func (o GetInmemorydbSnapshotMetadataOutput) LastModifiedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbSnapshotMetadata) string { return v.LastModifiedDate }).(pulumi.StringOutput)
}

// The ID of the InMemoryDB replica set the snapshot is taken from.
func (o GetInmemorydbSnapshotMetadataOutput) ReplicaSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbSnapshotMetadata) string { return v.ReplicaSetId }).(pulumi.StringOutput)
}

// The time the snapshot was dumped from the replica set.
func (o GetInmemorydbSnapshotMetadataOutput) SnapshotTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbSnapshotMetadata) string { return v.SnapshotTime }).(pulumi.StringOutput)
}

type GetInmemorydbSnapshotMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetInmemorydbSnapshotMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInmemorydbSnapshotMetadata)(nil)).Elem()
}

func (o GetInmemorydbSnapshotMetadataArrayOutput) ToGetInmemorydbSnapshotMetadataArrayOutput() GetInmemorydbSnapshotMetadataArrayOutput {
	return o
}

func (o GetInmemorydbSnapshotMetadataArrayOutput) ToGetInmemorydbSnapshotMetadataArrayOutputWithContext(ctx context.Context) GetInmemorydbSnapshotMetadataArrayOutput {
	return o
}

func (o GetInmemorydbSnapshotMetadataArrayOutput) Index(i pulumi.IntInput) GetInmemorydbSnapshotMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInmemorydbSnapshotMetadata {
		return vs[0].([]GetInmemorydbSnapshotMetadata)[vs[1].(int)]
	}).(GetInmemorydbSnapshotMetadataOutput)
}

type GetIpblockIpConsumer struct {
	DatacenterId    string `pulumi:"datacenterId"`
	DatacenterName  string `pulumi:"datacenterName"`
	Ip              string `pulumi:"ip"`
	K8sClusterUuid  string `pulumi:"k8sClusterUuid"`
	K8sNodepoolUuid string `pulumi:"k8sNodepoolUuid"`
	Mac             string `pulumi:"mac"`
	NicId           string `pulumi:"nicId"`
	ServerId        string `pulumi:"serverId"`
	ServerName      string `pulumi:"serverName"`
}

// GetIpblockIpConsumerInput is an input type that accepts GetIpblockIpConsumerArgs and GetIpblockIpConsumerOutput values.
// You can construct a concrete instance of `GetIpblockIpConsumerInput` via:
//
//	GetIpblockIpConsumerArgs{...}
type GetIpblockIpConsumerInput interface {
	pulumi.Input

	ToGetIpblockIpConsumerOutput() GetIpblockIpConsumerOutput
	ToGetIpblockIpConsumerOutputWithContext(context.Context) GetIpblockIpConsumerOutput
}

type GetIpblockIpConsumerArgs struct {
	DatacenterId    pulumi.StringInput `pulumi:"datacenterId"`
	DatacenterName  pulumi.StringInput `pulumi:"datacenterName"`
	Ip              pulumi.StringInput `pulumi:"ip"`
	K8sClusterUuid  pulumi.StringInput `pulumi:"k8sClusterUuid"`
	K8sNodepoolUuid pulumi.StringInput `pulumi:"k8sNodepoolUuid"`
	Mac             pulumi.StringInput `pulumi:"mac"`
	NicId           pulumi.StringInput `pulumi:"nicId"`
	ServerId        pulumi.StringInput `pulumi:"serverId"`
	ServerName      pulumi.StringInput `pulumi:"serverName"`
}

func (GetIpblockIpConsumerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpblockIpConsumer)(nil)).Elem()
}

func (i GetIpblockIpConsumerArgs) ToGetIpblockIpConsumerOutput() GetIpblockIpConsumerOutput {
	return i.ToGetIpblockIpConsumerOutputWithContext(context.Background())
}

func (i GetIpblockIpConsumerArgs) ToGetIpblockIpConsumerOutputWithContext(ctx context.Context) GetIpblockIpConsumerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpblockIpConsumerOutput)
}

// GetIpblockIpConsumerArrayInput is an input type that accepts GetIpblockIpConsumerArray and GetIpblockIpConsumerArrayOutput values.
// You can construct a concrete instance of `GetIpblockIpConsumerArrayInput` via:
//
//	GetIpblockIpConsumerArray{ GetIpblockIpConsumerArgs{...} }
type GetIpblockIpConsumerArrayInput interface {
	pulumi.Input

	ToGetIpblockIpConsumerArrayOutput() GetIpblockIpConsumerArrayOutput
	ToGetIpblockIpConsumerArrayOutputWithContext(context.Context) GetIpblockIpConsumerArrayOutput
}

type GetIpblockIpConsumerArray []GetIpblockIpConsumerInput

func (GetIpblockIpConsumerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpblockIpConsumer)(nil)).Elem()
}

func (i GetIpblockIpConsumerArray) ToGetIpblockIpConsumerArrayOutput() GetIpblockIpConsumerArrayOutput {
	return i.ToGetIpblockIpConsumerArrayOutputWithContext(context.Background())
}

func (i GetIpblockIpConsumerArray) ToGetIpblockIpConsumerArrayOutputWithContext(ctx context.Context) GetIpblockIpConsumerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpblockIpConsumerArrayOutput)
}

type GetIpblockIpConsumerOutput struct{ *pulumi.OutputState }

func (GetIpblockIpConsumerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpblockIpConsumer)(nil)).Elem()
}

func (o GetIpblockIpConsumerOutput) ToGetIpblockIpConsumerOutput() GetIpblockIpConsumerOutput {
	return o
}

func (o GetIpblockIpConsumerOutput) ToGetIpblockIpConsumerOutputWithContext(ctx context.Context) GetIpblockIpConsumerOutput {
	return o
}

func (o GetIpblockIpConsumerOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpblockIpConsumer) string { return v.DatacenterId }).(pulumi.StringOutput)
}

func (o GetIpblockIpConsumerOutput) DatacenterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpblockIpConsumer) string { return v.DatacenterName }).(pulumi.StringOutput)
}

func (o GetIpblockIpConsumerOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpblockIpConsumer) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetIpblockIpConsumerOutput) K8sClusterUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpblockIpConsumer) string { return v.K8sClusterUuid }).(pulumi.StringOutput)
}

func (o GetIpblockIpConsumerOutput) K8sNodepoolUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpblockIpConsumer) string { return v.K8sNodepoolUuid }).(pulumi.StringOutput)
}

func (o GetIpblockIpConsumerOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpblockIpConsumer) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetIpblockIpConsumerOutput) NicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpblockIpConsumer) string { return v.NicId }).(pulumi.StringOutput)
}

func (o GetIpblockIpConsumerOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpblockIpConsumer) string { return v.ServerId }).(pulumi.StringOutput)
}

func (o GetIpblockIpConsumerOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpblockIpConsumer) string { return v.ServerName }).(pulumi.StringOutput)
}

type GetIpblockIpConsumerArrayOutput struct{ *pulumi.OutputState }

func (GetIpblockIpConsumerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpblockIpConsumer)(nil)).Elem()
}

func (o GetIpblockIpConsumerArrayOutput) ToGetIpblockIpConsumerArrayOutput() GetIpblockIpConsumerArrayOutput {
	return o
}

func (o GetIpblockIpConsumerArrayOutput) ToGetIpblockIpConsumerArrayOutputWithContext(ctx context.Context) GetIpblockIpConsumerArrayOutput {
	return o
}

func (o GetIpblockIpConsumerArrayOutput) Index(i pulumi.IntInput) GetIpblockIpConsumerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpblockIpConsumer {
		return vs[0].([]GetIpblockIpConsumer)[vs[1].(int)]
	}).(GetIpblockIpConsumerOutput)
}

type GetK8sClusterConfig struct {
	ApiVersion     string                       `pulumi:"apiVersion"`
	Clusters       []GetK8sClusterConfigCluster `pulumi:"clusters"`
	Contexts       []GetK8sClusterConfigContext `pulumi:"contexts"`
	CurrentContext string                       `pulumi:"currentContext"`
	Kind           string                       `pulumi:"kind"`
	Users          []GetK8sClusterConfigUser    `pulumi:"users"`
}

// GetK8sClusterConfigInput is an input type that accepts GetK8sClusterConfigArgs and GetK8sClusterConfigOutput values.
// You can construct a concrete instance of `GetK8sClusterConfigInput` via:
//
//	GetK8sClusterConfigArgs{...}
type GetK8sClusterConfigInput interface {
	pulumi.Input

	ToGetK8sClusterConfigOutput() GetK8sClusterConfigOutput
	ToGetK8sClusterConfigOutputWithContext(context.Context) GetK8sClusterConfigOutput
}

type GetK8sClusterConfigArgs struct {
	ApiVersion     pulumi.StringInput                   `pulumi:"apiVersion"`
	Clusters       GetK8sClusterConfigClusterArrayInput `pulumi:"clusters"`
	Contexts       GetK8sClusterConfigContextArrayInput `pulumi:"contexts"`
	CurrentContext pulumi.StringInput                   `pulumi:"currentContext"`
	Kind           pulumi.StringInput                   `pulumi:"kind"`
	Users          GetK8sClusterConfigUserArrayInput    `pulumi:"users"`
}

func (GetK8sClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClusterConfig)(nil)).Elem()
}

func (i GetK8sClusterConfigArgs) ToGetK8sClusterConfigOutput() GetK8sClusterConfigOutput {
	return i.ToGetK8sClusterConfigOutputWithContext(context.Background())
}

func (i GetK8sClusterConfigArgs) ToGetK8sClusterConfigOutputWithContext(ctx context.Context) GetK8sClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClusterConfigOutput)
}

// GetK8sClusterConfigArrayInput is an input type that accepts GetK8sClusterConfigArray and GetK8sClusterConfigArrayOutput values.
// You can construct a concrete instance of `GetK8sClusterConfigArrayInput` via:
//
//	GetK8sClusterConfigArray{ GetK8sClusterConfigArgs{...} }
type GetK8sClusterConfigArrayInput interface {
	pulumi.Input

	ToGetK8sClusterConfigArrayOutput() GetK8sClusterConfigArrayOutput
	ToGetK8sClusterConfigArrayOutputWithContext(context.Context) GetK8sClusterConfigArrayOutput
}

type GetK8sClusterConfigArray []GetK8sClusterConfigInput

func (GetK8sClusterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClusterConfig)(nil)).Elem()
}

func (i GetK8sClusterConfigArray) ToGetK8sClusterConfigArrayOutput() GetK8sClusterConfigArrayOutput {
	return i.ToGetK8sClusterConfigArrayOutputWithContext(context.Background())
}

func (i GetK8sClusterConfigArray) ToGetK8sClusterConfigArrayOutputWithContext(ctx context.Context) GetK8sClusterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClusterConfigArrayOutput)
}

type GetK8sClusterConfigOutput struct{ *pulumi.OutputState }

func (GetK8sClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClusterConfig)(nil)).Elem()
}

func (o GetK8sClusterConfigOutput) ToGetK8sClusterConfigOutput() GetK8sClusterConfigOutput {
	return o
}

func (o GetK8sClusterConfigOutput) ToGetK8sClusterConfigOutputWithContext(ctx context.Context) GetK8sClusterConfigOutput {
	return o
}

func (o GetK8sClusterConfigOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClusterConfig) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o GetK8sClusterConfigOutput) Clusters() GetK8sClusterConfigClusterArrayOutput {
	return o.ApplyT(func(v GetK8sClusterConfig) []GetK8sClusterConfigCluster { return v.Clusters }).(GetK8sClusterConfigClusterArrayOutput)
}

func (o GetK8sClusterConfigOutput) Contexts() GetK8sClusterConfigContextArrayOutput {
	return o.ApplyT(func(v GetK8sClusterConfig) []GetK8sClusterConfigContext { return v.Contexts }).(GetK8sClusterConfigContextArrayOutput)
}

func (o GetK8sClusterConfigOutput) CurrentContext() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClusterConfig) string { return v.CurrentContext }).(pulumi.StringOutput)
}

func (o GetK8sClusterConfigOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClusterConfig) string { return v.Kind }).(pulumi.StringOutput)
}

func (o GetK8sClusterConfigOutput) Users() GetK8sClusterConfigUserArrayOutput {
	return o.ApplyT(func(v GetK8sClusterConfig) []GetK8sClusterConfigUser { return v.Users }).(GetK8sClusterConfigUserArrayOutput)
}

type GetK8sClusterConfigArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClusterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClusterConfig)(nil)).Elem()
}

func (o GetK8sClusterConfigArrayOutput) ToGetK8sClusterConfigArrayOutput() GetK8sClusterConfigArrayOutput {
	return o
}

func (o GetK8sClusterConfigArrayOutput) ToGetK8sClusterConfigArrayOutputWithContext(ctx context.Context) GetK8sClusterConfigArrayOutput {
	return o
}

func (o GetK8sClusterConfigArrayOutput) Index(i pulumi.IntInput) GetK8sClusterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClusterConfig {
		return vs[0].([]GetK8sClusterConfig)[vs[1].(int)]
	}).(GetK8sClusterConfigOutput)
}

type GetK8sClusterConfigCluster struct {
	Cluster map[string]string `pulumi:"cluster"`
	// Name of an existing cluster that you want to search for.
	Name string `pulumi:"name"`
}

// GetK8sClusterConfigClusterInput is an input type that accepts GetK8sClusterConfigClusterArgs and GetK8sClusterConfigClusterOutput values.
// You can construct a concrete instance of `GetK8sClusterConfigClusterInput` via:
//
//	GetK8sClusterConfigClusterArgs{...}
type GetK8sClusterConfigClusterInput interface {
	pulumi.Input

	ToGetK8sClusterConfigClusterOutput() GetK8sClusterConfigClusterOutput
	ToGetK8sClusterConfigClusterOutputWithContext(context.Context) GetK8sClusterConfigClusterOutput
}

type GetK8sClusterConfigClusterArgs struct {
	Cluster pulumi.StringMapInput `pulumi:"cluster"`
	// Name of an existing cluster that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetK8sClusterConfigClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClusterConfigCluster)(nil)).Elem()
}

func (i GetK8sClusterConfigClusterArgs) ToGetK8sClusterConfigClusterOutput() GetK8sClusterConfigClusterOutput {
	return i.ToGetK8sClusterConfigClusterOutputWithContext(context.Background())
}

func (i GetK8sClusterConfigClusterArgs) ToGetK8sClusterConfigClusterOutputWithContext(ctx context.Context) GetK8sClusterConfigClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClusterConfigClusterOutput)
}

// GetK8sClusterConfigClusterArrayInput is an input type that accepts GetK8sClusterConfigClusterArray and GetK8sClusterConfigClusterArrayOutput values.
// You can construct a concrete instance of `GetK8sClusterConfigClusterArrayInput` via:
//
//	GetK8sClusterConfigClusterArray{ GetK8sClusterConfigClusterArgs{...} }
type GetK8sClusterConfigClusterArrayInput interface {
	pulumi.Input

	ToGetK8sClusterConfigClusterArrayOutput() GetK8sClusterConfigClusterArrayOutput
	ToGetK8sClusterConfigClusterArrayOutputWithContext(context.Context) GetK8sClusterConfigClusterArrayOutput
}

type GetK8sClusterConfigClusterArray []GetK8sClusterConfigClusterInput

func (GetK8sClusterConfigClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClusterConfigCluster)(nil)).Elem()
}

func (i GetK8sClusterConfigClusterArray) ToGetK8sClusterConfigClusterArrayOutput() GetK8sClusterConfigClusterArrayOutput {
	return i.ToGetK8sClusterConfigClusterArrayOutputWithContext(context.Background())
}

func (i GetK8sClusterConfigClusterArray) ToGetK8sClusterConfigClusterArrayOutputWithContext(ctx context.Context) GetK8sClusterConfigClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClusterConfigClusterArrayOutput)
}

type GetK8sClusterConfigClusterOutput struct{ *pulumi.OutputState }

func (GetK8sClusterConfigClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClusterConfigCluster)(nil)).Elem()
}

func (o GetK8sClusterConfigClusterOutput) ToGetK8sClusterConfigClusterOutput() GetK8sClusterConfigClusterOutput {
	return o
}

func (o GetK8sClusterConfigClusterOutput) ToGetK8sClusterConfigClusterOutputWithContext(ctx context.Context) GetK8sClusterConfigClusterOutput {
	return o
}

func (o GetK8sClusterConfigClusterOutput) Cluster() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetK8sClusterConfigCluster) map[string]string { return v.Cluster }).(pulumi.StringMapOutput)
}

// Name of an existing cluster that you want to search for.
func (o GetK8sClusterConfigClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClusterConfigCluster) string { return v.Name }).(pulumi.StringOutput)
}

type GetK8sClusterConfigClusterArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClusterConfigClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClusterConfigCluster)(nil)).Elem()
}

func (o GetK8sClusterConfigClusterArrayOutput) ToGetK8sClusterConfigClusterArrayOutput() GetK8sClusterConfigClusterArrayOutput {
	return o
}

func (o GetK8sClusterConfigClusterArrayOutput) ToGetK8sClusterConfigClusterArrayOutputWithContext(ctx context.Context) GetK8sClusterConfigClusterArrayOutput {
	return o
}

func (o GetK8sClusterConfigClusterArrayOutput) Index(i pulumi.IntInput) GetK8sClusterConfigClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClusterConfigCluster {
		return vs[0].([]GetK8sClusterConfigCluster)[vs[1].(int)]
	}).(GetK8sClusterConfigClusterOutput)
}

type GetK8sClusterConfigContext struct {
	Context map[string]string `pulumi:"context"`
	// Name of an existing cluster that you want to search for.
	Name string `pulumi:"name"`
}

// GetK8sClusterConfigContextInput is an input type that accepts GetK8sClusterConfigContextArgs and GetK8sClusterConfigContextOutput values.
// You can construct a concrete instance of `GetK8sClusterConfigContextInput` via:
//
//	GetK8sClusterConfigContextArgs{...}
type GetK8sClusterConfigContextInput interface {
	pulumi.Input

	ToGetK8sClusterConfigContextOutput() GetK8sClusterConfigContextOutput
	ToGetK8sClusterConfigContextOutputWithContext(context.Context) GetK8sClusterConfigContextOutput
}

type GetK8sClusterConfigContextArgs struct {
	Context pulumi.StringMapInput `pulumi:"context"`
	// Name of an existing cluster that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetK8sClusterConfigContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClusterConfigContext)(nil)).Elem()
}

func (i GetK8sClusterConfigContextArgs) ToGetK8sClusterConfigContextOutput() GetK8sClusterConfigContextOutput {
	return i.ToGetK8sClusterConfigContextOutputWithContext(context.Background())
}

func (i GetK8sClusterConfigContextArgs) ToGetK8sClusterConfigContextOutputWithContext(ctx context.Context) GetK8sClusterConfigContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClusterConfigContextOutput)
}

// GetK8sClusterConfigContextArrayInput is an input type that accepts GetK8sClusterConfigContextArray and GetK8sClusterConfigContextArrayOutput values.
// You can construct a concrete instance of `GetK8sClusterConfigContextArrayInput` via:
//
//	GetK8sClusterConfigContextArray{ GetK8sClusterConfigContextArgs{...} }
type GetK8sClusterConfigContextArrayInput interface {
	pulumi.Input

	ToGetK8sClusterConfigContextArrayOutput() GetK8sClusterConfigContextArrayOutput
	ToGetK8sClusterConfigContextArrayOutputWithContext(context.Context) GetK8sClusterConfigContextArrayOutput
}

type GetK8sClusterConfigContextArray []GetK8sClusterConfigContextInput

func (GetK8sClusterConfigContextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClusterConfigContext)(nil)).Elem()
}

func (i GetK8sClusterConfigContextArray) ToGetK8sClusterConfigContextArrayOutput() GetK8sClusterConfigContextArrayOutput {
	return i.ToGetK8sClusterConfigContextArrayOutputWithContext(context.Background())
}

func (i GetK8sClusterConfigContextArray) ToGetK8sClusterConfigContextArrayOutputWithContext(ctx context.Context) GetK8sClusterConfigContextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClusterConfigContextArrayOutput)
}

type GetK8sClusterConfigContextOutput struct{ *pulumi.OutputState }

func (GetK8sClusterConfigContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClusterConfigContext)(nil)).Elem()
}

func (o GetK8sClusterConfigContextOutput) ToGetK8sClusterConfigContextOutput() GetK8sClusterConfigContextOutput {
	return o
}

func (o GetK8sClusterConfigContextOutput) ToGetK8sClusterConfigContextOutputWithContext(ctx context.Context) GetK8sClusterConfigContextOutput {
	return o
}

func (o GetK8sClusterConfigContextOutput) Context() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetK8sClusterConfigContext) map[string]string { return v.Context }).(pulumi.StringMapOutput)
}

// Name of an existing cluster that you want to search for.
func (o GetK8sClusterConfigContextOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClusterConfigContext) string { return v.Name }).(pulumi.StringOutput)
}

type GetK8sClusterConfigContextArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClusterConfigContextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClusterConfigContext)(nil)).Elem()
}

func (o GetK8sClusterConfigContextArrayOutput) ToGetK8sClusterConfigContextArrayOutput() GetK8sClusterConfigContextArrayOutput {
	return o
}

func (o GetK8sClusterConfigContextArrayOutput) ToGetK8sClusterConfigContextArrayOutputWithContext(ctx context.Context) GetK8sClusterConfigContextArrayOutput {
	return o
}

func (o GetK8sClusterConfigContextArrayOutput) Index(i pulumi.IntInput) GetK8sClusterConfigContextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClusterConfigContext {
		return vs[0].([]GetK8sClusterConfigContext)[vs[1].(int)]
	}).(GetK8sClusterConfigContextOutput)
}

type GetK8sClusterConfigUser struct {
	// Name of an existing cluster that you want to search for.
	Name string            `pulumi:"name"`
	User map[string]string `pulumi:"user"`
}

// GetK8sClusterConfigUserInput is an input type that accepts GetK8sClusterConfigUserArgs and GetK8sClusterConfigUserOutput values.
// You can construct a concrete instance of `GetK8sClusterConfigUserInput` via:
//
//	GetK8sClusterConfigUserArgs{...}
type GetK8sClusterConfigUserInput interface {
	pulumi.Input

	ToGetK8sClusterConfigUserOutput() GetK8sClusterConfigUserOutput
	ToGetK8sClusterConfigUserOutputWithContext(context.Context) GetK8sClusterConfigUserOutput
}

type GetK8sClusterConfigUserArgs struct {
	// Name of an existing cluster that you want to search for.
	Name pulumi.StringInput    `pulumi:"name"`
	User pulumi.StringMapInput `pulumi:"user"`
}

func (GetK8sClusterConfigUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClusterConfigUser)(nil)).Elem()
}

func (i GetK8sClusterConfigUserArgs) ToGetK8sClusterConfigUserOutput() GetK8sClusterConfigUserOutput {
	return i.ToGetK8sClusterConfigUserOutputWithContext(context.Background())
}

func (i GetK8sClusterConfigUserArgs) ToGetK8sClusterConfigUserOutputWithContext(ctx context.Context) GetK8sClusterConfigUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClusterConfigUserOutput)
}

// GetK8sClusterConfigUserArrayInput is an input type that accepts GetK8sClusterConfigUserArray and GetK8sClusterConfigUserArrayOutput values.
// You can construct a concrete instance of `GetK8sClusterConfigUserArrayInput` via:
//
//	GetK8sClusterConfigUserArray{ GetK8sClusterConfigUserArgs{...} }
type GetK8sClusterConfigUserArrayInput interface {
	pulumi.Input

	ToGetK8sClusterConfigUserArrayOutput() GetK8sClusterConfigUserArrayOutput
	ToGetK8sClusterConfigUserArrayOutputWithContext(context.Context) GetK8sClusterConfigUserArrayOutput
}

type GetK8sClusterConfigUserArray []GetK8sClusterConfigUserInput

func (GetK8sClusterConfigUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClusterConfigUser)(nil)).Elem()
}

func (i GetK8sClusterConfigUserArray) ToGetK8sClusterConfigUserArrayOutput() GetK8sClusterConfigUserArrayOutput {
	return i.ToGetK8sClusterConfigUserArrayOutputWithContext(context.Background())
}

func (i GetK8sClusterConfigUserArray) ToGetK8sClusterConfigUserArrayOutputWithContext(ctx context.Context) GetK8sClusterConfigUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClusterConfigUserArrayOutput)
}

type GetK8sClusterConfigUserOutput struct{ *pulumi.OutputState }

func (GetK8sClusterConfigUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClusterConfigUser)(nil)).Elem()
}

func (o GetK8sClusterConfigUserOutput) ToGetK8sClusterConfigUserOutput() GetK8sClusterConfigUserOutput {
	return o
}

func (o GetK8sClusterConfigUserOutput) ToGetK8sClusterConfigUserOutputWithContext(ctx context.Context) GetK8sClusterConfigUserOutput {
	return o
}

// Name of an existing cluster that you want to search for.
func (o GetK8sClusterConfigUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClusterConfigUser) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetK8sClusterConfigUserOutput) User() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetK8sClusterConfigUser) map[string]string { return v.User }).(pulumi.StringMapOutput)
}

type GetK8sClusterConfigUserArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClusterConfigUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClusterConfigUser)(nil)).Elem()
}

func (o GetK8sClusterConfigUserArrayOutput) ToGetK8sClusterConfigUserArrayOutput() GetK8sClusterConfigUserArrayOutput {
	return o
}

func (o GetK8sClusterConfigUserArrayOutput) ToGetK8sClusterConfigUserArrayOutputWithContext(ctx context.Context) GetK8sClusterConfigUserArrayOutput {
	return o
}

func (o GetK8sClusterConfigUserArrayOutput) Index(i pulumi.IntInput) GetK8sClusterConfigUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClusterConfigUser {
		return vs[0].([]GetK8sClusterConfigUser)[vs[1].(int)]
	}).(GetK8sClusterConfigUserOutput)
}

type GetK8sClusterMaintenanceWindow struct {
	// Day of the week when maintenance is allowed
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// A clock time in the day when maintenance is allowed
	Time string `pulumi:"time"`
}

// GetK8sClusterMaintenanceWindowInput is an input type that accepts GetK8sClusterMaintenanceWindowArgs and GetK8sClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetK8sClusterMaintenanceWindowInput` via:
//
//	GetK8sClusterMaintenanceWindowArgs{...}
type GetK8sClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToGetK8sClusterMaintenanceWindowOutput() GetK8sClusterMaintenanceWindowOutput
	ToGetK8sClusterMaintenanceWindowOutputWithContext(context.Context) GetK8sClusterMaintenanceWindowOutput
}

type GetK8sClusterMaintenanceWindowArgs struct {
	// Day of the week when maintenance is allowed
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// A clock time in the day when maintenance is allowed
	Time pulumi.StringInput `pulumi:"time"`
}

func (GetK8sClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetK8sClusterMaintenanceWindowArgs) ToGetK8sClusterMaintenanceWindowOutput() GetK8sClusterMaintenanceWindowOutput {
	return i.ToGetK8sClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetK8sClusterMaintenanceWindowArgs) ToGetK8sClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetK8sClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClusterMaintenanceWindowOutput)
}

// GetK8sClusterMaintenanceWindowArrayInput is an input type that accepts GetK8sClusterMaintenanceWindowArray and GetK8sClusterMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetK8sClusterMaintenanceWindowArrayInput` via:
//
//	GetK8sClusterMaintenanceWindowArray{ GetK8sClusterMaintenanceWindowArgs{...} }
type GetK8sClusterMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetK8sClusterMaintenanceWindowArrayOutput() GetK8sClusterMaintenanceWindowArrayOutput
	ToGetK8sClusterMaintenanceWindowArrayOutputWithContext(context.Context) GetK8sClusterMaintenanceWindowArrayOutput
}

type GetK8sClusterMaintenanceWindowArray []GetK8sClusterMaintenanceWindowInput

func (GetK8sClusterMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetK8sClusterMaintenanceWindowArray) ToGetK8sClusterMaintenanceWindowArrayOutput() GetK8sClusterMaintenanceWindowArrayOutput {
	return i.ToGetK8sClusterMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetK8sClusterMaintenanceWindowArray) ToGetK8sClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetK8sClusterMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClusterMaintenanceWindowArrayOutput)
}

type GetK8sClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetK8sClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetK8sClusterMaintenanceWindowOutput) ToGetK8sClusterMaintenanceWindowOutput() GetK8sClusterMaintenanceWindowOutput {
	return o
}

func (o GetK8sClusterMaintenanceWindowOutput) ToGetK8sClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetK8sClusterMaintenanceWindowOutput {
	return o
}

// Day of the week when maintenance is allowed
func (o GetK8sClusterMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClusterMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// A clock time in the day when maintenance is allowed
func (o GetK8sClusterMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClusterMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type GetK8sClusterMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClusterMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetK8sClusterMaintenanceWindowArrayOutput) ToGetK8sClusterMaintenanceWindowArrayOutput() GetK8sClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetK8sClusterMaintenanceWindowArrayOutput) ToGetK8sClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetK8sClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetK8sClusterMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetK8sClusterMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClusterMaintenanceWindow {
		return vs[0].([]GetK8sClusterMaintenanceWindow)[vs[1].(int)]
	}).(GetK8sClusterMaintenanceWindowOutput)
}

type GetK8sClusterS3Bucket struct {
	// Name of an existing cluster that you want to search for.
	Name string `pulumi:"name"`
}

// GetK8sClusterS3BucketInput is an input type that accepts GetK8sClusterS3BucketArgs and GetK8sClusterS3BucketOutput values.
// You can construct a concrete instance of `GetK8sClusterS3BucketInput` via:
//
//	GetK8sClusterS3BucketArgs{...}
type GetK8sClusterS3BucketInput interface {
	pulumi.Input

	ToGetK8sClusterS3BucketOutput() GetK8sClusterS3BucketOutput
	ToGetK8sClusterS3BucketOutputWithContext(context.Context) GetK8sClusterS3BucketOutput
}

type GetK8sClusterS3BucketArgs struct {
	// Name of an existing cluster that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetK8sClusterS3BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClusterS3Bucket)(nil)).Elem()
}

func (i GetK8sClusterS3BucketArgs) ToGetK8sClusterS3BucketOutput() GetK8sClusterS3BucketOutput {
	return i.ToGetK8sClusterS3BucketOutputWithContext(context.Background())
}

func (i GetK8sClusterS3BucketArgs) ToGetK8sClusterS3BucketOutputWithContext(ctx context.Context) GetK8sClusterS3BucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClusterS3BucketOutput)
}

// GetK8sClusterS3BucketArrayInput is an input type that accepts GetK8sClusterS3BucketArray and GetK8sClusterS3BucketArrayOutput values.
// You can construct a concrete instance of `GetK8sClusterS3BucketArrayInput` via:
//
//	GetK8sClusterS3BucketArray{ GetK8sClusterS3BucketArgs{...} }
type GetK8sClusterS3BucketArrayInput interface {
	pulumi.Input

	ToGetK8sClusterS3BucketArrayOutput() GetK8sClusterS3BucketArrayOutput
	ToGetK8sClusterS3BucketArrayOutputWithContext(context.Context) GetK8sClusterS3BucketArrayOutput
}

type GetK8sClusterS3BucketArray []GetK8sClusterS3BucketInput

func (GetK8sClusterS3BucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClusterS3Bucket)(nil)).Elem()
}

func (i GetK8sClusterS3BucketArray) ToGetK8sClusterS3BucketArrayOutput() GetK8sClusterS3BucketArrayOutput {
	return i.ToGetK8sClusterS3BucketArrayOutputWithContext(context.Background())
}

func (i GetK8sClusterS3BucketArray) ToGetK8sClusterS3BucketArrayOutputWithContext(ctx context.Context) GetK8sClusterS3BucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClusterS3BucketArrayOutput)
}

type GetK8sClusterS3BucketOutput struct{ *pulumi.OutputState }

func (GetK8sClusterS3BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClusterS3Bucket)(nil)).Elem()
}

func (o GetK8sClusterS3BucketOutput) ToGetK8sClusterS3BucketOutput() GetK8sClusterS3BucketOutput {
	return o
}

func (o GetK8sClusterS3BucketOutput) ToGetK8sClusterS3BucketOutputWithContext(ctx context.Context) GetK8sClusterS3BucketOutput {
	return o
}

// Name of an existing cluster that you want to search for.
func (o GetK8sClusterS3BucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClusterS3Bucket) string { return v.Name }).(pulumi.StringOutput)
}

type GetK8sClusterS3BucketArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClusterS3BucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClusterS3Bucket)(nil)).Elem()
}

func (o GetK8sClusterS3BucketArrayOutput) ToGetK8sClusterS3BucketArrayOutput() GetK8sClusterS3BucketArrayOutput {
	return o
}

func (o GetK8sClusterS3BucketArrayOutput) ToGetK8sClusterS3BucketArrayOutputWithContext(ctx context.Context) GetK8sClusterS3BucketArrayOutput {
	return o
}

func (o GetK8sClusterS3BucketArrayOutput) Index(i pulumi.IntInput) GetK8sClusterS3BucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClusterS3Bucket {
		return vs[0].([]GetK8sClusterS3Bucket)[vs[1].(int)]
	}).(GetK8sClusterS3BucketOutput)
}

type GetK8sClustersCluster struct {
	// Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.
	ApiSubnetAllowLists []string `pulumi:"apiSubnetAllowLists"`
	// A list of available versions for upgrading the cluster
	AvailableUpgradeVersions []string                      `pulumi:"availableUpgradeVersions"`
	CaCrt                    string                        `pulumi:"caCrt"`
	Configs                  []GetK8sClustersClusterConfig `pulumi:"configs"`
	Id                       *string                       `pulumi:"id"`
	K8sVersion               string                        `pulumi:"k8sVersion"`
	KubeConfig               string                        `pulumi:"kubeConfig"`
	Location                 string                        `pulumi:"location"`
	// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
	MaintenanceWindows []GetK8sClustersClusterMaintenanceWindow `pulumi:"maintenanceWindows"`
	Name               *string                                  `pulumi:"name"`
	// The NAT gateway IP of the cluster if the cluster is private.
	NatGatewayIp string   `pulumi:"natGatewayIp"`
	NodePools    []string `pulumi:"nodePools"`
	// The node subnet of the cluster, if the cluster is private.
	NodeSubnet string `pulumi:"nodeSubnet"`
	// The indicator if the cluster is public or private.
	Public bool `pulumi:"public"`
	// List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store K8s API audit logs.
	S3Buckets  []GetK8sClustersClusterS3Bucket `pulumi:"s3Buckets"`
	Server     string                          `pulumi:"server"`
	State      string                          `pulumi:"state"`
	UserTokens map[string]string               `pulumi:"userTokens"`
	// A list of versions that may be used for node pools under this cluster
	ViableNodePoolVersions []string `pulumi:"viableNodePoolVersions"`
}

// GetK8sClustersClusterInput is an input type that accepts GetK8sClustersClusterArgs and GetK8sClustersClusterOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterInput` via:
//
//	GetK8sClustersClusterArgs{...}
type GetK8sClustersClusterInput interface {
	pulumi.Input

	ToGetK8sClustersClusterOutput() GetK8sClustersClusterOutput
	ToGetK8sClustersClusterOutputWithContext(context.Context) GetK8sClustersClusterOutput
}

type GetK8sClustersClusterArgs struct {
	// Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.
	ApiSubnetAllowLists pulumi.StringArrayInput `pulumi:"apiSubnetAllowLists"`
	// A list of available versions for upgrading the cluster
	AvailableUpgradeVersions pulumi.StringArrayInput               `pulumi:"availableUpgradeVersions"`
	CaCrt                    pulumi.StringInput                    `pulumi:"caCrt"`
	Configs                  GetK8sClustersClusterConfigArrayInput `pulumi:"configs"`
	Id                       pulumi.StringPtrInput                 `pulumi:"id"`
	K8sVersion               pulumi.StringInput                    `pulumi:"k8sVersion"`
	KubeConfig               pulumi.StringInput                    `pulumi:"kubeConfig"`
	Location                 pulumi.StringInput                    `pulumi:"location"`
	// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
	MaintenanceWindows GetK8sClustersClusterMaintenanceWindowArrayInput `pulumi:"maintenanceWindows"`
	Name               pulumi.StringPtrInput                            `pulumi:"name"`
	// The NAT gateway IP of the cluster if the cluster is private.
	NatGatewayIp pulumi.StringInput      `pulumi:"natGatewayIp"`
	NodePools    pulumi.StringArrayInput `pulumi:"nodePools"`
	// The node subnet of the cluster, if the cluster is private.
	NodeSubnet pulumi.StringInput `pulumi:"nodeSubnet"`
	// The indicator if the cluster is public or private.
	Public pulumi.BoolInput `pulumi:"public"`
	// List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store K8s API audit logs.
	S3Buckets  GetK8sClustersClusterS3BucketArrayInput `pulumi:"s3Buckets"`
	Server     pulumi.StringInput                      `pulumi:"server"`
	State      pulumi.StringInput                      `pulumi:"state"`
	UserTokens pulumi.StringMapInput                   `pulumi:"userTokens"`
	// A list of versions that may be used for node pools under this cluster
	ViableNodePoolVersions pulumi.StringArrayInput `pulumi:"viableNodePoolVersions"`
}

func (GetK8sClustersClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersCluster)(nil)).Elem()
}

func (i GetK8sClustersClusterArgs) ToGetK8sClustersClusterOutput() GetK8sClustersClusterOutput {
	return i.ToGetK8sClustersClusterOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterArgs) ToGetK8sClustersClusterOutputWithContext(ctx context.Context) GetK8sClustersClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterOutput)
}

// GetK8sClustersClusterArrayInput is an input type that accepts GetK8sClustersClusterArray and GetK8sClustersClusterArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterArrayInput` via:
//
//	GetK8sClustersClusterArray{ GetK8sClustersClusterArgs{...} }
type GetK8sClustersClusterArrayInput interface {
	pulumi.Input

	ToGetK8sClustersClusterArrayOutput() GetK8sClustersClusterArrayOutput
	ToGetK8sClustersClusterArrayOutputWithContext(context.Context) GetK8sClustersClusterArrayOutput
}

type GetK8sClustersClusterArray []GetK8sClustersClusterInput

func (GetK8sClustersClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersCluster)(nil)).Elem()
}

func (i GetK8sClustersClusterArray) ToGetK8sClustersClusterArrayOutput() GetK8sClustersClusterArrayOutput {
	return i.ToGetK8sClustersClusterArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterArray) ToGetK8sClustersClusterArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterArrayOutput)
}

type GetK8sClustersClusterOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersCluster)(nil)).Elem()
}

func (o GetK8sClustersClusterOutput) ToGetK8sClustersClusterOutput() GetK8sClustersClusterOutput {
	return o
}

func (o GetK8sClustersClusterOutput) ToGetK8sClustersClusterOutputWithContext(ctx context.Context) GetK8sClustersClusterOutput {
	return o
}

// Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.
func (o GetK8sClustersClusterOutput) ApiSubnetAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) []string { return v.ApiSubnetAllowLists }).(pulumi.StringArrayOutput)
}

// A list of available versions for upgrading the cluster
func (o GetK8sClustersClusterOutput) AvailableUpgradeVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) []string { return v.AvailableUpgradeVersions }).(pulumi.StringArrayOutput)
}

func (o GetK8sClustersClusterOutput) CaCrt() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.CaCrt }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterOutput) Configs() GetK8sClustersClusterConfigArrayOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) []GetK8sClustersClusterConfig { return v.Configs }).(GetK8sClustersClusterConfigArrayOutput)
}

func (o GetK8sClustersClusterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetK8sClustersClusterOutput) K8sVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.K8sVersion }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterOutput) KubeConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.KubeConfig }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.Location }).(pulumi.StringOutput)
}

// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
func (o GetK8sClustersClusterOutput) MaintenanceWindows() GetK8sClustersClusterMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) []GetK8sClustersClusterMaintenanceWindow { return v.MaintenanceWindows }).(GetK8sClustersClusterMaintenanceWindowArrayOutput)
}

func (o GetK8sClustersClusterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The NAT gateway IP of the cluster if the cluster is private.
func (o GetK8sClustersClusterOutput) NatGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.NatGatewayIp }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterOutput) NodePools() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) []string { return v.NodePools }).(pulumi.StringArrayOutput)
}

// The node subnet of the cluster, if the cluster is private.
func (o GetK8sClustersClusterOutput) NodeSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.NodeSubnet }).(pulumi.StringOutput)
}

// The indicator if the cluster is public or private.
func (o GetK8sClustersClusterOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) bool { return v.Public }).(pulumi.BoolOutput)
}

// List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store K8s API audit logs.
func (o GetK8sClustersClusterOutput) S3Buckets() GetK8sClustersClusterS3BucketArrayOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) []GetK8sClustersClusterS3Bucket { return v.S3Buckets }).(GetK8sClustersClusterS3BucketArrayOutput)
}

func (o GetK8sClustersClusterOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.Server }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.State }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterOutput) UserTokens() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) map[string]string { return v.UserTokens }).(pulumi.StringMapOutput)
}

// A list of versions that may be used for node pools under this cluster
func (o GetK8sClustersClusterOutput) ViableNodePoolVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) []string { return v.ViableNodePoolVersions }).(pulumi.StringArrayOutput)
}

type GetK8sClustersClusterArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersCluster)(nil)).Elem()
}

func (o GetK8sClustersClusterArrayOutput) ToGetK8sClustersClusterArrayOutput() GetK8sClustersClusterArrayOutput {
	return o
}

func (o GetK8sClustersClusterArrayOutput) ToGetK8sClustersClusterArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterArrayOutput {
	return o
}

func (o GetK8sClustersClusterArrayOutput) Index(i pulumi.IntInput) GetK8sClustersClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersCluster {
		return vs[0].([]GetK8sClustersCluster)[vs[1].(int)]
	}).(GetK8sClustersClusterOutput)
}

type GetK8sClustersClusterConfig struct {
	ApiVersion     string                               `pulumi:"apiVersion"`
	Clusters       []GetK8sClustersClusterConfigCluster `pulumi:"clusters"`
	Contexts       []GetK8sClustersClusterConfigContext `pulumi:"contexts"`
	CurrentContext string                               `pulumi:"currentContext"`
	Kind           string                               `pulumi:"kind"`
	Users          []GetK8sClustersClusterConfigUser    `pulumi:"users"`
}

// GetK8sClustersClusterConfigInput is an input type that accepts GetK8sClustersClusterConfigArgs and GetK8sClustersClusterConfigOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigInput` via:
//
//	GetK8sClustersClusterConfigArgs{...}
type GetK8sClustersClusterConfigInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigOutput() GetK8sClustersClusterConfigOutput
	ToGetK8sClustersClusterConfigOutputWithContext(context.Context) GetK8sClustersClusterConfigOutput
}

type GetK8sClustersClusterConfigArgs struct {
	ApiVersion     pulumi.StringInput                           `pulumi:"apiVersion"`
	Clusters       GetK8sClustersClusterConfigClusterArrayInput `pulumi:"clusters"`
	Contexts       GetK8sClustersClusterConfigContextArrayInput `pulumi:"contexts"`
	CurrentContext pulumi.StringInput                           `pulumi:"currentContext"`
	Kind           pulumi.StringInput                           `pulumi:"kind"`
	Users          GetK8sClustersClusterConfigUserArrayInput    `pulumi:"users"`
}

func (GetK8sClustersClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfig)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigArgs) ToGetK8sClustersClusterConfigOutput() GetK8sClustersClusterConfigOutput {
	return i.ToGetK8sClustersClusterConfigOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigArgs) ToGetK8sClustersClusterConfigOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigOutput)
}

// GetK8sClustersClusterConfigArrayInput is an input type that accepts GetK8sClustersClusterConfigArray and GetK8sClustersClusterConfigArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigArrayInput` via:
//
//	GetK8sClustersClusterConfigArray{ GetK8sClustersClusterConfigArgs{...} }
type GetK8sClustersClusterConfigArrayInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigArrayOutput() GetK8sClustersClusterConfigArrayOutput
	ToGetK8sClustersClusterConfigArrayOutputWithContext(context.Context) GetK8sClustersClusterConfigArrayOutput
}

type GetK8sClustersClusterConfigArray []GetK8sClustersClusterConfigInput

func (GetK8sClustersClusterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfig)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigArray) ToGetK8sClustersClusterConfigArrayOutput() GetK8sClustersClusterConfigArrayOutput {
	return i.ToGetK8sClustersClusterConfigArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigArray) ToGetK8sClustersClusterConfigArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigArrayOutput)
}

type GetK8sClustersClusterConfigOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfig)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigOutput) ToGetK8sClustersClusterConfigOutput() GetK8sClustersClusterConfigOutput {
	return o
}

func (o GetK8sClustersClusterConfigOutput) ToGetK8sClustersClusterConfigOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigOutput {
	return o
}

func (o GetK8sClustersClusterConfigOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfig) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterConfigOutput) Clusters() GetK8sClustersClusterConfigClusterArrayOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfig) []GetK8sClustersClusterConfigCluster { return v.Clusters }).(GetK8sClustersClusterConfigClusterArrayOutput)
}

func (o GetK8sClustersClusterConfigOutput) Contexts() GetK8sClustersClusterConfigContextArrayOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfig) []GetK8sClustersClusterConfigContext { return v.Contexts }).(GetK8sClustersClusterConfigContextArrayOutput)
}

func (o GetK8sClustersClusterConfigOutput) CurrentContext() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfig) string { return v.CurrentContext }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterConfigOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfig) string { return v.Kind }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterConfigOutput) Users() GetK8sClustersClusterConfigUserArrayOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfig) []GetK8sClustersClusterConfigUser { return v.Users }).(GetK8sClustersClusterConfigUserArrayOutput)
}

type GetK8sClustersClusterConfigArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfig)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigArrayOutput) ToGetK8sClustersClusterConfigArrayOutput() GetK8sClustersClusterConfigArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigArrayOutput) ToGetK8sClustersClusterConfigArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigArrayOutput) Index(i pulumi.IntInput) GetK8sClustersClusterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersClusterConfig {
		return vs[0].([]GetK8sClustersClusterConfig)[vs[1].(int)]
	}).(GetK8sClustersClusterConfigOutput)
}

type GetK8sClustersClusterConfigCluster struct {
	Cluster map[string]string `pulumi:"cluster"`
	Name    string            `pulumi:"name"`
}

// GetK8sClustersClusterConfigClusterInput is an input type that accepts GetK8sClustersClusterConfigClusterArgs and GetK8sClustersClusterConfigClusterOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigClusterInput` via:
//
//	GetK8sClustersClusterConfigClusterArgs{...}
type GetK8sClustersClusterConfigClusterInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigClusterOutput() GetK8sClustersClusterConfigClusterOutput
	ToGetK8sClustersClusterConfigClusterOutputWithContext(context.Context) GetK8sClustersClusterConfigClusterOutput
}

type GetK8sClustersClusterConfigClusterArgs struct {
	Cluster pulumi.StringMapInput `pulumi:"cluster"`
	Name    pulumi.StringInput    `pulumi:"name"`
}

func (GetK8sClustersClusterConfigClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfigCluster)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigClusterArgs) ToGetK8sClustersClusterConfigClusterOutput() GetK8sClustersClusterConfigClusterOutput {
	return i.ToGetK8sClustersClusterConfigClusterOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigClusterArgs) ToGetK8sClustersClusterConfigClusterOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigClusterOutput)
}

// GetK8sClustersClusterConfigClusterArrayInput is an input type that accepts GetK8sClustersClusterConfigClusterArray and GetK8sClustersClusterConfigClusterArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigClusterArrayInput` via:
//
//	GetK8sClustersClusterConfigClusterArray{ GetK8sClustersClusterConfigClusterArgs{...} }
type GetK8sClustersClusterConfigClusterArrayInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigClusterArrayOutput() GetK8sClustersClusterConfigClusterArrayOutput
	ToGetK8sClustersClusterConfigClusterArrayOutputWithContext(context.Context) GetK8sClustersClusterConfigClusterArrayOutput
}

type GetK8sClustersClusterConfigClusterArray []GetK8sClustersClusterConfigClusterInput

func (GetK8sClustersClusterConfigClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfigCluster)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigClusterArray) ToGetK8sClustersClusterConfigClusterArrayOutput() GetK8sClustersClusterConfigClusterArrayOutput {
	return i.ToGetK8sClustersClusterConfigClusterArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigClusterArray) ToGetK8sClustersClusterConfigClusterArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigClusterArrayOutput)
}

type GetK8sClustersClusterConfigClusterOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfigCluster)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigClusterOutput) ToGetK8sClustersClusterConfigClusterOutput() GetK8sClustersClusterConfigClusterOutput {
	return o
}

func (o GetK8sClustersClusterConfigClusterOutput) ToGetK8sClustersClusterConfigClusterOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigClusterOutput {
	return o
}

func (o GetK8sClustersClusterConfigClusterOutput) Cluster() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfigCluster) map[string]string { return v.Cluster }).(pulumi.StringMapOutput)
}

func (o GetK8sClustersClusterConfigClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfigCluster) string { return v.Name }).(pulumi.StringOutput)
}

type GetK8sClustersClusterConfigClusterArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfigCluster)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigClusterArrayOutput) ToGetK8sClustersClusterConfigClusterArrayOutput() GetK8sClustersClusterConfigClusterArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigClusterArrayOutput) ToGetK8sClustersClusterConfigClusterArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigClusterArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigClusterArrayOutput) Index(i pulumi.IntInput) GetK8sClustersClusterConfigClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersClusterConfigCluster {
		return vs[0].([]GetK8sClustersClusterConfigCluster)[vs[1].(int)]
	}).(GetK8sClustersClusterConfigClusterOutput)
}

type GetK8sClustersClusterConfigContext struct {
	Context map[string]string `pulumi:"context"`
	Name    string            `pulumi:"name"`
}

// GetK8sClustersClusterConfigContextInput is an input type that accepts GetK8sClustersClusterConfigContextArgs and GetK8sClustersClusterConfigContextOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigContextInput` via:
//
//	GetK8sClustersClusterConfigContextArgs{...}
type GetK8sClustersClusterConfigContextInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigContextOutput() GetK8sClustersClusterConfigContextOutput
	ToGetK8sClustersClusterConfigContextOutputWithContext(context.Context) GetK8sClustersClusterConfigContextOutput
}

type GetK8sClustersClusterConfigContextArgs struct {
	Context pulumi.StringMapInput `pulumi:"context"`
	Name    pulumi.StringInput    `pulumi:"name"`
}

func (GetK8sClustersClusterConfigContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfigContext)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigContextArgs) ToGetK8sClustersClusterConfigContextOutput() GetK8sClustersClusterConfigContextOutput {
	return i.ToGetK8sClustersClusterConfigContextOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigContextArgs) ToGetK8sClustersClusterConfigContextOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigContextOutput)
}

// GetK8sClustersClusterConfigContextArrayInput is an input type that accepts GetK8sClustersClusterConfigContextArray and GetK8sClustersClusterConfigContextArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigContextArrayInput` via:
//
//	GetK8sClustersClusterConfigContextArray{ GetK8sClustersClusterConfigContextArgs{...} }
type GetK8sClustersClusterConfigContextArrayInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigContextArrayOutput() GetK8sClustersClusterConfigContextArrayOutput
	ToGetK8sClustersClusterConfigContextArrayOutputWithContext(context.Context) GetK8sClustersClusterConfigContextArrayOutput
}

type GetK8sClustersClusterConfigContextArray []GetK8sClustersClusterConfigContextInput

func (GetK8sClustersClusterConfigContextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfigContext)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigContextArray) ToGetK8sClustersClusterConfigContextArrayOutput() GetK8sClustersClusterConfigContextArrayOutput {
	return i.ToGetK8sClustersClusterConfigContextArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigContextArray) ToGetK8sClustersClusterConfigContextArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigContextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigContextArrayOutput)
}

type GetK8sClustersClusterConfigContextOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfigContext)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigContextOutput) ToGetK8sClustersClusterConfigContextOutput() GetK8sClustersClusterConfigContextOutput {
	return o
}

func (o GetK8sClustersClusterConfigContextOutput) ToGetK8sClustersClusterConfigContextOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigContextOutput {
	return o
}

func (o GetK8sClustersClusterConfigContextOutput) Context() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfigContext) map[string]string { return v.Context }).(pulumi.StringMapOutput)
}

func (o GetK8sClustersClusterConfigContextOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfigContext) string { return v.Name }).(pulumi.StringOutput)
}

type GetK8sClustersClusterConfigContextArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigContextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfigContext)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigContextArrayOutput) ToGetK8sClustersClusterConfigContextArrayOutput() GetK8sClustersClusterConfigContextArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigContextArrayOutput) ToGetK8sClustersClusterConfigContextArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigContextArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigContextArrayOutput) Index(i pulumi.IntInput) GetK8sClustersClusterConfigContextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersClusterConfigContext {
		return vs[0].([]GetK8sClustersClusterConfigContext)[vs[1].(int)]
	}).(GetK8sClustersClusterConfigContextOutput)
}

type GetK8sClustersClusterConfigUser struct {
	Name string            `pulumi:"name"`
	User map[string]string `pulumi:"user"`
}

// GetK8sClustersClusterConfigUserInput is an input type that accepts GetK8sClustersClusterConfigUserArgs and GetK8sClustersClusterConfigUserOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigUserInput` via:
//
//	GetK8sClustersClusterConfigUserArgs{...}
type GetK8sClustersClusterConfigUserInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigUserOutput() GetK8sClustersClusterConfigUserOutput
	ToGetK8sClustersClusterConfigUserOutputWithContext(context.Context) GetK8sClustersClusterConfigUserOutput
}

type GetK8sClustersClusterConfigUserArgs struct {
	Name pulumi.StringInput    `pulumi:"name"`
	User pulumi.StringMapInput `pulumi:"user"`
}

func (GetK8sClustersClusterConfigUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfigUser)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigUserArgs) ToGetK8sClustersClusterConfigUserOutput() GetK8sClustersClusterConfigUserOutput {
	return i.ToGetK8sClustersClusterConfigUserOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigUserArgs) ToGetK8sClustersClusterConfigUserOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigUserOutput)
}

// GetK8sClustersClusterConfigUserArrayInput is an input type that accepts GetK8sClustersClusterConfigUserArray and GetK8sClustersClusterConfigUserArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigUserArrayInput` via:
//
//	GetK8sClustersClusterConfigUserArray{ GetK8sClustersClusterConfigUserArgs{...} }
type GetK8sClustersClusterConfigUserArrayInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigUserArrayOutput() GetK8sClustersClusterConfigUserArrayOutput
	ToGetK8sClustersClusterConfigUserArrayOutputWithContext(context.Context) GetK8sClustersClusterConfigUserArrayOutput
}

type GetK8sClustersClusterConfigUserArray []GetK8sClustersClusterConfigUserInput

func (GetK8sClustersClusterConfigUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfigUser)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigUserArray) ToGetK8sClustersClusterConfigUserArrayOutput() GetK8sClustersClusterConfigUserArrayOutput {
	return i.ToGetK8sClustersClusterConfigUserArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigUserArray) ToGetK8sClustersClusterConfigUserArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigUserArrayOutput)
}

type GetK8sClustersClusterConfigUserOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfigUser)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigUserOutput) ToGetK8sClustersClusterConfigUserOutput() GetK8sClustersClusterConfigUserOutput {
	return o
}

func (o GetK8sClustersClusterConfigUserOutput) ToGetK8sClustersClusterConfigUserOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigUserOutput {
	return o
}

func (o GetK8sClustersClusterConfigUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfigUser) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterConfigUserOutput) User() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfigUser) map[string]string { return v.User }).(pulumi.StringMapOutput)
}

type GetK8sClustersClusterConfigUserArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfigUser)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigUserArrayOutput) ToGetK8sClustersClusterConfigUserArrayOutput() GetK8sClustersClusterConfigUserArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigUserArrayOutput) ToGetK8sClustersClusterConfigUserArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigUserArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigUserArrayOutput) Index(i pulumi.IntInput) GetK8sClustersClusterConfigUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersClusterConfigUser {
		return vs[0].([]GetK8sClustersClusterConfigUser)[vs[1].(int)]
	}).(GetK8sClustersClusterConfigUserOutput)
}

type GetK8sClustersClusterMaintenanceWindow struct {
	// Day of the week when maintenance is allowed
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// A clock time in the day when maintenance is allowed
	Time string `pulumi:"time"`
}

// GetK8sClustersClusterMaintenanceWindowInput is an input type that accepts GetK8sClustersClusterMaintenanceWindowArgs and GetK8sClustersClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterMaintenanceWindowInput` via:
//
//	GetK8sClustersClusterMaintenanceWindowArgs{...}
type GetK8sClustersClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToGetK8sClustersClusterMaintenanceWindowOutput() GetK8sClustersClusterMaintenanceWindowOutput
	ToGetK8sClustersClusterMaintenanceWindowOutputWithContext(context.Context) GetK8sClustersClusterMaintenanceWindowOutput
}

type GetK8sClustersClusterMaintenanceWindowArgs struct {
	// Day of the week when maintenance is allowed
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// A clock time in the day when maintenance is allowed
	Time pulumi.StringInput `pulumi:"time"`
}

func (GetK8sClustersClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetK8sClustersClusterMaintenanceWindowArgs) ToGetK8sClustersClusterMaintenanceWindowOutput() GetK8sClustersClusterMaintenanceWindowOutput {
	return i.ToGetK8sClustersClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterMaintenanceWindowArgs) ToGetK8sClustersClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetK8sClustersClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterMaintenanceWindowOutput)
}

// GetK8sClustersClusterMaintenanceWindowArrayInput is an input type that accepts GetK8sClustersClusterMaintenanceWindowArray and GetK8sClustersClusterMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterMaintenanceWindowArrayInput` via:
//
//	GetK8sClustersClusterMaintenanceWindowArray{ GetK8sClustersClusterMaintenanceWindowArgs{...} }
type GetK8sClustersClusterMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetK8sClustersClusterMaintenanceWindowArrayOutput() GetK8sClustersClusterMaintenanceWindowArrayOutput
	ToGetK8sClustersClusterMaintenanceWindowArrayOutputWithContext(context.Context) GetK8sClustersClusterMaintenanceWindowArrayOutput
}

type GetK8sClustersClusterMaintenanceWindowArray []GetK8sClustersClusterMaintenanceWindowInput

func (GetK8sClustersClusterMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetK8sClustersClusterMaintenanceWindowArray) ToGetK8sClustersClusterMaintenanceWindowArrayOutput() GetK8sClustersClusterMaintenanceWindowArrayOutput {
	return i.ToGetK8sClustersClusterMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterMaintenanceWindowArray) ToGetK8sClustersClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterMaintenanceWindowArrayOutput)
}

type GetK8sClustersClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetK8sClustersClusterMaintenanceWindowOutput) ToGetK8sClustersClusterMaintenanceWindowOutput() GetK8sClustersClusterMaintenanceWindowOutput {
	return o
}

func (o GetK8sClustersClusterMaintenanceWindowOutput) ToGetK8sClustersClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetK8sClustersClusterMaintenanceWindowOutput {
	return o
}

// Day of the week when maintenance is allowed
func (o GetK8sClustersClusterMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// A clock time in the day when maintenance is allowed
func (o GetK8sClustersClusterMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type GetK8sClustersClusterMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetK8sClustersClusterMaintenanceWindowArrayOutput) ToGetK8sClustersClusterMaintenanceWindowArrayOutput() GetK8sClustersClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetK8sClustersClusterMaintenanceWindowArrayOutput) ToGetK8sClustersClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetK8sClustersClusterMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetK8sClustersClusterMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersClusterMaintenanceWindow {
		return vs[0].([]GetK8sClustersClusterMaintenanceWindow)[vs[1].(int)]
	}).(GetK8sClustersClusterMaintenanceWindowOutput)
}

type GetK8sClustersClusterS3Bucket struct {
	// Name of the Object Storage bucket
	Name string `pulumi:"name"`
}

// GetK8sClustersClusterS3BucketInput is an input type that accepts GetK8sClustersClusterS3BucketArgs and GetK8sClustersClusterS3BucketOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterS3BucketInput` via:
//
//	GetK8sClustersClusterS3BucketArgs{...}
type GetK8sClustersClusterS3BucketInput interface {
	pulumi.Input

	ToGetK8sClustersClusterS3BucketOutput() GetK8sClustersClusterS3BucketOutput
	ToGetK8sClustersClusterS3BucketOutputWithContext(context.Context) GetK8sClustersClusterS3BucketOutput
}

type GetK8sClustersClusterS3BucketArgs struct {
	// Name of the Object Storage bucket
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetK8sClustersClusterS3BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterS3Bucket)(nil)).Elem()
}

func (i GetK8sClustersClusterS3BucketArgs) ToGetK8sClustersClusterS3BucketOutput() GetK8sClustersClusterS3BucketOutput {
	return i.ToGetK8sClustersClusterS3BucketOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterS3BucketArgs) ToGetK8sClustersClusterS3BucketOutputWithContext(ctx context.Context) GetK8sClustersClusterS3BucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterS3BucketOutput)
}

// GetK8sClustersClusterS3BucketArrayInput is an input type that accepts GetK8sClustersClusterS3BucketArray and GetK8sClustersClusterS3BucketArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterS3BucketArrayInput` via:
//
//	GetK8sClustersClusterS3BucketArray{ GetK8sClustersClusterS3BucketArgs{...} }
type GetK8sClustersClusterS3BucketArrayInput interface {
	pulumi.Input

	ToGetK8sClustersClusterS3BucketArrayOutput() GetK8sClustersClusterS3BucketArrayOutput
	ToGetK8sClustersClusterS3BucketArrayOutputWithContext(context.Context) GetK8sClustersClusterS3BucketArrayOutput
}

type GetK8sClustersClusterS3BucketArray []GetK8sClustersClusterS3BucketInput

func (GetK8sClustersClusterS3BucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterS3Bucket)(nil)).Elem()
}

func (i GetK8sClustersClusterS3BucketArray) ToGetK8sClustersClusterS3BucketArrayOutput() GetK8sClustersClusterS3BucketArrayOutput {
	return i.ToGetK8sClustersClusterS3BucketArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterS3BucketArray) ToGetK8sClustersClusterS3BucketArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterS3BucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterS3BucketArrayOutput)
}

type GetK8sClustersClusterS3BucketOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterS3BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterS3Bucket)(nil)).Elem()
}

func (o GetK8sClustersClusterS3BucketOutput) ToGetK8sClustersClusterS3BucketOutput() GetK8sClustersClusterS3BucketOutput {
	return o
}

func (o GetK8sClustersClusterS3BucketOutput) ToGetK8sClustersClusterS3BucketOutputWithContext(ctx context.Context) GetK8sClustersClusterS3BucketOutput {
	return o
}

// Name of the Object Storage bucket
func (o GetK8sClustersClusterS3BucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterS3Bucket) string { return v.Name }).(pulumi.StringOutput)
}

type GetK8sClustersClusterS3BucketArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterS3BucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterS3Bucket)(nil)).Elem()
}

func (o GetK8sClustersClusterS3BucketArrayOutput) ToGetK8sClustersClusterS3BucketArrayOutput() GetK8sClustersClusterS3BucketArrayOutput {
	return o
}

func (o GetK8sClustersClusterS3BucketArrayOutput) ToGetK8sClustersClusterS3BucketArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterS3BucketArrayOutput {
	return o
}

func (o GetK8sClustersClusterS3BucketArrayOutput) Index(i pulumi.IntInput) GetK8sClustersClusterS3BucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersClusterS3Bucket {
		return vs[0].([]GetK8sClustersClusterS3Bucket)[vs[1].(int)]
	}).(GetK8sClustersClusterS3BucketOutput)
}

type GetK8sClustersFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetK8sClustersFilterInput is an input type that accepts GetK8sClustersFilterArgs and GetK8sClustersFilterOutput values.
// You can construct a concrete instance of `GetK8sClustersFilterInput` via:
//
//	GetK8sClustersFilterArgs{...}
type GetK8sClustersFilterInput interface {
	pulumi.Input

	ToGetK8sClustersFilterOutput() GetK8sClustersFilterOutput
	ToGetK8sClustersFilterOutputWithContext(context.Context) GetK8sClustersFilterOutput
}

type GetK8sClustersFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetK8sClustersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersFilter)(nil)).Elem()
}

func (i GetK8sClustersFilterArgs) ToGetK8sClustersFilterOutput() GetK8sClustersFilterOutput {
	return i.ToGetK8sClustersFilterOutputWithContext(context.Background())
}

func (i GetK8sClustersFilterArgs) ToGetK8sClustersFilterOutputWithContext(ctx context.Context) GetK8sClustersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersFilterOutput)
}

// GetK8sClustersFilterArrayInput is an input type that accepts GetK8sClustersFilterArray and GetK8sClustersFilterArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersFilterArrayInput` via:
//
//	GetK8sClustersFilterArray{ GetK8sClustersFilterArgs{...} }
type GetK8sClustersFilterArrayInput interface {
	pulumi.Input

	ToGetK8sClustersFilterArrayOutput() GetK8sClustersFilterArrayOutput
	ToGetK8sClustersFilterArrayOutputWithContext(context.Context) GetK8sClustersFilterArrayOutput
}

type GetK8sClustersFilterArray []GetK8sClustersFilterInput

func (GetK8sClustersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersFilter)(nil)).Elem()
}

func (i GetK8sClustersFilterArray) ToGetK8sClustersFilterArrayOutput() GetK8sClustersFilterArrayOutput {
	return i.ToGetK8sClustersFilterArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersFilterArray) ToGetK8sClustersFilterArrayOutputWithContext(ctx context.Context) GetK8sClustersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersFilterArrayOutput)
}

type GetK8sClustersFilterOutput struct{ *pulumi.OutputState }

func (GetK8sClustersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersFilter)(nil)).Elem()
}

func (o GetK8sClustersFilterOutput) ToGetK8sClustersFilterOutput() GetK8sClustersFilterOutput {
	return o
}

func (o GetK8sClustersFilterOutput) ToGetK8sClustersFilterOutputWithContext(ctx context.Context) GetK8sClustersFilterOutput {
	return o
}

func (o GetK8sClustersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetK8sClustersFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetK8sClustersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersFilter)(nil)).Elem()
}

func (o GetK8sClustersFilterArrayOutput) ToGetK8sClustersFilterArrayOutput() GetK8sClustersFilterArrayOutput {
	return o
}

func (o GetK8sClustersFilterArrayOutput) ToGetK8sClustersFilterArrayOutputWithContext(ctx context.Context) GetK8sClustersFilterArrayOutput {
	return o
}

func (o GetK8sClustersFilterArrayOutput) Index(i pulumi.IntInput) GetK8sClustersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersFilter {
		return vs[0].([]GetK8sClustersFilter)[vs[1].(int)]
	}).(GetK8sClustersFilterOutput)
}

type GetK8sNodePoolAutoScaling struct {
	// The maximum number of worker nodes that the node pool can scale to
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// The minimum number of worker nodes the node pool can scale down to
	MinNodeCount int `pulumi:"minNodeCount"`
}

// GetK8sNodePoolAutoScalingInput is an input type that accepts GetK8sNodePoolAutoScalingArgs and GetK8sNodePoolAutoScalingOutput values.
// You can construct a concrete instance of `GetK8sNodePoolAutoScalingInput` via:
//
//	GetK8sNodePoolAutoScalingArgs{...}
type GetK8sNodePoolAutoScalingInput interface {
	pulumi.Input

	ToGetK8sNodePoolAutoScalingOutput() GetK8sNodePoolAutoScalingOutput
	ToGetK8sNodePoolAutoScalingOutputWithContext(context.Context) GetK8sNodePoolAutoScalingOutput
}

type GetK8sNodePoolAutoScalingArgs struct {
	// The maximum number of worker nodes that the node pool can scale to
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// The minimum number of worker nodes the node pool can scale down to
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (GetK8sNodePoolAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sNodePoolAutoScaling)(nil)).Elem()
}

func (i GetK8sNodePoolAutoScalingArgs) ToGetK8sNodePoolAutoScalingOutput() GetK8sNodePoolAutoScalingOutput {
	return i.ToGetK8sNodePoolAutoScalingOutputWithContext(context.Background())
}

func (i GetK8sNodePoolAutoScalingArgs) ToGetK8sNodePoolAutoScalingOutputWithContext(ctx context.Context) GetK8sNodePoolAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sNodePoolAutoScalingOutput)
}

// GetK8sNodePoolAutoScalingArrayInput is an input type that accepts GetK8sNodePoolAutoScalingArray and GetK8sNodePoolAutoScalingArrayOutput values.
// You can construct a concrete instance of `GetK8sNodePoolAutoScalingArrayInput` via:
//
//	GetK8sNodePoolAutoScalingArray{ GetK8sNodePoolAutoScalingArgs{...} }
type GetK8sNodePoolAutoScalingArrayInput interface {
	pulumi.Input

	ToGetK8sNodePoolAutoScalingArrayOutput() GetK8sNodePoolAutoScalingArrayOutput
	ToGetK8sNodePoolAutoScalingArrayOutputWithContext(context.Context) GetK8sNodePoolAutoScalingArrayOutput
}

type GetK8sNodePoolAutoScalingArray []GetK8sNodePoolAutoScalingInput

func (GetK8sNodePoolAutoScalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sNodePoolAutoScaling)(nil)).Elem()
}

func (i GetK8sNodePoolAutoScalingArray) ToGetK8sNodePoolAutoScalingArrayOutput() GetK8sNodePoolAutoScalingArrayOutput {
	return i.ToGetK8sNodePoolAutoScalingArrayOutputWithContext(context.Background())
}

func (i GetK8sNodePoolAutoScalingArray) ToGetK8sNodePoolAutoScalingArrayOutputWithContext(ctx context.Context) GetK8sNodePoolAutoScalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sNodePoolAutoScalingArrayOutput)
}

type GetK8sNodePoolAutoScalingOutput struct{ *pulumi.OutputState }

func (GetK8sNodePoolAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sNodePoolAutoScaling)(nil)).Elem()
}

func (o GetK8sNodePoolAutoScalingOutput) ToGetK8sNodePoolAutoScalingOutput() GetK8sNodePoolAutoScalingOutput {
	return o
}

func (o GetK8sNodePoolAutoScalingOutput) ToGetK8sNodePoolAutoScalingOutputWithContext(ctx context.Context) GetK8sNodePoolAutoScalingOutput {
	return o
}

// The maximum number of worker nodes that the node pool can scale to
func (o GetK8sNodePoolAutoScalingOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetK8sNodePoolAutoScaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// The minimum number of worker nodes the node pool can scale down to
func (o GetK8sNodePoolAutoScalingOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetK8sNodePoolAutoScaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type GetK8sNodePoolAutoScalingArrayOutput struct{ *pulumi.OutputState }

func (GetK8sNodePoolAutoScalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sNodePoolAutoScaling)(nil)).Elem()
}

func (o GetK8sNodePoolAutoScalingArrayOutput) ToGetK8sNodePoolAutoScalingArrayOutput() GetK8sNodePoolAutoScalingArrayOutput {
	return o
}

func (o GetK8sNodePoolAutoScalingArrayOutput) ToGetK8sNodePoolAutoScalingArrayOutputWithContext(ctx context.Context) GetK8sNodePoolAutoScalingArrayOutput {
	return o
}

func (o GetK8sNodePoolAutoScalingArrayOutput) Index(i pulumi.IntInput) GetK8sNodePoolAutoScalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sNodePoolAutoScaling {
		return vs[0].([]GetK8sNodePoolAutoScaling)[vs[1].(int)]
	}).(GetK8sNodePoolAutoScalingOutput)
}

type GetK8sNodePoolLan struct {
	// Indicates if the Kubernetes Node Pool LAN will reserve an IP using DHCP
	Dhcp bool `pulumi:"dhcp"`
	// ID of the node pool you want to search for.
	//
	// `k8sClusterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id int `pulumi:"id"`
	// An array of additional LANs attached to worker nodes
	Routes []GetK8sNodePoolLanRoute `pulumi:"routes"`
}

// GetK8sNodePoolLanInput is an input type that accepts GetK8sNodePoolLanArgs and GetK8sNodePoolLanOutput values.
// You can construct a concrete instance of `GetK8sNodePoolLanInput` via:
//
//	GetK8sNodePoolLanArgs{...}
type GetK8sNodePoolLanInput interface {
	pulumi.Input

	ToGetK8sNodePoolLanOutput() GetK8sNodePoolLanOutput
	ToGetK8sNodePoolLanOutputWithContext(context.Context) GetK8sNodePoolLanOutput
}

type GetK8sNodePoolLanArgs struct {
	// Indicates if the Kubernetes Node Pool LAN will reserve an IP using DHCP
	Dhcp pulumi.BoolInput `pulumi:"dhcp"`
	// ID of the node pool you want to search for.
	//
	// `k8sClusterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id pulumi.IntInput `pulumi:"id"`
	// An array of additional LANs attached to worker nodes
	Routes GetK8sNodePoolLanRouteArrayInput `pulumi:"routes"`
}

func (GetK8sNodePoolLanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sNodePoolLan)(nil)).Elem()
}

func (i GetK8sNodePoolLanArgs) ToGetK8sNodePoolLanOutput() GetK8sNodePoolLanOutput {
	return i.ToGetK8sNodePoolLanOutputWithContext(context.Background())
}

func (i GetK8sNodePoolLanArgs) ToGetK8sNodePoolLanOutputWithContext(ctx context.Context) GetK8sNodePoolLanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sNodePoolLanOutput)
}

// GetK8sNodePoolLanArrayInput is an input type that accepts GetK8sNodePoolLanArray and GetK8sNodePoolLanArrayOutput values.
// You can construct a concrete instance of `GetK8sNodePoolLanArrayInput` via:
//
//	GetK8sNodePoolLanArray{ GetK8sNodePoolLanArgs{...} }
type GetK8sNodePoolLanArrayInput interface {
	pulumi.Input

	ToGetK8sNodePoolLanArrayOutput() GetK8sNodePoolLanArrayOutput
	ToGetK8sNodePoolLanArrayOutputWithContext(context.Context) GetK8sNodePoolLanArrayOutput
}

type GetK8sNodePoolLanArray []GetK8sNodePoolLanInput

func (GetK8sNodePoolLanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sNodePoolLan)(nil)).Elem()
}

func (i GetK8sNodePoolLanArray) ToGetK8sNodePoolLanArrayOutput() GetK8sNodePoolLanArrayOutput {
	return i.ToGetK8sNodePoolLanArrayOutputWithContext(context.Background())
}

func (i GetK8sNodePoolLanArray) ToGetK8sNodePoolLanArrayOutputWithContext(ctx context.Context) GetK8sNodePoolLanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sNodePoolLanArrayOutput)
}

type GetK8sNodePoolLanOutput struct{ *pulumi.OutputState }

func (GetK8sNodePoolLanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sNodePoolLan)(nil)).Elem()
}

func (o GetK8sNodePoolLanOutput) ToGetK8sNodePoolLanOutput() GetK8sNodePoolLanOutput {
	return o
}

func (o GetK8sNodePoolLanOutput) ToGetK8sNodePoolLanOutputWithContext(ctx context.Context) GetK8sNodePoolLanOutput {
	return o
}

// Indicates if the Kubernetes Node Pool LAN will reserve an IP using DHCP
func (o GetK8sNodePoolLanOutput) Dhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetK8sNodePoolLan) bool { return v.Dhcp }).(pulumi.BoolOutput)
}

// ID of the node pool you want to search for.
//
// `k8sClusterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetK8sNodePoolLanOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetK8sNodePoolLan) int { return v.Id }).(pulumi.IntOutput)
}

// An array of additional LANs attached to worker nodes
func (o GetK8sNodePoolLanOutput) Routes() GetK8sNodePoolLanRouteArrayOutput {
	return o.ApplyT(func(v GetK8sNodePoolLan) []GetK8sNodePoolLanRoute { return v.Routes }).(GetK8sNodePoolLanRouteArrayOutput)
}

type GetK8sNodePoolLanArrayOutput struct{ *pulumi.OutputState }

func (GetK8sNodePoolLanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sNodePoolLan)(nil)).Elem()
}

func (o GetK8sNodePoolLanArrayOutput) ToGetK8sNodePoolLanArrayOutput() GetK8sNodePoolLanArrayOutput {
	return o
}

func (o GetK8sNodePoolLanArrayOutput) ToGetK8sNodePoolLanArrayOutputWithContext(ctx context.Context) GetK8sNodePoolLanArrayOutput {
	return o
}

func (o GetK8sNodePoolLanArrayOutput) Index(i pulumi.IntInput) GetK8sNodePoolLanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sNodePoolLan {
		return vs[0].([]GetK8sNodePoolLan)[vs[1].(int)]
	}).(GetK8sNodePoolLanOutput)
}

type GetK8sNodePoolLanRoute struct {
	// IPv4 or IPv6 Gateway IP for the route
	GatewayIp string `pulumi:"gatewayIp"`
	// IPv4 or IPv6 CIDR to be routed via the interface
	Network string `pulumi:"network"`
}

// GetK8sNodePoolLanRouteInput is an input type that accepts GetK8sNodePoolLanRouteArgs and GetK8sNodePoolLanRouteOutput values.
// You can construct a concrete instance of `GetK8sNodePoolLanRouteInput` via:
//
//	GetK8sNodePoolLanRouteArgs{...}
type GetK8sNodePoolLanRouteInput interface {
	pulumi.Input

	ToGetK8sNodePoolLanRouteOutput() GetK8sNodePoolLanRouteOutput
	ToGetK8sNodePoolLanRouteOutputWithContext(context.Context) GetK8sNodePoolLanRouteOutput
}

type GetK8sNodePoolLanRouteArgs struct {
	// IPv4 or IPv6 Gateway IP for the route
	GatewayIp pulumi.StringInput `pulumi:"gatewayIp"`
	// IPv4 or IPv6 CIDR to be routed via the interface
	Network pulumi.StringInput `pulumi:"network"`
}

func (GetK8sNodePoolLanRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sNodePoolLanRoute)(nil)).Elem()
}

func (i GetK8sNodePoolLanRouteArgs) ToGetK8sNodePoolLanRouteOutput() GetK8sNodePoolLanRouteOutput {
	return i.ToGetK8sNodePoolLanRouteOutputWithContext(context.Background())
}

func (i GetK8sNodePoolLanRouteArgs) ToGetK8sNodePoolLanRouteOutputWithContext(ctx context.Context) GetK8sNodePoolLanRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sNodePoolLanRouteOutput)
}

// GetK8sNodePoolLanRouteArrayInput is an input type that accepts GetK8sNodePoolLanRouteArray and GetK8sNodePoolLanRouteArrayOutput values.
// You can construct a concrete instance of `GetK8sNodePoolLanRouteArrayInput` via:
//
//	GetK8sNodePoolLanRouteArray{ GetK8sNodePoolLanRouteArgs{...} }
type GetK8sNodePoolLanRouteArrayInput interface {
	pulumi.Input

	ToGetK8sNodePoolLanRouteArrayOutput() GetK8sNodePoolLanRouteArrayOutput
	ToGetK8sNodePoolLanRouteArrayOutputWithContext(context.Context) GetK8sNodePoolLanRouteArrayOutput
}

type GetK8sNodePoolLanRouteArray []GetK8sNodePoolLanRouteInput

func (GetK8sNodePoolLanRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sNodePoolLanRoute)(nil)).Elem()
}

func (i GetK8sNodePoolLanRouteArray) ToGetK8sNodePoolLanRouteArrayOutput() GetK8sNodePoolLanRouteArrayOutput {
	return i.ToGetK8sNodePoolLanRouteArrayOutputWithContext(context.Background())
}

func (i GetK8sNodePoolLanRouteArray) ToGetK8sNodePoolLanRouteArrayOutputWithContext(ctx context.Context) GetK8sNodePoolLanRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sNodePoolLanRouteArrayOutput)
}

type GetK8sNodePoolLanRouteOutput struct{ *pulumi.OutputState }

func (GetK8sNodePoolLanRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sNodePoolLanRoute)(nil)).Elem()
}

func (o GetK8sNodePoolLanRouteOutput) ToGetK8sNodePoolLanRouteOutput() GetK8sNodePoolLanRouteOutput {
	return o
}

func (o GetK8sNodePoolLanRouteOutput) ToGetK8sNodePoolLanRouteOutputWithContext(ctx context.Context) GetK8sNodePoolLanRouteOutput {
	return o
}

// IPv4 or IPv6 Gateway IP for the route
func (o GetK8sNodePoolLanRouteOutput) GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sNodePoolLanRoute) string { return v.GatewayIp }).(pulumi.StringOutput)
}

// IPv4 or IPv6 CIDR to be routed via the interface
func (o GetK8sNodePoolLanRouteOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sNodePoolLanRoute) string { return v.Network }).(pulumi.StringOutput)
}

type GetK8sNodePoolLanRouteArrayOutput struct{ *pulumi.OutputState }

func (GetK8sNodePoolLanRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sNodePoolLanRoute)(nil)).Elem()
}

func (o GetK8sNodePoolLanRouteArrayOutput) ToGetK8sNodePoolLanRouteArrayOutput() GetK8sNodePoolLanRouteArrayOutput {
	return o
}

func (o GetK8sNodePoolLanRouteArrayOutput) ToGetK8sNodePoolLanRouteArrayOutputWithContext(ctx context.Context) GetK8sNodePoolLanRouteArrayOutput {
	return o
}

func (o GetK8sNodePoolLanRouteArrayOutput) Index(i pulumi.IntInput) GetK8sNodePoolLanRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sNodePoolLanRoute {
		return vs[0].([]GetK8sNodePoolLanRoute)[vs[1].(int)]
	}).(GetK8sNodePoolLanRouteOutput)
}

type GetK8sNodePoolMaintenanceWindow struct {
	// Day of the week when maintenance is allowed
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// A clock time in the day when maintenance is allowed
	Time string `pulumi:"time"`
}

// GetK8sNodePoolMaintenanceWindowInput is an input type that accepts GetK8sNodePoolMaintenanceWindowArgs and GetK8sNodePoolMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetK8sNodePoolMaintenanceWindowInput` via:
//
//	GetK8sNodePoolMaintenanceWindowArgs{...}
type GetK8sNodePoolMaintenanceWindowInput interface {
	pulumi.Input

	ToGetK8sNodePoolMaintenanceWindowOutput() GetK8sNodePoolMaintenanceWindowOutput
	ToGetK8sNodePoolMaintenanceWindowOutputWithContext(context.Context) GetK8sNodePoolMaintenanceWindowOutput
}

type GetK8sNodePoolMaintenanceWindowArgs struct {
	// Day of the week when maintenance is allowed
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// A clock time in the day when maintenance is allowed
	Time pulumi.StringInput `pulumi:"time"`
}

func (GetK8sNodePoolMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sNodePoolMaintenanceWindow)(nil)).Elem()
}

func (i GetK8sNodePoolMaintenanceWindowArgs) ToGetK8sNodePoolMaintenanceWindowOutput() GetK8sNodePoolMaintenanceWindowOutput {
	return i.ToGetK8sNodePoolMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetK8sNodePoolMaintenanceWindowArgs) ToGetK8sNodePoolMaintenanceWindowOutputWithContext(ctx context.Context) GetK8sNodePoolMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sNodePoolMaintenanceWindowOutput)
}

// GetK8sNodePoolMaintenanceWindowArrayInput is an input type that accepts GetK8sNodePoolMaintenanceWindowArray and GetK8sNodePoolMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetK8sNodePoolMaintenanceWindowArrayInput` via:
//
//	GetK8sNodePoolMaintenanceWindowArray{ GetK8sNodePoolMaintenanceWindowArgs{...} }
type GetK8sNodePoolMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetK8sNodePoolMaintenanceWindowArrayOutput() GetK8sNodePoolMaintenanceWindowArrayOutput
	ToGetK8sNodePoolMaintenanceWindowArrayOutputWithContext(context.Context) GetK8sNodePoolMaintenanceWindowArrayOutput
}

type GetK8sNodePoolMaintenanceWindowArray []GetK8sNodePoolMaintenanceWindowInput

func (GetK8sNodePoolMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sNodePoolMaintenanceWindow)(nil)).Elem()
}

func (i GetK8sNodePoolMaintenanceWindowArray) ToGetK8sNodePoolMaintenanceWindowArrayOutput() GetK8sNodePoolMaintenanceWindowArrayOutput {
	return i.ToGetK8sNodePoolMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetK8sNodePoolMaintenanceWindowArray) ToGetK8sNodePoolMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetK8sNodePoolMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sNodePoolMaintenanceWindowArrayOutput)
}

type GetK8sNodePoolMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetK8sNodePoolMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sNodePoolMaintenanceWindow)(nil)).Elem()
}

func (o GetK8sNodePoolMaintenanceWindowOutput) ToGetK8sNodePoolMaintenanceWindowOutput() GetK8sNodePoolMaintenanceWindowOutput {
	return o
}

func (o GetK8sNodePoolMaintenanceWindowOutput) ToGetK8sNodePoolMaintenanceWindowOutputWithContext(ctx context.Context) GetK8sNodePoolMaintenanceWindowOutput {
	return o
}

// Day of the week when maintenance is allowed
func (o GetK8sNodePoolMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sNodePoolMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// A clock time in the day when maintenance is allowed
func (o GetK8sNodePoolMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sNodePoolMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type GetK8sNodePoolMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetK8sNodePoolMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sNodePoolMaintenanceWindow)(nil)).Elem()
}

func (o GetK8sNodePoolMaintenanceWindowArrayOutput) ToGetK8sNodePoolMaintenanceWindowArrayOutput() GetK8sNodePoolMaintenanceWindowArrayOutput {
	return o
}

func (o GetK8sNodePoolMaintenanceWindowArrayOutput) ToGetK8sNodePoolMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetK8sNodePoolMaintenanceWindowArrayOutput {
	return o
}

func (o GetK8sNodePoolMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetK8sNodePoolMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sNodePoolMaintenanceWindow {
		return vs[0].([]GetK8sNodePoolMaintenanceWindow)[vs[1].(int)]
	}).(GetK8sNodePoolMaintenanceWindowOutput)
}

type GetK8sNodePoolNodesNode struct {
	Id *string `pulumi:"id"`
	// The kubernetes version
	K8sVersion string `pulumi:"k8sVersion"`
	// The kubernetes node name
	Name *string `pulumi:"name"`
	// A valid private IP
	PrivateIp *string `pulumi:"privateIp"`
	// A valid public IP
	PublicIp *string `pulumi:"publicIp"`
}

// GetK8sNodePoolNodesNodeInput is an input type that accepts GetK8sNodePoolNodesNodeArgs and GetK8sNodePoolNodesNodeOutput values.
// You can construct a concrete instance of `GetK8sNodePoolNodesNodeInput` via:
//
//	GetK8sNodePoolNodesNodeArgs{...}
type GetK8sNodePoolNodesNodeInput interface {
	pulumi.Input

	ToGetK8sNodePoolNodesNodeOutput() GetK8sNodePoolNodesNodeOutput
	ToGetK8sNodePoolNodesNodeOutputWithContext(context.Context) GetK8sNodePoolNodesNodeOutput
}

type GetK8sNodePoolNodesNodeArgs struct {
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The kubernetes version
	K8sVersion pulumi.StringInput `pulumi:"k8sVersion"`
	// The kubernetes node name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A valid private IP
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
	// A valid public IP
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
}

func (GetK8sNodePoolNodesNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sNodePoolNodesNode)(nil)).Elem()
}

func (i GetK8sNodePoolNodesNodeArgs) ToGetK8sNodePoolNodesNodeOutput() GetK8sNodePoolNodesNodeOutput {
	return i.ToGetK8sNodePoolNodesNodeOutputWithContext(context.Background())
}

func (i GetK8sNodePoolNodesNodeArgs) ToGetK8sNodePoolNodesNodeOutputWithContext(ctx context.Context) GetK8sNodePoolNodesNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sNodePoolNodesNodeOutput)
}

// GetK8sNodePoolNodesNodeArrayInput is an input type that accepts GetK8sNodePoolNodesNodeArray and GetK8sNodePoolNodesNodeArrayOutput values.
// You can construct a concrete instance of `GetK8sNodePoolNodesNodeArrayInput` via:
//
//	GetK8sNodePoolNodesNodeArray{ GetK8sNodePoolNodesNodeArgs{...} }
type GetK8sNodePoolNodesNodeArrayInput interface {
	pulumi.Input

	ToGetK8sNodePoolNodesNodeArrayOutput() GetK8sNodePoolNodesNodeArrayOutput
	ToGetK8sNodePoolNodesNodeArrayOutputWithContext(context.Context) GetK8sNodePoolNodesNodeArrayOutput
}

type GetK8sNodePoolNodesNodeArray []GetK8sNodePoolNodesNodeInput

func (GetK8sNodePoolNodesNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sNodePoolNodesNode)(nil)).Elem()
}

func (i GetK8sNodePoolNodesNodeArray) ToGetK8sNodePoolNodesNodeArrayOutput() GetK8sNodePoolNodesNodeArrayOutput {
	return i.ToGetK8sNodePoolNodesNodeArrayOutputWithContext(context.Background())
}

func (i GetK8sNodePoolNodesNodeArray) ToGetK8sNodePoolNodesNodeArrayOutputWithContext(ctx context.Context) GetK8sNodePoolNodesNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sNodePoolNodesNodeArrayOutput)
}

type GetK8sNodePoolNodesNodeOutput struct{ *pulumi.OutputState }

func (GetK8sNodePoolNodesNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sNodePoolNodesNode)(nil)).Elem()
}

func (o GetK8sNodePoolNodesNodeOutput) ToGetK8sNodePoolNodesNodeOutput() GetK8sNodePoolNodesNodeOutput {
	return o
}

func (o GetK8sNodePoolNodesNodeOutput) ToGetK8sNodePoolNodesNodeOutputWithContext(ctx context.Context) GetK8sNodePoolNodesNodeOutput {
	return o
}

func (o GetK8sNodePoolNodesNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetK8sNodePoolNodesNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The kubernetes version
func (o GetK8sNodePoolNodesNodeOutput) K8sVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sNodePoolNodesNode) string { return v.K8sVersion }).(pulumi.StringOutput)
}

// The kubernetes node name
func (o GetK8sNodePoolNodesNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetK8sNodePoolNodesNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A valid private IP
func (o GetK8sNodePoolNodesNodeOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetK8sNodePoolNodesNode) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

// A valid public IP
func (o GetK8sNodePoolNodesNodeOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetK8sNodePoolNodesNode) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

type GetK8sNodePoolNodesNodeArrayOutput struct{ *pulumi.OutputState }

func (GetK8sNodePoolNodesNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sNodePoolNodesNode)(nil)).Elem()
}

func (o GetK8sNodePoolNodesNodeArrayOutput) ToGetK8sNodePoolNodesNodeArrayOutput() GetK8sNodePoolNodesNodeArrayOutput {
	return o
}

func (o GetK8sNodePoolNodesNodeArrayOutput) ToGetK8sNodePoolNodesNodeArrayOutputWithContext(ctx context.Context) GetK8sNodePoolNodesNodeArrayOutput {
	return o
}

func (o GetK8sNodePoolNodesNodeArrayOutput) Index(i pulumi.IntInput) GetK8sNodePoolNodesNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sNodePoolNodesNode {
		return vs[0].([]GetK8sNodePoolNodesNode)[vs[1].(int)]
	}).(GetK8sNodePoolNodesNodeOutput)
}

type GetKafkaClusterConnection struct {
	// IP address and port of cluster brokers.
	BrokerAddresses []string `pulumi:"brokerAddresses"`
	// The datacenter that your instance is connected to.
	DatacenterId string `pulumi:"datacenterId"`
	// The numeric LAN ID your instance is connected to.
	LanId string `pulumi:"lanId"`
}

// GetKafkaClusterConnectionInput is an input type that accepts GetKafkaClusterConnectionArgs and GetKafkaClusterConnectionOutput values.
// You can construct a concrete instance of `GetKafkaClusterConnectionInput` via:
//
//	GetKafkaClusterConnectionArgs{...}
type GetKafkaClusterConnectionInput interface {
	pulumi.Input

	ToGetKafkaClusterConnectionOutput() GetKafkaClusterConnectionOutput
	ToGetKafkaClusterConnectionOutputWithContext(context.Context) GetKafkaClusterConnectionOutput
}

type GetKafkaClusterConnectionArgs struct {
	// IP address and port of cluster brokers.
	BrokerAddresses pulumi.StringArrayInput `pulumi:"brokerAddresses"`
	// The datacenter that your instance is connected to.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// The numeric LAN ID your instance is connected to.
	LanId pulumi.StringInput `pulumi:"lanId"`
}

func (GetKafkaClusterConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterConnection)(nil)).Elem()
}

func (i GetKafkaClusterConnectionArgs) ToGetKafkaClusterConnectionOutput() GetKafkaClusterConnectionOutput {
	return i.ToGetKafkaClusterConnectionOutputWithContext(context.Background())
}

func (i GetKafkaClusterConnectionArgs) ToGetKafkaClusterConnectionOutputWithContext(ctx context.Context) GetKafkaClusterConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterConnectionOutput)
}

// GetKafkaClusterConnectionArrayInput is an input type that accepts GetKafkaClusterConnectionArray and GetKafkaClusterConnectionArrayOutput values.
// You can construct a concrete instance of `GetKafkaClusterConnectionArrayInput` via:
//
//	GetKafkaClusterConnectionArray{ GetKafkaClusterConnectionArgs{...} }
type GetKafkaClusterConnectionArrayInput interface {
	pulumi.Input

	ToGetKafkaClusterConnectionArrayOutput() GetKafkaClusterConnectionArrayOutput
	ToGetKafkaClusterConnectionArrayOutputWithContext(context.Context) GetKafkaClusterConnectionArrayOutput
}

type GetKafkaClusterConnectionArray []GetKafkaClusterConnectionInput

func (GetKafkaClusterConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterConnection)(nil)).Elem()
}

func (i GetKafkaClusterConnectionArray) ToGetKafkaClusterConnectionArrayOutput() GetKafkaClusterConnectionArrayOutput {
	return i.ToGetKafkaClusterConnectionArrayOutputWithContext(context.Background())
}

func (i GetKafkaClusterConnectionArray) ToGetKafkaClusterConnectionArrayOutputWithContext(ctx context.Context) GetKafkaClusterConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterConnectionArrayOutput)
}

type GetKafkaClusterConnectionOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterConnection)(nil)).Elem()
}

func (o GetKafkaClusterConnectionOutput) ToGetKafkaClusterConnectionOutput() GetKafkaClusterConnectionOutput {
	return o
}

func (o GetKafkaClusterConnectionOutput) ToGetKafkaClusterConnectionOutputWithContext(ctx context.Context) GetKafkaClusterConnectionOutput {
	return o
}

// IP address and port of cluster brokers.
func (o GetKafkaClusterConnectionOutput) BrokerAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKafkaClusterConnection) []string { return v.BrokerAddresses }).(pulumi.StringArrayOutput)
}

// The datacenter that your instance is connected to.
func (o GetKafkaClusterConnectionOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClusterConnection) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// The numeric LAN ID your instance is connected to.
func (o GetKafkaClusterConnectionOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClusterConnection) string { return v.LanId }).(pulumi.StringOutput)
}

type GetKafkaClusterConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterConnection)(nil)).Elem()
}

func (o GetKafkaClusterConnectionArrayOutput) ToGetKafkaClusterConnectionArrayOutput() GetKafkaClusterConnectionArrayOutput {
	return o
}

func (o GetKafkaClusterConnectionArrayOutput) ToGetKafkaClusterConnectionArrayOutputWithContext(ctx context.Context) GetKafkaClusterConnectionArrayOutput {
	return o
}

func (o GetKafkaClusterConnectionArrayOutput) Index(i pulumi.IntInput) GetKafkaClusterConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClusterConnection {
		return vs[0].([]GetKafkaClusterConnection)[vs[1].(int)]
	}).(GetKafkaClusterConnectionOutput)
}

type GetLanIpFailover struct {
	Ip      string `pulumi:"ip"`
	NicUuid string `pulumi:"nicUuid"`
}

// GetLanIpFailoverInput is an input type that accepts GetLanIpFailoverArgs and GetLanIpFailoverOutput values.
// You can construct a concrete instance of `GetLanIpFailoverInput` via:
//
//	GetLanIpFailoverArgs{...}
type GetLanIpFailoverInput interface {
	pulumi.Input

	ToGetLanIpFailoverOutput() GetLanIpFailoverOutput
	ToGetLanIpFailoverOutputWithContext(context.Context) GetLanIpFailoverOutput
}

type GetLanIpFailoverArgs struct {
	Ip      pulumi.StringInput `pulumi:"ip"`
	NicUuid pulumi.StringInput `pulumi:"nicUuid"`
}

func (GetLanIpFailoverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLanIpFailover)(nil)).Elem()
}

func (i GetLanIpFailoverArgs) ToGetLanIpFailoverOutput() GetLanIpFailoverOutput {
	return i.ToGetLanIpFailoverOutputWithContext(context.Background())
}

func (i GetLanIpFailoverArgs) ToGetLanIpFailoverOutputWithContext(ctx context.Context) GetLanIpFailoverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLanIpFailoverOutput)
}

// GetLanIpFailoverArrayInput is an input type that accepts GetLanIpFailoverArray and GetLanIpFailoverArrayOutput values.
// You can construct a concrete instance of `GetLanIpFailoverArrayInput` via:
//
//	GetLanIpFailoverArray{ GetLanIpFailoverArgs{...} }
type GetLanIpFailoverArrayInput interface {
	pulumi.Input

	ToGetLanIpFailoverArrayOutput() GetLanIpFailoverArrayOutput
	ToGetLanIpFailoverArrayOutputWithContext(context.Context) GetLanIpFailoverArrayOutput
}

type GetLanIpFailoverArray []GetLanIpFailoverInput

func (GetLanIpFailoverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLanIpFailover)(nil)).Elem()
}

func (i GetLanIpFailoverArray) ToGetLanIpFailoverArrayOutput() GetLanIpFailoverArrayOutput {
	return i.ToGetLanIpFailoverArrayOutputWithContext(context.Background())
}

func (i GetLanIpFailoverArray) ToGetLanIpFailoverArrayOutputWithContext(ctx context.Context) GetLanIpFailoverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLanIpFailoverArrayOutput)
}

type GetLanIpFailoverOutput struct{ *pulumi.OutputState }

func (GetLanIpFailoverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLanIpFailover)(nil)).Elem()
}

func (o GetLanIpFailoverOutput) ToGetLanIpFailoverOutput() GetLanIpFailoverOutput {
	return o
}

func (o GetLanIpFailoverOutput) ToGetLanIpFailoverOutputWithContext(ctx context.Context) GetLanIpFailoverOutput {
	return o
}

func (o GetLanIpFailoverOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetLanIpFailover) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetLanIpFailoverOutput) NicUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetLanIpFailover) string { return v.NicUuid }).(pulumi.StringOutput)
}

type GetLanIpFailoverArrayOutput struct{ *pulumi.OutputState }

func (GetLanIpFailoverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLanIpFailover)(nil)).Elem()
}

func (o GetLanIpFailoverArrayOutput) ToGetLanIpFailoverArrayOutput() GetLanIpFailoverArrayOutput {
	return o
}

func (o GetLanIpFailoverArrayOutput) ToGetLanIpFailoverArrayOutputWithContext(ctx context.Context) GetLanIpFailoverArrayOutput {
	return o
}

func (o GetLanIpFailoverArrayOutput) Index(i pulumi.IntInput) GetLanIpFailoverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLanIpFailover {
		return vs[0].([]GetLanIpFailover)[vs[1].(int)]
	}).(GetLanIpFailoverOutput)
}

type GetLocationCpuArchitecture struct {
	// A valid CPU family name.
	CpuFamily string `pulumi:"cpuFamily"`
	// The maximum number of cores available.
	MaxCores int `pulumi:"maxCores"`
	// The maximum number of RAM in MB.
	MaxRam int `pulumi:"maxRam"`
	// A valid CPU vendor name.
	Vendor string `pulumi:"vendor"`
}

// GetLocationCpuArchitectureInput is an input type that accepts GetLocationCpuArchitectureArgs and GetLocationCpuArchitectureOutput values.
// You can construct a concrete instance of `GetLocationCpuArchitectureInput` via:
//
//	GetLocationCpuArchitectureArgs{...}
type GetLocationCpuArchitectureInput interface {
	pulumi.Input

	ToGetLocationCpuArchitectureOutput() GetLocationCpuArchitectureOutput
	ToGetLocationCpuArchitectureOutputWithContext(context.Context) GetLocationCpuArchitectureOutput
}

type GetLocationCpuArchitectureArgs struct {
	// A valid CPU family name.
	CpuFamily pulumi.StringInput `pulumi:"cpuFamily"`
	// The maximum number of cores available.
	MaxCores pulumi.IntInput `pulumi:"maxCores"`
	// The maximum number of RAM in MB.
	MaxRam pulumi.IntInput `pulumi:"maxRam"`
	// A valid CPU vendor name.
	Vendor pulumi.StringInput `pulumi:"vendor"`
}

func (GetLocationCpuArchitectureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationCpuArchitecture)(nil)).Elem()
}

func (i GetLocationCpuArchitectureArgs) ToGetLocationCpuArchitectureOutput() GetLocationCpuArchitectureOutput {
	return i.ToGetLocationCpuArchitectureOutputWithContext(context.Background())
}

func (i GetLocationCpuArchitectureArgs) ToGetLocationCpuArchitectureOutputWithContext(ctx context.Context) GetLocationCpuArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationCpuArchitectureOutput)
}

// GetLocationCpuArchitectureArrayInput is an input type that accepts GetLocationCpuArchitectureArray and GetLocationCpuArchitectureArrayOutput values.
// You can construct a concrete instance of `GetLocationCpuArchitectureArrayInput` via:
//
//	GetLocationCpuArchitectureArray{ GetLocationCpuArchitectureArgs{...} }
type GetLocationCpuArchitectureArrayInput interface {
	pulumi.Input

	ToGetLocationCpuArchitectureArrayOutput() GetLocationCpuArchitectureArrayOutput
	ToGetLocationCpuArchitectureArrayOutputWithContext(context.Context) GetLocationCpuArchitectureArrayOutput
}

type GetLocationCpuArchitectureArray []GetLocationCpuArchitectureInput

func (GetLocationCpuArchitectureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationCpuArchitecture)(nil)).Elem()
}

func (i GetLocationCpuArchitectureArray) ToGetLocationCpuArchitectureArrayOutput() GetLocationCpuArchitectureArrayOutput {
	return i.ToGetLocationCpuArchitectureArrayOutputWithContext(context.Background())
}

func (i GetLocationCpuArchitectureArray) ToGetLocationCpuArchitectureArrayOutputWithContext(ctx context.Context) GetLocationCpuArchitectureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationCpuArchitectureArrayOutput)
}

type GetLocationCpuArchitectureOutput struct{ *pulumi.OutputState }

func (GetLocationCpuArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationCpuArchitecture)(nil)).Elem()
}

func (o GetLocationCpuArchitectureOutput) ToGetLocationCpuArchitectureOutput() GetLocationCpuArchitectureOutput {
	return o
}

func (o GetLocationCpuArchitectureOutput) ToGetLocationCpuArchitectureOutputWithContext(ctx context.Context) GetLocationCpuArchitectureOutput {
	return o
}

// A valid CPU family name.
func (o GetLocationCpuArchitectureOutput) CpuFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationCpuArchitecture) string { return v.CpuFamily }).(pulumi.StringOutput)
}

// The maximum number of cores available.
func (o GetLocationCpuArchitectureOutput) MaxCores() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocationCpuArchitecture) int { return v.MaxCores }).(pulumi.IntOutput)
}

// The maximum number of RAM in MB.
func (o GetLocationCpuArchitectureOutput) MaxRam() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocationCpuArchitecture) int { return v.MaxRam }).(pulumi.IntOutput)
}

// A valid CPU vendor name.
func (o GetLocationCpuArchitectureOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationCpuArchitecture) string { return v.Vendor }).(pulumi.StringOutput)
}

type GetLocationCpuArchitectureArrayOutput struct{ *pulumi.OutputState }

func (GetLocationCpuArchitectureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationCpuArchitecture)(nil)).Elem()
}

func (o GetLocationCpuArchitectureArrayOutput) ToGetLocationCpuArchitectureArrayOutput() GetLocationCpuArchitectureArrayOutput {
	return o
}

func (o GetLocationCpuArchitectureArrayOutput) ToGetLocationCpuArchitectureArrayOutputWithContext(ctx context.Context) GetLocationCpuArchitectureArrayOutput {
	return o
}

func (o GetLocationCpuArchitectureArrayOutput) Index(i pulumi.IntInput) GetLocationCpuArchitectureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationCpuArchitecture {
		return vs[0].([]GetLocationCpuArchitecture)[vs[1].(int)]
	}).(GetLocationCpuArchitectureOutput)
}

type GetLoggingPipelineLog struct {
	// [list] The configuration of the logs datastore, a list that contains elements with the following structure:
	Destinations []GetLoggingPipelineLogDestination `pulumi:"destinations"`
	// [string] "Protocol to use as intake. Possible values are: http, tcp."
	Protocol string `pulumi:"protocol"`
	// [bool]
	Public bool `pulumi:"public"`
	// [string] The source parser to be used.
	Source string `pulumi:"source"`
	// [string] The tag is used to distinguish different pipelines. Must be unique amongst the pipeline's array items.
	Tag string `pulumi:"tag"`
}

// GetLoggingPipelineLogInput is an input type that accepts GetLoggingPipelineLogArgs and GetLoggingPipelineLogOutput values.
// You can construct a concrete instance of `GetLoggingPipelineLogInput` via:
//
//	GetLoggingPipelineLogArgs{...}
type GetLoggingPipelineLogInput interface {
	pulumi.Input

	ToGetLoggingPipelineLogOutput() GetLoggingPipelineLogOutput
	ToGetLoggingPipelineLogOutputWithContext(context.Context) GetLoggingPipelineLogOutput
}

type GetLoggingPipelineLogArgs struct {
	// [list] The configuration of the logs datastore, a list that contains elements with the following structure:
	Destinations GetLoggingPipelineLogDestinationArrayInput `pulumi:"destinations"`
	// [string] "Protocol to use as intake. Possible values are: http, tcp."
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// [bool]
	Public pulumi.BoolInput `pulumi:"public"`
	// [string] The source parser to be used.
	Source pulumi.StringInput `pulumi:"source"`
	// [string] The tag is used to distinguish different pipelines. Must be unique amongst the pipeline's array items.
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (GetLoggingPipelineLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoggingPipelineLog)(nil)).Elem()
}

func (i GetLoggingPipelineLogArgs) ToGetLoggingPipelineLogOutput() GetLoggingPipelineLogOutput {
	return i.ToGetLoggingPipelineLogOutputWithContext(context.Background())
}

func (i GetLoggingPipelineLogArgs) ToGetLoggingPipelineLogOutputWithContext(ctx context.Context) GetLoggingPipelineLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoggingPipelineLogOutput)
}

// GetLoggingPipelineLogArrayInput is an input type that accepts GetLoggingPipelineLogArray and GetLoggingPipelineLogArrayOutput values.
// You can construct a concrete instance of `GetLoggingPipelineLogArrayInput` via:
//
//	GetLoggingPipelineLogArray{ GetLoggingPipelineLogArgs{...} }
type GetLoggingPipelineLogArrayInput interface {
	pulumi.Input

	ToGetLoggingPipelineLogArrayOutput() GetLoggingPipelineLogArrayOutput
	ToGetLoggingPipelineLogArrayOutputWithContext(context.Context) GetLoggingPipelineLogArrayOutput
}

type GetLoggingPipelineLogArray []GetLoggingPipelineLogInput

func (GetLoggingPipelineLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoggingPipelineLog)(nil)).Elem()
}

func (i GetLoggingPipelineLogArray) ToGetLoggingPipelineLogArrayOutput() GetLoggingPipelineLogArrayOutput {
	return i.ToGetLoggingPipelineLogArrayOutputWithContext(context.Background())
}

func (i GetLoggingPipelineLogArray) ToGetLoggingPipelineLogArrayOutputWithContext(ctx context.Context) GetLoggingPipelineLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoggingPipelineLogArrayOutput)
}

type GetLoggingPipelineLogOutput struct{ *pulumi.OutputState }

func (GetLoggingPipelineLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoggingPipelineLog)(nil)).Elem()
}

func (o GetLoggingPipelineLogOutput) ToGetLoggingPipelineLogOutput() GetLoggingPipelineLogOutput {
	return o
}

func (o GetLoggingPipelineLogOutput) ToGetLoggingPipelineLogOutputWithContext(ctx context.Context) GetLoggingPipelineLogOutput {
	return o
}

// [list] The configuration of the logs datastore, a list that contains elements with the following structure:
func (o GetLoggingPipelineLogOutput) Destinations() GetLoggingPipelineLogDestinationArrayOutput {
	return o.ApplyT(func(v GetLoggingPipelineLog) []GetLoggingPipelineLogDestination { return v.Destinations }).(GetLoggingPipelineLogDestinationArrayOutput)
}

// [string] "Protocol to use as intake. Possible values are: http, tcp."
func (o GetLoggingPipelineLogOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoggingPipelineLog) string { return v.Protocol }).(pulumi.StringOutput)
}

// [bool]
func (o GetLoggingPipelineLogOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoggingPipelineLog) bool { return v.Public }).(pulumi.BoolOutput)
}

// [string] The source parser to be used.
func (o GetLoggingPipelineLogOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoggingPipelineLog) string { return v.Source }).(pulumi.StringOutput)
}

// [string] The tag is used to distinguish different pipelines. Must be unique amongst the pipeline's array items.
func (o GetLoggingPipelineLogOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoggingPipelineLog) string { return v.Tag }).(pulumi.StringOutput)
}

type GetLoggingPipelineLogArrayOutput struct{ *pulumi.OutputState }

func (GetLoggingPipelineLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoggingPipelineLog)(nil)).Elem()
}

func (o GetLoggingPipelineLogArrayOutput) ToGetLoggingPipelineLogArrayOutput() GetLoggingPipelineLogArrayOutput {
	return o
}

func (o GetLoggingPipelineLogArrayOutput) ToGetLoggingPipelineLogArrayOutputWithContext(ctx context.Context) GetLoggingPipelineLogArrayOutput {
	return o
}

func (o GetLoggingPipelineLogArrayOutput) Index(i pulumi.IntInput) GetLoggingPipelineLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoggingPipelineLog {
		return vs[0].([]GetLoggingPipelineLog)[vs[1].(int)]
	}).(GetLoggingPipelineLogOutput)
}

type GetLoggingPipelineLogDestination struct {
	// [int] Defines the number of days a log record should be kept in loki. Works with loki destination type only.
	RetentionInDays int `pulumi:"retentionInDays"`
	// [string] The internal output stream to send logs to.
	Type string `pulumi:"type"`
}

// GetLoggingPipelineLogDestinationInput is an input type that accepts GetLoggingPipelineLogDestinationArgs and GetLoggingPipelineLogDestinationOutput values.
// You can construct a concrete instance of `GetLoggingPipelineLogDestinationInput` via:
//
//	GetLoggingPipelineLogDestinationArgs{...}
type GetLoggingPipelineLogDestinationInput interface {
	pulumi.Input

	ToGetLoggingPipelineLogDestinationOutput() GetLoggingPipelineLogDestinationOutput
	ToGetLoggingPipelineLogDestinationOutputWithContext(context.Context) GetLoggingPipelineLogDestinationOutput
}

type GetLoggingPipelineLogDestinationArgs struct {
	// [int] Defines the number of days a log record should be kept in loki. Works with loki destination type only.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// [string] The internal output stream to send logs to.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLoggingPipelineLogDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoggingPipelineLogDestination)(nil)).Elem()
}

func (i GetLoggingPipelineLogDestinationArgs) ToGetLoggingPipelineLogDestinationOutput() GetLoggingPipelineLogDestinationOutput {
	return i.ToGetLoggingPipelineLogDestinationOutputWithContext(context.Background())
}

func (i GetLoggingPipelineLogDestinationArgs) ToGetLoggingPipelineLogDestinationOutputWithContext(ctx context.Context) GetLoggingPipelineLogDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoggingPipelineLogDestinationOutput)
}

// GetLoggingPipelineLogDestinationArrayInput is an input type that accepts GetLoggingPipelineLogDestinationArray and GetLoggingPipelineLogDestinationArrayOutput values.
// You can construct a concrete instance of `GetLoggingPipelineLogDestinationArrayInput` via:
//
//	GetLoggingPipelineLogDestinationArray{ GetLoggingPipelineLogDestinationArgs{...} }
type GetLoggingPipelineLogDestinationArrayInput interface {
	pulumi.Input

	ToGetLoggingPipelineLogDestinationArrayOutput() GetLoggingPipelineLogDestinationArrayOutput
	ToGetLoggingPipelineLogDestinationArrayOutputWithContext(context.Context) GetLoggingPipelineLogDestinationArrayOutput
}

type GetLoggingPipelineLogDestinationArray []GetLoggingPipelineLogDestinationInput

func (GetLoggingPipelineLogDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoggingPipelineLogDestination)(nil)).Elem()
}

func (i GetLoggingPipelineLogDestinationArray) ToGetLoggingPipelineLogDestinationArrayOutput() GetLoggingPipelineLogDestinationArrayOutput {
	return i.ToGetLoggingPipelineLogDestinationArrayOutputWithContext(context.Background())
}

func (i GetLoggingPipelineLogDestinationArray) ToGetLoggingPipelineLogDestinationArrayOutputWithContext(ctx context.Context) GetLoggingPipelineLogDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoggingPipelineLogDestinationArrayOutput)
}

type GetLoggingPipelineLogDestinationOutput struct{ *pulumi.OutputState }

func (GetLoggingPipelineLogDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoggingPipelineLogDestination)(nil)).Elem()
}

func (o GetLoggingPipelineLogDestinationOutput) ToGetLoggingPipelineLogDestinationOutput() GetLoggingPipelineLogDestinationOutput {
	return o
}

func (o GetLoggingPipelineLogDestinationOutput) ToGetLoggingPipelineLogDestinationOutputWithContext(ctx context.Context) GetLoggingPipelineLogDestinationOutput {
	return o
}

// [int] Defines the number of days a log record should be kept in loki. Works with loki destination type only.
func (o GetLoggingPipelineLogDestinationOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoggingPipelineLogDestination) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// [string] The internal output stream to send logs to.
func (o GetLoggingPipelineLogDestinationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoggingPipelineLogDestination) string { return v.Type }).(pulumi.StringOutput)
}

type GetLoggingPipelineLogDestinationArrayOutput struct{ *pulumi.OutputState }

func (GetLoggingPipelineLogDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoggingPipelineLogDestination)(nil)).Elem()
}

func (o GetLoggingPipelineLogDestinationArrayOutput) ToGetLoggingPipelineLogDestinationArrayOutput() GetLoggingPipelineLogDestinationArrayOutput {
	return o
}

func (o GetLoggingPipelineLogDestinationArrayOutput) ToGetLoggingPipelineLogDestinationArrayOutputWithContext(ctx context.Context) GetLoggingPipelineLogDestinationArrayOutput {
	return o
}

func (o GetLoggingPipelineLogDestinationArrayOutput) Index(i pulumi.IntInput) GetLoggingPipelineLogDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoggingPipelineLogDestination {
		return vs[0].([]GetLoggingPipelineLogDestination)[vs[1].(int)]
	}).(GetLoggingPipelineLogDestinationOutput)
}

type GetMariadbBackupsBackup struct {
	// The list of backups for the specified cluster
	BaseBackups []GetMariadbBackupsBackupBaseBackup `pulumi:"baseBackups"`
	// The unique ID of the cluster that was backed up
	ClusterId string `pulumi:"clusterId"`
	// The oldest available timestamp to which you can restore
	EarliestRecoveryTargetTime string `pulumi:"earliestRecoveryTargetTime"`
	// Size of all base backups in Mebibytes (MiB). This is at least the sum of all base backup sizes
	Size int `pulumi:"size"`
}

// GetMariadbBackupsBackupInput is an input type that accepts GetMariadbBackupsBackupArgs and GetMariadbBackupsBackupOutput values.
// You can construct a concrete instance of `GetMariadbBackupsBackupInput` via:
//
//	GetMariadbBackupsBackupArgs{...}
type GetMariadbBackupsBackupInput interface {
	pulumi.Input

	ToGetMariadbBackupsBackupOutput() GetMariadbBackupsBackupOutput
	ToGetMariadbBackupsBackupOutputWithContext(context.Context) GetMariadbBackupsBackupOutput
}

type GetMariadbBackupsBackupArgs struct {
	// The list of backups for the specified cluster
	BaseBackups GetMariadbBackupsBackupBaseBackupArrayInput `pulumi:"baseBackups"`
	// The unique ID of the cluster that was backed up
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The oldest available timestamp to which you can restore
	EarliestRecoveryTargetTime pulumi.StringInput `pulumi:"earliestRecoveryTargetTime"`
	// Size of all base backups in Mebibytes (MiB). This is at least the sum of all base backup sizes
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetMariadbBackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariadbBackupsBackup)(nil)).Elem()
}

func (i GetMariadbBackupsBackupArgs) ToGetMariadbBackupsBackupOutput() GetMariadbBackupsBackupOutput {
	return i.ToGetMariadbBackupsBackupOutputWithContext(context.Background())
}

func (i GetMariadbBackupsBackupArgs) ToGetMariadbBackupsBackupOutputWithContext(ctx context.Context) GetMariadbBackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMariadbBackupsBackupOutput)
}

// GetMariadbBackupsBackupArrayInput is an input type that accepts GetMariadbBackupsBackupArray and GetMariadbBackupsBackupArrayOutput values.
// You can construct a concrete instance of `GetMariadbBackupsBackupArrayInput` via:
//
//	GetMariadbBackupsBackupArray{ GetMariadbBackupsBackupArgs{...} }
type GetMariadbBackupsBackupArrayInput interface {
	pulumi.Input

	ToGetMariadbBackupsBackupArrayOutput() GetMariadbBackupsBackupArrayOutput
	ToGetMariadbBackupsBackupArrayOutputWithContext(context.Context) GetMariadbBackupsBackupArrayOutput
}

type GetMariadbBackupsBackupArray []GetMariadbBackupsBackupInput

func (GetMariadbBackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMariadbBackupsBackup)(nil)).Elem()
}

func (i GetMariadbBackupsBackupArray) ToGetMariadbBackupsBackupArrayOutput() GetMariadbBackupsBackupArrayOutput {
	return i.ToGetMariadbBackupsBackupArrayOutputWithContext(context.Background())
}

func (i GetMariadbBackupsBackupArray) ToGetMariadbBackupsBackupArrayOutputWithContext(ctx context.Context) GetMariadbBackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMariadbBackupsBackupArrayOutput)
}

type GetMariadbBackupsBackupOutput struct{ *pulumi.OutputState }

func (GetMariadbBackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariadbBackupsBackup)(nil)).Elem()
}

func (o GetMariadbBackupsBackupOutput) ToGetMariadbBackupsBackupOutput() GetMariadbBackupsBackupOutput {
	return o
}

func (o GetMariadbBackupsBackupOutput) ToGetMariadbBackupsBackupOutputWithContext(ctx context.Context) GetMariadbBackupsBackupOutput {
	return o
}

// The list of backups for the specified cluster
func (o GetMariadbBackupsBackupOutput) BaseBackups() GetMariadbBackupsBackupBaseBackupArrayOutput {
	return o.ApplyT(func(v GetMariadbBackupsBackup) []GetMariadbBackupsBackupBaseBackup { return v.BaseBackups }).(GetMariadbBackupsBackupBaseBackupArrayOutput)
}

// The unique ID of the cluster that was backed up
func (o GetMariadbBackupsBackupOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariadbBackupsBackup) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The oldest available timestamp to which you can restore
func (o GetMariadbBackupsBackupOutput) EarliestRecoveryTargetTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariadbBackupsBackup) string { return v.EarliestRecoveryTargetTime }).(pulumi.StringOutput)
}

// Size of all base backups in Mebibytes (MiB). This is at least the sum of all base backup sizes
func (o GetMariadbBackupsBackupOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetMariadbBackupsBackup) int { return v.Size }).(pulumi.IntOutput)
}

type GetMariadbBackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (GetMariadbBackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMariadbBackupsBackup)(nil)).Elem()
}

func (o GetMariadbBackupsBackupArrayOutput) ToGetMariadbBackupsBackupArrayOutput() GetMariadbBackupsBackupArrayOutput {
	return o
}

func (o GetMariadbBackupsBackupArrayOutput) ToGetMariadbBackupsBackupArrayOutputWithContext(ctx context.Context) GetMariadbBackupsBackupArrayOutput {
	return o
}

func (o GetMariadbBackupsBackupArrayOutput) Index(i pulumi.IntInput) GetMariadbBackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMariadbBackupsBackup {
		return vs[0].([]GetMariadbBackupsBackup)[vs[1].(int)]
	}).(GetMariadbBackupsBackupOutput)
}

type GetMariadbBackupsBackupBaseBackup struct {
	// The ISO 8601 creation timestamp
	Created string `pulumi:"created"`
	// The size of the backup in Mebibytes (MiB). This is the size of the binary backup file that was stored
	Size int `pulumi:"size"`
}

// GetMariadbBackupsBackupBaseBackupInput is an input type that accepts GetMariadbBackupsBackupBaseBackupArgs and GetMariadbBackupsBackupBaseBackupOutput values.
// You can construct a concrete instance of `GetMariadbBackupsBackupBaseBackupInput` via:
//
//	GetMariadbBackupsBackupBaseBackupArgs{...}
type GetMariadbBackupsBackupBaseBackupInput interface {
	pulumi.Input

	ToGetMariadbBackupsBackupBaseBackupOutput() GetMariadbBackupsBackupBaseBackupOutput
	ToGetMariadbBackupsBackupBaseBackupOutputWithContext(context.Context) GetMariadbBackupsBackupBaseBackupOutput
}

type GetMariadbBackupsBackupBaseBackupArgs struct {
	// The ISO 8601 creation timestamp
	Created pulumi.StringInput `pulumi:"created"`
	// The size of the backup in Mebibytes (MiB). This is the size of the binary backup file that was stored
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetMariadbBackupsBackupBaseBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariadbBackupsBackupBaseBackup)(nil)).Elem()
}

func (i GetMariadbBackupsBackupBaseBackupArgs) ToGetMariadbBackupsBackupBaseBackupOutput() GetMariadbBackupsBackupBaseBackupOutput {
	return i.ToGetMariadbBackupsBackupBaseBackupOutputWithContext(context.Background())
}

func (i GetMariadbBackupsBackupBaseBackupArgs) ToGetMariadbBackupsBackupBaseBackupOutputWithContext(ctx context.Context) GetMariadbBackupsBackupBaseBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMariadbBackupsBackupBaseBackupOutput)
}

// GetMariadbBackupsBackupBaseBackupArrayInput is an input type that accepts GetMariadbBackupsBackupBaseBackupArray and GetMariadbBackupsBackupBaseBackupArrayOutput values.
// You can construct a concrete instance of `GetMariadbBackupsBackupBaseBackupArrayInput` via:
//
//	GetMariadbBackupsBackupBaseBackupArray{ GetMariadbBackupsBackupBaseBackupArgs{...} }
type GetMariadbBackupsBackupBaseBackupArrayInput interface {
	pulumi.Input

	ToGetMariadbBackupsBackupBaseBackupArrayOutput() GetMariadbBackupsBackupBaseBackupArrayOutput
	ToGetMariadbBackupsBackupBaseBackupArrayOutputWithContext(context.Context) GetMariadbBackupsBackupBaseBackupArrayOutput
}

type GetMariadbBackupsBackupBaseBackupArray []GetMariadbBackupsBackupBaseBackupInput

func (GetMariadbBackupsBackupBaseBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMariadbBackupsBackupBaseBackup)(nil)).Elem()
}

func (i GetMariadbBackupsBackupBaseBackupArray) ToGetMariadbBackupsBackupBaseBackupArrayOutput() GetMariadbBackupsBackupBaseBackupArrayOutput {
	return i.ToGetMariadbBackupsBackupBaseBackupArrayOutputWithContext(context.Background())
}

func (i GetMariadbBackupsBackupBaseBackupArray) ToGetMariadbBackupsBackupBaseBackupArrayOutputWithContext(ctx context.Context) GetMariadbBackupsBackupBaseBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMariadbBackupsBackupBaseBackupArrayOutput)
}

type GetMariadbBackupsBackupBaseBackupOutput struct{ *pulumi.OutputState }

func (GetMariadbBackupsBackupBaseBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariadbBackupsBackupBaseBackup)(nil)).Elem()
}

func (o GetMariadbBackupsBackupBaseBackupOutput) ToGetMariadbBackupsBackupBaseBackupOutput() GetMariadbBackupsBackupBaseBackupOutput {
	return o
}

func (o GetMariadbBackupsBackupBaseBackupOutput) ToGetMariadbBackupsBackupBaseBackupOutputWithContext(ctx context.Context) GetMariadbBackupsBackupBaseBackupOutput {
	return o
}

// The ISO 8601 creation timestamp
func (o GetMariadbBackupsBackupBaseBackupOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariadbBackupsBackupBaseBackup) string { return v.Created }).(pulumi.StringOutput)
}

// The size of the backup in Mebibytes (MiB). This is the size of the binary backup file that was stored
func (o GetMariadbBackupsBackupBaseBackupOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetMariadbBackupsBackupBaseBackup) int { return v.Size }).(pulumi.IntOutput)
}

type GetMariadbBackupsBackupBaseBackupArrayOutput struct{ *pulumi.OutputState }

func (GetMariadbBackupsBackupBaseBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMariadbBackupsBackupBaseBackup)(nil)).Elem()
}

func (o GetMariadbBackupsBackupBaseBackupArrayOutput) ToGetMariadbBackupsBackupBaseBackupArrayOutput() GetMariadbBackupsBackupBaseBackupArrayOutput {
	return o
}

func (o GetMariadbBackupsBackupBaseBackupArrayOutput) ToGetMariadbBackupsBackupBaseBackupArrayOutputWithContext(ctx context.Context) GetMariadbBackupsBackupBaseBackupArrayOutput {
	return o
}

func (o GetMariadbBackupsBackupBaseBackupArrayOutput) Index(i pulumi.IntInput) GetMariadbBackupsBackupBaseBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMariadbBackupsBackupBaseBackup {
		return vs[0].([]GetMariadbBackupsBackupBaseBackup)[vs[1].(int)]
	}).(GetMariadbBackupsBackupBaseBackupOutput)
}

type GetMariadbClusterConnection struct {
	// The IP and subnet for your cluster.
	Cidr string `pulumi:"cidr"`
	// The datacenter to connect your cluster to.
	DatacenterId string `pulumi:"datacenterId"`
	// The numeric LAN ID to connect your cluster to.
	LanId string `pulumi:"lanId"`
}

// GetMariadbClusterConnectionInput is an input type that accepts GetMariadbClusterConnectionArgs and GetMariadbClusterConnectionOutput values.
// You can construct a concrete instance of `GetMariadbClusterConnectionInput` via:
//
//	GetMariadbClusterConnectionArgs{...}
type GetMariadbClusterConnectionInput interface {
	pulumi.Input

	ToGetMariadbClusterConnectionOutput() GetMariadbClusterConnectionOutput
	ToGetMariadbClusterConnectionOutputWithContext(context.Context) GetMariadbClusterConnectionOutput
}

type GetMariadbClusterConnectionArgs struct {
	// The IP and subnet for your cluster.
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// The datacenter to connect your cluster to.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// The numeric LAN ID to connect your cluster to.
	LanId pulumi.StringInput `pulumi:"lanId"`
}

func (GetMariadbClusterConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariadbClusterConnection)(nil)).Elem()
}

func (i GetMariadbClusterConnectionArgs) ToGetMariadbClusterConnectionOutput() GetMariadbClusterConnectionOutput {
	return i.ToGetMariadbClusterConnectionOutputWithContext(context.Background())
}

func (i GetMariadbClusterConnectionArgs) ToGetMariadbClusterConnectionOutputWithContext(ctx context.Context) GetMariadbClusterConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMariadbClusterConnectionOutput)
}

// GetMariadbClusterConnectionArrayInput is an input type that accepts GetMariadbClusterConnectionArray and GetMariadbClusterConnectionArrayOutput values.
// You can construct a concrete instance of `GetMariadbClusterConnectionArrayInput` via:
//
//	GetMariadbClusterConnectionArray{ GetMariadbClusterConnectionArgs{...} }
type GetMariadbClusterConnectionArrayInput interface {
	pulumi.Input

	ToGetMariadbClusterConnectionArrayOutput() GetMariadbClusterConnectionArrayOutput
	ToGetMariadbClusterConnectionArrayOutputWithContext(context.Context) GetMariadbClusterConnectionArrayOutput
}

type GetMariadbClusterConnectionArray []GetMariadbClusterConnectionInput

func (GetMariadbClusterConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMariadbClusterConnection)(nil)).Elem()
}

func (i GetMariadbClusterConnectionArray) ToGetMariadbClusterConnectionArrayOutput() GetMariadbClusterConnectionArrayOutput {
	return i.ToGetMariadbClusterConnectionArrayOutputWithContext(context.Background())
}

func (i GetMariadbClusterConnectionArray) ToGetMariadbClusterConnectionArrayOutputWithContext(ctx context.Context) GetMariadbClusterConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMariadbClusterConnectionArrayOutput)
}

type GetMariadbClusterConnectionOutput struct{ *pulumi.OutputState }

func (GetMariadbClusterConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariadbClusterConnection)(nil)).Elem()
}

func (o GetMariadbClusterConnectionOutput) ToGetMariadbClusterConnectionOutput() GetMariadbClusterConnectionOutput {
	return o
}

func (o GetMariadbClusterConnectionOutput) ToGetMariadbClusterConnectionOutputWithContext(ctx context.Context) GetMariadbClusterConnectionOutput {
	return o
}

// The IP and subnet for your cluster.
func (o GetMariadbClusterConnectionOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariadbClusterConnection) string { return v.Cidr }).(pulumi.StringOutput)
}

// The datacenter to connect your cluster to.
func (o GetMariadbClusterConnectionOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariadbClusterConnection) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// The numeric LAN ID to connect your cluster to.
func (o GetMariadbClusterConnectionOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariadbClusterConnection) string { return v.LanId }).(pulumi.StringOutput)
}

type GetMariadbClusterConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetMariadbClusterConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMariadbClusterConnection)(nil)).Elem()
}

func (o GetMariadbClusterConnectionArrayOutput) ToGetMariadbClusterConnectionArrayOutput() GetMariadbClusterConnectionArrayOutput {
	return o
}

func (o GetMariadbClusterConnectionArrayOutput) ToGetMariadbClusterConnectionArrayOutputWithContext(ctx context.Context) GetMariadbClusterConnectionArrayOutput {
	return o
}

func (o GetMariadbClusterConnectionArrayOutput) Index(i pulumi.IntInput) GetMariadbClusterConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMariadbClusterConnection {
		return vs[0].([]GetMariadbClusterConnection)[vs[1].(int)]
	}).(GetMariadbClusterConnectionOutput)
}

type GetMariadbClusterMaintenanceWindow struct {
	// The name of the week day.
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// Start of the maintenance window in UTC time.
	Time string `pulumi:"time"`
}

// GetMariadbClusterMaintenanceWindowInput is an input type that accepts GetMariadbClusterMaintenanceWindowArgs and GetMariadbClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetMariadbClusterMaintenanceWindowInput` via:
//
//	GetMariadbClusterMaintenanceWindowArgs{...}
type GetMariadbClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToGetMariadbClusterMaintenanceWindowOutput() GetMariadbClusterMaintenanceWindowOutput
	ToGetMariadbClusterMaintenanceWindowOutputWithContext(context.Context) GetMariadbClusterMaintenanceWindowOutput
}

type GetMariadbClusterMaintenanceWindowArgs struct {
	// The name of the week day.
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// Start of the maintenance window in UTC time.
	Time pulumi.StringInput `pulumi:"time"`
}

func (GetMariadbClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariadbClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetMariadbClusterMaintenanceWindowArgs) ToGetMariadbClusterMaintenanceWindowOutput() GetMariadbClusterMaintenanceWindowOutput {
	return i.ToGetMariadbClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetMariadbClusterMaintenanceWindowArgs) ToGetMariadbClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetMariadbClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMariadbClusterMaintenanceWindowOutput)
}

// GetMariadbClusterMaintenanceWindowArrayInput is an input type that accepts GetMariadbClusterMaintenanceWindowArray and GetMariadbClusterMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetMariadbClusterMaintenanceWindowArrayInput` via:
//
//	GetMariadbClusterMaintenanceWindowArray{ GetMariadbClusterMaintenanceWindowArgs{...} }
type GetMariadbClusterMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetMariadbClusterMaintenanceWindowArrayOutput() GetMariadbClusterMaintenanceWindowArrayOutput
	ToGetMariadbClusterMaintenanceWindowArrayOutputWithContext(context.Context) GetMariadbClusterMaintenanceWindowArrayOutput
}

type GetMariadbClusterMaintenanceWindowArray []GetMariadbClusterMaintenanceWindowInput

func (GetMariadbClusterMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMariadbClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetMariadbClusterMaintenanceWindowArray) ToGetMariadbClusterMaintenanceWindowArrayOutput() GetMariadbClusterMaintenanceWindowArrayOutput {
	return i.ToGetMariadbClusterMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetMariadbClusterMaintenanceWindowArray) ToGetMariadbClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetMariadbClusterMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMariadbClusterMaintenanceWindowArrayOutput)
}

type GetMariadbClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetMariadbClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariadbClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetMariadbClusterMaintenanceWindowOutput) ToGetMariadbClusterMaintenanceWindowOutput() GetMariadbClusterMaintenanceWindowOutput {
	return o
}

func (o GetMariadbClusterMaintenanceWindowOutput) ToGetMariadbClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetMariadbClusterMaintenanceWindowOutput {
	return o
}

// The name of the week day.
func (o GetMariadbClusterMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariadbClusterMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// Start of the maintenance window in UTC time.
func (o GetMariadbClusterMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariadbClusterMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type GetMariadbClusterMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetMariadbClusterMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMariadbClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetMariadbClusterMaintenanceWindowArrayOutput) ToGetMariadbClusterMaintenanceWindowArrayOutput() GetMariadbClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetMariadbClusterMaintenanceWindowArrayOutput) ToGetMariadbClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetMariadbClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetMariadbClusterMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetMariadbClusterMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMariadbClusterMaintenanceWindow {
		return vs[0].([]GetMariadbClusterMaintenanceWindow)[vs[1].(int)]
	}).(GetMariadbClusterMaintenanceWindowOutput)
}

type GetMongoClusterBackup struct {
	// The location where the cluster backups will be stored. If not set, the backup is stored in the nearest location of the cluster. Examples: de, eu-sounth-2, eu-central-2
	Location string `pulumi:"location"`
}

// GetMongoClusterBackupInput is an input type that accepts GetMongoClusterBackupArgs and GetMongoClusterBackupOutput values.
// You can construct a concrete instance of `GetMongoClusterBackupInput` via:
//
//	GetMongoClusterBackupArgs{...}
type GetMongoClusterBackupInput interface {
	pulumi.Input

	ToGetMongoClusterBackupOutput() GetMongoClusterBackupOutput
	ToGetMongoClusterBackupOutputWithContext(context.Context) GetMongoClusterBackupOutput
}

type GetMongoClusterBackupArgs struct {
	// The location where the cluster backups will be stored. If not set, the backup is stored in the nearest location of the cluster. Examples: de, eu-sounth-2, eu-central-2
	Location pulumi.StringInput `pulumi:"location"`
}

func (GetMongoClusterBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMongoClusterBackup)(nil)).Elem()
}

func (i GetMongoClusterBackupArgs) ToGetMongoClusterBackupOutput() GetMongoClusterBackupOutput {
	return i.ToGetMongoClusterBackupOutputWithContext(context.Background())
}

func (i GetMongoClusterBackupArgs) ToGetMongoClusterBackupOutputWithContext(ctx context.Context) GetMongoClusterBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMongoClusterBackupOutput)
}

// GetMongoClusterBackupArrayInput is an input type that accepts GetMongoClusterBackupArray and GetMongoClusterBackupArrayOutput values.
// You can construct a concrete instance of `GetMongoClusterBackupArrayInput` via:
//
//	GetMongoClusterBackupArray{ GetMongoClusterBackupArgs{...} }
type GetMongoClusterBackupArrayInput interface {
	pulumi.Input

	ToGetMongoClusterBackupArrayOutput() GetMongoClusterBackupArrayOutput
	ToGetMongoClusterBackupArrayOutputWithContext(context.Context) GetMongoClusterBackupArrayOutput
}

type GetMongoClusterBackupArray []GetMongoClusterBackupInput

func (GetMongoClusterBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMongoClusterBackup)(nil)).Elem()
}

func (i GetMongoClusterBackupArray) ToGetMongoClusterBackupArrayOutput() GetMongoClusterBackupArrayOutput {
	return i.ToGetMongoClusterBackupArrayOutputWithContext(context.Background())
}

func (i GetMongoClusterBackupArray) ToGetMongoClusterBackupArrayOutputWithContext(ctx context.Context) GetMongoClusterBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMongoClusterBackupArrayOutput)
}

type GetMongoClusterBackupOutput struct{ *pulumi.OutputState }

func (GetMongoClusterBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMongoClusterBackup)(nil)).Elem()
}

func (o GetMongoClusterBackupOutput) ToGetMongoClusterBackupOutput() GetMongoClusterBackupOutput {
	return o
}

func (o GetMongoClusterBackupOutput) ToGetMongoClusterBackupOutputWithContext(ctx context.Context) GetMongoClusterBackupOutput {
	return o
}

// The location where the cluster backups will be stored. If not set, the backup is stored in the nearest location of the cluster. Examples: de, eu-sounth-2, eu-central-2
func (o GetMongoClusterBackupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetMongoClusterBackup) string { return v.Location }).(pulumi.StringOutput)
}

type GetMongoClusterBackupArrayOutput struct{ *pulumi.OutputState }

func (GetMongoClusterBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMongoClusterBackup)(nil)).Elem()
}

func (o GetMongoClusterBackupArrayOutput) ToGetMongoClusterBackupArrayOutput() GetMongoClusterBackupArrayOutput {
	return o
}

func (o GetMongoClusterBackupArrayOutput) ToGetMongoClusterBackupArrayOutputWithContext(ctx context.Context) GetMongoClusterBackupArrayOutput {
	return o
}

func (o GetMongoClusterBackupArrayOutput) Index(i pulumi.IntInput) GetMongoClusterBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMongoClusterBackup {
		return vs[0].([]GetMongoClusterBackup)[vs[1].(int)]
	}).(GetMongoClusterBackupOutput)
}

type GetMongoClusterBiConnector struct {
	// Enable or disable the BiConnector
	Enabled bool `pulumi:"enabled"`
	// The host where this new BI Connector is installed
	Host string `pulumi:"host"`
	// Port number used when connecting to this new BI Connector
	Port string `pulumi:"port"`
}

// GetMongoClusterBiConnectorInput is an input type that accepts GetMongoClusterBiConnectorArgs and GetMongoClusterBiConnectorOutput values.
// You can construct a concrete instance of `GetMongoClusterBiConnectorInput` via:
//
//	GetMongoClusterBiConnectorArgs{...}
type GetMongoClusterBiConnectorInput interface {
	pulumi.Input

	ToGetMongoClusterBiConnectorOutput() GetMongoClusterBiConnectorOutput
	ToGetMongoClusterBiConnectorOutputWithContext(context.Context) GetMongoClusterBiConnectorOutput
}

type GetMongoClusterBiConnectorArgs struct {
	// Enable or disable the BiConnector
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The host where this new BI Connector is installed
	Host pulumi.StringInput `pulumi:"host"`
	// Port number used when connecting to this new BI Connector
	Port pulumi.StringInput `pulumi:"port"`
}

func (GetMongoClusterBiConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMongoClusterBiConnector)(nil)).Elem()
}

func (i GetMongoClusterBiConnectorArgs) ToGetMongoClusterBiConnectorOutput() GetMongoClusterBiConnectorOutput {
	return i.ToGetMongoClusterBiConnectorOutputWithContext(context.Background())
}

func (i GetMongoClusterBiConnectorArgs) ToGetMongoClusterBiConnectorOutputWithContext(ctx context.Context) GetMongoClusterBiConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMongoClusterBiConnectorOutput)
}

// GetMongoClusterBiConnectorArrayInput is an input type that accepts GetMongoClusterBiConnectorArray and GetMongoClusterBiConnectorArrayOutput values.
// You can construct a concrete instance of `GetMongoClusterBiConnectorArrayInput` via:
//
//	GetMongoClusterBiConnectorArray{ GetMongoClusterBiConnectorArgs{...} }
type GetMongoClusterBiConnectorArrayInput interface {
	pulumi.Input

	ToGetMongoClusterBiConnectorArrayOutput() GetMongoClusterBiConnectorArrayOutput
	ToGetMongoClusterBiConnectorArrayOutputWithContext(context.Context) GetMongoClusterBiConnectorArrayOutput
}

type GetMongoClusterBiConnectorArray []GetMongoClusterBiConnectorInput

func (GetMongoClusterBiConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMongoClusterBiConnector)(nil)).Elem()
}

func (i GetMongoClusterBiConnectorArray) ToGetMongoClusterBiConnectorArrayOutput() GetMongoClusterBiConnectorArrayOutput {
	return i.ToGetMongoClusterBiConnectorArrayOutputWithContext(context.Background())
}

func (i GetMongoClusterBiConnectorArray) ToGetMongoClusterBiConnectorArrayOutputWithContext(ctx context.Context) GetMongoClusterBiConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMongoClusterBiConnectorArrayOutput)
}

type GetMongoClusterBiConnectorOutput struct{ *pulumi.OutputState }

func (GetMongoClusterBiConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMongoClusterBiConnector)(nil)).Elem()
}

func (o GetMongoClusterBiConnectorOutput) ToGetMongoClusterBiConnectorOutput() GetMongoClusterBiConnectorOutput {
	return o
}

func (o GetMongoClusterBiConnectorOutput) ToGetMongoClusterBiConnectorOutputWithContext(ctx context.Context) GetMongoClusterBiConnectorOutput {
	return o
}

// Enable or disable the BiConnector
func (o GetMongoClusterBiConnectorOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMongoClusterBiConnector) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The host where this new BI Connector is installed
func (o GetMongoClusterBiConnectorOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetMongoClusterBiConnector) string { return v.Host }).(pulumi.StringOutput)
}

// Port number used when connecting to this new BI Connector
func (o GetMongoClusterBiConnectorOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetMongoClusterBiConnector) string { return v.Port }).(pulumi.StringOutput)
}

type GetMongoClusterBiConnectorArrayOutput struct{ *pulumi.OutputState }

func (GetMongoClusterBiConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMongoClusterBiConnector)(nil)).Elem()
}

func (o GetMongoClusterBiConnectorArrayOutput) ToGetMongoClusterBiConnectorArrayOutput() GetMongoClusterBiConnectorArrayOutput {
	return o
}

func (o GetMongoClusterBiConnectorArrayOutput) ToGetMongoClusterBiConnectorArrayOutputWithContext(ctx context.Context) GetMongoClusterBiConnectorArrayOutput {
	return o
}

func (o GetMongoClusterBiConnectorArrayOutput) Index(i pulumi.IntInput) GetMongoClusterBiConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMongoClusterBiConnector {
		return vs[0].([]GetMongoClusterBiConnector)[vs[1].(int)]
	}).(GetMongoClusterBiConnectorOutput)
}

type GetMongoClusterConnection struct {
	// The list of IPs and subnet for your cluster.
	//           Note the following unavailable IP ranges:
	//           10.233.64.0/18
	//           10.233.0.0/18
	//           10.233.114.0/24
	//  example: [192.168.1.100/24, 192.168.1.101/24]
	CidrLists []string `pulumi:"cidrLists"`
	// The datacenter to connect your cluster to
	DatacenterId string `pulumi:"datacenterId"`
	// The LAN to connect your cluster to
	LanId string `pulumi:"lanId"`
}

// GetMongoClusterConnectionInput is an input type that accepts GetMongoClusterConnectionArgs and GetMongoClusterConnectionOutput values.
// You can construct a concrete instance of `GetMongoClusterConnectionInput` via:
//
//	GetMongoClusterConnectionArgs{...}
type GetMongoClusterConnectionInput interface {
	pulumi.Input

	ToGetMongoClusterConnectionOutput() GetMongoClusterConnectionOutput
	ToGetMongoClusterConnectionOutputWithContext(context.Context) GetMongoClusterConnectionOutput
}

type GetMongoClusterConnectionArgs struct {
	// The list of IPs and subnet for your cluster.
	//           Note the following unavailable IP ranges:
	//           10.233.64.0/18
	//           10.233.0.0/18
	//           10.233.114.0/24
	//  example: [192.168.1.100/24, 192.168.1.101/24]
	CidrLists pulumi.StringArrayInput `pulumi:"cidrLists"`
	// The datacenter to connect your cluster to
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// The LAN to connect your cluster to
	LanId pulumi.StringInput `pulumi:"lanId"`
}

func (GetMongoClusterConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMongoClusterConnection)(nil)).Elem()
}

func (i GetMongoClusterConnectionArgs) ToGetMongoClusterConnectionOutput() GetMongoClusterConnectionOutput {
	return i.ToGetMongoClusterConnectionOutputWithContext(context.Background())
}

func (i GetMongoClusterConnectionArgs) ToGetMongoClusterConnectionOutputWithContext(ctx context.Context) GetMongoClusterConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMongoClusterConnectionOutput)
}

// GetMongoClusterConnectionArrayInput is an input type that accepts GetMongoClusterConnectionArray and GetMongoClusterConnectionArrayOutput values.
// You can construct a concrete instance of `GetMongoClusterConnectionArrayInput` via:
//
//	GetMongoClusterConnectionArray{ GetMongoClusterConnectionArgs{...} }
type GetMongoClusterConnectionArrayInput interface {
	pulumi.Input

	ToGetMongoClusterConnectionArrayOutput() GetMongoClusterConnectionArrayOutput
	ToGetMongoClusterConnectionArrayOutputWithContext(context.Context) GetMongoClusterConnectionArrayOutput
}

type GetMongoClusterConnectionArray []GetMongoClusterConnectionInput

func (GetMongoClusterConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMongoClusterConnection)(nil)).Elem()
}

func (i GetMongoClusterConnectionArray) ToGetMongoClusterConnectionArrayOutput() GetMongoClusterConnectionArrayOutput {
	return i.ToGetMongoClusterConnectionArrayOutputWithContext(context.Background())
}

func (i GetMongoClusterConnectionArray) ToGetMongoClusterConnectionArrayOutputWithContext(ctx context.Context) GetMongoClusterConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMongoClusterConnectionArrayOutput)
}

type GetMongoClusterConnectionOutput struct{ *pulumi.OutputState }

func (GetMongoClusterConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMongoClusterConnection)(nil)).Elem()
}

func (o GetMongoClusterConnectionOutput) ToGetMongoClusterConnectionOutput() GetMongoClusterConnectionOutput {
	return o
}

func (o GetMongoClusterConnectionOutput) ToGetMongoClusterConnectionOutputWithContext(ctx context.Context) GetMongoClusterConnectionOutput {
	return o
}

// The list of IPs and subnet for your cluster.
//
//	         Note the following unavailable IP ranges:
//	         10.233.64.0/18
//	         10.233.0.0/18
//	         10.233.114.0/24
//	example: [192.168.1.100/24, 192.168.1.101/24]
func (o GetMongoClusterConnectionOutput) CidrLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMongoClusterConnection) []string { return v.CidrLists }).(pulumi.StringArrayOutput)
}

// The datacenter to connect your cluster to
func (o GetMongoClusterConnectionOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMongoClusterConnection) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// The LAN to connect your cluster to
func (o GetMongoClusterConnectionOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMongoClusterConnection) string { return v.LanId }).(pulumi.StringOutput)
}

type GetMongoClusterConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetMongoClusterConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMongoClusterConnection)(nil)).Elem()
}

func (o GetMongoClusterConnectionArrayOutput) ToGetMongoClusterConnectionArrayOutput() GetMongoClusterConnectionArrayOutput {
	return o
}

func (o GetMongoClusterConnectionArrayOutput) ToGetMongoClusterConnectionArrayOutputWithContext(ctx context.Context) GetMongoClusterConnectionArrayOutput {
	return o
}

func (o GetMongoClusterConnectionArrayOutput) Index(i pulumi.IntInput) GetMongoClusterConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMongoClusterConnection {
		return vs[0].([]GetMongoClusterConnection)[vs[1].(int)]
	}).(GetMongoClusterConnectionOutput)
}

type GetMongoClusterMaintenanceWindow struct {
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	Time         string `pulumi:"time"`
}

// GetMongoClusterMaintenanceWindowInput is an input type that accepts GetMongoClusterMaintenanceWindowArgs and GetMongoClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetMongoClusterMaintenanceWindowInput` via:
//
//	GetMongoClusterMaintenanceWindowArgs{...}
type GetMongoClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToGetMongoClusterMaintenanceWindowOutput() GetMongoClusterMaintenanceWindowOutput
	ToGetMongoClusterMaintenanceWindowOutputWithContext(context.Context) GetMongoClusterMaintenanceWindowOutput
}

type GetMongoClusterMaintenanceWindowArgs struct {
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	Time         pulumi.StringInput `pulumi:"time"`
}

func (GetMongoClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMongoClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetMongoClusterMaintenanceWindowArgs) ToGetMongoClusterMaintenanceWindowOutput() GetMongoClusterMaintenanceWindowOutput {
	return i.ToGetMongoClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetMongoClusterMaintenanceWindowArgs) ToGetMongoClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetMongoClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMongoClusterMaintenanceWindowOutput)
}

// GetMongoClusterMaintenanceWindowArrayInput is an input type that accepts GetMongoClusterMaintenanceWindowArray and GetMongoClusterMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetMongoClusterMaintenanceWindowArrayInput` via:
//
//	GetMongoClusterMaintenanceWindowArray{ GetMongoClusterMaintenanceWindowArgs{...} }
type GetMongoClusterMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetMongoClusterMaintenanceWindowArrayOutput() GetMongoClusterMaintenanceWindowArrayOutput
	ToGetMongoClusterMaintenanceWindowArrayOutputWithContext(context.Context) GetMongoClusterMaintenanceWindowArrayOutput
}

type GetMongoClusterMaintenanceWindowArray []GetMongoClusterMaintenanceWindowInput

func (GetMongoClusterMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMongoClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetMongoClusterMaintenanceWindowArray) ToGetMongoClusterMaintenanceWindowArrayOutput() GetMongoClusterMaintenanceWindowArrayOutput {
	return i.ToGetMongoClusterMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetMongoClusterMaintenanceWindowArray) ToGetMongoClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetMongoClusterMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMongoClusterMaintenanceWindowArrayOutput)
}

type GetMongoClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetMongoClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMongoClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetMongoClusterMaintenanceWindowOutput) ToGetMongoClusterMaintenanceWindowOutput() GetMongoClusterMaintenanceWindowOutput {
	return o
}

func (o GetMongoClusterMaintenanceWindowOutput) ToGetMongoClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetMongoClusterMaintenanceWindowOutput {
	return o
}

func (o GetMongoClusterMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetMongoClusterMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

func (o GetMongoClusterMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetMongoClusterMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type GetMongoClusterMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetMongoClusterMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMongoClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetMongoClusterMaintenanceWindowArrayOutput) ToGetMongoClusterMaintenanceWindowArrayOutput() GetMongoClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetMongoClusterMaintenanceWindowArrayOutput) ToGetMongoClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetMongoClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetMongoClusterMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetMongoClusterMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMongoClusterMaintenanceWindow {
		return vs[0].([]GetMongoClusterMaintenanceWindow)[vs[1].(int)]
	}).(GetMongoClusterMaintenanceWindowOutput)
}

type GetMongoUserRole struct {
	Database string `pulumi:"database"`
	// A list of mongodb user roles. Examples: read, readWrite, readAnyDatabase
	Role string `pulumi:"role"`
}

// GetMongoUserRoleInput is an input type that accepts GetMongoUserRoleArgs and GetMongoUserRoleOutput values.
// You can construct a concrete instance of `GetMongoUserRoleInput` via:
//
//	GetMongoUserRoleArgs{...}
type GetMongoUserRoleInput interface {
	pulumi.Input

	ToGetMongoUserRoleOutput() GetMongoUserRoleOutput
	ToGetMongoUserRoleOutputWithContext(context.Context) GetMongoUserRoleOutput
}

type GetMongoUserRoleArgs struct {
	Database pulumi.StringInput `pulumi:"database"`
	// A list of mongodb user roles. Examples: read, readWrite, readAnyDatabase
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetMongoUserRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMongoUserRole)(nil)).Elem()
}

func (i GetMongoUserRoleArgs) ToGetMongoUserRoleOutput() GetMongoUserRoleOutput {
	return i.ToGetMongoUserRoleOutputWithContext(context.Background())
}

func (i GetMongoUserRoleArgs) ToGetMongoUserRoleOutputWithContext(ctx context.Context) GetMongoUserRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMongoUserRoleOutput)
}

// GetMongoUserRoleArrayInput is an input type that accepts GetMongoUserRoleArray and GetMongoUserRoleArrayOutput values.
// You can construct a concrete instance of `GetMongoUserRoleArrayInput` via:
//
//	GetMongoUserRoleArray{ GetMongoUserRoleArgs{...} }
type GetMongoUserRoleArrayInput interface {
	pulumi.Input

	ToGetMongoUserRoleArrayOutput() GetMongoUserRoleArrayOutput
	ToGetMongoUserRoleArrayOutputWithContext(context.Context) GetMongoUserRoleArrayOutput
}

type GetMongoUserRoleArray []GetMongoUserRoleInput

func (GetMongoUserRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMongoUserRole)(nil)).Elem()
}

func (i GetMongoUserRoleArray) ToGetMongoUserRoleArrayOutput() GetMongoUserRoleArrayOutput {
	return i.ToGetMongoUserRoleArrayOutputWithContext(context.Background())
}

func (i GetMongoUserRoleArray) ToGetMongoUserRoleArrayOutputWithContext(ctx context.Context) GetMongoUserRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMongoUserRoleArrayOutput)
}

type GetMongoUserRoleOutput struct{ *pulumi.OutputState }

func (GetMongoUserRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMongoUserRole)(nil)).Elem()
}

func (o GetMongoUserRoleOutput) ToGetMongoUserRoleOutput() GetMongoUserRoleOutput {
	return o
}

func (o GetMongoUserRoleOutput) ToGetMongoUserRoleOutputWithContext(ctx context.Context) GetMongoUserRoleOutput {
	return o
}

func (o GetMongoUserRoleOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetMongoUserRole) string { return v.Database }).(pulumi.StringOutput)
}

// A list of mongodb user roles. Examples: read, readWrite, readAnyDatabase
func (o GetMongoUserRoleOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetMongoUserRole) string { return v.Role }).(pulumi.StringOutput)
}

type GetMongoUserRoleArrayOutput struct{ *pulumi.OutputState }

func (GetMongoUserRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMongoUserRole)(nil)).Elem()
}

func (o GetMongoUserRoleArrayOutput) ToGetMongoUserRoleArrayOutput() GetMongoUserRoleArrayOutput {
	return o
}

func (o GetMongoUserRoleArrayOutput) ToGetMongoUserRoleArrayOutputWithContext(ctx context.Context) GetMongoUserRoleArrayOutput {
	return o
}

func (o GetMongoUserRoleArrayOutput) Index(i pulumi.IntInput) GetMongoUserRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMongoUserRole {
		return vs[0].([]GetMongoUserRole)[vs[1].(int)]
	}).(GetMongoUserRoleOutput)
}

type GetNatgatewayLan struct {
	// Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN
	GatewayIps []string `pulumi:"gatewayIps"`
	// ID of the network load balancer forwarding rule you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id int `pulumi:"id"`
}

// GetNatgatewayLanInput is an input type that accepts GetNatgatewayLanArgs and GetNatgatewayLanOutput values.
// You can construct a concrete instance of `GetNatgatewayLanInput` via:
//
//	GetNatgatewayLanArgs{...}
type GetNatgatewayLanInput interface {
	pulumi.Input

	ToGetNatgatewayLanOutput() GetNatgatewayLanOutput
	ToGetNatgatewayLanOutputWithContext(context.Context) GetNatgatewayLanOutput
}

type GetNatgatewayLanArgs struct {
	// Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN
	GatewayIps pulumi.StringArrayInput `pulumi:"gatewayIps"`
	// ID of the network load balancer forwarding rule you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id pulumi.IntInput `pulumi:"id"`
}

func (GetNatgatewayLanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatgatewayLan)(nil)).Elem()
}

func (i GetNatgatewayLanArgs) ToGetNatgatewayLanOutput() GetNatgatewayLanOutput {
	return i.ToGetNatgatewayLanOutputWithContext(context.Background())
}

func (i GetNatgatewayLanArgs) ToGetNatgatewayLanOutputWithContext(ctx context.Context) GetNatgatewayLanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatgatewayLanOutput)
}

// GetNatgatewayLanArrayInput is an input type that accepts GetNatgatewayLanArray and GetNatgatewayLanArrayOutput values.
// You can construct a concrete instance of `GetNatgatewayLanArrayInput` via:
//
//	GetNatgatewayLanArray{ GetNatgatewayLanArgs{...} }
type GetNatgatewayLanArrayInput interface {
	pulumi.Input

	ToGetNatgatewayLanArrayOutput() GetNatgatewayLanArrayOutput
	ToGetNatgatewayLanArrayOutputWithContext(context.Context) GetNatgatewayLanArrayOutput
}

type GetNatgatewayLanArray []GetNatgatewayLanInput

func (GetNatgatewayLanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatgatewayLan)(nil)).Elem()
}

func (i GetNatgatewayLanArray) ToGetNatgatewayLanArrayOutput() GetNatgatewayLanArrayOutput {
	return i.ToGetNatgatewayLanArrayOutputWithContext(context.Background())
}

func (i GetNatgatewayLanArray) ToGetNatgatewayLanArrayOutputWithContext(ctx context.Context) GetNatgatewayLanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatgatewayLanArrayOutput)
}

type GetNatgatewayLanOutput struct{ *pulumi.OutputState }

func (GetNatgatewayLanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatgatewayLan)(nil)).Elem()
}

func (o GetNatgatewayLanOutput) ToGetNatgatewayLanOutput() GetNatgatewayLanOutput {
	return o
}

func (o GetNatgatewayLanOutput) ToGetNatgatewayLanOutputWithContext(ctx context.Context) GetNatgatewayLanOutput {
	return o
}

// Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN
func (o GetNatgatewayLanOutput) GatewayIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNatgatewayLan) []string { return v.GatewayIps }).(pulumi.StringArrayOutput)
}

// ID of the network load balancer forwarding rule you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetNatgatewayLanOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetNatgatewayLan) int { return v.Id }).(pulumi.IntOutput)
}

type GetNatgatewayLanArrayOutput struct{ *pulumi.OutputState }

func (GetNatgatewayLanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatgatewayLan)(nil)).Elem()
}

func (o GetNatgatewayLanArrayOutput) ToGetNatgatewayLanArrayOutput() GetNatgatewayLanArrayOutput {
	return o
}

func (o GetNatgatewayLanArrayOutput) ToGetNatgatewayLanArrayOutputWithContext(ctx context.Context) GetNatgatewayLanArrayOutput {
	return o
}

func (o GetNatgatewayLanArrayOutput) Index(i pulumi.IntInput) GetNatgatewayLanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatgatewayLan {
		return vs[0].([]GetNatgatewayLan)[vs[1].(int)]
	}).(GetNatgatewayLanOutput)
}

type GetNatgatewayRuleTargetPortRange struct {
	// Target port range end associated with the NAT gateway rule.
	End int `pulumi:"end"`
	// Target port range start associated with the NAT gateway rule.
	Start int `pulumi:"start"`
}

// GetNatgatewayRuleTargetPortRangeInput is an input type that accepts GetNatgatewayRuleTargetPortRangeArgs and GetNatgatewayRuleTargetPortRangeOutput values.
// You can construct a concrete instance of `GetNatgatewayRuleTargetPortRangeInput` via:
//
//	GetNatgatewayRuleTargetPortRangeArgs{...}
type GetNatgatewayRuleTargetPortRangeInput interface {
	pulumi.Input

	ToGetNatgatewayRuleTargetPortRangeOutput() GetNatgatewayRuleTargetPortRangeOutput
	ToGetNatgatewayRuleTargetPortRangeOutputWithContext(context.Context) GetNatgatewayRuleTargetPortRangeOutput
}

type GetNatgatewayRuleTargetPortRangeArgs struct {
	// Target port range end associated with the NAT gateway rule.
	End pulumi.IntInput `pulumi:"end"`
	// Target port range start associated with the NAT gateway rule.
	Start pulumi.IntInput `pulumi:"start"`
}

func (GetNatgatewayRuleTargetPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatgatewayRuleTargetPortRange)(nil)).Elem()
}

func (i GetNatgatewayRuleTargetPortRangeArgs) ToGetNatgatewayRuleTargetPortRangeOutput() GetNatgatewayRuleTargetPortRangeOutput {
	return i.ToGetNatgatewayRuleTargetPortRangeOutputWithContext(context.Background())
}

func (i GetNatgatewayRuleTargetPortRangeArgs) ToGetNatgatewayRuleTargetPortRangeOutputWithContext(ctx context.Context) GetNatgatewayRuleTargetPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatgatewayRuleTargetPortRangeOutput)
}

// GetNatgatewayRuleTargetPortRangeArrayInput is an input type that accepts GetNatgatewayRuleTargetPortRangeArray and GetNatgatewayRuleTargetPortRangeArrayOutput values.
// You can construct a concrete instance of `GetNatgatewayRuleTargetPortRangeArrayInput` via:
//
//	GetNatgatewayRuleTargetPortRangeArray{ GetNatgatewayRuleTargetPortRangeArgs{...} }
type GetNatgatewayRuleTargetPortRangeArrayInput interface {
	pulumi.Input

	ToGetNatgatewayRuleTargetPortRangeArrayOutput() GetNatgatewayRuleTargetPortRangeArrayOutput
	ToGetNatgatewayRuleTargetPortRangeArrayOutputWithContext(context.Context) GetNatgatewayRuleTargetPortRangeArrayOutput
}

type GetNatgatewayRuleTargetPortRangeArray []GetNatgatewayRuleTargetPortRangeInput

func (GetNatgatewayRuleTargetPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatgatewayRuleTargetPortRange)(nil)).Elem()
}

func (i GetNatgatewayRuleTargetPortRangeArray) ToGetNatgatewayRuleTargetPortRangeArrayOutput() GetNatgatewayRuleTargetPortRangeArrayOutput {
	return i.ToGetNatgatewayRuleTargetPortRangeArrayOutputWithContext(context.Background())
}

func (i GetNatgatewayRuleTargetPortRangeArray) ToGetNatgatewayRuleTargetPortRangeArrayOutputWithContext(ctx context.Context) GetNatgatewayRuleTargetPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatgatewayRuleTargetPortRangeArrayOutput)
}

type GetNatgatewayRuleTargetPortRangeOutput struct{ *pulumi.OutputState }

func (GetNatgatewayRuleTargetPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatgatewayRuleTargetPortRange)(nil)).Elem()
}

func (o GetNatgatewayRuleTargetPortRangeOutput) ToGetNatgatewayRuleTargetPortRangeOutput() GetNatgatewayRuleTargetPortRangeOutput {
	return o
}

func (o GetNatgatewayRuleTargetPortRangeOutput) ToGetNatgatewayRuleTargetPortRangeOutputWithContext(ctx context.Context) GetNatgatewayRuleTargetPortRangeOutput {
	return o
}

// Target port range end associated with the NAT gateway rule.
func (o GetNatgatewayRuleTargetPortRangeOutput) End() pulumi.IntOutput {
	return o.ApplyT(func(v GetNatgatewayRuleTargetPortRange) int { return v.End }).(pulumi.IntOutput)
}

// Target port range start associated with the NAT gateway rule.
func (o GetNatgatewayRuleTargetPortRangeOutput) Start() pulumi.IntOutput {
	return o.ApplyT(func(v GetNatgatewayRuleTargetPortRange) int { return v.Start }).(pulumi.IntOutput)
}

type GetNatgatewayRuleTargetPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetNatgatewayRuleTargetPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatgatewayRuleTargetPortRange)(nil)).Elem()
}

func (o GetNatgatewayRuleTargetPortRangeArrayOutput) ToGetNatgatewayRuleTargetPortRangeArrayOutput() GetNatgatewayRuleTargetPortRangeArrayOutput {
	return o
}

func (o GetNatgatewayRuleTargetPortRangeArrayOutput) ToGetNatgatewayRuleTargetPortRangeArrayOutputWithContext(ctx context.Context) GetNatgatewayRuleTargetPortRangeArrayOutput {
	return o
}

func (o GetNatgatewayRuleTargetPortRangeArrayOutput) Index(i pulumi.IntInput) GetNatgatewayRuleTargetPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatgatewayRuleTargetPortRange {
		return vs[0].([]GetNatgatewayRuleTargetPortRange)[vs[1].(int)]
	}).(GetNatgatewayRuleTargetPortRangeOutput)
}

type GetNetworkloadbalancerFlowlog struct {
	// Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	Action string `pulumi:"action"`
	// Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	Bucket string `pulumi:"bucket"`
	// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	Direction string `pulumi:"direction"`
	// ID of the network load balancer you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id string `pulumi:"id"`
	// Name of an existing network load balancer that you want to search for.
	Name string `pulumi:"name"`
}

// GetNetworkloadbalancerFlowlogInput is an input type that accepts GetNetworkloadbalancerFlowlogArgs and GetNetworkloadbalancerFlowlogOutput values.
// You can construct a concrete instance of `GetNetworkloadbalancerFlowlogInput` via:
//
//	GetNetworkloadbalancerFlowlogArgs{...}
type GetNetworkloadbalancerFlowlogInput interface {
	pulumi.Input

	ToGetNetworkloadbalancerFlowlogOutput() GetNetworkloadbalancerFlowlogOutput
	ToGetNetworkloadbalancerFlowlogOutputWithContext(context.Context) GetNetworkloadbalancerFlowlogOutput
}

type GetNetworkloadbalancerFlowlogArgs struct {
	// Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	Action pulumi.StringInput `pulumi:"action"`
	// Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	Direction pulumi.StringInput `pulumi:"direction"`
	// ID of the network load balancer you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of an existing network load balancer that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetNetworkloadbalancerFlowlogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkloadbalancerFlowlog)(nil)).Elem()
}

func (i GetNetworkloadbalancerFlowlogArgs) ToGetNetworkloadbalancerFlowlogOutput() GetNetworkloadbalancerFlowlogOutput {
	return i.ToGetNetworkloadbalancerFlowlogOutputWithContext(context.Background())
}

func (i GetNetworkloadbalancerFlowlogArgs) ToGetNetworkloadbalancerFlowlogOutputWithContext(ctx context.Context) GetNetworkloadbalancerFlowlogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkloadbalancerFlowlogOutput)
}

// GetNetworkloadbalancerFlowlogArrayInput is an input type that accepts GetNetworkloadbalancerFlowlogArray and GetNetworkloadbalancerFlowlogArrayOutput values.
// You can construct a concrete instance of `GetNetworkloadbalancerFlowlogArrayInput` via:
//
//	GetNetworkloadbalancerFlowlogArray{ GetNetworkloadbalancerFlowlogArgs{...} }
type GetNetworkloadbalancerFlowlogArrayInput interface {
	pulumi.Input

	ToGetNetworkloadbalancerFlowlogArrayOutput() GetNetworkloadbalancerFlowlogArrayOutput
	ToGetNetworkloadbalancerFlowlogArrayOutputWithContext(context.Context) GetNetworkloadbalancerFlowlogArrayOutput
}

type GetNetworkloadbalancerFlowlogArray []GetNetworkloadbalancerFlowlogInput

func (GetNetworkloadbalancerFlowlogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkloadbalancerFlowlog)(nil)).Elem()
}

func (i GetNetworkloadbalancerFlowlogArray) ToGetNetworkloadbalancerFlowlogArrayOutput() GetNetworkloadbalancerFlowlogArrayOutput {
	return i.ToGetNetworkloadbalancerFlowlogArrayOutputWithContext(context.Background())
}

func (i GetNetworkloadbalancerFlowlogArray) ToGetNetworkloadbalancerFlowlogArrayOutputWithContext(ctx context.Context) GetNetworkloadbalancerFlowlogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkloadbalancerFlowlogArrayOutput)
}

type GetNetworkloadbalancerFlowlogOutput struct{ *pulumi.OutputState }

func (GetNetworkloadbalancerFlowlogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkloadbalancerFlowlog)(nil)).Elem()
}

func (o GetNetworkloadbalancerFlowlogOutput) ToGetNetworkloadbalancerFlowlogOutput() GetNetworkloadbalancerFlowlogOutput {
	return o
}

func (o GetNetworkloadbalancerFlowlogOutput) ToGetNetworkloadbalancerFlowlogOutputWithContext(ctx context.Context) GetNetworkloadbalancerFlowlogOutput {
	return o
}

// Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
func (o GetNetworkloadbalancerFlowlogOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerFlowlog) string { return v.Action }).(pulumi.StringOutput)
}

// Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
func (o GetNetworkloadbalancerFlowlogOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerFlowlog) string { return v.Bucket }).(pulumi.StringOutput)
}

// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
func (o GetNetworkloadbalancerFlowlogOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerFlowlog) string { return v.Direction }).(pulumi.StringOutput)
}

// ID of the network load balancer you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetNetworkloadbalancerFlowlogOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerFlowlog) string { return v.Id }).(pulumi.StringOutput)
}

// Name of an existing network load balancer that you want to search for.
func (o GetNetworkloadbalancerFlowlogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerFlowlog) string { return v.Name }).(pulumi.StringOutput)
}

type GetNetworkloadbalancerFlowlogArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkloadbalancerFlowlogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkloadbalancerFlowlog)(nil)).Elem()
}

func (o GetNetworkloadbalancerFlowlogArrayOutput) ToGetNetworkloadbalancerFlowlogArrayOutput() GetNetworkloadbalancerFlowlogArrayOutput {
	return o
}

func (o GetNetworkloadbalancerFlowlogArrayOutput) ToGetNetworkloadbalancerFlowlogArrayOutputWithContext(ctx context.Context) GetNetworkloadbalancerFlowlogArrayOutput {
	return o
}

func (o GetNetworkloadbalancerFlowlogArrayOutput) Index(i pulumi.IntInput) GetNetworkloadbalancerFlowlogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkloadbalancerFlowlog {
		return vs[0].([]GetNetworkloadbalancerFlowlog)[vs[1].(int)]
	}).(GetNetworkloadbalancerFlowlogOutput)
}

type GetNetworkloadbalancerForwardingruleHealthCheck struct {
	// ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
	ClientTimeout int `pulumi:"clientTimeout"`
	// It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
	ConnectTimeout int `pulumi:"connectTimeout"`
	// Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
	Retries int `pulumi:"retries"`
	// TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
	TargetTimeout int `pulumi:"targetTimeout"`
}

// GetNetworkloadbalancerForwardingruleHealthCheckInput is an input type that accepts GetNetworkloadbalancerForwardingruleHealthCheckArgs and GetNetworkloadbalancerForwardingruleHealthCheckOutput values.
// You can construct a concrete instance of `GetNetworkloadbalancerForwardingruleHealthCheckInput` via:
//
//	GetNetworkloadbalancerForwardingruleHealthCheckArgs{...}
type GetNetworkloadbalancerForwardingruleHealthCheckInput interface {
	pulumi.Input

	ToGetNetworkloadbalancerForwardingruleHealthCheckOutput() GetNetworkloadbalancerForwardingruleHealthCheckOutput
	ToGetNetworkloadbalancerForwardingruleHealthCheckOutputWithContext(context.Context) GetNetworkloadbalancerForwardingruleHealthCheckOutput
}

type GetNetworkloadbalancerForwardingruleHealthCheckArgs struct {
	// ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
	ClientTimeout pulumi.IntInput `pulumi:"clientTimeout"`
	// It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
	ConnectTimeout pulumi.IntInput `pulumi:"connectTimeout"`
	// Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
	Retries pulumi.IntInput `pulumi:"retries"`
	// TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
	TargetTimeout pulumi.IntInput `pulumi:"targetTimeout"`
}

func (GetNetworkloadbalancerForwardingruleHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkloadbalancerForwardingruleHealthCheck)(nil)).Elem()
}

func (i GetNetworkloadbalancerForwardingruleHealthCheckArgs) ToGetNetworkloadbalancerForwardingruleHealthCheckOutput() GetNetworkloadbalancerForwardingruleHealthCheckOutput {
	return i.ToGetNetworkloadbalancerForwardingruleHealthCheckOutputWithContext(context.Background())
}

func (i GetNetworkloadbalancerForwardingruleHealthCheckArgs) ToGetNetworkloadbalancerForwardingruleHealthCheckOutputWithContext(ctx context.Context) GetNetworkloadbalancerForwardingruleHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkloadbalancerForwardingruleHealthCheckOutput)
}

// GetNetworkloadbalancerForwardingruleHealthCheckArrayInput is an input type that accepts GetNetworkloadbalancerForwardingruleHealthCheckArray and GetNetworkloadbalancerForwardingruleHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetNetworkloadbalancerForwardingruleHealthCheckArrayInput` via:
//
//	GetNetworkloadbalancerForwardingruleHealthCheckArray{ GetNetworkloadbalancerForwardingruleHealthCheckArgs{...} }
type GetNetworkloadbalancerForwardingruleHealthCheckArrayInput interface {
	pulumi.Input

	ToGetNetworkloadbalancerForwardingruleHealthCheckArrayOutput() GetNetworkloadbalancerForwardingruleHealthCheckArrayOutput
	ToGetNetworkloadbalancerForwardingruleHealthCheckArrayOutputWithContext(context.Context) GetNetworkloadbalancerForwardingruleHealthCheckArrayOutput
}

type GetNetworkloadbalancerForwardingruleHealthCheckArray []GetNetworkloadbalancerForwardingruleHealthCheckInput

func (GetNetworkloadbalancerForwardingruleHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkloadbalancerForwardingruleHealthCheck)(nil)).Elem()
}

func (i GetNetworkloadbalancerForwardingruleHealthCheckArray) ToGetNetworkloadbalancerForwardingruleHealthCheckArrayOutput() GetNetworkloadbalancerForwardingruleHealthCheckArrayOutput {
	return i.ToGetNetworkloadbalancerForwardingruleHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetNetworkloadbalancerForwardingruleHealthCheckArray) ToGetNetworkloadbalancerForwardingruleHealthCheckArrayOutputWithContext(ctx context.Context) GetNetworkloadbalancerForwardingruleHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkloadbalancerForwardingruleHealthCheckArrayOutput)
}

type GetNetworkloadbalancerForwardingruleHealthCheckOutput struct{ *pulumi.OutputState }

func (GetNetworkloadbalancerForwardingruleHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkloadbalancerForwardingruleHealthCheck)(nil)).Elem()
}

func (o GetNetworkloadbalancerForwardingruleHealthCheckOutput) ToGetNetworkloadbalancerForwardingruleHealthCheckOutput() GetNetworkloadbalancerForwardingruleHealthCheckOutput {
	return o
}

func (o GetNetworkloadbalancerForwardingruleHealthCheckOutput) ToGetNetworkloadbalancerForwardingruleHealthCheckOutputWithContext(ctx context.Context) GetNetworkloadbalancerForwardingruleHealthCheckOutput {
	return o
}

// ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
func (o GetNetworkloadbalancerForwardingruleHealthCheckOutput) ClientTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerForwardingruleHealthCheck) int { return v.ClientTimeout }).(pulumi.IntOutput)
}

// It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
func (o GetNetworkloadbalancerForwardingruleHealthCheckOutput) ConnectTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerForwardingruleHealthCheck) int { return v.ConnectTimeout }).(pulumi.IntOutput)
}

// Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
func (o GetNetworkloadbalancerForwardingruleHealthCheckOutput) Retries() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerForwardingruleHealthCheck) int { return v.Retries }).(pulumi.IntOutput)
}

// TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
func (o GetNetworkloadbalancerForwardingruleHealthCheckOutput) TargetTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerForwardingruleHealthCheck) int { return v.TargetTimeout }).(pulumi.IntOutput)
}

type GetNetworkloadbalancerForwardingruleHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkloadbalancerForwardingruleHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkloadbalancerForwardingruleHealthCheck)(nil)).Elem()
}

func (o GetNetworkloadbalancerForwardingruleHealthCheckArrayOutput) ToGetNetworkloadbalancerForwardingruleHealthCheckArrayOutput() GetNetworkloadbalancerForwardingruleHealthCheckArrayOutput {
	return o
}

func (o GetNetworkloadbalancerForwardingruleHealthCheckArrayOutput) ToGetNetworkloadbalancerForwardingruleHealthCheckArrayOutputWithContext(ctx context.Context) GetNetworkloadbalancerForwardingruleHealthCheckArrayOutput {
	return o
}

func (o GetNetworkloadbalancerForwardingruleHealthCheckArrayOutput) Index(i pulumi.IntInput) GetNetworkloadbalancerForwardingruleHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkloadbalancerForwardingruleHealthCheck {
		return vs[0].([]GetNetworkloadbalancerForwardingruleHealthCheck)[vs[1].(int)]
	}).(GetNetworkloadbalancerForwardingruleHealthCheckOutput)
}

type GetNetworkloadbalancerForwardingruleTarget struct {
	// Health check attributes for Network Load Balancer forwarding rule target.
	HealthChecks []GetNetworkloadbalancerForwardingruleTargetHealthCheck `pulumi:"healthChecks"`
	// IP of a balanced target VM.
	Ip string `pulumi:"ip"`
	// Port of the balanced target service. (range: 1 to 65535).
	Port int `pulumi:"port"`
	// The proxy protocol version.
	ProxyProtocol string `pulumi:"proxyProtocol"`
	// Weight parameter is used to adjust the target VM's weight relative to other target VMs.
	Weight int `pulumi:"weight"`
}

// GetNetworkloadbalancerForwardingruleTargetInput is an input type that accepts GetNetworkloadbalancerForwardingruleTargetArgs and GetNetworkloadbalancerForwardingruleTargetOutput values.
// You can construct a concrete instance of `GetNetworkloadbalancerForwardingruleTargetInput` via:
//
//	GetNetworkloadbalancerForwardingruleTargetArgs{...}
type GetNetworkloadbalancerForwardingruleTargetInput interface {
	pulumi.Input

	ToGetNetworkloadbalancerForwardingruleTargetOutput() GetNetworkloadbalancerForwardingruleTargetOutput
	ToGetNetworkloadbalancerForwardingruleTargetOutputWithContext(context.Context) GetNetworkloadbalancerForwardingruleTargetOutput
}

type GetNetworkloadbalancerForwardingruleTargetArgs struct {
	// Health check attributes for Network Load Balancer forwarding rule target.
	HealthChecks GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayInput `pulumi:"healthChecks"`
	// IP of a balanced target VM.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Port of the balanced target service. (range: 1 to 65535).
	Port pulumi.IntInput `pulumi:"port"`
	// The proxy protocol version.
	ProxyProtocol pulumi.StringInput `pulumi:"proxyProtocol"`
	// Weight parameter is used to adjust the target VM's weight relative to other target VMs.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetNetworkloadbalancerForwardingruleTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkloadbalancerForwardingruleTarget)(nil)).Elem()
}

func (i GetNetworkloadbalancerForwardingruleTargetArgs) ToGetNetworkloadbalancerForwardingruleTargetOutput() GetNetworkloadbalancerForwardingruleTargetOutput {
	return i.ToGetNetworkloadbalancerForwardingruleTargetOutputWithContext(context.Background())
}

func (i GetNetworkloadbalancerForwardingruleTargetArgs) ToGetNetworkloadbalancerForwardingruleTargetOutputWithContext(ctx context.Context) GetNetworkloadbalancerForwardingruleTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkloadbalancerForwardingruleTargetOutput)
}

// GetNetworkloadbalancerForwardingruleTargetArrayInput is an input type that accepts GetNetworkloadbalancerForwardingruleTargetArray and GetNetworkloadbalancerForwardingruleTargetArrayOutput values.
// You can construct a concrete instance of `GetNetworkloadbalancerForwardingruleTargetArrayInput` via:
//
//	GetNetworkloadbalancerForwardingruleTargetArray{ GetNetworkloadbalancerForwardingruleTargetArgs{...} }
type GetNetworkloadbalancerForwardingruleTargetArrayInput interface {
	pulumi.Input

	ToGetNetworkloadbalancerForwardingruleTargetArrayOutput() GetNetworkloadbalancerForwardingruleTargetArrayOutput
	ToGetNetworkloadbalancerForwardingruleTargetArrayOutputWithContext(context.Context) GetNetworkloadbalancerForwardingruleTargetArrayOutput
}

type GetNetworkloadbalancerForwardingruleTargetArray []GetNetworkloadbalancerForwardingruleTargetInput

func (GetNetworkloadbalancerForwardingruleTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkloadbalancerForwardingruleTarget)(nil)).Elem()
}

func (i GetNetworkloadbalancerForwardingruleTargetArray) ToGetNetworkloadbalancerForwardingruleTargetArrayOutput() GetNetworkloadbalancerForwardingruleTargetArrayOutput {
	return i.ToGetNetworkloadbalancerForwardingruleTargetArrayOutputWithContext(context.Background())
}

func (i GetNetworkloadbalancerForwardingruleTargetArray) ToGetNetworkloadbalancerForwardingruleTargetArrayOutputWithContext(ctx context.Context) GetNetworkloadbalancerForwardingruleTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkloadbalancerForwardingruleTargetArrayOutput)
}

type GetNetworkloadbalancerForwardingruleTargetOutput struct{ *pulumi.OutputState }

func (GetNetworkloadbalancerForwardingruleTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkloadbalancerForwardingruleTarget)(nil)).Elem()
}

func (o GetNetworkloadbalancerForwardingruleTargetOutput) ToGetNetworkloadbalancerForwardingruleTargetOutput() GetNetworkloadbalancerForwardingruleTargetOutput {
	return o
}

func (o GetNetworkloadbalancerForwardingruleTargetOutput) ToGetNetworkloadbalancerForwardingruleTargetOutputWithContext(ctx context.Context) GetNetworkloadbalancerForwardingruleTargetOutput {
	return o
}

// Health check attributes for Network Load Balancer forwarding rule target.
func (o GetNetworkloadbalancerForwardingruleTargetOutput) HealthChecks() GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerForwardingruleTarget) []GetNetworkloadbalancerForwardingruleTargetHealthCheck {
		return v.HealthChecks
	}).(GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput)
}

// IP of a balanced target VM.
func (o GetNetworkloadbalancerForwardingruleTargetOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerForwardingruleTarget) string { return v.Ip }).(pulumi.StringOutput)
}

// Port of the balanced target service. (range: 1 to 65535).
func (o GetNetworkloadbalancerForwardingruleTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerForwardingruleTarget) int { return v.Port }).(pulumi.IntOutput)
}

// The proxy protocol version.
func (o GetNetworkloadbalancerForwardingruleTargetOutput) ProxyProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerForwardingruleTarget) string { return v.ProxyProtocol }).(pulumi.StringOutput)
}

// Weight parameter is used to adjust the target VM's weight relative to other target VMs.
func (o GetNetworkloadbalancerForwardingruleTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerForwardingruleTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type GetNetworkloadbalancerForwardingruleTargetArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkloadbalancerForwardingruleTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkloadbalancerForwardingruleTarget)(nil)).Elem()
}

func (o GetNetworkloadbalancerForwardingruleTargetArrayOutput) ToGetNetworkloadbalancerForwardingruleTargetArrayOutput() GetNetworkloadbalancerForwardingruleTargetArrayOutput {
	return o
}

func (o GetNetworkloadbalancerForwardingruleTargetArrayOutput) ToGetNetworkloadbalancerForwardingruleTargetArrayOutputWithContext(ctx context.Context) GetNetworkloadbalancerForwardingruleTargetArrayOutput {
	return o
}

func (o GetNetworkloadbalancerForwardingruleTargetArrayOutput) Index(i pulumi.IntInput) GetNetworkloadbalancerForwardingruleTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkloadbalancerForwardingruleTarget {
		return vs[0].([]GetNetworkloadbalancerForwardingruleTarget)[vs[1].(int)]
	}).(GetNetworkloadbalancerForwardingruleTargetOutput)
}

type GetNetworkloadbalancerForwardingruleTargetHealthCheck struct {
	// Check specifies whether the target VM's health is checked.
	Check bool `pulumi:"check"`
	// CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
	CheckInterval int `pulumi:"checkInterval"`
	// Maintenance specifies if a target VM should be marked as down, even if it is not.
	Maintenance bool `pulumi:"maintenance"`
}

// GetNetworkloadbalancerForwardingruleTargetHealthCheckInput is an input type that accepts GetNetworkloadbalancerForwardingruleTargetHealthCheckArgs and GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput values.
// You can construct a concrete instance of `GetNetworkloadbalancerForwardingruleTargetHealthCheckInput` via:
//
//	GetNetworkloadbalancerForwardingruleTargetHealthCheckArgs{...}
type GetNetworkloadbalancerForwardingruleTargetHealthCheckInput interface {
	pulumi.Input

	ToGetNetworkloadbalancerForwardingruleTargetHealthCheckOutput() GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput
	ToGetNetworkloadbalancerForwardingruleTargetHealthCheckOutputWithContext(context.Context) GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput
}

type GetNetworkloadbalancerForwardingruleTargetHealthCheckArgs struct {
	// Check specifies whether the target VM's health is checked.
	Check pulumi.BoolInput `pulumi:"check"`
	// CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
	CheckInterval pulumi.IntInput `pulumi:"checkInterval"`
	// Maintenance specifies if a target VM should be marked as down, even if it is not.
	Maintenance pulumi.BoolInput `pulumi:"maintenance"`
}

func (GetNetworkloadbalancerForwardingruleTargetHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkloadbalancerForwardingruleTargetHealthCheck)(nil)).Elem()
}

func (i GetNetworkloadbalancerForwardingruleTargetHealthCheckArgs) ToGetNetworkloadbalancerForwardingruleTargetHealthCheckOutput() GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput {
	return i.ToGetNetworkloadbalancerForwardingruleTargetHealthCheckOutputWithContext(context.Background())
}

func (i GetNetworkloadbalancerForwardingruleTargetHealthCheckArgs) ToGetNetworkloadbalancerForwardingruleTargetHealthCheckOutputWithContext(ctx context.Context) GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput)
}

// GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayInput is an input type that accepts GetNetworkloadbalancerForwardingruleTargetHealthCheckArray and GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayInput` via:
//
//	GetNetworkloadbalancerForwardingruleTargetHealthCheckArray{ GetNetworkloadbalancerForwardingruleTargetHealthCheckArgs{...} }
type GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayInput interface {
	pulumi.Input

	ToGetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput() GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput
	ToGetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutputWithContext(context.Context) GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput
}

type GetNetworkloadbalancerForwardingruleTargetHealthCheckArray []GetNetworkloadbalancerForwardingruleTargetHealthCheckInput

func (GetNetworkloadbalancerForwardingruleTargetHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkloadbalancerForwardingruleTargetHealthCheck)(nil)).Elem()
}

func (i GetNetworkloadbalancerForwardingruleTargetHealthCheckArray) ToGetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput() GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput {
	return i.ToGetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetNetworkloadbalancerForwardingruleTargetHealthCheckArray) ToGetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutputWithContext(ctx context.Context) GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput)
}

type GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput struct{ *pulumi.OutputState }

func (GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkloadbalancerForwardingruleTargetHealthCheck)(nil)).Elem()
}

func (o GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput) ToGetNetworkloadbalancerForwardingruleTargetHealthCheckOutput() GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput {
	return o
}

func (o GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput) ToGetNetworkloadbalancerForwardingruleTargetHealthCheckOutputWithContext(ctx context.Context) GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput {
	return o
}

// Check specifies whether the target VM's health is checked.
func (o GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput) Check() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerForwardingruleTargetHealthCheck) bool { return v.Check }).(pulumi.BoolOutput)
}

// CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
func (o GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput) CheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerForwardingruleTargetHealthCheck) int { return v.CheckInterval }).(pulumi.IntOutput)
}

// Maintenance specifies if a target VM should be marked as down, even if it is not.
func (o GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput) Maintenance() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkloadbalancerForwardingruleTargetHealthCheck) bool { return v.Maintenance }).(pulumi.BoolOutput)
}

type GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkloadbalancerForwardingruleTargetHealthCheck)(nil)).Elem()
}

func (o GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput) ToGetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput() GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput {
	return o
}

func (o GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput) ToGetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutputWithContext(ctx context.Context) GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput {
	return o
}

func (o GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput) Index(i pulumi.IntInput) GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkloadbalancerForwardingruleTargetHealthCheck {
		return vs[0].([]GetNetworkloadbalancerForwardingruleTargetHealthCheck)[vs[1].(int)]
	}).(GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput)
}

type GetNfsClusterConnection struct {
	// The ID of the datacenter where the Network File Storage cluster is located.
	DatacenterId string `pulumi:"datacenterId"`
	// The IP address and prefix of the Network File Storage cluster. The IP address can be either IPv4 or IPv6. The IP address has to be given with CIDR notation.
	IpAddress string `pulumi:"ipAddress"`
	// The Private LAN to which the Network File Storage cluster must be connected.
	Lan string `pulumi:"lan"`
}

// GetNfsClusterConnectionInput is an input type that accepts GetNfsClusterConnectionArgs and GetNfsClusterConnectionOutput values.
// You can construct a concrete instance of `GetNfsClusterConnectionInput` via:
//
//	GetNfsClusterConnectionArgs{...}
type GetNfsClusterConnectionInput interface {
	pulumi.Input

	ToGetNfsClusterConnectionOutput() GetNfsClusterConnectionOutput
	ToGetNfsClusterConnectionOutputWithContext(context.Context) GetNfsClusterConnectionOutput
}

type GetNfsClusterConnectionArgs struct {
	// The ID of the datacenter where the Network File Storage cluster is located.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// The IP address and prefix of the Network File Storage cluster. The IP address can be either IPv4 or IPv6. The IP address has to be given with CIDR notation.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The Private LAN to which the Network File Storage cluster must be connected.
	Lan pulumi.StringInput `pulumi:"lan"`
}

func (GetNfsClusterConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNfsClusterConnection)(nil)).Elem()
}

func (i GetNfsClusterConnectionArgs) ToGetNfsClusterConnectionOutput() GetNfsClusterConnectionOutput {
	return i.ToGetNfsClusterConnectionOutputWithContext(context.Background())
}

func (i GetNfsClusterConnectionArgs) ToGetNfsClusterConnectionOutputWithContext(ctx context.Context) GetNfsClusterConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNfsClusterConnectionOutput)
}

// GetNfsClusterConnectionArrayInput is an input type that accepts GetNfsClusterConnectionArray and GetNfsClusterConnectionArrayOutput values.
// You can construct a concrete instance of `GetNfsClusterConnectionArrayInput` via:
//
//	GetNfsClusterConnectionArray{ GetNfsClusterConnectionArgs{...} }
type GetNfsClusterConnectionArrayInput interface {
	pulumi.Input

	ToGetNfsClusterConnectionArrayOutput() GetNfsClusterConnectionArrayOutput
	ToGetNfsClusterConnectionArrayOutputWithContext(context.Context) GetNfsClusterConnectionArrayOutput
}

type GetNfsClusterConnectionArray []GetNfsClusterConnectionInput

func (GetNfsClusterConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNfsClusterConnection)(nil)).Elem()
}

func (i GetNfsClusterConnectionArray) ToGetNfsClusterConnectionArrayOutput() GetNfsClusterConnectionArrayOutput {
	return i.ToGetNfsClusterConnectionArrayOutputWithContext(context.Background())
}

func (i GetNfsClusterConnectionArray) ToGetNfsClusterConnectionArrayOutputWithContext(ctx context.Context) GetNfsClusterConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNfsClusterConnectionArrayOutput)
}

type GetNfsClusterConnectionOutput struct{ *pulumi.OutputState }

func (GetNfsClusterConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNfsClusterConnection)(nil)).Elem()
}

func (o GetNfsClusterConnectionOutput) ToGetNfsClusterConnectionOutput() GetNfsClusterConnectionOutput {
	return o
}

func (o GetNfsClusterConnectionOutput) ToGetNfsClusterConnectionOutputWithContext(ctx context.Context) GetNfsClusterConnectionOutput {
	return o
}

// The ID of the datacenter where the Network File Storage cluster is located.
func (o GetNfsClusterConnectionOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNfsClusterConnection) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// The IP address and prefix of the Network File Storage cluster. The IP address can be either IPv4 or IPv6. The IP address has to be given with CIDR notation.
func (o GetNfsClusterConnectionOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNfsClusterConnection) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The Private LAN to which the Network File Storage cluster must be connected.
func (o GetNfsClusterConnectionOutput) Lan() pulumi.StringOutput {
	return o.ApplyT(func(v GetNfsClusterConnection) string { return v.Lan }).(pulumi.StringOutput)
}

type GetNfsClusterConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetNfsClusterConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNfsClusterConnection)(nil)).Elem()
}

func (o GetNfsClusterConnectionArrayOutput) ToGetNfsClusterConnectionArrayOutput() GetNfsClusterConnectionArrayOutput {
	return o
}

func (o GetNfsClusterConnectionArrayOutput) ToGetNfsClusterConnectionArrayOutputWithContext(ctx context.Context) GetNfsClusterConnectionArrayOutput {
	return o
}

func (o GetNfsClusterConnectionArrayOutput) Index(i pulumi.IntInput) GetNfsClusterConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNfsClusterConnection {
		return vs[0].([]GetNfsClusterConnection)[vs[1].(int)]
	}).(GetNfsClusterConnectionOutput)
}

type GetNfsClusterNf struct {
	// The minimum supported version of the NFS cluster. Default is `4.2`
	MinVersion string `pulumi:"minVersion"`
}

// GetNfsClusterNfInput is an input type that accepts GetNfsClusterNfArgs and GetNfsClusterNfOutput values.
// You can construct a concrete instance of `GetNfsClusterNfInput` via:
//
//	GetNfsClusterNfArgs{...}
type GetNfsClusterNfInput interface {
	pulumi.Input

	ToGetNfsClusterNfOutput() GetNfsClusterNfOutput
	ToGetNfsClusterNfOutputWithContext(context.Context) GetNfsClusterNfOutput
}

type GetNfsClusterNfArgs struct {
	// The minimum supported version of the NFS cluster. Default is `4.2`
	MinVersion pulumi.StringInput `pulumi:"minVersion"`
}

func (GetNfsClusterNfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNfsClusterNf)(nil)).Elem()
}

func (i GetNfsClusterNfArgs) ToGetNfsClusterNfOutput() GetNfsClusterNfOutput {
	return i.ToGetNfsClusterNfOutputWithContext(context.Background())
}

func (i GetNfsClusterNfArgs) ToGetNfsClusterNfOutputWithContext(ctx context.Context) GetNfsClusterNfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNfsClusterNfOutput)
}

// GetNfsClusterNfArrayInput is an input type that accepts GetNfsClusterNfArray and GetNfsClusterNfArrayOutput values.
// You can construct a concrete instance of `GetNfsClusterNfArrayInput` via:
//
//	GetNfsClusterNfArray{ GetNfsClusterNfArgs{...} }
type GetNfsClusterNfArrayInput interface {
	pulumi.Input

	ToGetNfsClusterNfArrayOutput() GetNfsClusterNfArrayOutput
	ToGetNfsClusterNfArrayOutputWithContext(context.Context) GetNfsClusterNfArrayOutput
}

type GetNfsClusterNfArray []GetNfsClusterNfInput

func (GetNfsClusterNfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNfsClusterNf)(nil)).Elem()
}

func (i GetNfsClusterNfArray) ToGetNfsClusterNfArrayOutput() GetNfsClusterNfArrayOutput {
	return i.ToGetNfsClusterNfArrayOutputWithContext(context.Background())
}

func (i GetNfsClusterNfArray) ToGetNfsClusterNfArrayOutputWithContext(ctx context.Context) GetNfsClusterNfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNfsClusterNfArrayOutput)
}

type GetNfsClusterNfOutput struct{ *pulumi.OutputState }

func (GetNfsClusterNfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNfsClusterNf)(nil)).Elem()
}

func (o GetNfsClusterNfOutput) ToGetNfsClusterNfOutput() GetNfsClusterNfOutput {
	return o
}

func (o GetNfsClusterNfOutput) ToGetNfsClusterNfOutputWithContext(ctx context.Context) GetNfsClusterNfOutput {
	return o
}

// The minimum supported version of the NFS cluster. Default is `4.2`
func (o GetNfsClusterNfOutput) MinVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetNfsClusterNf) string { return v.MinVersion }).(pulumi.StringOutput)
}

type GetNfsClusterNfArrayOutput struct{ *pulumi.OutputState }

func (GetNfsClusterNfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNfsClusterNf)(nil)).Elem()
}

func (o GetNfsClusterNfArrayOutput) ToGetNfsClusterNfArrayOutput() GetNfsClusterNfArrayOutput {
	return o
}

func (o GetNfsClusterNfArrayOutput) ToGetNfsClusterNfArrayOutputWithContext(ctx context.Context) GetNfsClusterNfArrayOutput {
	return o
}

func (o GetNfsClusterNfArrayOutput) Index(i pulumi.IntInput) GetNfsClusterNfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNfsClusterNf {
		return vs[0].([]GetNfsClusterNf)[vs[1].(int)]
	}).(GetNfsClusterNfOutput)
}

type GetNfsShareClientGroup struct {
	// Optional description for the clients groups.
	Description string `pulumi:"description"`
	// A singular host allowed to connect to the share. The host can be specified as IP address and can be either IPv4 or IPv6.
	Hosts []string `pulumi:"hosts"`
	// The allowed host or network to which the export is being shared. The IP address can be either IPv4 or IPv6 and has to be given with CIDR notation.
	IpNetworks []string `pulumi:"ipNetworks"`
	// The NFS configuration for the client group. Each NFS configuration supports the following:
	Nfs []GetNfsShareClientGroupNf `pulumi:"nfs"`
}

// GetNfsShareClientGroupInput is an input type that accepts GetNfsShareClientGroupArgs and GetNfsShareClientGroupOutput values.
// You can construct a concrete instance of `GetNfsShareClientGroupInput` via:
//
//	GetNfsShareClientGroupArgs{...}
type GetNfsShareClientGroupInput interface {
	pulumi.Input

	ToGetNfsShareClientGroupOutput() GetNfsShareClientGroupOutput
	ToGetNfsShareClientGroupOutputWithContext(context.Context) GetNfsShareClientGroupOutput
}

type GetNfsShareClientGroupArgs struct {
	// Optional description for the clients groups.
	Description pulumi.StringInput `pulumi:"description"`
	// A singular host allowed to connect to the share. The host can be specified as IP address and can be either IPv4 or IPv6.
	Hosts pulumi.StringArrayInput `pulumi:"hosts"`
	// The allowed host or network to which the export is being shared. The IP address can be either IPv4 or IPv6 and has to be given with CIDR notation.
	IpNetworks pulumi.StringArrayInput `pulumi:"ipNetworks"`
	// The NFS configuration for the client group. Each NFS configuration supports the following:
	Nfs GetNfsShareClientGroupNfArrayInput `pulumi:"nfs"`
}

func (GetNfsShareClientGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNfsShareClientGroup)(nil)).Elem()
}

func (i GetNfsShareClientGroupArgs) ToGetNfsShareClientGroupOutput() GetNfsShareClientGroupOutput {
	return i.ToGetNfsShareClientGroupOutputWithContext(context.Background())
}

func (i GetNfsShareClientGroupArgs) ToGetNfsShareClientGroupOutputWithContext(ctx context.Context) GetNfsShareClientGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNfsShareClientGroupOutput)
}

// GetNfsShareClientGroupArrayInput is an input type that accepts GetNfsShareClientGroupArray and GetNfsShareClientGroupArrayOutput values.
// You can construct a concrete instance of `GetNfsShareClientGroupArrayInput` via:
//
//	GetNfsShareClientGroupArray{ GetNfsShareClientGroupArgs{...} }
type GetNfsShareClientGroupArrayInput interface {
	pulumi.Input

	ToGetNfsShareClientGroupArrayOutput() GetNfsShareClientGroupArrayOutput
	ToGetNfsShareClientGroupArrayOutputWithContext(context.Context) GetNfsShareClientGroupArrayOutput
}

type GetNfsShareClientGroupArray []GetNfsShareClientGroupInput

func (GetNfsShareClientGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNfsShareClientGroup)(nil)).Elem()
}

func (i GetNfsShareClientGroupArray) ToGetNfsShareClientGroupArrayOutput() GetNfsShareClientGroupArrayOutput {
	return i.ToGetNfsShareClientGroupArrayOutputWithContext(context.Background())
}

func (i GetNfsShareClientGroupArray) ToGetNfsShareClientGroupArrayOutputWithContext(ctx context.Context) GetNfsShareClientGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNfsShareClientGroupArrayOutput)
}

type GetNfsShareClientGroupOutput struct{ *pulumi.OutputState }

func (GetNfsShareClientGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNfsShareClientGroup)(nil)).Elem()
}

func (o GetNfsShareClientGroupOutput) ToGetNfsShareClientGroupOutput() GetNfsShareClientGroupOutput {
	return o
}

func (o GetNfsShareClientGroupOutput) ToGetNfsShareClientGroupOutputWithContext(ctx context.Context) GetNfsShareClientGroupOutput {
	return o
}

// Optional description for the clients groups.
func (o GetNfsShareClientGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNfsShareClientGroup) string { return v.Description }).(pulumi.StringOutput)
}

// A singular host allowed to connect to the share. The host can be specified as IP address and can be either IPv4 or IPv6.
func (o GetNfsShareClientGroupOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNfsShareClientGroup) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// The allowed host or network to which the export is being shared. The IP address can be either IPv4 or IPv6 and has to be given with CIDR notation.
func (o GetNfsShareClientGroupOutput) IpNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNfsShareClientGroup) []string { return v.IpNetworks }).(pulumi.StringArrayOutput)
}

// The NFS configuration for the client group. Each NFS configuration supports the following:
func (o GetNfsShareClientGroupOutput) Nfs() GetNfsShareClientGroupNfArrayOutput {
	return o.ApplyT(func(v GetNfsShareClientGroup) []GetNfsShareClientGroupNf { return v.Nfs }).(GetNfsShareClientGroupNfArrayOutput)
}

type GetNfsShareClientGroupArrayOutput struct{ *pulumi.OutputState }

func (GetNfsShareClientGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNfsShareClientGroup)(nil)).Elem()
}

func (o GetNfsShareClientGroupArrayOutput) ToGetNfsShareClientGroupArrayOutput() GetNfsShareClientGroupArrayOutput {
	return o
}

func (o GetNfsShareClientGroupArrayOutput) ToGetNfsShareClientGroupArrayOutputWithContext(ctx context.Context) GetNfsShareClientGroupArrayOutput {
	return o
}

func (o GetNfsShareClientGroupArrayOutput) Index(i pulumi.IntInput) GetNfsShareClientGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNfsShareClientGroup {
		return vs[0].([]GetNfsShareClientGroup)[vs[1].(int)]
	}).(GetNfsShareClientGroupOutput)
}

type GetNfsShareClientGroupNf struct {
	// The squash mode for the export. The squash mode can be: none - No squash mode. no mapping, root-anonymous - Map root user to anonymous uid, all-anonymous - Map all users to anonymous uid.
	Squash string `pulumi:"squash"`
}

// GetNfsShareClientGroupNfInput is an input type that accepts GetNfsShareClientGroupNfArgs and GetNfsShareClientGroupNfOutput values.
// You can construct a concrete instance of `GetNfsShareClientGroupNfInput` via:
//
//	GetNfsShareClientGroupNfArgs{...}
type GetNfsShareClientGroupNfInput interface {
	pulumi.Input

	ToGetNfsShareClientGroupNfOutput() GetNfsShareClientGroupNfOutput
	ToGetNfsShareClientGroupNfOutputWithContext(context.Context) GetNfsShareClientGroupNfOutput
}

type GetNfsShareClientGroupNfArgs struct {
	// The squash mode for the export. The squash mode can be: none - No squash mode. no mapping, root-anonymous - Map root user to anonymous uid, all-anonymous - Map all users to anonymous uid.
	Squash pulumi.StringInput `pulumi:"squash"`
}

func (GetNfsShareClientGroupNfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNfsShareClientGroupNf)(nil)).Elem()
}

func (i GetNfsShareClientGroupNfArgs) ToGetNfsShareClientGroupNfOutput() GetNfsShareClientGroupNfOutput {
	return i.ToGetNfsShareClientGroupNfOutputWithContext(context.Background())
}

func (i GetNfsShareClientGroupNfArgs) ToGetNfsShareClientGroupNfOutputWithContext(ctx context.Context) GetNfsShareClientGroupNfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNfsShareClientGroupNfOutput)
}

// GetNfsShareClientGroupNfArrayInput is an input type that accepts GetNfsShareClientGroupNfArray and GetNfsShareClientGroupNfArrayOutput values.
// You can construct a concrete instance of `GetNfsShareClientGroupNfArrayInput` via:
//
//	GetNfsShareClientGroupNfArray{ GetNfsShareClientGroupNfArgs{...} }
type GetNfsShareClientGroupNfArrayInput interface {
	pulumi.Input

	ToGetNfsShareClientGroupNfArrayOutput() GetNfsShareClientGroupNfArrayOutput
	ToGetNfsShareClientGroupNfArrayOutputWithContext(context.Context) GetNfsShareClientGroupNfArrayOutput
}

type GetNfsShareClientGroupNfArray []GetNfsShareClientGroupNfInput

func (GetNfsShareClientGroupNfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNfsShareClientGroupNf)(nil)).Elem()
}

func (i GetNfsShareClientGroupNfArray) ToGetNfsShareClientGroupNfArrayOutput() GetNfsShareClientGroupNfArrayOutput {
	return i.ToGetNfsShareClientGroupNfArrayOutputWithContext(context.Background())
}

func (i GetNfsShareClientGroupNfArray) ToGetNfsShareClientGroupNfArrayOutputWithContext(ctx context.Context) GetNfsShareClientGroupNfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNfsShareClientGroupNfArrayOutput)
}

type GetNfsShareClientGroupNfOutput struct{ *pulumi.OutputState }

func (GetNfsShareClientGroupNfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNfsShareClientGroupNf)(nil)).Elem()
}

func (o GetNfsShareClientGroupNfOutput) ToGetNfsShareClientGroupNfOutput() GetNfsShareClientGroupNfOutput {
	return o
}

func (o GetNfsShareClientGroupNfOutput) ToGetNfsShareClientGroupNfOutputWithContext(ctx context.Context) GetNfsShareClientGroupNfOutput {
	return o
}

// The squash mode for the export. The squash mode can be: none - No squash mode. no mapping, root-anonymous - Map root user to anonymous uid, all-anonymous - Map all users to anonymous uid.
func (o GetNfsShareClientGroupNfOutput) Squash() pulumi.StringOutput {
	return o.ApplyT(func(v GetNfsShareClientGroupNf) string { return v.Squash }).(pulumi.StringOutput)
}

type GetNfsShareClientGroupNfArrayOutput struct{ *pulumi.OutputState }

func (GetNfsShareClientGroupNfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNfsShareClientGroupNf)(nil)).Elem()
}

func (o GetNfsShareClientGroupNfArrayOutput) ToGetNfsShareClientGroupNfArrayOutput() GetNfsShareClientGroupNfArrayOutput {
	return o
}

func (o GetNfsShareClientGroupNfArrayOutput) ToGetNfsShareClientGroupNfArrayOutputWithContext(ctx context.Context) GetNfsShareClientGroupNfArrayOutput {
	return o
}

func (o GetNfsShareClientGroupNfArrayOutput) Index(i pulumi.IntInput) GetNfsShareClientGroupNfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNfsShareClientGroupNf {
		return vs[0].([]GetNfsShareClientGroupNf)[vs[1].(int)]
	}).(GetNfsShareClientGroupNfOutput)
}

type GetNicFlowlog struct {
	// Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL.
	Action string `pulumi:"action"`
	// Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist.
	Bucket string `pulumi:"bucket"`
	// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL.
	Direction string `pulumi:"direction"`
	// ID of the nic you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided.
	// If none, are provided, the datasource will return an error.
	Id string `pulumi:"id"`
	// [string] The name of the LAN.
	Name string `pulumi:"name"`
}

// GetNicFlowlogInput is an input type that accepts GetNicFlowlogArgs and GetNicFlowlogOutput values.
// You can construct a concrete instance of `GetNicFlowlogInput` via:
//
//	GetNicFlowlogArgs{...}
type GetNicFlowlogInput interface {
	pulumi.Input

	ToGetNicFlowlogOutput() GetNicFlowlogOutput
	ToGetNicFlowlogOutputWithContext(context.Context) GetNicFlowlogOutput
}

type GetNicFlowlogArgs struct {
	// Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL.
	Action pulumi.StringInput `pulumi:"action"`
	// Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL.
	Direction pulumi.StringInput `pulumi:"direction"`
	// ID of the nic you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided.
	// If none, are provided, the datasource will return an error.
	Id pulumi.StringInput `pulumi:"id"`
	// [string] The name of the LAN.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetNicFlowlogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicFlowlog)(nil)).Elem()
}

func (i GetNicFlowlogArgs) ToGetNicFlowlogOutput() GetNicFlowlogOutput {
	return i.ToGetNicFlowlogOutputWithContext(context.Background())
}

func (i GetNicFlowlogArgs) ToGetNicFlowlogOutputWithContext(ctx context.Context) GetNicFlowlogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicFlowlogOutput)
}

// GetNicFlowlogArrayInput is an input type that accepts GetNicFlowlogArray and GetNicFlowlogArrayOutput values.
// You can construct a concrete instance of `GetNicFlowlogArrayInput` via:
//
//	GetNicFlowlogArray{ GetNicFlowlogArgs{...} }
type GetNicFlowlogArrayInput interface {
	pulumi.Input

	ToGetNicFlowlogArrayOutput() GetNicFlowlogArrayOutput
	ToGetNicFlowlogArrayOutputWithContext(context.Context) GetNicFlowlogArrayOutput
}

type GetNicFlowlogArray []GetNicFlowlogInput

func (GetNicFlowlogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicFlowlog)(nil)).Elem()
}

func (i GetNicFlowlogArray) ToGetNicFlowlogArrayOutput() GetNicFlowlogArrayOutput {
	return i.ToGetNicFlowlogArrayOutputWithContext(context.Background())
}

func (i GetNicFlowlogArray) ToGetNicFlowlogArrayOutputWithContext(ctx context.Context) GetNicFlowlogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNicFlowlogArrayOutput)
}

type GetNicFlowlogOutput struct{ *pulumi.OutputState }

func (GetNicFlowlogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNicFlowlog)(nil)).Elem()
}

func (o GetNicFlowlogOutput) ToGetNicFlowlogOutput() GetNicFlowlogOutput {
	return o
}

func (o GetNicFlowlogOutput) ToGetNicFlowlogOutputWithContext(ctx context.Context) GetNicFlowlogOutput {
	return o
}

// Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL.
func (o GetNicFlowlogOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicFlowlog) string { return v.Action }).(pulumi.StringOutput)
}

// Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist.
func (o GetNicFlowlogOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicFlowlog) string { return v.Bucket }).(pulumi.StringOutput)
}

// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL.
func (o GetNicFlowlogOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicFlowlog) string { return v.Direction }).(pulumi.StringOutput)
}

// ID of the nic you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided.
// If none, are provided, the datasource will return an error.
func (o GetNicFlowlogOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicFlowlog) string { return v.Id }).(pulumi.StringOutput)
}

// [string] The name of the LAN.
func (o GetNicFlowlogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNicFlowlog) string { return v.Name }).(pulumi.StringOutput)
}

type GetNicFlowlogArrayOutput struct{ *pulumi.OutputState }

func (GetNicFlowlogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNicFlowlog)(nil)).Elem()
}

func (o GetNicFlowlogArrayOutput) ToGetNicFlowlogArrayOutput() GetNicFlowlogArrayOutput {
	return o
}

func (o GetNicFlowlogArrayOutput) ToGetNicFlowlogArrayOutputWithContext(ctx context.Context) GetNicFlowlogArrayOutput {
	return o
}

func (o GetNicFlowlogArrayOutput) Index(i pulumi.IntInput) GetNicFlowlogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNicFlowlog {
		return vs[0].([]GetNicFlowlog)[vs[1].(int)]
	}).(GetNicFlowlogOutput)
}

type GetPgBackupsClusterBackup struct {
	// The unique ID of the cluster
	ClusterId string `pulumi:"clusterId"`
	// The oldest available timestamp to which you can restore.
	EarliestRecoveryTargetTime string `pulumi:"earliestRecoveryTargetTime"`
	// The unique ID of the resource.
	Id string `pulumi:"id"`
	// Whether a cluster currently backs up data to this backup.
	IsActive bool `pulumi:"isActive"`
	// The Object Storage location where the backups will be stored.
	Location string `pulumi:"location"`
	// Metadata of the resource
	Metadatas []GetPgBackupsClusterBackupMetadata `pulumi:"metadatas"`
	// Size of all base backups including the wal size in MB.
	Size int    `pulumi:"size"`
	Type string `pulumi:"type"`
	// The PostgreSQL version this backup was created from.
	Version string `pulumi:"version"`
}

// GetPgBackupsClusterBackupInput is an input type that accepts GetPgBackupsClusterBackupArgs and GetPgBackupsClusterBackupOutput values.
// You can construct a concrete instance of `GetPgBackupsClusterBackupInput` via:
//
//	GetPgBackupsClusterBackupArgs{...}
type GetPgBackupsClusterBackupInput interface {
	pulumi.Input

	ToGetPgBackupsClusterBackupOutput() GetPgBackupsClusterBackupOutput
	ToGetPgBackupsClusterBackupOutputWithContext(context.Context) GetPgBackupsClusterBackupOutput
}

type GetPgBackupsClusterBackupArgs struct {
	// The unique ID of the cluster
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The oldest available timestamp to which you can restore.
	EarliestRecoveryTargetTime pulumi.StringInput `pulumi:"earliestRecoveryTargetTime"`
	// The unique ID of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether a cluster currently backs up data to this backup.
	IsActive pulumi.BoolInput `pulumi:"isActive"`
	// The Object Storage location where the backups will be stored.
	Location pulumi.StringInput `pulumi:"location"`
	// Metadata of the resource
	Metadatas GetPgBackupsClusterBackupMetadataArrayInput `pulumi:"metadatas"`
	// Size of all base backups including the wal size in MB.
	Size pulumi.IntInput    `pulumi:"size"`
	Type pulumi.StringInput `pulumi:"type"`
	// The PostgreSQL version this backup was created from.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetPgBackupsClusterBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgBackupsClusterBackup)(nil)).Elem()
}

func (i GetPgBackupsClusterBackupArgs) ToGetPgBackupsClusterBackupOutput() GetPgBackupsClusterBackupOutput {
	return i.ToGetPgBackupsClusterBackupOutputWithContext(context.Background())
}

func (i GetPgBackupsClusterBackupArgs) ToGetPgBackupsClusterBackupOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgBackupsClusterBackupOutput)
}

// GetPgBackupsClusterBackupArrayInput is an input type that accepts GetPgBackupsClusterBackupArray and GetPgBackupsClusterBackupArrayOutput values.
// You can construct a concrete instance of `GetPgBackupsClusterBackupArrayInput` via:
//
//	GetPgBackupsClusterBackupArray{ GetPgBackupsClusterBackupArgs{...} }
type GetPgBackupsClusterBackupArrayInput interface {
	pulumi.Input

	ToGetPgBackupsClusterBackupArrayOutput() GetPgBackupsClusterBackupArrayOutput
	ToGetPgBackupsClusterBackupArrayOutputWithContext(context.Context) GetPgBackupsClusterBackupArrayOutput
}

type GetPgBackupsClusterBackupArray []GetPgBackupsClusterBackupInput

func (GetPgBackupsClusterBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgBackupsClusterBackup)(nil)).Elem()
}

func (i GetPgBackupsClusterBackupArray) ToGetPgBackupsClusterBackupArrayOutput() GetPgBackupsClusterBackupArrayOutput {
	return i.ToGetPgBackupsClusterBackupArrayOutputWithContext(context.Background())
}

func (i GetPgBackupsClusterBackupArray) ToGetPgBackupsClusterBackupArrayOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgBackupsClusterBackupArrayOutput)
}

type GetPgBackupsClusterBackupOutput struct{ *pulumi.OutputState }

func (GetPgBackupsClusterBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgBackupsClusterBackup)(nil)).Elem()
}

func (o GetPgBackupsClusterBackupOutput) ToGetPgBackupsClusterBackupOutput() GetPgBackupsClusterBackupOutput {
	return o
}

func (o GetPgBackupsClusterBackupOutput) ToGetPgBackupsClusterBackupOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupOutput {
	return o
}

// The unique ID of the cluster
func (o GetPgBackupsClusterBackupOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The oldest available timestamp to which you can restore.
func (o GetPgBackupsClusterBackupOutput) EarliestRecoveryTargetTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) string { return v.EarliestRecoveryTargetTime }).(pulumi.StringOutput)
}

// The unique ID of the resource.
func (o GetPgBackupsClusterBackupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) string { return v.Id }).(pulumi.StringOutput)
}

// Whether a cluster currently backs up data to this backup.
func (o GetPgBackupsClusterBackupOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) bool { return v.IsActive }).(pulumi.BoolOutput)
}

// The Object Storage location where the backups will be stored.
func (o GetPgBackupsClusterBackupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) string { return v.Location }).(pulumi.StringOutput)
}

// Metadata of the resource
func (o GetPgBackupsClusterBackupOutput) Metadatas() GetPgBackupsClusterBackupMetadataArrayOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) []GetPgBackupsClusterBackupMetadata { return v.Metadatas }).(GetPgBackupsClusterBackupMetadataArrayOutput)
}

// Size of all base backups including the wal size in MB.
func (o GetPgBackupsClusterBackupOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetPgBackupsClusterBackupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) string { return v.Type }).(pulumi.StringOutput)
}

// The PostgreSQL version this backup was created from.
func (o GetPgBackupsClusterBackupOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) string { return v.Version }).(pulumi.StringOutput)
}

type GetPgBackupsClusterBackupArrayOutput struct{ *pulumi.OutputState }

func (GetPgBackupsClusterBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgBackupsClusterBackup)(nil)).Elem()
}

func (o GetPgBackupsClusterBackupArrayOutput) ToGetPgBackupsClusterBackupArrayOutput() GetPgBackupsClusterBackupArrayOutput {
	return o
}

func (o GetPgBackupsClusterBackupArrayOutput) ToGetPgBackupsClusterBackupArrayOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupArrayOutput {
	return o
}

func (o GetPgBackupsClusterBackupArrayOutput) Index(i pulumi.IntInput) GetPgBackupsClusterBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgBackupsClusterBackup {
		return vs[0].([]GetPgBackupsClusterBackup)[vs[1].(int)]
	}).(GetPgBackupsClusterBackupOutput)
}

type GetPgBackupsClusterBackupMetadata struct {
	// The ISO 8601 creation timestamp.
	CreatedDate string `pulumi:"createdDate"`
}

// GetPgBackupsClusterBackupMetadataInput is an input type that accepts GetPgBackupsClusterBackupMetadataArgs and GetPgBackupsClusterBackupMetadataOutput values.
// You can construct a concrete instance of `GetPgBackupsClusterBackupMetadataInput` via:
//
//	GetPgBackupsClusterBackupMetadataArgs{...}
type GetPgBackupsClusterBackupMetadataInput interface {
	pulumi.Input

	ToGetPgBackupsClusterBackupMetadataOutput() GetPgBackupsClusterBackupMetadataOutput
	ToGetPgBackupsClusterBackupMetadataOutputWithContext(context.Context) GetPgBackupsClusterBackupMetadataOutput
}

type GetPgBackupsClusterBackupMetadataArgs struct {
	// The ISO 8601 creation timestamp.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
}

func (GetPgBackupsClusterBackupMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgBackupsClusterBackupMetadata)(nil)).Elem()
}

func (i GetPgBackupsClusterBackupMetadataArgs) ToGetPgBackupsClusterBackupMetadataOutput() GetPgBackupsClusterBackupMetadataOutput {
	return i.ToGetPgBackupsClusterBackupMetadataOutputWithContext(context.Background())
}

func (i GetPgBackupsClusterBackupMetadataArgs) ToGetPgBackupsClusterBackupMetadataOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgBackupsClusterBackupMetadataOutput)
}

// GetPgBackupsClusterBackupMetadataArrayInput is an input type that accepts GetPgBackupsClusterBackupMetadataArray and GetPgBackupsClusterBackupMetadataArrayOutput values.
// You can construct a concrete instance of `GetPgBackupsClusterBackupMetadataArrayInput` via:
//
//	GetPgBackupsClusterBackupMetadataArray{ GetPgBackupsClusterBackupMetadataArgs{...} }
type GetPgBackupsClusterBackupMetadataArrayInput interface {
	pulumi.Input

	ToGetPgBackupsClusterBackupMetadataArrayOutput() GetPgBackupsClusterBackupMetadataArrayOutput
	ToGetPgBackupsClusterBackupMetadataArrayOutputWithContext(context.Context) GetPgBackupsClusterBackupMetadataArrayOutput
}

type GetPgBackupsClusterBackupMetadataArray []GetPgBackupsClusterBackupMetadataInput

func (GetPgBackupsClusterBackupMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgBackupsClusterBackupMetadata)(nil)).Elem()
}

func (i GetPgBackupsClusterBackupMetadataArray) ToGetPgBackupsClusterBackupMetadataArrayOutput() GetPgBackupsClusterBackupMetadataArrayOutput {
	return i.ToGetPgBackupsClusterBackupMetadataArrayOutputWithContext(context.Background())
}

func (i GetPgBackupsClusterBackupMetadataArray) ToGetPgBackupsClusterBackupMetadataArrayOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgBackupsClusterBackupMetadataArrayOutput)
}

type GetPgBackupsClusterBackupMetadataOutput struct{ *pulumi.OutputState }

func (GetPgBackupsClusterBackupMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgBackupsClusterBackupMetadata)(nil)).Elem()
}

func (o GetPgBackupsClusterBackupMetadataOutput) ToGetPgBackupsClusterBackupMetadataOutput() GetPgBackupsClusterBackupMetadataOutput {
	return o
}

func (o GetPgBackupsClusterBackupMetadataOutput) ToGetPgBackupsClusterBackupMetadataOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupMetadataOutput {
	return o
}

// The ISO 8601 creation timestamp.
func (o GetPgBackupsClusterBackupMetadataOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackupMetadata) string { return v.CreatedDate }).(pulumi.StringOutput)
}

type GetPgBackupsClusterBackupMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetPgBackupsClusterBackupMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgBackupsClusterBackupMetadata)(nil)).Elem()
}

func (o GetPgBackupsClusterBackupMetadataArrayOutput) ToGetPgBackupsClusterBackupMetadataArrayOutput() GetPgBackupsClusterBackupMetadataArrayOutput {
	return o
}

func (o GetPgBackupsClusterBackupMetadataArrayOutput) ToGetPgBackupsClusterBackupMetadataArrayOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupMetadataArrayOutput {
	return o
}

func (o GetPgBackupsClusterBackupMetadataArrayOutput) Index(i pulumi.IntInput) GetPgBackupsClusterBackupMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgBackupsClusterBackupMetadata {
		return vs[0].([]GetPgBackupsClusterBackupMetadata)[vs[1].(int)]
	}).(GetPgBackupsClusterBackupMetadataOutput)
}

type GetPgClusterConnection struct {
	// The IP and subnet for the database. Note the following unavailable IP ranges: 10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24
	Cidr string `pulumi:"cidr"`
	// The datacenter to connect your cluster to.
	DatacenterId string `pulumi:"datacenterId"`
	// The LAN to connect your cluster to.
	LanId string `pulumi:"lanId"`
}

// GetPgClusterConnectionInput is an input type that accepts GetPgClusterConnectionArgs and GetPgClusterConnectionOutput values.
// You can construct a concrete instance of `GetPgClusterConnectionInput` via:
//
//	GetPgClusterConnectionArgs{...}
type GetPgClusterConnectionInput interface {
	pulumi.Input

	ToGetPgClusterConnectionOutput() GetPgClusterConnectionOutput
	ToGetPgClusterConnectionOutputWithContext(context.Context) GetPgClusterConnectionOutput
}

type GetPgClusterConnectionArgs struct {
	// The IP and subnet for the database. Note the following unavailable IP ranges: 10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// The datacenter to connect your cluster to.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// The LAN to connect your cluster to.
	LanId pulumi.StringInput `pulumi:"lanId"`
}

func (GetPgClusterConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgClusterConnection)(nil)).Elem()
}

func (i GetPgClusterConnectionArgs) ToGetPgClusterConnectionOutput() GetPgClusterConnectionOutput {
	return i.ToGetPgClusterConnectionOutputWithContext(context.Background())
}

func (i GetPgClusterConnectionArgs) ToGetPgClusterConnectionOutputWithContext(ctx context.Context) GetPgClusterConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgClusterConnectionOutput)
}

// GetPgClusterConnectionArrayInput is an input type that accepts GetPgClusterConnectionArray and GetPgClusterConnectionArrayOutput values.
// You can construct a concrete instance of `GetPgClusterConnectionArrayInput` via:
//
//	GetPgClusterConnectionArray{ GetPgClusterConnectionArgs{...} }
type GetPgClusterConnectionArrayInput interface {
	pulumi.Input

	ToGetPgClusterConnectionArrayOutput() GetPgClusterConnectionArrayOutput
	ToGetPgClusterConnectionArrayOutputWithContext(context.Context) GetPgClusterConnectionArrayOutput
}

type GetPgClusterConnectionArray []GetPgClusterConnectionInput

func (GetPgClusterConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgClusterConnection)(nil)).Elem()
}

func (i GetPgClusterConnectionArray) ToGetPgClusterConnectionArrayOutput() GetPgClusterConnectionArrayOutput {
	return i.ToGetPgClusterConnectionArrayOutputWithContext(context.Background())
}

func (i GetPgClusterConnectionArray) ToGetPgClusterConnectionArrayOutputWithContext(ctx context.Context) GetPgClusterConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgClusterConnectionArrayOutput)
}

type GetPgClusterConnectionOutput struct{ *pulumi.OutputState }

func (GetPgClusterConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgClusterConnection)(nil)).Elem()
}

func (o GetPgClusterConnectionOutput) ToGetPgClusterConnectionOutput() GetPgClusterConnectionOutput {
	return o
}

func (o GetPgClusterConnectionOutput) ToGetPgClusterConnectionOutputWithContext(ctx context.Context) GetPgClusterConnectionOutput {
	return o
}

// The IP and subnet for the database. Note the following unavailable IP ranges: 10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24
func (o GetPgClusterConnectionOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgClusterConnection) string { return v.Cidr }).(pulumi.StringOutput)
}

// The datacenter to connect your cluster to.
func (o GetPgClusterConnectionOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgClusterConnection) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// The LAN to connect your cluster to.
func (o GetPgClusterConnectionOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgClusterConnection) string { return v.LanId }).(pulumi.StringOutput)
}

type GetPgClusterConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetPgClusterConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgClusterConnection)(nil)).Elem()
}

func (o GetPgClusterConnectionArrayOutput) ToGetPgClusterConnectionArrayOutput() GetPgClusterConnectionArrayOutput {
	return o
}

func (o GetPgClusterConnectionArrayOutput) ToGetPgClusterConnectionArrayOutputWithContext(ctx context.Context) GetPgClusterConnectionArrayOutput {
	return o
}

func (o GetPgClusterConnectionArrayOutput) Index(i pulumi.IntInput) GetPgClusterConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgClusterConnection {
		return vs[0].([]GetPgClusterConnection)[vs[1].(int)]
	}).(GetPgClusterConnectionOutput)
}

type GetPgClusterConnectionPooler struct {
	Enabled bool `pulumi:"enabled"`
	// Represents different modes of connection pooling for the connection pooler
	PoolMode string `pulumi:"poolMode"`
}

// GetPgClusterConnectionPoolerInput is an input type that accepts GetPgClusterConnectionPoolerArgs and GetPgClusterConnectionPoolerOutput values.
// You can construct a concrete instance of `GetPgClusterConnectionPoolerInput` via:
//
//	GetPgClusterConnectionPoolerArgs{...}
type GetPgClusterConnectionPoolerInput interface {
	pulumi.Input

	ToGetPgClusterConnectionPoolerOutput() GetPgClusterConnectionPoolerOutput
	ToGetPgClusterConnectionPoolerOutputWithContext(context.Context) GetPgClusterConnectionPoolerOutput
}

type GetPgClusterConnectionPoolerArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Represents different modes of connection pooling for the connection pooler
	PoolMode pulumi.StringInput `pulumi:"poolMode"`
}

func (GetPgClusterConnectionPoolerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgClusterConnectionPooler)(nil)).Elem()
}

func (i GetPgClusterConnectionPoolerArgs) ToGetPgClusterConnectionPoolerOutput() GetPgClusterConnectionPoolerOutput {
	return i.ToGetPgClusterConnectionPoolerOutputWithContext(context.Background())
}

func (i GetPgClusterConnectionPoolerArgs) ToGetPgClusterConnectionPoolerOutputWithContext(ctx context.Context) GetPgClusterConnectionPoolerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgClusterConnectionPoolerOutput)
}

// GetPgClusterConnectionPoolerArrayInput is an input type that accepts GetPgClusterConnectionPoolerArray and GetPgClusterConnectionPoolerArrayOutput values.
// You can construct a concrete instance of `GetPgClusterConnectionPoolerArrayInput` via:
//
//	GetPgClusterConnectionPoolerArray{ GetPgClusterConnectionPoolerArgs{...} }
type GetPgClusterConnectionPoolerArrayInput interface {
	pulumi.Input

	ToGetPgClusterConnectionPoolerArrayOutput() GetPgClusterConnectionPoolerArrayOutput
	ToGetPgClusterConnectionPoolerArrayOutputWithContext(context.Context) GetPgClusterConnectionPoolerArrayOutput
}

type GetPgClusterConnectionPoolerArray []GetPgClusterConnectionPoolerInput

func (GetPgClusterConnectionPoolerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgClusterConnectionPooler)(nil)).Elem()
}

func (i GetPgClusterConnectionPoolerArray) ToGetPgClusterConnectionPoolerArrayOutput() GetPgClusterConnectionPoolerArrayOutput {
	return i.ToGetPgClusterConnectionPoolerArrayOutputWithContext(context.Background())
}

func (i GetPgClusterConnectionPoolerArray) ToGetPgClusterConnectionPoolerArrayOutputWithContext(ctx context.Context) GetPgClusterConnectionPoolerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgClusterConnectionPoolerArrayOutput)
}

type GetPgClusterConnectionPoolerOutput struct{ *pulumi.OutputState }

func (GetPgClusterConnectionPoolerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgClusterConnectionPooler)(nil)).Elem()
}

func (o GetPgClusterConnectionPoolerOutput) ToGetPgClusterConnectionPoolerOutput() GetPgClusterConnectionPoolerOutput {
	return o
}

func (o GetPgClusterConnectionPoolerOutput) ToGetPgClusterConnectionPoolerOutputWithContext(ctx context.Context) GetPgClusterConnectionPoolerOutput {
	return o
}

func (o GetPgClusterConnectionPoolerOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPgClusterConnectionPooler) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Represents different modes of connection pooling for the connection pooler
func (o GetPgClusterConnectionPoolerOutput) PoolMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgClusterConnectionPooler) string { return v.PoolMode }).(pulumi.StringOutput)
}

type GetPgClusterConnectionPoolerArrayOutput struct{ *pulumi.OutputState }

func (GetPgClusterConnectionPoolerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgClusterConnectionPooler)(nil)).Elem()
}

func (o GetPgClusterConnectionPoolerArrayOutput) ToGetPgClusterConnectionPoolerArrayOutput() GetPgClusterConnectionPoolerArrayOutput {
	return o
}

func (o GetPgClusterConnectionPoolerArrayOutput) ToGetPgClusterConnectionPoolerArrayOutputWithContext(ctx context.Context) GetPgClusterConnectionPoolerArrayOutput {
	return o
}

func (o GetPgClusterConnectionPoolerArrayOutput) Index(i pulumi.IntInput) GetPgClusterConnectionPoolerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgClusterConnectionPooler {
		return vs[0].([]GetPgClusterConnectionPooler)[vs[1].(int)]
	}).(GetPgClusterConnectionPoolerOutput)
}

type GetPgClusterFromBackup struct {
	// The unique ID of the backup you want to restore.
	BackupId string `pulumi:"backupId"`
	// If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp. If empty, the backup will be applied completely.
	RecoveryTargetTime string `pulumi:"recoveryTargetTime"`
}

// GetPgClusterFromBackupInput is an input type that accepts GetPgClusterFromBackupArgs and GetPgClusterFromBackupOutput values.
// You can construct a concrete instance of `GetPgClusterFromBackupInput` via:
//
//	GetPgClusterFromBackupArgs{...}
type GetPgClusterFromBackupInput interface {
	pulumi.Input

	ToGetPgClusterFromBackupOutput() GetPgClusterFromBackupOutput
	ToGetPgClusterFromBackupOutputWithContext(context.Context) GetPgClusterFromBackupOutput
}

type GetPgClusterFromBackupArgs struct {
	// The unique ID of the backup you want to restore.
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp. If empty, the backup will be applied completely.
	RecoveryTargetTime pulumi.StringInput `pulumi:"recoveryTargetTime"`
}

func (GetPgClusterFromBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgClusterFromBackup)(nil)).Elem()
}

func (i GetPgClusterFromBackupArgs) ToGetPgClusterFromBackupOutput() GetPgClusterFromBackupOutput {
	return i.ToGetPgClusterFromBackupOutputWithContext(context.Background())
}

func (i GetPgClusterFromBackupArgs) ToGetPgClusterFromBackupOutputWithContext(ctx context.Context) GetPgClusterFromBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgClusterFromBackupOutput)
}

// GetPgClusterFromBackupArrayInput is an input type that accepts GetPgClusterFromBackupArray and GetPgClusterFromBackupArrayOutput values.
// You can construct a concrete instance of `GetPgClusterFromBackupArrayInput` via:
//
//	GetPgClusterFromBackupArray{ GetPgClusterFromBackupArgs{...} }
type GetPgClusterFromBackupArrayInput interface {
	pulumi.Input

	ToGetPgClusterFromBackupArrayOutput() GetPgClusterFromBackupArrayOutput
	ToGetPgClusterFromBackupArrayOutputWithContext(context.Context) GetPgClusterFromBackupArrayOutput
}

type GetPgClusterFromBackupArray []GetPgClusterFromBackupInput

func (GetPgClusterFromBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgClusterFromBackup)(nil)).Elem()
}

func (i GetPgClusterFromBackupArray) ToGetPgClusterFromBackupArrayOutput() GetPgClusterFromBackupArrayOutput {
	return i.ToGetPgClusterFromBackupArrayOutputWithContext(context.Background())
}

func (i GetPgClusterFromBackupArray) ToGetPgClusterFromBackupArrayOutputWithContext(ctx context.Context) GetPgClusterFromBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgClusterFromBackupArrayOutput)
}

type GetPgClusterFromBackupOutput struct{ *pulumi.OutputState }

func (GetPgClusterFromBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgClusterFromBackup)(nil)).Elem()
}

func (o GetPgClusterFromBackupOutput) ToGetPgClusterFromBackupOutput() GetPgClusterFromBackupOutput {
	return o
}

func (o GetPgClusterFromBackupOutput) ToGetPgClusterFromBackupOutputWithContext(ctx context.Context) GetPgClusterFromBackupOutput {
	return o
}

// The unique ID of the backup you want to restore.
func (o GetPgClusterFromBackupOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgClusterFromBackup) string { return v.BackupId }).(pulumi.StringOutput)
}

// If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp. If empty, the backup will be applied completely.
func (o GetPgClusterFromBackupOutput) RecoveryTargetTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgClusterFromBackup) string { return v.RecoveryTargetTime }).(pulumi.StringOutput)
}

type GetPgClusterFromBackupArrayOutput struct{ *pulumi.OutputState }

func (GetPgClusterFromBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgClusterFromBackup)(nil)).Elem()
}

func (o GetPgClusterFromBackupArrayOutput) ToGetPgClusterFromBackupArrayOutput() GetPgClusterFromBackupArrayOutput {
	return o
}

func (o GetPgClusterFromBackupArrayOutput) ToGetPgClusterFromBackupArrayOutputWithContext(ctx context.Context) GetPgClusterFromBackupArrayOutput {
	return o
}

func (o GetPgClusterFromBackupArrayOutput) Index(i pulumi.IntInput) GetPgClusterFromBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgClusterFromBackup {
		return vs[0].([]GetPgClusterFromBackup)[vs[1].(int)]
	}).(GetPgClusterFromBackupOutput)
}

type GetPgClusterMaintenanceWindow struct {
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	Time         string `pulumi:"time"`
}

// GetPgClusterMaintenanceWindowInput is an input type that accepts GetPgClusterMaintenanceWindowArgs and GetPgClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetPgClusterMaintenanceWindowInput` via:
//
//	GetPgClusterMaintenanceWindowArgs{...}
type GetPgClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToGetPgClusterMaintenanceWindowOutput() GetPgClusterMaintenanceWindowOutput
	ToGetPgClusterMaintenanceWindowOutputWithContext(context.Context) GetPgClusterMaintenanceWindowOutput
}

type GetPgClusterMaintenanceWindowArgs struct {
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	Time         pulumi.StringInput `pulumi:"time"`
}

func (GetPgClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetPgClusterMaintenanceWindowArgs) ToGetPgClusterMaintenanceWindowOutput() GetPgClusterMaintenanceWindowOutput {
	return i.ToGetPgClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetPgClusterMaintenanceWindowArgs) ToGetPgClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetPgClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgClusterMaintenanceWindowOutput)
}

// GetPgClusterMaintenanceWindowArrayInput is an input type that accepts GetPgClusterMaintenanceWindowArray and GetPgClusterMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetPgClusterMaintenanceWindowArrayInput` via:
//
//	GetPgClusterMaintenanceWindowArray{ GetPgClusterMaintenanceWindowArgs{...} }
type GetPgClusterMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetPgClusterMaintenanceWindowArrayOutput() GetPgClusterMaintenanceWindowArrayOutput
	ToGetPgClusterMaintenanceWindowArrayOutputWithContext(context.Context) GetPgClusterMaintenanceWindowArrayOutput
}

type GetPgClusterMaintenanceWindowArray []GetPgClusterMaintenanceWindowInput

func (GetPgClusterMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetPgClusterMaintenanceWindowArray) ToGetPgClusterMaintenanceWindowArrayOutput() GetPgClusterMaintenanceWindowArrayOutput {
	return i.ToGetPgClusterMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetPgClusterMaintenanceWindowArray) ToGetPgClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetPgClusterMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgClusterMaintenanceWindowArrayOutput)
}

type GetPgClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetPgClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetPgClusterMaintenanceWindowOutput) ToGetPgClusterMaintenanceWindowOutput() GetPgClusterMaintenanceWindowOutput {
	return o
}

func (o GetPgClusterMaintenanceWindowOutput) ToGetPgClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetPgClusterMaintenanceWindowOutput {
	return o
}

func (o GetPgClusterMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgClusterMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

func (o GetPgClusterMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgClusterMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type GetPgClusterMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetPgClusterMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetPgClusterMaintenanceWindowArrayOutput) ToGetPgClusterMaintenanceWindowArrayOutput() GetPgClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetPgClusterMaintenanceWindowArrayOutput) ToGetPgClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetPgClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetPgClusterMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetPgClusterMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgClusterMaintenanceWindow {
		return vs[0].([]GetPgClusterMaintenanceWindow)[vs[1].(int)]
	}).(GetPgClusterMaintenanceWindowOutput)
}

type GetPgDatabasesDatabase struct {
	Id    string `pulumi:"id"`
	Name  string `pulumi:"name"`
	Owner string `pulumi:"owner"`
}

// GetPgDatabasesDatabaseInput is an input type that accepts GetPgDatabasesDatabaseArgs and GetPgDatabasesDatabaseOutput values.
// You can construct a concrete instance of `GetPgDatabasesDatabaseInput` via:
//
//	GetPgDatabasesDatabaseArgs{...}
type GetPgDatabasesDatabaseInput interface {
	pulumi.Input

	ToGetPgDatabasesDatabaseOutput() GetPgDatabasesDatabaseOutput
	ToGetPgDatabasesDatabaseOutputWithContext(context.Context) GetPgDatabasesDatabaseOutput
}

type GetPgDatabasesDatabaseArgs struct {
	Id    pulumi.StringInput `pulumi:"id"`
	Name  pulumi.StringInput `pulumi:"name"`
	Owner pulumi.StringInput `pulumi:"owner"`
}

func (GetPgDatabasesDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgDatabasesDatabase)(nil)).Elem()
}

func (i GetPgDatabasesDatabaseArgs) ToGetPgDatabasesDatabaseOutput() GetPgDatabasesDatabaseOutput {
	return i.ToGetPgDatabasesDatabaseOutputWithContext(context.Background())
}

func (i GetPgDatabasesDatabaseArgs) ToGetPgDatabasesDatabaseOutputWithContext(ctx context.Context) GetPgDatabasesDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgDatabasesDatabaseOutput)
}

// GetPgDatabasesDatabaseArrayInput is an input type that accepts GetPgDatabasesDatabaseArray and GetPgDatabasesDatabaseArrayOutput values.
// You can construct a concrete instance of `GetPgDatabasesDatabaseArrayInput` via:
//
//	GetPgDatabasesDatabaseArray{ GetPgDatabasesDatabaseArgs{...} }
type GetPgDatabasesDatabaseArrayInput interface {
	pulumi.Input

	ToGetPgDatabasesDatabaseArrayOutput() GetPgDatabasesDatabaseArrayOutput
	ToGetPgDatabasesDatabaseArrayOutputWithContext(context.Context) GetPgDatabasesDatabaseArrayOutput
}

type GetPgDatabasesDatabaseArray []GetPgDatabasesDatabaseInput

func (GetPgDatabasesDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgDatabasesDatabase)(nil)).Elem()
}

func (i GetPgDatabasesDatabaseArray) ToGetPgDatabasesDatabaseArrayOutput() GetPgDatabasesDatabaseArrayOutput {
	return i.ToGetPgDatabasesDatabaseArrayOutputWithContext(context.Background())
}

func (i GetPgDatabasesDatabaseArray) ToGetPgDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetPgDatabasesDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgDatabasesDatabaseArrayOutput)
}

type GetPgDatabasesDatabaseOutput struct{ *pulumi.OutputState }

func (GetPgDatabasesDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgDatabasesDatabase)(nil)).Elem()
}

func (o GetPgDatabasesDatabaseOutput) ToGetPgDatabasesDatabaseOutput() GetPgDatabasesDatabaseOutput {
	return o
}

func (o GetPgDatabasesDatabaseOutput) ToGetPgDatabasesDatabaseOutputWithContext(ctx context.Context) GetPgDatabasesDatabaseOutput {
	return o
}

func (o GetPgDatabasesDatabaseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgDatabasesDatabase) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPgDatabasesDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgDatabasesDatabase) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPgDatabasesDatabaseOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgDatabasesDatabase) string { return v.Owner }).(pulumi.StringOutput)
}

type GetPgDatabasesDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetPgDatabasesDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgDatabasesDatabase)(nil)).Elem()
}

func (o GetPgDatabasesDatabaseArrayOutput) ToGetPgDatabasesDatabaseArrayOutput() GetPgDatabasesDatabaseArrayOutput {
	return o
}

func (o GetPgDatabasesDatabaseArrayOutput) ToGetPgDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetPgDatabasesDatabaseArrayOutput {
	return o
}

func (o GetPgDatabasesDatabaseArrayOutput) Index(i pulumi.IntInput) GetPgDatabasesDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgDatabasesDatabase {
		return vs[0].([]GetPgDatabasesDatabase)[vs[1].(int)]
	}).(GetPgDatabasesDatabaseOutput)
}

type GetPrivateCrossconnectConnectableDatacenter struct {
	// ID of the cross connect you want to search for.
	//
	// Either `name` or `id` must be provided. If none, or both are provided, the datasource will return an error.
	Id string `pulumi:"id"`
	// The physical location of the connectable datacenter
	Location string `pulumi:"location"`
	// Name of an existing cross connect that you want to search for.
	Name string `pulumi:"name"`
}

// GetPrivateCrossconnectConnectableDatacenterInput is an input type that accepts GetPrivateCrossconnectConnectableDatacenterArgs and GetPrivateCrossconnectConnectableDatacenterOutput values.
// You can construct a concrete instance of `GetPrivateCrossconnectConnectableDatacenterInput` via:
//
//	GetPrivateCrossconnectConnectableDatacenterArgs{...}
type GetPrivateCrossconnectConnectableDatacenterInput interface {
	pulumi.Input

	ToGetPrivateCrossconnectConnectableDatacenterOutput() GetPrivateCrossconnectConnectableDatacenterOutput
	ToGetPrivateCrossconnectConnectableDatacenterOutputWithContext(context.Context) GetPrivateCrossconnectConnectableDatacenterOutput
}

type GetPrivateCrossconnectConnectableDatacenterArgs struct {
	// ID of the cross connect you want to search for.
	//
	// Either `name` or `id` must be provided. If none, or both are provided, the datasource will return an error.
	Id pulumi.StringInput `pulumi:"id"`
	// The physical location of the connectable datacenter
	Location pulumi.StringInput `pulumi:"location"`
	// Name of an existing cross connect that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPrivateCrossconnectConnectableDatacenterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateCrossconnectConnectableDatacenter)(nil)).Elem()
}

func (i GetPrivateCrossconnectConnectableDatacenterArgs) ToGetPrivateCrossconnectConnectableDatacenterOutput() GetPrivateCrossconnectConnectableDatacenterOutput {
	return i.ToGetPrivateCrossconnectConnectableDatacenterOutputWithContext(context.Background())
}

func (i GetPrivateCrossconnectConnectableDatacenterArgs) ToGetPrivateCrossconnectConnectableDatacenterOutputWithContext(ctx context.Context) GetPrivateCrossconnectConnectableDatacenterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateCrossconnectConnectableDatacenterOutput)
}

// GetPrivateCrossconnectConnectableDatacenterArrayInput is an input type that accepts GetPrivateCrossconnectConnectableDatacenterArray and GetPrivateCrossconnectConnectableDatacenterArrayOutput values.
// You can construct a concrete instance of `GetPrivateCrossconnectConnectableDatacenterArrayInput` via:
//
//	GetPrivateCrossconnectConnectableDatacenterArray{ GetPrivateCrossconnectConnectableDatacenterArgs{...} }
type GetPrivateCrossconnectConnectableDatacenterArrayInput interface {
	pulumi.Input

	ToGetPrivateCrossconnectConnectableDatacenterArrayOutput() GetPrivateCrossconnectConnectableDatacenterArrayOutput
	ToGetPrivateCrossconnectConnectableDatacenterArrayOutputWithContext(context.Context) GetPrivateCrossconnectConnectableDatacenterArrayOutput
}

type GetPrivateCrossconnectConnectableDatacenterArray []GetPrivateCrossconnectConnectableDatacenterInput

func (GetPrivateCrossconnectConnectableDatacenterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateCrossconnectConnectableDatacenter)(nil)).Elem()
}

func (i GetPrivateCrossconnectConnectableDatacenterArray) ToGetPrivateCrossconnectConnectableDatacenterArrayOutput() GetPrivateCrossconnectConnectableDatacenterArrayOutput {
	return i.ToGetPrivateCrossconnectConnectableDatacenterArrayOutputWithContext(context.Background())
}

func (i GetPrivateCrossconnectConnectableDatacenterArray) ToGetPrivateCrossconnectConnectableDatacenterArrayOutputWithContext(ctx context.Context) GetPrivateCrossconnectConnectableDatacenterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateCrossconnectConnectableDatacenterArrayOutput)
}

type GetPrivateCrossconnectConnectableDatacenterOutput struct{ *pulumi.OutputState }

func (GetPrivateCrossconnectConnectableDatacenterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateCrossconnectConnectableDatacenter)(nil)).Elem()
}

func (o GetPrivateCrossconnectConnectableDatacenterOutput) ToGetPrivateCrossconnectConnectableDatacenterOutput() GetPrivateCrossconnectConnectableDatacenterOutput {
	return o
}

func (o GetPrivateCrossconnectConnectableDatacenterOutput) ToGetPrivateCrossconnectConnectableDatacenterOutputWithContext(ctx context.Context) GetPrivateCrossconnectConnectableDatacenterOutput {
	return o
}

// ID of the cross connect you want to search for.
//
// Either `name` or `id` must be provided. If none, or both are provided, the datasource will return an error.
func (o GetPrivateCrossconnectConnectableDatacenterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateCrossconnectConnectableDatacenter) string { return v.Id }).(pulumi.StringOutput)
}

// The physical location of the connectable datacenter
func (o GetPrivateCrossconnectConnectableDatacenterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateCrossconnectConnectableDatacenter) string { return v.Location }).(pulumi.StringOutput)
}

// Name of an existing cross connect that you want to search for.
func (o GetPrivateCrossconnectConnectableDatacenterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateCrossconnectConnectableDatacenter) string { return v.Name }).(pulumi.StringOutput)
}

type GetPrivateCrossconnectConnectableDatacenterArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateCrossconnectConnectableDatacenterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateCrossconnectConnectableDatacenter)(nil)).Elem()
}

func (o GetPrivateCrossconnectConnectableDatacenterArrayOutput) ToGetPrivateCrossconnectConnectableDatacenterArrayOutput() GetPrivateCrossconnectConnectableDatacenterArrayOutput {
	return o
}

func (o GetPrivateCrossconnectConnectableDatacenterArrayOutput) ToGetPrivateCrossconnectConnectableDatacenterArrayOutputWithContext(ctx context.Context) GetPrivateCrossconnectConnectableDatacenterArrayOutput {
	return o
}

func (o GetPrivateCrossconnectConnectableDatacenterArrayOutput) Index(i pulumi.IntInput) GetPrivateCrossconnectConnectableDatacenterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateCrossconnectConnectableDatacenter {
		return vs[0].([]GetPrivateCrossconnectConnectableDatacenter)[vs[1].(int)]
	}).(GetPrivateCrossconnectConnectableDatacenterOutput)
}

type GetPrivateCrossconnectPeer struct {
	// The id of the cross-connected datacenter
	DatacenterId string `pulumi:"datacenterId"`
	// The name of the cross-connected datacenter
	DatacenterName string `pulumi:"datacenterName"`
	// The id of the cross-connected LAN
	LanId string `pulumi:"lanId"`
	// The name of the cross-connected LAN
	LanName string `pulumi:"lanName"`
	// The physical location of the connectable datacenter
	Location string `pulumi:"location"`
}

// GetPrivateCrossconnectPeerInput is an input type that accepts GetPrivateCrossconnectPeerArgs and GetPrivateCrossconnectPeerOutput values.
// You can construct a concrete instance of `GetPrivateCrossconnectPeerInput` via:
//
//	GetPrivateCrossconnectPeerArgs{...}
type GetPrivateCrossconnectPeerInput interface {
	pulumi.Input

	ToGetPrivateCrossconnectPeerOutput() GetPrivateCrossconnectPeerOutput
	ToGetPrivateCrossconnectPeerOutputWithContext(context.Context) GetPrivateCrossconnectPeerOutput
}

type GetPrivateCrossconnectPeerArgs struct {
	// The id of the cross-connected datacenter
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// The name of the cross-connected datacenter
	DatacenterName pulumi.StringInput `pulumi:"datacenterName"`
	// The id of the cross-connected LAN
	LanId pulumi.StringInput `pulumi:"lanId"`
	// The name of the cross-connected LAN
	LanName pulumi.StringInput `pulumi:"lanName"`
	// The physical location of the connectable datacenter
	Location pulumi.StringInput `pulumi:"location"`
}

func (GetPrivateCrossconnectPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateCrossconnectPeer)(nil)).Elem()
}

func (i GetPrivateCrossconnectPeerArgs) ToGetPrivateCrossconnectPeerOutput() GetPrivateCrossconnectPeerOutput {
	return i.ToGetPrivateCrossconnectPeerOutputWithContext(context.Background())
}

func (i GetPrivateCrossconnectPeerArgs) ToGetPrivateCrossconnectPeerOutputWithContext(ctx context.Context) GetPrivateCrossconnectPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateCrossconnectPeerOutput)
}

// GetPrivateCrossconnectPeerArrayInput is an input type that accepts GetPrivateCrossconnectPeerArray and GetPrivateCrossconnectPeerArrayOutput values.
// You can construct a concrete instance of `GetPrivateCrossconnectPeerArrayInput` via:
//
//	GetPrivateCrossconnectPeerArray{ GetPrivateCrossconnectPeerArgs{...} }
type GetPrivateCrossconnectPeerArrayInput interface {
	pulumi.Input

	ToGetPrivateCrossconnectPeerArrayOutput() GetPrivateCrossconnectPeerArrayOutput
	ToGetPrivateCrossconnectPeerArrayOutputWithContext(context.Context) GetPrivateCrossconnectPeerArrayOutput
}

type GetPrivateCrossconnectPeerArray []GetPrivateCrossconnectPeerInput

func (GetPrivateCrossconnectPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateCrossconnectPeer)(nil)).Elem()
}

func (i GetPrivateCrossconnectPeerArray) ToGetPrivateCrossconnectPeerArrayOutput() GetPrivateCrossconnectPeerArrayOutput {
	return i.ToGetPrivateCrossconnectPeerArrayOutputWithContext(context.Background())
}

func (i GetPrivateCrossconnectPeerArray) ToGetPrivateCrossconnectPeerArrayOutputWithContext(ctx context.Context) GetPrivateCrossconnectPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateCrossconnectPeerArrayOutput)
}

type GetPrivateCrossconnectPeerOutput struct{ *pulumi.OutputState }

func (GetPrivateCrossconnectPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateCrossconnectPeer)(nil)).Elem()
}

func (o GetPrivateCrossconnectPeerOutput) ToGetPrivateCrossconnectPeerOutput() GetPrivateCrossconnectPeerOutput {
	return o
}

func (o GetPrivateCrossconnectPeerOutput) ToGetPrivateCrossconnectPeerOutputWithContext(ctx context.Context) GetPrivateCrossconnectPeerOutput {
	return o
}

// The id of the cross-connected datacenter
func (o GetPrivateCrossconnectPeerOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateCrossconnectPeer) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// The name of the cross-connected datacenter
func (o GetPrivateCrossconnectPeerOutput) DatacenterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateCrossconnectPeer) string { return v.DatacenterName }).(pulumi.StringOutput)
}

// The id of the cross-connected LAN
func (o GetPrivateCrossconnectPeerOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateCrossconnectPeer) string { return v.LanId }).(pulumi.StringOutput)
}

// The name of the cross-connected LAN
func (o GetPrivateCrossconnectPeerOutput) LanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateCrossconnectPeer) string { return v.LanName }).(pulumi.StringOutput)
}

// The physical location of the connectable datacenter
func (o GetPrivateCrossconnectPeerOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateCrossconnectPeer) string { return v.Location }).(pulumi.StringOutput)
}

type GetPrivateCrossconnectPeerArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateCrossconnectPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateCrossconnectPeer)(nil)).Elem()
}

func (o GetPrivateCrossconnectPeerArrayOutput) ToGetPrivateCrossconnectPeerArrayOutput() GetPrivateCrossconnectPeerArrayOutput {
	return o
}

func (o GetPrivateCrossconnectPeerArrayOutput) ToGetPrivateCrossconnectPeerArrayOutputWithContext(ctx context.Context) GetPrivateCrossconnectPeerArrayOutput {
	return o
}

func (o GetPrivateCrossconnectPeerArrayOutput) Index(i pulumi.IntInput) GetPrivateCrossconnectPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateCrossconnectPeer {
		return vs[0].([]GetPrivateCrossconnectPeer)[vs[1].(int)]
	}).(GetPrivateCrossconnectPeerOutput)
}

type GetServerCdrom struct {
	// Cloud init compatibility
	CloudInit string `pulumi:"cloudInit"`
	// Is capable of CPU hot plug (no reboot required)
	CpuHotPlug bool `pulumi:"cpuHotPlug"`
	// Is capable of CPU hot unplug (no reboot required)
	CpuHotUnplug bool `pulumi:"cpuHotUnplug"`
	// Description of cdrom
	Description string `pulumi:"description"`
	// Is capable of SCSI drive hot plug (no reboot required)
	DiscScsiHotPlug bool `pulumi:"discScsiHotPlug"`
	// Is capable of SCSI drive hot unplug (no reboot required)
	DiscScsiHotUnplug bool `pulumi:"discScsiHotUnplug"`
	// Is capable of Virt-IO drive hot plug (no reboot required)
	DiscVirtioHotPlug bool `pulumi:"discVirtioHotPlug"`
	// Is capable of Virt-IO drive hot unplug (no reboot required)
	DiscVirtioHotUnplug bool `pulumi:"discVirtioHotUnplug"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id string `pulumi:"id"`
	// List of image aliases mapped for this Image
	ImageAliases []string `pulumi:"imageAliases"`
	// Type of image
	ImageType string `pulumi:"imageType"`
	// OS type of this volume
	LicenceType string `pulumi:"licenceType"`
	// Location of that image/snapshot
	Location string `pulumi:"location"`
	// Name of an existing server that you want to search for.
	Name string `pulumi:"name"`
	// Is capable of nic hot plug (no reboot required)
	NicHotPlug bool `pulumi:"nicHotPlug"`
	// Is capable of nic hot unplug (no reboot required)
	NicHotUnplug bool `pulumi:"nicHotUnplug"`
	// Indicates if the image is part of the public repository or not
	Public bool `pulumi:"public"`
	// Is capable of memory hot plug (no reboot required)
	RamHotPlug bool `pulumi:"ramHotPlug"`
	// Is capable of memory hot unplug (no reboot required)
	RamHotUnplug bool `pulumi:"ramHotUnplug"`
	// The size of the volume in GB
	Size float64 `pulumi:"size"`
}

// GetServerCdromInput is an input type that accepts GetServerCdromArgs and GetServerCdromOutput values.
// You can construct a concrete instance of `GetServerCdromInput` via:
//
//	GetServerCdromArgs{...}
type GetServerCdromInput interface {
	pulumi.Input

	ToGetServerCdromOutput() GetServerCdromOutput
	ToGetServerCdromOutputWithContext(context.Context) GetServerCdromOutput
}

type GetServerCdromArgs struct {
	// Cloud init compatibility
	CloudInit pulumi.StringInput `pulumi:"cloudInit"`
	// Is capable of CPU hot plug (no reboot required)
	CpuHotPlug pulumi.BoolInput `pulumi:"cpuHotPlug"`
	// Is capable of CPU hot unplug (no reboot required)
	CpuHotUnplug pulumi.BoolInput `pulumi:"cpuHotUnplug"`
	// Description of cdrom
	Description pulumi.StringInput `pulumi:"description"`
	// Is capable of SCSI drive hot plug (no reboot required)
	DiscScsiHotPlug pulumi.BoolInput `pulumi:"discScsiHotPlug"`
	// Is capable of SCSI drive hot unplug (no reboot required)
	DiscScsiHotUnplug pulumi.BoolInput `pulumi:"discScsiHotUnplug"`
	// Is capable of Virt-IO drive hot plug (no reboot required)
	DiscVirtioHotPlug pulumi.BoolInput `pulumi:"discVirtioHotPlug"`
	// Is capable of Virt-IO drive hot unplug (no reboot required)
	DiscVirtioHotUnplug pulumi.BoolInput `pulumi:"discVirtioHotUnplug"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id pulumi.StringInput `pulumi:"id"`
	// List of image aliases mapped for this Image
	ImageAliases pulumi.StringArrayInput `pulumi:"imageAliases"`
	// Type of image
	ImageType pulumi.StringInput `pulumi:"imageType"`
	// OS type of this volume
	LicenceType pulumi.StringInput `pulumi:"licenceType"`
	// Location of that image/snapshot
	Location pulumi.StringInput `pulumi:"location"`
	// Name of an existing server that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
	// Is capable of nic hot plug (no reboot required)
	NicHotPlug pulumi.BoolInput `pulumi:"nicHotPlug"`
	// Is capable of nic hot unplug (no reboot required)
	NicHotUnplug pulumi.BoolInput `pulumi:"nicHotUnplug"`
	// Indicates if the image is part of the public repository or not
	Public pulumi.BoolInput `pulumi:"public"`
	// Is capable of memory hot plug (no reboot required)
	RamHotPlug pulumi.BoolInput `pulumi:"ramHotPlug"`
	// Is capable of memory hot unplug (no reboot required)
	RamHotUnplug pulumi.BoolInput `pulumi:"ramHotUnplug"`
	// The size of the volume in GB
	Size pulumi.Float64Input `pulumi:"size"`
}

func (GetServerCdromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerCdrom)(nil)).Elem()
}

func (i GetServerCdromArgs) ToGetServerCdromOutput() GetServerCdromOutput {
	return i.ToGetServerCdromOutputWithContext(context.Background())
}

func (i GetServerCdromArgs) ToGetServerCdromOutputWithContext(ctx context.Context) GetServerCdromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerCdromOutput)
}

// GetServerCdromArrayInput is an input type that accepts GetServerCdromArray and GetServerCdromArrayOutput values.
// You can construct a concrete instance of `GetServerCdromArrayInput` via:
//
//	GetServerCdromArray{ GetServerCdromArgs{...} }
type GetServerCdromArrayInput interface {
	pulumi.Input

	ToGetServerCdromArrayOutput() GetServerCdromArrayOutput
	ToGetServerCdromArrayOutputWithContext(context.Context) GetServerCdromArrayOutput
}

type GetServerCdromArray []GetServerCdromInput

func (GetServerCdromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerCdrom)(nil)).Elem()
}

func (i GetServerCdromArray) ToGetServerCdromArrayOutput() GetServerCdromArrayOutput {
	return i.ToGetServerCdromArrayOutputWithContext(context.Background())
}

func (i GetServerCdromArray) ToGetServerCdromArrayOutputWithContext(ctx context.Context) GetServerCdromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerCdromArrayOutput)
}

type GetServerCdromOutput struct{ *pulumi.OutputState }

func (GetServerCdromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerCdrom)(nil)).Elem()
}

func (o GetServerCdromOutput) ToGetServerCdromOutput() GetServerCdromOutput {
	return o
}

func (o GetServerCdromOutput) ToGetServerCdromOutputWithContext(ctx context.Context) GetServerCdromOutput {
	return o
}

// Cloud init compatibility
func (o GetServerCdromOutput) CloudInit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCdrom) string { return v.CloudInit }).(pulumi.StringOutput)
}

// Is capable of CPU hot plug (no reboot required)
func (o GetServerCdromOutput) CpuHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerCdrom) bool { return v.CpuHotPlug }).(pulumi.BoolOutput)
}

// Is capable of CPU hot unplug (no reboot required)
func (o GetServerCdromOutput) CpuHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerCdrom) bool { return v.CpuHotUnplug }).(pulumi.BoolOutput)
}

// Description of cdrom
func (o GetServerCdromOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCdrom) string { return v.Description }).(pulumi.StringOutput)
}

// Is capable of SCSI drive hot plug (no reboot required)
func (o GetServerCdromOutput) DiscScsiHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerCdrom) bool { return v.DiscScsiHotPlug }).(pulumi.BoolOutput)
}

// Is capable of SCSI drive hot unplug (no reboot required)
func (o GetServerCdromOutput) DiscScsiHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerCdrom) bool { return v.DiscScsiHotUnplug }).(pulumi.BoolOutput)
}

// Is capable of Virt-IO drive hot plug (no reboot required)
func (o GetServerCdromOutput) DiscVirtioHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerCdrom) bool { return v.DiscVirtioHotPlug }).(pulumi.BoolOutput)
}

// Is capable of Virt-IO drive hot unplug (no reboot required)
func (o GetServerCdromOutput) DiscVirtioHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerCdrom) bool { return v.DiscVirtioHotUnplug }).(pulumi.BoolOutput)
}

// ID of the server you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetServerCdromOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCdrom) string { return v.Id }).(pulumi.StringOutput)
}

// List of image aliases mapped for this Image
func (o GetServerCdromOutput) ImageAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerCdrom) []string { return v.ImageAliases }).(pulumi.StringArrayOutput)
}

// Type of image
func (o GetServerCdromOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCdrom) string { return v.ImageType }).(pulumi.StringOutput)
}

// OS type of this volume
func (o GetServerCdromOutput) LicenceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCdrom) string { return v.LicenceType }).(pulumi.StringOutput)
}

// Location of that image/snapshot
func (o GetServerCdromOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCdrom) string { return v.Location }).(pulumi.StringOutput)
}

// Name of an existing server that you want to search for.
func (o GetServerCdromOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCdrom) string { return v.Name }).(pulumi.StringOutput)
}

// Is capable of nic hot plug (no reboot required)
func (o GetServerCdromOutput) NicHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerCdrom) bool { return v.NicHotPlug }).(pulumi.BoolOutput)
}

// Is capable of nic hot unplug (no reboot required)
func (o GetServerCdromOutput) NicHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerCdrom) bool { return v.NicHotUnplug }).(pulumi.BoolOutput)
}

// Indicates if the image is part of the public repository or not
func (o GetServerCdromOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerCdrom) bool { return v.Public }).(pulumi.BoolOutput)
}

// Is capable of memory hot plug (no reboot required)
func (o GetServerCdromOutput) RamHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerCdrom) bool { return v.RamHotPlug }).(pulumi.BoolOutput)
}

// Is capable of memory hot unplug (no reboot required)
func (o GetServerCdromOutput) RamHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerCdrom) bool { return v.RamHotUnplug }).(pulumi.BoolOutput)
}

// The size of the volume in GB
func (o GetServerCdromOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerCdrom) float64 { return v.Size }).(pulumi.Float64Output)
}

type GetServerCdromArrayOutput struct{ *pulumi.OutputState }

func (GetServerCdromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerCdrom)(nil)).Elem()
}

func (o GetServerCdromArrayOutput) ToGetServerCdromArrayOutput() GetServerCdromArrayOutput {
	return o
}

func (o GetServerCdromArrayOutput) ToGetServerCdromArrayOutputWithContext(ctx context.Context) GetServerCdromArrayOutput {
	return o
}

func (o GetServerCdromArrayOutput) Index(i pulumi.IntInput) GetServerCdromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerCdrom {
		return vs[0].([]GetServerCdrom)[vs[1].(int)]
	}).(GetServerCdromOutput)
}

type GetServerLabel struct {
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id string `pulumi:"id"`
	// The key of the label
	Key string `pulumi:"key"`
	// The value of the label
	Value string `pulumi:"value"`
}

// GetServerLabelInput is an input type that accepts GetServerLabelArgs and GetServerLabelOutput values.
// You can construct a concrete instance of `GetServerLabelInput` via:
//
//	GetServerLabelArgs{...}
type GetServerLabelInput interface {
	pulumi.Input

	ToGetServerLabelOutput() GetServerLabelOutput
	ToGetServerLabelOutputWithContext(context.Context) GetServerLabelOutput
}

type GetServerLabelArgs struct {
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id pulumi.StringInput `pulumi:"id"`
	// The key of the label
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the label
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetServerLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerLabel)(nil)).Elem()
}

func (i GetServerLabelArgs) ToGetServerLabelOutput() GetServerLabelOutput {
	return i.ToGetServerLabelOutputWithContext(context.Background())
}

func (i GetServerLabelArgs) ToGetServerLabelOutputWithContext(ctx context.Context) GetServerLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerLabelOutput)
}

// GetServerLabelArrayInput is an input type that accepts GetServerLabelArray and GetServerLabelArrayOutput values.
// You can construct a concrete instance of `GetServerLabelArrayInput` via:
//
//	GetServerLabelArray{ GetServerLabelArgs{...} }
type GetServerLabelArrayInput interface {
	pulumi.Input

	ToGetServerLabelArrayOutput() GetServerLabelArrayOutput
	ToGetServerLabelArrayOutputWithContext(context.Context) GetServerLabelArrayOutput
}

type GetServerLabelArray []GetServerLabelInput

func (GetServerLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerLabel)(nil)).Elem()
}

func (i GetServerLabelArray) ToGetServerLabelArrayOutput() GetServerLabelArrayOutput {
	return i.ToGetServerLabelArrayOutputWithContext(context.Background())
}

func (i GetServerLabelArray) ToGetServerLabelArrayOutputWithContext(ctx context.Context) GetServerLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerLabelArrayOutput)
}

type GetServerLabelOutput struct{ *pulumi.OutputState }

func (GetServerLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerLabel)(nil)).Elem()
}

func (o GetServerLabelOutput) ToGetServerLabelOutput() GetServerLabelOutput {
	return o
}

func (o GetServerLabelOutput) ToGetServerLabelOutputWithContext(ctx context.Context) GetServerLabelOutput {
	return o
}

// ID of the server you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetServerLabelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerLabel) string { return v.Id }).(pulumi.StringOutput)
}

// The key of the label
func (o GetServerLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the label
func (o GetServerLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetServerLabelArrayOutput struct{ *pulumi.OutputState }

func (GetServerLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerLabel)(nil)).Elem()
}

func (o GetServerLabelArrayOutput) ToGetServerLabelArrayOutput() GetServerLabelArrayOutput {
	return o
}

func (o GetServerLabelArrayOutput) ToGetServerLabelArrayOutputWithContext(ctx context.Context) GetServerLabelArrayOutput {
	return o
}

func (o GetServerLabelArrayOutput) Index(i pulumi.IntInput) GetServerLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerLabel {
		return vs[0].([]GetServerLabel)[vs[1].(int)]
	}).(GetServerLabelOutput)
}

type GetServerNic struct {
	// The Logical Unit Number (LUN) of the storage volume
	DeviceNumber int `pulumi:"deviceNumber"`
	// Indicates if the nic will reserve an IP using DHCP
	Dhcp   bool  `pulumi:"dhcp"`
	Dhcpv6 *bool `pulumi:"dhcpv6"`
	// Activate or deactivate the firewall
	FirewallActive bool `pulumi:"firewallActive"`
	// list of
	FirewallRules []GetServerNicFirewallRule `pulumi:"firewallRules"`
	// The type of firewall rules that will be allowed on the NIC
	FirewallType string `pulumi:"firewallType"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id string `pulumi:"id"`
	// Collection of IP addresses assigned to a nic
	Ips           []string `pulumi:"ips"`
	Ipv6CidrBlock string   `pulumi:"ipv6CidrBlock"`
	Ipv6Ips       []string `pulumi:"ipv6Ips"`
	// The LAN ID the NIC will sit on
	Lan int `pulumi:"lan"`
	// The MAC address of the NIC
	Mac string `pulumi:"mac"`
	// Name of an existing server that you want to search for.
	Name string `pulumi:"name"`
	// The PCI slot number of the Nic
	PciSlot int `pulumi:"pciSlot"`
}

// GetServerNicInput is an input type that accepts GetServerNicArgs and GetServerNicOutput values.
// You can construct a concrete instance of `GetServerNicInput` via:
//
//	GetServerNicArgs{...}
type GetServerNicInput interface {
	pulumi.Input

	ToGetServerNicOutput() GetServerNicOutput
	ToGetServerNicOutputWithContext(context.Context) GetServerNicOutput
}

type GetServerNicArgs struct {
	// The Logical Unit Number (LUN) of the storage volume
	DeviceNumber pulumi.IntInput `pulumi:"deviceNumber"`
	// Indicates if the nic will reserve an IP using DHCP
	Dhcp   pulumi.BoolInput    `pulumi:"dhcp"`
	Dhcpv6 pulumi.BoolPtrInput `pulumi:"dhcpv6"`
	// Activate or deactivate the firewall
	FirewallActive pulumi.BoolInput `pulumi:"firewallActive"`
	// list of
	FirewallRules GetServerNicFirewallRuleArrayInput `pulumi:"firewallRules"`
	// The type of firewall rules that will be allowed on the NIC
	FirewallType pulumi.StringInput `pulumi:"firewallType"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id pulumi.StringInput `pulumi:"id"`
	// Collection of IP addresses assigned to a nic
	Ips           pulumi.StringArrayInput `pulumi:"ips"`
	Ipv6CidrBlock pulumi.StringInput      `pulumi:"ipv6CidrBlock"`
	Ipv6Ips       pulumi.StringArrayInput `pulumi:"ipv6Ips"`
	// The LAN ID the NIC will sit on
	Lan pulumi.IntInput `pulumi:"lan"`
	// The MAC address of the NIC
	Mac pulumi.StringInput `pulumi:"mac"`
	// Name of an existing server that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
	// The PCI slot number of the Nic
	PciSlot pulumi.IntInput `pulumi:"pciSlot"`
}

func (GetServerNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNic)(nil)).Elem()
}

func (i GetServerNicArgs) ToGetServerNicOutput() GetServerNicOutput {
	return i.ToGetServerNicOutputWithContext(context.Background())
}

func (i GetServerNicArgs) ToGetServerNicOutputWithContext(ctx context.Context) GetServerNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNicOutput)
}

// GetServerNicArrayInput is an input type that accepts GetServerNicArray and GetServerNicArrayOutput values.
// You can construct a concrete instance of `GetServerNicArrayInput` via:
//
//	GetServerNicArray{ GetServerNicArgs{...} }
type GetServerNicArrayInput interface {
	pulumi.Input

	ToGetServerNicArrayOutput() GetServerNicArrayOutput
	ToGetServerNicArrayOutputWithContext(context.Context) GetServerNicArrayOutput
}

type GetServerNicArray []GetServerNicInput

func (GetServerNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNic)(nil)).Elem()
}

func (i GetServerNicArray) ToGetServerNicArrayOutput() GetServerNicArrayOutput {
	return i.ToGetServerNicArrayOutputWithContext(context.Background())
}

func (i GetServerNicArray) ToGetServerNicArrayOutputWithContext(ctx context.Context) GetServerNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNicArrayOutput)
}

type GetServerNicOutput struct{ *pulumi.OutputState }

func (GetServerNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNic)(nil)).Elem()
}

func (o GetServerNicOutput) ToGetServerNicOutput() GetServerNicOutput {
	return o
}

func (o GetServerNicOutput) ToGetServerNicOutputWithContext(ctx context.Context) GetServerNicOutput {
	return o
}

// The Logical Unit Number (LUN) of the storage volume
func (o GetServerNicOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerNic) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

// Indicates if the nic will reserve an IP using DHCP
func (o GetServerNicOutput) Dhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerNic) bool { return v.Dhcp }).(pulumi.BoolOutput)
}

func (o GetServerNicOutput) Dhcpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServerNic) *bool { return v.Dhcpv6 }).(pulumi.BoolPtrOutput)
}

// Activate or deactivate the firewall
func (o GetServerNicOutput) FirewallActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerNic) bool { return v.FirewallActive }).(pulumi.BoolOutput)
}

// list of
func (o GetServerNicOutput) FirewallRules() GetServerNicFirewallRuleArrayOutput {
	return o.ApplyT(func(v GetServerNic) []GetServerNicFirewallRule { return v.FirewallRules }).(GetServerNicFirewallRuleArrayOutput)
}

// The type of firewall rules that will be allowed on the NIC
func (o GetServerNicOutput) FirewallType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNic) string { return v.FirewallType }).(pulumi.StringOutput)
}

// ID of the server you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetServerNicOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNic) string { return v.Id }).(pulumi.StringOutput)
}

// Collection of IP addresses assigned to a nic
func (o GetServerNicOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerNic) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o GetServerNicOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNic) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

func (o GetServerNicOutput) Ipv6Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerNic) []string { return v.Ipv6Ips }).(pulumi.StringArrayOutput)
}

// The LAN ID the NIC will sit on
func (o GetServerNicOutput) Lan() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerNic) int { return v.Lan }).(pulumi.IntOutput)
}

// The MAC address of the NIC
func (o GetServerNicOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNic) string { return v.Mac }).(pulumi.StringOutput)
}

// Name of an existing server that you want to search for.
func (o GetServerNicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNic) string { return v.Name }).(pulumi.StringOutput)
}

// The PCI slot number of the Nic
func (o GetServerNicOutput) PciSlot() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerNic) int { return v.PciSlot }).(pulumi.IntOutput)
}

type GetServerNicArrayOutput struct{ *pulumi.OutputState }

func (GetServerNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNic)(nil)).Elem()
}

func (o GetServerNicArrayOutput) ToGetServerNicArrayOutput() GetServerNicArrayOutput {
	return o
}

func (o GetServerNicArrayOutput) ToGetServerNicArrayOutputWithContext(ctx context.Context) GetServerNicArrayOutput {
	return o
}

func (o GetServerNicArrayOutput) Index(i pulumi.IntInput) GetServerNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerNic {
		return vs[0].([]GetServerNic)[vs[1].(int)]
	}).(GetServerNicOutput)
}

type GetServerNicFirewallRule struct {
	// Defines the allowed code (from 0 to 254) if protocol ICMP is chosen
	IcmpCode int `pulumi:"icmpCode"`
	// Defines the allowed type (from 0 to 254) if the protocol ICMP is chosen
	IcmpType int `pulumi:"icmpType"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id string `pulumi:"id"`
	// Name of an existing server that you want to search for.
	Name string `pulumi:"name"`
	// Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen
	PortRangeEnd int `pulumi:"portRangeEnd"`
	// Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen
	PortRangeStart int `pulumi:"portRangeStart"`
	// he protocol for the rule
	Protocol string `pulumi:"protocol"`
	// Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs
	SourceIp string `pulumi:"sourceIp"`
	// Only traffic originating from the respective MAC address is allowed
	SourceMac string `pulumi:"sourceMac"`
	// In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed
	TargetIp string `pulumi:"targetIp"`
	// The type of firewall rule
	Type string `pulumi:"type"`
}

// GetServerNicFirewallRuleInput is an input type that accepts GetServerNicFirewallRuleArgs and GetServerNicFirewallRuleOutput values.
// You can construct a concrete instance of `GetServerNicFirewallRuleInput` via:
//
//	GetServerNicFirewallRuleArgs{...}
type GetServerNicFirewallRuleInput interface {
	pulumi.Input

	ToGetServerNicFirewallRuleOutput() GetServerNicFirewallRuleOutput
	ToGetServerNicFirewallRuleOutputWithContext(context.Context) GetServerNicFirewallRuleOutput
}

type GetServerNicFirewallRuleArgs struct {
	// Defines the allowed code (from 0 to 254) if protocol ICMP is chosen
	IcmpCode pulumi.IntInput `pulumi:"icmpCode"`
	// Defines the allowed type (from 0 to 254) if the protocol ICMP is chosen
	IcmpType pulumi.IntInput `pulumi:"icmpType"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of an existing server that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen
	PortRangeEnd pulumi.IntInput `pulumi:"portRangeEnd"`
	// Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen
	PortRangeStart pulumi.IntInput `pulumi:"portRangeStart"`
	// he protocol for the rule
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs
	SourceIp pulumi.StringInput `pulumi:"sourceIp"`
	// Only traffic originating from the respective MAC address is allowed
	SourceMac pulumi.StringInput `pulumi:"sourceMac"`
	// In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed
	TargetIp pulumi.StringInput `pulumi:"targetIp"`
	// The type of firewall rule
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetServerNicFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNicFirewallRule)(nil)).Elem()
}

func (i GetServerNicFirewallRuleArgs) ToGetServerNicFirewallRuleOutput() GetServerNicFirewallRuleOutput {
	return i.ToGetServerNicFirewallRuleOutputWithContext(context.Background())
}

func (i GetServerNicFirewallRuleArgs) ToGetServerNicFirewallRuleOutputWithContext(ctx context.Context) GetServerNicFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNicFirewallRuleOutput)
}

// GetServerNicFirewallRuleArrayInput is an input type that accepts GetServerNicFirewallRuleArray and GetServerNicFirewallRuleArrayOutput values.
// You can construct a concrete instance of `GetServerNicFirewallRuleArrayInput` via:
//
//	GetServerNicFirewallRuleArray{ GetServerNicFirewallRuleArgs{...} }
type GetServerNicFirewallRuleArrayInput interface {
	pulumi.Input

	ToGetServerNicFirewallRuleArrayOutput() GetServerNicFirewallRuleArrayOutput
	ToGetServerNicFirewallRuleArrayOutputWithContext(context.Context) GetServerNicFirewallRuleArrayOutput
}

type GetServerNicFirewallRuleArray []GetServerNicFirewallRuleInput

func (GetServerNicFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNicFirewallRule)(nil)).Elem()
}

func (i GetServerNicFirewallRuleArray) ToGetServerNicFirewallRuleArrayOutput() GetServerNicFirewallRuleArrayOutput {
	return i.ToGetServerNicFirewallRuleArrayOutputWithContext(context.Background())
}

func (i GetServerNicFirewallRuleArray) ToGetServerNicFirewallRuleArrayOutputWithContext(ctx context.Context) GetServerNicFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNicFirewallRuleArrayOutput)
}

type GetServerNicFirewallRuleOutput struct{ *pulumi.OutputState }

func (GetServerNicFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNicFirewallRule)(nil)).Elem()
}

func (o GetServerNicFirewallRuleOutput) ToGetServerNicFirewallRuleOutput() GetServerNicFirewallRuleOutput {
	return o
}

func (o GetServerNicFirewallRuleOutput) ToGetServerNicFirewallRuleOutputWithContext(ctx context.Context) GetServerNicFirewallRuleOutput {
	return o
}

// Defines the allowed code (from 0 to 254) if protocol ICMP is chosen
func (o GetServerNicFirewallRuleOutput) IcmpCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerNicFirewallRule) int { return v.IcmpCode }).(pulumi.IntOutput)
}

// Defines the allowed type (from 0 to 254) if the protocol ICMP is chosen
func (o GetServerNicFirewallRuleOutput) IcmpType() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerNicFirewallRule) int { return v.IcmpType }).(pulumi.IntOutput)
}

// ID of the server you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetServerNicFirewallRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNicFirewallRule) string { return v.Id }).(pulumi.StringOutput)
}

// Name of an existing server that you want to search for.
func (o GetServerNicFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNicFirewallRule) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen
func (o GetServerNicFirewallRuleOutput) PortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerNicFirewallRule) int { return v.PortRangeEnd }).(pulumi.IntOutput)
}

// Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen
func (o GetServerNicFirewallRuleOutput) PortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerNicFirewallRule) int { return v.PortRangeStart }).(pulumi.IntOutput)
}

// he protocol for the rule
func (o GetServerNicFirewallRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNicFirewallRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs
func (o GetServerNicFirewallRuleOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNicFirewallRule) string { return v.SourceIp }).(pulumi.StringOutput)
}

// Only traffic originating from the respective MAC address is allowed
func (o GetServerNicFirewallRuleOutput) SourceMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNicFirewallRule) string { return v.SourceMac }).(pulumi.StringOutput)
}

// In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed
func (o GetServerNicFirewallRuleOutput) TargetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNicFirewallRule) string { return v.TargetIp }).(pulumi.StringOutput)
}

// The type of firewall rule
func (o GetServerNicFirewallRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNicFirewallRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetServerNicFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (GetServerNicFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNicFirewallRule)(nil)).Elem()
}

func (o GetServerNicFirewallRuleArrayOutput) ToGetServerNicFirewallRuleArrayOutput() GetServerNicFirewallRuleArrayOutput {
	return o
}

func (o GetServerNicFirewallRuleArrayOutput) ToGetServerNicFirewallRuleArrayOutputWithContext(ctx context.Context) GetServerNicFirewallRuleArrayOutput {
	return o
}

func (o GetServerNicFirewallRuleArrayOutput) Index(i pulumi.IntInput) GetServerNicFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerNicFirewallRule {
		return vs[0].([]GetServerNicFirewallRule)[vs[1].(int)]
	}).(GetServerNicFirewallRuleOutput)
}

type GetServerVolume struct {
	// The availability zone in which the volume should exist
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The uuid of the Backup Unit that user has access to
	BackupUnitId string `pulumi:"backupUnitId"`
	// The UUID of the attached server.
	BootServer string `pulumi:"bootServer"`
	// The bus type of the volume
	Bus string `pulumi:"bus"`
	// Is capable of CPU hot plug (no reboot required)
	CpuHotPlug bool `pulumi:"cpuHotPlug"`
	// The Logical Unit Number (LUN) of the storage volume
	DeviceNumber int `pulumi:"deviceNumber"`
	// Is capable of Virt-IO drive hot plug (no reboot required)
	DiscVirtioHotPlug bool `pulumi:"discVirtioHotPlug"`
	// Is capable of Virt-IO drive hot unplug (no reboot required)
	DiscVirtioHotUnplug bool `pulumi:"discVirtioHotUnplug"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id        string `pulumi:"id"`
	ImageName string `pulumi:"imageName"`
	// Initial password to be set for installed OS
	ImagePassword string `pulumi:"imagePassword"`
	// OS type of this volume
	LicenceType string `pulumi:"licenceType"`
	// Name of an existing server that you want to search for.
	Name string `pulumi:"name"`
	// Is capable of nic hot plug (no reboot required)
	NicHotPlug bool `pulumi:"nicHotPlug"`
	// Is capable of nic hot unplug (no reboot required)
	NicHotUnplug bool `pulumi:"nicHotUnplug"`
	// The PCI slot number of the Nic
	PciSlot int `pulumi:"pciSlot"`
	// Is capable of memory hot plug (no reboot required)
	RamHotPlug bool `pulumi:"ramHotPlug"`
	// The size of the volume in GB
	Size int `pulumi:"size"`
	// Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key
	SshKeys []string `pulumi:"sshKeys"`
	// The type of firewall rule
	Type string `pulumi:"type"`
	// The cloud-init configuration for the volume as base64 encoded string
	UserData *string `pulumi:"userData"`
}

// GetServerVolumeInput is an input type that accepts GetServerVolumeArgs and GetServerVolumeOutput values.
// You can construct a concrete instance of `GetServerVolumeInput` via:
//
//	GetServerVolumeArgs{...}
type GetServerVolumeInput interface {
	pulumi.Input

	ToGetServerVolumeOutput() GetServerVolumeOutput
	ToGetServerVolumeOutputWithContext(context.Context) GetServerVolumeOutput
}

type GetServerVolumeArgs struct {
	// The availability zone in which the volume should exist
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// The uuid of the Backup Unit that user has access to
	BackupUnitId pulumi.StringInput `pulumi:"backupUnitId"`
	// The UUID of the attached server.
	BootServer pulumi.StringInput `pulumi:"bootServer"`
	// The bus type of the volume
	Bus pulumi.StringInput `pulumi:"bus"`
	// Is capable of CPU hot plug (no reboot required)
	CpuHotPlug pulumi.BoolInput `pulumi:"cpuHotPlug"`
	// The Logical Unit Number (LUN) of the storage volume
	DeviceNumber pulumi.IntInput `pulumi:"deviceNumber"`
	// Is capable of Virt-IO drive hot plug (no reboot required)
	DiscVirtioHotPlug pulumi.BoolInput `pulumi:"discVirtioHotPlug"`
	// Is capable of Virt-IO drive hot unplug (no reboot required)
	DiscVirtioHotUnplug pulumi.BoolInput `pulumi:"discVirtioHotUnplug"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id        pulumi.StringInput `pulumi:"id"`
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// Initial password to be set for installed OS
	ImagePassword pulumi.StringInput `pulumi:"imagePassword"`
	// OS type of this volume
	LicenceType pulumi.StringInput `pulumi:"licenceType"`
	// Name of an existing server that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
	// Is capable of nic hot plug (no reboot required)
	NicHotPlug pulumi.BoolInput `pulumi:"nicHotPlug"`
	// Is capable of nic hot unplug (no reboot required)
	NicHotUnplug pulumi.BoolInput `pulumi:"nicHotUnplug"`
	// The PCI slot number of the Nic
	PciSlot pulumi.IntInput `pulumi:"pciSlot"`
	// Is capable of memory hot plug (no reboot required)
	RamHotPlug pulumi.BoolInput `pulumi:"ramHotPlug"`
	// The size of the volume in GB
	Size pulumi.IntInput `pulumi:"size"`
	// Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key
	SshKeys pulumi.StringArrayInput `pulumi:"sshKeys"`
	// The type of firewall rule
	Type pulumi.StringInput `pulumi:"type"`
	// The cloud-init configuration for the volume as base64 encoded string
	UserData pulumi.StringPtrInput `pulumi:"userData"`
}

func (GetServerVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerVolume)(nil)).Elem()
}

func (i GetServerVolumeArgs) ToGetServerVolumeOutput() GetServerVolumeOutput {
	return i.ToGetServerVolumeOutputWithContext(context.Background())
}

func (i GetServerVolumeArgs) ToGetServerVolumeOutputWithContext(ctx context.Context) GetServerVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerVolumeOutput)
}

// GetServerVolumeArrayInput is an input type that accepts GetServerVolumeArray and GetServerVolumeArrayOutput values.
// You can construct a concrete instance of `GetServerVolumeArrayInput` via:
//
//	GetServerVolumeArray{ GetServerVolumeArgs{...} }
type GetServerVolumeArrayInput interface {
	pulumi.Input

	ToGetServerVolumeArrayOutput() GetServerVolumeArrayOutput
	ToGetServerVolumeArrayOutputWithContext(context.Context) GetServerVolumeArrayOutput
}

type GetServerVolumeArray []GetServerVolumeInput

func (GetServerVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerVolume)(nil)).Elem()
}

func (i GetServerVolumeArray) ToGetServerVolumeArrayOutput() GetServerVolumeArrayOutput {
	return i.ToGetServerVolumeArrayOutputWithContext(context.Background())
}

func (i GetServerVolumeArray) ToGetServerVolumeArrayOutputWithContext(ctx context.Context) GetServerVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerVolumeArrayOutput)
}

type GetServerVolumeOutput struct{ *pulumi.OutputState }

func (GetServerVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerVolume)(nil)).Elem()
}

func (o GetServerVolumeOutput) ToGetServerVolumeOutput() GetServerVolumeOutput {
	return o
}

func (o GetServerVolumeOutput) ToGetServerVolumeOutputWithContext(ctx context.Context) GetServerVolumeOutput {
	return o
}

// The availability zone in which the volume should exist
func (o GetServerVolumeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerVolume) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The uuid of the Backup Unit that user has access to
func (o GetServerVolumeOutput) BackupUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerVolume) string { return v.BackupUnitId }).(pulumi.StringOutput)
}

// The UUID of the attached server.
func (o GetServerVolumeOutput) BootServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerVolume) string { return v.BootServer }).(pulumi.StringOutput)
}

// The bus type of the volume
func (o GetServerVolumeOutput) Bus() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerVolume) string { return v.Bus }).(pulumi.StringOutput)
}

// Is capable of CPU hot plug (no reboot required)
func (o GetServerVolumeOutput) CpuHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerVolume) bool { return v.CpuHotPlug }).(pulumi.BoolOutput)
}

// The Logical Unit Number (LUN) of the storage volume
func (o GetServerVolumeOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerVolume) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

// Is capable of Virt-IO drive hot plug (no reboot required)
func (o GetServerVolumeOutput) DiscVirtioHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerVolume) bool { return v.DiscVirtioHotPlug }).(pulumi.BoolOutput)
}

// Is capable of Virt-IO drive hot unplug (no reboot required)
func (o GetServerVolumeOutput) DiscVirtioHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerVolume) bool { return v.DiscVirtioHotUnplug }).(pulumi.BoolOutput)
}

// ID of the server you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetServerVolumeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerVolume) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServerVolumeOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerVolume) string { return v.ImageName }).(pulumi.StringOutput)
}

// Initial password to be set for installed OS
func (o GetServerVolumeOutput) ImagePassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerVolume) string { return v.ImagePassword }).(pulumi.StringOutput)
}

// OS type of this volume
func (o GetServerVolumeOutput) LicenceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerVolume) string { return v.LicenceType }).(pulumi.StringOutput)
}

// Name of an existing server that you want to search for.
func (o GetServerVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerVolume) string { return v.Name }).(pulumi.StringOutput)
}

// Is capable of nic hot plug (no reboot required)
func (o GetServerVolumeOutput) NicHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerVolume) bool { return v.NicHotPlug }).(pulumi.BoolOutput)
}

// Is capable of nic hot unplug (no reboot required)
func (o GetServerVolumeOutput) NicHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerVolume) bool { return v.NicHotUnplug }).(pulumi.BoolOutput)
}

// The PCI slot number of the Nic
func (o GetServerVolumeOutput) PciSlot() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerVolume) int { return v.PciSlot }).(pulumi.IntOutput)
}

// Is capable of memory hot plug (no reboot required)
func (o GetServerVolumeOutput) RamHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerVolume) bool { return v.RamHotPlug }).(pulumi.BoolOutput)
}

// The size of the volume in GB
func (o GetServerVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerVolume) int { return v.Size }).(pulumi.IntOutput)
}

// Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key
func (o GetServerVolumeOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerVolume) []string { return v.SshKeys }).(pulumi.StringArrayOutput)
}

// The type of firewall rule
func (o GetServerVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerVolume) string { return v.Type }).(pulumi.StringOutput)
}

// The cloud-init configuration for the volume as base64 encoded string
func (o GetServerVolumeOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServerVolume) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type GetServerVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetServerVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerVolume)(nil)).Elem()
}

func (o GetServerVolumeArrayOutput) ToGetServerVolumeArrayOutput() GetServerVolumeArrayOutput {
	return o
}

func (o GetServerVolumeArrayOutput) ToGetServerVolumeArrayOutputWithContext(ctx context.Context) GetServerVolumeArrayOutput {
	return o
}

func (o GetServerVolumeArrayOutput) Index(i pulumi.IntInput) GetServerVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerVolume {
		return vs[0].([]GetServerVolume)[vs[1].(int)]
	}).(GetServerVolumeOutput)
}

type GetServersFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetServersFilterInput is an input type that accepts GetServersFilterArgs and GetServersFilterOutput values.
// You can construct a concrete instance of `GetServersFilterInput` via:
//
//	GetServersFilterArgs{...}
type GetServersFilterInput interface {
	pulumi.Input

	ToGetServersFilterOutput() GetServersFilterOutput
	ToGetServersFilterOutputWithContext(context.Context) GetServersFilterOutput
}

type GetServersFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetServersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersFilter)(nil)).Elem()
}

func (i GetServersFilterArgs) ToGetServersFilterOutput() GetServersFilterOutput {
	return i.ToGetServersFilterOutputWithContext(context.Background())
}

func (i GetServersFilterArgs) ToGetServersFilterOutputWithContext(ctx context.Context) GetServersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersFilterOutput)
}

// GetServersFilterArrayInput is an input type that accepts GetServersFilterArray and GetServersFilterArrayOutput values.
// You can construct a concrete instance of `GetServersFilterArrayInput` via:
//
//	GetServersFilterArray{ GetServersFilterArgs{...} }
type GetServersFilterArrayInput interface {
	pulumi.Input

	ToGetServersFilterArrayOutput() GetServersFilterArrayOutput
	ToGetServersFilterArrayOutputWithContext(context.Context) GetServersFilterArrayOutput
}

type GetServersFilterArray []GetServersFilterInput

func (GetServersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersFilter)(nil)).Elem()
}

func (i GetServersFilterArray) ToGetServersFilterArrayOutput() GetServersFilterArrayOutput {
	return i.ToGetServersFilterArrayOutputWithContext(context.Background())
}

func (i GetServersFilterArray) ToGetServersFilterArrayOutputWithContext(ctx context.Context) GetServersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersFilterArrayOutput)
}

type GetServersFilterOutput struct{ *pulumi.OutputState }

func (GetServersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersFilter)(nil)).Elem()
}

func (o GetServersFilterOutput) ToGetServersFilterOutput() GetServersFilterOutput {
	return o
}

func (o GetServersFilterOutput) ToGetServersFilterOutputWithContext(ctx context.Context) GetServersFilterOutput {
	return o
}

func (o GetServersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServersFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetServersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetServersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersFilter)(nil)).Elem()
}

func (o GetServersFilterArrayOutput) ToGetServersFilterArrayOutput() GetServersFilterArrayOutput {
	return o
}

func (o GetServersFilterArrayOutput) ToGetServersFilterArrayOutputWithContext(ctx context.Context) GetServersFilterArrayOutput {
	return o
}

func (o GetServersFilterArrayOutput) Index(i pulumi.IntInput) GetServersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServersFilter {
		return vs[0].([]GetServersFilter)[vs[1].(int)]
	}).(GetServersFilterOutput)
}

type GetServersServer struct {
	AvailabilityZone string                  `pulumi:"availabilityZone"`
	BootCdrom        string                  `pulumi:"bootCdrom"`
	BootImage        string                  `pulumi:"bootImage"`
	BootVolume       string                  `pulumi:"bootVolume"`
	Cdroms           []GetServersServerCdrom `pulumi:"cdroms"`
	Cores            int                     `pulumi:"cores"`
	CpuFamily        string                  `pulumi:"cpuFamily"`
	// The unique ID of the server.
	Id           string                   `pulumi:"id"`
	Labels       []GetServersServerLabel  `pulumi:"labels"`
	Name         *string                  `pulumi:"name"`
	Nics         []GetServersServerNic    `pulumi:"nics"`
	Ram          int                      `pulumi:"ram"`
	TemplateUuid *string                  `pulumi:"templateUuid"`
	Token        string                   `pulumi:"token"`
	Type         string                   `pulumi:"type"`
	VmState      string                   `pulumi:"vmState"`
	Volumes      []GetServersServerVolume `pulumi:"volumes"`
}

// GetServersServerInput is an input type that accepts GetServersServerArgs and GetServersServerOutput values.
// You can construct a concrete instance of `GetServersServerInput` via:
//
//	GetServersServerArgs{...}
type GetServersServerInput interface {
	pulumi.Input

	ToGetServersServerOutput() GetServersServerOutput
	ToGetServersServerOutputWithContext(context.Context) GetServersServerOutput
}

type GetServersServerArgs struct {
	AvailabilityZone pulumi.StringInput              `pulumi:"availabilityZone"`
	BootCdrom        pulumi.StringInput              `pulumi:"bootCdrom"`
	BootImage        pulumi.StringInput              `pulumi:"bootImage"`
	BootVolume       pulumi.StringInput              `pulumi:"bootVolume"`
	Cdroms           GetServersServerCdromArrayInput `pulumi:"cdroms"`
	Cores            pulumi.IntInput                 `pulumi:"cores"`
	CpuFamily        pulumi.StringInput              `pulumi:"cpuFamily"`
	// The unique ID of the server.
	Id           pulumi.StringInput               `pulumi:"id"`
	Labels       GetServersServerLabelArrayInput  `pulumi:"labels"`
	Name         pulumi.StringPtrInput            `pulumi:"name"`
	Nics         GetServersServerNicArrayInput    `pulumi:"nics"`
	Ram          pulumi.IntInput                  `pulumi:"ram"`
	TemplateUuid pulumi.StringPtrInput            `pulumi:"templateUuid"`
	Token        pulumi.StringInput               `pulumi:"token"`
	Type         pulumi.StringInput               `pulumi:"type"`
	VmState      pulumi.StringInput               `pulumi:"vmState"`
	Volumes      GetServersServerVolumeArrayInput `pulumi:"volumes"`
}

func (GetServersServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServer)(nil)).Elem()
}

func (i GetServersServerArgs) ToGetServersServerOutput() GetServersServerOutput {
	return i.ToGetServersServerOutputWithContext(context.Background())
}

func (i GetServersServerArgs) ToGetServersServerOutputWithContext(ctx context.Context) GetServersServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerOutput)
}

// GetServersServerArrayInput is an input type that accepts GetServersServerArray and GetServersServerArrayOutput values.
// You can construct a concrete instance of `GetServersServerArrayInput` via:
//
//	GetServersServerArray{ GetServersServerArgs{...} }
type GetServersServerArrayInput interface {
	pulumi.Input

	ToGetServersServerArrayOutput() GetServersServerArrayOutput
	ToGetServersServerArrayOutputWithContext(context.Context) GetServersServerArrayOutput
}

type GetServersServerArray []GetServersServerInput

func (GetServersServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServer)(nil)).Elem()
}

func (i GetServersServerArray) ToGetServersServerArrayOutput() GetServersServerArrayOutput {
	return i.ToGetServersServerArrayOutputWithContext(context.Background())
}

func (i GetServersServerArray) ToGetServersServerArrayOutputWithContext(ctx context.Context) GetServersServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerArrayOutput)
}

type GetServersServerOutput struct{ *pulumi.OutputState }

func (GetServersServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServer)(nil)).Elem()
}

func (o GetServersServerOutput) ToGetServersServerOutput() GetServersServerOutput {
	return o
}

func (o GetServersServerOutput) ToGetServersServerOutputWithContext(ctx context.Context) GetServersServerOutput {
	return o
}

func (o GetServersServerOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) BootCdrom() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.BootCdrom }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) BootImage() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.BootImage }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) BootVolume() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.BootVolume }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) Cdroms() GetServersServerCdromArrayOutput {
	return o.ApplyT(func(v GetServersServer) []GetServersServerCdrom { return v.Cdroms }).(GetServersServerCdromArrayOutput)
}

func (o GetServersServerOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServer) int { return v.Cores }).(pulumi.IntOutput)
}

func (o GetServersServerOutput) CpuFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.CpuFamily }).(pulumi.StringOutput)
}

// The unique ID of the server.
func (o GetServersServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) Labels() GetServersServerLabelArrayOutput {
	return o.ApplyT(func(v GetServersServer) []GetServersServerLabel { return v.Labels }).(GetServersServerLabelArrayOutput)
}

func (o GetServersServerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServersServer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetServersServerOutput) Nics() GetServersServerNicArrayOutput {
	return o.ApplyT(func(v GetServersServer) []GetServersServerNic { return v.Nics }).(GetServersServerNicArrayOutput)
}

func (o GetServersServerOutput) Ram() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServer) int { return v.Ram }).(pulumi.IntOutput)
}

func (o GetServersServerOutput) TemplateUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServersServer) *string { return v.TemplateUuid }).(pulumi.StringPtrOutput)
}

func (o GetServersServerOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.Token }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) VmState() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.VmState }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) Volumes() GetServersServerVolumeArrayOutput {
	return o.ApplyT(func(v GetServersServer) []GetServersServerVolume { return v.Volumes }).(GetServersServerVolumeArrayOutput)
}

type GetServersServerArrayOutput struct{ *pulumi.OutputState }

func (GetServersServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServer)(nil)).Elem()
}

func (o GetServersServerArrayOutput) ToGetServersServerArrayOutput() GetServersServerArrayOutput {
	return o
}

func (o GetServersServerArrayOutput) ToGetServersServerArrayOutputWithContext(ctx context.Context) GetServersServerArrayOutput {
	return o
}

func (o GetServersServerArrayOutput) Index(i pulumi.IntInput) GetServersServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServersServer {
		return vs[0].([]GetServersServer)[vs[1].(int)]
	}).(GetServersServerOutput)
}

type GetServersServerCdrom struct {
	CloudInit           string   `pulumi:"cloudInit"`
	CpuHotPlug          bool     `pulumi:"cpuHotPlug"`
	CpuHotUnplug        bool     `pulumi:"cpuHotUnplug"`
	Description         string   `pulumi:"description"`
	DiscScsiHotPlug     bool     `pulumi:"discScsiHotPlug"`
	DiscScsiHotUnplug   bool     `pulumi:"discScsiHotUnplug"`
	DiscVirtioHotPlug   bool     `pulumi:"discVirtioHotPlug"`
	DiscVirtioHotUnplug bool     `pulumi:"discVirtioHotUnplug"`
	Id                  string   `pulumi:"id"`
	ImageAliases        []string `pulumi:"imageAliases"`
	ImageType           string   `pulumi:"imageType"`
	LicenceType         string   `pulumi:"licenceType"`
	Location            string   `pulumi:"location"`
	Name                string   `pulumi:"name"`
	NicHotPlug          bool     `pulumi:"nicHotPlug"`
	NicHotUnplug        bool     `pulumi:"nicHotUnplug"`
	Public              bool     `pulumi:"public"`
	RamHotPlug          bool     `pulumi:"ramHotPlug"`
	RamHotUnplug        bool     `pulumi:"ramHotUnplug"`
	Size                float64  `pulumi:"size"`
}

// GetServersServerCdromInput is an input type that accepts GetServersServerCdromArgs and GetServersServerCdromOutput values.
// You can construct a concrete instance of `GetServersServerCdromInput` via:
//
//	GetServersServerCdromArgs{...}
type GetServersServerCdromInput interface {
	pulumi.Input

	ToGetServersServerCdromOutput() GetServersServerCdromOutput
	ToGetServersServerCdromOutputWithContext(context.Context) GetServersServerCdromOutput
}

type GetServersServerCdromArgs struct {
	CloudInit           pulumi.StringInput      `pulumi:"cloudInit"`
	CpuHotPlug          pulumi.BoolInput        `pulumi:"cpuHotPlug"`
	CpuHotUnplug        pulumi.BoolInput        `pulumi:"cpuHotUnplug"`
	Description         pulumi.StringInput      `pulumi:"description"`
	DiscScsiHotPlug     pulumi.BoolInput        `pulumi:"discScsiHotPlug"`
	DiscScsiHotUnplug   pulumi.BoolInput        `pulumi:"discScsiHotUnplug"`
	DiscVirtioHotPlug   pulumi.BoolInput        `pulumi:"discVirtioHotPlug"`
	DiscVirtioHotUnplug pulumi.BoolInput        `pulumi:"discVirtioHotUnplug"`
	Id                  pulumi.StringInput      `pulumi:"id"`
	ImageAliases        pulumi.StringArrayInput `pulumi:"imageAliases"`
	ImageType           pulumi.StringInput      `pulumi:"imageType"`
	LicenceType         pulumi.StringInput      `pulumi:"licenceType"`
	Location            pulumi.StringInput      `pulumi:"location"`
	Name                pulumi.StringInput      `pulumi:"name"`
	NicHotPlug          pulumi.BoolInput        `pulumi:"nicHotPlug"`
	NicHotUnplug        pulumi.BoolInput        `pulumi:"nicHotUnplug"`
	Public              pulumi.BoolInput        `pulumi:"public"`
	RamHotPlug          pulumi.BoolInput        `pulumi:"ramHotPlug"`
	RamHotUnplug        pulumi.BoolInput        `pulumi:"ramHotUnplug"`
	Size                pulumi.Float64Input     `pulumi:"size"`
}

func (GetServersServerCdromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerCdrom)(nil)).Elem()
}

func (i GetServersServerCdromArgs) ToGetServersServerCdromOutput() GetServersServerCdromOutput {
	return i.ToGetServersServerCdromOutputWithContext(context.Background())
}

func (i GetServersServerCdromArgs) ToGetServersServerCdromOutputWithContext(ctx context.Context) GetServersServerCdromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerCdromOutput)
}

// GetServersServerCdromArrayInput is an input type that accepts GetServersServerCdromArray and GetServersServerCdromArrayOutput values.
// You can construct a concrete instance of `GetServersServerCdromArrayInput` via:
//
//	GetServersServerCdromArray{ GetServersServerCdromArgs{...} }
type GetServersServerCdromArrayInput interface {
	pulumi.Input

	ToGetServersServerCdromArrayOutput() GetServersServerCdromArrayOutput
	ToGetServersServerCdromArrayOutputWithContext(context.Context) GetServersServerCdromArrayOutput
}

type GetServersServerCdromArray []GetServersServerCdromInput

func (GetServersServerCdromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerCdrom)(nil)).Elem()
}

func (i GetServersServerCdromArray) ToGetServersServerCdromArrayOutput() GetServersServerCdromArrayOutput {
	return i.ToGetServersServerCdromArrayOutputWithContext(context.Background())
}

func (i GetServersServerCdromArray) ToGetServersServerCdromArrayOutputWithContext(ctx context.Context) GetServersServerCdromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerCdromArrayOutput)
}

type GetServersServerCdromOutput struct{ *pulumi.OutputState }

func (GetServersServerCdromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerCdrom)(nil)).Elem()
}

func (o GetServersServerCdromOutput) ToGetServersServerCdromOutput() GetServersServerCdromOutput {
	return o
}

func (o GetServersServerCdromOutput) ToGetServersServerCdromOutputWithContext(ctx context.Context) GetServersServerCdromOutput {
	return o
}

func (o GetServersServerCdromOutput) CloudInit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerCdrom) string { return v.CloudInit }).(pulumi.StringOutput)
}

func (o GetServersServerCdromOutput) CpuHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.CpuHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) CpuHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.CpuHotUnplug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerCdrom) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetServersServerCdromOutput) DiscScsiHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.DiscScsiHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) DiscScsiHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.DiscScsiHotUnplug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) DiscVirtioHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.DiscVirtioHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) DiscVirtioHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.DiscVirtioHotUnplug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerCdrom) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServersServerCdromOutput) ImageAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServersServerCdrom) []string { return v.ImageAliases }).(pulumi.StringArrayOutput)
}

func (o GetServersServerCdromOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerCdrom) string { return v.ImageType }).(pulumi.StringOutput)
}

func (o GetServersServerCdromOutput) LicenceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerCdrom) string { return v.LicenceType }).(pulumi.StringOutput)
}

func (o GetServersServerCdromOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerCdrom) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetServersServerCdromOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerCdrom) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServersServerCdromOutput) NicHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.NicHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) NicHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.NicHotUnplug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.Public }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) RamHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.RamHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) RamHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.RamHotUnplug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v GetServersServerCdrom) float64 { return v.Size }).(pulumi.Float64Output)
}

type GetServersServerCdromArrayOutput struct{ *pulumi.OutputState }

func (GetServersServerCdromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerCdrom)(nil)).Elem()
}

func (o GetServersServerCdromArrayOutput) ToGetServersServerCdromArrayOutput() GetServersServerCdromArrayOutput {
	return o
}

func (o GetServersServerCdromArrayOutput) ToGetServersServerCdromArrayOutputWithContext(ctx context.Context) GetServersServerCdromArrayOutput {
	return o
}

func (o GetServersServerCdromArrayOutput) Index(i pulumi.IntInput) GetServersServerCdromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServersServerCdrom {
		return vs[0].([]GetServersServerCdrom)[vs[1].(int)]
	}).(GetServersServerCdromOutput)
}

type GetServersServerLabel struct {
	Id    string `pulumi:"id"`
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// GetServersServerLabelInput is an input type that accepts GetServersServerLabelArgs and GetServersServerLabelOutput values.
// You can construct a concrete instance of `GetServersServerLabelInput` via:
//
//	GetServersServerLabelArgs{...}
type GetServersServerLabelInput interface {
	pulumi.Input

	ToGetServersServerLabelOutput() GetServersServerLabelOutput
	ToGetServersServerLabelOutputWithContext(context.Context) GetServersServerLabelOutput
}

type GetServersServerLabelArgs struct {
	Id    pulumi.StringInput `pulumi:"id"`
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetServersServerLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerLabel)(nil)).Elem()
}

func (i GetServersServerLabelArgs) ToGetServersServerLabelOutput() GetServersServerLabelOutput {
	return i.ToGetServersServerLabelOutputWithContext(context.Background())
}

func (i GetServersServerLabelArgs) ToGetServersServerLabelOutputWithContext(ctx context.Context) GetServersServerLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerLabelOutput)
}

// GetServersServerLabelArrayInput is an input type that accepts GetServersServerLabelArray and GetServersServerLabelArrayOutput values.
// You can construct a concrete instance of `GetServersServerLabelArrayInput` via:
//
//	GetServersServerLabelArray{ GetServersServerLabelArgs{...} }
type GetServersServerLabelArrayInput interface {
	pulumi.Input

	ToGetServersServerLabelArrayOutput() GetServersServerLabelArrayOutput
	ToGetServersServerLabelArrayOutputWithContext(context.Context) GetServersServerLabelArrayOutput
}

type GetServersServerLabelArray []GetServersServerLabelInput

func (GetServersServerLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerLabel)(nil)).Elem()
}

func (i GetServersServerLabelArray) ToGetServersServerLabelArrayOutput() GetServersServerLabelArrayOutput {
	return i.ToGetServersServerLabelArrayOutputWithContext(context.Background())
}

func (i GetServersServerLabelArray) ToGetServersServerLabelArrayOutputWithContext(ctx context.Context) GetServersServerLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerLabelArrayOutput)
}

type GetServersServerLabelOutput struct{ *pulumi.OutputState }

func (GetServersServerLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerLabel)(nil)).Elem()
}

func (o GetServersServerLabelOutput) ToGetServersServerLabelOutput() GetServersServerLabelOutput {
	return o
}

func (o GetServersServerLabelOutput) ToGetServersServerLabelOutputWithContext(ctx context.Context) GetServersServerLabelOutput {
	return o
}

func (o GetServersServerLabelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerLabel) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServersServerLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerLabel) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetServersServerLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetServersServerLabelArrayOutput struct{ *pulumi.OutputState }

func (GetServersServerLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerLabel)(nil)).Elem()
}

func (o GetServersServerLabelArrayOutput) ToGetServersServerLabelArrayOutput() GetServersServerLabelArrayOutput {
	return o
}

func (o GetServersServerLabelArrayOutput) ToGetServersServerLabelArrayOutputWithContext(ctx context.Context) GetServersServerLabelArrayOutput {
	return o
}

func (o GetServersServerLabelArrayOutput) Index(i pulumi.IntInput) GetServersServerLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServersServerLabel {
		return vs[0].([]GetServersServerLabel)[vs[1].(int)]
	}).(GetServersServerLabelOutput)
}

type GetServersServerNic struct {
	DeviceNumber   int                               `pulumi:"deviceNumber"`
	Dhcp           bool                              `pulumi:"dhcp"`
	Dhcpv6         *bool                             `pulumi:"dhcpv6"`
	FirewallActive bool                              `pulumi:"firewallActive"`
	FirewallRules  []GetServersServerNicFirewallRule `pulumi:"firewallRules"`
	FirewallType   string                            `pulumi:"firewallType"`
	Id             string                            `pulumi:"id"`
	Ips            []string                          `pulumi:"ips"`
	Ipv6CidrBlock  string                            `pulumi:"ipv6CidrBlock"`
	Ipv6Ips        []string                          `pulumi:"ipv6Ips"`
	Lan            int                               `pulumi:"lan"`
	Mac            string                            `pulumi:"mac"`
	Name           string                            `pulumi:"name"`
	PciSlot        int                               `pulumi:"pciSlot"`
}

// GetServersServerNicInput is an input type that accepts GetServersServerNicArgs and GetServersServerNicOutput values.
// You can construct a concrete instance of `GetServersServerNicInput` via:
//
//	GetServersServerNicArgs{...}
type GetServersServerNicInput interface {
	pulumi.Input

	ToGetServersServerNicOutput() GetServersServerNicOutput
	ToGetServersServerNicOutputWithContext(context.Context) GetServersServerNicOutput
}

type GetServersServerNicArgs struct {
	DeviceNumber   pulumi.IntInput                           `pulumi:"deviceNumber"`
	Dhcp           pulumi.BoolInput                          `pulumi:"dhcp"`
	Dhcpv6         pulumi.BoolPtrInput                       `pulumi:"dhcpv6"`
	FirewallActive pulumi.BoolInput                          `pulumi:"firewallActive"`
	FirewallRules  GetServersServerNicFirewallRuleArrayInput `pulumi:"firewallRules"`
	FirewallType   pulumi.StringInput                        `pulumi:"firewallType"`
	Id             pulumi.StringInput                        `pulumi:"id"`
	Ips            pulumi.StringArrayInput                   `pulumi:"ips"`
	Ipv6CidrBlock  pulumi.StringInput                        `pulumi:"ipv6CidrBlock"`
	Ipv6Ips        pulumi.StringArrayInput                   `pulumi:"ipv6Ips"`
	Lan            pulumi.IntInput                           `pulumi:"lan"`
	Mac            pulumi.StringInput                        `pulumi:"mac"`
	Name           pulumi.StringInput                        `pulumi:"name"`
	PciSlot        pulumi.IntInput                           `pulumi:"pciSlot"`
}

func (GetServersServerNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerNic)(nil)).Elem()
}

func (i GetServersServerNicArgs) ToGetServersServerNicOutput() GetServersServerNicOutput {
	return i.ToGetServersServerNicOutputWithContext(context.Background())
}

func (i GetServersServerNicArgs) ToGetServersServerNicOutputWithContext(ctx context.Context) GetServersServerNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerNicOutput)
}

// GetServersServerNicArrayInput is an input type that accepts GetServersServerNicArray and GetServersServerNicArrayOutput values.
// You can construct a concrete instance of `GetServersServerNicArrayInput` via:
//
//	GetServersServerNicArray{ GetServersServerNicArgs{...} }
type GetServersServerNicArrayInput interface {
	pulumi.Input

	ToGetServersServerNicArrayOutput() GetServersServerNicArrayOutput
	ToGetServersServerNicArrayOutputWithContext(context.Context) GetServersServerNicArrayOutput
}

type GetServersServerNicArray []GetServersServerNicInput

func (GetServersServerNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerNic)(nil)).Elem()
}

func (i GetServersServerNicArray) ToGetServersServerNicArrayOutput() GetServersServerNicArrayOutput {
	return i.ToGetServersServerNicArrayOutputWithContext(context.Background())
}

func (i GetServersServerNicArray) ToGetServersServerNicArrayOutputWithContext(ctx context.Context) GetServersServerNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerNicArrayOutput)
}

type GetServersServerNicOutput struct{ *pulumi.OutputState }

func (GetServersServerNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerNic)(nil)).Elem()
}

func (o GetServersServerNicOutput) ToGetServersServerNicOutput() GetServersServerNicOutput {
	return o
}

func (o GetServersServerNicOutput) ToGetServersServerNicOutputWithContext(ctx context.Context) GetServersServerNicOutput {
	return o
}

func (o GetServersServerNicOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerNic) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

func (o GetServersServerNicOutput) Dhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerNic) bool { return v.Dhcp }).(pulumi.BoolOutput)
}

func (o GetServersServerNicOutput) Dhcpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServersServerNic) *bool { return v.Dhcpv6 }).(pulumi.BoolPtrOutput)
}

func (o GetServersServerNicOutput) FirewallActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerNic) bool { return v.FirewallActive }).(pulumi.BoolOutput)
}

func (o GetServersServerNicOutput) FirewallRules() GetServersServerNicFirewallRuleArrayOutput {
	return o.ApplyT(func(v GetServersServerNic) []GetServersServerNicFirewallRule { return v.FirewallRules }).(GetServersServerNicFirewallRuleArrayOutput)
}

func (o GetServersServerNicOutput) FirewallType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNic) string { return v.FirewallType }).(pulumi.StringOutput)
}

func (o GetServersServerNicOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNic) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServersServerNicOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServersServerNic) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o GetServersServerNicOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNic) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

func (o GetServersServerNicOutput) Ipv6Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServersServerNic) []string { return v.Ipv6Ips }).(pulumi.StringArrayOutput)
}

func (o GetServersServerNicOutput) Lan() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerNic) int { return v.Lan }).(pulumi.IntOutput)
}

func (o GetServersServerNicOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNic) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetServersServerNicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNic) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServersServerNicOutput) PciSlot() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerNic) int { return v.PciSlot }).(pulumi.IntOutput)
}

type GetServersServerNicArrayOutput struct{ *pulumi.OutputState }

func (GetServersServerNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerNic)(nil)).Elem()
}

func (o GetServersServerNicArrayOutput) ToGetServersServerNicArrayOutput() GetServersServerNicArrayOutput {
	return o
}

func (o GetServersServerNicArrayOutput) ToGetServersServerNicArrayOutputWithContext(ctx context.Context) GetServersServerNicArrayOutput {
	return o
}

func (o GetServersServerNicArrayOutput) Index(i pulumi.IntInput) GetServersServerNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServersServerNic {
		return vs[0].([]GetServersServerNic)[vs[1].(int)]
	}).(GetServersServerNicOutput)
}

type GetServersServerNicFirewallRule struct {
	IcmpCode       int    `pulumi:"icmpCode"`
	IcmpType       int    `pulumi:"icmpType"`
	Id             string `pulumi:"id"`
	Name           string `pulumi:"name"`
	PortRangeEnd   int    `pulumi:"portRangeEnd"`
	PortRangeStart int    `pulumi:"portRangeStart"`
	Protocol       string `pulumi:"protocol"`
	SourceIp       string `pulumi:"sourceIp"`
	SourceMac      string `pulumi:"sourceMac"`
	TargetIp       string `pulumi:"targetIp"`
	Type           string `pulumi:"type"`
}

// GetServersServerNicFirewallRuleInput is an input type that accepts GetServersServerNicFirewallRuleArgs and GetServersServerNicFirewallRuleOutput values.
// You can construct a concrete instance of `GetServersServerNicFirewallRuleInput` via:
//
//	GetServersServerNicFirewallRuleArgs{...}
type GetServersServerNicFirewallRuleInput interface {
	pulumi.Input

	ToGetServersServerNicFirewallRuleOutput() GetServersServerNicFirewallRuleOutput
	ToGetServersServerNicFirewallRuleOutputWithContext(context.Context) GetServersServerNicFirewallRuleOutput
}

type GetServersServerNicFirewallRuleArgs struct {
	IcmpCode       pulumi.IntInput    `pulumi:"icmpCode"`
	IcmpType       pulumi.IntInput    `pulumi:"icmpType"`
	Id             pulumi.StringInput `pulumi:"id"`
	Name           pulumi.StringInput `pulumi:"name"`
	PortRangeEnd   pulumi.IntInput    `pulumi:"portRangeEnd"`
	PortRangeStart pulumi.IntInput    `pulumi:"portRangeStart"`
	Protocol       pulumi.StringInput `pulumi:"protocol"`
	SourceIp       pulumi.StringInput `pulumi:"sourceIp"`
	SourceMac      pulumi.StringInput `pulumi:"sourceMac"`
	TargetIp       pulumi.StringInput `pulumi:"targetIp"`
	Type           pulumi.StringInput `pulumi:"type"`
}

func (GetServersServerNicFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerNicFirewallRule)(nil)).Elem()
}

func (i GetServersServerNicFirewallRuleArgs) ToGetServersServerNicFirewallRuleOutput() GetServersServerNicFirewallRuleOutput {
	return i.ToGetServersServerNicFirewallRuleOutputWithContext(context.Background())
}

func (i GetServersServerNicFirewallRuleArgs) ToGetServersServerNicFirewallRuleOutputWithContext(ctx context.Context) GetServersServerNicFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerNicFirewallRuleOutput)
}

// GetServersServerNicFirewallRuleArrayInput is an input type that accepts GetServersServerNicFirewallRuleArray and GetServersServerNicFirewallRuleArrayOutput values.
// You can construct a concrete instance of `GetServersServerNicFirewallRuleArrayInput` via:
//
//	GetServersServerNicFirewallRuleArray{ GetServersServerNicFirewallRuleArgs{...} }
type GetServersServerNicFirewallRuleArrayInput interface {
	pulumi.Input

	ToGetServersServerNicFirewallRuleArrayOutput() GetServersServerNicFirewallRuleArrayOutput
	ToGetServersServerNicFirewallRuleArrayOutputWithContext(context.Context) GetServersServerNicFirewallRuleArrayOutput
}

type GetServersServerNicFirewallRuleArray []GetServersServerNicFirewallRuleInput

func (GetServersServerNicFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerNicFirewallRule)(nil)).Elem()
}

func (i GetServersServerNicFirewallRuleArray) ToGetServersServerNicFirewallRuleArrayOutput() GetServersServerNicFirewallRuleArrayOutput {
	return i.ToGetServersServerNicFirewallRuleArrayOutputWithContext(context.Background())
}

func (i GetServersServerNicFirewallRuleArray) ToGetServersServerNicFirewallRuleArrayOutputWithContext(ctx context.Context) GetServersServerNicFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerNicFirewallRuleArrayOutput)
}

type GetServersServerNicFirewallRuleOutput struct{ *pulumi.OutputState }

func (GetServersServerNicFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerNicFirewallRule)(nil)).Elem()
}

func (o GetServersServerNicFirewallRuleOutput) ToGetServersServerNicFirewallRuleOutput() GetServersServerNicFirewallRuleOutput {
	return o
}

func (o GetServersServerNicFirewallRuleOutput) ToGetServersServerNicFirewallRuleOutputWithContext(ctx context.Context) GetServersServerNicFirewallRuleOutput {
	return o
}

func (o GetServersServerNicFirewallRuleOutput) IcmpCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) int { return v.IcmpCode }).(pulumi.IntOutput)
}

func (o GetServersServerNicFirewallRuleOutput) IcmpType() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) int { return v.IcmpType }).(pulumi.IntOutput)
}

func (o GetServersServerNicFirewallRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServersServerNicFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServersServerNicFirewallRuleOutput) PortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) int { return v.PortRangeEnd }).(pulumi.IntOutput)
}

func (o GetServersServerNicFirewallRuleOutput) PortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) int { return v.PortRangeStart }).(pulumi.IntOutput)
}

func (o GetServersServerNicFirewallRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetServersServerNicFirewallRuleOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) string { return v.SourceIp }).(pulumi.StringOutput)
}

func (o GetServersServerNicFirewallRuleOutput) SourceMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) string { return v.SourceMac }).(pulumi.StringOutput)
}

func (o GetServersServerNicFirewallRuleOutput) TargetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) string { return v.TargetIp }).(pulumi.StringOutput)
}

func (o GetServersServerNicFirewallRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetServersServerNicFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (GetServersServerNicFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerNicFirewallRule)(nil)).Elem()
}

func (o GetServersServerNicFirewallRuleArrayOutput) ToGetServersServerNicFirewallRuleArrayOutput() GetServersServerNicFirewallRuleArrayOutput {
	return o
}

func (o GetServersServerNicFirewallRuleArrayOutput) ToGetServersServerNicFirewallRuleArrayOutputWithContext(ctx context.Context) GetServersServerNicFirewallRuleArrayOutput {
	return o
}

func (o GetServersServerNicFirewallRuleArrayOutput) Index(i pulumi.IntInput) GetServersServerNicFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServersServerNicFirewallRule {
		return vs[0].([]GetServersServerNicFirewallRule)[vs[1].(int)]
	}).(GetServersServerNicFirewallRuleOutput)
}

type GetServersServerVolume struct {
	AvailabilityZone string `pulumi:"availabilityZone"`
	BackupUnitId     string `pulumi:"backupUnitId"`
	// The UUID of the attached server.
	BootServer          string   `pulumi:"bootServer"`
	Bus                 string   `pulumi:"bus"`
	CpuHotPlug          bool     `pulumi:"cpuHotPlug"`
	DeviceNumber        int      `pulumi:"deviceNumber"`
	DiscVirtioHotPlug   bool     `pulumi:"discVirtioHotPlug"`
	DiscVirtioHotUnplug bool     `pulumi:"discVirtioHotUnplug"`
	DiskType            string   `pulumi:"diskType"`
	Id                  string   `pulumi:"id"`
	ImageName           string   `pulumi:"imageName"`
	ImagePassword       string   `pulumi:"imagePassword"`
	LicenceType         string   `pulumi:"licenceType"`
	Name                string   `pulumi:"name"`
	NicHotPlug          bool     `pulumi:"nicHotPlug"`
	NicHotUnplug        bool     `pulumi:"nicHotUnplug"`
	PciSlot             int      `pulumi:"pciSlot"`
	RamHotPlug          bool     `pulumi:"ramHotPlug"`
	Size                int      `pulumi:"size"`
	SshKeys             []string `pulumi:"sshKeys"`
	UserData            *string  `pulumi:"userData"`
}

// GetServersServerVolumeInput is an input type that accepts GetServersServerVolumeArgs and GetServersServerVolumeOutput values.
// You can construct a concrete instance of `GetServersServerVolumeInput` via:
//
//	GetServersServerVolumeArgs{...}
type GetServersServerVolumeInput interface {
	pulumi.Input

	ToGetServersServerVolumeOutput() GetServersServerVolumeOutput
	ToGetServersServerVolumeOutputWithContext(context.Context) GetServersServerVolumeOutput
}

type GetServersServerVolumeArgs struct {
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	BackupUnitId     pulumi.StringInput `pulumi:"backupUnitId"`
	// The UUID of the attached server.
	BootServer          pulumi.StringInput      `pulumi:"bootServer"`
	Bus                 pulumi.StringInput      `pulumi:"bus"`
	CpuHotPlug          pulumi.BoolInput        `pulumi:"cpuHotPlug"`
	DeviceNumber        pulumi.IntInput         `pulumi:"deviceNumber"`
	DiscVirtioHotPlug   pulumi.BoolInput        `pulumi:"discVirtioHotPlug"`
	DiscVirtioHotUnplug pulumi.BoolInput        `pulumi:"discVirtioHotUnplug"`
	DiskType            pulumi.StringInput      `pulumi:"diskType"`
	Id                  pulumi.StringInput      `pulumi:"id"`
	ImageName           pulumi.StringInput      `pulumi:"imageName"`
	ImagePassword       pulumi.StringInput      `pulumi:"imagePassword"`
	LicenceType         pulumi.StringInput      `pulumi:"licenceType"`
	Name                pulumi.StringInput      `pulumi:"name"`
	NicHotPlug          pulumi.BoolInput        `pulumi:"nicHotPlug"`
	NicHotUnplug        pulumi.BoolInput        `pulumi:"nicHotUnplug"`
	PciSlot             pulumi.IntInput         `pulumi:"pciSlot"`
	RamHotPlug          pulumi.BoolInput        `pulumi:"ramHotPlug"`
	Size                pulumi.IntInput         `pulumi:"size"`
	SshKeys             pulumi.StringArrayInput `pulumi:"sshKeys"`
	UserData            pulumi.StringPtrInput   `pulumi:"userData"`
}

func (GetServersServerVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerVolume)(nil)).Elem()
}

func (i GetServersServerVolumeArgs) ToGetServersServerVolumeOutput() GetServersServerVolumeOutput {
	return i.ToGetServersServerVolumeOutputWithContext(context.Background())
}

func (i GetServersServerVolumeArgs) ToGetServersServerVolumeOutputWithContext(ctx context.Context) GetServersServerVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerVolumeOutput)
}

// GetServersServerVolumeArrayInput is an input type that accepts GetServersServerVolumeArray and GetServersServerVolumeArrayOutput values.
// You can construct a concrete instance of `GetServersServerVolumeArrayInput` via:
//
//	GetServersServerVolumeArray{ GetServersServerVolumeArgs{...} }
type GetServersServerVolumeArrayInput interface {
	pulumi.Input

	ToGetServersServerVolumeArrayOutput() GetServersServerVolumeArrayOutput
	ToGetServersServerVolumeArrayOutputWithContext(context.Context) GetServersServerVolumeArrayOutput
}

type GetServersServerVolumeArray []GetServersServerVolumeInput

func (GetServersServerVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerVolume)(nil)).Elem()
}

func (i GetServersServerVolumeArray) ToGetServersServerVolumeArrayOutput() GetServersServerVolumeArrayOutput {
	return i.ToGetServersServerVolumeArrayOutputWithContext(context.Background())
}

func (i GetServersServerVolumeArray) ToGetServersServerVolumeArrayOutputWithContext(ctx context.Context) GetServersServerVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerVolumeArrayOutput)
}

type GetServersServerVolumeOutput struct{ *pulumi.OutputState }

func (GetServersServerVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerVolume)(nil)).Elem()
}

func (o GetServersServerVolumeOutput) ToGetServersServerVolumeOutput() GetServersServerVolumeOutput {
	return o
}

func (o GetServersServerVolumeOutput) ToGetServersServerVolumeOutputWithContext(ctx context.Context) GetServersServerVolumeOutput {
	return o
}

func (o GetServersServerVolumeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) BackupUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.BackupUnitId }).(pulumi.StringOutput)
}

// The UUID of the attached server.
func (o GetServersServerVolumeOutput) BootServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.BootServer }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) Bus() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.Bus }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) CpuHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerVolume) bool { return v.CpuHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerVolumeOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerVolume) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

func (o GetServersServerVolumeOutput) DiscVirtioHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerVolume) bool { return v.DiscVirtioHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerVolumeOutput) DiscVirtioHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerVolume) bool { return v.DiscVirtioHotUnplug }).(pulumi.BoolOutput)
}

func (o GetServersServerVolumeOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.ImageName }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) ImagePassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.ImagePassword }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) LicenceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.LicenceType }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) NicHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerVolume) bool { return v.NicHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerVolumeOutput) NicHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerVolume) bool { return v.NicHotUnplug }).(pulumi.BoolOutput)
}

func (o GetServersServerVolumeOutput) PciSlot() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerVolume) int { return v.PciSlot }).(pulumi.IntOutput)
}

func (o GetServersServerVolumeOutput) RamHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerVolume) bool { return v.RamHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetServersServerVolumeOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServersServerVolume) []string { return v.SshKeys }).(pulumi.StringArrayOutput)
}

func (o GetServersServerVolumeOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServersServerVolume) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type GetServersServerVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetServersServerVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerVolume)(nil)).Elem()
}

func (o GetServersServerVolumeArrayOutput) ToGetServersServerVolumeArrayOutput() GetServersServerVolumeArrayOutput {
	return o
}

func (o GetServersServerVolumeArrayOutput) ToGetServersServerVolumeArrayOutputWithContext(ctx context.Context) GetServersServerVolumeArrayOutput {
	return o
}

func (o GetServersServerVolumeArrayOutput) Index(i pulumi.IntInput) GetServersServerVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServersServerVolume {
		return vs[0].([]GetServersServerVolume)[vs[1].(int)]
	}).(GetServersServerVolumeOutput)
}

type GetTargetGroupHealthCheck struct {
	// The interval in milliseconds between consecutive health checks; default is 2000.
	CheckInterval int `pulumi:"checkInterval"`
	// The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.
	CheckTimeout int `pulumi:"checkTimeout"`
	// The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
	Retries int `pulumi:"retries"`
}

// GetTargetGroupHealthCheckInput is an input type that accepts GetTargetGroupHealthCheckArgs and GetTargetGroupHealthCheckOutput values.
// You can construct a concrete instance of `GetTargetGroupHealthCheckInput` via:
//
//	GetTargetGroupHealthCheckArgs{...}
type GetTargetGroupHealthCheckInput interface {
	pulumi.Input

	ToGetTargetGroupHealthCheckOutput() GetTargetGroupHealthCheckOutput
	ToGetTargetGroupHealthCheckOutputWithContext(context.Context) GetTargetGroupHealthCheckOutput
}

type GetTargetGroupHealthCheckArgs struct {
	// The interval in milliseconds between consecutive health checks; default is 2000.
	CheckInterval pulumi.IntInput `pulumi:"checkInterval"`
	// The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.
	CheckTimeout pulumi.IntInput `pulumi:"checkTimeout"`
	// The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
	Retries pulumi.IntInput `pulumi:"retries"`
}

func (GetTargetGroupHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupHealthCheck)(nil)).Elem()
}

func (i GetTargetGroupHealthCheckArgs) ToGetTargetGroupHealthCheckOutput() GetTargetGroupHealthCheckOutput {
	return i.ToGetTargetGroupHealthCheckOutputWithContext(context.Background())
}

func (i GetTargetGroupHealthCheckArgs) ToGetTargetGroupHealthCheckOutputWithContext(ctx context.Context) GetTargetGroupHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupHealthCheckOutput)
}

// GetTargetGroupHealthCheckArrayInput is an input type that accepts GetTargetGroupHealthCheckArray and GetTargetGroupHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetTargetGroupHealthCheckArrayInput` via:
//
//	GetTargetGroupHealthCheckArray{ GetTargetGroupHealthCheckArgs{...} }
type GetTargetGroupHealthCheckArrayInput interface {
	pulumi.Input

	ToGetTargetGroupHealthCheckArrayOutput() GetTargetGroupHealthCheckArrayOutput
	ToGetTargetGroupHealthCheckArrayOutputWithContext(context.Context) GetTargetGroupHealthCheckArrayOutput
}

type GetTargetGroupHealthCheckArray []GetTargetGroupHealthCheckInput

func (GetTargetGroupHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetGroupHealthCheck)(nil)).Elem()
}

func (i GetTargetGroupHealthCheckArray) ToGetTargetGroupHealthCheckArrayOutput() GetTargetGroupHealthCheckArrayOutput {
	return i.ToGetTargetGroupHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetTargetGroupHealthCheckArray) ToGetTargetGroupHealthCheckArrayOutputWithContext(ctx context.Context) GetTargetGroupHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupHealthCheckArrayOutput)
}

type GetTargetGroupHealthCheckOutput struct{ *pulumi.OutputState }

func (GetTargetGroupHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupHealthCheck)(nil)).Elem()
}

func (o GetTargetGroupHealthCheckOutput) ToGetTargetGroupHealthCheckOutput() GetTargetGroupHealthCheckOutput {
	return o
}

func (o GetTargetGroupHealthCheckOutput) ToGetTargetGroupHealthCheckOutputWithContext(ctx context.Context) GetTargetGroupHealthCheckOutput {
	return o
}

// The interval in milliseconds between consecutive health checks; default is 2000.
func (o GetTargetGroupHealthCheckOutput) CheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) int { return v.CheckInterval }).(pulumi.IntOutput)
}

// The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.
func (o GetTargetGroupHealthCheckOutput) CheckTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) int { return v.CheckTimeout }).(pulumi.IntOutput)
}

// The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
func (o GetTargetGroupHealthCheckOutput) Retries() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) int { return v.Retries }).(pulumi.IntOutput)
}

type GetTargetGroupHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetTargetGroupHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetGroupHealthCheck)(nil)).Elem()
}

func (o GetTargetGroupHealthCheckArrayOutput) ToGetTargetGroupHealthCheckArrayOutput() GetTargetGroupHealthCheckArrayOutput {
	return o
}

func (o GetTargetGroupHealthCheckArrayOutput) ToGetTargetGroupHealthCheckArrayOutputWithContext(ctx context.Context) GetTargetGroupHealthCheckArrayOutput {
	return o
}

func (o GetTargetGroupHealthCheckArrayOutput) Index(i pulumi.IntInput) GetTargetGroupHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetGroupHealthCheck {
		return vs[0].([]GetTargetGroupHealthCheck)[vs[1].(int)]
	}).(GetTargetGroupHealthCheckOutput)
}

type GetTargetGroupHttpHealthCheck struct {
	MatchType string `pulumi:"matchType"`
	// The method for the HTTP health check.
	Method string `pulumi:"method"`
	Negate bool   `pulumi:"negate"`
	// The path (destination URL) for the HTTP health check request; the default is /.
	Path  string `pulumi:"path"`
	Regex bool   `pulumi:"regex"`
	// The response returned by the request, depending on the match type.
	Response string `pulumi:"response"`
}

// GetTargetGroupHttpHealthCheckInput is an input type that accepts GetTargetGroupHttpHealthCheckArgs and GetTargetGroupHttpHealthCheckOutput values.
// You can construct a concrete instance of `GetTargetGroupHttpHealthCheckInput` via:
//
//	GetTargetGroupHttpHealthCheckArgs{...}
type GetTargetGroupHttpHealthCheckInput interface {
	pulumi.Input

	ToGetTargetGroupHttpHealthCheckOutput() GetTargetGroupHttpHealthCheckOutput
	ToGetTargetGroupHttpHealthCheckOutputWithContext(context.Context) GetTargetGroupHttpHealthCheckOutput
}

type GetTargetGroupHttpHealthCheckArgs struct {
	MatchType pulumi.StringInput `pulumi:"matchType"`
	// The method for the HTTP health check.
	Method pulumi.StringInput `pulumi:"method"`
	Negate pulumi.BoolInput   `pulumi:"negate"`
	// The path (destination URL) for the HTTP health check request; the default is /.
	Path  pulumi.StringInput `pulumi:"path"`
	Regex pulumi.BoolInput   `pulumi:"regex"`
	// The response returned by the request, depending on the match type.
	Response pulumi.StringInput `pulumi:"response"`
}

func (GetTargetGroupHttpHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupHttpHealthCheck)(nil)).Elem()
}

func (i GetTargetGroupHttpHealthCheckArgs) ToGetTargetGroupHttpHealthCheckOutput() GetTargetGroupHttpHealthCheckOutput {
	return i.ToGetTargetGroupHttpHealthCheckOutputWithContext(context.Background())
}

func (i GetTargetGroupHttpHealthCheckArgs) ToGetTargetGroupHttpHealthCheckOutputWithContext(ctx context.Context) GetTargetGroupHttpHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupHttpHealthCheckOutput)
}

// GetTargetGroupHttpHealthCheckArrayInput is an input type that accepts GetTargetGroupHttpHealthCheckArray and GetTargetGroupHttpHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetTargetGroupHttpHealthCheckArrayInput` via:
//
//	GetTargetGroupHttpHealthCheckArray{ GetTargetGroupHttpHealthCheckArgs{...} }
type GetTargetGroupHttpHealthCheckArrayInput interface {
	pulumi.Input

	ToGetTargetGroupHttpHealthCheckArrayOutput() GetTargetGroupHttpHealthCheckArrayOutput
	ToGetTargetGroupHttpHealthCheckArrayOutputWithContext(context.Context) GetTargetGroupHttpHealthCheckArrayOutput
}

type GetTargetGroupHttpHealthCheckArray []GetTargetGroupHttpHealthCheckInput

func (GetTargetGroupHttpHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetGroupHttpHealthCheck)(nil)).Elem()
}

func (i GetTargetGroupHttpHealthCheckArray) ToGetTargetGroupHttpHealthCheckArrayOutput() GetTargetGroupHttpHealthCheckArrayOutput {
	return i.ToGetTargetGroupHttpHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetTargetGroupHttpHealthCheckArray) ToGetTargetGroupHttpHealthCheckArrayOutputWithContext(ctx context.Context) GetTargetGroupHttpHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupHttpHealthCheckArrayOutput)
}

type GetTargetGroupHttpHealthCheckOutput struct{ *pulumi.OutputState }

func (GetTargetGroupHttpHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupHttpHealthCheck)(nil)).Elem()
}

func (o GetTargetGroupHttpHealthCheckOutput) ToGetTargetGroupHttpHealthCheckOutput() GetTargetGroupHttpHealthCheckOutput {
	return o
}

func (o GetTargetGroupHttpHealthCheckOutput) ToGetTargetGroupHttpHealthCheckOutputWithContext(ctx context.Context) GetTargetGroupHttpHealthCheckOutput {
	return o
}

func (o GetTargetGroupHttpHealthCheckOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHttpHealthCheck) string { return v.MatchType }).(pulumi.StringOutput)
}

// The method for the HTTP health check.
func (o GetTargetGroupHttpHealthCheckOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHttpHealthCheck) string { return v.Method }).(pulumi.StringOutput)
}

func (o GetTargetGroupHttpHealthCheckOutput) Negate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetGroupHttpHealthCheck) bool { return v.Negate }).(pulumi.BoolOutput)
}

// The path (destination URL) for the HTTP health check request; the default is /.
func (o GetTargetGroupHttpHealthCheckOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHttpHealthCheck) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetTargetGroupHttpHealthCheckOutput) Regex() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetGroupHttpHealthCheck) bool { return v.Regex }).(pulumi.BoolOutput)
}

// The response returned by the request, depending on the match type.
func (o GetTargetGroupHttpHealthCheckOutput) Response() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHttpHealthCheck) string { return v.Response }).(pulumi.StringOutput)
}

type GetTargetGroupHttpHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetTargetGroupHttpHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetGroupHttpHealthCheck)(nil)).Elem()
}

func (o GetTargetGroupHttpHealthCheckArrayOutput) ToGetTargetGroupHttpHealthCheckArrayOutput() GetTargetGroupHttpHealthCheckArrayOutput {
	return o
}

func (o GetTargetGroupHttpHealthCheckArrayOutput) ToGetTargetGroupHttpHealthCheckArrayOutputWithContext(ctx context.Context) GetTargetGroupHttpHealthCheckArrayOutput {
	return o
}

func (o GetTargetGroupHttpHealthCheckArrayOutput) Index(i pulumi.IntInput) GetTargetGroupHttpHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetGroupHttpHealthCheck {
		return vs[0].([]GetTargetGroupHttpHealthCheck)[vs[1].(int)]
	}).(GetTargetGroupHttpHealthCheckOutput)
}

type GetTargetGroupTarget struct {
	// Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.
	HealthCheckEnabled bool `pulumi:"healthCheckEnabled"`
	// The IP of the balanced target VM.
	Ip string `pulumi:"ip"`
	// Maintenance mode prevents the target from receiving balanced traffic.
	MaintenanceEnabled bool `pulumi:"maintenanceEnabled"`
	// The port of the balanced target service; valid range is 1 to 65535.
	Port int `pulumi:"port"`
	// The proxy protocol version.
	ProxyProtocol string `pulumi:"proxyProtocol"`
	// Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.
	Weight int `pulumi:"weight"`
}

// GetTargetGroupTargetInput is an input type that accepts GetTargetGroupTargetArgs and GetTargetGroupTargetOutput values.
// You can construct a concrete instance of `GetTargetGroupTargetInput` via:
//
//	GetTargetGroupTargetArgs{...}
type GetTargetGroupTargetInput interface {
	pulumi.Input

	ToGetTargetGroupTargetOutput() GetTargetGroupTargetOutput
	ToGetTargetGroupTargetOutputWithContext(context.Context) GetTargetGroupTargetOutput
}

type GetTargetGroupTargetArgs struct {
	// Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.
	HealthCheckEnabled pulumi.BoolInput `pulumi:"healthCheckEnabled"`
	// The IP of the balanced target VM.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Maintenance mode prevents the target from receiving balanced traffic.
	MaintenanceEnabled pulumi.BoolInput `pulumi:"maintenanceEnabled"`
	// The port of the balanced target service; valid range is 1 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// The proxy protocol version.
	ProxyProtocol pulumi.StringInput `pulumi:"proxyProtocol"`
	// Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetTargetGroupTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupTarget)(nil)).Elem()
}

func (i GetTargetGroupTargetArgs) ToGetTargetGroupTargetOutput() GetTargetGroupTargetOutput {
	return i.ToGetTargetGroupTargetOutputWithContext(context.Background())
}

func (i GetTargetGroupTargetArgs) ToGetTargetGroupTargetOutputWithContext(ctx context.Context) GetTargetGroupTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupTargetOutput)
}

// GetTargetGroupTargetArrayInput is an input type that accepts GetTargetGroupTargetArray and GetTargetGroupTargetArrayOutput values.
// You can construct a concrete instance of `GetTargetGroupTargetArrayInput` via:
//
//	GetTargetGroupTargetArray{ GetTargetGroupTargetArgs{...} }
type GetTargetGroupTargetArrayInput interface {
	pulumi.Input

	ToGetTargetGroupTargetArrayOutput() GetTargetGroupTargetArrayOutput
	ToGetTargetGroupTargetArrayOutputWithContext(context.Context) GetTargetGroupTargetArrayOutput
}

type GetTargetGroupTargetArray []GetTargetGroupTargetInput

func (GetTargetGroupTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetGroupTarget)(nil)).Elem()
}

func (i GetTargetGroupTargetArray) ToGetTargetGroupTargetArrayOutput() GetTargetGroupTargetArrayOutput {
	return i.ToGetTargetGroupTargetArrayOutputWithContext(context.Background())
}

func (i GetTargetGroupTargetArray) ToGetTargetGroupTargetArrayOutputWithContext(ctx context.Context) GetTargetGroupTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupTargetArrayOutput)
}

type GetTargetGroupTargetOutput struct{ *pulumi.OutputState }

func (GetTargetGroupTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupTarget)(nil)).Elem()
}

func (o GetTargetGroupTargetOutput) ToGetTargetGroupTargetOutput() GetTargetGroupTargetOutput {
	return o
}

func (o GetTargetGroupTargetOutput) ToGetTargetGroupTargetOutputWithContext(ctx context.Context) GetTargetGroupTargetOutput {
	return o
}

// Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.
func (o GetTargetGroupTargetOutput) HealthCheckEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetGroupTarget) bool { return v.HealthCheckEnabled }).(pulumi.BoolOutput)
}

// The IP of the balanced target VM.
func (o GetTargetGroupTargetOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupTarget) string { return v.Ip }).(pulumi.StringOutput)
}

// Maintenance mode prevents the target from receiving balanced traffic.
func (o GetTargetGroupTargetOutput) MaintenanceEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetGroupTarget) bool { return v.MaintenanceEnabled }).(pulumi.BoolOutput)
}

// The port of the balanced target service; valid range is 1 to 65535.
func (o GetTargetGroupTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupTarget) int { return v.Port }).(pulumi.IntOutput)
}

// The proxy protocol version.
func (o GetTargetGroupTargetOutput) ProxyProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupTarget) string { return v.ProxyProtocol }).(pulumi.StringOutput)
}

// Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.
func (o GetTargetGroupTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type GetTargetGroupTargetArrayOutput struct{ *pulumi.OutputState }

func (GetTargetGroupTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetGroupTarget)(nil)).Elem()
}

func (o GetTargetGroupTargetArrayOutput) ToGetTargetGroupTargetArrayOutput() GetTargetGroupTargetArrayOutput {
	return o
}

func (o GetTargetGroupTargetArrayOutput) ToGetTargetGroupTargetArrayOutputWithContext(ctx context.Context) GetTargetGroupTargetArrayOutput {
	return o
}

func (o GetTargetGroupTargetArrayOutput) Index(i pulumi.IntInput) GetTargetGroupTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetGroupTarget {
		return vs[0].([]GetTargetGroupTarget)[vs[1].(int)]
	}).(GetTargetGroupTargetOutput)
}

type GetUserGroup struct {
	// ID of the user you want to search for.
	//
	// Either `email` or `id` can be provided. If no argument is set, the provider will search for the **email that was provided for the configuration**. If none is found, the provider will return an error.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetUserGroupInput is an input type that accepts GetUserGroupArgs and GetUserGroupOutput values.
// You can construct a concrete instance of `GetUserGroupInput` via:
//
//	GetUserGroupArgs{...}
type GetUserGroupInput interface {
	pulumi.Input

	ToGetUserGroupOutput() GetUserGroupOutput
	ToGetUserGroupOutputWithContext(context.Context) GetUserGroupOutput
}

type GetUserGroupArgs struct {
	// ID of the user you want to search for.
	//
	// Either `email` or `id` can be provided. If no argument is set, the provider will search for the **email that was provided for the configuration**. If none is found, the provider will return an error.
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetUserGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroup)(nil)).Elem()
}

func (i GetUserGroupArgs) ToGetUserGroupOutput() GetUserGroupOutput {
	return i.ToGetUserGroupOutputWithContext(context.Background())
}

func (i GetUserGroupArgs) ToGetUserGroupOutputWithContext(ctx context.Context) GetUserGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupOutput)
}

// GetUserGroupArrayInput is an input type that accepts GetUserGroupArray and GetUserGroupArrayOutput values.
// You can construct a concrete instance of `GetUserGroupArrayInput` via:
//
//	GetUserGroupArray{ GetUserGroupArgs{...} }
type GetUserGroupArrayInput interface {
	pulumi.Input

	ToGetUserGroupArrayOutput() GetUserGroupArrayOutput
	ToGetUserGroupArrayOutputWithContext(context.Context) GetUserGroupArrayOutput
}

type GetUserGroupArray []GetUserGroupInput

func (GetUserGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroup)(nil)).Elem()
}

func (i GetUserGroupArray) ToGetUserGroupArrayOutput() GetUserGroupArrayOutput {
	return i.ToGetUserGroupArrayOutputWithContext(context.Background())
}

func (i GetUserGroupArray) ToGetUserGroupArrayOutputWithContext(ctx context.Context) GetUserGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupArrayOutput)
}

type GetUserGroupOutput struct{ *pulumi.OutputState }

func (GetUserGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroup)(nil)).Elem()
}

func (o GetUserGroupOutput) ToGetUserGroupOutput() GetUserGroupOutput {
	return o
}

func (o GetUserGroupOutput) ToGetUserGroupOutputWithContext(ctx context.Context) GetUserGroupOutput {
	return o
}

// ID of the user you want to search for.
//
// Either `email` or `id` can be provided. If no argument is set, the provider will search for the **email that was provided for the configuration**. If none is found, the provider will return an error.
func (o GetUserGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUserGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetUserGroupArrayOutput struct{ *pulumi.OutputState }

func (GetUserGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroup)(nil)).Elem()
}

func (o GetUserGroupArrayOutput) ToGetUserGroupArrayOutput() GetUserGroupArrayOutput {
	return o
}

func (o GetUserGroupArrayOutput) ToGetUserGroupArrayOutputWithContext(ctx context.Context) GetUserGroupArrayOutput {
	return o
}

func (o GetUserGroupArrayOutput) Index(i pulumi.IntInput) GetUserGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserGroup {
		return vs[0].([]GetUserGroup)[vs[1].(int)]
	}).(GetUserGroupOutput)
}

type GetVcpuServerCdrom struct {
	// Cloud init compatibility
	CloudInit string `pulumi:"cloudInit"`
	// Is capable of CPU hot plug (no reboot required)
	CpuHotPlug bool `pulumi:"cpuHotPlug"`
	// Is capable of CPU hot unplug (no reboot required)
	CpuHotUnplug bool `pulumi:"cpuHotUnplug"`
	// Description of cdrom
	Description string `pulumi:"description"`
	// Is capable of SCSI drive hot plug (no reboot required)
	DiscScsiHotPlug bool `pulumi:"discScsiHotPlug"`
	// Is capable of SCSI drive hot unplug (no reboot required)
	DiscScsiHotUnplug bool `pulumi:"discScsiHotUnplug"`
	// Is capable of Virt-IO drive hot plug (no reboot required)
	DiscVirtioHotPlug bool `pulumi:"discVirtioHotPlug"`
	// Is capable of Virt-IO drive hot unplug (no reboot required)
	DiscVirtioHotUnplug bool `pulumi:"discVirtioHotUnplug"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id string `pulumi:"id"`
	// List of image aliases mapped for this Image
	ImageAliases []string `pulumi:"imageAliases"`
	// Type of image
	ImageType string `pulumi:"imageType"`
	// OS type of this volume
	LicenceType string `pulumi:"licenceType"`
	// Location of that image/snapshot
	Location string `pulumi:"location"`
	// Name of an existing server that you want to search for.
	Name string `pulumi:"name"`
	// Is capable of nic hot plug (no reboot required)
	NicHotPlug bool `pulumi:"nicHotPlug"`
	// Is capable of nic hot unplug (no reboot required)
	NicHotUnplug bool `pulumi:"nicHotUnplug"`
	// Indicates if the image is part of the public repository or not
	Public bool `pulumi:"public"`
	// Is capable of memory hot plug (no reboot required)
	RamHotPlug bool `pulumi:"ramHotPlug"`
	// Is capable of memory hot unplug (no reboot required)
	RamHotUnplug bool `pulumi:"ramHotUnplug"`
	// The size of the volume in GB
	Size float64 `pulumi:"size"`
}

// GetVcpuServerCdromInput is an input type that accepts GetVcpuServerCdromArgs and GetVcpuServerCdromOutput values.
// You can construct a concrete instance of `GetVcpuServerCdromInput` via:
//
//	GetVcpuServerCdromArgs{...}
type GetVcpuServerCdromInput interface {
	pulumi.Input

	ToGetVcpuServerCdromOutput() GetVcpuServerCdromOutput
	ToGetVcpuServerCdromOutputWithContext(context.Context) GetVcpuServerCdromOutput
}

type GetVcpuServerCdromArgs struct {
	// Cloud init compatibility
	CloudInit pulumi.StringInput `pulumi:"cloudInit"`
	// Is capable of CPU hot plug (no reboot required)
	CpuHotPlug pulumi.BoolInput `pulumi:"cpuHotPlug"`
	// Is capable of CPU hot unplug (no reboot required)
	CpuHotUnplug pulumi.BoolInput `pulumi:"cpuHotUnplug"`
	// Description of cdrom
	Description pulumi.StringInput `pulumi:"description"`
	// Is capable of SCSI drive hot plug (no reboot required)
	DiscScsiHotPlug pulumi.BoolInput `pulumi:"discScsiHotPlug"`
	// Is capable of SCSI drive hot unplug (no reboot required)
	DiscScsiHotUnplug pulumi.BoolInput `pulumi:"discScsiHotUnplug"`
	// Is capable of Virt-IO drive hot plug (no reboot required)
	DiscVirtioHotPlug pulumi.BoolInput `pulumi:"discVirtioHotPlug"`
	// Is capable of Virt-IO drive hot unplug (no reboot required)
	DiscVirtioHotUnplug pulumi.BoolInput `pulumi:"discVirtioHotUnplug"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id pulumi.StringInput `pulumi:"id"`
	// List of image aliases mapped for this Image
	ImageAliases pulumi.StringArrayInput `pulumi:"imageAliases"`
	// Type of image
	ImageType pulumi.StringInput `pulumi:"imageType"`
	// OS type of this volume
	LicenceType pulumi.StringInput `pulumi:"licenceType"`
	// Location of that image/snapshot
	Location pulumi.StringInput `pulumi:"location"`
	// Name of an existing server that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
	// Is capable of nic hot plug (no reboot required)
	NicHotPlug pulumi.BoolInput `pulumi:"nicHotPlug"`
	// Is capable of nic hot unplug (no reboot required)
	NicHotUnplug pulumi.BoolInput `pulumi:"nicHotUnplug"`
	// Indicates if the image is part of the public repository or not
	Public pulumi.BoolInput `pulumi:"public"`
	// Is capable of memory hot plug (no reboot required)
	RamHotPlug pulumi.BoolInput `pulumi:"ramHotPlug"`
	// Is capable of memory hot unplug (no reboot required)
	RamHotUnplug pulumi.BoolInput `pulumi:"ramHotUnplug"`
	// The size of the volume in GB
	Size pulumi.Float64Input `pulumi:"size"`
}

func (GetVcpuServerCdromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVcpuServerCdrom)(nil)).Elem()
}

func (i GetVcpuServerCdromArgs) ToGetVcpuServerCdromOutput() GetVcpuServerCdromOutput {
	return i.ToGetVcpuServerCdromOutputWithContext(context.Background())
}

func (i GetVcpuServerCdromArgs) ToGetVcpuServerCdromOutputWithContext(ctx context.Context) GetVcpuServerCdromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVcpuServerCdromOutput)
}

// GetVcpuServerCdromArrayInput is an input type that accepts GetVcpuServerCdromArray and GetVcpuServerCdromArrayOutput values.
// You can construct a concrete instance of `GetVcpuServerCdromArrayInput` via:
//
//	GetVcpuServerCdromArray{ GetVcpuServerCdromArgs{...} }
type GetVcpuServerCdromArrayInput interface {
	pulumi.Input

	ToGetVcpuServerCdromArrayOutput() GetVcpuServerCdromArrayOutput
	ToGetVcpuServerCdromArrayOutputWithContext(context.Context) GetVcpuServerCdromArrayOutput
}

type GetVcpuServerCdromArray []GetVcpuServerCdromInput

func (GetVcpuServerCdromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVcpuServerCdrom)(nil)).Elem()
}

func (i GetVcpuServerCdromArray) ToGetVcpuServerCdromArrayOutput() GetVcpuServerCdromArrayOutput {
	return i.ToGetVcpuServerCdromArrayOutputWithContext(context.Background())
}

func (i GetVcpuServerCdromArray) ToGetVcpuServerCdromArrayOutputWithContext(ctx context.Context) GetVcpuServerCdromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVcpuServerCdromArrayOutput)
}

type GetVcpuServerCdromOutput struct{ *pulumi.OutputState }

func (GetVcpuServerCdromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVcpuServerCdrom)(nil)).Elem()
}

func (o GetVcpuServerCdromOutput) ToGetVcpuServerCdromOutput() GetVcpuServerCdromOutput {
	return o
}

func (o GetVcpuServerCdromOutput) ToGetVcpuServerCdromOutputWithContext(ctx context.Context) GetVcpuServerCdromOutput {
	return o
}

// Cloud init compatibility
func (o GetVcpuServerCdromOutput) CloudInit() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) string { return v.CloudInit }).(pulumi.StringOutput)
}

// Is capable of CPU hot plug (no reboot required)
func (o GetVcpuServerCdromOutput) CpuHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) bool { return v.CpuHotPlug }).(pulumi.BoolOutput)
}

// Is capable of CPU hot unplug (no reboot required)
func (o GetVcpuServerCdromOutput) CpuHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) bool { return v.CpuHotUnplug }).(pulumi.BoolOutput)
}

// Description of cdrom
func (o GetVcpuServerCdromOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) string { return v.Description }).(pulumi.StringOutput)
}

// Is capable of SCSI drive hot plug (no reboot required)
func (o GetVcpuServerCdromOutput) DiscScsiHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) bool { return v.DiscScsiHotPlug }).(pulumi.BoolOutput)
}

// Is capable of SCSI drive hot unplug (no reboot required)
func (o GetVcpuServerCdromOutput) DiscScsiHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) bool { return v.DiscScsiHotUnplug }).(pulumi.BoolOutput)
}

// Is capable of Virt-IO drive hot plug (no reboot required)
func (o GetVcpuServerCdromOutput) DiscVirtioHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) bool { return v.DiscVirtioHotPlug }).(pulumi.BoolOutput)
}

// Is capable of Virt-IO drive hot unplug (no reboot required)
func (o GetVcpuServerCdromOutput) DiscVirtioHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) bool { return v.DiscVirtioHotUnplug }).(pulumi.BoolOutput)
}

// ID of the server you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetVcpuServerCdromOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) string { return v.Id }).(pulumi.StringOutput)
}

// List of image aliases mapped for this Image
func (o GetVcpuServerCdromOutput) ImageAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) []string { return v.ImageAliases }).(pulumi.StringArrayOutput)
}

// Type of image
func (o GetVcpuServerCdromOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) string { return v.ImageType }).(pulumi.StringOutput)
}

// OS type of this volume
func (o GetVcpuServerCdromOutput) LicenceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) string { return v.LicenceType }).(pulumi.StringOutput)
}

// Location of that image/snapshot
func (o GetVcpuServerCdromOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) string { return v.Location }).(pulumi.StringOutput)
}

// Name of an existing server that you want to search for.
func (o GetVcpuServerCdromOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) string { return v.Name }).(pulumi.StringOutput)
}

// Is capable of nic hot plug (no reboot required)
func (o GetVcpuServerCdromOutput) NicHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) bool { return v.NicHotPlug }).(pulumi.BoolOutput)
}

// Is capable of nic hot unplug (no reboot required)
func (o GetVcpuServerCdromOutput) NicHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) bool { return v.NicHotUnplug }).(pulumi.BoolOutput)
}

// Indicates if the image is part of the public repository or not
func (o GetVcpuServerCdromOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) bool { return v.Public }).(pulumi.BoolOutput)
}

// Is capable of memory hot plug (no reboot required)
func (o GetVcpuServerCdromOutput) RamHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) bool { return v.RamHotPlug }).(pulumi.BoolOutput)
}

// Is capable of memory hot unplug (no reboot required)
func (o GetVcpuServerCdromOutput) RamHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerCdrom) bool { return v.RamHotUnplug }).(pulumi.BoolOutput)
}

// The size of the volume in GB
func (o GetVcpuServerCdromOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v GetVcpuServerCdrom) float64 { return v.Size }).(pulumi.Float64Output)
}

type GetVcpuServerCdromArrayOutput struct{ *pulumi.OutputState }

func (GetVcpuServerCdromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVcpuServerCdrom)(nil)).Elem()
}

func (o GetVcpuServerCdromArrayOutput) ToGetVcpuServerCdromArrayOutput() GetVcpuServerCdromArrayOutput {
	return o
}

func (o GetVcpuServerCdromArrayOutput) ToGetVcpuServerCdromArrayOutputWithContext(ctx context.Context) GetVcpuServerCdromArrayOutput {
	return o
}

func (o GetVcpuServerCdromArrayOutput) Index(i pulumi.IntInput) GetVcpuServerCdromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVcpuServerCdrom {
		return vs[0].([]GetVcpuServerCdrom)[vs[1].(int)]
	}).(GetVcpuServerCdromOutput)
}

type GetVcpuServerLabel struct {
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id string `pulumi:"id"`
	// The key of the label
	Key string `pulumi:"key"`
	// The value of the label
	Value string `pulumi:"value"`
}

// GetVcpuServerLabelInput is an input type that accepts GetVcpuServerLabelArgs and GetVcpuServerLabelOutput values.
// You can construct a concrete instance of `GetVcpuServerLabelInput` via:
//
//	GetVcpuServerLabelArgs{...}
type GetVcpuServerLabelInput interface {
	pulumi.Input

	ToGetVcpuServerLabelOutput() GetVcpuServerLabelOutput
	ToGetVcpuServerLabelOutputWithContext(context.Context) GetVcpuServerLabelOutput
}

type GetVcpuServerLabelArgs struct {
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id pulumi.StringInput `pulumi:"id"`
	// The key of the label
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the label
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVcpuServerLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVcpuServerLabel)(nil)).Elem()
}

func (i GetVcpuServerLabelArgs) ToGetVcpuServerLabelOutput() GetVcpuServerLabelOutput {
	return i.ToGetVcpuServerLabelOutputWithContext(context.Background())
}

func (i GetVcpuServerLabelArgs) ToGetVcpuServerLabelOutputWithContext(ctx context.Context) GetVcpuServerLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVcpuServerLabelOutput)
}

// GetVcpuServerLabelArrayInput is an input type that accepts GetVcpuServerLabelArray and GetVcpuServerLabelArrayOutput values.
// You can construct a concrete instance of `GetVcpuServerLabelArrayInput` via:
//
//	GetVcpuServerLabelArray{ GetVcpuServerLabelArgs{...} }
type GetVcpuServerLabelArrayInput interface {
	pulumi.Input

	ToGetVcpuServerLabelArrayOutput() GetVcpuServerLabelArrayOutput
	ToGetVcpuServerLabelArrayOutputWithContext(context.Context) GetVcpuServerLabelArrayOutput
}

type GetVcpuServerLabelArray []GetVcpuServerLabelInput

func (GetVcpuServerLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVcpuServerLabel)(nil)).Elem()
}

func (i GetVcpuServerLabelArray) ToGetVcpuServerLabelArrayOutput() GetVcpuServerLabelArrayOutput {
	return i.ToGetVcpuServerLabelArrayOutputWithContext(context.Background())
}

func (i GetVcpuServerLabelArray) ToGetVcpuServerLabelArrayOutputWithContext(ctx context.Context) GetVcpuServerLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVcpuServerLabelArrayOutput)
}

type GetVcpuServerLabelOutput struct{ *pulumi.OutputState }

func (GetVcpuServerLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVcpuServerLabel)(nil)).Elem()
}

func (o GetVcpuServerLabelOutput) ToGetVcpuServerLabelOutput() GetVcpuServerLabelOutput {
	return o
}

func (o GetVcpuServerLabelOutput) ToGetVcpuServerLabelOutputWithContext(ctx context.Context) GetVcpuServerLabelOutput {
	return o
}

// ID of the server you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetVcpuServerLabelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerLabel) string { return v.Id }).(pulumi.StringOutput)
}

// The key of the label
func (o GetVcpuServerLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the label
func (o GetVcpuServerLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetVcpuServerLabelArrayOutput struct{ *pulumi.OutputState }

func (GetVcpuServerLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVcpuServerLabel)(nil)).Elem()
}

func (o GetVcpuServerLabelArrayOutput) ToGetVcpuServerLabelArrayOutput() GetVcpuServerLabelArrayOutput {
	return o
}

func (o GetVcpuServerLabelArrayOutput) ToGetVcpuServerLabelArrayOutputWithContext(ctx context.Context) GetVcpuServerLabelArrayOutput {
	return o
}

func (o GetVcpuServerLabelArrayOutput) Index(i pulumi.IntInput) GetVcpuServerLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVcpuServerLabel {
		return vs[0].([]GetVcpuServerLabel)[vs[1].(int)]
	}).(GetVcpuServerLabelOutput)
}

type GetVcpuServerNic struct {
	// The Logical Unit Number (LUN) of the storage volume
	DeviceNumber int `pulumi:"deviceNumber"`
	// Indicates if the nic will reserve an IP using DHCP
	Dhcp   bool  `pulumi:"dhcp"`
	Dhcpv6 *bool `pulumi:"dhcpv6"`
	// Activate or deactivate the firewall
	FirewallActive bool `pulumi:"firewallActive"`
	// list of
	FirewallRules []GetVcpuServerNicFirewallRule `pulumi:"firewallRules"`
	// The type of firewall rules that will be allowed on the NIC
	FirewallType string `pulumi:"firewallType"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id string `pulumi:"id"`
	// Collection of IP addresses assigned to a nic
	Ips           []string `pulumi:"ips"`
	Ipv6CidrBlock string   `pulumi:"ipv6CidrBlock"`
	Ipv6Ips       []string `pulumi:"ipv6Ips"`
	// The LAN ID the NIC will sit on
	Lan int `pulumi:"lan"`
	// The MAC address of the NIC
	Mac string `pulumi:"mac"`
	// Name of an existing server that you want to search for.
	Name string `pulumi:"name"`
	// The PCI slot number of the Nic
	PciSlot int `pulumi:"pciSlot"`
}

// GetVcpuServerNicInput is an input type that accepts GetVcpuServerNicArgs and GetVcpuServerNicOutput values.
// You can construct a concrete instance of `GetVcpuServerNicInput` via:
//
//	GetVcpuServerNicArgs{...}
type GetVcpuServerNicInput interface {
	pulumi.Input

	ToGetVcpuServerNicOutput() GetVcpuServerNicOutput
	ToGetVcpuServerNicOutputWithContext(context.Context) GetVcpuServerNicOutput
}

type GetVcpuServerNicArgs struct {
	// The Logical Unit Number (LUN) of the storage volume
	DeviceNumber pulumi.IntInput `pulumi:"deviceNumber"`
	// Indicates if the nic will reserve an IP using DHCP
	Dhcp   pulumi.BoolInput    `pulumi:"dhcp"`
	Dhcpv6 pulumi.BoolPtrInput `pulumi:"dhcpv6"`
	// Activate or deactivate the firewall
	FirewallActive pulumi.BoolInput `pulumi:"firewallActive"`
	// list of
	FirewallRules GetVcpuServerNicFirewallRuleArrayInput `pulumi:"firewallRules"`
	// The type of firewall rules that will be allowed on the NIC
	FirewallType pulumi.StringInput `pulumi:"firewallType"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id pulumi.StringInput `pulumi:"id"`
	// Collection of IP addresses assigned to a nic
	Ips           pulumi.StringArrayInput `pulumi:"ips"`
	Ipv6CidrBlock pulumi.StringInput      `pulumi:"ipv6CidrBlock"`
	Ipv6Ips       pulumi.StringArrayInput `pulumi:"ipv6Ips"`
	// The LAN ID the NIC will sit on
	Lan pulumi.IntInput `pulumi:"lan"`
	// The MAC address of the NIC
	Mac pulumi.StringInput `pulumi:"mac"`
	// Name of an existing server that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
	// The PCI slot number of the Nic
	PciSlot pulumi.IntInput `pulumi:"pciSlot"`
}

func (GetVcpuServerNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVcpuServerNic)(nil)).Elem()
}

func (i GetVcpuServerNicArgs) ToGetVcpuServerNicOutput() GetVcpuServerNicOutput {
	return i.ToGetVcpuServerNicOutputWithContext(context.Background())
}

func (i GetVcpuServerNicArgs) ToGetVcpuServerNicOutputWithContext(ctx context.Context) GetVcpuServerNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVcpuServerNicOutput)
}

// GetVcpuServerNicArrayInput is an input type that accepts GetVcpuServerNicArray and GetVcpuServerNicArrayOutput values.
// You can construct a concrete instance of `GetVcpuServerNicArrayInput` via:
//
//	GetVcpuServerNicArray{ GetVcpuServerNicArgs{...} }
type GetVcpuServerNicArrayInput interface {
	pulumi.Input

	ToGetVcpuServerNicArrayOutput() GetVcpuServerNicArrayOutput
	ToGetVcpuServerNicArrayOutputWithContext(context.Context) GetVcpuServerNicArrayOutput
}

type GetVcpuServerNicArray []GetVcpuServerNicInput

func (GetVcpuServerNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVcpuServerNic)(nil)).Elem()
}

func (i GetVcpuServerNicArray) ToGetVcpuServerNicArrayOutput() GetVcpuServerNicArrayOutput {
	return i.ToGetVcpuServerNicArrayOutputWithContext(context.Background())
}

func (i GetVcpuServerNicArray) ToGetVcpuServerNicArrayOutputWithContext(ctx context.Context) GetVcpuServerNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVcpuServerNicArrayOutput)
}

type GetVcpuServerNicOutput struct{ *pulumi.OutputState }

func (GetVcpuServerNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVcpuServerNic)(nil)).Elem()
}

func (o GetVcpuServerNicOutput) ToGetVcpuServerNicOutput() GetVcpuServerNicOutput {
	return o
}

func (o GetVcpuServerNicOutput) ToGetVcpuServerNicOutputWithContext(ctx context.Context) GetVcpuServerNicOutput {
	return o
}

// The Logical Unit Number (LUN) of the storage volume
func (o GetVcpuServerNicOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetVcpuServerNic) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

// Indicates if the nic will reserve an IP using DHCP
func (o GetVcpuServerNicOutput) Dhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerNic) bool { return v.Dhcp }).(pulumi.BoolOutput)
}

func (o GetVcpuServerNicOutput) Dhcpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetVcpuServerNic) *bool { return v.Dhcpv6 }).(pulumi.BoolPtrOutput)
}

// Activate or deactivate the firewall
func (o GetVcpuServerNicOutput) FirewallActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerNic) bool { return v.FirewallActive }).(pulumi.BoolOutput)
}

// list of
func (o GetVcpuServerNicOutput) FirewallRules() GetVcpuServerNicFirewallRuleArrayOutput {
	return o.ApplyT(func(v GetVcpuServerNic) []GetVcpuServerNicFirewallRule { return v.FirewallRules }).(GetVcpuServerNicFirewallRuleArrayOutput)
}

// The type of firewall rules that will be allowed on the NIC
func (o GetVcpuServerNicOutput) FirewallType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerNic) string { return v.FirewallType }).(pulumi.StringOutput)
}

// ID of the server you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetVcpuServerNicOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerNic) string { return v.Id }).(pulumi.StringOutput)
}

// Collection of IP addresses assigned to a nic
func (o GetVcpuServerNicOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVcpuServerNic) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o GetVcpuServerNicOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerNic) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

func (o GetVcpuServerNicOutput) Ipv6Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVcpuServerNic) []string { return v.Ipv6Ips }).(pulumi.StringArrayOutput)
}

// The LAN ID the NIC will sit on
func (o GetVcpuServerNicOutput) Lan() pulumi.IntOutput {
	return o.ApplyT(func(v GetVcpuServerNic) int { return v.Lan }).(pulumi.IntOutput)
}

// The MAC address of the NIC
func (o GetVcpuServerNicOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerNic) string { return v.Mac }).(pulumi.StringOutput)
}

// Name of an existing server that you want to search for.
func (o GetVcpuServerNicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerNic) string { return v.Name }).(pulumi.StringOutput)
}

// The PCI slot number of the Nic
func (o GetVcpuServerNicOutput) PciSlot() pulumi.IntOutput {
	return o.ApplyT(func(v GetVcpuServerNic) int { return v.PciSlot }).(pulumi.IntOutput)
}

type GetVcpuServerNicArrayOutput struct{ *pulumi.OutputState }

func (GetVcpuServerNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVcpuServerNic)(nil)).Elem()
}

func (o GetVcpuServerNicArrayOutput) ToGetVcpuServerNicArrayOutput() GetVcpuServerNicArrayOutput {
	return o
}

func (o GetVcpuServerNicArrayOutput) ToGetVcpuServerNicArrayOutputWithContext(ctx context.Context) GetVcpuServerNicArrayOutput {
	return o
}

func (o GetVcpuServerNicArrayOutput) Index(i pulumi.IntInput) GetVcpuServerNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVcpuServerNic {
		return vs[0].([]GetVcpuServerNic)[vs[1].(int)]
	}).(GetVcpuServerNicOutput)
}

type GetVcpuServerNicFirewallRule struct {
	// Defines the allowed code (from 0 to 254) if protocol ICMP is chosen
	IcmpCode int `pulumi:"icmpCode"`
	// Defines the allowed type (from 0 to 254) if the protocol ICMP is chosen
	IcmpType int `pulumi:"icmpType"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id string `pulumi:"id"`
	// Name of an existing server that you want to search for.
	Name string `pulumi:"name"`
	// Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen
	PortRangeEnd int `pulumi:"portRangeEnd"`
	// Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen
	PortRangeStart int `pulumi:"portRangeStart"`
	// he protocol for the rule
	Protocol string `pulumi:"protocol"`
	// Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs
	SourceIp string `pulumi:"sourceIp"`
	// Only traffic originating from the respective MAC address is allowed
	SourceMac string `pulumi:"sourceMac"`
	// In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed
	TargetIp string `pulumi:"targetIp"`
	// The type of firewall rule
	Type string `pulumi:"type"`
}

// GetVcpuServerNicFirewallRuleInput is an input type that accepts GetVcpuServerNicFirewallRuleArgs and GetVcpuServerNicFirewallRuleOutput values.
// You can construct a concrete instance of `GetVcpuServerNicFirewallRuleInput` via:
//
//	GetVcpuServerNicFirewallRuleArgs{...}
type GetVcpuServerNicFirewallRuleInput interface {
	pulumi.Input

	ToGetVcpuServerNicFirewallRuleOutput() GetVcpuServerNicFirewallRuleOutput
	ToGetVcpuServerNicFirewallRuleOutputWithContext(context.Context) GetVcpuServerNicFirewallRuleOutput
}

type GetVcpuServerNicFirewallRuleArgs struct {
	// Defines the allowed code (from 0 to 254) if protocol ICMP is chosen
	IcmpCode pulumi.IntInput `pulumi:"icmpCode"`
	// Defines the allowed type (from 0 to 254) if the protocol ICMP is chosen
	IcmpType pulumi.IntInput `pulumi:"icmpType"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of an existing server that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
	// Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen
	PortRangeEnd pulumi.IntInput `pulumi:"portRangeEnd"`
	// Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen
	PortRangeStart pulumi.IntInput `pulumi:"portRangeStart"`
	// he protocol for the rule
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs
	SourceIp pulumi.StringInput `pulumi:"sourceIp"`
	// Only traffic originating from the respective MAC address is allowed
	SourceMac pulumi.StringInput `pulumi:"sourceMac"`
	// In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed
	TargetIp pulumi.StringInput `pulumi:"targetIp"`
	// The type of firewall rule
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetVcpuServerNicFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVcpuServerNicFirewallRule)(nil)).Elem()
}

func (i GetVcpuServerNicFirewallRuleArgs) ToGetVcpuServerNicFirewallRuleOutput() GetVcpuServerNicFirewallRuleOutput {
	return i.ToGetVcpuServerNicFirewallRuleOutputWithContext(context.Background())
}

func (i GetVcpuServerNicFirewallRuleArgs) ToGetVcpuServerNicFirewallRuleOutputWithContext(ctx context.Context) GetVcpuServerNicFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVcpuServerNicFirewallRuleOutput)
}

// GetVcpuServerNicFirewallRuleArrayInput is an input type that accepts GetVcpuServerNicFirewallRuleArray and GetVcpuServerNicFirewallRuleArrayOutput values.
// You can construct a concrete instance of `GetVcpuServerNicFirewallRuleArrayInput` via:
//
//	GetVcpuServerNicFirewallRuleArray{ GetVcpuServerNicFirewallRuleArgs{...} }
type GetVcpuServerNicFirewallRuleArrayInput interface {
	pulumi.Input

	ToGetVcpuServerNicFirewallRuleArrayOutput() GetVcpuServerNicFirewallRuleArrayOutput
	ToGetVcpuServerNicFirewallRuleArrayOutputWithContext(context.Context) GetVcpuServerNicFirewallRuleArrayOutput
}

type GetVcpuServerNicFirewallRuleArray []GetVcpuServerNicFirewallRuleInput

func (GetVcpuServerNicFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVcpuServerNicFirewallRule)(nil)).Elem()
}

func (i GetVcpuServerNicFirewallRuleArray) ToGetVcpuServerNicFirewallRuleArrayOutput() GetVcpuServerNicFirewallRuleArrayOutput {
	return i.ToGetVcpuServerNicFirewallRuleArrayOutputWithContext(context.Background())
}

func (i GetVcpuServerNicFirewallRuleArray) ToGetVcpuServerNicFirewallRuleArrayOutputWithContext(ctx context.Context) GetVcpuServerNicFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVcpuServerNicFirewallRuleArrayOutput)
}

type GetVcpuServerNicFirewallRuleOutput struct{ *pulumi.OutputState }

func (GetVcpuServerNicFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVcpuServerNicFirewallRule)(nil)).Elem()
}

func (o GetVcpuServerNicFirewallRuleOutput) ToGetVcpuServerNicFirewallRuleOutput() GetVcpuServerNicFirewallRuleOutput {
	return o
}

func (o GetVcpuServerNicFirewallRuleOutput) ToGetVcpuServerNicFirewallRuleOutputWithContext(ctx context.Context) GetVcpuServerNicFirewallRuleOutput {
	return o
}

// Defines the allowed code (from 0 to 254) if protocol ICMP is chosen
func (o GetVcpuServerNicFirewallRuleOutput) IcmpCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetVcpuServerNicFirewallRule) int { return v.IcmpCode }).(pulumi.IntOutput)
}

// Defines the allowed type (from 0 to 254) if the protocol ICMP is chosen
func (o GetVcpuServerNicFirewallRuleOutput) IcmpType() pulumi.IntOutput {
	return o.ApplyT(func(v GetVcpuServerNicFirewallRule) int { return v.IcmpType }).(pulumi.IntOutput)
}

// ID of the server you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetVcpuServerNicFirewallRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerNicFirewallRule) string { return v.Id }).(pulumi.StringOutput)
}

// Name of an existing server that you want to search for.
func (o GetVcpuServerNicFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerNicFirewallRule) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen
func (o GetVcpuServerNicFirewallRuleOutput) PortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v GetVcpuServerNicFirewallRule) int { return v.PortRangeEnd }).(pulumi.IntOutput)
}

// Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen
func (o GetVcpuServerNicFirewallRuleOutput) PortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v GetVcpuServerNicFirewallRule) int { return v.PortRangeStart }).(pulumi.IntOutput)
}

// he protocol for the rule
func (o GetVcpuServerNicFirewallRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerNicFirewallRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// Only traffic originating from the respective IPv4 address is allowed. Value null allows all source IPs
func (o GetVcpuServerNicFirewallRuleOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerNicFirewallRule) string { return v.SourceIp }).(pulumi.StringOutput)
}

// Only traffic originating from the respective MAC address is allowed
func (o GetVcpuServerNicFirewallRuleOutput) SourceMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerNicFirewallRule) string { return v.SourceMac }).(pulumi.StringOutput)
}

// In case the target NIC has multiple IP addresses, only traffic directed to the respective IP address of the NIC is allowed
func (o GetVcpuServerNicFirewallRuleOutput) TargetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerNicFirewallRule) string { return v.TargetIp }).(pulumi.StringOutput)
}

// The type of firewall rule
func (o GetVcpuServerNicFirewallRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerNicFirewallRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetVcpuServerNicFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (GetVcpuServerNicFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVcpuServerNicFirewallRule)(nil)).Elem()
}

func (o GetVcpuServerNicFirewallRuleArrayOutput) ToGetVcpuServerNicFirewallRuleArrayOutput() GetVcpuServerNicFirewallRuleArrayOutput {
	return o
}

func (o GetVcpuServerNicFirewallRuleArrayOutput) ToGetVcpuServerNicFirewallRuleArrayOutputWithContext(ctx context.Context) GetVcpuServerNicFirewallRuleArrayOutput {
	return o
}

func (o GetVcpuServerNicFirewallRuleArrayOutput) Index(i pulumi.IntInput) GetVcpuServerNicFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVcpuServerNicFirewallRule {
		return vs[0].([]GetVcpuServerNicFirewallRule)[vs[1].(int)]
	}).(GetVcpuServerNicFirewallRuleOutput)
}

type GetVcpuServerVolume struct {
	// The availability zone in which the volume should exist
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The uuid of the Backup Unit that user has access to
	BackupUnitId string `pulumi:"backupUnitId"`
	// The UUID of the attached server.
	BootServer string `pulumi:"bootServer"`
	// The bus type of the volume
	Bus string `pulumi:"bus"`
	// Is capable of CPU hot plug (no reboot required)
	CpuHotPlug bool `pulumi:"cpuHotPlug"`
	// The Logical Unit Number (LUN) of the storage volume
	DeviceNumber int `pulumi:"deviceNumber"`
	// Is capable of Virt-IO drive hot plug (no reboot required)
	DiscVirtioHotPlug bool `pulumi:"discVirtioHotPlug"`
	// Is capable of Virt-IO drive hot unplug (no reboot required)
	DiscVirtioHotUnplug bool `pulumi:"discVirtioHotUnplug"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id        string `pulumi:"id"`
	ImageName string `pulumi:"imageName"`
	// Initial password to be set for installed OS
	ImagePassword string `pulumi:"imagePassword"`
	// OS type of this volume
	LicenceType string `pulumi:"licenceType"`
	// Name of an existing server that you want to search for.
	Name string `pulumi:"name"`
	// Is capable of nic hot plug (no reboot required)
	NicHotPlug bool `pulumi:"nicHotPlug"`
	// Is capable of nic hot unplug (no reboot required)
	NicHotUnplug bool `pulumi:"nicHotUnplug"`
	// The PCI slot number of the Nic
	PciSlot int `pulumi:"pciSlot"`
	// Is capable of memory hot plug (no reboot required)
	RamHotPlug bool `pulumi:"ramHotPlug"`
	// The size of the volume in GB
	Size int `pulumi:"size"`
	// Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key
	SshKeys []string `pulumi:"sshKeys"`
	// The type of firewall rule
	Type string `pulumi:"type"`
	// The cloud-init configuration for the volume as base64 encoded string
	UserData *string `pulumi:"userData"`
}

// GetVcpuServerVolumeInput is an input type that accepts GetVcpuServerVolumeArgs and GetVcpuServerVolumeOutput values.
// You can construct a concrete instance of `GetVcpuServerVolumeInput` via:
//
//	GetVcpuServerVolumeArgs{...}
type GetVcpuServerVolumeInput interface {
	pulumi.Input

	ToGetVcpuServerVolumeOutput() GetVcpuServerVolumeOutput
	ToGetVcpuServerVolumeOutputWithContext(context.Context) GetVcpuServerVolumeOutput
}

type GetVcpuServerVolumeArgs struct {
	// The availability zone in which the volume should exist
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// The uuid of the Backup Unit that user has access to
	BackupUnitId pulumi.StringInput `pulumi:"backupUnitId"`
	// The UUID of the attached server.
	BootServer pulumi.StringInput `pulumi:"bootServer"`
	// The bus type of the volume
	Bus pulumi.StringInput `pulumi:"bus"`
	// Is capable of CPU hot plug (no reboot required)
	CpuHotPlug pulumi.BoolInput `pulumi:"cpuHotPlug"`
	// The Logical Unit Number (LUN) of the storage volume
	DeviceNumber pulumi.IntInput `pulumi:"deviceNumber"`
	// Is capable of Virt-IO drive hot plug (no reboot required)
	DiscVirtioHotPlug pulumi.BoolInput `pulumi:"discVirtioHotPlug"`
	// Is capable of Virt-IO drive hot unplug (no reboot required)
	DiscVirtioHotUnplug pulumi.BoolInput `pulumi:"discVirtioHotUnplug"`
	// ID of the server you want to search for.
	//
	// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
	Id        pulumi.StringInput `pulumi:"id"`
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// Initial password to be set for installed OS
	ImagePassword pulumi.StringInput `pulumi:"imagePassword"`
	// OS type of this volume
	LicenceType pulumi.StringInput `pulumi:"licenceType"`
	// Name of an existing server that you want to search for.
	Name pulumi.StringInput `pulumi:"name"`
	// Is capable of nic hot plug (no reboot required)
	NicHotPlug pulumi.BoolInput `pulumi:"nicHotPlug"`
	// Is capable of nic hot unplug (no reboot required)
	NicHotUnplug pulumi.BoolInput `pulumi:"nicHotUnplug"`
	// The PCI slot number of the Nic
	PciSlot pulumi.IntInput `pulumi:"pciSlot"`
	// Is capable of memory hot plug (no reboot required)
	RamHotPlug pulumi.BoolInput `pulumi:"ramHotPlug"`
	// The size of the volume in GB
	Size pulumi.IntInput `pulumi:"size"`
	// Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key
	SshKeys pulumi.StringArrayInput `pulumi:"sshKeys"`
	// The type of firewall rule
	Type pulumi.StringInput `pulumi:"type"`
	// The cloud-init configuration for the volume as base64 encoded string
	UserData pulumi.StringPtrInput `pulumi:"userData"`
}

func (GetVcpuServerVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVcpuServerVolume)(nil)).Elem()
}

func (i GetVcpuServerVolumeArgs) ToGetVcpuServerVolumeOutput() GetVcpuServerVolumeOutput {
	return i.ToGetVcpuServerVolumeOutputWithContext(context.Background())
}

func (i GetVcpuServerVolumeArgs) ToGetVcpuServerVolumeOutputWithContext(ctx context.Context) GetVcpuServerVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVcpuServerVolumeOutput)
}

// GetVcpuServerVolumeArrayInput is an input type that accepts GetVcpuServerVolumeArray and GetVcpuServerVolumeArrayOutput values.
// You can construct a concrete instance of `GetVcpuServerVolumeArrayInput` via:
//
//	GetVcpuServerVolumeArray{ GetVcpuServerVolumeArgs{...} }
type GetVcpuServerVolumeArrayInput interface {
	pulumi.Input

	ToGetVcpuServerVolumeArrayOutput() GetVcpuServerVolumeArrayOutput
	ToGetVcpuServerVolumeArrayOutputWithContext(context.Context) GetVcpuServerVolumeArrayOutput
}

type GetVcpuServerVolumeArray []GetVcpuServerVolumeInput

func (GetVcpuServerVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVcpuServerVolume)(nil)).Elem()
}

func (i GetVcpuServerVolumeArray) ToGetVcpuServerVolumeArrayOutput() GetVcpuServerVolumeArrayOutput {
	return i.ToGetVcpuServerVolumeArrayOutputWithContext(context.Background())
}

func (i GetVcpuServerVolumeArray) ToGetVcpuServerVolumeArrayOutputWithContext(ctx context.Context) GetVcpuServerVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVcpuServerVolumeArrayOutput)
}

type GetVcpuServerVolumeOutput struct{ *pulumi.OutputState }

func (GetVcpuServerVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVcpuServerVolume)(nil)).Elem()
}

func (o GetVcpuServerVolumeOutput) ToGetVcpuServerVolumeOutput() GetVcpuServerVolumeOutput {
	return o
}

func (o GetVcpuServerVolumeOutput) ToGetVcpuServerVolumeOutputWithContext(ctx context.Context) GetVcpuServerVolumeOutput {
	return o
}

// The availability zone in which the volume should exist
func (o GetVcpuServerVolumeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The uuid of the Backup Unit that user has access to
func (o GetVcpuServerVolumeOutput) BackupUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) string { return v.BackupUnitId }).(pulumi.StringOutput)
}

// The UUID of the attached server.
func (o GetVcpuServerVolumeOutput) BootServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) string { return v.BootServer }).(pulumi.StringOutput)
}

// The bus type of the volume
func (o GetVcpuServerVolumeOutput) Bus() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) string { return v.Bus }).(pulumi.StringOutput)
}

// Is capable of CPU hot plug (no reboot required)
func (o GetVcpuServerVolumeOutput) CpuHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) bool { return v.CpuHotPlug }).(pulumi.BoolOutput)
}

// The Logical Unit Number (LUN) of the storage volume
func (o GetVcpuServerVolumeOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

// Is capable of Virt-IO drive hot plug (no reboot required)
func (o GetVcpuServerVolumeOutput) DiscVirtioHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) bool { return v.DiscVirtioHotPlug }).(pulumi.BoolOutput)
}

// Is capable of Virt-IO drive hot unplug (no reboot required)
func (o GetVcpuServerVolumeOutput) DiscVirtioHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) bool { return v.DiscVirtioHotUnplug }).(pulumi.BoolOutput)
}

// ID of the server you want to search for.
//
// `datacenterId` and either `name` or `id` must be provided. If none, or both of `name` and `id` are provided, the datasource will return an error.
func (o GetVcpuServerVolumeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVcpuServerVolumeOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) string { return v.ImageName }).(pulumi.StringOutput)
}

// Initial password to be set for installed OS
func (o GetVcpuServerVolumeOutput) ImagePassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) string { return v.ImagePassword }).(pulumi.StringOutput)
}

// OS type of this volume
func (o GetVcpuServerVolumeOutput) LicenceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) string { return v.LicenceType }).(pulumi.StringOutput)
}

// Name of an existing server that you want to search for.
func (o GetVcpuServerVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) string { return v.Name }).(pulumi.StringOutput)
}

// Is capable of nic hot plug (no reboot required)
func (o GetVcpuServerVolumeOutput) NicHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) bool { return v.NicHotPlug }).(pulumi.BoolOutput)
}

// Is capable of nic hot unplug (no reboot required)
func (o GetVcpuServerVolumeOutput) NicHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) bool { return v.NicHotUnplug }).(pulumi.BoolOutput)
}

// The PCI slot number of the Nic
func (o GetVcpuServerVolumeOutput) PciSlot() pulumi.IntOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) int { return v.PciSlot }).(pulumi.IntOutput)
}

// Is capable of memory hot plug (no reboot required)
func (o GetVcpuServerVolumeOutput) RamHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) bool { return v.RamHotPlug }).(pulumi.BoolOutput)
}

// The size of the volume in GB
func (o GetVcpuServerVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) int { return v.Size }).(pulumi.IntOutput)
}

// Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key
func (o GetVcpuServerVolumeOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) []string { return v.SshKeys }).(pulumi.StringArrayOutput)
}

// The type of firewall rule
func (o GetVcpuServerVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) string { return v.Type }).(pulumi.StringOutput)
}

// The cloud-init configuration for the volume as base64 encoded string
func (o GetVcpuServerVolumeOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVcpuServerVolume) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type GetVcpuServerVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetVcpuServerVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVcpuServerVolume)(nil)).Elem()
}

func (o GetVcpuServerVolumeArrayOutput) ToGetVcpuServerVolumeArrayOutput() GetVcpuServerVolumeArrayOutput {
	return o
}

func (o GetVcpuServerVolumeArrayOutput) ToGetVcpuServerVolumeArrayOutputWithContext(ctx context.Context) GetVcpuServerVolumeArrayOutput {
	return o
}

func (o GetVcpuServerVolumeArrayOutput) Index(i pulumi.IntInput) GetVcpuServerVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVcpuServerVolume {
		return vs[0].([]GetVcpuServerVolume)[vs[1].(int)]
	}).(GetVcpuServerVolumeOutput)
}

type GetVpnIpsecGatewayConnection struct {
	// The datacenter to connect your VPN Gateway to.
	DatacenterId string `pulumi:"datacenterId"`
	// Describes the private ipv4 subnet in your LAN that should be accessible by the
	// VPN Gateway.
	Ipv4Cidr string `pulumi:"ipv4Cidr"`
	// Describes the ipv6 subnet in your LAN that should be accessible by the VPN Gateway.
	Ipv6Cidr string `pulumi:"ipv6Cidr"`
	// The numeric LAN ID to connect your VPN Gateway to.
	LanId string `pulumi:"lanId"`
}

// GetVpnIpsecGatewayConnectionInput is an input type that accepts GetVpnIpsecGatewayConnectionArgs and GetVpnIpsecGatewayConnectionOutput values.
// You can construct a concrete instance of `GetVpnIpsecGatewayConnectionInput` via:
//
//	GetVpnIpsecGatewayConnectionArgs{...}
type GetVpnIpsecGatewayConnectionInput interface {
	pulumi.Input

	ToGetVpnIpsecGatewayConnectionOutput() GetVpnIpsecGatewayConnectionOutput
	ToGetVpnIpsecGatewayConnectionOutputWithContext(context.Context) GetVpnIpsecGatewayConnectionOutput
}

type GetVpnIpsecGatewayConnectionArgs struct {
	// The datacenter to connect your VPN Gateway to.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// Describes the private ipv4 subnet in your LAN that should be accessible by the
	// VPN Gateway.
	Ipv4Cidr pulumi.StringInput `pulumi:"ipv4Cidr"`
	// Describes the ipv6 subnet in your LAN that should be accessible by the VPN Gateway.
	Ipv6Cidr pulumi.StringInput `pulumi:"ipv6Cidr"`
	// The numeric LAN ID to connect your VPN Gateway to.
	LanId pulumi.StringInput `pulumi:"lanId"`
}

func (GetVpnIpsecGatewayConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnIpsecGatewayConnection)(nil)).Elem()
}

func (i GetVpnIpsecGatewayConnectionArgs) ToGetVpnIpsecGatewayConnectionOutput() GetVpnIpsecGatewayConnectionOutput {
	return i.ToGetVpnIpsecGatewayConnectionOutputWithContext(context.Background())
}

func (i GetVpnIpsecGatewayConnectionArgs) ToGetVpnIpsecGatewayConnectionOutputWithContext(ctx context.Context) GetVpnIpsecGatewayConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnIpsecGatewayConnectionOutput)
}

// GetVpnIpsecGatewayConnectionArrayInput is an input type that accepts GetVpnIpsecGatewayConnectionArray and GetVpnIpsecGatewayConnectionArrayOutput values.
// You can construct a concrete instance of `GetVpnIpsecGatewayConnectionArrayInput` via:
//
//	GetVpnIpsecGatewayConnectionArray{ GetVpnIpsecGatewayConnectionArgs{...} }
type GetVpnIpsecGatewayConnectionArrayInput interface {
	pulumi.Input

	ToGetVpnIpsecGatewayConnectionArrayOutput() GetVpnIpsecGatewayConnectionArrayOutput
	ToGetVpnIpsecGatewayConnectionArrayOutputWithContext(context.Context) GetVpnIpsecGatewayConnectionArrayOutput
}

type GetVpnIpsecGatewayConnectionArray []GetVpnIpsecGatewayConnectionInput

func (GetVpnIpsecGatewayConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnIpsecGatewayConnection)(nil)).Elem()
}

func (i GetVpnIpsecGatewayConnectionArray) ToGetVpnIpsecGatewayConnectionArrayOutput() GetVpnIpsecGatewayConnectionArrayOutput {
	return i.ToGetVpnIpsecGatewayConnectionArrayOutputWithContext(context.Background())
}

func (i GetVpnIpsecGatewayConnectionArray) ToGetVpnIpsecGatewayConnectionArrayOutputWithContext(ctx context.Context) GetVpnIpsecGatewayConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnIpsecGatewayConnectionArrayOutput)
}

type GetVpnIpsecGatewayConnectionOutput struct{ *pulumi.OutputState }

func (GetVpnIpsecGatewayConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnIpsecGatewayConnection)(nil)).Elem()
}

func (o GetVpnIpsecGatewayConnectionOutput) ToGetVpnIpsecGatewayConnectionOutput() GetVpnIpsecGatewayConnectionOutput {
	return o
}

func (o GetVpnIpsecGatewayConnectionOutput) ToGetVpnIpsecGatewayConnectionOutputWithContext(ctx context.Context) GetVpnIpsecGatewayConnectionOutput {
	return o
}

// The datacenter to connect your VPN Gateway to.
func (o GetVpnIpsecGatewayConnectionOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecGatewayConnection) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// Describes the private ipv4 subnet in your LAN that should be accessible by the
// VPN Gateway.
func (o GetVpnIpsecGatewayConnectionOutput) Ipv4Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecGatewayConnection) string { return v.Ipv4Cidr }).(pulumi.StringOutput)
}

// Describes the ipv6 subnet in your LAN that should be accessible by the VPN Gateway.
func (o GetVpnIpsecGatewayConnectionOutput) Ipv6Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecGatewayConnection) string { return v.Ipv6Cidr }).(pulumi.StringOutput)
}

// The numeric LAN ID to connect your VPN Gateway to.
func (o GetVpnIpsecGatewayConnectionOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecGatewayConnection) string { return v.LanId }).(pulumi.StringOutput)
}

type GetVpnIpsecGatewayConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetVpnIpsecGatewayConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnIpsecGatewayConnection)(nil)).Elem()
}

func (o GetVpnIpsecGatewayConnectionArrayOutput) ToGetVpnIpsecGatewayConnectionArrayOutput() GetVpnIpsecGatewayConnectionArrayOutput {
	return o
}

func (o GetVpnIpsecGatewayConnectionArrayOutput) ToGetVpnIpsecGatewayConnectionArrayOutputWithContext(ctx context.Context) GetVpnIpsecGatewayConnectionArrayOutput {
	return o
}

func (o GetVpnIpsecGatewayConnectionArrayOutput) Index(i pulumi.IntInput) GetVpnIpsecGatewayConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnIpsecGatewayConnection {
		return vs[0].([]GetVpnIpsecGatewayConnection)[vs[1].(int)]
	}).(GetVpnIpsecGatewayConnectionOutput)
}

type GetVpnIpsecTunnelAuth struct {
	// The Authentication Method to use for IPSec Authentication.
	Method string `pulumi:"method"`
}

// GetVpnIpsecTunnelAuthInput is an input type that accepts GetVpnIpsecTunnelAuthArgs and GetVpnIpsecTunnelAuthOutput values.
// You can construct a concrete instance of `GetVpnIpsecTunnelAuthInput` via:
//
//	GetVpnIpsecTunnelAuthArgs{...}
type GetVpnIpsecTunnelAuthInput interface {
	pulumi.Input

	ToGetVpnIpsecTunnelAuthOutput() GetVpnIpsecTunnelAuthOutput
	ToGetVpnIpsecTunnelAuthOutputWithContext(context.Context) GetVpnIpsecTunnelAuthOutput
}

type GetVpnIpsecTunnelAuthArgs struct {
	// The Authentication Method to use for IPSec Authentication.
	Method pulumi.StringInput `pulumi:"method"`
}

func (GetVpnIpsecTunnelAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnIpsecTunnelAuth)(nil)).Elem()
}

func (i GetVpnIpsecTunnelAuthArgs) ToGetVpnIpsecTunnelAuthOutput() GetVpnIpsecTunnelAuthOutput {
	return i.ToGetVpnIpsecTunnelAuthOutputWithContext(context.Background())
}

func (i GetVpnIpsecTunnelAuthArgs) ToGetVpnIpsecTunnelAuthOutputWithContext(ctx context.Context) GetVpnIpsecTunnelAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnIpsecTunnelAuthOutput)
}

// GetVpnIpsecTunnelAuthArrayInput is an input type that accepts GetVpnIpsecTunnelAuthArray and GetVpnIpsecTunnelAuthArrayOutput values.
// You can construct a concrete instance of `GetVpnIpsecTunnelAuthArrayInput` via:
//
//	GetVpnIpsecTunnelAuthArray{ GetVpnIpsecTunnelAuthArgs{...} }
type GetVpnIpsecTunnelAuthArrayInput interface {
	pulumi.Input

	ToGetVpnIpsecTunnelAuthArrayOutput() GetVpnIpsecTunnelAuthArrayOutput
	ToGetVpnIpsecTunnelAuthArrayOutputWithContext(context.Context) GetVpnIpsecTunnelAuthArrayOutput
}

type GetVpnIpsecTunnelAuthArray []GetVpnIpsecTunnelAuthInput

func (GetVpnIpsecTunnelAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnIpsecTunnelAuth)(nil)).Elem()
}

func (i GetVpnIpsecTunnelAuthArray) ToGetVpnIpsecTunnelAuthArrayOutput() GetVpnIpsecTunnelAuthArrayOutput {
	return i.ToGetVpnIpsecTunnelAuthArrayOutputWithContext(context.Background())
}

func (i GetVpnIpsecTunnelAuthArray) ToGetVpnIpsecTunnelAuthArrayOutputWithContext(ctx context.Context) GetVpnIpsecTunnelAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnIpsecTunnelAuthArrayOutput)
}

type GetVpnIpsecTunnelAuthOutput struct{ *pulumi.OutputState }

func (GetVpnIpsecTunnelAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnIpsecTunnelAuth)(nil)).Elem()
}

func (o GetVpnIpsecTunnelAuthOutput) ToGetVpnIpsecTunnelAuthOutput() GetVpnIpsecTunnelAuthOutput {
	return o
}

func (o GetVpnIpsecTunnelAuthOutput) ToGetVpnIpsecTunnelAuthOutputWithContext(ctx context.Context) GetVpnIpsecTunnelAuthOutput {
	return o
}

// The Authentication Method to use for IPSec Authentication.
func (o GetVpnIpsecTunnelAuthOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelAuth) string { return v.Method }).(pulumi.StringOutput)
}

type GetVpnIpsecTunnelAuthArrayOutput struct{ *pulumi.OutputState }

func (GetVpnIpsecTunnelAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnIpsecTunnelAuth)(nil)).Elem()
}

func (o GetVpnIpsecTunnelAuthArrayOutput) ToGetVpnIpsecTunnelAuthArrayOutput() GetVpnIpsecTunnelAuthArrayOutput {
	return o
}

func (o GetVpnIpsecTunnelAuthArrayOutput) ToGetVpnIpsecTunnelAuthArrayOutputWithContext(ctx context.Context) GetVpnIpsecTunnelAuthArrayOutput {
	return o
}

func (o GetVpnIpsecTunnelAuthArrayOutput) Index(i pulumi.IntInput) GetVpnIpsecTunnelAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnIpsecTunnelAuth {
		return vs[0].([]GetVpnIpsecTunnelAuth)[vs[1].(int)]
	}).(GetVpnIpsecTunnelAuthOutput)
}

type GetVpnIpsecTunnelEsp struct {
	// The Diffie-Hellman Group to use for IPSec Encryption.
	DiffieHellmanGroup string `pulumi:"diffieHellmanGroup"`
	// The encryption algorithm to use for IPSec Encryption.
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// The integrity algorithm to use for IPSec Encryption.
	IntegrityAlgorithm string `pulumi:"integrityAlgorithm"`
	// The phase lifetime in seconds.
	Lifetime int `pulumi:"lifetime"`
}

// GetVpnIpsecTunnelEspInput is an input type that accepts GetVpnIpsecTunnelEspArgs and GetVpnIpsecTunnelEspOutput values.
// You can construct a concrete instance of `GetVpnIpsecTunnelEspInput` via:
//
//	GetVpnIpsecTunnelEspArgs{...}
type GetVpnIpsecTunnelEspInput interface {
	pulumi.Input

	ToGetVpnIpsecTunnelEspOutput() GetVpnIpsecTunnelEspOutput
	ToGetVpnIpsecTunnelEspOutputWithContext(context.Context) GetVpnIpsecTunnelEspOutput
}

type GetVpnIpsecTunnelEspArgs struct {
	// The Diffie-Hellman Group to use for IPSec Encryption.
	DiffieHellmanGroup pulumi.StringInput `pulumi:"diffieHellmanGroup"`
	// The encryption algorithm to use for IPSec Encryption.
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// The integrity algorithm to use for IPSec Encryption.
	IntegrityAlgorithm pulumi.StringInput `pulumi:"integrityAlgorithm"`
	// The phase lifetime in seconds.
	Lifetime pulumi.IntInput `pulumi:"lifetime"`
}

func (GetVpnIpsecTunnelEspArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnIpsecTunnelEsp)(nil)).Elem()
}

func (i GetVpnIpsecTunnelEspArgs) ToGetVpnIpsecTunnelEspOutput() GetVpnIpsecTunnelEspOutput {
	return i.ToGetVpnIpsecTunnelEspOutputWithContext(context.Background())
}

func (i GetVpnIpsecTunnelEspArgs) ToGetVpnIpsecTunnelEspOutputWithContext(ctx context.Context) GetVpnIpsecTunnelEspOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnIpsecTunnelEspOutput)
}

// GetVpnIpsecTunnelEspArrayInput is an input type that accepts GetVpnIpsecTunnelEspArray and GetVpnIpsecTunnelEspArrayOutput values.
// You can construct a concrete instance of `GetVpnIpsecTunnelEspArrayInput` via:
//
//	GetVpnIpsecTunnelEspArray{ GetVpnIpsecTunnelEspArgs{...} }
type GetVpnIpsecTunnelEspArrayInput interface {
	pulumi.Input

	ToGetVpnIpsecTunnelEspArrayOutput() GetVpnIpsecTunnelEspArrayOutput
	ToGetVpnIpsecTunnelEspArrayOutputWithContext(context.Context) GetVpnIpsecTunnelEspArrayOutput
}

type GetVpnIpsecTunnelEspArray []GetVpnIpsecTunnelEspInput

func (GetVpnIpsecTunnelEspArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnIpsecTunnelEsp)(nil)).Elem()
}

func (i GetVpnIpsecTunnelEspArray) ToGetVpnIpsecTunnelEspArrayOutput() GetVpnIpsecTunnelEspArrayOutput {
	return i.ToGetVpnIpsecTunnelEspArrayOutputWithContext(context.Background())
}

func (i GetVpnIpsecTunnelEspArray) ToGetVpnIpsecTunnelEspArrayOutputWithContext(ctx context.Context) GetVpnIpsecTunnelEspArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnIpsecTunnelEspArrayOutput)
}

type GetVpnIpsecTunnelEspOutput struct{ *pulumi.OutputState }

func (GetVpnIpsecTunnelEspOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnIpsecTunnelEsp)(nil)).Elem()
}

func (o GetVpnIpsecTunnelEspOutput) ToGetVpnIpsecTunnelEspOutput() GetVpnIpsecTunnelEspOutput {
	return o
}

func (o GetVpnIpsecTunnelEspOutput) ToGetVpnIpsecTunnelEspOutputWithContext(ctx context.Context) GetVpnIpsecTunnelEspOutput {
	return o
}

// The Diffie-Hellman Group to use for IPSec Encryption.
func (o GetVpnIpsecTunnelEspOutput) DiffieHellmanGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelEsp) string { return v.DiffieHellmanGroup }).(pulumi.StringOutput)
}

// The encryption algorithm to use for IPSec Encryption.
func (o GetVpnIpsecTunnelEspOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelEsp) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// The integrity algorithm to use for IPSec Encryption.
func (o GetVpnIpsecTunnelEspOutput) IntegrityAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelEsp) string { return v.IntegrityAlgorithm }).(pulumi.StringOutput)
}

// The phase lifetime in seconds.
func (o GetVpnIpsecTunnelEspOutput) Lifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelEsp) int { return v.Lifetime }).(pulumi.IntOutput)
}

type GetVpnIpsecTunnelEspArrayOutput struct{ *pulumi.OutputState }

func (GetVpnIpsecTunnelEspArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnIpsecTunnelEsp)(nil)).Elem()
}

func (o GetVpnIpsecTunnelEspArrayOutput) ToGetVpnIpsecTunnelEspArrayOutput() GetVpnIpsecTunnelEspArrayOutput {
	return o
}

func (o GetVpnIpsecTunnelEspArrayOutput) ToGetVpnIpsecTunnelEspArrayOutputWithContext(ctx context.Context) GetVpnIpsecTunnelEspArrayOutput {
	return o
}

func (o GetVpnIpsecTunnelEspArrayOutput) Index(i pulumi.IntInput) GetVpnIpsecTunnelEspOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnIpsecTunnelEsp {
		return vs[0].([]GetVpnIpsecTunnelEsp)[vs[1].(int)]
	}).(GetVpnIpsecTunnelEspOutput)
}

type GetVpnIpsecTunnelIke struct {
	// The Diffie-Hellman Group to use for IPSec Encryption.
	DiffieHellmanGroup string `pulumi:"diffieHellmanGroup"`
	// The encryption algorithm to use for IPSec Encryption.
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// The integrity algorithm to use for IPSec Encryption.
	IntegrityAlgorithm string `pulumi:"integrityAlgorithm"`
	// The phase lifetime in seconds.
	Lifetime int `pulumi:"lifetime"`
}

// GetVpnIpsecTunnelIkeInput is an input type that accepts GetVpnIpsecTunnelIkeArgs and GetVpnIpsecTunnelIkeOutput values.
// You can construct a concrete instance of `GetVpnIpsecTunnelIkeInput` via:
//
//	GetVpnIpsecTunnelIkeArgs{...}
type GetVpnIpsecTunnelIkeInput interface {
	pulumi.Input

	ToGetVpnIpsecTunnelIkeOutput() GetVpnIpsecTunnelIkeOutput
	ToGetVpnIpsecTunnelIkeOutputWithContext(context.Context) GetVpnIpsecTunnelIkeOutput
}

type GetVpnIpsecTunnelIkeArgs struct {
	// The Diffie-Hellman Group to use for IPSec Encryption.
	DiffieHellmanGroup pulumi.StringInput `pulumi:"diffieHellmanGroup"`
	// The encryption algorithm to use for IPSec Encryption.
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// The integrity algorithm to use for IPSec Encryption.
	IntegrityAlgorithm pulumi.StringInput `pulumi:"integrityAlgorithm"`
	// The phase lifetime in seconds.
	Lifetime pulumi.IntInput `pulumi:"lifetime"`
}

func (GetVpnIpsecTunnelIkeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnIpsecTunnelIke)(nil)).Elem()
}

func (i GetVpnIpsecTunnelIkeArgs) ToGetVpnIpsecTunnelIkeOutput() GetVpnIpsecTunnelIkeOutput {
	return i.ToGetVpnIpsecTunnelIkeOutputWithContext(context.Background())
}

func (i GetVpnIpsecTunnelIkeArgs) ToGetVpnIpsecTunnelIkeOutputWithContext(ctx context.Context) GetVpnIpsecTunnelIkeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnIpsecTunnelIkeOutput)
}

// GetVpnIpsecTunnelIkeArrayInput is an input type that accepts GetVpnIpsecTunnelIkeArray and GetVpnIpsecTunnelIkeArrayOutput values.
// You can construct a concrete instance of `GetVpnIpsecTunnelIkeArrayInput` via:
//
//	GetVpnIpsecTunnelIkeArray{ GetVpnIpsecTunnelIkeArgs{...} }
type GetVpnIpsecTunnelIkeArrayInput interface {
	pulumi.Input

	ToGetVpnIpsecTunnelIkeArrayOutput() GetVpnIpsecTunnelIkeArrayOutput
	ToGetVpnIpsecTunnelIkeArrayOutputWithContext(context.Context) GetVpnIpsecTunnelIkeArrayOutput
}

type GetVpnIpsecTunnelIkeArray []GetVpnIpsecTunnelIkeInput

func (GetVpnIpsecTunnelIkeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnIpsecTunnelIke)(nil)).Elem()
}

func (i GetVpnIpsecTunnelIkeArray) ToGetVpnIpsecTunnelIkeArrayOutput() GetVpnIpsecTunnelIkeArrayOutput {
	return i.ToGetVpnIpsecTunnelIkeArrayOutputWithContext(context.Background())
}

func (i GetVpnIpsecTunnelIkeArray) ToGetVpnIpsecTunnelIkeArrayOutputWithContext(ctx context.Context) GetVpnIpsecTunnelIkeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnIpsecTunnelIkeArrayOutput)
}

type GetVpnIpsecTunnelIkeOutput struct{ *pulumi.OutputState }

func (GetVpnIpsecTunnelIkeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnIpsecTunnelIke)(nil)).Elem()
}

func (o GetVpnIpsecTunnelIkeOutput) ToGetVpnIpsecTunnelIkeOutput() GetVpnIpsecTunnelIkeOutput {
	return o
}

func (o GetVpnIpsecTunnelIkeOutput) ToGetVpnIpsecTunnelIkeOutputWithContext(ctx context.Context) GetVpnIpsecTunnelIkeOutput {
	return o
}

// The Diffie-Hellman Group to use for IPSec Encryption.
func (o GetVpnIpsecTunnelIkeOutput) DiffieHellmanGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelIke) string { return v.DiffieHellmanGroup }).(pulumi.StringOutput)
}

// The encryption algorithm to use for IPSec Encryption.
func (o GetVpnIpsecTunnelIkeOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelIke) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// The integrity algorithm to use for IPSec Encryption.
func (o GetVpnIpsecTunnelIkeOutput) IntegrityAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelIke) string { return v.IntegrityAlgorithm }).(pulumi.StringOutput)
}

// The phase lifetime in seconds.
func (o GetVpnIpsecTunnelIkeOutput) Lifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelIke) int { return v.Lifetime }).(pulumi.IntOutput)
}

type GetVpnIpsecTunnelIkeArrayOutput struct{ *pulumi.OutputState }

func (GetVpnIpsecTunnelIkeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnIpsecTunnelIke)(nil)).Elem()
}

func (o GetVpnIpsecTunnelIkeArrayOutput) ToGetVpnIpsecTunnelIkeArrayOutput() GetVpnIpsecTunnelIkeArrayOutput {
	return o
}

func (o GetVpnIpsecTunnelIkeArrayOutput) ToGetVpnIpsecTunnelIkeArrayOutputWithContext(ctx context.Context) GetVpnIpsecTunnelIkeArrayOutput {
	return o
}

func (o GetVpnIpsecTunnelIkeArrayOutput) Index(i pulumi.IntInput) GetVpnIpsecTunnelIkeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnIpsecTunnelIke {
		return vs[0].([]GetVpnIpsecTunnelIke)[vs[1].(int)]
	}).(GetVpnIpsecTunnelIkeOutput)
}

type GetVpnWireguardGatewayConnection struct {
	// The ID of the datacenter where the WireGuard Gateway is located.
	DatacenterId string `pulumi:"datacenterId"`
	// The IPv4 CIDR for the WireGuard Gateway connection.
	Ipv4Cidr string `pulumi:"ipv4Cidr"`
	// The IPv6 CIDR for the WireGuard Gateway connection.
	Ipv6Cidr string `pulumi:"ipv6Cidr"`
	// The ID of the LAN where the WireGuard Gateway is connected.
	LanId string `pulumi:"lanId"`
}

// GetVpnWireguardGatewayConnectionInput is an input type that accepts GetVpnWireguardGatewayConnectionArgs and GetVpnWireguardGatewayConnectionOutput values.
// You can construct a concrete instance of `GetVpnWireguardGatewayConnectionInput` via:
//
//	GetVpnWireguardGatewayConnectionArgs{...}
type GetVpnWireguardGatewayConnectionInput interface {
	pulumi.Input

	ToGetVpnWireguardGatewayConnectionOutput() GetVpnWireguardGatewayConnectionOutput
	ToGetVpnWireguardGatewayConnectionOutputWithContext(context.Context) GetVpnWireguardGatewayConnectionOutput
}

type GetVpnWireguardGatewayConnectionArgs struct {
	// The ID of the datacenter where the WireGuard Gateway is located.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// The IPv4 CIDR for the WireGuard Gateway connection.
	Ipv4Cidr pulumi.StringInput `pulumi:"ipv4Cidr"`
	// The IPv6 CIDR for the WireGuard Gateway connection.
	Ipv6Cidr pulumi.StringInput `pulumi:"ipv6Cidr"`
	// The ID of the LAN where the WireGuard Gateway is connected.
	LanId pulumi.StringInput `pulumi:"lanId"`
}

func (GetVpnWireguardGatewayConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnWireguardGatewayConnection)(nil)).Elem()
}

func (i GetVpnWireguardGatewayConnectionArgs) ToGetVpnWireguardGatewayConnectionOutput() GetVpnWireguardGatewayConnectionOutput {
	return i.ToGetVpnWireguardGatewayConnectionOutputWithContext(context.Background())
}

func (i GetVpnWireguardGatewayConnectionArgs) ToGetVpnWireguardGatewayConnectionOutputWithContext(ctx context.Context) GetVpnWireguardGatewayConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnWireguardGatewayConnectionOutput)
}

// GetVpnWireguardGatewayConnectionArrayInput is an input type that accepts GetVpnWireguardGatewayConnectionArray and GetVpnWireguardGatewayConnectionArrayOutput values.
// You can construct a concrete instance of `GetVpnWireguardGatewayConnectionArrayInput` via:
//
//	GetVpnWireguardGatewayConnectionArray{ GetVpnWireguardGatewayConnectionArgs{...} }
type GetVpnWireguardGatewayConnectionArrayInput interface {
	pulumi.Input

	ToGetVpnWireguardGatewayConnectionArrayOutput() GetVpnWireguardGatewayConnectionArrayOutput
	ToGetVpnWireguardGatewayConnectionArrayOutputWithContext(context.Context) GetVpnWireguardGatewayConnectionArrayOutput
}

type GetVpnWireguardGatewayConnectionArray []GetVpnWireguardGatewayConnectionInput

func (GetVpnWireguardGatewayConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnWireguardGatewayConnection)(nil)).Elem()
}

func (i GetVpnWireguardGatewayConnectionArray) ToGetVpnWireguardGatewayConnectionArrayOutput() GetVpnWireguardGatewayConnectionArrayOutput {
	return i.ToGetVpnWireguardGatewayConnectionArrayOutputWithContext(context.Background())
}

func (i GetVpnWireguardGatewayConnectionArray) ToGetVpnWireguardGatewayConnectionArrayOutputWithContext(ctx context.Context) GetVpnWireguardGatewayConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnWireguardGatewayConnectionArrayOutput)
}

type GetVpnWireguardGatewayConnectionOutput struct{ *pulumi.OutputState }

func (GetVpnWireguardGatewayConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnWireguardGatewayConnection)(nil)).Elem()
}

func (o GetVpnWireguardGatewayConnectionOutput) ToGetVpnWireguardGatewayConnectionOutput() GetVpnWireguardGatewayConnectionOutput {
	return o
}

func (o GetVpnWireguardGatewayConnectionOutput) ToGetVpnWireguardGatewayConnectionOutputWithContext(ctx context.Context) GetVpnWireguardGatewayConnectionOutput {
	return o
}

// The ID of the datacenter where the WireGuard Gateway is located.
func (o GetVpnWireguardGatewayConnectionOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnWireguardGatewayConnection) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// The IPv4 CIDR for the WireGuard Gateway connection.
func (o GetVpnWireguardGatewayConnectionOutput) Ipv4Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnWireguardGatewayConnection) string { return v.Ipv4Cidr }).(pulumi.StringOutput)
}

// The IPv6 CIDR for the WireGuard Gateway connection.
func (o GetVpnWireguardGatewayConnectionOutput) Ipv6Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnWireguardGatewayConnection) string { return v.Ipv6Cidr }).(pulumi.StringOutput)
}

// The ID of the LAN where the WireGuard Gateway is connected.
func (o GetVpnWireguardGatewayConnectionOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnWireguardGatewayConnection) string { return v.LanId }).(pulumi.StringOutput)
}

type GetVpnWireguardGatewayConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetVpnWireguardGatewayConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnWireguardGatewayConnection)(nil)).Elem()
}

func (o GetVpnWireguardGatewayConnectionArrayOutput) ToGetVpnWireguardGatewayConnectionArrayOutput() GetVpnWireguardGatewayConnectionArrayOutput {
	return o
}

func (o GetVpnWireguardGatewayConnectionArrayOutput) ToGetVpnWireguardGatewayConnectionArrayOutputWithContext(ctx context.Context) GetVpnWireguardGatewayConnectionArrayOutput {
	return o
}

func (o GetVpnWireguardGatewayConnectionArrayOutput) Index(i pulumi.IntInput) GetVpnWireguardGatewayConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnWireguardGatewayConnection {
		return vs[0].([]GetVpnWireguardGatewayConnection)[vs[1].(int)]
	}).(GetVpnWireguardGatewayConnectionOutput)
}

type GetVpnWireguardPeerEndpoint struct {
	// Hostname or IPV4 address that the WireGuard Server will connect to.
	Host string `pulumi:"host"`
	// Port that the WireGuard Server will connect to. Default: 51820
	Port int `pulumi:"port"`
}

// GetVpnWireguardPeerEndpointInput is an input type that accepts GetVpnWireguardPeerEndpointArgs and GetVpnWireguardPeerEndpointOutput values.
// You can construct a concrete instance of `GetVpnWireguardPeerEndpointInput` via:
//
//	GetVpnWireguardPeerEndpointArgs{...}
type GetVpnWireguardPeerEndpointInput interface {
	pulumi.Input

	ToGetVpnWireguardPeerEndpointOutput() GetVpnWireguardPeerEndpointOutput
	ToGetVpnWireguardPeerEndpointOutputWithContext(context.Context) GetVpnWireguardPeerEndpointOutput
}

type GetVpnWireguardPeerEndpointArgs struct {
	// Hostname or IPV4 address that the WireGuard Server will connect to.
	Host pulumi.StringInput `pulumi:"host"`
	// Port that the WireGuard Server will connect to. Default: 51820
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetVpnWireguardPeerEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnWireguardPeerEndpoint)(nil)).Elem()
}

func (i GetVpnWireguardPeerEndpointArgs) ToGetVpnWireguardPeerEndpointOutput() GetVpnWireguardPeerEndpointOutput {
	return i.ToGetVpnWireguardPeerEndpointOutputWithContext(context.Background())
}

func (i GetVpnWireguardPeerEndpointArgs) ToGetVpnWireguardPeerEndpointOutputWithContext(ctx context.Context) GetVpnWireguardPeerEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnWireguardPeerEndpointOutput)
}

// GetVpnWireguardPeerEndpointArrayInput is an input type that accepts GetVpnWireguardPeerEndpointArray and GetVpnWireguardPeerEndpointArrayOutput values.
// You can construct a concrete instance of `GetVpnWireguardPeerEndpointArrayInput` via:
//
//	GetVpnWireguardPeerEndpointArray{ GetVpnWireguardPeerEndpointArgs{...} }
type GetVpnWireguardPeerEndpointArrayInput interface {
	pulumi.Input

	ToGetVpnWireguardPeerEndpointArrayOutput() GetVpnWireguardPeerEndpointArrayOutput
	ToGetVpnWireguardPeerEndpointArrayOutputWithContext(context.Context) GetVpnWireguardPeerEndpointArrayOutput
}

type GetVpnWireguardPeerEndpointArray []GetVpnWireguardPeerEndpointInput

func (GetVpnWireguardPeerEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnWireguardPeerEndpoint)(nil)).Elem()
}

func (i GetVpnWireguardPeerEndpointArray) ToGetVpnWireguardPeerEndpointArrayOutput() GetVpnWireguardPeerEndpointArrayOutput {
	return i.ToGetVpnWireguardPeerEndpointArrayOutputWithContext(context.Background())
}

func (i GetVpnWireguardPeerEndpointArray) ToGetVpnWireguardPeerEndpointArrayOutputWithContext(ctx context.Context) GetVpnWireguardPeerEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnWireguardPeerEndpointArrayOutput)
}

type GetVpnWireguardPeerEndpointOutput struct{ *pulumi.OutputState }

func (GetVpnWireguardPeerEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnWireguardPeerEndpoint)(nil)).Elem()
}

func (o GetVpnWireguardPeerEndpointOutput) ToGetVpnWireguardPeerEndpointOutput() GetVpnWireguardPeerEndpointOutput {
	return o
}

func (o GetVpnWireguardPeerEndpointOutput) ToGetVpnWireguardPeerEndpointOutputWithContext(ctx context.Context) GetVpnWireguardPeerEndpointOutput {
	return o
}

// Hostname or IPV4 address that the WireGuard Server will connect to.
func (o GetVpnWireguardPeerEndpointOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnWireguardPeerEndpoint) string { return v.Host }).(pulumi.StringOutput)
}

// Port that the WireGuard Server will connect to. Default: 51820
func (o GetVpnWireguardPeerEndpointOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnWireguardPeerEndpoint) int { return v.Port }).(pulumi.IntOutput)
}

type GetVpnWireguardPeerEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetVpnWireguardPeerEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnWireguardPeerEndpoint)(nil)).Elem()
}

func (o GetVpnWireguardPeerEndpointArrayOutput) ToGetVpnWireguardPeerEndpointArrayOutput() GetVpnWireguardPeerEndpointArrayOutput {
	return o
}

func (o GetVpnWireguardPeerEndpointArrayOutput) ToGetVpnWireguardPeerEndpointArrayOutputWithContext(ctx context.Context) GetVpnWireguardPeerEndpointArrayOutput {
	return o
}

func (o GetVpnWireguardPeerEndpointArrayOutput) Index(i pulumi.IntInput) GetVpnWireguardPeerEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnWireguardPeerEndpoint {
		return vs[0].([]GetVpnWireguardPeerEndpoint)[vs[1].(int)]
	}).(GetVpnWireguardPeerEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigatewayCustomDomainInput)(nil)).Elem(), ApigatewayCustomDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigatewayCustomDomainArrayInput)(nil)).Elem(), ApigatewayCustomDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigatewayRouteUpstreamInput)(nil)).Elem(), ApigatewayRouteUpstreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigatewayRouteUpstreamArrayInput)(nil)).Elem(), ApigatewayRouteUpstreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerFlowlogInput)(nil)).Elem(), ApplicationLoadbalancerFlowlogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerFlowlogPtrInput)(nil)).Elem(), ApplicationLoadbalancerFlowlogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRuleInput)(nil)).Elem(), ApplicationLoadbalancerForwardingruleHttpRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRuleArrayInput)(nil)).Elem(), ApplicationLoadbalancerForwardingruleHttpRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRuleConditionInput)(nil)).Elem(), ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput)(nil)).Elem(), ApplicationLoadbalancerForwardingruleHttpRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoCertificateProviderExternalAccountBindingInput)(nil)).Elem(), AutoCertificateProviderExternalAccountBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoCertificateProviderExternalAccountBindingPtrInput)(nil)).Elem(), AutoCertificateProviderExternalAccountBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupPolicyInput)(nil)).Elem(), AutoscalingGroupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupPolicyPtrInput)(nil)).Elem(), AutoscalingGroupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupPolicyScaleInActionInput)(nil)).Elem(), AutoscalingGroupPolicyScaleInActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupPolicyScaleInActionPtrInput)(nil)).Elem(), AutoscalingGroupPolicyScaleInActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupPolicyScaleOutActionInput)(nil)).Elem(), AutoscalingGroupPolicyScaleOutActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupPolicyScaleOutActionPtrInput)(nil)).Elem(), AutoscalingGroupPolicyScaleOutActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupReplicaConfigurationInput)(nil)).Elem(), AutoscalingGroupReplicaConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupReplicaConfigurationPtrInput)(nil)).Elem(), AutoscalingGroupReplicaConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNicInput)(nil)).Elem(), AutoscalingGroupReplicaConfigurationNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNicArrayInput)(nil)).Elem(), AutoscalingGroupReplicaConfigurationNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNicFirewallRuleInput)(nil)).Elem(), AutoscalingGroupReplicaConfigurationNicFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayInput)(nil)).Elem(), AutoscalingGroupReplicaConfigurationNicFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNicFlowLogInput)(nil)).Elem(), AutoscalingGroupReplicaConfigurationNicFlowLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNicFlowLogArrayInput)(nil)).Elem(), AutoscalingGroupReplicaConfigurationNicFlowLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNicTargetGroupInput)(nil)).Elem(), AutoscalingGroupReplicaConfigurationNicTargetGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupReplicaConfigurationNicTargetGroupPtrInput)(nil)).Elem(), AutoscalingGroupReplicaConfigurationNicTargetGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupReplicaConfigurationVolumeInput)(nil)).Elem(), AutoscalingGroupReplicaConfigurationVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingGroupReplicaConfigurationVolumeArrayInput)(nil)).Elem(), AutoscalingGroupReplicaConfigurationVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterConnectionsInput)(nil)).Elem(), KafkaClusterConnectionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterConnectionsPtrInput)(nil)).Elem(), KafkaClusterConnectionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingPipelineLogInput)(nil)).Elem(), LoggingPipelineLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingPipelineLogArrayInput)(nil)).Elem(), LoggingPipelineLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingPipelineLogDestinationInput)(nil)).Elem(), LoggingPipelineLogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingPipelineLogDestinationArrayInput)(nil)).Elem(), LoggingPipelineLogDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatgatewayLanInput)(nil)).Elem(), NatgatewayLanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatgatewayLanArrayInput)(nil)).Elem(), NatgatewayLanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatgatewayRuleTargetPortRangeInput)(nil)).Elem(), NatgatewayRuleTargetPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NatgatewayRuleTargetPortRangePtrInput)(nil)).Elem(), NatgatewayRuleTargetPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkloadbalancerFlowlogInput)(nil)).Elem(), NetworkloadbalancerFlowlogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkloadbalancerFlowlogPtrInput)(nil)).Elem(), NetworkloadbalancerFlowlogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkloadbalancerForwardingruleHealthCheckInput)(nil)).Elem(), NetworkloadbalancerForwardingruleHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkloadbalancerForwardingruleHealthCheckPtrInput)(nil)).Elem(), NetworkloadbalancerForwardingruleHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkloadbalancerForwardingruleTargetInput)(nil)).Elem(), NetworkloadbalancerForwardingruleTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkloadbalancerForwardingruleTargetArrayInput)(nil)).Elem(), NetworkloadbalancerForwardingruleTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkloadbalancerForwardingruleTargetHealthCheckInput)(nil)).Elem(), NetworkloadbalancerForwardingruleTargetHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkloadbalancerForwardingruleTargetHealthCheckPtrInput)(nil)).Elem(), NetworkloadbalancerForwardingruleTargetHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupHealthCheckInput)(nil)).Elem(), TargetGroupHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupHealthCheckPtrInput)(nil)).Elem(), TargetGroupHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupHttpHealthCheckInput)(nil)).Elem(), TargetGroupHttpHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupHttpHealthCheckPtrInput)(nil)).Elem(), TargetGroupHttpHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupTargetInput)(nil)).Elem(), TargetGroupTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupTargetArrayInput)(nil)).Elem(), TargetGroupTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigatewayCustomDomainInput)(nil)).Elem(), GetApigatewayCustomDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigatewayCustomDomainArrayInput)(nil)).Elem(), GetApigatewayCustomDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigatewayRouteUpstreamInput)(nil)).Elem(), GetApigatewayRouteUpstreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApigatewayRouteUpstreamArrayInput)(nil)).Elem(), GetApigatewayRouteUpstreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadbalancerFlowlogInput)(nil)).Elem(), GetApplicationLoadbalancerFlowlogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadbalancerFlowlogArrayInput)(nil)).Elem(), GetApplicationLoadbalancerFlowlogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadbalancerForwardingruleHttpRuleInput)(nil)).Elem(), GetApplicationLoadbalancerForwardingruleHttpRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadbalancerForwardingruleHttpRuleArrayInput)(nil)).Elem(), GetApplicationLoadbalancerForwardingruleHttpRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadbalancerForwardingruleHttpRuleConditionInput)(nil)).Elem(), GetApplicationLoadbalancerForwardingruleHttpRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput)(nil)).Elem(), GetApplicationLoadbalancerForwardingruleHttpRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoCertificateProviderExternalAccountBindingInput)(nil)).Elem(), GetAutoCertificateProviderExternalAccountBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoCertificateProviderExternalAccountBindingArrayInput)(nil)).Elem(), GetAutoCertificateProviderExternalAccountBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupPolicyInput)(nil)).Elem(), GetAutoscalingGroupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupPolicyArrayInput)(nil)).Elem(), GetAutoscalingGroupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupPolicyScaleInActionInput)(nil)).Elem(), GetAutoscalingGroupPolicyScaleInActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupPolicyScaleInActionArrayInput)(nil)).Elem(), GetAutoscalingGroupPolicyScaleInActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupPolicyScaleOutActionInput)(nil)).Elem(), GetAutoscalingGroupPolicyScaleOutActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupPolicyScaleOutActionArrayInput)(nil)).Elem(), GetAutoscalingGroupPolicyScaleOutActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationInput)(nil)).Elem(), GetAutoscalingGroupReplicaConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationArrayInput)(nil)).Elem(), GetAutoscalingGroupReplicaConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNicInput)(nil)).Elem(), GetAutoscalingGroupReplicaConfigurationNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNicArrayInput)(nil)).Elem(), GetAutoscalingGroupReplicaConfigurationNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNicFirewallRuleInput)(nil)).Elem(), GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayInput)(nil)).Elem(), GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNicFlowLogInput)(nil)).Elem(), GetAutoscalingGroupReplicaConfigurationNicFlowLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayInput)(nil)).Elem(), GetAutoscalingGroupReplicaConfigurationNicFlowLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNicTargetGroupInput)(nil)).Elem(), GetAutoscalingGroupReplicaConfigurationNicTargetGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayInput)(nil)).Elem(), GetAutoscalingGroupReplicaConfigurationNicTargetGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationVolumeInput)(nil)).Elem(), GetAutoscalingGroupReplicaConfigurationVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupReplicaConfigurationVolumeArrayInput)(nil)).Elem(), GetAutoscalingGroupReplicaConfigurationVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupServersServerInput)(nil)).Elem(), GetAutoscalingGroupServersServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAutoscalingGroupServersServerArrayInput)(nil)).Elem(), GetAutoscalingGroupServersServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCdnDistributionRoutingRuleInput)(nil)).Elem(), GetCdnDistributionRoutingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCdnDistributionRoutingRuleArrayInput)(nil)).Elem(), GetCdnDistributionRoutingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCdnDistributionRoutingRuleUpstreamInput)(nil)).Elem(), GetCdnDistributionRoutingRuleUpstreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCdnDistributionRoutingRuleUpstreamArrayInput)(nil)).Elem(), GetCdnDistributionRoutingRuleUpstreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCdnDistributionRoutingRuleUpstreamGeoRestrictionInput)(nil)).Elem(), GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayInput)(nil)).Elem(), GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRegistryFeatureInput)(nil)).Elem(), GetContainerRegistryFeatureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRegistryFeatureArrayInput)(nil)).Elem(), GetContainerRegistryFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRegistryGarbageCollectionScheduleInput)(nil)).Elem(), GetContainerRegistryGarbageCollectionScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRegistryGarbageCollectionScheduleArrayInput)(nil)).Elem(), GetContainerRegistryGarbageCollectionScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRegistryMaintenanceWindowInput)(nil)).Elem(), GetContainerRegistryMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRegistryMaintenanceWindowArrayInput)(nil)).Elem(), GetContainerRegistryMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRegistryStorageUsageInput)(nil)).Elem(), GetContainerRegistryStorageUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRegistryStorageUsageArrayInput)(nil)).Elem(), GetContainerRegistryStorageUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRegistryTokenCredentialInput)(nil)).Elem(), GetContainerRegistryTokenCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRegistryTokenCredentialArrayInput)(nil)).Elem(), GetContainerRegistryTokenCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRegistryTokenScopeInput)(nil)).Elem(), GetContainerRegistryTokenScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerRegistryTokenScopeArrayInput)(nil)).Elem(), GetContainerRegistryTokenScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCubeServerCdromInput)(nil)).Elem(), GetCubeServerCdromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCubeServerCdromArrayInput)(nil)).Elem(), GetCubeServerCdromArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCubeServerNicInput)(nil)).Elem(), GetCubeServerNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCubeServerNicArrayInput)(nil)).Elem(), GetCubeServerNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCubeServerNicFirewallRuleInput)(nil)).Elem(), GetCubeServerNicFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCubeServerNicFirewallRuleArrayInput)(nil)).Elem(), GetCubeServerNicFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCubeServerVolumeInput)(nil)).Elem(), GetCubeServerVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCubeServerVolumeArrayInput)(nil)).Elem(), GetCubeServerVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatacenterCpuArchitectureInput)(nil)).Elem(), GetDatacenterCpuArchitectureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatacenterCpuArchitectureArrayInput)(nil)).Elem(), GetDatacenterCpuArchitectureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformClusterConfigInput)(nil)).Elem(), GetDataplatformClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformClusterConfigArrayInput)(nil)).Elem(), GetDataplatformClusterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformClusterConfigClusterInput)(nil)).Elem(), GetDataplatformClusterConfigClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformClusterConfigClusterArrayInput)(nil)).Elem(), GetDataplatformClusterConfigClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformClusterConfigContextInput)(nil)).Elem(), GetDataplatformClusterConfigContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformClusterConfigContextArrayInput)(nil)).Elem(), GetDataplatformClusterConfigContextArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformClusterConfigUserInput)(nil)).Elem(), GetDataplatformClusterConfigUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformClusterConfigUserArrayInput)(nil)).Elem(), GetDataplatformClusterConfigUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformClusterLanInput)(nil)).Elem(), GetDataplatformClusterLanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformClusterLanArrayInput)(nil)).Elem(), GetDataplatformClusterLanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformClusterLanRouteInput)(nil)).Elem(), GetDataplatformClusterLanRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformClusterLanRouteArrayInput)(nil)).Elem(), GetDataplatformClusterLanRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformClusterMaintenanceWindowInput)(nil)).Elem(), GetDataplatformClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformClusterMaintenanceWindowArrayInput)(nil)).Elem(), GetDataplatformClusterMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformNodePoolMaintenanceWindowInput)(nil)).Elem(), GetDataplatformNodePoolMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformNodePoolMaintenanceWindowArrayInput)(nil)).Elem(), GetDataplatformNodePoolMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformNodePoolsNodePoolInput)(nil)).Elem(), GetDataplatformNodePoolsNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformNodePoolsNodePoolArrayInput)(nil)).Elem(), GetDataplatformNodePoolsNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformNodePoolsNodePoolMaintenanceWindowInput)(nil)).Elem(), GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayInput)(nil)).Elem(), GetDataplatformNodePoolsNodePoolMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupUserInput)(nil)).Elem(), GetGroupUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupUserArrayInput)(nil)).Elem(), GetGroupUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInmemorydbReplicasetConnectionInput)(nil)).Elem(), GetInmemorydbReplicasetConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInmemorydbReplicasetConnectionArrayInput)(nil)).Elem(), GetInmemorydbReplicasetConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInmemorydbReplicasetCredentialInput)(nil)).Elem(), GetInmemorydbReplicasetCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInmemorydbReplicasetCredentialArrayInput)(nil)).Elem(), GetInmemorydbReplicasetCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInmemorydbReplicasetMaintenanceWindowInput)(nil)).Elem(), GetInmemorydbReplicasetMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInmemorydbReplicasetMaintenanceWindowArrayInput)(nil)).Elem(), GetInmemorydbReplicasetMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInmemorydbReplicasetResourceInput)(nil)).Elem(), GetInmemorydbReplicasetResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInmemorydbReplicasetResourceArrayInput)(nil)).Elem(), GetInmemorydbReplicasetResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInmemorydbSnapshotMetadataInput)(nil)).Elem(), GetInmemorydbSnapshotMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInmemorydbSnapshotMetadataArrayInput)(nil)).Elem(), GetInmemorydbSnapshotMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpblockIpConsumerInput)(nil)).Elem(), GetIpblockIpConsumerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpblockIpConsumerArrayInput)(nil)).Elem(), GetIpblockIpConsumerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClusterConfigInput)(nil)).Elem(), GetK8sClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClusterConfigArrayInput)(nil)).Elem(), GetK8sClusterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClusterConfigClusterInput)(nil)).Elem(), GetK8sClusterConfigClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClusterConfigClusterArrayInput)(nil)).Elem(), GetK8sClusterConfigClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClusterConfigContextInput)(nil)).Elem(), GetK8sClusterConfigContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClusterConfigContextArrayInput)(nil)).Elem(), GetK8sClusterConfigContextArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClusterConfigUserInput)(nil)).Elem(), GetK8sClusterConfigUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClusterConfigUserArrayInput)(nil)).Elem(), GetK8sClusterConfigUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClusterMaintenanceWindowInput)(nil)).Elem(), GetK8sClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClusterMaintenanceWindowArrayInput)(nil)).Elem(), GetK8sClusterMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClusterS3BucketInput)(nil)).Elem(), GetK8sClusterS3BucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClusterS3BucketArrayInput)(nil)).Elem(), GetK8sClusterS3BucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterInput)(nil)).Elem(), GetK8sClustersClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterArrayInput)(nil)).Elem(), GetK8sClustersClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigInput)(nil)).Elem(), GetK8sClustersClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigArrayInput)(nil)).Elem(), GetK8sClustersClusterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigClusterInput)(nil)).Elem(), GetK8sClustersClusterConfigClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigClusterArrayInput)(nil)).Elem(), GetK8sClustersClusterConfigClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigContextInput)(nil)).Elem(), GetK8sClustersClusterConfigContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigContextArrayInput)(nil)).Elem(), GetK8sClustersClusterConfigContextArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigUserInput)(nil)).Elem(), GetK8sClustersClusterConfigUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigUserArrayInput)(nil)).Elem(), GetK8sClustersClusterConfigUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterMaintenanceWindowInput)(nil)).Elem(), GetK8sClustersClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterMaintenanceWindowArrayInput)(nil)).Elem(), GetK8sClustersClusterMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterS3BucketInput)(nil)).Elem(), GetK8sClustersClusterS3BucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterS3BucketArrayInput)(nil)).Elem(), GetK8sClustersClusterS3BucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersFilterInput)(nil)).Elem(), GetK8sClustersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersFilterArrayInput)(nil)).Elem(), GetK8sClustersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sNodePoolAutoScalingInput)(nil)).Elem(), GetK8sNodePoolAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sNodePoolAutoScalingArrayInput)(nil)).Elem(), GetK8sNodePoolAutoScalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sNodePoolLanInput)(nil)).Elem(), GetK8sNodePoolLanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sNodePoolLanArrayInput)(nil)).Elem(), GetK8sNodePoolLanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sNodePoolLanRouteInput)(nil)).Elem(), GetK8sNodePoolLanRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sNodePoolLanRouteArrayInput)(nil)).Elem(), GetK8sNodePoolLanRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sNodePoolMaintenanceWindowInput)(nil)).Elem(), GetK8sNodePoolMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sNodePoolMaintenanceWindowArrayInput)(nil)).Elem(), GetK8sNodePoolMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sNodePoolNodesNodeInput)(nil)).Elem(), GetK8sNodePoolNodesNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sNodePoolNodesNodeArrayInput)(nil)).Elem(), GetK8sNodePoolNodesNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterConnectionInput)(nil)).Elem(), GetKafkaClusterConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterConnectionArrayInput)(nil)).Elem(), GetKafkaClusterConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLanIpFailoverInput)(nil)).Elem(), GetLanIpFailoverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLanIpFailoverArrayInput)(nil)).Elem(), GetLanIpFailoverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationCpuArchitectureInput)(nil)).Elem(), GetLocationCpuArchitectureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationCpuArchitectureArrayInput)(nil)).Elem(), GetLocationCpuArchitectureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoggingPipelineLogInput)(nil)).Elem(), GetLoggingPipelineLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoggingPipelineLogArrayInput)(nil)).Elem(), GetLoggingPipelineLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoggingPipelineLogDestinationInput)(nil)).Elem(), GetLoggingPipelineLogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoggingPipelineLogDestinationArrayInput)(nil)).Elem(), GetLoggingPipelineLogDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMariadbBackupsBackupInput)(nil)).Elem(), GetMariadbBackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMariadbBackupsBackupArrayInput)(nil)).Elem(), GetMariadbBackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMariadbBackupsBackupBaseBackupInput)(nil)).Elem(), GetMariadbBackupsBackupBaseBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMariadbBackupsBackupBaseBackupArrayInput)(nil)).Elem(), GetMariadbBackupsBackupBaseBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMariadbClusterConnectionInput)(nil)).Elem(), GetMariadbClusterConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMariadbClusterConnectionArrayInput)(nil)).Elem(), GetMariadbClusterConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMariadbClusterMaintenanceWindowInput)(nil)).Elem(), GetMariadbClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMariadbClusterMaintenanceWindowArrayInput)(nil)).Elem(), GetMariadbClusterMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMongoClusterBackupInput)(nil)).Elem(), GetMongoClusterBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMongoClusterBackupArrayInput)(nil)).Elem(), GetMongoClusterBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMongoClusterBiConnectorInput)(nil)).Elem(), GetMongoClusterBiConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMongoClusterBiConnectorArrayInput)(nil)).Elem(), GetMongoClusterBiConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMongoClusterConnectionInput)(nil)).Elem(), GetMongoClusterConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMongoClusterConnectionArrayInput)(nil)).Elem(), GetMongoClusterConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMongoClusterMaintenanceWindowInput)(nil)).Elem(), GetMongoClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMongoClusterMaintenanceWindowArrayInput)(nil)).Elem(), GetMongoClusterMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMongoUserRoleInput)(nil)).Elem(), GetMongoUserRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMongoUserRoleArrayInput)(nil)).Elem(), GetMongoUserRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatgatewayLanInput)(nil)).Elem(), GetNatgatewayLanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatgatewayLanArrayInput)(nil)).Elem(), GetNatgatewayLanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatgatewayRuleTargetPortRangeInput)(nil)).Elem(), GetNatgatewayRuleTargetPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatgatewayRuleTargetPortRangeArrayInput)(nil)).Elem(), GetNatgatewayRuleTargetPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkloadbalancerFlowlogInput)(nil)).Elem(), GetNetworkloadbalancerFlowlogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkloadbalancerFlowlogArrayInput)(nil)).Elem(), GetNetworkloadbalancerFlowlogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkloadbalancerForwardingruleHealthCheckInput)(nil)).Elem(), GetNetworkloadbalancerForwardingruleHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkloadbalancerForwardingruleHealthCheckArrayInput)(nil)).Elem(), GetNetworkloadbalancerForwardingruleHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkloadbalancerForwardingruleTargetInput)(nil)).Elem(), GetNetworkloadbalancerForwardingruleTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkloadbalancerForwardingruleTargetArrayInput)(nil)).Elem(), GetNetworkloadbalancerForwardingruleTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkloadbalancerForwardingruleTargetHealthCheckInput)(nil)).Elem(), GetNetworkloadbalancerForwardingruleTargetHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayInput)(nil)).Elem(), GetNetworkloadbalancerForwardingruleTargetHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNfsClusterConnectionInput)(nil)).Elem(), GetNfsClusterConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNfsClusterConnectionArrayInput)(nil)).Elem(), GetNfsClusterConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNfsClusterNfInput)(nil)).Elem(), GetNfsClusterNfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNfsClusterNfArrayInput)(nil)).Elem(), GetNfsClusterNfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNfsShareClientGroupInput)(nil)).Elem(), GetNfsShareClientGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNfsShareClientGroupArrayInput)(nil)).Elem(), GetNfsShareClientGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNfsShareClientGroupNfInput)(nil)).Elem(), GetNfsShareClientGroupNfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNfsShareClientGroupNfArrayInput)(nil)).Elem(), GetNfsShareClientGroupNfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicFlowlogInput)(nil)).Elem(), GetNicFlowlogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNicFlowlogArrayInput)(nil)).Elem(), GetNicFlowlogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgBackupsClusterBackupInput)(nil)).Elem(), GetPgBackupsClusterBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgBackupsClusterBackupArrayInput)(nil)).Elem(), GetPgBackupsClusterBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgBackupsClusterBackupMetadataInput)(nil)).Elem(), GetPgBackupsClusterBackupMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgBackupsClusterBackupMetadataArrayInput)(nil)).Elem(), GetPgBackupsClusterBackupMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgClusterConnectionInput)(nil)).Elem(), GetPgClusterConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgClusterConnectionArrayInput)(nil)).Elem(), GetPgClusterConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgClusterConnectionPoolerInput)(nil)).Elem(), GetPgClusterConnectionPoolerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgClusterConnectionPoolerArrayInput)(nil)).Elem(), GetPgClusterConnectionPoolerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgClusterFromBackupInput)(nil)).Elem(), GetPgClusterFromBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgClusterFromBackupArrayInput)(nil)).Elem(), GetPgClusterFromBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgClusterMaintenanceWindowInput)(nil)).Elem(), GetPgClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgClusterMaintenanceWindowArrayInput)(nil)).Elem(), GetPgClusterMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgDatabasesDatabaseInput)(nil)).Elem(), GetPgDatabasesDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgDatabasesDatabaseArrayInput)(nil)).Elem(), GetPgDatabasesDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateCrossconnectConnectableDatacenterInput)(nil)).Elem(), GetPrivateCrossconnectConnectableDatacenterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateCrossconnectConnectableDatacenterArrayInput)(nil)).Elem(), GetPrivateCrossconnectConnectableDatacenterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateCrossconnectPeerInput)(nil)).Elem(), GetPrivateCrossconnectPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateCrossconnectPeerArrayInput)(nil)).Elem(), GetPrivateCrossconnectPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerCdromInput)(nil)).Elem(), GetServerCdromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerCdromArrayInput)(nil)).Elem(), GetServerCdromArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerLabelInput)(nil)).Elem(), GetServerLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerLabelArrayInput)(nil)).Elem(), GetServerLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNicInput)(nil)).Elem(), GetServerNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNicArrayInput)(nil)).Elem(), GetServerNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNicFirewallRuleInput)(nil)).Elem(), GetServerNicFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNicFirewallRuleArrayInput)(nil)).Elem(), GetServerNicFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerVolumeInput)(nil)).Elem(), GetServerVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerVolumeArrayInput)(nil)).Elem(), GetServerVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersFilterInput)(nil)).Elem(), GetServersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersFilterArrayInput)(nil)).Elem(), GetServersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerInput)(nil)).Elem(), GetServersServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerArrayInput)(nil)).Elem(), GetServersServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerCdromInput)(nil)).Elem(), GetServersServerCdromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerCdromArrayInput)(nil)).Elem(), GetServersServerCdromArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerLabelInput)(nil)).Elem(), GetServersServerLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerLabelArrayInput)(nil)).Elem(), GetServersServerLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerNicInput)(nil)).Elem(), GetServersServerNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerNicArrayInput)(nil)).Elem(), GetServersServerNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerNicFirewallRuleInput)(nil)).Elem(), GetServersServerNicFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerNicFirewallRuleArrayInput)(nil)).Elem(), GetServersServerNicFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerVolumeInput)(nil)).Elem(), GetServersServerVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerVolumeArrayInput)(nil)).Elem(), GetServersServerVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTargetGroupHealthCheckInput)(nil)).Elem(), GetTargetGroupHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTargetGroupHealthCheckArrayInput)(nil)).Elem(), GetTargetGroupHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTargetGroupHttpHealthCheckInput)(nil)).Elem(), GetTargetGroupHttpHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTargetGroupHttpHealthCheckArrayInput)(nil)).Elem(), GetTargetGroupHttpHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTargetGroupTargetInput)(nil)).Elem(), GetTargetGroupTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTargetGroupTargetArrayInput)(nil)).Elem(), GetTargetGroupTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupInput)(nil)).Elem(), GetUserGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserGroupArrayInput)(nil)).Elem(), GetUserGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVcpuServerCdromInput)(nil)).Elem(), GetVcpuServerCdromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVcpuServerCdromArrayInput)(nil)).Elem(), GetVcpuServerCdromArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVcpuServerLabelInput)(nil)).Elem(), GetVcpuServerLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVcpuServerLabelArrayInput)(nil)).Elem(), GetVcpuServerLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVcpuServerNicInput)(nil)).Elem(), GetVcpuServerNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVcpuServerNicArrayInput)(nil)).Elem(), GetVcpuServerNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVcpuServerNicFirewallRuleInput)(nil)).Elem(), GetVcpuServerNicFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVcpuServerNicFirewallRuleArrayInput)(nil)).Elem(), GetVcpuServerNicFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVcpuServerVolumeInput)(nil)).Elem(), GetVcpuServerVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVcpuServerVolumeArrayInput)(nil)).Elem(), GetVcpuServerVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnIpsecGatewayConnectionInput)(nil)).Elem(), GetVpnIpsecGatewayConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnIpsecGatewayConnectionArrayInput)(nil)).Elem(), GetVpnIpsecGatewayConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnIpsecTunnelAuthInput)(nil)).Elem(), GetVpnIpsecTunnelAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnIpsecTunnelAuthArrayInput)(nil)).Elem(), GetVpnIpsecTunnelAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnIpsecTunnelEspInput)(nil)).Elem(), GetVpnIpsecTunnelEspArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnIpsecTunnelEspArrayInput)(nil)).Elem(), GetVpnIpsecTunnelEspArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnIpsecTunnelIkeInput)(nil)).Elem(), GetVpnIpsecTunnelIkeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnIpsecTunnelIkeArrayInput)(nil)).Elem(), GetVpnIpsecTunnelIkeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnWireguardGatewayConnectionInput)(nil)).Elem(), GetVpnWireguardGatewayConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnWireguardGatewayConnectionArrayInput)(nil)).Elem(), GetVpnWireguardGatewayConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnWireguardPeerEndpointInput)(nil)).Elem(), GetVpnWireguardPeerEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnWireguardPeerEndpointArrayInput)(nil)).Elem(), GetVpnWireguardPeerEndpointArray{})
	pulumi.RegisterOutputType(ApigatewayCustomDomainOutput{})
	pulumi.RegisterOutputType(ApigatewayCustomDomainArrayOutput{})
	pulumi.RegisterOutputType(ApigatewayRouteUpstreamOutput{})
	pulumi.RegisterOutputType(ApigatewayRouteUpstreamArrayOutput{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerFlowlogOutput{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerFlowlogPtrOutput{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerForwardingruleHttpRuleOutput{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(AutoCertificateProviderExternalAccountBindingOutput{})
	pulumi.RegisterOutputType(AutoCertificateProviderExternalAccountBindingPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupPolicyOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupPolicyPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupPolicyScaleInActionOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupPolicyScaleInActionPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupPolicyScaleOutActionOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupPolicyScaleOutActionPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupReplicaConfigurationOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupReplicaConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupReplicaConfigurationNicOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupReplicaConfigurationNicArrayOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupReplicaConfigurationNicFirewallRuleOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupReplicaConfigurationNicFlowLogOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupReplicaConfigurationNicTargetGroupOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupReplicaConfigurationNicTargetGroupPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupReplicaConfigurationVolumeOutput{})
	pulumi.RegisterOutputType(AutoscalingGroupReplicaConfigurationVolumeArrayOutput{})
	pulumi.RegisterOutputType(KafkaClusterConnectionsOutput{})
	pulumi.RegisterOutputType(KafkaClusterConnectionsPtrOutput{})
	pulumi.RegisterOutputType(LoggingPipelineLogOutput{})
	pulumi.RegisterOutputType(LoggingPipelineLogArrayOutput{})
	pulumi.RegisterOutputType(LoggingPipelineLogDestinationOutput{})
	pulumi.RegisterOutputType(LoggingPipelineLogDestinationArrayOutput{})
	pulumi.RegisterOutputType(NatgatewayLanOutput{})
	pulumi.RegisterOutputType(NatgatewayLanArrayOutput{})
	pulumi.RegisterOutputType(NatgatewayRuleTargetPortRangeOutput{})
	pulumi.RegisterOutputType(NatgatewayRuleTargetPortRangePtrOutput{})
	pulumi.RegisterOutputType(NetworkloadbalancerFlowlogOutput{})
	pulumi.RegisterOutputType(NetworkloadbalancerFlowlogPtrOutput{})
	pulumi.RegisterOutputType(NetworkloadbalancerForwardingruleHealthCheckOutput{})
	pulumi.RegisterOutputType(NetworkloadbalancerForwardingruleHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(NetworkloadbalancerForwardingruleTargetOutput{})
	pulumi.RegisterOutputType(NetworkloadbalancerForwardingruleTargetArrayOutput{})
	pulumi.RegisterOutputType(NetworkloadbalancerForwardingruleTargetHealthCheckOutput{})
	pulumi.RegisterOutputType(NetworkloadbalancerForwardingruleTargetHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(TargetGroupHealthCheckOutput{})
	pulumi.RegisterOutputType(TargetGroupHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(TargetGroupHttpHealthCheckOutput{})
	pulumi.RegisterOutputType(TargetGroupHttpHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(TargetGroupTargetOutput{})
	pulumi.RegisterOutputType(TargetGroupTargetArrayOutput{})
	pulumi.RegisterOutputType(GetApigatewayCustomDomainOutput{})
	pulumi.RegisterOutputType(GetApigatewayCustomDomainArrayOutput{})
	pulumi.RegisterOutputType(GetApigatewayRouteUpstreamOutput{})
	pulumi.RegisterOutputType(GetApigatewayRouteUpstreamArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadbalancerFlowlogOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadbalancerFlowlogArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadbalancerForwardingruleHttpRuleOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadbalancerForwardingruleHttpRuleArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadbalancerForwardingruleHttpRuleConditionOutput{})
	pulumi.RegisterOutputType(GetApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(GetAutoCertificateProviderExternalAccountBindingOutput{})
	pulumi.RegisterOutputType(GetAutoCertificateProviderExternalAccountBindingArrayOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupPolicyOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupPolicyScaleInActionOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupPolicyScaleInActionArrayOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupPolicyScaleOutActionOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupPolicyScaleOutActionArrayOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupReplicaConfigurationOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupReplicaConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupReplicaConfigurationNicOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupReplicaConfigurationNicArrayOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupReplicaConfigurationNicFirewallRuleOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupReplicaConfigurationNicFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupReplicaConfigurationNicFlowLogOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupReplicaConfigurationNicFlowLogArrayOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupReplicaConfigurationNicTargetGroupOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupReplicaConfigurationNicTargetGroupArrayOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupReplicaConfigurationVolumeOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupReplicaConfigurationVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupServersServerOutput{})
	pulumi.RegisterOutputType(GetAutoscalingGroupServersServerArrayOutput{})
	pulumi.RegisterOutputType(GetCdnDistributionRoutingRuleOutput{})
	pulumi.RegisterOutputType(GetCdnDistributionRoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(GetCdnDistributionRoutingRuleUpstreamOutput{})
	pulumi.RegisterOutputType(GetCdnDistributionRoutingRuleUpstreamArrayOutput{})
	pulumi.RegisterOutputType(GetCdnDistributionRoutingRuleUpstreamGeoRestrictionOutput{})
	pulumi.RegisterOutputType(GetCdnDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryFeatureOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryFeatureArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryGarbageCollectionScheduleOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryGarbageCollectionScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryStorageUsageOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryStorageUsageArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryTokenCredentialOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryTokenCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryTokenScopeOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryTokenScopeArrayOutput{})
	pulumi.RegisterOutputType(GetCubeServerCdromOutput{})
	pulumi.RegisterOutputType(GetCubeServerCdromArrayOutput{})
	pulumi.RegisterOutputType(GetCubeServerNicOutput{})
	pulumi.RegisterOutputType(GetCubeServerNicArrayOutput{})
	pulumi.RegisterOutputType(GetCubeServerNicFirewallRuleOutput{})
	pulumi.RegisterOutputType(GetCubeServerNicFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(GetCubeServerVolumeOutput{})
	pulumi.RegisterOutputType(GetCubeServerVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetDatacenterCpuArchitectureOutput{})
	pulumi.RegisterOutputType(GetDatacenterCpuArchitectureArrayOutput{})
	pulumi.RegisterOutputType(GetDataplatformClusterConfigOutput{})
	pulumi.RegisterOutputType(GetDataplatformClusterConfigArrayOutput{})
	pulumi.RegisterOutputType(GetDataplatformClusterConfigClusterOutput{})
	pulumi.RegisterOutputType(GetDataplatformClusterConfigClusterArrayOutput{})
	pulumi.RegisterOutputType(GetDataplatformClusterConfigContextOutput{})
	pulumi.RegisterOutputType(GetDataplatformClusterConfigContextArrayOutput{})
	pulumi.RegisterOutputType(GetDataplatformClusterConfigUserOutput{})
	pulumi.RegisterOutputType(GetDataplatformClusterConfigUserArrayOutput{})
	pulumi.RegisterOutputType(GetDataplatformClusterLanOutput{})
	pulumi.RegisterOutputType(GetDataplatformClusterLanArrayOutput{})
	pulumi.RegisterOutputType(GetDataplatformClusterLanRouteOutput{})
	pulumi.RegisterOutputType(GetDataplatformClusterLanRouteArrayOutput{})
	pulumi.RegisterOutputType(GetDataplatformClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetDataplatformClusterMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetDataplatformNodePoolMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetDataplatformNodePoolMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetDataplatformNodePoolsNodePoolOutput{})
	pulumi.RegisterOutputType(GetDataplatformNodePoolsNodePoolArrayOutput{})
	pulumi.RegisterOutputType(GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetGroupUserOutput{})
	pulumi.RegisterOutputType(GetGroupUserArrayOutput{})
	pulumi.RegisterOutputType(GetInmemorydbReplicasetConnectionOutput{})
	pulumi.RegisterOutputType(GetInmemorydbReplicasetConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetInmemorydbReplicasetCredentialOutput{})
	pulumi.RegisterOutputType(GetInmemorydbReplicasetCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetInmemorydbReplicasetMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetInmemorydbReplicasetMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetInmemorydbReplicasetResourceOutput{})
	pulumi.RegisterOutputType(GetInmemorydbReplicasetResourceArrayOutput{})
	pulumi.RegisterOutputType(GetInmemorydbSnapshotMetadataOutput{})
	pulumi.RegisterOutputType(GetInmemorydbSnapshotMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetIpblockIpConsumerOutput{})
	pulumi.RegisterOutputType(GetIpblockIpConsumerArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClusterConfigOutput{})
	pulumi.RegisterOutputType(GetK8sClusterConfigArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClusterConfigClusterOutput{})
	pulumi.RegisterOutputType(GetK8sClusterConfigClusterArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClusterConfigContextOutput{})
	pulumi.RegisterOutputType(GetK8sClusterConfigContextArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClusterConfigUserOutput{})
	pulumi.RegisterOutputType(GetK8sClusterConfigUserArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetK8sClusterMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClusterS3BucketOutput{})
	pulumi.RegisterOutputType(GetK8sClusterS3BucketArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigClusterOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigClusterArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigContextOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigContextArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigUserOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigUserArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterS3BucketOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterS3BucketArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersFilterOutput{})
	pulumi.RegisterOutputType(GetK8sClustersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetK8sNodePoolAutoScalingOutput{})
	pulumi.RegisterOutputType(GetK8sNodePoolAutoScalingArrayOutput{})
	pulumi.RegisterOutputType(GetK8sNodePoolLanOutput{})
	pulumi.RegisterOutputType(GetK8sNodePoolLanArrayOutput{})
	pulumi.RegisterOutputType(GetK8sNodePoolLanRouteOutput{})
	pulumi.RegisterOutputType(GetK8sNodePoolLanRouteArrayOutput{})
	pulumi.RegisterOutputType(GetK8sNodePoolMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetK8sNodePoolMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetK8sNodePoolNodesNodeOutput{})
	pulumi.RegisterOutputType(GetK8sNodePoolNodesNodeArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterConnectionOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetLanIpFailoverOutput{})
	pulumi.RegisterOutputType(GetLanIpFailoverArrayOutput{})
	pulumi.RegisterOutputType(GetLocationCpuArchitectureOutput{})
	pulumi.RegisterOutputType(GetLocationCpuArchitectureArrayOutput{})
	pulumi.RegisterOutputType(GetLoggingPipelineLogOutput{})
	pulumi.RegisterOutputType(GetLoggingPipelineLogArrayOutput{})
	pulumi.RegisterOutputType(GetLoggingPipelineLogDestinationOutput{})
	pulumi.RegisterOutputType(GetLoggingPipelineLogDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetMariadbBackupsBackupOutput{})
	pulumi.RegisterOutputType(GetMariadbBackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(GetMariadbBackupsBackupBaseBackupOutput{})
	pulumi.RegisterOutputType(GetMariadbBackupsBackupBaseBackupArrayOutput{})
	pulumi.RegisterOutputType(GetMariadbClusterConnectionOutput{})
	pulumi.RegisterOutputType(GetMariadbClusterConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetMariadbClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetMariadbClusterMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetMongoClusterBackupOutput{})
	pulumi.RegisterOutputType(GetMongoClusterBackupArrayOutput{})
	pulumi.RegisterOutputType(GetMongoClusterBiConnectorOutput{})
	pulumi.RegisterOutputType(GetMongoClusterBiConnectorArrayOutput{})
	pulumi.RegisterOutputType(GetMongoClusterConnectionOutput{})
	pulumi.RegisterOutputType(GetMongoClusterConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetMongoClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetMongoClusterMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetMongoUserRoleOutput{})
	pulumi.RegisterOutputType(GetMongoUserRoleArrayOutput{})
	pulumi.RegisterOutputType(GetNatgatewayLanOutput{})
	pulumi.RegisterOutputType(GetNatgatewayLanArrayOutput{})
	pulumi.RegisterOutputType(GetNatgatewayRuleTargetPortRangeOutput{})
	pulumi.RegisterOutputType(GetNatgatewayRuleTargetPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkloadbalancerFlowlogOutput{})
	pulumi.RegisterOutputType(GetNetworkloadbalancerFlowlogArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkloadbalancerForwardingruleHealthCheckOutput{})
	pulumi.RegisterOutputType(GetNetworkloadbalancerForwardingruleHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkloadbalancerForwardingruleTargetOutput{})
	pulumi.RegisterOutputType(GetNetworkloadbalancerForwardingruleTargetArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkloadbalancerForwardingruleTargetHealthCheckOutput{})
	pulumi.RegisterOutputType(GetNetworkloadbalancerForwardingruleTargetHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetNfsClusterConnectionOutput{})
	pulumi.RegisterOutputType(GetNfsClusterConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetNfsClusterNfOutput{})
	pulumi.RegisterOutputType(GetNfsClusterNfArrayOutput{})
	pulumi.RegisterOutputType(GetNfsShareClientGroupOutput{})
	pulumi.RegisterOutputType(GetNfsShareClientGroupArrayOutput{})
	pulumi.RegisterOutputType(GetNfsShareClientGroupNfOutput{})
	pulumi.RegisterOutputType(GetNfsShareClientGroupNfArrayOutput{})
	pulumi.RegisterOutputType(GetNicFlowlogOutput{})
	pulumi.RegisterOutputType(GetNicFlowlogArrayOutput{})
	pulumi.RegisterOutputType(GetPgBackupsClusterBackupOutput{})
	pulumi.RegisterOutputType(GetPgBackupsClusterBackupArrayOutput{})
	pulumi.RegisterOutputType(GetPgBackupsClusterBackupMetadataOutput{})
	pulumi.RegisterOutputType(GetPgBackupsClusterBackupMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetPgClusterConnectionOutput{})
	pulumi.RegisterOutputType(GetPgClusterConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetPgClusterConnectionPoolerOutput{})
	pulumi.RegisterOutputType(GetPgClusterConnectionPoolerArrayOutput{})
	pulumi.RegisterOutputType(GetPgClusterFromBackupOutput{})
	pulumi.RegisterOutputType(GetPgClusterFromBackupArrayOutput{})
	pulumi.RegisterOutputType(GetPgClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetPgClusterMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetPgDatabasesDatabaseOutput{})
	pulumi.RegisterOutputType(GetPgDatabasesDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateCrossconnectConnectableDatacenterOutput{})
	pulumi.RegisterOutputType(GetPrivateCrossconnectConnectableDatacenterArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateCrossconnectPeerOutput{})
	pulumi.RegisterOutputType(GetPrivateCrossconnectPeerArrayOutput{})
	pulumi.RegisterOutputType(GetServerCdromOutput{})
	pulumi.RegisterOutputType(GetServerCdromArrayOutput{})
	pulumi.RegisterOutputType(GetServerLabelOutput{})
	pulumi.RegisterOutputType(GetServerLabelArrayOutput{})
	pulumi.RegisterOutputType(GetServerNicOutput{})
	pulumi.RegisterOutputType(GetServerNicArrayOutput{})
	pulumi.RegisterOutputType(GetServerNicFirewallRuleOutput{})
	pulumi.RegisterOutputType(GetServerNicFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(GetServerVolumeOutput{})
	pulumi.RegisterOutputType(GetServerVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetServersFilterOutput{})
	pulumi.RegisterOutputType(GetServersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetServersServerOutput{})
	pulumi.RegisterOutputType(GetServersServerArrayOutput{})
	pulumi.RegisterOutputType(GetServersServerCdromOutput{})
	pulumi.RegisterOutputType(GetServersServerCdromArrayOutput{})
	pulumi.RegisterOutputType(GetServersServerLabelOutput{})
	pulumi.RegisterOutputType(GetServersServerLabelArrayOutput{})
	pulumi.RegisterOutputType(GetServersServerNicOutput{})
	pulumi.RegisterOutputType(GetServersServerNicArrayOutput{})
	pulumi.RegisterOutputType(GetServersServerNicFirewallRuleOutput{})
	pulumi.RegisterOutputType(GetServersServerNicFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(GetServersServerVolumeOutput{})
	pulumi.RegisterOutputType(GetServersServerVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetTargetGroupHealthCheckOutput{})
	pulumi.RegisterOutputType(GetTargetGroupHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetTargetGroupHttpHealthCheckOutput{})
	pulumi.RegisterOutputType(GetTargetGroupHttpHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetTargetGroupTargetOutput{})
	pulumi.RegisterOutputType(GetTargetGroupTargetArrayOutput{})
	pulumi.RegisterOutputType(GetUserGroupOutput{})
	pulumi.RegisterOutputType(GetUserGroupArrayOutput{})
	pulumi.RegisterOutputType(GetVcpuServerCdromOutput{})
	pulumi.RegisterOutputType(GetVcpuServerCdromArrayOutput{})
	pulumi.RegisterOutputType(GetVcpuServerLabelOutput{})
	pulumi.RegisterOutputType(GetVcpuServerLabelArrayOutput{})
	pulumi.RegisterOutputType(GetVcpuServerNicOutput{})
	pulumi.RegisterOutputType(GetVcpuServerNicArrayOutput{})
	pulumi.RegisterOutputType(GetVcpuServerNicFirewallRuleOutput{})
	pulumi.RegisterOutputType(GetVcpuServerNicFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(GetVcpuServerVolumeOutput{})
	pulumi.RegisterOutputType(GetVcpuServerVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetVpnIpsecGatewayConnectionOutput{})
	pulumi.RegisterOutputType(GetVpnIpsecGatewayConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetVpnIpsecTunnelAuthOutput{})
	pulumi.RegisterOutputType(GetVpnIpsecTunnelAuthArrayOutput{})
	pulumi.RegisterOutputType(GetVpnIpsecTunnelEspOutput{})
	pulumi.RegisterOutputType(GetVpnIpsecTunnelEspArrayOutput{})
	pulumi.RegisterOutputType(GetVpnIpsecTunnelIkeOutput{})
	pulumi.RegisterOutputType(GetVpnIpsecTunnelIkeArrayOutput{})
	pulumi.RegisterOutputType(GetVpnWireguardGatewayConnectionOutput{})
	pulumi.RegisterOutputType(GetVpnWireguardGatewayConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetVpnWireguardPeerEndpointOutput{})
	pulumi.RegisterOutputType(GetVpnWireguardPeerEndpointArrayOutput{})
}
