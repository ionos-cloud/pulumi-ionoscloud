// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ionoscloud

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type TargetGroupHealthCheck struct {
	// [int] The interval in milliseconds between consecutive health checks; default is 2000.
	CheckInterval *int `pulumi:"checkInterval"`
	// [int] The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.
	CheckTimeout *int `pulumi:"checkTimeout"`
	// [int] The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
	Retries *int `pulumi:"retries"`
}

// TargetGroupHealthCheckInput is an input type that accepts TargetGroupHealthCheckArgs and TargetGroupHealthCheckOutput values.
// You can construct a concrete instance of `TargetGroupHealthCheckInput` via:
//
//	TargetGroupHealthCheckArgs{...}
type TargetGroupHealthCheckInput interface {
	pulumi.Input

	ToTargetGroupHealthCheckOutput() TargetGroupHealthCheckOutput
	ToTargetGroupHealthCheckOutputWithContext(context.Context) TargetGroupHealthCheckOutput
}

type TargetGroupHealthCheckArgs struct {
	// [int] The interval in milliseconds between consecutive health checks; default is 2000.
	CheckInterval pulumi.IntPtrInput `pulumi:"checkInterval"`
	// [int] The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.
	CheckTimeout pulumi.IntPtrInput `pulumi:"checkTimeout"`
	// [int] The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
	Retries pulumi.IntPtrInput `pulumi:"retries"`
}

func (TargetGroupHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupHealthCheck)(nil)).Elem()
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckOutput() TargetGroupHealthCheckOutput {
	return i.ToTargetGroupHealthCheckOutputWithContext(context.Background())
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckOutputWithContext(ctx context.Context) TargetGroupHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHealthCheckOutput)
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return i.ToTargetGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHealthCheckOutput).ToTargetGroupHealthCheckPtrOutputWithContext(ctx)
}

// TargetGroupHealthCheckPtrInput is an input type that accepts TargetGroupHealthCheckArgs, TargetGroupHealthCheckPtr and TargetGroupHealthCheckPtrOutput values.
// You can construct a concrete instance of `TargetGroupHealthCheckPtrInput` via:
//
//	        TargetGroupHealthCheckArgs{...}
//
//	or:
//
//	        nil
type TargetGroupHealthCheckPtrInput interface {
	pulumi.Input

	ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput
	ToTargetGroupHealthCheckPtrOutputWithContext(context.Context) TargetGroupHealthCheckPtrOutput
}

type targetGroupHealthCheckPtrType TargetGroupHealthCheckArgs

func TargetGroupHealthCheckPtr(v *TargetGroupHealthCheckArgs) TargetGroupHealthCheckPtrInput {
	return (*targetGroupHealthCheckPtrType)(v)
}

func (*targetGroupHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupHealthCheck)(nil)).Elem()
}

func (i *targetGroupHealthCheckPtrType) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return i.ToTargetGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (i *targetGroupHealthCheckPtrType) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHealthCheckPtrOutput)
}

type TargetGroupHealthCheckOutput struct{ *pulumi.OutputState }

func (TargetGroupHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupHealthCheck)(nil)).Elem()
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckOutput() TargetGroupHealthCheckOutput {
	return o
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckOutputWithContext(ctx context.Context) TargetGroupHealthCheckOutput {
	return o
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return o.ToTargetGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetGroupHealthCheck) *TargetGroupHealthCheck {
		return &v
	}).(TargetGroupHealthCheckPtrOutput)
}

// [int] The interval in milliseconds between consecutive health checks; default is 2000.
func (o TargetGroupHealthCheckOutput) CheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.CheckInterval }).(pulumi.IntPtrOutput)
}

// [int] The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.
func (o TargetGroupHealthCheckOutput) CheckTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.CheckTimeout }).(pulumi.IntPtrOutput)
}

// [int] The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
func (o TargetGroupHealthCheckOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.Retries }).(pulumi.IntPtrOutput)
}

type TargetGroupHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (TargetGroupHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupHealthCheck)(nil)).Elem()
}

func (o TargetGroupHealthCheckPtrOutput) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return o
}

func (o TargetGroupHealthCheckPtrOutput) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return o
}

func (o TargetGroupHealthCheckPtrOutput) Elem() TargetGroupHealthCheckOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) TargetGroupHealthCheck {
		if v != nil {
			return *v
		}
		var ret TargetGroupHealthCheck
		return ret
	}).(TargetGroupHealthCheckOutput)
}

// [int] The interval in milliseconds between consecutive health checks; default is 2000.
func (o TargetGroupHealthCheckPtrOutput) CheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.CheckInterval
	}).(pulumi.IntPtrOutput)
}

// [int] The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.
func (o TargetGroupHealthCheckPtrOutput) CheckTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.CheckTimeout
	}).(pulumi.IntPtrOutput)
}

// [int] The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
func (o TargetGroupHealthCheckPtrOutput) Retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Retries
	}).(pulumi.IntPtrOutput)
}

type TargetGroupHttpHealthCheck struct {
	// [string]
	MatchType string `pulumi:"matchType"`
	// [string] The method for the HTTP health check.
	Method *string `pulumi:"method"`
	// [bool]
	Negate *bool `pulumi:"negate"`
	// [string] The path (destination URL) for the HTTP health check request; the default is /.
	Path *string `pulumi:"path"`
	// [bool]
	Regex *bool `pulumi:"regex"`
	// [string] The response returned by the request, depending on the match type.
	Response string `pulumi:"response"`
}

// TargetGroupHttpHealthCheckInput is an input type that accepts TargetGroupHttpHealthCheckArgs and TargetGroupHttpHealthCheckOutput values.
// You can construct a concrete instance of `TargetGroupHttpHealthCheckInput` via:
//
//	TargetGroupHttpHealthCheckArgs{...}
type TargetGroupHttpHealthCheckInput interface {
	pulumi.Input

	ToTargetGroupHttpHealthCheckOutput() TargetGroupHttpHealthCheckOutput
	ToTargetGroupHttpHealthCheckOutputWithContext(context.Context) TargetGroupHttpHealthCheckOutput
}

type TargetGroupHttpHealthCheckArgs struct {
	// [string]
	MatchType pulumi.StringInput `pulumi:"matchType"`
	// [string] The method for the HTTP health check.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// [bool]
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// [string] The path (destination URL) for the HTTP health check request; the default is /.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// [bool]
	Regex pulumi.BoolPtrInput `pulumi:"regex"`
	// [string] The response returned by the request, depending on the match type.
	Response pulumi.StringInput `pulumi:"response"`
}

func (TargetGroupHttpHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupHttpHealthCheck)(nil)).Elem()
}

func (i TargetGroupHttpHealthCheckArgs) ToTargetGroupHttpHealthCheckOutput() TargetGroupHttpHealthCheckOutput {
	return i.ToTargetGroupHttpHealthCheckOutputWithContext(context.Background())
}

func (i TargetGroupHttpHealthCheckArgs) ToTargetGroupHttpHealthCheckOutputWithContext(ctx context.Context) TargetGroupHttpHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHttpHealthCheckOutput)
}

func (i TargetGroupHttpHealthCheckArgs) ToTargetGroupHttpHealthCheckPtrOutput() TargetGroupHttpHealthCheckPtrOutput {
	return i.ToTargetGroupHttpHealthCheckPtrOutputWithContext(context.Background())
}

func (i TargetGroupHttpHealthCheckArgs) ToTargetGroupHttpHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHttpHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHttpHealthCheckOutput).ToTargetGroupHttpHealthCheckPtrOutputWithContext(ctx)
}

// TargetGroupHttpHealthCheckPtrInput is an input type that accepts TargetGroupHttpHealthCheckArgs, TargetGroupHttpHealthCheckPtr and TargetGroupHttpHealthCheckPtrOutput values.
// You can construct a concrete instance of `TargetGroupHttpHealthCheckPtrInput` via:
//
//	        TargetGroupHttpHealthCheckArgs{...}
//
//	or:
//
//	        nil
type TargetGroupHttpHealthCheckPtrInput interface {
	pulumi.Input

	ToTargetGroupHttpHealthCheckPtrOutput() TargetGroupHttpHealthCheckPtrOutput
	ToTargetGroupHttpHealthCheckPtrOutputWithContext(context.Context) TargetGroupHttpHealthCheckPtrOutput
}

type targetGroupHttpHealthCheckPtrType TargetGroupHttpHealthCheckArgs

func TargetGroupHttpHealthCheckPtr(v *TargetGroupHttpHealthCheckArgs) TargetGroupHttpHealthCheckPtrInput {
	return (*targetGroupHttpHealthCheckPtrType)(v)
}

func (*targetGroupHttpHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupHttpHealthCheck)(nil)).Elem()
}

func (i *targetGroupHttpHealthCheckPtrType) ToTargetGroupHttpHealthCheckPtrOutput() TargetGroupHttpHealthCheckPtrOutput {
	return i.ToTargetGroupHttpHealthCheckPtrOutputWithContext(context.Background())
}

func (i *targetGroupHttpHealthCheckPtrType) ToTargetGroupHttpHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHttpHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHttpHealthCheckPtrOutput)
}

type TargetGroupHttpHealthCheckOutput struct{ *pulumi.OutputState }

func (TargetGroupHttpHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupHttpHealthCheck)(nil)).Elem()
}

func (o TargetGroupHttpHealthCheckOutput) ToTargetGroupHttpHealthCheckOutput() TargetGroupHttpHealthCheckOutput {
	return o
}

func (o TargetGroupHttpHealthCheckOutput) ToTargetGroupHttpHealthCheckOutputWithContext(ctx context.Context) TargetGroupHttpHealthCheckOutput {
	return o
}

func (o TargetGroupHttpHealthCheckOutput) ToTargetGroupHttpHealthCheckPtrOutput() TargetGroupHttpHealthCheckPtrOutput {
	return o.ToTargetGroupHttpHealthCheckPtrOutputWithContext(context.Background())
}

func (o TargetGroupHttpHealthCheckOutput) ToTargetGroupHttpHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHttpHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TargetGroupHttpHealthCheck) *TargetGroupHttpHealthCheck {
		return &v
	}).(TargetGroupHttpHealthCheckPtrOutput)
}

// [string]
func (o TargetGroupHttpHealthCheckOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupHttpHealthCheck) string { return v.MatchType }).(pulumi.StringOutput)
}

// [string] The method for the HTTP health check.
func (o TargetGroupHttpHealthCheckOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHttpHealthCheck) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// [bool]
func (o TargetGroupHttpHealthCheckOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupHttpHealthCheck) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// [string] The path (destination URL) for the HTTP health check request; the default is /.
func (o TargetGroupHttpHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHttpHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// [bool]
func (o TargetGroupHttpHealthCheckOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupHttpHealthCheck) *bool { return v.Regex }).(pulumi.BoolPtrOutput)
}

// [string] The response returned by the request, depending on the match type.
func (o TargetGroupHttpHealthCheckOutput) Response() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupHttpHealthCheck) string { return v.Response }).(pulumi.StringOutput)
}

type TargetGroupHttpHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (TargetGroupHttpHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupHttpHealthCheck)(nil)).Elem()
}

func (o TargetGroupHttpHealthCheckPtrOutput) ToTargetGroupHttpHealthCheckPtrOutput() TargetGroupHttpHealthCheckPtrOutput {
	return o
}

func (o TargetGroupHttpHealthCheckPtrOutput) ToTargetGroupHttpHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHttpHealthCheckPtrOutput {
	return o
}

func (o TargetGroupHttpHealthCheckPtrOutput) Elem() TargetGroupHttpHealthCheckOutput {
	return o.ApplyT(func(v *TargetGroupHttpHealthCheck) TargetGroupHttpHealthCheck {
		if v != nil {
			return *v
		}
		var ret TargetGroupHttpHealthCheck
		return ret
	}).(TargetGroupHttpHealthCheckOutput)
}

// [string]
func (o TargetGroupHttpHealthCheckPtrOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupHttpHealthCheck) *string {
		if v == nil {
			return nil
		}
		return &v.MatchType
	}).(pulumi.StringPtrOutput)
}

// [string] The method for the HTTP health check.
func (o TargetGroupHttpHealthCheckPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupHttpHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// [bool]
func (o TargetGroupHttpHealthCheckPtrOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TargetGroupHttpHealthCheck) *bool {
		if v == nil {
			return nil
		}
		return v.Negate
	}).(pulumi.BoolPtrOutput)
}

// [string] The path (destination URL) for the HTTP health check request; the default is /.
func (o TargetGroupHttpHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupHttpHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// [bool]
func (o TargetGroupHttpHealthCheckPtrOutput) Regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TargetGroupHttpHealthCheck) *bool {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.BoolPtrOutput)
}

// [string] The response returned by the request, depending on the match type.
func (o TargetGroupHttpHealthCheckPtrOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TargetGroupHttpHealthCheck) *string {
		if v == nil {
			return nil
		}
		return &v.Response
	}).(pulumi.StringPtrOutput)
}

type TargetGroupTarget struct {
	// [bool] Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.
	HealthCheckEnabled *bool `pulumi:"healthCheckEnabled"`
	// [string] The IP of the balanced target VM.
	Ip string `pulumi:"ip"`
	// [bool] Maintenance mode prevents the target from receiving balanced traffic.
	MaintenanceEnabled *bool `pulumi:"maintenanceEnabled"`
	// [int] The port of the balanced target service; valid range is 1 to 65535.
	Port int `pulumi:"port"`
	// [string] The proxy protocol version. Accepted values are `none`, `v1`, `v2`, `v2ssl`. If unspecified, the default value of `none` is used.
	ProxyProtocol *string `pulumi:"proxyProtocol"`
	// [int] Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.
	Weight int `pulumi:"weight"`
}

// TargetGroupTargetInput is an input type that accepts TargetGroupTargetArgs and TargetGroupTargetOutput values.
// You can construct a concrete instance of `TargetGroupTargetInput` via:
//
//	TargetGroupTargetArgs{...}
type TargetGroupTargetInput interface {
	pulumi.Input

	ToTargetGroupTargetOutput() TargetGroupTargetOutput
	ToTargetGroupTargetOutputWithContext(context.Context) TargetGroupTargetOutput
}

type TargetGroupTargetArgs struct {
	// [bool] Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.
	HealthCheckEnabled pulumi.BoolPtrInput `pulumi:"healthCheckEnabled"`
	// [string] The IP of the balanced target VM.
	Ip pulumi.StringInput `pulumi:"ip"`
	// [bool] Maintenance mode prevents the target from receiving balanced traffic.
	MaintenanceEnabled pulumi.BoolPtrInput `pulumi:"maintenanceEnabled"`
	// [int] The port of the balanced target service; valid range is 1 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// [string] The proxy protocol version. Accepted values are `none`, `v1`, `v2`, `v2ssl`. If unspecified, the default value of `none` is used.
	ProxyProtocol pulumi.StringPtrInput `pulumi:"proxyProtocol"`
	// [int] Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (TargetGroupTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTarget)(nil)).Elem()
}

func (i TargetGroupTargetArgs) ToTargetGroupTargetOutput() TargetGroupTargetOutput {
	return i.ToTargetGroupTargetOutputWithContext(context.Background())
}

func (i TargetGroupTargetArgs) ToTargetGroupTargetOutputWithContext(ctx context.Context) TargetGroupTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupTargetOutput)
}

// TargetGroupTargetArrayInput is an input type that accepts TargetGroupTargetArray and TargetGroupTargetArrayOutput values.
// You can construct a concrete instance of `TargetGroupTargetArrayInput` via:
//
//	TargetGroupTargetArray{ TargetGroupTargetArgs{...} }
type TargetGroupTargetArrayInput interface {
	pulumi.Input

	ToTargetGroupTargetArrayOutput() TargetGroupTargetArrayOutput
	ToTargetGroupTargetArrayOutputWithContext(context.Context) TargetGroupTargetArrayOutput
}

type TargetGroupTargetArray []TargetGroupTargetInput

func (TargetGroupTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTarget)(nil)).Elem()
}

func (i TargetGroupTargetArray) ToTargetGroupTargetArrayOutput() TargetGroupTargetArrayOutput {
	return i.ToTargetGroupTargetArrayOutputWithContext(context.Background())
}

func (i TargetGroupTargetArray) ToTargetGroupTargetArrayOutputWithContext(ctx context.Context) TargetGroupTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupTargetArrayOutput)
}

type TargetGroupTargetOutput struct{ *pulumi.OutputState }

func (TargetGroupTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupTarget)(nil)).Elem()
}

func (o TargetGroupTargetOutput) ToTargetGroupTargetOutput() TargetGroupTargetOutput {
	return o
}

func (o TargetGroupTargetOutput) ToTargetGroupTargetOutputWithContext(ctx context.Context) TargetGroupTargetOutput {
	return o
}

// [bool] Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.
func (o TargetGroupTargetOutput) HealthCheckEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupTarget) *bool { return v.HealthCheckEnabled }).(pulumi.BoolPtrOutput)
}

// [string] The IP of the balanced target VM.
func (o TargetGroupTargetOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupTarget) string { return v.Ip }).(pulumi.StringOutput)
}

// [bool] Maintenance mode prevents the target from receiving balanced traffic.
func (o TargetGroupTargetOutput) MaintenanceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupTarget) *bool { return v.MaintenanceEnabled }).(pulumi.BoolPtrOutput)
}

// [int] The port of the balanced target service; valid range is 1 to 65535.
func (o TargetGroupTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v TargetGroupTarget) int { return v.Port }).(pulumi.IntOutput)
}

// [string] The proxy protocol version. Accepted values are `none`, `v1`, `v2`, `v2ssl`. If unspecified, the default value of `none` is used.
func (o TargetGroupTargetOutput) ProxyProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupTarget) *string { return v.ProxyProtocol }).(pulumi.StringPtrOutput)
}

// [int] Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.
func (o TargetGroupTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v TargetGroupTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type TargetGroupTargetArrayOutput struct{ *pulumi.OutputState }

func (TargetGroupTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetGroupTarget)(nil)).Elem()
}

func (o TargetGroupTargetArrayOutput) ToTargetGroupTargetArrayOutput() TargetGroupTargetArrayOutput {
	return o
}

func (o TargetGroupTargetArrayOutput) ToTargetGroupTargetArrayOutputWithContext(ctx context.Context) TargetGroupTargetArrayOutput {
	return o
}

func (o TargetGroupTargetArrayOutput) Index(i pulumi.IntInput) TargetGroupTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetGroupTarget {
		return vs[0].([]TargetGroupTarget)[vs[1].(int)]
	}).(TargetGroupTargetOutput)
}

type GetDataplatformNodePoolsNodePool struct {
	// Key-value pairs attached to node pool resource as kubernetes annotations
	Annotations map[string]string `pulumi:"annotations"`
	// The availability zone of the virtual datacenter region where the node pool resources should be provisioned.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The number of CPU cores per node.
	CoresCount int `pulumi:"coresCount"`
	// A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource.
	CpuFamily string `pulumi:"cpuFamily"`
	// The UUID of the virtual data center (VDC) in which the node pool is provisioned
	DatacenterId string `pulumi:"datacenterId"`
	Id           string `pulumi:"id"`
	// Key-value pairs attached to the node pool resource as kubernetes labels
	Labels map[string]string `pulumi:"labels"`
	// Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
	MaintenanceWindows []GetDataplatformNodePoolsNodePoolMaintenanceWindow `pulumi:"maintenanceWindows"`
	// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name string `pulumi:"name"`
	// The number of nodes that make up the node pool.
	NodeCount int `pulumi:"nodeCount"`
	// The RAM size for one node in MB. Must be set in multiples of 1024 MB, with a minimum size is of 2048 MB.
	RamSize int `pulumi:"ramSize"`
	// The size of the volume in GB. The size must be greater than 10GB.
	StorageSize int `pulumi:"storageSize"`
	// The type of hardware for the volume.
	StorageType string `pulumi:"storageType"`
	// The version of the Data Platform.
	Version string `pulumi:"version"`
}

// GetDataplatformNodePoolsNodePoolInput is an input type that accepts GetDataplatformNodePoolsNodePoolArgs and GetDataplatformNodePoolsNodePoolOutput values.
// You can construct a concrete instance of `GetDataplatformNodePoolsNodePoolInput` via:
//
//	GetDataplatformNodePoolsNodePoolArgs{...}
type GetDataplatformNodePoolsNodePoolInput interface {
	pulumi.Input

	ToGetDataplatformNodePoolsNodePoolOutput() GetDataplatformNodePoolsNodePoolOutput
	ToGetDataplatformNodePoolsNodePoolOutputWithContext(context.Context) GetDataplatformNodePoolsNodePoolOutput
}

type GetDataplatformNodePoolsNodePoolArgs struct {
	// Key-value pairs attached to node pool resource as kubernetes annotations
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	// The availability zone of the virtual datacenter region where the node pool resources should be provisioned.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// The number of CPU cores per node.
	CoresCount pulumi.IntInput `pulumi:"coresCount"`
	// A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource.
	CpuFamily pulumi.StringInput `pulumi:"cpuFamily"`
	// The UUID of the virtual data center (VDC) in which the node pool is provisioned
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	Id           pulumi.StringInput `pulumi:"id"`
	// Key-value pairs attached to the node pool resource as kubernetes labels
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
	MaintenanceWindows GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayInput `pulumi:"maintenanceWindows"`
	// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of nodes that make up the node pool.
	NodeCount pulumi.IntInput `pulumi:"nodeCount"`
	// The RAM size for one node in MB. Must be set in multiples of 1024 MB, with a minimum size is of 2048 MB.
	RamSize pulumi.IntInput `pulumi:"ramSize"`
	// The size of the volume in GB. The size must be greater than 10GB.
	StorageSize pulumi.IntInput `pulumi:"storageSize"`
	// The type of hardware for the volume.
	StorageType pulumi.StringInput `pulumi:"storageType"`
	// The version of the Data Platform.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetDataplatformNodePoolsNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformNodePoolsNodePool)(nil)).Elem()
}

func (i GetDataplatformNodePoolsNodePoolArgs) ToGetDataplatformNodePoolsNodePoolOutput() GetDataplatformNodePoolsNodePoolOutput {
	return i.ToGetDataplatformNodePoolsNodePoolOutputWithContext(context.Background())
}

func (i GetDataplatformNodePoolsNodePoolArgs) ToGetDataplatformNodePoolsNodePoolOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformNodePoolsNodePoolOutput)
}

// GetDataplatformNodePoolsNodePoolArrayInput is an input type that accepts GetDataplatformNodePoolsNodePoolArray and GetDataplatformNodePoolsNodePoolArrayOutput values.
// You can construct a concrete instance of `GetDataplatformNodePoolsNodePoolArrayInput` via:
//
//	GetDataplatformNodePoolsNodePoolArray{ GetDataplatformNodePoolsNodePoolArgs{...} }
type GetDataplatformNodePoolsNodePoolArrayInput interface {
	pulumi.Input

	ToGetDataplatformNodePoolsNodePoolArrayOutput() GetDataplatformNodePoolsNodePoolArrayOutput
	ToGetDataplatformNodePoolsNodePoolArrayOutputWithContext(context.Context) GetDataplatformNodePoolsNodePoolArrayOutput
}

type GetDataplatformNodePoolsNodePoolArray []GetDataplatformNodePoolsNodePoolInput

func (GetDataplatformNodePoolsNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformNodePoolsNodePool)(nil)).Elem()
}

func (i GetDataplatformNodePoolsNodePoolArray) ToGetDataplatformNodePoolsNodePoolArrayOutput() GetDataplatformNodePoolsNodePoolArrayOutput {
	return i.ToGetDataplatformNodePoolsNodePoolArrayOutputWithContext(context.Background())
}

func (i GetDataplatformNodePoolsNodePoolArray) ToGetDataplatformNodePoolsNodePoolArrayOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformNodePoolsNodePoolArrayOutput)
}

type GetDataplatformNodePoolsNodePoolOutput struct{ *pulumi.OutputState }

func (GetDataplatformNodePoolsNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformNodePoolsNodePool)(nil)).Elem()
}

func (o GetDataplatformNodePoolsNodePoolOutput) ToGetDataplatformNodePoolsNodePoolOutput() GetDataplatformNodePoolsNodePoolOutput {
	return o
}

func (o GetDataplatformNodePoolsNodePoolOutput) ToGetDataplatformNodePoolsNodePoolOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolOutput {
	return o
}

// Key-value pairs attached to node pool resource as kubernetes annotations
func (o GetDataplatformNodePoolsNodePoolOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// The availability zone of the virtual datacenter region where the node pool resources should be provisioned.
func (o GetDataplatformNodePoolsNodePoolOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The number of CPU cores per node.
func (o GetDataplatformNodePoolsNodePoolOutput) CoresCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) int { return v.CoresCount }).(pulumi.IntOutput)
}

// A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource.
func (o GetDataplatformNodePoolsNodePoolOutput) CpuFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) string { return v.CpuFamily }).(pulumi.StringOutput)
}

// The UUID of the virtual data center (VDC) in which the node pool is provisioned
func (o GetDataplatformNodePoolsNodePoolOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) string { return v.DatacenterId }).(pulumi.StringOutput)
}

func (o GetDataplatformNodePoolsNodePoolOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) string { return v.Id }).(pulumi.StringOutput)
}

// Key-value pairs attached to the node pool resource as kubernetes labels
func (o GetDataplatformNodePoolsNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
func (o GetDataplatformNodePoolsNodePoolOutput) MaintenanceWindows() GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) []GetDataplatformNodePoolsNodePoolMaintenanceWindow {
		return v.MaintenanceWindows
	}).(GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput)
}

// Name of an existing cluster that you want to search for. Search by name is case-insensitive. The whole resource name is required if `partialMatch` parameter is not set to true.
func (o GetDataplatformNodePoolsNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) string { return v.Name }).(pulumi.StringOutput)
}

// The number of nodes that make up the node pool.
func (o GetDataplatformNodePoolsNodePoolOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) int { return v.NodeCount }).(pulumi.IntOutput)
}

// The RAM size for one node in MB. Must be set in multiples of 1024 MB, with a minimum size is of 2048 MB.
func (o GetDataplatformNodePoolsNodePoolOutput) RamSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) int { return v.RamSize }).(pulumi.IntOutput)
}

// The size of the volume in GB. The size must be greater than 10GB.
func (o GetDataplatformNodePoolsNodePoolOutput) StorageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) int { return v.StorageSize }).(pulumi.IntOutput)
}

// The type of hardware for the volume.
func (o GetDataplatformNodePoolsNodePoolOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) string { return v.StorageType }).(pulumi.StringOutput)
}

// The version of the Data Platform.
func (o GetDataplatformNodePoolsNodePoolOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePool) string { return v.Version }).(pulumi.StringOutput)
}

type GetDataplatformNodePoolsNodePoolArrayOutput struct{ *pulumi.OutputState }

func (GetDataplatformNodePoolsNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformNodePoolsNodePool)(nil)).Elem()
}

func (o GetDataplatformNodePoolsNodePoolArrayOutput) ToGetDataplatformNodePoolsNodePoolArrayOutput() GetDataplatformNodePoolsNodePoolArrayOutput {
	return o
}

func (o GetDataplatformNodePoolsNodePoolArrayOutput) ToGetDataplatformNodePoolsNodePoolArrayOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolArrayOutput {
	return o
}

func (o GetDataplatformNodePoolsNodePoolArrayOutput) Index(i pulumi.IntInput) GetDataplatformNodePoolsNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataplatformNodePoolsNodePool {
		return vs[0].([]GetDataplatformNodePoolsNodePool)[vs[1].(int)]
	}).(GetDataplatformNodePoolsNodePoolOutput)
}

type GetDataplatformNodePoolsNodePoolMaintenanceWindow struct {
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// Time at which the maintenance should start. Must conform to the 'HH:MM:SS' 24-hour format.
	Time string `pulumi:"time"`
}

// GetDataplatformNodePoolsNodePoolMaintenanceWindowInput is an input type that accepts GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs and GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetDataplatformNodePoolsNodePoolMaintenanceWindowInput` via:
//
//	GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs{...}
type GetDataplatformNodePoolsNodePoolMaintenanceWindowInput interface {
	pulumi.Input

	ToGetDataplatformNodePoolsNodePoolMaintenanceWindowOutput() GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput
	ToGetDataplatformNodePoolsNodePoolMaintenanceWindowOutputWithContext(context.Context) GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput
}

type GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs struct {
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// Time at which the maintenance should start. Must conform to the 'HH:MM:SS' 24-hour format.
	Time pulumi.StringInput `pulumi:"time"`
}

func (GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformNodePoolsNodePoolMaintenanceWindow)(nil)).Elem()
}

func (i GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowOutput() GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput {
	return i.ToGetDataplatformNodePoolsNodePoolMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput)
}

// GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayInput is an input type that accepts GetDataplatformNodePoolsNodePoolMaintenanceWindowArray and GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayInput` via:
//
//	GetDataplatformNodePoolsNodePoolMaintenanceWindowArray{ GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs{...} }
type GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput() GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput
	ToGetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutputWithContext(context.Context) GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput
}

type GetDataplatformNodePoolsNodePoolMaintenanceWindowArray []GetDataplatformNodePoolsNodePoolMaintenanceWindowInput

func (GetDataplatformNodePoolsNodePoolMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformNodePoolsNodePoolMaintenanceWindow)(nil)).Elem()
}

func (i GetDataplatformNodePoolsNodePoolMaintenanceWindowArray) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput() GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput {
	return i.ToGetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetDataplatformNodePoolsNodePoolMaintenanceWindowArray) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput)
}

type GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataplatformNodePoolsNodePoolMaintenanceWindow)(nil)).Elem()
}

func (o GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowOutput() GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput {
	return o
}

func (o GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput {
	return o
}

func (o GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePoolMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// Time at which the maintenance should start. Must conform to the 'HH:MM:SS' 24-hour format.
func (o GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataplatformNodePoolsNodePoolMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataplatformNodePoolsNodePoolMaintenanceWindow)(nil)).Elem()
}

func (o GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput() GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput {
	return o
}

func (o GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput) ToGetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput {
	return o
}

func (o GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataplatformNodePoolsNodePoolMaintenanceWindow {
		return vs[0].([]GetDataplatformNodePoolsNodePoolMaintenanceWindow)[vs[1].(int)]
	}).(GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput)
}

type GetInmemorydbSnapshotMetadata struct {
	// The ISO 8601 creation timestamp.
	CreatedDate string `pulumi:"createdDate"`
	// The ID of the datacenter the snapshot was created in. Please mind, that the snapshot is not available in other datacenters.
	DatacenterId string `pulumi:"datacenterId"`
	// The ISO 8601 modified timestamp.
	LastModifiedDate string `pulumi:"lastModifiedDate"`
	// The ID of the InMemoryDB replica set the snapshot is taken from.
	ReplicaSetId string `pulumi:"replicaSetId"`
	// The time the snapshot was dumped from the replica set.
	SnapshotTime string `pulumi:"snapshotTime"`
}

// GetInmemorydbSnapshotMetadataInput is an input type that accepts GetInmemorydbSnapshotMetadataArgs and GetInmemorydbSnapshotMetadataOutput values.
// You can construct a concrete instance of `GetInmemorydbSnapshotMetadataInput` via:
//
//	GetInmemorydbSnapshotMetadataArgs{...}
type GetInmemorydbSnapshotMetadataInput interface {
	pulumi.Input

	ToGetInmemorydbSnapshotMetadataOutput() GetInmemorydbSnapshotMetadataOutput
	ToGetInmemorydbSnapshotMetadataOutputWithContext(context.Context) GetInmemorydbSnapshotMetadataOutput
}

type GetInmemorydbSnapshotMetadataArgs struct {
	// The ISO 8601 creation timestamp.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The ID of the datacenter the snapshot was created in. Please mind, that the snapshot is not available in other datacenters.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// The ISO 8601 modified timestamp.
	LastModifiedDate pulumi.StringInput `pulumi:"lastModifiedDate"`
	// The ID of the InMemoryDB replica set the snapshot is taken from.
	ReplicaSetId pulumi.StringInput `pulumi:"replicaSetId"`
	// The time the snapshot was dumped from the replica set.
	SnapshotTime pulumi.StringInput `pulumi:"snapshotTime"`
}

func (GetInmemorydbSnapshotMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInmemorydbSnapshotMetadata)(nil)).Elem()
}

func (i GetInmemorydbSnapshotMetadataArgs) ToGetInmemorydbSnapshotMetadataOutput() GetInmemorydbSnapshotMetadataOutput {
	return i.ToGetInmemorydbSnapshotMetadataOutputWithContext(context.Background())
}

func (i GetInmemorydbSnapshotMetadataArgs) ToGetInmemorydbSnapshotMetadataOutputWithContext(ctx context.Context) GetInmemorydbSnapshotMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInmemorydbSnapshotMetadataOutput)
}

// GetInmemorydbSnapshotMetadataArrayInput is an input type that accepts GetInmemorydbSnapshotMetadataArray and GetInmemorydbSnapshotMetadataArrayOutput values.
// You can construct a concrete instance of `GetInmemorydbSnapshotMetadataArrayInput` via:
//
//	GetInmemorydbSnapshotMetadataArray{ GetInmemorydbSnapshotMetadataArgs{...} }
type GetInmemorydbSnapshotMetadataArrayInput interface {
	pulumi.Input

	ToGetInmemorydbSnapshotMetadataArrayOutput() GetInmemorydbSnapshotMetadataArrayOutput
	ToGetInmemorydbSnapshotMetadataArrayOutputWithContext(context.Context) GetInmemorydbSnapshotMetadataArrayOutput
}

type GetInmemorydbSnapshotMetadataArray []GetInmemorydbSnapshotMetadataInput

func (GetInmemorydbSnapshotMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInmemorydbSnapshotMetadata)(nil)).Elem()
}

func (i GetInmemorydbSnapshotMetadataArray) ToGetInmemorydbSnapshotMetadataArrayOutput() GetInmemorydbSnapshotMetadataArrayOutput {
	return i.ToGetInmemorydbSnapshotMetadataArrayOutputWithContext(context.Background())
}

func (i GetInmemorydbSnapshotMetadataArray) ToGetInmemorydbSnapshotMetadataArrayOutputWithContext(ctx context.Context) GetInmemorydbSnapshotMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInmemorydbSnapshotMetadataArrayOutput)
}

type GetInmemorydbSnapshotMetadataOutput struct{ *pulumi.OutputState }

func (GetInmemorydbSnapshotMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInmemorydbSnapshotMetadata)(nil)).Elem()
}

func (o GetInmemorydbSnapshotMetadataOutput) ToGetInmemorydbSnapshotMetadataOutput() GetInmemorydbSnapshotMetadataOutput {
	return o
}

func (o GetInmemorydbSnapshotMetadataOutput) ToGetInmemorydbSnapshotMetadataOutputWithContext(ctx context.Context) GetInmemorydbSnapshotMetadataOutput {
	return o
}

// The ISO 8601 creation timestamp.
func (o GetInmemorydbSnapshotMetadataOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbSnapshotMetadata) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The ID of the datacenter the snapshot was created in. Please mind, that the snapshot is not available in other datacenters.
func (o GetInmemorydbSnapshotMetadataOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbSnapshotMetadata) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// The ISO 8601 modified timestamp.
func (o GetInmemorydbSnapshotMetadataOutput) LastModifiedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbSnapshotMetadata) string { return v.LastModifiedDate }).(pulumi.StringOutput)
}

// The ID of the InMemoryDB replica set the snapshot is taken from.
func (o GetInmemorydbSnapshotMetadataOutput) ReplicaSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbSnapshotMetadata) string { return v.ReplicaSetId }).(pulumi.StringOutput)
}

// The time the snapshot was dumped from the replica set.
func (o GetInmemorydbSnapshotMetadataOutput) SnapshotTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInmemorydbSnapshotMetadata) string { return v.SnapshotTime }).(pulumi.StringOutput)
}

type GetInmemorydbSnapshotMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetInmemorydbSnapshotMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInmemorydbSnapshotMetadata)(nil)).Elem()
}

func (o GetInmemorydbSnapshotMetadataArrayOutput) ToGetInmemorydbSnapshotMetadataArrayOutput() GetInmemorydbSnapshotMetadataArrayOutput {
	return o
}

func (o GetInmemorydbSnapshotMetadataArrayOutput) ToGetInmemorydbSnapshotMetadataArrayOutputWithContext(ctx context.Context) GetInmemorydbSnapshotMetadataArrayOutput {
	return o
}

func (o GetInmemorydbSnapshotMetadataArrayOutput) Index(i pulumi.IntInput) GetInmemorydbSnapshotMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInmemorydbSnapshotMetadata {
		return vs[0].([]GetInmemorydbSnapshotMetadata)[vs[1].(int)]
	}).(GetInmemorydbSnapshotMetadataOutput)
}

type GetK8sClustersCluster struct {
	// Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.
	ApiSubnetAllowLists []string `pulumi:"apiSubnetAllowLists"`
	// A list of available versions for upgrading the cluster
	AvailableUpgradeVersions []string                      `pulumi:"availableUpgradeVersions"`
	CaCrt                    string                        `pulumi:"caCrt"`
	Configs                  []GetK8sClustersClusterConfig `pulumi:"configs"`
	Id                       *string                       `pulumi:"id"`
	K8sVersion               string                        `pulumi:"k8sVersion"`
	KubeConfig               string                        `pulumi:"kubeConfig"`
	Location                 string                        `pulumi:"location"`
	// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
	MaintenanceWindows []GetK8sClustersClusterMaintenanceWindow `pulumi:"maintenanceWindows"`
	Name               *string                                  `pulumi:"name"`
	// The NAT gateway IP of the cluster if the cluster is private.
	NatGatewayIp string   `pulumi:"natGatewayIp"`
	NodePools    []string `pulumi:"nodePools"`
	// The node subnet of the cluster, if the cluster is private.
	NodeSubnet string `pulumi:"nodeSubnet"`
	// The indicator if the cluster is public or private.
	Public bool `pulumi:"public"`
	// List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store K8s API audit logs.
	S3Buckets  []GetK8sClustersClusterS3Bucket `pulumi:"s3Buckets"`
	Server     string                          `pulumi:"server"`
	State      string                          `pulumi:"state"`
	UserTokens map[string]string               `pulumi:"userTokens"`
	// A list of versions that may be used for node pools under this cluster
	ViableNodePoolVersions []string `pulumi:"viableNodePoolVersions"`
}

// GetK8sClustersClusterInput is an input type that accepts GetK8sClustersClusterArgs and GetK8sClustersClusterOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterInput` via:
//
//	GetK8sClustersClusterArgs{...}
type GetK8sClustersClusterInput interface {
	pulumi.Input

	ToGetK8sClustersClusterOutput() GetK8sClustersClusterOutput
	ToGetK8sClustersClusterOutputWithContext(context.Context) GetK8sClustersClusterOutput
}

type GetK8sClustersClusterArgs struct {
	// Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.
	ApiSubnetAllowLists pulumi.StringArrayInput `pulumi:"apiSubnetAllowLists"`
	// A list of available versions for upgrading the cluster
	AvailableUpgradeVersions pulumi.StringArrayInput               `pulumi:"availableUpgradeVersions"`
	CaCrt                    pulumi.StringInput                    `pulumi:"caCrt"`
	Configs                  GetK8sClustersClusterConfigArrayInput `pulumi:"configs"`
	Id                       pulumi.StringPtrInput                 `pulumi:"id"`
	K8sVersion               pulumi.StringInput                    `pulumi:"k8sVersion"`
	KubeConfig               pulumi.StringInput                    `pulumi:"kubeConfig"`
	Location                 pulumi.StringInput                    `pulumi:"location"`
	// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
	MaintenanceWindows GetK8sClustersClusterMaintenanceWindowArrayInput `pulumi:"maintenanceWindows"`
	Name               pulumi.StringPtrInput                            `pulumi:"name"`
	// The NAT gateway IP of the cluster if the cluster is private.
	NatGatewayIp pulumi.StringInput      `pulumi:"natGatewayIp"`
	NodePools    pulumi.StringArrayInput `pulumi:"nodePools"`
	// The node subnet of the cluster, if the cluster is private.
	NodeSubnet pulumi.StringInput `pulumi:"nodeSubnet"`
	// The indicator if the cluster is public or private.
	Public pulumi.BoolInput `pulumi:"public"`
	// List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store K8s API audit logs.
	S3Buckets  GetK8sClustersClusterS3BucketArrayInput `pulumi:"s3Buckets"`
	Server     pulumi.StringInput                      `pulumi:"server"`
	State      pulumi.StringInput                      `pulumi:"state"`
	UserTokens pulumi.StringMapInput                   `pulumi:"userTokens"`
	// A list of versions that may be used for node pools under this cluster
	ViableNodePoolVersions pulumi.StringArrayInput `pulumi:"viableNodePoolVersions"`
}

func (GetK8sClustersClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersCluster)(nil)).Elem()
}

func (i GetK8sClustersClusterArgs) ToGetK8sClustersClusterOutput() GetK8sClustersClusterOutput {
	return i.ToGetK8sClustersClusterOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterArgs) ToGetK8sClustersClusterOutputWithContext(ctx context.Context) GetK8sClustersClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterOutput)
}

// GetK8sClustersClusterArrayInput is an input type that accepts GetK8sClustersClusterArray and GetK8sClustersClusterArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterArrayInput` via:
//
//	GetK8sClustersClusterArray{ GetK8sClustersClusterArgs{...} }
type GetK8sClustersClusterArrayInput interface {
	pulumi.Input

	ToGetK8sClustersClusterArrayOutput() GetK8sClustersClusterArrayOutput
	ToGetK8sClustersClusterArrayOutputWithContext(context.Context) GetK8sClustersClusterArrayOutput
}

type GetK8sClustersClusterArray []GetK8sClustersClusterInput

func (GetK8sClustersClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersCluster)(nil)).Elem()
}

func (i GetK8sClustersClusterArray) ToGetK8sClustersClusterArrayOutput() GetK8sClustersClusterArrayOutput {
	return i.ToGetK8sClustersClusterArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterArray) ToGetK8sClustersClusterArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterArrayOutput)
}

type GetK8sClustersClusterOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersCluster)(nil)).Elem()
}

func (o GetK8sClustersClusterOutput) ToGetK8sClustersClusterOutput() GetK8sClustersClusterOutput {
	return o
}

func (o GetK8sClustersClusterOutput) ToGetK8sClustersClusterOutputWithContext(ctx context.Context) GetK8sClustersClusterOutput {
	return o
}

// Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.
func (o GetK8sClustersClusterOutput) ApiSubnetAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) []string { return v.ApiSubnetAllowLists }).(pulumi.StringArrayOutput)
}

// A list of available versions for upgrading the cluster
func (o GetK8sClustersClusterOutput) AvailableUpgradeVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) []string { return v.AvailableUpgradeVersions }).(pulumi.StringArrayOutput)
}

func (o GetK8sClustersClusterOutput) CaCrt() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.CaCrt }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterOutput) Configs() GetK8sClustersClusterConfigArrayOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) []GetK8sClustersClusterConfig { return v.Configs }).(GetK8sClustersClusterConfigArrayOutput)
}

func (o GetK8sClustersClusterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetK8sClustersClusterOutput) K8sVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.K8sVersion }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterOutput) KubeConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.KubeConfig }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.Location }).(pulumi.StringOutput)
}

// A maintenance window comprise of a day of the week and a time for maintenance to be allowed
func (o GetK8sClustersClusterOutput) MaintenanceWindows() GetK8sClustersClusterMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) []GetK8sClustersClusterMaintenanceWindow { return v.MaintenanceWindows }).(GetK8sClustersClusterMaintenanceWindowArrayOutput)
}

func (o GetK8sClustersClusterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The NAT gateway IP of the cluster if the cluster is private.
func (o GetK8sClustersClusterOutput) NatGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.NatGatewayIp }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterOutput) NodePools() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) []string { return v.NodePools }).(pulumi.StringArrayOutput)
}

// The node subnet of the cluster, if the cluster is private.
func (o GetK8sClustersClusterOutput) NodeSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.NodeSubnet }).(pulumi.StringOutput)
}

// The indicator if the cluster is public or private.
func (o GetK8sClustersClusterOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) bool { return v.Public }).(pulumi.BoolOutput)
}

// List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store K8s API audit logs.
func (o GetK8sClustersClusterOutput) S3Buckets() GetK8sClustersClusterS3BucketArrayOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) []GetK8sClustersClusterS3Bucket { return v.S3Buckets }).(GetK8sClustersClusterS3BucketArrayOutput)
}

func (o GetK8sClustersClusterOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.Server }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) string { return v.State }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterOutput) UserTokens() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) map[string]string { return v.UserTokens }).(pulumi.StringMapOutput)
}

// A list of versions that may be used for node pools under this cluster
func (o GetK8sClustersClusterOutput) ViableNodePoolVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetK8sClustersCluster) []string { return v.ViableNodePoolVersions }).(pulumi.StringArrayOutput)
}

type GetK8sClustersClusterArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersCluster)(nil)).Elem()
}

func (o GetK8sClustersClusterArrayOutput) ToGetK8sClustersClusterArrayOutput() GetK8sClustersClusterArrayOutput {
	return o
}

func (o GetK8sClustersClusterArrayOutput) ToGetK8sClustersClusterArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterArrayOutput {
	return o
}

func (o GetK8sClustersClusterArrayOutput) Index(i pulumi.IntInput) GetK8sClustersClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersCluster {
		return vs[0].([]GetK8sClustersCluster)[vs[1].(int)]
	}).(GetK8sClustersClusterOutput)
}

type GetK8sClustersClusterConfig struct {
	ApiVersion     string                               `pulumi:"apiVersion"`
	Clusters       []GetK8sClustersClusterConfigCluster `pulumi:"clusters"`
	Contexts       []GetK8sClustersClusterConfigContext `pulumi:"contexts"`
	CurrentContext string                               `pulumi:"currentContext"`
	Kind           string                               `pulumi:"kind"`
	Users          []GetK8sClustersClusterConfigUser    `pulumi:"users"`
}

// GetK8sClustersClusterConfigInput is an input type that accepts GetK8sClustersClusterConfigArgs and GetK8sClustersClusterConfigOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigInput` via:
//
//	GetK8sClustersClusterConfigArgs{...}
type GetK8sClustersClusterConfigInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigOutput() GetK8sClustersClusterConfigOutput
	ToGetK8sClustersClusterConfigOutputWithContext(context.Context) GetK8sClustersClusterConfigOutput
}

type GetK8sClustersClusterConfigArgs struct {
	ApiVersion     pulumi.StringInput                           `pulumi:"apiVersion"`
	Clusters       GetK8sClustersClusterConfigClusterArrayInput `pulumi:"clusters"`
	Contexts       GetK8sClustersClusterConfigContextArrayInput `pulumi:"contexts"`
	CurrentContext pulumi.StringInput                           `pulumi:"currentContext"`
	Kind           pulumi.StringInput                           `pulumi:"kind"`
	Users          GetK8sClustersClusterConfigUserArrayInput    `pulumi:"users"`
}

func (GetK8sClustersClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfig)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigArgs) ToGetK8sClustersClusterConfigOutput() GetK8sClustersClusterConfigOutput {
	return i.ToGetK8sClustersClusterConfigOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigArgs) ToGetK8sClustersClusterConfigOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigOutput)
}

// GetK8sClustersClusterConfigArrayInput is an input type that accepts GetK8sClustersClusterConfigArray and GetK8sClustersClusterConfigArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigArrayInput` via:
//
//	GetK8sClustersClusterConfigArray{ GetK8sClustersClusterConfigArgs{...} }
type GetK8sClustersClusterConfigArrayInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigArrayOutput() GetK8sClustersClusterConfigArrayOutput
	ToGetK8sClustersClusterConfigArrayOutputWithContext(context.Context) GetK8sClustersClusterConfigArrayOutput
}

type GetK8sClustersClusterConfigArray []GetK8sClustersClusterConfigInput

func (GetK8sClustersClusterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfig)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigArray) ToGetK8sClustersClusterConfigArrayOutput() GetK8sClustersClusterConfigArrayOutput {
	return i.ToGetK8sClustersClusterConfigArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigArray) ToGetK8sClustersClusterConfigArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigArrayOutput)
}

type GetK8sClustersClusterConfigOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfig)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigOutput) ToGetK8sClustersClusterConfigOutput() GetK8sClustersClusterConfigOutput {
	return o
}

func (o GetK8sClustersClusterConfigOutput) ToGetK8sClustersClusterConfigOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigOutput {
	return o
}

func (o GetK8sClustersClusterConfigOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfig) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterConfigOutput) Clusters() GetK8sClustersClusterConfigClusterArrayOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfig) []GetK8sClustersClusterConfigCluster { return v.Clusters }).(GetK8sClustersClusterConfigClusterArrayOutput)
}

func (o GetK8sClustersClusterConfigOutput) Contexts() GetK8sClustersClusterConfigContextArrayOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfig) []GetK8sClustersClusterConfigContext { return v.Contexts }).(GetK8sClustersClusterConfigContextArrayOutput)
}

func (o GetK8sClustersClusterConfigOutput) CurrentContext() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfig) string { return v.CurrentContext }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterConfigOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfig) string { return v.Kind }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterConfigOutput) Users() GetK8sClustersClusterConfigUserArrayOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfig) []GetK8sClustersClusterConfigUser { return v.Users }).(GetK8sClustersClusterConfigUserArrayOutput)
}

type GetK8sClustersClusterConfigArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfig)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigArrayOutput) ToGetK8sClustersClusterConfigArrayOutput() GetK8sClustersClusterConfigArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigArrayOutput) ToGetK8sClustersClusterConfigArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigArrayOutput) Index(i pulumi.IntInput) GetK8sClustersClusterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersClusterConfig {
		return vs[0].([]GetK8sClustersClusterConfig)[vs[1].(int)]
	}).(GetK8sClustersClusterConfigOutput)
}

type GetK8sClustersClusterConfigCluster struct {
	Cluster map[string]string `pulumi:"cluster"`
	Name    string            `pulumi:"name"`
}

// GetK8sClustersClusterConfigClusterInput is an input type that accepts GetK8sClustersClusterConfigClusterArgs and GetK8sClustersClusterConfigClusterOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigClusterInput` via:
//
//	GetK8sClustersClusterConfigClusterArgs{...}
type GetK8sClustersClusterConfigClusterInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigClusterOutput() GetK8sClustersClusterConfigClusterOutput
	ToGetK8sClustersClusterConfigClusterOutputWithContext(context.Context) GetK8sClustersClusterConfigClusterOutput
}

type GetK8sClustersClusterConfigClusterArgs struct {
	Cluster pulumi.StringMapInput `pulumi:"cluster"`
	Name    pulumi.StringInput    `pulumi:"name"`
}

func (GetK8sClustersClusterConfigClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfigCluster)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigClusterArgs) ToGetK8sClustersClusterConfigClusterOutput() GetK8sClustersClusterConfigClusterOutput {
	return i.ToGetK8sClustersClusterConfigClusterOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigClusterArgs) ToGetK8sClustersClusterConfigClusterOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigClusterOutput)
}

// GetK8sClustersClusterConfigClusterArrayInput is an input type that accepts GetK8sClustersClusterConfigClusterArray and GetK8sClustersClusterConfigClusterArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigClusterArrayInput` via:
//
//	GetK8sClustersClusterConfigClusterArray{ GetK8sClustersClusterConfigClusterArgs{...} }
type GetK8sClustersClusterConfigClusterArrayInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigClusterArrayOutput() GetK8sClustersClusterConfigClusterArrayOutput
	ToGetK8sClustersClusterConfigClusterArrayOutputWithContext(context.Context) GetK8sClustersClusterConfigClusterArrayOutput
}

type GetK8sClustersClusterConfigClusterArray []GetK8sClustersClusterConfigClusterInput

func (GetK8sClustersClusterConfigClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfigCluster)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigClusterArray) ToGetK8sClustersClusterConfigClusterArrayOutput() GetK8sClustersClusterConfigClusterArrayOutput {
	return i.ToGetK8sClustersClusterConfigClusterArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigClusterArray) ToGetK8sClustersClusterConfigClusterArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigClusterArrayOutput)
}

type GetK8sClustersClusterConfigClusterOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfigCluster)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigClusterOutput) ToGetK8sClustersClusterConfigClusterOutput() GetK8sClustersClusterConfigClusterOutput {
	return o
}

func (o GetK8sClustersClusterConfigClusterOutput) ToGetK8sClustersClusterConfigClusterOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigClusterOutput {
	return o
}

func (o GetK8sClustersClusterConfigClusterOutput) Cluster() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfigCluster) map[string]string { return v.Cluster }).(pulumi.StringMapOutput)
}

func (o GetK8sClustersClusterConfigClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfigCluster) string { return v.Name }).(pulumi.StringOutput)
}

type GetK8sClustersClusterConfigClusterArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfigCluster)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigClusterArrayOutput) ToGetK8sClustersClusterConfigClusterArrayOutput() GetK8sClustersClusterConfigClusterArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigClusterArrayOutput) ToGetK8sClustersClusterConfigClusterArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigClusterArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigClusterArrayOutput) Index(i pulumi.IntInput) GetK8sClustersClusterConfigClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersClusterConfigCluster {
		return vs[0].([]GetK8sClustersClusterConfigCluster)[vs[1].(int)]
	}).(GetK8sClustersClusterConfigClusterOutput)
}

type GetK8sClustersClusterConfigContext struct {
	Context map[string]string `pulumi:"context"`
	Name    string            `pulumi:"name"`
}

// GetK8sClustersClusterConfigContextInput is an input type that accepts GetK8sClustersClusterConfigContextArgs and GetK8sClustersClusterConfigContextOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigContextInput` via:
//
//	GetK8sClustersClusterConfigContextArgs{...}
type GetK8sClustersClusterConfigContextInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigContextOutput() GetK8sClustersClusterConfigContextOutput
	ToGetK8sClustersClusterConfigContextOutputWithContext(context.Context) GetK8sClustersClusterConfigContextOutput
}

type GetK8sClustersClusterConfigContextArgs struct {
	Context pulumi.StringMapInput `pulumi:"context"`
	Name    pulumi.StringInput    `pulumi:"name"`
}

func (GetK8sClustersClusterConfigContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfigContext)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigContextArgs) ToGetK8sClustersClusterConfigContextOutput() GetK8sClustersClusterConfigContextOutput {
	return i.ToGetK8sClustersClusterConfigContextOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigContextArgs) ToGetK8sClustersClusterConfigContextOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigContextOutput)
}

// GetK8sClustersClusterConfigContextArrayInput is an input type that accepts GetK8sClustersClusterConfigContextArray and GetK8sClustersClusterConfigContextArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigContextArrayInput` via:
//
//	GetK8sClustersClusterConfigContextArray{ GetK8sClustersClusterConfigContextArgs{...} }
type GetK8sClustersClusterConfigContextArrayInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigContextArrayOutput() GetK8sClustersClusterConfigContextArrayOutput
	ToGetK8sClustersClusterConfigContextArrayOutputWithContext(context.Context) GetK8sClustersClusterConfigContextArrayOutput
}

type GetK8sClustersClusterConfigContextArray []GetK8sClustersClusterConfigContextInput

func (GetK8sClustersClusterConfigContextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfigContext)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigContextArray) ToGetK8sClustersClusterConfigContextArrayOutput() GetK8sClustersClusterConfigContextArrayOutput {
	return i.ToGetK8sClustersClusterConfigContextArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigContextArray) ToGetK8sClustersClusterConfigContextArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigContextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigContextArrayOutput)
}

type GetK8sClustersClusterConfigContextOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfigContext)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigContextOutput) ToGetK8sClustersClusterConfigContextOutput() GetK8sClustersClusterConfigContextOutput {
	return o
}

func (o GetK8sClustersClusterConfigContextOutput) ToGetK8sClustersClusterConfigContextOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigContextOutput {
	return o
}

func (o GetK8sClustersClusterConfigContextOutput) Context() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfigContext) map[string]string { return v.Context }).(pulumi.StringMapOutput)
}

func (o GetK8sClustersClusterConfigContextOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfigContext) string { return v.Name }).(pulumi.StringOutput)
}

type GetK8sClustersClusterConfigContextArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigContextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfigContext)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigContextArrayOutput) ToGetK8sClustersClusterConfigContextArrayOutput() GetK8sClustersClusterConfigContextArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigContextArrayOutput) ToGetK8sClustersClusterConfigContextArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigContextArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigContextArrayOutput) Index(i pulumi.IntInput) GetK8sClustersClusterConfigContextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersClusterConfigContext {
		return vs[0].([]GetK8sClustersClusterConfigContext)[vs[1].(int)]
	}).(GetK8sClustersClusterConfigContextOutput)
}

type GetK8sClustersClusterConfigUser struct {
	Name string            `pulumi:"name"`
	User map[string]string `pulumi:"user"`
}

// GetK8sClustersClusterConfigUserInput is an input type that accepts GetK8sClustersClusterConfigUserArgs and GetK8sClustersClusterConfigUserOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigUserInput` via:
//
//	GetK8sClustersClusterConfigUserArgs{...}
type GetK8sClustersClusterConfigUserInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigUserOutput() GetK8sClustersClusterConfigUserOutput
	ToGetK8sClustersClusterConfigUserOutputWithContext(context.Context) GetK8sClustersClusterConfigUserOutput
}

type GetK8sClustersClusterConfigUserArgs struct {
	Name pulumi.StringInput    `pulumi:"name"`
	User pulumi.StringMapInput `pulumi:"user"`
}

func (GetK8sClustersClusterConfigUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfigUser)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigUserArgs) ToGetK8sClustersClusterConfigUserOutput() GetK8sClustersClusterConfigUserOutput {
	return i.ToGetK8sClustersClusterConfigUserOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigUserArgs) ToGetK8sClustersClusterConfigUserOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigUserOutput)
}

// GetK8sClustersClusterConfigUserArrayInput is an input type that accepts GetK8sClustersClusterConfigUserArray and GetK8sClustersClusterConfigUserArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterConfigUserArrayInput` via:
//
//	GetK8sClustersClusterConfigUserArray{ GetK8sClustersClusterConfigUserArgs{...} }
type GetK8sClustersClusterConfigUserArrayInput interface {
	pulumi.Input

	ToGetK8sClustersClusterConfigUserArrayOutput() GetK8sClustersClusterConfigUserArrayOutput
	ToGetK8sClustersClusterConfigUserArrayOutputWithContext(context.Context) GetK8sClustersClusterConfigUserArrayOutput
}

type GetK8sClustersClusterConfigUserArray []GetK8sClustersClusterConfigUserInput

func (GetK8sClustersClusterConfigUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfigUser)(nil)).Elem()
}

func (i GetK8sClustersClusterConfigUserArray) ToGetK8sClustersClusterConfigUserArrayOutput() GetK8sClustersClusterConfigUserArrayOutput {
	return i.ToGetK8sClustersClusterConfigUserArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterConfigUserArray) ToGetK8sClustersClusterConfigUserArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterConfigUserArrayOutput)
}

type GetK8sClustersClusterConfigUserOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterConfigUser)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigUserOutput) ToGetK8sClustersClusterConfigUserOutput() GetK8sClustersClusterConfigUserOutput {
	return o
}

func (o GetK8sClustersClusterConfigUserOutput) ToGetK8sClustersClusterConfigUserOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigUserOutput {
	return o
}

func (o GetK8sClustersClusterConfigUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfigUser) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetK8sClustersClusterConfigUserOutput) User() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetK8sClustersClusterConfigUser) map[string]string { return v.User }).(pulumi.StringMapOutput)
}

type GetK8sClustersClusterConfigUserArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterConfigUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterConfigUser)(nil)).Elem()
}

func (o GetK8sClustersClusterConfigUserArrayOutput) ToGetK8sClustersClusterConfigUserArrayOutput() GetK8sClustersClusterConfigUserArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigUserArrayOutput) ToGetK8sClustersClusterConfigUserArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterConfigUserArrayOutput {
	return o
}

func (o GetK8sClustersClusterConfigUserArrayOutput) Index(i pulumi.IntInput) GetK8sClustersClusterConfigUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersClusterConfigUser {
		return vs[0].([]GetK8sClustersClusterConfigUser)[vs[1].(int)]
	}).(GetK8sClustersClusterConfigUserOutput)
}

type GetK8sClustersClusterMaintenanceWindow struct {
	// Day of the week when maintenance is allowed
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// A clock time in the day when maintenance is allowed
	Time string `pulumi:"time"`
}

// GetK8sClustersClusterMaintenanceWindowInput is an input type that accepts GetK8sClustersClusterMaintenanceWindowArgs and GetK8sClustersClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterMaintenanceWindowInput` via:
//
//	GetK8sClustersClusterMaintenanceWindowArgs{...}
type GetK8sClustersClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToGetK8sClustersClusterMaintenanceWindowOutput() GetK8sClustersClusterMaintenanceWindowOutput
	ToGetK8sClustersClusterMaintenanceWindowOutputWithContext(context.Context) GetK8sClustersClusterMaintenanceWindowOutput
}

type GetK8sClustersClusterMaintenanceWindowArgs struct {
	// Day of the week when maintenance is allowed
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// A clock time in the day when maintenance is allowed
	Time pulumi.StringInput `pulumi:"time"`
}

func (GetK8sClustersClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetK8sClustersClusterMaintenanceWindowArgs) ToGetK8sClustersClusterMaintenanceWindowOutput() GetK8sClustersClusterMaintenanceWindowOutput {
	return i.ToGetK8sClustersClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterMaintenanceWindowArgs) ToGetK8sClustersClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetK8sClustersClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterMaintenanceWindowOutput)
}

// GetK8sClustersClusterMaintenanceWindowArrayInput is an input type that accepts GetK8sClustersClusterMaintenanceWindowArray and GetK8sClustersClusterMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterMaintenanceWindowArrayInput` via:
//
//	GetK8sClustersClusterMaintenanceWindowArray{ GetK8sClustersClusterMaintenanceWindowArgs{...} }
type GetK8sClustersClusterMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetK8sClustersClusterMaintenanceWindowArrayOutput() GetK8sClustersClusterMaintenanceWindowArrayOutput
	ToGetK8sClustersClusterMaintenanceWindowArrayOutputWithContext(context.Context) GetK8sClustersClusterMaintenanceWindowArrayOutput
}

type GetK8sClustersClusterMaintenanceWindowArray []GetK8sClustersClusterMaintenanceWindowInput

func (GetK8sClustersClusterMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetK8sClustersClusterMaintenanceWindowArray) ToGetK8sClustersClusterMaintenanceWindowArrayOutput() GetK8sClustersClusterMaintenanceWindowArrayOutput {
	return i.ToGetK8sClustersClusterMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterMaintenanceWindowArray) ToGetK8sClustersClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterMaintenanceWindowArrayOutput)
}

type GetK8sClustersClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetK8sClustersClusterMaintenanceWindowOutput) ToGetK8sClustersClusterMaintenanceWindowOutput() GetK8sClustersClusterMaintenanceWindowOutput {
	return o
}

func (o GetK8sClustersClusterMaintenanceWindowOutput) ToGetK8sClustersClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetK8sClustersClusterMaintenanceWindowOutput {
	return o
}

// Day of the week when maintenance is allowed
func (o GetK8sClustersClusterMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// A clock time in the day when maintenance is allowed
func (o GetK8sClustersClusterMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type GetK8sClustersClusterMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetK8sClustersClusterMaintenanceWindowArrayOutput) ToGetK8sClustersClusterMaintenanceWindowArrayOutput() GetK8sClustersClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetK8sClustersClusterMaintenanceWindowArrayOutput) ToGetK8sClustersClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetK8sClustersClusterMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetK8sClustersClusterMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersClusterMaintenanceWindow {
		return vs[0].([]GetK8sClustersClusterMaintenanceWindow)[vs[1].(int)]
	}).(GetK8sClustersClusterMaintenanceWindowOutput)
}

type GetK8sClustersClusterS3Bucket struct {
	// Name of the Object Storage bucket
	Name string `pulumi:"name"`
}

// GetK8sClustersClusterS3BucketInput is an input type that accepts GetK8sClustersClusterS3BucketArgs and GetK8sClustersClusterS3BucketOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterS3BucketInput` via:
//
//	GetK8sClustersClusterS3BucketArgs{...}
type GetK8sClustersClusterS3BucketInput interface {
	pulumi.Input

	ToGetK8sClustersClusterS3BucketOutput() GetK8sClustersClusterS3BucketOutput
	ToGetK8sClustersClusterS3BucketOutputWithContext(context.Context) GetK8sClustersClusterS3BucketOutput
}

type GetK8sClustersClusterS3BucketArgs struct {
	// Name of the Object Storage bucket
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetK8sClustersClusterS3BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterS3Bucket)(nil)).Elem()
}

func (i GetK8sClustersClusterS3BucketArgs) ToGetK8sClustersClusterS3BucketOutput() GetK8sClustersClusterS3BucketOutput {
	return i.ToGetK8sClustersClusterS3BucketOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterS3BucketArgs) ToGetK8sClustersClusterS3BucketOutputWithContext(ctx context.Context) GetK8sClustersClusterS3BucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterS3BucketOutput)
}

// GetK8sClustersClusterS3BucketArrayInput is an input type that accepts GetK8sClustersClusterS3BucketArray and GetK8sClustersClusterS3BucketArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersClusterS3BucketArrayInput` via:
//
//	GetK8sClustersClusterS3BucketArray{ GetK8sClustersClusterS3BucketArgs{...} }
type GetK8sClustersClusterS3BucketArrayInput interface {
	pulumi.Input

	ToGetK8sClustersClusterS3BucketArrayOutput() GetK8sClustersClusterS3BucketArrayOutput
	ToGetK8sClustersClusterS3BucketArrayOutputWithContext(context.Context) GetK8sClustersClusterS3BucketArrayOutput
}

type GetK8sClustersClusterS3BucketArray []GetK8sClustersClusterS3BucketInput

func (GetK8sClustersClusterS3BucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterS3Bucket)(nil)).Elem()
}

func (i GetK8sClustersClusterS3BucketArray) ToGetK8sClustersClusterS3BucketArrayOutput() GetK8sClustersClusterS3BucketArrayOutput {
	return i.ToGetK8sClustersClusterS3BucketArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersClusterS3BucketArray) ToGetK8sClustersClusterS3BucketArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterS3BucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersClusterS3BucketArrayOutput)
}

type GetK8sClustersClusterS3BucketOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterS3BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersClusterS3Bucket)(nil)).Elem()
}

func (o GetK8sClustersClusterS3BucketOutput) ToGetK8sClustersClusterS3BucketOutput() GetK8sClustersClusterS3BucketOutput {
	return o
}

func (o GetK8sClustersClusterS3BucketOutput) ToGetK8sClustersClusterS3BucketOutputWithContext(ctx context.Context) GetK8sClustersClusterS3BucketOutput {
	return o
}

// Name of the Object Storage bucket
func (o GetK8sClustersClusterS3BucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersClusterS3Bucket) string { return v.Name }).(pulumi.StringOutput)
}

type GetK8sClustersClusterS3BucketArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersClusterS3BucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersClusterS3Bucket)(nil)).Elem()
}

func (o GetK8sClustersClusterS3BucketArrayOutput) ToGetK8sClustersClusterS3BucketArrayOutput() GetK8sClustersClusterS3BucketArrayOutput {
	return o
}

func (o GetK8sClustersClusterS3BucketArrayOutput) ToGetK8sClustersClusterS3BucketArrayOutputWithContext(ctx context.Context) GetK8sClustersClusterS3BucketArrayOutput {
	return o
}

func (o GetK8sClustersClusterS3BucketArrayOutput) Index(i pulumi.IntInput) GetK8sClustersClusterS3BucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersClusterS3Bucket {
		return vs[0].([]GetK8sClustersClusterS3Bucket)[vs[1].(int)]
	}).(GetK8sClustersClusterS3BucketOutput)
}

type GetK8sClustersFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetK8sClustersFilterInput is an input type that accepts GetK8sClustersFilterArgs and GetK8sClustersFilterOutput values.
// You can construct a concrete instance of `GetK8sClustersFilterInput` via:
//
//	GetK8sClustersFilterArgs{...}
type GetK8sClustersFilterInput interface {
	pulumi.Input

	ToGetK8sClustersFilterOutput() GetK8sClustersFilterOutput
	ToGetK8sClustersFilterOutputWithContext(context.Context) GetK8sClustersFilterOutput
}

type GetK8sClustersFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetK8sClustersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersFilter)(nil)).Elem()
}

func (i GetK8sClustersFilterArgs) ToGetK8sClustersFilterOutput() GetK8sClustersFilterOutput {
	return i.ToGetK8sClustersFilterOutputWithContext(context.Background())
}

func (i GetK8sClustersFilterArgs) ToGetK8sClustersFilterOutputWithContext(ctx context.Context) GetK8sClustersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersFilterOutput)
}

// GetK8sClustersFilterArrayInput is an input type that accepts GetK8sClustersFilterArray and GetK8sClustersFilterArrayOutput values.
// You can construct a concrete instance of `GetK8sClustersFilterArrayInput` via:
//
//	GetK8sClustersFilterArray{ GetK8sClustersFilterArgs{...} }
type GetK8sClustersFilterArrayInput interface {
	pulumi.Input

	ToGetK8sClustersFilterArrayOutput() GetK8sClustersFilterArrayOutput
	ToGetK8sClustersFilterArrayOutputWithContext(context.Context) GetK8sClustersFilterArrayOutput
}

type GetK8sClustersFilterArray []GetK8sClustersFilterInput

func (GetK8sClustersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersFilter)(nil)).Elem()
}

func (i GetK8sClustersFilterArray) ToGetK8sClustersFilterArrayOutput() GetK8sClustersFilterArrayOutput {
	return i.ToGetK8sClustersFilterArrayOutputWithContext(context.Background())
}

func (i GetK8sClustersFilterArray) ToGetK8sClustersFilterArrayOutputWithContext(ctx context.Context) GetK8sClustersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sClustersFilterArrayOutput)
}

type GetK8sClustersFilterOutput struct{ *pulumi.OutputState }

func (GetK8sClustersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sClustersFilter)(nil)).Elem()
}

func (o GetK8sClustersFilterOutput) ToGetK8sClustersFilterOutput() GetK8sClustersFilterOutput {
	return o
}

func (o GetK8sClustersFilterOutput) ToGetK8sClustersFilterOutputWithContext(ctx context.Context) GetK8sClustersFilterOutput {
	return o
}

func (o GetK8sClustersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetK8sClustersFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sClustersFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetK8sClustersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetK8sClustersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sClustersFilter)(nil)).Elem()
}

func (o GetK8sClustersFilterArrayOutput) ToGetK8sClustersFilterArrayOutput() GetK8sClustersFilterArrayOutput {
	return o
}

func (o GetK8sClustersFilterArrayOutput) ToGetK8sClustersFilterArrayOutputWithContext(ctx context.Context) GetK8sClustersFilterArrayOutput {
	return o
}

func (o GetK8sClustersFilterArrayOutput) Index(i pulumi.IntInput) GetK8sClustersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sClustersFilter {
		return vs[0].([]GetK8sClustersFilter)[vs[1].(int)]
	}).(GetK8sClustersFilterOutput)
}

type GetK8sNodePoolNodesNode struct {
	Id *string `pulumi:"id"`
	// The kubernetes version
	K8sVersion string `pulumi:"k8sVersion"`
	// The kubernetes node name
	Name *string `pulumi:"name"`
	// A valid private IP
	PrivateIp *string `pulumi:"privateIp"`
	// A valid public IP
	PublicIp *string `pulumi:"publicIp"`
}

// GetK8sNodePoolNodesNodeInput is an input type that accepts GetK8sNodePoolNodesNodeArgs and GetK8sNodePoolNodesNodeOutput values.
// You can construct a concrete instance of `GetK8sNodePoolNodesNodeInput` via:
//
//	GetK8sNodePoolNodesNodeArgs{...}
type GetK8sNodePoolNodesNodeInput interface {
	pulumi.Input

	ToGetK8sNodePoolNodesNodeOutput() GetK8sNodePoolNodesNodeOutput
	ToGetK8sNodePoolNodesNodeOutputWithContext(context.Context) GetK8sNodePoolNodesNodeOutput
}

type GetK8sNodePoolNodesNodeArgs struct {
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The kubernetes version
	K8sVersion pulumi.StringInput `pulumi:"k8sVersion"`
	// The kubernetes node name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A valid private IP
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
	// A valid public IP
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
}

func (GetK8sNodePoolNodesNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sNodePoolNodesNode)(nil)).Elem()
}

func (i GetK8sNodePoolNodesNodeArgs) ToGetK8sNodePoolNodesNodeOutput() GetK8sNodePoolNodesNodeOutput {
	return i.ToGetK8sNodePoolNodesNodeOutputWithContext(context.Background())
}

func (i GetK8sNodePoolNodesNodeArgs) ToGetK8sNodePoolNodesNodeOutputWithContext(ctx context.Context) GetK8sNodePoolNodesNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sNodePoolNodesNodeOutput)
}

// GetK8sNodePoolNodesNodeArrayInput is an input type that accepts GetK8sNodePoolNodesNodeArray and GetK8sNodePoolNodesNodeArrayOutput values.
// You can construct a concrete instance of `GetK8sNodePoolNodesNodeArrayInput` via:
//
//	GetK8sNodePoolNodesNodeArray{ GetK8sNodePoolNodesNodeArgs{...} }
type GetK8sNodePoolNodesNodeArrayInput interface {
	pulumi.Input

	ToGetK8sNodePoolNodesNodeArrayOutput() GetK8sNodePoolNodesNodeArrayOutput
	ToGetK8sNodePoolNodesNodeArrayOutputWithContext(context.Context) GetK8sNodePoolNodesNodeArrayOutput
}

type GetK8sNodePoolNodesNodeArray []GetK8sNodePoolNodesNodeInput

func (GetK8sNodePoolNodesNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sNodePoolNodesNode)(nil)).Elem()
}

func (i GetK8sNodePoolNodesNodeArray) ToGetK8sNodePoolNodesNodeArrayOutput() GetK8sNodePoolNodesNodeArrayOutput {
	return i.ToGetK8sNodePoolNodesNodeArrayOutputWithContext(context.Background())
}

func (i GetK8sNodePoolNodesNodeArray) ToGetK8sNodePoolNodesNodeArrayOutputWithContext(ctx context.Context) GetK8sNodePoolNodesNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetK8sNodePoolNodesNodeArrayOutput)
}

type GetK8sNodePoolNodesNodeOutput struct{ *pulumi.OutputState }

func (GetK8sNodePoolNodesNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetK8sNodePoolNodesNode)(nil)).Elem()
}

func (o GetK8sNodePoolNodesNodeOutput) ToGetK8sNodePoolNodesNodeOutput() GetK8sNodePoolNodesNodeOutput {
	return o
}

func (o GetK8sNodePoolNodesNodeOutput) ToGetK8sNodePoolNodesNodeOutputWithContext(ctx context.Context) GetK8sNodePoolNodesNodeOutput {
	return o
}

func (o GetK8sNodePoolNodesNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetK8sNodePoolNodesNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The kubernetes version
func (o GetK8sNodePoolNodesNodeOutput) K8sVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetK8sNodePoolNodesNode) string { return v.K8sVersion }).(pulumi.StringOutput)
}

// The kubernetes node name
func (o GetK8sNodePoolNodesNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetK8sNodePoolNodesNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A valid private IP
func (o GetK8sNodePoolNodesNodeOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetK8sNodePoolNodesNode) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

// A valid public IP
func (o GetK8sNodePoolNodesNodeOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetK8sNodePoolNodesNode) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

type GetK8sNodePoolNodesNodeArrayOutput struct{ *pulumi.OutputState }

func (GetK8sNodePoolNodesNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetK8sNodePoolNodesNode)(nil)).Elem()
}

func (o GetK8sNodePoolNodesNodeArrayOutput) ToGetK8sNodePoolNodesNodeArrayOutput() GetK8sNodePoolNodesNodeArrayOutput {
	return o
}

func (o GetK8sNodePoolNodesNodeArrayOutput) ToGetK8sNodePoolNodesNodeArrayOutputWithContext(ctx context.Context) GetK8sNodePoolNodesNodeArrayOutput {
	return o
}

func (o GetK8sNodePoolNodesNodeArrayOutput) Index(i pulumi.IntInput) GetK8sNodePoolNodesNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetK8sNodePoolNodesNode {
		return vs[0].([]GetK8sNodePoolNodesNode)[vs[1].(int)]
	}).(GetK8sNodePoolNodesNodeOutput)
}

type GetLocationCpuArchitecture struct {
	// A valid CPU family name.
	CpuFamily string `pulumi:"cpuFamily"`
	// The maximum number of cores available.
	MaxCores int `pulumi:"maxCores"`
	// The maximum number of RAM in MB.
	MaxRam int `pulumi:"maxRam"`
	// A valid CPU vendor name.
	Vendor string `pulumi:"vendor"`
}

// GetLocationCpuArchitectureInput is an input type that accepts GetLocationCpuArchitectureArgs and GetLocationCpuArchitectureOutput values.
// You can construct a concrete instance of `GetLocationCpuArchitectureInput` via:
//
//	GetLocationCpuArchitectureArgs{...}
type GetLocationCpuArchitectureInput interface {
	pulumi.Input

	ToGetLocationCpuArchitectureOutput() GetLocationCpuArchitectureOutput
	ToGetLocationCpuArchitectureOutputWithContext(context.Context) GetLocationCpuArchitectureOutput
}

type GetLocationCpuArchitectureArgs struct {
	// A valid CPU family name.
	CpuFamily pulumi.StringInput `pulumi:"cpuFamily"`
	// The maximum number of cores available.
	MaxCores pulumi.IntInput `pulumi:"maxCores"`
	// The maximum number of RAM in MB.
	MaxRam pulumi.IntInput `pulumi:"maxRam"`
	// A valid CPU vendor name.
	Vendor pulumi.StringInput `pulumi:"vendor"`
}

func (GetLocationCpuArchitectureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationCpuArchitecture)(nil)).Elem()
}

func (i GetLocationCpuArchitectureArgs) ToGetLocationCpuArchitectureOutput() GetLocationCpuArchitectureOutput {
	return i.ToGetLocationCpuArchitectureOutputWithContext(context.Background())
}

func (i GetLocationCpuArchitectureArgs) ToGetLocationCpuArchitectureOutputWithContext(ctx context.Context) GetLocationCpuArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationCpuArchitectureOutput)
}

// GetLocationCpuArchitectureArrayInput is an input type that accepts GetLocationCpuArchitectureArray and GetLocationCpuArchitectureArrayOutput values.
// You can construct a concrete instance of `GetLocationCpuArchitectureArrayInput` via:
//
//	GetLocationCpuArchitectureArray{ GetLocationCpuArchitectureArgs{...} }
type GetLocationCpuArchitectureArrayInput interface {
	pulumi.Input

	ToGetLocationCpuArchitectureArrayOutput() GetLocationCpuArchitectureArrayOutput
	ToGetLocationCpuArchitectureArrayOutputWithContext(context.Context) GetLocationCpuArchitectureArrayOutput
}

type GetLocationCpuArchitectureArray []GetLocationCpuArchitectureInput

func (GetLocationCpuArchitectureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationCpuArchitecture)(nil)).Elem()
}

func (i GetLocationCpuArchitectureArray) ToGetLocationCpuArchitectureArrayOutput() GetLocationCpuArchitectureArrayOutput {
	return i.ToGetLocationCpuArchitectureArrayOutputWithContext(context.Background())
}

func (i GetLocationCpuArchitectureArray) ToGetLocationCpuArchitectureArrayOutputWithContext(ctx context.Context) GetLocationCpuArchitectureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationCpuArchitectureArrayOutput)
}

type GetLocationCpuArchitectureOutput struct{ *pulumi.OutputState }

func (GetLocationCpuArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationCpuArchitecture)(nil)).Elem()
}

func (o GetLocationCpuArchitectureOutput) ToGetLocationCpuArchitectureOutput() GetLocationCpuArchitectureOutput {
	return o
}

func (o GetLocationCpuArchitectureOutput) ToGetLocationCpuArchitectureOutputWithContext(ctx context.Context) GetLocationCpuArchitectureOutput {
	return o
}

// A valid CPU family name.
func (o GetLocationCpuArchitectureOutput) CpuFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationCpuArchitecture) string { return v.CpuFamily }).(pulumi.StringOutput)
}

// The maximum number of cores available.
func (o GetLocationCpuArchitectureOutput) MaxCores() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocationCpuArchitecture) int { return v.MaxCores }).(pulumi.IntOutput)
}

// The maximum number of RAM in MB.
func (o GetLocationCpuArchitectureOutput) MaxRam() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocationCpuArchitecture) int { return v.MaxRam }).(pulumi.IntOutput)
}

// A valid CPU vendor name.
func (o GetLocationCpuArchitectureOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationCpuArchitecture) string { return v.Vendor }).(pulumi.StringOutput)
}

type GetLocationCpuArchitectureArrayOutput struct{ *pulumi.OutputState }

func (GetLocationCpuArchitectureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationCpuArchitecture)(nil)).Elem()
}

func (o GetLocationCpuArchitectureArrayOutput) ToGetLocationCpuArchitectureArrayOutput() GetLocationCpuArchitectureArrayOutput {
	return o
}

func (o GetLocationCpuArchitectureArrayOutput) ToGetLocationCpuArchitectureArrayOutputWithContext(ctx context.Context) GetLocationCpuArchitectureArrayOutput {
	return o
}

func (o GetLocationCpuArchitectureArrayOutput) Index(i pulumi.IntInput) GetLocationCpuArchitectureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationCpuArchitecture {
		return vs[0].([]GetLocationCpuArchitecture)[vs[1].(int)]
	}).(GetLocationCpuArchitectureOutput)
}

type GetMariadbBackupsBackup struct {
	// The list of backups for the specified cluster
	BaseBackups []GetMariadbBackupsBackupBaseBackup `pulumi:"baseBackups"`
	// The unique ID of the cluster that was backed up
	ClusterId string `pulumi:"clusterId"`
	// The oldest available timestamp to which you can restore
	EarliestRecoveryTargetTime string `pulumi:"earliestRecoveryTargetTime"`
	// Size of all base backups in Mebibytes (MiB). This is at least the sum of all base backup sizes
	Size int `pulumi:"size"`
}

// GetMariadbBackupsBackupInput is an input type that accepts GetMariadbBackupsBackupArgs and GetMariadbBackupsBackupOutput values.
// You can construct a concrete instance of `GetMariadbBackupsBackupInput` via:
//
//	GetMariadbBackupsBackupArgs{...}
type GetMariadbBackupsBackupInput interface {
	pulumi.Input

	ToGetMariadbBackupsBackupOutput() GetMariadbBackupsBackupOutput
	ToGetMariadbBackupsBackupOutputWithContext(context.Context) GetMariadbBackupsBackupOutput
}

type GetMariadbBackupsBackupArgs struct {
	// The list of backups for the specified cluster
	BaseBackups GetMariadbBackupsBackupBaseBackupArrayInput `pulumi:"baseBackups"`
	// The unique ID of the cluster that was backed up
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The oldest available timestamp to which you can restore
	EarliestRecoveryTargetTime pulumi.StringInput `pulumi:"earliestRecoveryTargetTime"`
	// Size of all base backups in Mebibytes (MiB). This is at least the sum of all base backup sizes
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetMariadbBackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariadbBackupsBackup)(nil)).Elem()
}

func (i GetMariadbBackupsBackupArgs) ToGetMariadbBackupsBackupOutput() GetMariadbBackupsBackupOutput {
	return i.ToGetMariadbBackupsBackupOutputWithContext(context.Background())
}

func (i GetMariadbBackupsBackupArgs) ToGetMariadbBackupsBackupOutputWithContext(ctx context.Context) GetMariadbBackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMariadbBackupsBackupOutput)
}

// GetMariadbBackupsBackupArrayInput is an input type that accepts GetMariadbBackupsBackupArray and GetMariadbBackupsBackupArrayOutput values.
// You can construct a concrete instance of `GetMariadbBackupsBackupArrayInput` via:
//
//	GetMariadbBackupsBackupArray{ GetMariadbBackupsBackupArgs{...} }
type GetMariadbBackupsBackupArrayInput interface {
	pulumi.Input

	ToGetMariadbBackupsBackupArrayOutput() GetMariadbBackupsBackupArrayOutput
	ToGetMariadbBackupsBackupArrayOutputWithContext(context.Context) GetMariadbBackupsBackupArrayOutput
}

type GetMariadbBackupsBackupArray []GetMariadbBackupsBackupInput

func (GetMariadbBackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMariadbBackupsBackup)(nil)).Elem()
}

func (i GetMariadbBackupsBackupArray) ToGetMariadbBackupsBackupArrayOutput() GetMariadbBackupsBackupArrayOutput {
	return i.ToGetMariadbBackupsBackupArrayOutputWithContext(context.Background())
}

func (i GetMariadbBackupsBackupArray) ToGetMariadbBackupsBackupArrayOutputWithContext(ctx context.Context) GetMariadbBackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMariadbBackupsBackupArrayOutput)
}

type GetMariadbBackupsBackupOutput struct{ *pulumi.OutputState }

func (GetMariadbBackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariadbBackupsBackup)(nil)).Elem()
}

func (o GetMariadbBackupsBackupOutput) ToGetMariadbBackupsBackupOutput() GetMariadbBackupsBackupOutput {
	return o
}

func (o GetMariadbBackupsBackupOutput) ToGetMariadbBackupsBackupOutputWithContext(ctx context.Context) GetMariadbBackupsBackupOutput {
	return o
}

// The list of backups for the specified cluster
func (o GetMariadbBackupsBackupOutput) BaseBackups() GetMariadbBackupsBackupBaseBackupArrayOutput {
	return o.ApplyT(func(v GetMariadbBackupsBackup) []GetMariadbBackupsBackupBaseBackup { return v.BaseBackups }).(GetMariadbBackupsBackupBaseBackupArrayOutput)
}

// The unique ID of the cluster that was backed up
func (o GetMariadbBackupsBackupOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariadbBackupsBackup) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The oldest available timestamp to which you can restore
func (o GetMariadbBackupsBackupOutput) EarliestRecoveryTargetTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariadbBackupsBackup) string { return v.EarliestRecoveryTargetTime }).(pulumi.StringOutput)
}

// Size of all base backups in Mebibytes (MiB). This is at least the sum of all base backup sizes
func (o GetMariadbBackupsBackupOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetMariadbBackupsBackup) int { return v.Size }).(pulumi.IntOutput)
}

type GetMariadbBackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (GetMariadbBackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMariadbBackupsBackup)(nil)).Elem()
}

func (o GetMariadbBackupsBackupArrayOutput) ToGetMariadbBackupsBackupArrayOutput() GetMariadbBackupsBackupArrayOutput {
	return o
}

func (o GetMariadbBackupsBackupArrayOutput) ToGetMariadbBackupsBackupArrayOutputWithContext(ctx context.Context) GetMariadbBackupsBackupArrayOutput {
	return o
}

func (o GetMariadbBackupsBackupArrayOutput) Index(i pulumi.IntInput) GetMariadbBackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMariadbBackupsBackup {
		return vs[0].([]GetMariadbBackupsBackup)[vs[1].(int)]
	}).(GetMariadbBackupsBackupOutput)
}

type GetMariadbBackupsBackupBaseBackup struct {
	// The ISO 8601 creation timestamp
	Created string `pulumi:"created"`
	// The size of the backup in Mebibytes (MiB). This is the size of the binary backup file that was stored
	Size int `pulumi:"size"`
}

// GetMariadbBackupsBackupBaseBackupInput is an input type that accepts GetMariadbBackupsBackupBaseBackupArgs and GetMariadbBackupsBackupBaseBackupOutput values.
// You can construct a concrete instance of `GetMariadbBackupsBackupBaseBackupInput` via:
//
//	GetMariadbBackupsBackupBaseBackupArgs{...}
type GetMariadbBackupsBackupBaseBackupInput interface {
	pulumi.Input

	ToGetMariadbBackupsBackupBaseBackupOutput() GetMariadbBackupsBackupBaseBackupOutput
	ToGetMariadbBackupsBackupBaseBackupOutputWithContext(context.Context) GetMariadbBackupsBackupBaseBackupOutput
}

type GetMariadbBackupsBackupBaseBackupArgs struct {
	// The ISO 8601 creation timestamp
	Created pulumi.StringInput `pulumi:"created"`
	// The size of the backup in Mebibytes (MiB). This is the size of the binary backup file that was stored
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetMariadbBackupsBackupBaseBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariadbBackupsBackupBaseBackup)(nil)).Elem()
}

func (i GetMariadbBackupsBackupBaseBackupArgs) ToGetMariadbBackupsBackupBaseBackupOutput() GetMariadbBackupsBackupBaseBackupOutput {
	return i.ToGetMariadbBackupsBackupBaseBackupOutputWithContext(context.Background())
}

func (i GetMariadbBackupsBackupBaseBackupArgs) ToGetMariadbBackupsBackupBaseBackupOutputWithContext(ctx context.Context) GetMariadbBackupsBackupBaseBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMariadbBackupsBackupBaseBackupOutput)
}

// GetMariadbBackupsBackupBaseBackupArrayInput is an input type that accepts GetMariadbBackupsBackupBaseBackupArray and GetMariadbBackupsBackupBaseBackupArrayOutput values.
// You can construct a concrete instance of `GetMariadbBackupsBackupBaseBackupArrayInput` via:
//
//	GetMariadbBackupsBackupBaseBackupArray{ GetMariadbBackupsBackupBaseBackupArgs{...} }
type GetMariadbBackupsBackupBaseBackupArrayInput interface {
	pulumi.Input

	ToGetMariadbBackupsBackupBaseBackupArrayOutput() GetMariadbBackupsBackupBaseBackupArrayOutput
	ToGetMariadbBackupsBackupBaseBackupArrayOutputWithContext(context.Context) GetMariadbBackupsBackupBaseBackupArrayOutput
}

type GetMariadbBackupsBackupBaseBackupArray []GetMariadbBackupsBackupBaseBackupInput

func (GetMariadbBackupsBackupBaseBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMariadbBackupsBackupBaseBackup)(nil)).Elem()
}

func (i GetMariadbBackupsBackupBaseBackupArray) ToGetMariadbBackupsBackupBaseBackupArrayOutput() GetMariadbBackupsBackupBaseBackupArrayOutput {
	return i.ToGetMariadbBackupsBackupBaseBackupArrayOutputWithContext(context.Background())
}

func (i GetMariadbBackupsBackupBaseBackupArray) ToGetMariadbBackupsBackupBaseBackupArrayOutputWithContext(ctx context.Context) GetMariadbBackupsBackupBaseBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMariadbBackupsBackupBaseBackupArrayOutput)
}

type GetMariadbBackupsBackupBaseBackupOutput struct{ *pulumi.OutputState }

func (GetMariadbBackupsBackupBaseBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMariadbBackupsBackupBaseBackup)(nil)).Elem()
}

func (o GetMariadbBackupsBackupBaseBackupOutput) ToGetMariadbBackupsBackupBaseBackupOutput() GetMariadbBackupsBackupBaseBackupOutput {
	return o
}

func (o GetMariadbBackupsBackupBaseBackupOutput) ToGetMariadbBackupsBackupBaseBackupOutputWithContext(ctx context.Context) GetMariadbBackupsBackupBaseBackupOutput {
	return o
}

// The ISO 8601 creation timestamp
func (o GetMariadbBackupsBackupBaseBackupOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetMariadbBackupsBackupBaseBackup) string { return v.Created }).(pulumi.StringOutput)
}

// The size of the backup in Mebibytes (MiB). This is the size of the binary backup file that was stored
func (o GetMariadbBackupsBackupBaseBackupOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetMariadbBackupsBackupBaseBackup) int { return v.Size }).(pulumi.IntOutput)
}

type GetMariadbBackupsBackupBaseBackupArrayOutput struct{ *pulumi.OutputState }

func (GetMariadbBackupsBackupBaseBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMariadbBackupsBackupBaseBackup)(nil)).Elem()
}

func (o GetMariadbBackupsBackupBaseBackupArrayOutput) ToGetMariadbBackupsBackupBaseBackupArrayOutput() GetMariadbBackupsBackupBaseBackupArrayOutput {
	return o
}

func (o GetMariadbBackupsBackupBaseBackupArrayOutput) ToGetMariadbBackupsBackupBaseBackupArrayOutputWithContext(ctx context.Context) GetMariadbBackupsBackupBaseBackupArrayOutput {
	return o
}

func (o GetMariadbBackupsBackupBaseBackupArrayOutput) Index(i pulumi.IntInput) GetMariadbBackupsBackupBaseBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMariadbBackupsBackupBaseBackup {
		return vs[0].([]GetMariadbBackupsBackupBaseBackup)[vs[1].(int)]
	}).(GetMariadbBackupsBackupBaseBackupOutput)
}

type GetPgBackupsClusterBackup struct {
	// The unique ID of the cluster
	ClusterId string `pulumi:"clusterId"`
	// The oldest available timestamp to which you can restore.
	EarliestRecoveryTargetTime string `pulumi:"earliestRecoveryTargetTime"`
	// The unique ID of the resource.
	Id string `pulumi:"id"`
	// Whether a cluster currently backs up data to this backup.
	IsActive bool `pulumi:"isActive"`
	// The Object Storage location where the backups will be stored.
	Location string `pulumi:"location"`
	// Metadata of the resource
	Metadatas []GetPgBackupsClusterBackupMetadata `pulumi:"metadatas"`
	// Size of all base backups including the wal size in MB.
	Size int    `pulumi:"size"`
	Type string `pulumi:"type"`
	// The PostgreSQL version this backup was created from.
	Version string `pulumi:"version"`
}

// GetPgBackupsClusterBackupInput is an input type that accepts GetPgBackupsClusterBackupArgs and GetPgBackupsClusterBackupOutput values.
// You can construct a concrete instance of `GetPgBackupsClusterBackupInput` via:
//
//	GetPgBackupsClusterBackupArgs{...}
type GetPgBackupsClusterBackupInput interface {
	pulumi.Input

	ToGetPgBackupsClusterBackupOutput() GetPgBackupsClusterBackupOutput
	ToGetPgBackupsClusterBackupOutputWithContext(context.Context) GetPgBackupsClusterBackupOutput
}

type GetPgBackupsClusterBackupArgs struct {
	// The unique ID of the cluster
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The oldest available timestamp to which you can restore.
	EarliestRecoveryTargetTime pulumi.StringInput `pulumi:"earliestRecoveryTargetTime"`
	// The unique ID of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether a cluster currently backs up data to this backup.
	IsActive pulumi.BoolInput `pulumi:"isActive"`
	// The Object Storage location where the backups will be stored.
	Location pulumi.StringInput `pulumi:"location"`
	// Metadata of the resource
	Metadatas GetPgBackupsClusterBackupMetadataArrayInput `pulumi:"metadatas"`
	// Size of all base backups including the wal size in MB.
	Size pulumi.IntInput    `pulumi:"size"`
	Type pulumi.StringInput `pulumi:"type"`
	// The PostgreSQL version this backup was created from.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetPgBackupsClusterBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgBackupsClusterBackup)(nil)).Elem()
}

func (i GetPgBackupsClusterBackupArgs) ToGetPgBackupsClusterBackupOutput() GetPgBackupsClusterBackupOutput {
	return i.ToGetPgBackupsClusterBackupOutputWithContext(context.Background())
}

func (i GetPgBackupsClusterBackupArgs) ToGetPgBackupsClusterBackupOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgBackupsClusterBackupOutput)
}

// GetPgBackupsClusterBackupArrayInput is an input type that accepts GetPgBackupsClusterBackupArray and GetPgBackupsClusterBackupArrayOutput values.
// You can construct a concrete instance of `GetPgBackupsClusterBackupArrayInput` via:
//
//	GetPgBackupsClusterBackupArray{ GetPgBackupsClusterBackupArgs{...} }
type GetPgBackupsClusterBackupArrayInput interface {
	pulumi.Input

	ToGetPgBackupsClusterBackupArrayOutput() GetPgBackupsClusterBackupArrayOutput
	ToGetPgBackupsClusterBackupArrayOutputWithContext(context.Context) GetPgBackupsClusterBackupArrayOutput
}

type GetPgBackupsClusterBackupArray []GetPgBackupsClusterBackupInput

func (GetPgBackupsClusterBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgBackupsClusterBackup)(nil)).Elem()
}

func (i GetPgBackupsClusterBackupArray) ToGetPgBackupsClusterBackupArrayOutput() GetPgBackupsClusterBackupArrayOutput {
	return i.ToGetPgBackupsClusterBackupArrayOutputWithContext(context.Background())
}

func (i GetPgBackupsClusterBackupArray) ToGetPgBackupsClusterBackupArrayOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgBackupsClusterBackupArrayOutput)
}

type GetPgBackupsClusterBackupOutput struct{ *pulumi.OutputState }

func (GetPgBackupsClusterBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgBackupsClusterBackup)(nil)).Elem()
}

func (o GetPgBackupsClusterBackupOutput) ToGetPgBackupsClusterBackupOutput() GetPgBackupsClusterBackupOutput {
	return o
}

func (o GetPgBackupsClusterBackupOutput) ToGetPgBackupsClusterBackupOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupOutput {
	return o
}

// The unique ID of the cluster
func (o GetPgBackupsClusterBackupOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The oldest available timestamp to which you can restore.
func (o GetPgBackupsClusterBackupOutput) EarliestRecoveryTargetTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) string { return v.EarliestRecoveryTargetTime }).(pulumi.StringOutput)
}

// The unique ID of the resource.
func (o GetPgBackupsClusterBackupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) string { return v.Id }).(pulumi.StringOutput)
}

// Whether a cluster currently backs up data to this backup.
func (o GetPgBackupsClusterBackupOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) bool { return v.IsActive }).(pulumi.BoolOutput)
}

// The Object Storage location where the backups will be stored.
func (o GetPgBackupsClusterBackupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) string { return v.Location }).(pulumi.StringOutput)
}

// Metadata of the resource
func (o GetPgBackupsClusterBackupOutput) Metadatas() GetPgBackupsClusterBackupMetadataArrayOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) []GetPgBackupsClusterBackupMetadata { return v.Metadatas }).(GetPgBackupsClusterBackupMetadataArrayOutput)
}

// Size of all base backups including the wal size in MB.
func (o GetPgBackupsClusterBackupOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetPgBackupsClusterBackupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) string { return v.Type }).(pulumi.StringOutput)
}

// The PostgreSQL version this backup was created from.
func (o GetPgBackupsClusterBackupOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackup) string { return v.Version }).(pulumi.StringOutput)
}

type GetPgBackupsClusterBackupArrayOutput struct{ *pulumi.OutputState }

func (GetPgBackupsClusterBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgBackupsClusterBackup)(nil)).Elem()
}

func (o GetPgBackupsClusterBackupArrayOutput) ToGetPgBackupsClusterBackupArrayOutput() GetPgBackupsClusterBackupArrayOutput {
	return o
}

func (o GetPgBackupsClusterBackupArrayOutput) ToGetPgBackupsClusterBackupArrayOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupArrayOutput {
	return o
}

func (o GetPgBackupsClusterBackupArrayOutput) Index(i pulumi.IntInput) GetPgBackupsClusterBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgBackupsClusterBackup {
		return vs[0].([]GetPgBackupsClusterBackup)[vs[1].(int)]
	}).(GetPgBackupsClusterBackupOutput)
}

type GetPgBackupsClusterBackupMetadata struct {
	// The ISO 8601 creation timestamp.
	CreatedDate string `pulumi:"createdDate"`
}

// GetPgBackupsClusterBackupMetadataInput is an input type that accepts GetPgBackupsClusterBackupMetadataArgs and GetPgBackupsClusterBackupMetadataOutput values.
// You can construct a concrete instance of `GetPgBackupsClusterBackupMetadataInput` via:
//
//	GetPgBackupsClusterBackupMetadataArgs{...}
type GetPgBackupsClusterBackupMetadataInput interface {
	pulumi.Input

	ToGetPgBackupsClusterBackupMetadataOutput() GetPgBackupsClusterBackupMetadataOutput
	ToGetPgBackupsClusterBackupMetadataOutputWithContext(context.Context) GetPgBackupsClusterBackupMetadataOutput
}

type GetPgBackupsClusterBackupMetadataArgs struct {
	// The ISO 8601 creation timestamp.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
}

func (GetPgBackupsClusterBackupMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgBackupsClusterBackupMetadata)(nil)).Elem()
}

func (i GetPgBackupsClusterBackupMetadataArgs) ToGetPgBackupsClusterBackupMetadataOutput() GetPgBackupsClusterBackupMetadataOutput {
	return i.ToGetPgBackupsClusterBackupMetadataOutputWithContext(context.Background())
}

func (i GetPgBackupsClusterBackupMetadataArgs) ToGetPgBackupsClusterBackupMetadataOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgBackupsClusterBackupMetadataOutput)
}

// GetPgBackupsClusterBackupMetadataArrayInput is an input type that accepts GetPgBackupsClusterBackupMetadataArray and GetPgBackupsClusterBackupMetadataArrayOutput values.
// You can construct a concrete instance of `GetPgBackupsClusterBackupMetadataArrayInput` via:
//
//	GetPgBackupsClusterBackupMetadataArray{ GetPgBackupsClusterBackupMetadataArgs{...} }
type GetPgBackupsClusterBackupMetadataArrayInput interface {
	pulumi.Input

	ToGetPgBackupsClusterBackupMetadataArrayOutput() GetPgBackupsClusterBackupMetadataArrayOutput
	ToGetPgBackupsClusterBackupMetadataArrayOutputWithContext(context.Context) GetPgBackupsClusterBackupMetadataArrayOutput
}

type GetPgBackupsClusterBackupMetadataArray []GetPgBackupsClusterBackupMetadataInput

func (GetPgBackupsClusterBackupMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgBackupsClusterBackupMetadata)(nil)).Elem()
}

func (i GetPgBackupsClusterBackupMetadataArray) ToGetPgBackupsClusterBackupMetadataArrayOutput() GetPgBackupsClusterBackupMetadataArrayOutput {
	return i.ToGetPgBackupsClusterBackupMetadataArrayOutputWithContext(context.Background())
}

func (i GetPgBackupsClusterBackupMetadataArray) ToGetPgBackupsClusterBackupMetadataArrayOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgBackupsClusterBackupMetadataArrayOutput)
}

type GetPgBackupsClusterBackupMetadataOutput struct{ *pulumi.OutputState }

func (GetPgBackupsClusterBackupMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgBackupsClusterBackupMetadata)(nil)).Elem()
}

func (o GetPgBackupsClusterBackupMetadataOutput) ToGetPgBackupsClusterBackupMetadataOutput() GetPgBackupsClusterBackupMetadataOutput {
	return o
}

func (o GetPgBackupsClusterBackupMetadataOutput) ToGetPgBackupsClusterBackupMetadataOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupMetadataOutput {
	return o
}

// The ISO 8601 creation timestamp.
func (o GetPgBackupsClusterBackupMetadataOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgBackupsClusterBackupMetadata) string { return v.CreatedDate }).(pulumi.StringOutput)
}

type GetPgBackupsClusterBackupMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetPgBackupsClusterBackupMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgBackupsClusterBackupMetadata)(nil)).Elem()
}

func (o GetPgBackupsClusterBackupMetadataArrayOutput) ToGetPgBackupsClusterBackupMetadataArrayOutput() GetPgBackupsClusterBackupMetadataArrayOutput {
	return o
}

func (o GetPgBackupsClusterBackupMetadataArrayOutput) ToGetPgBackupsClusterBackupMetadataArrayOutputWithContext(ctx context.Context) GetPgBackupsClusterBackupMetadataArrayOutput {
	return o
}

func (o GetPgBackupsClusterBackupMetadataArrayOutput) Index(i pulumi.IntInput) GetPgBackupsClusterBackupMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgBackupsClusterBackupMetadata {
		return vs[0].([]GetPgBackupsClusterBackupMetadata)[vs[1].(int)]
	}).(GetPgBackupsClusterBackupMetadataOutput)
}

type GetPgDatabasesDatabase struct {
	Id    string `pulumi:"id"`
	Name  string `pulumi:"name"`
	Owner string `pulumi:"owner"`
}

// GetPgDatabasesDatabaseInput is an input type that accepts GetPgDatabasesDatabaseArgs and GetPgDatabasesDatabaseOutput values.
// You can construct a concrete instance of `GetPgDatabasesDatabaseInput` via:
//
//	GetPgDatabasesDatabaseArgs{...}
type GetPgDatabasesDatabaseInput interface {
	pulumi.Input

	ToGetPgDatabasesDatabaseOutput() GetPgDatabasesDatabaseOutput
	ToGetPgDatabasesDatabaseOutputWithContext(context.Context) GetPgDatabasesDatabaseOutput
}

type GetPgDatabasesDatabaseArgs struct {
	Id    pulumi.StringInput `pulumi:"id"`
	Name  pulumi.StringInput `pulumi:"name"`
	Owner pulumi.StringInput `pulumi:"owner"`
}

func (GetPgDatabasesDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgDatabasesDatabase)(nil)).Elem()
}

func (i GetPgDatabasesDatabaseArgs) ToGetPgDatabasesDatabaseOutput() GetPgDatabasesDatabaseOutput {
	return i.ToGetPgDatabasesDatabaseOutputWithContext(context.Background())
}

func (i GetPgDatabasesDatabaseArgs) ToGetPgDatabasesDatabaseOutputWithContext(ctx context.Context) GetPgDatabasesDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgDatabasesDatabaseOutput)
}

// GetPgDatabasesDatabaseArrayInput is an input type that accepts GetPgDatabasesDatabaseArray and GetPgDatabasesDatabaseArrayOutput values.
// You can construct a concrete instance of `GetPgDatabasesDatabaseArrayInput` via:
//
//	GetPgDatabasesDatabaseArray{ GetPgDatabasesDatabaseArgs{...} }
type GetPgDatabasesDatabaseArrayInput interface {
	pulumi.Input

	ToGetPgDatabasesDatabaseArrayOutput() GetPgDatabasesDatabaseArrayOutput
	ToGetPgDatabasesDatabaseArrayOutputWithContext(context.Context) GetPgDatabasesDatabaseArrayOutput
}

type GetPgDatabasesDatabaseArray []GetPgDatabasesDatabaseInput

func (GetPgDatabasesDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgDatabasesDatabase)(nil)).Elem()
}

func (i GetPgDatabasesDatabaseArray) ToGetPgDatabasesDatabaseArrayOutput() GetPgDatabasesDatabaseArrayOutput {
	return i.ToGetPgDatabasesDatabaseArrayOutputWithContext(context.Background())
}

func (i GetPgDatabasesDatabaseArray) ToGetPgDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetPgDatabasesDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgDatabasesDatabaseArrayOutput)
}

type GetPgDatabasesDatabaseOutput struct{ *pulumi.OutputState }

func (GetPgDatabasesDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgDatabasesDatabase)(nil)).Elem()
}

func (o GetPgDatabasesDatabaseOutput) ToGetPgDatabasesDatabaseOutput() GetPgDatabasesDatabaseOutput {
	return o
}

func (o GetPgDatabasesDatabaseOutput) ToGetPgDatabasesDatabaseOutputWithContext(ctx context.Context) GetPgDatabasesDatabaseOutput {
	return o
}

func (o GetPgDatabasesDatabaseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgDatabasesDatabase) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPgDatabasesDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgDatabasesDatabase) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPgDatabasesDatabaseOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgDatabasesDatabase) string { return v.Owner }).(pulumi.StringOutput)
}

type GetPgDatabasesDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetPgDatabasesDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgDatabasesDatabase)(nil)).Elem()
}

func (o GetPgDatabasesDatabaseArrayOutput) ToGetPgDatabasesDatabaseArrayOutput() GetPgDatabasesDatabaseArrayOutput {
	return o
}

func (o GetPgDatabasesDatabaseArrayOutput) ToGetPgDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetPgDatabasesDatabaseArrayOutput {
	return o
}

func (o GetPgDatabasesDatabaseArrayOutput) Index(i pulumi.IntInput) GetPgDatabasesDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgDatabasesDatabase {
		return vs[0].([]GetPgDatabasesDatabase)[vs[1].(int)]
	}).(GetPgDatabasesDatabaseOutput)
}

type GetServersFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetServersFilterInput is an input type that accepts GetServersFilterArgs and GetServersFilterOutput values.
// You can construct a concrete instance of `GetServersFilterInput` via:
//
//	GetServersFilterArgs{...}
type GetServersFilterInput interface {
	pulumi.Input

	ToGetServersFilterOutput() GetServersFilterOutput
	ToGetServersFilterOutputWithContext(context.Context) GetServersFilterOutput
}

type GetServersFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetServersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersFilter)(nil)).Elem()
}

func (i GetServersFilterArgs) ToGetServersFilterOutput() GetServersFilterOutput {
	return i.ToGetServersFilterOutputWithContext(context.Background())
}

func (i GetServersFilterArgs) ToGetServersFilterOutputWithContext(ctx context.Context) GetServersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersFilterOutput)
}

// GetServersFilterArrayInput is an input type that accepts GetServersFilterArray and GetServersFilterArrayOutput values.
// You can construct a concrete instance of `GetServersFilterArrayInput` via:
//
//	GetServersFilterArray{ GetServersFilterArgs{...} }
type GetServersFilterArrayInput interface {
	pulumi.Input

	ToGetServersFilterArrayOutput() GetServersFilterArrayOutput
	ToGetServersFilterArrayOutputWithContext(context.Context) GetServersFilterArrayOutput
}

type GetServersFilterArray []GetServersFilterInput

func (GetServersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersFilter)(nil)).Elem()
}

func (i GetServersFilterArray) ToGetServersFilterArrayOutput() GetServersFilterArrayOutput {
	return i.ToGetServersFilterArrayOutputWithContext(context.Background())
}

func (i GetServersFilterArray) ToGetServersFilterArrayOutputWithContext(ctx context.Context) GetServersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersFilterArrayOutput)
}

type GetServersFilterOutput struct{ *pulumi.OutputState }

func (GetServersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersFilter)(nil)).Elem()
}

func (o GetServersFilterOutput) ToGetServersFilterOutput() GetServersFilterOutput {
	return o
}

func (o GetServersFilterOutput) ToGetServersFilterOutputWithContext(ctx context.Context) GetServersFilterOutput {
	return o
}

func (o GetServersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServersFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetServersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetServersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersFilter)(nil)).Elem()
}

func (o GetServersFilterArrayOutput) ToGetServersFilterArrayOutput() GetServersFilterArrayOutput {
	return o
}

func (o GetServersFilterArrayOutput) ToGetServersFilterArrayOutputWithContext(ctx context.Context) GetServersFilterArrayOutput {
	return o
}

func (o GetServersFilterArrayOutput) Index(i pulumi.IntInput) GetServersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServersFilter {
		return vs[0].([]GetServersFilter)[vs[1].(int)]
	}).(GetServersFilterOutput)
}

type GetServersServer struct {
	AvailabilityZone string                  `pulumi:"availabilityZone"`
	BootCdrom        string                  `pulumi:"bootCdrom"`
	BootImage        string                  `pulumi:"bootImage"`
	BootVolume       string                  `pulumi:"bootVolume"`
	Cdroms           []GetServersServerCdrom `pulumi:"cdroms"`
	Cores            int                     `pulumi:"cores"`
	CpuFamily        string                  `pulumi:"cpuFamily"`
	// The unique ID of the server.
	Id           string                   `pulumi:"id"`
	Labels       []GetServersServerLabel  `pulumi:"labels"`
	Name         *string                  `pulumi:"name"`
	Nics         []GetServersServerNic    `pulumi:"nics"`
	Ram          int                      `pulumi:"ram"`
	TemplateUuid *string                  `pulumi:"templateUuid"`
	Token        string                   `pulumi:"token"`
	Type         string                   `pulumi:"type"`
	VmState      string                   `pulumi:"vmState"`
	Volumes      []GetServersServerVolume `pulumi:"volumes"`
}

// GetServersServerInput is an input type that accepts GetServersServerArgs and GetServersServerOutput values.
// You can construct a concrete instance of `GetServersServerInput` via:
//
//	GetServersServerArgs{...}
type GetServersServerInput interface {
	pulumi.Input

	ToGetServersServerOutput() GetServersServerOutput
	ToGetServersServerOutputWithContext(context.Context) GetServersServerOutput
}

type GetServersServerArgs struct {
	AvailabilityZone pulumi.StringInput              `pulumi:"availabilityZone"`
	BootCdrom        pulumi.StringInput              `pulumi:"bootCdrom"`
	BootImage        pulumi.StringInput              `pulumi:"bootImage"`
	BootVolume       pulumi.StringInput              `pulumi:"bootVolume"`
	Cdroms           GetServersServerCdromArrayInput `pulumi:"cdroms"`
	Cores            pulumi.IntInput                 `pulumi:"cores"`
	CpuFamily        pulumi.StringInput              `pulumi:"cpuFamily"`
	// The unique ID of the server.
	Id           pulumi.StringInput               `pulumi:"id"`
	Labels       GetServersServerLabelArrayInput  `pulumi:"labels"`
	Name         pulumi.StringPtrInput            `pulumi:"name"`
	Nics         GetServersServerNicArrayInput    `pulumi:"nics"`
	Ram          pulumi.IntInput                  `pulumi:"ram"`
	TemplateUuid pulumi.StringPtrInput            `pulumi:"templateUuid"`
	Token        pulumi.StringInput               `pulumi:"token"`
	Type         pulumi.StringInput               `pulumi:"type"`
	VmState      pulumi.StringInput               `pulumi:"vmState"`
	Volumes      GetServersServerVolumeArrayInput `pulumi:"volumes"`
}

func (GetServersServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServer)(nil)).Elem()
}

func (i GetServersServerArgs) ToGetServersServerOutput() GetServersServerOutput {
	return i.ToGetServersServerOutputWithContext(context.Background())
}

func (i GetServersServerArgs) ToGetServersServerOutputWithContext(ctx context.Context) GetServersServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerOutput)
}

// GetServersServerArrayInput is an input type that accepts GetServersServerArray and GetServersServerArrayOutput values.
// You can construct a concrete instance of `GetServersServerArrayInput` via:
//
//	GetServersServerArray{ GetServersServerArgs{...} }
type GetServersServerArrayInput interface {
	pulumi.Input

	ToGetServersServerArrayOutput() GetServersServerArrayOutput
	ToGetServersServerArrayOutputWithContext(context.Context) GetServersServerArrayOutput
}

type GetServersServerArray []GetServersServerInput

func (GetServersServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServer)(nil)).Elem()
}

func (i GetServersServerArray) ToGetServersServerArrayOutput() GetServersServerArrayOutput {
	return i.ToGetServersServerArrayOutputWithContext(context.Background())
}

func (i GetServersServerArray) ToGetServersServerArrayOutputWithContext(ctx context.Context) GetServersServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerArrayOutput)
}

type GetServersServerOutput struct{ *pulumi.OutputState }

func (GetServersServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServer)(nil)).Elem()
}

func (o GetServersServerOutput) ToGetServersServerOutput() GetServersServerOutput {
	return o
}

func (o GetServersServerOutput) ToGetServersServerOutputWithContext(ctx context.Context) GetServersServerOutput {
	return o
}

func (o GetServersServerOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) BootCdrom() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.BootCdrom }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) BootImage() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.BootImage }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) BootVolume() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.BootVolume }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) Cdroms() GetServersServerCdromArrayOutput {
	return o.ApplyT(func(v GetServersServer) []GetServersServerCdrom { return v.Cdroms }).(GetServersServerCdromArrayOutput)
}

func (o GetServersServerOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServer) int { return v.Cores }).(pulumi.IntOutput)
}

func (o GetServersServerOutput) CpuFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.CpuFamily }).(pulumi.StringOutput)
}

// The unique ID of the server.
func (o GetServersServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) Labels() GetServersServerLabelArrayOutput {
	return o.ApplyT(func(v GetServersServer) []GetServersServerLabel { return v.Labels }).(GetServersServerLabelArrayOutput)
}

func (o GetServersServerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServersServer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetServersServerOutput) Nics() GetServersServerNicArrayOutput {
	return o.ApplyT(func(v GetServersServer) []GetServersServerNic { return v.Nics }).(GetServersServerNicArrayOutput)
}

func (o GetServersServerOutput) Ram() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServer) int { return v.Ram }).(pulumi.IntOutput)
}

func (o GetServersServerOutput) TemplateUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServersServer) *string { return v.TemplateUuid }).(pulumi.StringPtrOutput)
}

func (o GetServersServerOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.Token }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) VmState() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServer) string { return v.VmState }).(pulumi.StringOutput)
}

func (o GetServersServerOutput) Volumes() GetServersServerVolumeArrayOutput {
	return o.ApplyT(func(v GetServersServer) []GetServersServerVolume { return v.Volumes }).(GetServersServerVolumeArrayOutput)
}

type GetServersServerArrayOutput struct{ *pulumi.OutputState }

func (GetServersServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServer)(nil)).Elem()
}

func (o GetServersServerArrayOutput) ToGetServersServerArrayOutput() GetServersServerArrayOutput {
	return o
}

func (o GetServersServerArrayOutput) ToGetServersServerArrayOutputWithContext(ctx context.Context) GetServersServerArrayOutput {
	return o
}

func (o GetServersServerArrayOutput) Index(i pulumi.IntInput) GetServersServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServersServer {
		return vs[0].([]GetServersServer)[vs[1].(int)]
	}).(GetServersServerOutput)
}

type GetServersServerCdrom struct {
	CloudInit           string   `pulumi:"cloudInit"`
	CpuHotPlug          bool     `pulumi:"cpuHotPlug"`
	CpuHotUnplug        bool     `pulumi:"cpuHotUnplug"`
	Description         string   `pulumi:"description"`
	DiscScsiHotPlug     bool     `pulumi:"discScsiHotPlug"`
	DiscScsiHotUnplug   bool     `pulumi:"discScsiHotUnplug"`
	DiscVirtioHotPlug   bool     `pulumi:"discVirtioHotPlug"`
	DiscVirtioHotUnplug bool     `pulumi:"discVirtioHotUnplug"`
	Id                  string   `pulumi:"id"`
	ImageAliases        []string `pulumi:"imageAliases"`
	ImageType           string   `pulumi:"imageType"`
	LicenceType         string   `pulumi:"licenceType"`
	Location            string   `pulumi:"location"`
	Name                string   `pulumi:"name"`
	NicHotPlug          bool     `pulumi:"nicHotPlug"`
	NicHotUnplug        bool     `pulumi:"nicHotUnplug"`
	Public              bool     `pulumi:"public"`
	RamHotPlug          bool     `pulumi:"ramHotPlug"`
	RamHotUnplug        bool     `pulumi:"ramHotUnplug"`
	Size                float64  `pulumi:"size"`
}

// GetServersServerCdromInput is an input type that accepts GetServersServerCdromArgs and GetServersServerCdromOutput values.
// You can construct a concrete instance of `GetServersServerCdromInput` via:
//
//	GetServersServerCdromArgs{...}
type GetServersServerCdromInput interface {
	pulumi.Input

	ToGetServersServerCdromOutput() GetServersServerCdromOutput
	ToGetServersServerCdromOutputWithContext(context.Context) GetServersServerCdromOutput
}

type GetServersServerCdromArgs struct {
	CloudInit           pulumi.StringInput      `pulumi:"cloudInit"`
	CpuHotPlug          pulumi.BoolInput        `pulumi:"cpuHotPlug"`
	CpuHotUnplug        pulumi.BoolInput        `pulumi:"cpuHotUnplug"`
	Description         pulumi.StringInput      `pulumi:"description"`
	DiscScsiHotPlug     pulumi.BoolInput        `pulumi:"discScsiHotPlug"`
	DiscScsiHotUnplug   pulumi.BoolInput        `pulumi:"discScsiHotUnplug"`
	DiscVirtioHotPlug   pulumi.BoolInput        `pulumi:"discVirtioHotPlug"`
	DiscVirtioHotUnplug pulumi.BoolInput        `pulumi:"discVirtioHotUnplug"`
	Id                  pulumi.StringInput      `pulumi:"id"`
	ImageAliases        pulumi.StringArrayInput `pulumi:"imageAliases"`
	ImageType           pulumi.StringInput      `pulumi:"imageType"`
	LicenceType         pulumi.StringInput      `pulumi:"licenceType"`
	Location            pulumi.StringInput      `pulumi:"location"`
	Name                pulumi.StringInput      `pulumi:"name"`
	NicHotPlug          pulumi.BoolInput        `pulumi:"nicHotPlug"`
	NicHotUnplug        pulumi.BoolInput        `pulumi:"nicHotUnplug"`
	Public              pulumi.BoolInput        `pulumi:"public"`
	RamHotPlug          pulumi.BoolInput        `pulumi:"ramHotPlug"`
	RamHotUnplug        pulumi.BoolInput        `pulumi:"ramHotUnplug"`
	Size                pulumi.Float64Input     `pulumi:"size"`
}

func (GetServersServerCdromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerCdrom)(nil)).Elem()
}

func (i GetServersServerCdromArgs) ToGetServersServerCdromOutput() GetServersServerCdromOutput {
	return i.ToGetServersServerCdromOutputWithContext(context.Background())
}

func (i GetServersServerCdromArgs) ToGetServersServerCdromOutputWithContext(ctx context.Context) GetServersServerCdromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerCdromOutput)
}

// GetServersServerCdromArrayInput is an input type that accepts GetServersServerCdromArray and GetServersServerCdromArrayOutput values.
// You can construct a concrete instance of `GetServersServerCdromArrayInput` via:
//
//	GetServersServerCdromArray{ GetServersServerCdromArgs{...} }
type GetServersServerCdromArrayInput interface {
	pulumi.Input

	ToGetServersServerCdromArrayOutput() GetServersServerCdromArrayOutput
	ToGetServersServerCdromArrayOutputWithContext(context.Context) GetServersServerCdromArrayOutput
}

type GetServersServerCdromArray []GetServersServerCdromInput

func (GetServersServerCdromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerCdrom)(nil)).Elem()
}

func (i GetServersServerCdromArray) ToGetServersServerCdromArrayOutput() GetServersServerCdromArrayOutput {
	return i.ToGetServersServerCdromArrayOutputWithContext(context.Background())
}

func (i GetServersServerCdromArray) ToGetServersServerCdromArrayOutputWithContext(ctx context.Context) GetServersServerCdromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerCdromArrayOutput)
}

type GetServersServerCdromOutput struct{ *pulumi.OutputState }

func (GetServersServerCdromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerCdrom)(nil)).Elem()
}

func (o GetServersServerCdromOutput) ToGetServersServerCdromOutput() GetServersServerCdromOutput {
	return o
}

func (o GetServersServerCdromOutput) ToGetServersServerCdromOutputWithContext(ctx context.Context) GetServersServerCdromOutput {
	return o
}

func (o GetServersServerCdromOutput) CloudInit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerCdrom) string { return v.CloudInit }).(pulumi.StringOutput)
}

func (o GetServersServerCdromOutput) CpuHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.CpuHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) CpuHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.CpuHotUnplug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerCdrom) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetServersServerCdromOutput) DiscScsiHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.DiscScsiHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) DiscScsiHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.DiscScsiHotUnplug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) DiscVirtioHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.DiscVirtioHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) DiscVirtioHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.DiscVirtioHotUnplug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerCdrom) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServersServerCdromOutput) ImageAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServersServerCdrom) []string { return v.ImageAliases }).(pulumi.StringArrayOutput)
}

func (o GetServersServerCdromOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerCdrom) string { return v.ImageType }).(pulumi.StringOutput)
}

func (o GetServersServerCdromOutput) LicenceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerCdrom) string { return v.LicenceType }).(pulumi.StringOutput)
}

func (o GetServersServerCdromOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerCdrom) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetServersServerCdromOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerCdrom) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServersServerCdromOutput) NicHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.NicHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) NicHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.NicHotUnplug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.Public }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) RamHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.RamHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) RamHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerCdrom) bool { return v.RamHotUnplug }).(pulumi.BoolOutput)
}

func (o GetServersServerCdromOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v GetServersServerCdrom) float64 { return v.Size }).(pulumi.Float64Output)
}

type GetServersServerCdromArrayOutput struct{ *pulumi.OutputState }

func (GetServersServerCdromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerCdrom)(nil)).Elem()
}

func (o GetServersServerCdromArrayOutput) ToGetServersServerCdromArrayOutput() GetServersServerCdromArrayOutput {
	return o
}

func (o GetServersServerCdromArrayOutput) ToGetServersServerCdromArrayOutputWithContext(ctx context.Context) GetServersServerCdromArrayOutput {
	return o
}

func (o GetServersServerCdromArrayOutput) Index(i pulumi.IntInput) GetServersServerCdromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServersServerCdrom {
		return vs[0].([]GetServersServerCdrom)[vs[1].(int)]
	}).(GetServersServerCdromOutput)
}

type GetServersServerLabel struct {
	Id    string `pulumi:"id"`
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// GetServersServerLabelInput is an input type that accepts GetServersServerLabelArgs and GetServersServerLabelOutput values.
// You can construct a concrete instance of `GetServersServerLabelInput` via:
//
//	GetServersServerLabelArgs{...}
type GetServersServerLabelInput interface {
	pulumi.Input

	ToGetServersServerLabelOutput() GetServersServerLabelOutput
	ToGetServersServerLabelOutputWithContext(context.Context) GetServersServerLabelOutput
}

type GetServersServerLabelArgs struct {
	Id    pulumi.StringInput `pulumi:"id"`
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetServersServerLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerLabel)(nil)).Elem()
}

func (i GetServersServerLabelArgs) ToGetServersServerLabelOutput() GetServersServerLabelOutput {
	return i.ToGetServersServerLabelOutputWithContext(context.Background())
}

func (i GetServersServerLabelArgs) ToGetServersServerLabelOutputWithContext(ctx context.Context) GetServersServerLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerLabelOutput)
}

// GetServersServerLabelArrayInput is an input type that accepts GetServersServerLabelArray and GetServersServerLabelArrayOutput values.
// You can construct a concrete instance of `GetServersServerLabelArrayInput` via:
//
//	GetServersServerLabelArray{ GetServersServerLabelArgs{...} }
type GetServersServerLabelArrayInput interface {
	pulumi.Input

	ToGetServersServerLabelArrayOutput() GetServersServerLabelArrayOutput
	ToGetServersServerLabelArrayOutputWithContext(context.Context) GetServersServerLabelArrayOutput
}

type GetServersServerLabelArray []GetServersServerLabelInput

func (GetServersServerLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerLabel)(nil)).Elem()
}

func (i GetServersServerLabelArray) ToGetServersServerLabelArrayOutput() GetServersServerLabelArrayOutput {
	return i.ToGetServersServerLabelArrayOutputWithContext(context.Background())
}

func (i GetServersServerLabelArray) ToGetServersServerLabelArrayOutputWithContext(ctx context.Context) GetServersServerLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerLabelArrayOutput)
}

type GetServersServerLabelOutput struct{ *pulumi.OutputState }

func (GetServersServerLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerLabel)(nil)).Elem()
}

func (o GetServersServerLabelOutput) ToGetServersServerLabelOutput() GetServersServerLabelOutput {
	return o
}

func (o GetServersServerLabelOutput) ToGetServersServerLabelOutputWithContext(ctx context.Context) GetServersServerLabelOutput {
	return o
}

func (o GetServersServerLabelOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerLabel) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServersServerLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerLabel) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetServersServerLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetServersServerLabelArrayOutput struct{ *pulumi.OutputState }

func (GetServersServerLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerLabel)(nil)).Elem()
}

func (o GetServersServerLabelArrayOutput) ToGetServersServerLabelArrayOutput() GetServersServerLabelArrayOutput {
	return o
}

func (o GetServersServerLabelArrayOutput) ToGetServersServerLabelArrayOutputWithContext(ctx context.Context) GetServersServerLabelArrayOutput {
	return o
}

func (o GetServersServerLabelArrayOutput) Index(i pulumi.IntInput) GetServersServerLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServersServerLabel {
		return vs[0].([]GetServersServerLabel)[vs[1].(int)]
	}).(GetServersServerLabelOutput)
}

type GetServersServerNic struct {
	DeviceNumber   int                               `pulumi:"deviceNumber"`
	Dhcp           bool                              `pulumi:"dhcp"`
	Dhcpv6         *bool                             `pulumi:"dhcpv6"`
	FirewallActive bool                              `pulumi:"firewallActive"`
	FirewallRules  []GetServersServerNicFirewallRule `pulumi:"firewallRules"`
	FirewallType   string                            `pulumi:"firewallType"`
	Id             string                            `pulumi:"id"`
	Ips            []string                          `pulumi:"ips"`
	Ipv6CidrBlock  string                            `pulumi:"ipv6CidrBlock"`
	Ipv6Ips        []string                          `pulumi:"ipv6Ips"`
	Lan            int                               `pulumi:"lan"`
	Mac            string                            `pulumi:"mac"`
	Name           string                            `pulumi:"name"`
	PciSlot        int                               `pulumi:"pciSlot"`
}

// GetServersServerNicInput is an input type that accepts GetServersServerNicArgs and GetServersServerNicOutput values.
// You can construct a concrete instance of `GetServersServerNicInput` via:
//
//	GetServersServerNicArgs{...}
type GetServersServerNicInput interface {
	pulumi.Input

	ToGetServersServerNicOutput() GetServersServerNicOutput
	ToGetServersServerNicOutputWithContext(context.Context) GetServersServerNicOutput
}

type GetServersServerNicArgs struct {
	DeviceNumber   pulumi.IntInput                           `pulumi:"deviceNumber"`
	Dhcp           pulumi.BoolInput                          `pulumi:"dhcp"`
	Dhcpv6         pulumi.BoolPtrInput                       `pulumi:"dhcpv6"`
	FirewallActive pulumi.BoolInput                          `pulumi:"firewallActive"`
	FirewallRules  GetServersServerNicFirewallRuleArrayInput `pulumi:"firewallRules"`
	FirewallType   pulumi.StringInput                        `pulumi:"firewallType"`
	Id             pulumi.StringInput                        `pulumi:"id"`
	Ips            pulumi.StringArrayInput                   `pulumi:"ips"`
	Ipv6CidrBlock  pulumi.StringInput                        `pulumi:"ipv6CidrBlock"`
	Ipv6Ips        pulumi.StringArrayInput                   `pulumi:"ipv6Ips"`
	Lan            pulumi.IntInput                           `pulumi:"lan"`
	Mac            pulumi.StringInput                        `pulumi:"mac"`
	Name           pulumi.StringInput                        `pulumi:"name"`
	PciSlot        pulumi.IntInput                           `pulumi:"pciSlot"`
}

func (GetServersServerNicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerNic)(nil)).Elem()
}

func (i GetServersServerNicArgs) ToGetServersServerNicOutput() GetServersServerNicOutput {
	return i.ToGetServersServerNicOutputWithContext(context.Background())
}

func (i GetServersServerNicArgs) ToGetServersServerNicOutputWithContext(ctx context.Context) GetServersServerNicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerNicOutput)
}

// GetServersServerNicArrayInput is an input type that accepts GetServersServerNicArray and GetServersServerNicArrayOutput values.
// You can construct a concrete instance of `GetServersServerNicArrayInput` via:
//
//	GetServersServerNicArray{ GetServersServerNicArgs{...} }
type GetServersServerNicArrayInput interface {
	pulumi.Input

	ToGetServersServerNicArrayOutput() GetServersServerNicArrayOutput
	ToGetServersServerNicArrayOutputWithContext(context.Context) GetServersServerNicArrayOutput
}

type GetServersServerNicArray []GetServersServerNicInput

func (GetServersServerNicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerNic)(nil)).Elem()
}

func (i GetServersServerNicArray) ToGetServersServerNicArrayOutput() GetServersServerNicArrayOutput {
	return i.ToGetServersServerNicArrayOutputWithContext(context.Background())
}

func (i GetServersServerNicArray) ToGetServersServerNicArrayOutputWithContext(ctx context.Context) GetServersServerNicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerNicArrayOutput)
}

type GetServersServerNicOutput struct{ *pulumi.OutputState }

func (GetServersServerNicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerNic)(nil)).Elem()
}

func (o GetServersServerNicOutput) ToGetServersServerNicOutput() GetServersServerNicOutput {
	return o
}

func (o GetServersServerNicOutput) ToGetServersServerNicOutputWithContext(ctx context.Context) GetServersServerNicOutput {
	return o
}

func (o GetServersServerNicOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerNic) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

func (o GetServersServerNicOutput) Dhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerNic) bool { return v.Dhcp }).(pulumi.BoolOutput)
}

func (o GetServersServerNicOutput) Dhcpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetServersServerNic) *bool { return v.Dhcpv6 }).(pulumi.BoolPtrOutput)
}

func (o GetServersServerNicOutput) FirewallActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerNic) bool { return v.FirewallActive }).(pulumi.BoolOutput)
}

func (o GetServersServerNicOutput) FirewallRules() GetServersServerNicFirewallRuleArrayOutput {
	return o.ApplyT(func(v GetServersServerNic) []GetServersServerNicFirewallRule { return v.FirewallRules }).(GetServersServerNicFirewallRuleArrayOutput)
}

func (o GetServersServerNicOutput) FirewallType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNic) string { return v.FirewallType }).(pulumi.StringOutput)
}

func (o GetServersServerNicOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNic) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServersServerNicOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServersServerNic) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o GetServersServerNicOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNic) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

func (o GetServersServerNicOutput) Ipv6Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServersServerNic) []string { return v.Ipv6Ips }).(pulumi.StringArrayOutput)
}

func (o GetServersServerNicOutput) Lan() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerNic) int { return v.Lan }).(pulumi.IntOutput)
}

func (o GetServersServerNicOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNic) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetServersServerNicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNic) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServersServerNicOutput) PciSlot() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerNic) int { return v.PciSlot }).(pulumi.IntOutput)
}

type GetServersServerNicArrayOutput struct{ *pulumi.OutputState }

func (GetServersServerNicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerNic)(nil)).Elem()
}

func (o GetServersServerNicArrayOutput) ToGetServersServerNicArrayOutput() GetServersServerNicArrayOutput {
	return o
}

func (o GetServersServerNicArrayOutput) ToGetServersServerNicArrayOutputWithContext(ctx context.Context) GetServersServerNicArrayOutput {
	return o
}

func (o GetServersServerNicArrayOutput) Index(i pulumi.IntInput) GetServersServerNicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServersServerNic {
		return vs[0].([]GetServersServerNic)[vs[1].(int)]
	}).(GetServersServerNicOutput)
}

type GetServersServerNicFirewallRule struct {
	IcmpCode       int    `pulumi:"icmpCode"`
	IcmpType       int    `pulumi:"icmpType"`
	Id             string `pulumi:"id"`
	Name           string `pulumi:"name"`
	PortRangeEnd   int    `pulumi:"portRangeEnd"`
	PortRangeStart int    `pulumi:"portRangeStart"`
	Protocol       string `pulumi:"protocol"`
	SourceIp       string `pulumi:"sourceIp"`
	SourceMac      string `pulumi:"sourceMac"`
	TargetIp       string `pulumi:"targetIp"`
	Type           string `pulumi:"type"`
}

// GetServersServerNicFirewallRuleInput is an input type that accepts GetServersServerNicFirewallRuleArgs and GetServersServerNicFirewallRuleOutput values.
// You can construct a concrete instance of `GetServersServerNicFirewallRuleInput` via:
//
//	GetServersServerNicFirewallRuleArgs{...}
type GetServersServerNicFirewallRuleInput interface {
	pulumi.Input

	ToGetServersServerNicFirewallRuleOutput() GetServersServerNicFirewallRuleOutput
	ToGetServersServerNicFirewallRuleOutputWithContext(context.Context) GetServersServerNicFirewallRuleOutput
}

type GetServersServerNicFirewallRuleArgs struct {
	IcmpCode       pulumi.IntInput    `pulumi:"icmpCode"`
	IcmpType       pulumi.IntInput    `pulumi:"icmpType"`
	Id             pulumi.StringInput `pulumi:"id"`
	Name           pulumi.StringInput `pulumi:"name"`
	PortRangeEnd   pulumi.IntInput    `pulumi:"portRangeEnd"`
	PortRangeStart pulumi.IntInput    `pulumi:"portRangeStart"`
	Protocol       pulumi.StringInput `pulumi:"protocol"`
	SourceIp       pulumi.StringInput `pulumi:"sourceIp"`
	SourceMac      pulumi.StringInput `pulumi:"sourceMac"`
	TargetIp       pulumi.StringInput `pulumi:"targetIp"`
	Type           pulumi.StringInput `pulumi:"type"`
}

func (GetServersServerNicFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerNicFirewallRule)(nil)).Elem()
}

func (i GetServersServerNicFirewallRuleArgs) ToGetServersServerNicFirewallRuleOutput() GetServersServerNicFirewallRuleOutput {
	return i.ToGetServersServerNicFirewallRuleOutputWithContext(context.Background())
}

func (i GetServersServerNicFirewallRuleArgs) ToGetServersServerNicFirewallRuleOutputWithContext(ctx context.Context) GetServersServerNicFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerNicFirewallRuleOutput)
}

// GetServersServerNicFirewallRuleArrayInput is an input type that accepts GetServersServerNicFirewallRuleArray and GetServersServerNicFirewallRuleArrayOutput values.
// You can construct a concrete instance of `GetServersServerNicFirewallRuleArrayInput` via:
//
//	GetServersServerNicFirewallRuleArray{ GetServersServerNicFirewallRuleArgs{...} }
type GetServersServerNicFirewallRuleArrayInput interface {
	pulumi.Input

	ToGetServersServerNicFirewallRuleArrayOutput() GetServersServerNicFirewallRuleArrayOutput
	ToGetServersServerNicFirewallRuleArrayOutputWithContext(context.Context) GetServersServerNicFirewallRuleArrayOutput
}

type GetServersServerNicFirewallRuleArray []GetServersServerNicFirewallRuleInput

func (GetServersServerNicFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerNicFirewallRule)(nil)).Elem()
}

func (i GetServersServerNicFirewallRuleArray) ToGetServersServerNicFirewallRuleArrayOutput() GetServersServerNicFirewallRuleArrayOutput {
	return i.ToGetServersServerNicFirewallRuleArrayOutputWithContext(context.Background())
}

func (i GetServersServerNicFirewallRuleArray) ToGetServersServerNicFirewallRuleArrayOutputWithContext(ctx context.Context) GetServersServerNicFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerNicFirewallRuleArrayOutput)
}

type GetServersServerNicFirewallRuleOutput struct{ *pulumi.OutputState }

func (GetServersServerNicFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerNicFirewallRule)(nil)).Elem()
}

func (o GetServersServerNicFirewallRuleOutput) ToGetServersServerNicFirewallRuleOutput() GetServersServerNicFirewallRuleOutput {
	return o
}

func (o GetServersServerNicFirewallRuleOutput) ToGetServersServerNicFirewallRuleOutputWithContext(ctx context.Context) GetServersServerNicFirewallRuleOutput {
	return o
}

func (o GetServersServerNicFirewallRuleOutput) IcmpCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) int { return v.IcmpCode }).(pulumi.IntOutput)
}

func (o GetServersServerNicFirewallRuleOutput) IcmpType() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) int { return v.IcmpType }).(pulumi.IntOutput)
}

func (o GetServersServerNicFirewallRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServersServerNicFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServersServerNicFirewallRuleOutput) PortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) int { return v.PortRangeEnd }).(pulumi.IntOutput)
}

func (o GetServersServerNicFirewallRuleOutput) PortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) int { return v.PortRangeStart }).(pulumi.IntOutput)
}

func (o GetServersServerNicFirewallRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetServersServerNicFirewallRuleOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) string { return v.SourceIp }).(pulumi.StringOutput)
}

func (o GetServersServerNicFirewallRuleOutput) SourceMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) string { return v.SourceMac }).(pulumi.StringOutput)
}

func (o GetServersServerNicFirewallRuleOutput) TargetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) string { return v.TargetIp }).(pulumi.StringOutput)
}

func (o GetServersServerNicFirewallRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerNicFirewallRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetServersServerNicFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (GetServersServerNicFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerNicFirewallRule)(nil)).Elem()
}

func (o GetServersServerNicFirewallRuleArrayOutput) ToGetServersServerNicFirewallRuleArrayOutput() GetServersServerNicFirewallRuleArrayOutput {
	return o
}

func (o GetServersServerNicFirewallRuleArrayOutput) ToGetServersServerNicFirewallRuleArrayOutputWithContext(ctx context.Context) GetServersServerNicFirewallRuleArrayOutput {
	return o
}

func (o GetServersServerNicFirewallRuleArrayOutput) Index(i pulumi.IntInput) GetServersServerNicFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServersServerNicFirewallRule {
		return vs[0].([]GetServersServerNicFirewallRule)[vs[1].(int)]
	}).(GetServersServerNicFirewallRuleOutput)
}

type GetServersServerVolume struct {
	AvailabilityZone string `pulumi:"availabilityZone"`
	BackupUnitId     string `pulumi:"backupUnitId"`
	// The UUID of the attached server.
	BootServer          string   `pulumi:"bootServer"`
	Bus                 string   `pulumi:"bus"`
	CpuHotPlug          bool     `pulumi:"cpuHotPlug"`
	DeviceNumber        int      `pulumi:"deviceNumber"`
	DiscVirtioHotPlug   bool     `pulumi:"discVirtioHotPlug"`
	DiscVirtioHotUnplug bool     `pulumi:"discVirtioHotUnplug"`
	DiskType            string   `pulumi:"diskType"`
	Id                  string   `pulumi:"id"`
	ImageName           string   `pulumi:"imageName"`
	ImagePassword       string   `pulumi:"imagePassword"`
	LicenceType         string   `pulumi:"licenceType"`
	Name                string   `pulumi:"name"`
	NicHotPlug          bool     `pulumi:"nicHotPlug"`
	NicHotUnplug        bool     `pulumi:"nicHotUnplug"`
	PciSlot             int      `pulumi:"pciSlot"`
	RamHotPlug          bool     `pulumi:"ramHotPlug"`
	Size                int      `pulumi:"size"`
	SshKeys             []string `pulumi:"sshKeys"`
	UserData            *string  `pulumi:"userData"`
}

// GetServersServerVolumeInput is an input type that accepts GetServersServerVolumeArgs and GetServersServerVolumeOutput values.
// You can construct a concrete instance of `GetServersServerVolumeInput` via:
//
//	GetServersServerVolumeArgs{...}
type GetServersServerVolumeInput interface {
	pulumi.Input

	ToGetServersServerVolumeOutput() GetServersServerVolumeOutput
	ToGetServersServerVolumeOutputWithContext(context.Context) GetServersServerVolumeOutput
}

type GetServersServerVolumeArgs struct {
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	BackupUnitId     pulumi.StringInput `pulumi:"backupUnitId"`
	// The UUID of the attached server.
	BootServer          pulumi.StringInput      `pulumi:"bootServer"`
	Bus                 pulumi.StringInput      `pulumi:"bus"`
	CpuHotPlug          pulumi.BoolInput        `pulumi:"cpuHotPlug"`
	DeviceNumber        pulumi.IntInput         `pulumi:"deviceNumber"`
	DiscVirtioHotPlug   pulumi.BoolInput        `pulumi:"discVirtioHotPlug"`
	DiscVirtioHotUnplug pulumi.BoolInput        `pulumi:"discVirtioHotUnplug"`
	DiskType            pulumi.StringInput      `pulumi:"diskType"`
	Id                  pulumi.StringInput      `pulumi:"id"`
	ImageName           pulumi.StringInput      `pulumi:"imageName"`
	ImagePassword       pulumi.StringInput      `pulumi:"imagePassword"`
	LicenceType         pulumi.StringInput      `pulumi:"licenceType"`
	Name                pulumi.StringInput      `pulumi:"name"`
	NicHotPlug          pulumi.BoolInput        `pulumi:"nicHotPlug"`
	NicHotUnplug        pulumi.BoolInput        `pulumi:"nicHotUnplug"`
	PciSlot             pulumi.IntInput         `pulumi:"pciSlot"`
	RamHotPlug          pulumi.BoolInput        `pulumi:"ramHotPlug"`
	Size                pulumi.IntInput         `pulumi:"size"`
	SshKeys             pulumi.StringArrayInput `pulumi:"sshKeys"`
	UserData            pulumi.StringPtrInput   `pulumi:"userData"`
}

func (GetServersServerVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerVolume)(nil)).Elem()
}

func (i GetServersServerVolumeArgs) ToGetServersServerVolumeOutput() GetServersServerVolumeOutput {
	return i.ToGetServersServerVolumeOutputWithContext(context.Background())
}

func (i GetServersServerVolumeArgs) ToGetServersServerVolumeOutputWithContext(ctx context.Context) GetServersServerVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerVolumeOutput)
}

// GetServersServerVolumeArrayInput is an input type that accepts GetServersServerVolumeArray and GetServersServerVolumeArrayOutput values.
// You can construct a concrete instance of `GetServersServerVolumeArrayInput` via:
//
//	GetServersServerVolumeArray{ GetServersServerVolumeArgs{...} }
type GetServersServerVolumeArrayInput interface {
	pulumi.Input

	ToGetServersServerVolumeArrayOutput() GetServersServerVolumeArrayOutput
	ToGetServersServerVolumeArrayOutputWithContext(context.Context) GetServersServerVolumeArrayOutput
}

type GetServersServerVolumeArray []GetServersServerVolumeInput

func (GetServersServerVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerVolume)(nil)).Elem()
}

func (i GetServersServerVolumeArray) ToGetServersServerVolumeArrayOutput() GetServersServerVolumeArrayOutput {
	return i.ToGetServersServerVolumeArrayOutputWithContext(context.Background())
}

func (i GetServersServerVolumeArray) ToGetServersServerVolumeArrayOutputWithContext(ctx context.Context) GetServersServerVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServersServerVolumeArrayOutput)
}

type GetServersServerVolumeOutput struct{ *pulumi.OutputState }

func (GetServersServerVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersServerVolume)(nil)).Elem()
}

func (o GetServersServerVolumeOutput) ToGetServersServerVolumeOutput() GetServersServerVolumeOutput {
	return o
}

func (o GetServersServerVolumeOutput) ToGetServersServerVolumeOutputWithContext(ctx context.Context) GetServersServerVolumeOutput {
	return o
}

func (o GetServersServerVolumeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) BackupUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.BackupUnitId }).(pulumi.StringOutput)
}

// The UUID of the attached server.
func (o GetServersServerVolumeOutput) BootServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.BootServer }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) Bus() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.Bus }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) CpuHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerVolume) bool { return v.CpuHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerVolumeOutput) DeviceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerVolume) int { return v.DeviceNumber }).(pulumi.IntOutput)
}

func (o GetServersServerVolumeOutput) DiscVirtioHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerVolume) bool { return v.DiscVirtioHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerVolumeOutput) DiscVirtioHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerVolume) bool { return v.DiscVirtioHotUnplug }).(pulumi.BoolOutput)
}

func (o GetServersServerVolumeOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.ImageName }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) ImagePassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.ImagePassword }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) LicenceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.LicenceType }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersServerVolume) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServersServerVolumeOutput) NicHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerVolume) bool { return v.NicHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerVolumeOutput) NicHotUnplug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerVolume) bool { return v.NicHotUnplug }).(pulumi.BoolOutput)
}

func (o GetServersServerVolumeOutput) PciSlot() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerVolume) int { return v.PciSlot }).(pulumi.IntOutput)
}

func (o GetServersServerVolumeOutput) RamHotPlug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServersServerVolume) bool { return v.RamHotPlug }).(pulumi.BoolOutput)
}

func (o GetServersServerVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetServersServerVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o GetServersServerVolumeOutput) SshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServersServerVolume) []string { return v.SshKeys }).(pulumi.StringArrayOutput)
}

func (o GetServersServerVolumeOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServersServerVolume) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type GetServersServerVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetServersServerVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServersServerVolume)(nil)).Elem()
}

func (o GetServersServerVolumeArrayOutput) ToGetServersServerVolumeArrayOutput() GetServersServerVolumeArrayOutput {
	return o
}

func (o GetServersServerVolumeArrayOutput) ToGetServersServerVolumeArrayOutputWithContext(ctx context.Context) GetServersServerVolumeArrayOutput {
	return o
}

func (o GetServersServerVolumeArrayOutput) Index(i pulumi.IntInput) GetServersServerVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServersServerVolume {
		return vs[0].([]GetServersServerVolume)[vs[1].(int)]
	}).(GetServersServerVolumeOutput)
}

type GetTargetGroupHealthCheck struct {
	// The interval in milliseconds between consecutive health checks; default is 2000.
	CheckInterval int `pulumi:"checkInterval"`
	// The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.
	CheckTimeout int `pulumi:"checkTimeout"`
	// The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
	Retries int `pulumi:"retries"`
}

// GetTargetGroupHealthCheckInput is an input type that accepts GetTargetGroupHealthCheckArgs and GetTargetGroupHealthCheckOutput values.
// You can construct a concrete instance of `GetTargetGroupHealthCheckInput` via:
//
//	GetTargetGroupHealthCheckArgs{...}
type GetTargetGroupHealthCheckInput interface {
	pulumi.Input

	ToGetTargetGroupHealthCheckOutput() GetTargetGroupHealthCheckOutput
	ToGetTargetGroupHealthCheckOutputWithContext(context.Context) GetTargetGroupHealthCheckOutput
}

type GetTargetGroupHealthCheckArgs struct {
	// The interval in milliseconds between consecutive health checks; default is 2000.
	CheckInterval pulumi.IntInput `pulumi:"checkInterval"`
	// The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.
	CheckTimeout pulumi.IntInput `pulumi:"checkTimeout"`
	// The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
	Retries pulumi.IntInput `pulumi:"retries"`
}

func (GetTargetGroupHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupHealthCheck)(nil)).Elem()
}

func (i GetTargetGroupHealthCheckArgs) ToGetTargetGroupHealthCheckOutput() GetTargetGroupHealthCheckOutput {
	return i.ToGetTargetGroupHealthCheckOutputWithContext(context.Background())
}

func (i GetTargetGroupHealthCheckArgs) ToGetTargetGroupHealthCheckOutputWithContext(ctx context.Context) GetTargetGroupHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupHealthCheckOutput)
}

// GetTargetGroupHealthCheckArrayInput is an input type that accepts GetTargetGroupHealthCheckArray and GetTargetGroupHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetTargetGroupHealthCheckArrayInput` via:
//
//	GetTargetGroupHealthCheckArray{ GetTargetGroupHealthCheckArgs{...} }
type GetTargetGroupHealthCheckArrayInput interface {
	pulumi.Input

	ToGetTargetGroupHealthCheckArrayOutput() GetTargetGroupHealthCheckArrayOutput
	ToGetTargetGroupHealthCheckArrayOutputWithContext(context.Context) GetTargetGroupHealthCheckArrayOutput
}

type GetTargetGroupHealthCheckArray []GetTargetGroupHealthCheckInput

func (GetTargetGroupHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetGroupHealthCheck)(nil)).Elem()
}

func (i GetTargetGroupHealthCheckArray) ToGetTargetGroupHealthCheckArrayOutput() GetTargetGroupHealthCheckArrayOutput {
	return i.ToGetTargetGroupHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetTargetGroupHealthCheckArray) ToGetTargetGroupHealthCheckArrayOutputWithContext(ctx context.Context) GetTargetGroupHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupHealthCheckArrayOutput)
}

type GetTargetGroupHealthCheckOutput struct{ *pulumi.OutputState }

func (GetTargetGroupHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupHealthCheck)(nil)).Elem()
}

func (o GetTargetGroupHealthCheckOutput) ToGetTargetGroupHealthCheckOutput() GetTargetGroupHealthCheckOutput {
	return o
}

func (o GetTargetGroupHealthCheckOutput) ToGetTargetGroupHealthCheckOutputWithContext(ctx context.Context) GetTargetGroupHealthCheckOutput {
	return o
}

// The interval in milliseconds between consecutive health checks; default is 2000.
func (o GetTargetGroupHealthCheckOutput) CheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) int { return v.CheckInterval }).(pulumi.IntOutput)
}

// The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.
func (o GetTargetGroupHealthCheckOutput) CheckTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) int { return v.CheckTimeout }).(pulumi.IntOutput)
}

// The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.
func (o GetTargetGroupHealthCheckOutput) Retries() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) int { return v.Retries }).(pulumi.IntOutput)
}

type GetTargetGroupHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetTargetGroupHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetGroupHealthCheck)(nil)).Elem()
}

func (o GetTargetGroupHealthCheckArrayOutput) ToGetTargetGroupHealthCheckArrayOutput() GetTargetGroupHealthCheckArrayOutput {
	return o
}

func (o GetTargetGroupHealthCheckArrayOutput) ToGetTargetGroupHealthCheckArrayOutputWithContext(ctx context.Context) GetTargetGroupHealthCheckArrayOutput {
	return o
}

func (o GetTargetGroupHealthCheckArrayOutput) Index(i pulumi.IntInput) GetTargetGroupHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetGroupHealthCheck {
		return vs[0].([]GetTargetGroupHealthCheck)[vs[1].(int)]
	}).(GetTargetGroupHealthCheckOutput)
}

type GetTargetGroupHttpHealthCheck struct {
	MatchType string `pulumi:"matchType"`
	// The method for the HTTP health check.
	Method string `pulumi:"method"`
	Negate bool   `pulumi:"negate"`
	// The path (destination URL) for the HTTP health check request; the default is /.
	Path  string `pulumi:"path"`
	Regex bool   `pulumi:"regex"`
	// The response returned by the request, depending on the match type.
	Response string `pulumi:"response"`
}

// GetTargetGroupHttpHealthCheckInput is an input type that accepts GetTargetGroupHttpHealthCheckArgs and GetTargetGroupHttpHealthCheckOutput values.
// You can construct a concrete instance of `GetTargetGroupHttpHealthCheckInput` via:
//
//	GetTargetGroupHttpHealthCheckArgs{...}
type GetTargetGroupHttpHealthCheckInput interface {
	pulumi.Input

	ToGetTargetGroupHttpHealthCheckOutput() GetTargetGroupHttpHealthCheckOutput
	ToGetTargetGroupHttpHealthCheckOutputWithContext(context.Context) GetTargetGroupHttpHealthCheckOutput
}

type GetTargetGroupHttpHealthCheckArgs struct {
	MatchType pulumi.StringInput `pulumi:"matchType"`
	// The method for the HTTP health check.
	Method pulumi.StringInput `pulumi:"method"`
	Negate pulumi.BoolInput   `pulumi:"negate"`
	// The path (destination URL) for the HTTP health check request; the default is /.
	Path  pulumi.StringInput `pulumi:"path"`
	Regex pulumi.BoolInput   `pulumi:"regex"`
	// The response returned by the request, depending on the match type.
	Response pulumi.StringInput `pulumi:"response"`
}

func (GetTargetGroupHttpHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupHttpHealthCheck)(nil)).Elem()
}

func (i GetTargetGroupHttpHealthCheckArgs) ToGetTargetGroupHttpHealthCheckOutput() GetTargetGroupHttpHealthCheckOutput {
	return i.ToGetTargetGroupHttpHealthCheckOutputWithContext(context.Background())
}

func (i GetTargetGroupHttpHealthCheckArgs) ToGetTargetGroupHttpHealthCheckOutputWithContext(ctx context.Context) GetTargetGroupHttpHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupHttpHealthCheckOutput)
}

// GetTargetGroupHttpHealthCheckArrayInput is an input type that accepts GetTargetGroupHttpHealthCheckArray and GetTargetGroupHttpHealthCheckArrayOutput values.
// You can construct a concrete instance of `GetTargetGroupHttpHealthCheckArrayInput` via:
//
//	GetTargetGroupHttpHealthCheckArray{ GetTargetGroupHttpHealthCheckArgs{...} }
type GetTargetGroupHttpHealthCheckArrayInput interface {
	pulumi.Input

	ToGetTargetGroupHttpHealthCheckArrayOutput() GetTargetGroupHttpHealthCheckArrayOutput
	ToGetTargetGroupHttpHealthCheckArrayOutputWithContext(context.Context) GetTargetGroupHttpHealthCheckArrayOutput
}

type GetTargetGroupHttpHealthCheckArray []GetTargetGroupHttpHealthCheckInput

func (GetTargetGroupHttpHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetGroupHttpHealthCheck)(nil)).Elem()
}

func (i GetTargetGroupHttpHealthCheckArray) ToGetTargetGroupHttpHealthCheckArrayOutput() GetTargetGroupHttpHealthCheckArrayOutput {
	return i.ToGetTargetGroupHttpHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetTargetGroupHttpHealthCheckArray) ToGetTargetGroupHttpHealthCheckArrayOutputWithContext(ctx context.Context) GetTargetGroupHttpHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupHttpHealthCheckArrayOutput)
}

type GetTargetGroupHttpHealthCheckOutput struct{ *pulumi.OutputState }

func (GetTargetGroupHttpHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupHttpHealthCheck)(nil)).Elem()
}

func (o GetTargetGroupHttpHealthCheckOutput) ToGetTargetGroupHttpHealthCheckOutput() GetTargetGroupHttpHealthCheckOutput {
	return o
}

func (o GetTargetGroupHttpHealthCheckOutput) ToGetTargetGroupHttpHealthCheckOutputWithContext(ctx context.Context) GetTargetGroupHttpHealthCheckOutput {
	return o
}

func (o GetTargetGroupHttpHealthCheckOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHttpHealthCheck) string { return v.MatchType }).(pulumi.StringOutput)
}

// The method for the HTTP health check.
func (o GetTargetGroupHttpHealthCheckOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHttpHealthCheck) string { return v.Method }).(pulumi.StringOutput)
}

func (o GetTargetGroupHttpHealthCheckOutput) Negate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetGroupHttpHealthCheck) bool { return v.Negate }).(pulumi.BoolOutput)
}

// The path (destination URL) for the HTTP health check request; the default is /.
func (o GetTargetGroupHttpHealthCheckOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHttpHealthCheck) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetTargetGroupHttpHealthCheckOutput) Regex() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetGroupHttpHealthCheck) bool { return v.Regex }).(pulumi.BoolOutput)
}

// The response returned by the request, depending on the match type.
func (o GetTargetGroupHttpHealthCheckOutput) Response() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHttpHealthCheck) string { return v.Response }).(pulumi.StringOutput)
}

type GetTargetGroupHttpHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (GetTargetGroupHttpHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetGroupHttpHealthCheck)(nil)).Elem()
}

func (o GetTargetGroupHttpHealthCheckArrayOutput) ToGetTargetGroupHttpHealthCheckArrayOutput() GetTargetGroupHttpHealthCheckArrayOutput {
	return o
}

func (o GetTargetGroupHttpHealthCheckArrayOutput) ToGetTargetGroupHttpHealthCheckArrayOutputWithContext(ctx context.Context) GetTargetGroupHttpHealthCheckArrayOutput {
	return o
}

func (o GetTargetGroupHttpHealthCheckArrayOutput) Index(i pulumi.IntInput) GetTargetGroupHttpHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetGroupHttpHealthCheck {
		return vs[0].([]GetTargetGroupHttpHealthCheck)[vs[1].(int)]
	}).(GetTargetGroupHttpHealthCheckOutput)
}

type GetTargetGroupTarget struct {
	// Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.
	HealthCheckEnabled bool `pulumi:"healthCheckEnabled"`
	// The IP of the balanced target VM.
	Ip string `pulumi:"ip"`
	// Maintenance mode prevents the target from receiving balanced traffic.
	MaintenanceEnabled bool `pulumi:"maintenanceEnabled"`
	// The port of the balanced target service; valid range is 1 to 65535.
	Port int `pulumi:"port"`
	// The proxy protocol version.
	ProxyProtocol string `pulumi:"proxyProtocol"`
	// Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.
	Weight int `pulumi:"weight"`
}

// GetTargetGroupTargetInput is an input type that accepts GetTargetGroupTargetArgs and GetTargetGroupTargetOutput values.
// You can construct a concrete instance of `GetTargetGroupTargetInput` via:
//
//	GetTargetGroupTargetArgs{...}
type GetTargetGroupTargetInput interface {
	pulumi.Input

	ToGetTargetGroupTargetOutput() GetTargetGroupTargetOutput
	ToGetTargetGroupTargetOutputWithContext(context.Context) GetTargetGroupTargetOutput
}

type GetTargetGroupTargetArgs struct {
	// Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.
	HealthCheckEnabled pulumi.BoolInput `pulumi:"healthCheckEnabled"`
	// The IP of the balanced target VM.
	Ip pulumi.StringInput `pulumi:"ip"`
	// Maintenance mode prevents the target from receiving balanced traffic.
	MaintenanceEnabled pulumi.BoolInput `pulumi:"maintenanceEnabled"`
	// The port of the balanced target service; valid range is 1 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// The proxy protocol version.
	ProxyProtocol pulumi.StringInput `pulumi:"proxyProtocol"`
	// Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetTargetGroupTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupTarget)(nil)).Elem()
}

func (i GetTargetGroupTargetArgs) ToGetTargetGroupTargetOutput() GetTargetGroupTargetOutput {
	return i.ToGetTargetGroupTargetOutputWithContext(context.Background())
}

func (i GetTargetGroupTargetArgs) ToGetTargetGroupTargetOutputWithContext(ctx context.Context) GetTargetGroupTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupTargetOutput)
}

// GetTargetGroupTargetArrayInput is an input type that accepts GetTargetGroupTargetArray and GetTargetGroupTargetArrayOutput values.
// You can construct a concrete instance of `GetTargetGroupTargetArrayInput` via:
//
//	GetTargetGroupTargetArray{ GetTargetGroupTargetArgs{...} }
type GetTargetGroupTargetArrayInput interface {
	pulumi.Input

	ToGetTargetGroupTargetArrayOutput() GetTargetGroupTargetArrayOutput
	ToGetTargetGroupTargetArrayOutputWithContext(context.Context) GetTargetGroupTargetArrayOutput
}

type GetTargetGroupTargetArray []GetTargetGroupTargetInput

func (GetTargetGroupTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetGroupTarget)(nil)).Elem()
}

func (i GetTargetGroupTargetArray) ToGetTargetGroupTargetArrayOutput() GetTargetGroupTargetArrayOutput {
	return i.ToGetTargetGroupTargetArrayOutputWithContext(context.Background())
}

func (i GetTargetGroupTargetArray) ToGetTargetGroupTargetArrayOutputWithContext(ctx context.Context) GetTargetGroupTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupTargetArrayOutput)
}

type GetTargetGroupTargetOutput struct{ *pulumi.OutputState }

func (GetTargetGroupTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupTarget)(nil)).Elem()
}

func (o GetTargetGroupTargetOutput) ToGetTargetGroupTargetOutput() GetTargetGroupTargetOutput {
	return o
}

func (o GetTargetGroupTargetOutput) ToGetTargetGroupTargetOutputWithContext(ctx context.Context) GetTargetGroupTargetOutput {
	return o
}

// Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.
func (o GetTargetGroupTargetOutput) HealthCheckEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetGroupTarget) bool { return v.HealthCheckEnabled }).(pulumi.BoolOutput)
}

// The IP of the balanced target VM.
func (o GetTargetGroupTargetOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupTarget) string { return v.Ip }).(pulumi.StringOutput)
}

// Maintenance mode prevents the target from receiving balanced traffic.
func (o GetTargetGroupTargetOutput) MaintenanceEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetGroupTarget) bool { return v.MaintenanceEnabled }).(pulumi.BoolOutput)
}

// The port of the balanced target service; valid range is 1 to 65535.
func (o GetTargetGroupTargetOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupTarget) int { return v.Port }).(pulumi.IntOutput)
}

// The proxy protocol version.
func (o GetTargetGroupTargetOutput) ProxyProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupTarget) string { return v.ProxyProtocol }).(pulumi.StringOutput)
}

// Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.
func (o GetTargetGroupTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type GetTargetGroupTargetArrayOutput struct{ *pulumi.OutputState }

func (GetTargetGroupTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTargetGroupTarget)(nil)).Elem()
}

func (o GetTargetGroupTargetArrayOutput) ToGetTargetGroupTargetArrayOutput() GetTargetGroupTargetArrayOutput {
	return o
}

func (o GetTargetGroupTargetArrayOutput) ToGetTargetGroupTargetArrayOutputWithContext(ctx context.Context) GetTargetGroupTargetArrayOutput {
	return o
}

func (o GetTargetGroupTargetArrayOutput) Index(i pulumi.IntInput) GetTargetGroupTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTargetGroupTarget {
		return vs[0].([]GetTargetGroupTarget)[vs[1].(int)]
	}).(GetTargetGroupTargetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupHealthCheckInput)(nil)).Elem(), TargetGroupHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupHealthCheckPtrInput)(nil)).Elem(), TargetGroupHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupHttpHealthCheckInput)(nil)).Elem(), TargetGroupHttpHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupHttpHealthCheckPtrInput)(nil)).Elem(), TargetGroupHttpHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupTargetInput)(nil)).Elem(), TargetGroupTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetGroupTargetArrayInput)(nil)).Elem(), TargetGroupTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformNodePoolsNodePoolInput)(nil)).Elem(), GetDataplatformNodePoolsNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformNodePoolsNodePoolArrayInput)(nil)).Elem(), GetDataplatformNodePoolsNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformNodePoolsNodePoolMaintenanceWindowInput)(nil)).Elem(), GetDataplatformNodePoolsNodePoolMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayInput)(nil)).Elem(), GetDataplatformNodePoolsNodePoolMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInmemorydbSnapshotMetadataInput)(nil)).Elem(), GetInmemorydbSnapshotMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInmemorydbSnapshotMetadataArrayInput)(nil)).Elem(), GetInmemorydbSnapshotMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterInput)(nil)).Elem(), GetK8sClustersClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterArrayInput)(nil)).Elem(), GetK8sClustersClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigInput)(nil)).Elem(), GetK8sClustersClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigArrayInput)(nil)).Elem(), GetK8sClustersClusterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigClusterInput)(nil)).Elem(), GetK8sClustersClusterConfigClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigClusterArrayInput)(nil)).Elem(), GetK8sClustersClusterConfigClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigContextInput)(nil)).Elem(), GetK8sClustersClusterConfigContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigContextArrayInput)(nil)).Elem(), GetK8sClustersClusterConfigContextArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigUserInput)(nil)).Elem(), GetK8sClustersClusterConfigUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterConfigUserArrayInput)(nil)).Elem(), GetK8sClustersClusterConfigUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterMaintenanceWindowInput)(nil)).Elem(), GetK8sClustersClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterMaintenanceWindowArrayInput)(nil)).Elem(), GetK8sClustersClusterMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterS3BucketInput)(nil)).Elem(), GetK8sClustersClusterS3BucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersClusterS3BucketArrayInput)(nil)).Elem(), GetK8sClustersClusterS3BucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersFilterInput)(nil)).Elem(), GetK8sClustersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sClustersFilterArrayInput)(nil)).Elem(), GetK8sClustersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sNodePoolNodesNodeInput)(nil)).Elem(), GetK8sNodePoolNodesNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetK8sNodePoolNodesNodeArrayInput)(nil)).Elem(), GetK8sNodePoolNodesNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationCpuArchitectureInput)(nil)).Elem(), GetLocationCpuArchitectureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationCpuArchitectureArrayInput)(nil)).Elem(), GetLocationCpuArchitectureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMariadbBackupsBackupInput)(nil)).Elem(), GetMariadbBackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMariadbBackupsBackupArrayInput)(nil)).Elem(), GetMariadbBackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMariadbBackupsBackupBaseBackupInput)(nil)).Elem(), GetMariadbBackupsBackupBaseBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMariadbBackupsBackupBaseBackupArrayInput)(nil)).Elem(), GetMariadbBackupsBackupBaseBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgBackupsClusterBackupInput)(nil)).Elem(), GetPgBackupsClusterBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgBackupsClusterBackupArrayInput)(nil)).Elem(), GetPgBackupsClusterBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgBackupsClusterBackupMetadataInput)(nil)).Elem(), GetPgBackupsClusterBackupMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgBackupsClusterBackupMetadataArrayInput)(nil)).Elem(), GetPgBackupsClusterBackupMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgDatabasesDatabaseInput)(nil)).Elem(), GetPgDatabasesDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgDatabasesDatabaseArrayInput)(nil)).Elem(), GetPgDatabasesDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersFilterInput)(nil)).Elem(), GetServersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersFilterArrayInput)(nil)).Elem(), GetServersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerInput)(nil)).Elem(), GetServersServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerArrayInput)(nil)).Elem(), GetServersServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerCdromInput)(nil)).Elem(), GetServersServerCdromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerCdromArrayInput)(nil)).Elem(), GetServersServerCdromArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerLabelInput)(nil)).Elem(), GetServersServerLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerLabelArrayInput)(nil)).Elem(), GetServersServerLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerNicInput)(nil)).Elem(), GetServersServerNicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerNicArrayInput)(nil)).Elem(), GetServersServerNicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerNicFirewallRuleInput)(nil)).Elem(), GetServersServerNicFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerNicFirewallRuleArrayInput)(nil)).Elem(), GetServersServerNicFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerVolumeInput)(nil)).Elem(), GetServersServerVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServersServerVolumeArrayInput)(nil)).Elem(), GetServersServerVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTargetGroupHealthCheckInput)(nil)).Elem(), GetTargetGroupHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTargetGroupHealthCheckArrayInput)(nil)).Elem(), GetTargetGroupHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTargetGroupHttpHealthCheckInput)(nil)).Elem(), GetTargetGroupHttpHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTargetGroupHttpHealthCheckArrayInput)(nil)).Elem(), GetTargetGroupHttpHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTargetGroupTargetInput)(nil)).Elem(), GetTargetGroupTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTargetGroupTargetArrayInput)(nil)).Elem(), GetTargetGroupTargetArray{})
	pulumi.RegisterOutputType(TargetGroupHealthCheckOutput{})
	pulumi.RegisterOutputType(TargetGroupHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(TargetGroupHttpHealthCheckOutput{})
	pulumi.RegisterOutputType(TargetGroupHttpHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(TargetGroupTargetOutput{})
	pulumi.RegisterOutputType(TargetGroupTargetArrayOutput{})
	pulumi.RegisterOutputType(GetDataplatformNodePoolsNodePoolOutput{})
	pulumi.RegisterOutputType(GetDataplatformNodePoolsNodePoolArrayOutput{})
	pulumi.RegisterOutputType(GetDataplatformNodePoolsNodePoolMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetDataplatformNodePoolsNodePoolMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetInmemorydbSnapshotMetadataOutput{})
	pulumi.RegisterOutputType(GetInmemorydbSnapshotMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigClusterOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigClusterArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigContextOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigContextArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigUserOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterConfigUserArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterS3BucketOutput{})
	pulumi.RegisterOutputType(GetK8sClustersClusterS3BucketArrayOutput{})
	pulumi.RegisterOutputType(GetK8sClustersFilterOutput{})
	pulumi.RegisterOutputType(GetK8sClustersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetK8sNodePoolNodesNodeOutput{})
	pulumi.RegisterOutputType(GetK8sNodePoolNodesNodeArrayOutput{})
	pulumi.RegisterOutputType(GetLocationCpuArchitectureOutput{})
	pulumi.RegisterOutputType(GetLocationCpuArchitectureArrayOutput{})
	pulumi.RegisterOutputType(GetMariadbBackupsBackupOutput{})
	pulumi.RegisterOutputType(GetMariadbBackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(GetMariadbBackupsBackupBaseBackupOutput{})
	pulumi.RegisterOutputType(GetMariadbBackupsBackupBaseBackupArrayOutput{})
	pulumi.RegisterOutputType(GetPgBackupsClusterBackupOutput{})
	pulumi.RegisterOutputType(GetPgBackupsClusterBackupArrayOutput{})
	pulumi.RegisterOutputType(GetPgBackupsClusterBackupMetadataOutput{})
	pulumi.RegisterOutputType(GetPgBackupsClusterBackupMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetPgDatabasesDatabaseOutput{})
	pulumi.RegisterOutputType(GetPgDatabasesDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetServersFilterOutput{})
	pulumi.RegisterOutputType(GetServersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetServersServerOutput{})
	pulumi.RegisterOutputType(GetServersServerArrayOutput{})
	pulumi.RegisterOutputType(GetServersServerCdromOutput{})
	pulumi.RegisterOutputType(GetServersServerCdromArrayOutput{})
	pulumi.RegisterOutputType(GetServersServerLabelOutput{})
	pulumi.RegisterOutputType(GetServersServerLabelArrayOutput{})
	pulumi.RegisterOutputType(GetServersServerNicOutput{})
	pulumi.RegisterOutputType(GetServersServerNicArrayOutput{})
	pulumi.RegisterOutputType(GetServersServerNicFirewallRuleOutput{})
	pulumi.RegisterOutputType(GetServersServerNicFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(GetServersServerVolumeOutput{})
	pulumi.RegisterOutputType(GetServersServerVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetTargetGroupHealthCheckOutput{})
	pulumi.RegisterOutputType(GetTargetGroupHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetTargetGroupHttpHealthCheckOutput{})
	pulumi.RegisterOutputType(GetTargetGroupHttpHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetTargetGroupTargetOutput{})
	pulumi.RegisterOutputType(GetTargetGroupTargetArrayOutput{})
}
