// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nsg

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetNsgRule struct {
	IcmpCode string `pulumi:"icmpCode"`
	IcmpType string `pulumi:"icmpType"`
	// Id of an existing Network Security Group that you want to search for.
	Id string `pulumi:"id"`
	// Name of an existing Network Security Group that you want to search for.
	//
	// Either `name`, or `id` must be provided. If none, the datasource will return an error.
	Name           string `pulumi:"name"`
	PortRangeEnd   int    `pulumi:"portRangeEnd"`
	PortRangeStart int    `pulumi:"portRangeStart"`
	Protocol       string `pulumi:"protocol"`
	SourceIp       string `pulumi:"sourceIp"`
	SourceMac      string `pulumi:"sourceMac"`
	TargetIp       string `pulumi:"targetIp"`
	Type           string `pulumi:"type"`
}

// GetNsgRuleInput is an input type that accepts GetNsgRuleArgs and GetNsgRuleOutput values.
// You can construct a concrete instance of `GetNsgRuleInput` via:
//
//	GetNsgRuleArgs{...}
type GetNsgRuleInput interface {
	pulumi.Input

	ToGetNsgRuleOutput() GetNsgRuleOutput
	ToGetNsgRuleOutputWithContext(context.Context) GetNsgRuleOutput
}

type GetNsgRuleArgs struct {
	IcmpCode pulumi.StringInput `pulumi:"icmpCode"`
	IcmpType pulumi.StringInput `pulumi:"icmpType"`
	// Id of an existing Network Security Group that you want to search for.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of an existing Network Security Group that you want to search for.
	//
	// Either `name`, or `id` must be provided. If none, the datasource will return an error.
	Name           pulumi.StringInput `pulumi:"name"`
	PortRangeEnd   pulumi.IntInput    `pulumi:"portRangeEnd"`
	PortRangeStart pulumi.IntInput    `pulumi:"portRangeStart"`
	Protocol       pulumi.StringInput `pulumi:"protocol"`
	SourceIp       pulumi.StringInput `pulumi:"sourceIp"`
	SourceMac      pulumi.StringInput `pulumi:"sourceMac"`
	TargetIp       pulumi.StringInput `pulumi:"targetIp"`
	Type           pulumi.StringInput `pulumi:"type"`
}

func (GetNsgRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsgRule)(nil)).Elem()
}

func (i GetNsgRuleArgs) ToGetNsgRuleOutput() GetNsgRuleOutput {
	return i.ToGetNsgRuleOutputWithContext(context.Background())
}

func (i GetNsgRuleArgs) ToGetNsgRuleOutputWithContext(ctx context.Context) GetNsgRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsgRuleOutput)
}

// GetNsgRuleArrayInput is an input type that accepts GetNsgRuleArray and GetNsgRuleArrayOutput values.
// You can construct a concrete instance of `GetNsgRuleArrayInput` via:
//
//	GetNsgRuleArray{ GetNsgRuleArgs{...} }
type GetNsgRuleArrayInput interface {
	pulumi.Input

	ToGetNsgRuleArrayOutput() GetNsgRuleArrayOutput
	ToGetNsgRuleArrayOutputWithContext(context.Context) GetNsgRuleArrayOutput
}

type GetNsgRuleArray []GetNsgRuleInput

func (GetNsgRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsgRule)(nil)).Elem()
}

func (i GetNsgRuleArray) ToGetNsgRuleArrayOutput() GetNsgRuleArrayOutput {
	return i.ToGetNsgRuleArrayOutputWithContext(context.Background())
}

func (i GetNsgRuleArray) ToGetNsgRuleArrayOutputWithContext(ctx context.Context) GetNsgRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNsgRuleArrayOutput)
}

type GetNsgRuleOutput struct{ *pulumi.OutputState }

func (GetNsgRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsgRule)(nil)).Elem()
}

func (o GetNsgRuleOutput) ToGetNsgRuleOutput() GetNsgRuleOutput {
	return o
}

func (o GetNsgRuleOutput) ToGetNsgRuleOutputWithContext(ctx context.Context) GetNsgRuleOutput {
	return o
}

func (o GetNsgRuleOutput) IcmpCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsgRule) string { return v.IcmpCode }).(pulumi.StringOutput)
}

func (o GetNsgRuleOutput) IcmpType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsgRule) string { return v.IcmpType }).(pulumi.StringOutput)
}

// Id of an existing Network Security Group that you want to search for.
func (o GetNsgRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsgRule) string { return v.Id }).(pulumi.StringOutput)
}

// Name of an existing Network Security Group that you want to search for.
//
// Either `name`, or `id` must be provided. If none, the datasource will return an error.
func (o GetNsgRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsgRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNsgRuleOutput) PortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsgRule) int { return v.PortRangeEnd }).(pulumi.IntOutput)
}

func (o GetNsgRuleOutput) PortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v GetNsgRule) int { return v.PortRangeStart }).(pulumi.IntOutput)
}

func (o GetNsgRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsgRule) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetNsgRuleOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsgRule) string { return v.SourceIp }).(pulumi.StringOutput)
}

func (o GetNsgRuleOutput) SourceMac() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsgRule) string { return v.SourceMac }).(pulumi.StringOutput)
}

func (o GetNsgRuleOutput) TargetIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsgRule) string { return v.TargetIp }).(pulumi.StringOutput)
}

func (o GetNsgRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsgRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetNsgRuleArrayOutput struct{ *pulumi.OutputState }

func (GetNsgRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNsgRule)(nil)).Elem()
}

func (o GetNsgRuleArrayOutput) ToGetNsgRuleArrayOutput() GetNsgRuleArrayOutput {
	return o
}

func (o GetNsgRuleArrayOutput) ToGetNsgRuleArrayOutputWithContext(ctx context.Context) GetNsgRuleArrayOutput {
	return o
}

func (o GetNsgRuleArrayOutput) Index(i pulumi.IntInput) GetNsgRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNsgRule {
		return vs[0].([]GetNsgRule)[vs[1].(int)]
	}).(GetNsgRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsgRuleInput)(nil)).Elem(), GetNsgRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNsgRuleArrayInput)(nil)).Elem(), GetNsgRuleArray{})
	pulumi.RegisterOutputType(GetNsgRuleOutput{})
	pulumi.RegisterOutputType(GetNsgRuleArrayOutput{})
}
