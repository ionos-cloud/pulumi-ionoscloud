// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nsg

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **NSG Data source** can be used to search for and return an existing security group.
// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
// When this happens, please refine your search string so that it is specific enough to return only one result.
//
// ## Example Usage
//
// ### By ID
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/nsg"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nsg.LookupNsg(ctx, &nsg.LookupNsgArgs{
//				DatacenterId: exampleIonoscloudDatacenter.Id,
//				Id:           pulumi.StringRef(nsgId),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### By Name
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/nsg"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nsg.LookupNsg(ctx, &nsg.LookupNsgArgs{
//				DatacenterId: exampleIonoscloudDatacenter.Id,
//				Name:         pulumi.StringRef("NSG Example"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNsg(ctx *pulumi.Context, args *LookupNsgArgs, opts ...pulumi.InvokeOption) (*LookupNsgResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNsgResult
	err := ctx.Invoke("ionoscloud:nsg/getNsg:getNsg", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsg.
type LookupNsgArgs struct {
	// Datacenter's UUID.
	DatacenterId string `pulumi:"datacenterId"`
	// Id of an existing Network Security Group that you want to search for.
	Id *string `pulumi:"id"`
	// Name of an existing Network Security Group that you want to search for.
	//
	// Either `name`, or `id` must be provided. If none, the datasource will return an error.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getNsg.
type LookupNsgResult struct {
	// UUID of the Virtual Data Center
	DatacenterId string `pulumi:"datacenterId"`
	// Description for the Network Security Group
	Description string `pulumi:"description"`
	// UUID of the Network Security Group
	Id string `pulumi:"id"`
	// The name of the Network Security Group
	Name string `pulumi:"name"`
	// List of IDs for the Firewall Rules attached to this group
	RuleIds []string `pulumi:"ruleIds"`
	// List of Firewall Rule objects attached to this group
	Rules []GetNsgRule `pulumi:"rules"`
}

func LookupNsgOutput(ctx *pulumi.Context, args LookupNsgOutputArgs, opts ...pulumi.InvokeOption) LookupNsgResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNsgResultOutput, error) {
			args := v.(LookupNsgArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:nsg/getNsg:getNsg", args, LookupNsgResultOutput{}, options).(LookupNsgResultOutput), nil
		}).(LookupNsgResultOutput)
}

// A collection of arguments for invoking getNsg.
type LookupNsgOutputArgs struct {
	// Datacenter's UUID.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// Id of an existing Network Security Group that you want to search for.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of an existing Network Security Group that you want to search for.
	//
	// Either `name`, or `id` must be provided. If none, the datasource will return an error.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupNsgOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsgArgs)(nil)).Elem()
}

// A collection of values returned by getNsg.
type LookupNsgResultOutput struct{ *pulumi.OutputState }

func (LookupNsgResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNsgResult)(nil)).Elem()
}

func (o LookupNsgResultOutput) ToLookupNsgResultOutput() LookupNsgResultOutput {
	return o
}

func (o LookupNsgResultOutput) ToLookupNsgResultOutputWithContext(ctx context.Context) LookupNsgResultOutput {
	return o
}

// UUID of the Virtual Data Center
func (o LookupNsgResultOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsgResult) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// Description for the Network Security Group
func (o LookupNsgResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsgResult) string { return v.Description }).(pulumi.StringOutput)
}

// UUID of the Network Security Group
func (o LookupNsgResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsgResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Network Security Group
func (o LookupNsgResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNsgResult) string { return v.Name }).(pulumi.StringOutput)
}

// List of IDs for the Firewall Rules attached to this group
func (o LookupNsgResultOutput) RuleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNsgResult) []string { return v.RuleIds }).(pulumi.StringArrayOutput)
}

// List of Firewall Rule objects attached to this group
func (o LookupNsgResultOutput) Rules() GetNsgRuleArrayOutput {
	return o.ApplyT(func(v LookupNsgResult) []GetNsgRule { return v.Rules }).(GetNsgRuleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNsgResultOutput{})
}
