// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package objectstorage

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **Objects data source** can be used to search for and return existing objects.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/objectstorage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := objectstorage.GetS3Objects(ctx, &objectstorage.GetS3ObjectsArgs{
//				Bucket:     "example",
//				Prefix:     pulumi.StringRef("prefix1/"),
//				Delimiter:  pulumi.StringRef("/"),
//				MaxKeys:    pulumi.IntRef(100),
//				FetchOwner: pulumi.BoolRef(true),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetS3Objects(ctx *pulumi.Context, args *GetS3ObjectsArgs, opts ...pulumi.InvokeOption) (*GetS3ObjectsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetS3ObjectsResult
	err := ctx.Invoke("ionoscloud:objectstorage/getS3Objects:getS3Objects", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getS3Objects.
type GetS3ObjectsArgs struct {
	// [string] The name of the bucket where the objects are stored.
	Bucket string `pulumi:"bucket"`
	// [string] A character used to group keys.
	Delimiter *string `pulumi:"delimiter"`
	// [string] Specifies the encoding method used to encode the object keys in the response. Default is url.
	EncodingType *string `pulumi:"encodingType"`
	// [bool] If set to true, the response includes the owner field in the metadata.
	FetchOwner *bool `pulumi:"fetchOwner"`
	// [int] Sets the maximum number of keys returned in the response body.Default is 1000.
	MaxKeys *int `pulumi:"maxKeys"`
	// [string] Limits the response to keys that begin with the specified prefix.
	Prefix *string `pulumi:"prefix"`
	// [string] Specifies the key to start after when listing objects in a bucket.
	StartAfter *string `pulumi:"startAfter"`
}

// A collection of values returned by getS3Objects.
type GetS3ObjectsResult struct {
	Bucket string `pulumi:"bucket"`
	// A list of keys that act as a delimiter for grouping keys.
	CommonPrefixes []string `pulumi:"commonPrefixes"`
	Delimiter      *string  `pulumi:"delimiter"`
	EncodingType   *string  `pulumi:"encodingType"`
	FetchOwner     *bool    `pulumi:"fetchOwner"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of objects in the bucket.
	Keys       []string `pulumi:"keys"`
	MaxKeys    *int     `pulumi:"maxKeys"`
	Owners     []string `pulumi:"owners"`
	Prefix     *string  `pulumi:"prefix"`
	StartAfter *string  `pulumi:"startAfter"`
}

func GetS3ObjectsOutput(ctx *pulumi.Context, args GetS3ObjectsOutputArgs, opts ...pulumi.InvokeOption) GetS3ObjectsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetS3ObjectsResultOutput, error) {
			args := v.(GetS3ObjectsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:objectstorage/getS3Objects:getS3Objects", args, GetS3ObjectsResultOutput{}, options).(GetS3ObjectsResultOutput), nil
		}).(GetS3ObjectsResultOutput)
}

// A collection of arguments for invoking getS3Objects.
type GetS3ObjectsOutputArgs struct {
	// [string] The name of the bucket where the objects are stored.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// [string] A character used to group keys.
	Delimiter pulumi.StringPtrInput `pulumi:"delimiter"`
	// [string] Specifies the encoding method used to encode the object keys in the response. Default is url.
	EncodingType pulumi.StringPtrInput `pulumi:"encodingType"`
	// [bool] If set to true, the response includes the owner field in the metadata.
	FetchOwner pulumi.BoolPtrInput `pulumi:"fetchOwner"`
	// [int] Sets the maximum number of keys returned in the response body.Default is 1000.
	MaxKeys pulumi.IntPtrInput `pulumi:"maxKeys"`
	// [string] Limits the response to keys that begin with the specified prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// [string] Specifies the key to start after when listing objects in a bucket.
	StartAfter pulumi.StringPtrInput `pulumi:"startAfter"`
}

func (GetS3ObjectsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetS3ObjectsArgs)(nil)).Elem()
}

// A collection of values returned by getS3Objects.
type GetS3ObjectsResultOutput struct{ *pulumi.OutputState }

func (GetS3ObjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetS3ObjectsResult)(nil)).Elem()
}

func (o GetS3ObjectsResultOutput) ToGetS3ObjectsResultOutput() GetS3ObjectsResultOutput {
	return o
}

func (o GetS3ObjectsResultOutput) ToGetS3ObjectsResultOutputWithContext(ctx context.Context) GetS3ObjectsResultOutput {
	return o
}

func (o GetS3ObjectsResultOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetS3ObjectsResult) string { return v.Bucket }).(pulumi.StringOutput)
}

// A list of keys that act as a delimiter for grouping keys.
func (o GetS3ObjectsResultOutput) CommonPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetS3ObjectsResult) []string { return v.CommonPrefixes }).(pulumi.StringArrayOutput)
}

func (o GetS3ObjectsResultOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetS3ObjectsResult) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o GetS3ObjectsResultOutput) EncodingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetS3ObjectsResult) *string { return v.EncodingType }).(pulumi.StringPtrOutput)
}

func (o GetS3ObjectsResultOutput) FetchOwner() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetS3ObjectsResult) *bool { return v.FetchOwner }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetS3ObjectsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetS3ObjectsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of objects in the bucket.
func (o GetS3ObjectsResultOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetS3ObjectsResult) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

func (o GetS3ObjectsResultOutput) MaxKeys() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetS3ObjectsResult) *int { return v.MaxKeys }).(pulumi.IntPtrOutput)
}

func (o GetS3ObjectsResultOutput) Owners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetS3ObjectsResult) []string { return v.Owners }).(pulumi.StringArrayOutput)
}

func (o GetS3ObjectsResultOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetS3ObjectsResult) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o GetS3ObjectsResultOutput) StartAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetS3ObjectsResult) *string { return v.StartAfter }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetS3ObjectsResultOutput{})
}
