// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package objectstorage

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **Bucket Policy data source** can be used to search for and return existing bucket policies.
// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
// When this happens, please refine your search string so that it is specific enough to return only one result.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/objectstorage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := objectstorage.GetS3BucketPolicy(ctx, &objectstorage.GetS3BucketPolicyArgs{
//				Bucket: "example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetS3BucketPolicy(ctx *pulumi.Context, args *GetS3BucketPolicyArgs, opts ...pulumi.InvokeOption) (*GetS3BucketPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetS3BucketPolicyResult
	err := ctx.Invoke("ionoscloud:objectstorage/getS3BucketPolicy:getS3BucketPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getS3BucketPolicy.
type GetS3BucketPolicyArgs struct {
	// [string] The name of the bucket where the object will be stored.
	Bucket string `pulumi:"bucket"`
}

// A collection of values returned by getS3BucketPolicy.
type GetS3BucketPolicyResult struct {
	Bucket string `pulumi:"bucket"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The policy of the bucket.
	Policy string `pulumi:"policy"`
}

func GetS3BucketPolicyOutput(ctx *pulumi.Context, args GetS3BucketPolicyOutputArgs, opts ...pulumi.InvokeOption) GetS3BucketPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetS3BucketPolicyResultOutput, error) {
			args := v.(GetS3BucketPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:objectstorage/getS3BucketPolicy:getS3BucketPolicy", args, GetS3BucketPolicyResultOutput{}, options).(GetS3BucketPolicyResultOutput), nil
		}).(GetS3BucketPolicyResultOutput)
}

// A collection of arguments for invoking getS3BucketPolicy.
type GetS3BucketPolicyOutputArgs struct {
	// [string] The name of the bucket where the object will be stored.
	Bucket pulumi.StringInput `pulumi:"bucket"`
}

func (GetS3BucketPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetS3BucketPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getS3BucketPolicy.
type GetS3BucketPolicyResultOutput struct{ *pulumi.OutputState }

func (GetS3BucketPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetS3BucketPolicyResult)(nil)).Elem()
}

func (o GetS3BucketPolicyResultOutput) ToGetS3BucketPolicyResultOutput() GetS3BucketPolicyResultOutput {
	return o
}

func (o GetS3BucketPolicyResultOutput) ToGetS3BucketPolicyResultOutputWithContext(ctx context.Context) GetS3BucketPolicyResultOutput {
	return o
}

func (o GetS3BucketPolicyResultOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetS3BucketPolicyResult) string { return v.Bucket }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetS3BucketPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetS3BucketPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The policy of the bucket.
func (o GetS3BucketPolicyResultOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetS3BucketPolicyResult) string { return v.Policy }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetS3BucketPolicyResultOutput{})
}
