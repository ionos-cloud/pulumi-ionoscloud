// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package objectstorage

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **Object storage region data source** can be used to search for and return an existing S3 Regions.
//
// ## Example Usage
//
// ### By ID
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/objectstorage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := objectstorage.GetRegion(ctx, &objectstorage.GetRegionArgs{
//				Id: "region_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRegion(ctx *pulumi.Context, args *GetRegionArgs, opts ...pulumi.InvokeOption) (*GetRegionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRegionResult
	err := ctx.Invoke("ionoscloud:objectstorage/getRegion:getRegion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegion.
type GetRegionArgs struct {
	// Id of an existing object storage Region that you want to search for.
	Id string `pulumi:"id"`
}

// A collection of values returned by getRegion.
type GetRegionResult struct {
	// The capabilities of the region
	Capability GetRegionCapability `pulumi:"capability"`
	// The endpoint URL for the region
	Endpoint string `pulumi:"endpoint"`
	// The id of the region
	Id string `pulumi:"id"`
	// The data center location of the region as per [Get Location](https://www.terraform.io/docs/cloud/v6/#tag/Locations/operation/locationsGet). *Can't be used as `LocationConstraint` on bucket creation.*
	Location string `pulumi:"location"`
	// The available classes in the region
	StorageClasses []string `pulumi:"storageClasses"`
	// The version of the region properties
	Version float64 `pulumi:"version"`
	// The website URL for the region
	Website string `pulumi:"website"`
}

func GetRegionOutput(ctx *pulumi.Context, args GetRegionOutputArgs, opts ...pulumi.InvokeOption) GetRegionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRegionResultOutput, error) {
			args := v.(GetRegionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:objectstorage/getRegion:getRegion", args, GetRegionResultOutput{}, options).(GetRegionResultOutput), nil
		}).(GetRegionResultOutput)
}

// A collection of arguments for invoking getRegion.
type GetRegionOutputArgs struct {
	// Id of an existing object storage Region that you want to search for.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetRegionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionArgs)(nil)).Elem()
}

// A collection of values returned by getRegion.
type GetRegionResultOutput struct{ *pulumi.OutputState }

func (GetRegionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionResult)(nil)).Elem()
}

func (o GetRegionResultOutput) ToGetRegionResultOutput() GetRegionResultOutput {
	return o
}

func (o GetRegionResultOutput) ToGetRegionResultOutputWithContext(ctx context.Context) GetRegionResultOutput {
	return o
}

// The capabilities of the region
func (o GetRegionResultOutput) Capability() GetRegionCapabilityOutput {
	return o.ApplyT(func(v GetRegionResult) GetRegionCapability { return v.Capability }).(GetRegionCapabilityOutput)
}

// The endpoint URL for the region
func (o GetRegionResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The id of the region
func (o GetRegionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The data center location of the region as per [Get Location](https://www.terraform.io/docs/cloud/v6/#tag/Locations/operation/locationsGet). *Can't be used as `LocationConstraint` on bucket creation.*
func (o GetRegionResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Location }).(pulumi.StringOutput)
}

// The available classes in the region
func (o GetRegionResultOutput) StorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegionResult) []string { return v.StorageClasses }).(pulumi.StringArrayOutput)
}

// The version of the region properties
func (o GetRegionResultOutput) Version() pulumi.Float64Output {
	return o.ApplyT(func(v GetRegionResult) float64 { return v.Version }).(pulumi.Float64Output)
}

// The website URL for the region
func (o GetRegionResultOutput) Website() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Website }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegionResultOutput{})
}
