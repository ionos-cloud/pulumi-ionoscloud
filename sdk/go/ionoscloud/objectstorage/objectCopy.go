// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package objectstorage

import (
	"context"
	"reflect"

	"errors"
	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a copy of an object that is already stored in IONOS Object Storage.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/objectstorage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			sourceBucket, err := objectstorage.NewBucket(ctx, "sourceBucket", nil)
//			if err != nil {
//				return err
//			}
//			target, err := objectstorage.NewBucket(ctx, "target", nil)
//			if err != nil {
//				return err
//			}
//			sourceObject, err := objectstorage.NewObject(ctx, "sourceObject", &objectstorage.ObjectArgs{
//				Bucket:      sourceBucket.Name,
//				Key:         pulumi.String("source_object"),
//				Content:     pulumi.String("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"),
//				ContentType: pulumi.String("application/octet-stream"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = objectstorage.NewObjectCopy(ctx, "example", &objectstorage.ObjectCopyArgs{
//				Bucket: target.Name,
//				Key:    pulumi.String("example"),
//				Source: pulumi.All(sourceBucket.Name, sourceObject.Key).ApplyT(func(_args []interface{}) (string, error) {
//					name := _args[0].(string)
//					key := _args[1].(string)
//					return fmt.Sprintf("%v/%v", name, key), nil
//				}).(pulumi.StringOutput),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ObjectCopy struct {
	pulumi.CustomResourceState

	// [string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// [string] Specifies caching behavior along the request/reply chain.
	CacheControl pulumi.StringPtrOutput `pulumi:"cacheControl"`
	// [string] Specifies presentational information for the object.
	ContentDisposition pulumi.StringPtrOutput `pulumi:"contentDisposition"`
	// [string] Specifies what content encodings have been applied to the object.
	ContentEncoding pulumi.StringPtrOutput `pulumi:"contentEncoding"`
	// [string] The natural language or languages of the intended audience for the object.
	ContentLanguage pulumi.StringPtrOutput `pulumi:"contentLanguage"`
	// [string] A standard MIME type describing the format of the contents.
	ContentType pulumi.StringOutput `pulumi:"contentType"`
	// Copies the object if its entity tag (ETag) matches the specified tag
	CopyIfMatch pulumi.StringPtrOutput `pulumi:"copyIfMatch"`
	// Copies the object if it has been modified since the specified time
	CopyIfModifiedSince pulumi.StringPtrOutput `pulumi:"copyIfModifiedSince"`
	// Copies the object if its entity tag (ETag) is different than the specified ETag
	CopyIfNoneMatch pulumi.StringPtrOutput `pulumi:"copyIfNoneMatch"`
	// Copies the object if it hasn't been modified since the specified time
	CopyIfUnmodifiedSince pulumi.StringPtrOutput `pulumi:"copyIfUnmodifiedSince"`
	// [string] An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// [string] The date and time at which the object is no longer cacheable.
	Expires pulumi.StringPtrOutput `pulumi:"expires"`
	// [bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.
	ForceDestroy pulumi.BoolOutput `pulumi:"forceDestroy"`
	// [string] The key of the object. Must be at least 1 character long.
	Key pulumi.StringOutput `pulumi:"key"`
	// [string] The date and time at which the object was last modified.
	LastModified pulumi.StringOutput `pulumi:"lastModified"`
	// [map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.
	Metadata pulumi.StringMapOutput `pulumi:"metadata"`
	// [string] Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.
	MetadataDirective pulumi.StringPtrOutput `pulumi:"metadataDirective"`
	// [string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.
	ObjectLockLegalHold pulumi.StringPtrOutput `pulumi:"objectLockLegalHold"`
	// [string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
	ObjectLockMode pulumi.StringPtrOutput `pulumi:"objectLockMode"`
	// [string] The date and time when the object lock retention expires.Must be in RFC3999 format
	ObjectLockRetainUntilDate pulumi.StringPtrOutput `pulumi:"objectLockRetainUntilDate"`
	// [string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.
	ServerSideEncryption pulumi.StringPtrOutput `pulumi:"serverSideEncryption"`
	// [string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.
	ServerSideEncryptionCustomerAlgorithm pulumi.StringPtrOutput `pulumi:"serverSideEncryptionCustomerAlgorithm"`
	// [string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.
	ServerSideEncryptionCustomerKey pulumi.StringPtrOutput `pulumi:"serverSideEncryptionCustomerKey"`
	// [string] Specifies the 128-bit MD5 digest of the encryption key.
	ServerSideEncryptionCustomerKeyMd5 pulumi.StringPtrOutput `pulumi:"serverSideEncryptionCustomerKeyMd5"`
	// [string] The source of the object to be copied
	Source pulumi.StringOutput `pulumi:"source"`
	// [string] Specifies the algorithm used for source object encryption. Valid value is AES256.
	SourceCustomerAlgorithm pulumi.StringPtrOutput `pulumi:"sourceCustomerAlgorithm"`
	// [string] Specifies the 256-bit, base64-encoded encryption key for source object encryption.
	SourceCustomerKey pulumi.StringPtrOutput `pulumi:"sourceCustomerKey"`
	// [string] Specifies the 128-bit MD5 digest of the encryption key for source object encryption.
	SourceCustomerKeyMd5 pulumi.StringPtrOutput `pulumi:"sourceCustomerKeyMd5"`
	// [string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.
	StorageClass pulumi.StringOutput `pulumi:"storageClass"`
	// [string] Specifies whether the object tag-set is copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.
	TaggingDirective pulumi.StringPtrOutput `pulumi:"taggingDirective"`
	// [map] The tag-set for the object.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// [string] The version of the object.
	VersionId pulumi.StringOutput `pulumi:"versionId"`
	// [string] Redirects requests for this object to another object in the same bucket or to an external URL.
	WebsiteRedirect pulumi.StringPtrOutput `pulumi:"websiteRedirect"`
}

// NewObjectCopy registers a new resource with the given unique name, arguments, and options.
func NewObjectCopy(ctx *pulumi.Context,
	name string, args *ObjectCopyArgs, opts ...pulumi.ResourceOption) (*ObjectCopy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ObjectCopy
	err := ctx.RegisterResource("ionoscloud:objectstorage/objectCopy:ObjectCopy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectCopy gets an existing ObjectCopy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectCopy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectCopyState, opts ...pulumi.ResourceOption) (*ObjectCopy, error) {
	var resource ObjectCopy
	err := ctx.ReadResource("ionoscloud:objectstorage/objectCopy:ObjectCopy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectCopy resources.
type objectCopyState struct {
	// [string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.
	Bucket *string `pulumi:"bucket"`
	// [string] Specifies caching behavior along the request/reply chain.
	CacheControl *string `pulumi:"cacheControl"`
	// [string] Specifies presentational information for the object.
	ContentDisposition *string `pulumi:"contentDisposition"`
	// [string] Specifies what content encodings have been applied to the object.
	ContentEncoding *string `pulumi:"contentEncoding"`
	// [string] The natural language or languages of the intended audience for the object.
	ContentLanguage *string `pulumi:"contentLanguage"`
	// [string] A standard MIME type describing the format of the contents.
	ContentType *string `pulumi:"contentType"`
	// Copies the object if its entity tag (ETag) matches the specified tag
	CopyIfMatch *string `pulumi:"copyIfMatch"`
	// Copies the object if it has been modified since the specified time
	CopyIfModifiedSince *string `pulumi:"copyIfModifiedSince"`
	// Copies the object if its entity tag (ETag) is different than the specified ETag
	CopyIfNoneMatch *string `pulumi:"copyIfNoneMatch"`
	// Copies the object if it hasn't been modified since the specified time
	CopyIfUnmodifiedSince *string `pulumi:"copyIfUnmodifiedSince"`
	// [string] An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.
	Etag *string `pulumi:"etag"`
	// [string] The date and time at which the object is no longer cacheable.
	Expires *string `pulumi:"expires"`
	// [bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// [string] The key of the object. Must be at least 1 character long.
	Key *string `pulumi:"key"`
	// [string] The date and time at which the object was last modified.
	LastModified *string `pulumi:"lastModified"`
	// [map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.
	Metadata map[string]string `pulumi:"metadata"`
	// [string] Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.
	MetadataDirective *string `pulumi:"metadataDirective"`
	// [string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.
	ObjectLockLegalHold *string `pulumi:"objectLockLegalHold"`
	// [string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
	ObjectLockMode *string `pulumi:"objectLockMode"`
	// [string] The date and time when the object lock retention expires.Must be in RFC3999 format
	ObjectLockRetainUntilDate *string `pulumi:"objectLockRetainUntilDate"`
	// [string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.
	ServerSideEncryption *string `pulumi:"serverSideEncryption"`
	// [string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.
	ServerSideEncryptionCustomerAlgorithm *string `pulumi:"serverSideEncryptionCustomerAlgorithm"`
	// [string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.
	ServerSideEncryptionCustomerKey *string `pulumi:"serverSideEncryptionCustomerKey"`
	// [string] Specifies the 128-bit MD5 digest of the encryption key.
	ServerSideEncryptionCustomerKeyMd5 *string `pulumi:"serverSideEncryptionCustomerKeyMd5"`
	// [string] The source of the object to be copied
	Source *string `pulumi:"source"`
	// [string] Specifies the algorithm used for source object encryption. Valid value is AES256.
	SourceCustomerAlgorithm *string `pulumi:"sourceCustomerAlgorithm"`
	// [string] Specifies the 256-bit, base64-encoded encryption key for source object encryption.
	SourceCustomerKey *string `pulumi:"sourceCustomerKey"`
	// [string] Specifies the 128-bit MD5 digest of the encryption key for source object encryption.
	SourceCustomerKeyMd5 *string `pulumi:"sourceCustomerKeyMd5"`
	// [string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.
	StorageClass *string `pulumi:"storageClass"`
	// [string] Specifies whether the object tag-set is copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.
	TaggingDirective *string `pulumi:"taggingDirective"`
	// [map] The tag-set for the object.
	Tags map[string]string `pulumi:"tags"`
	// [string] The version of the object.
	VersionId *string `pulumi:"versionId"`
	// [string] Redirects requests for this object to another object in the same bucket or to an external URL.
	WebsiteRedirect *string `pulumi:"websiteRedirect"`
}

type ObjectCopyState struct {
	// [string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.
	Bucket pulumi.StringPtrInput
	// [string] Specifies caching behavior along the request/reply chain.
	CacheControl pulumi.StringPtrInput
	// [string] Specifies presentational information for the object.
	ContentDisposition pulumi.StringPtrInput
	// [string] Specifies what content encodings have been applied to the object.
	ContentEncoding pulumi.StringPtrInput
	// [string] The natural language or languages of the intended audience for the object.
	ContentLanguage pulumi.StringPtrInput
	// [string] A standard MIME type describing the format of the contents.
	ContentType pulumi.StringPtrInput
	// Copies the object if its entity tag (ETag) matches the specified tag
	CopyIfMatch pulumi.StringPtrInput
	// Copies the object if it has been modified since the specified time
	CopyIfModifiedSince pulumi.StringPtrInput
	// Copies the object if its entity tag (ETag) is different than the specified ETag
	CopyIfNoneMatch pulumi.StringPtrInput
	// Copies the object if it hasn't been modified since the specified time
	CopyIfUnmodifiedSince pulumi.StringPtrInput
	// [string] An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.
	Etag pulumi.StringPtrInput
	// [string] The date and time at which the object is no longer cacheable.
	Expires pulumi.StringPtrInput
	// [bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.
	ForceDestroy pulumi.BoolPtrInput
	// [string] The key of the object. Must be at least 1 character long.
	Key pulumi.StringPtrInput
	// [string] The date and time at which the object was last modified.
	LastModified pulumi.StringPtrInput
	// [map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.
	Metadata pulumi.StringMapInput
	// [string] Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.
	MetadataDirective pulumi.StringPtrInput
	// [string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.
	ObjectLockLegalHold pulumi.StringPtrInput
	// [string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
	ObjectLockMode pulumi.StringPtrInput
	// [string] The date and time when the object lock retention expires.Must be in RFC3999 format
	ObjectLockRetainUntilDate pulumi.StringPtrInput
	// [string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.
	ServerSideEncryption pulumi.StringPtrInput
	// [string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.
	ServerSideEncryptionCustomerAlgorithm pulumi.StringPtrInput
	// [string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.
	ServerSideEncryptionCustomerKey pulumi.StringPtrInput
	// [string] Specifies the 128-bit MD5 digest of the encryption key.
	ServerSideEncryptionCustomerKeyMd5 pulumi.StringPtrInput
	// [string] The source of the object to be copied
	Source pulumi.StringPtrInput
	// [string] Specifies the algorithm used for source object encryption. Valid value is AES256.
	SourceCustomerAlgorithm pulumi.StringPtrInput
	// [string] Specifies the 256-bit, base64-encoded encryption key for source object encryption.
	SourceCustomerKey pulumi.StringPtrInput
	// [string] Specifies the 128-bit MD5 digest of the encryption key for source object encryption.
	SourceCustomerKeyMd5 pulumi.StringPtrInput
	// [string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.
	StorageClass pulumi.StringPtrInput
	// [string] Specifies whether the object tag-set is copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.
	TaggingDirective pulumi.StringPtrInput
	// [map] The tag-set for the object.
	Tags pulumi.StringMapInput
	// [string] The version of the object.
	VersionId pulumi.StringPtrInput
	// [string] Redirects requests for this object to another object in the same bucket or to an external URL.
	WebsiteRedirect pulumi.StringPtrInput
}

func (ObjectCopyState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectCopyState)(nil)).Elem()
}

type objectCopyArgs struct {
	// [string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.
	Bucket string `pulumi:"bucket"`
	// [string] Specifies caching behavior along the request/reply chain.
	CacheControl *string `pulumi:"cacheControl"`
	// [string] Specifies presentational information for the object.
	ContentDisposition *string `pulumi:"contentDisposition"`
	// [string] Specifies what content encodings have been applied to the object.
	ContentEncoding *string `pulumi:"contentEncoding"`
	// [string] The natural language or languages of the intended audience for the object.
	ContentLanguage *string `pulumi:"contentLanguage"`
	// [string] A standard MIME type describing the format of the contents.
	ContentType *string `pulumi:"contentType"`
	// Copies the object if its entity tag (ETag) matches the specified tag
	CopyIfMatch *string `pulumi:"copyIfMatch"`
	// Copies the object if it has been modified since the specified time
	CopyIfModifiedSince *string `pulumi:"copyIfModifiedSince"`
	// Copies the object if its entity tag (ETag) is different than the specified ETag
	CopyIfNoneMatch *string `pulumi:"copyIfNoneMatch"`
	// Copies the object if it hasn't been modified since the specified time
	CopyIfUnmodifiedSince *string `pulumi:"copyIfUnmodifiedSince"`
	// [string] The date and time at which the object is no longer cacheable.
	Expires *string `pulumi:"expires"`
	// [bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// [string] The key of the object. Must be at least 1 character long.
	Key string `pulumi:"key"`
	// [map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.
	Metadata map[string]string `pulumi:"metadata"`
	// [string] Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.
	MetadataDirective *string `pulumi:"metadataDirective"`
	// [string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.
	ObjectLockLegalHold *string `pulumi:"objectLockLegalHold"`
	// [string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
	ObjectLockMode *string `pulumi:"objectLockMode"`
	// [string] The date and time when the object lock retention expires.Must be in RFC3999 format
	ObjectLockRetainUntilDate *string `pulumi:"objectLockRetainUntilDate"`
	// [string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.
	ServerSideEncryption *string `pulumi:"serverSideEncryption"`
	// [string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.
	ServerSideEncryptionCustomerAlgorithm *string `pulumi:"serverSideEncryptionCustomerAlgorithm"`
	// [string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.
	ServerSideEncryptionCustomerKey *string `pulumi:"serverSideEncryptionCustomerKey"`
	// [string] Specifies the 128-bit MD5 digest of the encryption key.
	ServerSideEncryptionCustomerKeyMd5 *string `pulumi:"serverSideEncryptionCustomerKeyMd5"`
	// [string] The source of the object to be copied
	Source string `pulumi:"source"`
	// [string] Specifies the algorithm used for source object encryption. Valid value is AES256.
	SourceCustomerAlgorithm *string `pulumi:"sourceCustomerAlgorithm"`
	// [string] Specifies the 256-bit, base64-encoded encryption key for source object encryption.
	SourceCustomerKey *string `pulumi:"sourceCustomerKey"`
	// [string] Specifies the 128-bit MD5 digest of the encryption key for source object encryption.
	SourceCustomerKeyMd5 *string `pulumi:"sourceCustomerKeyMd5"`
	// [string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.
	StorageClass *string `pulumi:"storageClass"`
	// [string] Specifies whether the object tag-set is copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.
	TaggingDirective *string `pulumi:"taggingDirective"`
	// [map] The tag-set for the object.
	Tags map[string]string `pulumi:"tags"`
	// [string] Redirects requests for this object to another object in the same bucket or to an external URL.
	WebsiteRedirect *string `pulumi:"websiteRedirect"`
}

// The set of arguments for constructing a ObjectCopy resource.
type ObjectCopyArgs struct {
	// [string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.
	Bucket pulumi.StringInput
	// [string] Specifies caching behavior along the request/reply chain.
	CacheControl pulumi.StringPtrInput
	// [string] Specifies presentational information for the object.
	ContentDisposition pulumi.StringPtrInput
	// [string] Specifies what content encodings have been applied to the object.
	ContentEncoding pulumi.StringPtrInput
	// [string] The natural language or languages of the intended audience for the object.
	ContentLanguage pulumi.StringPtrInput
	// [string] A standard MIME type describing the format of the contents.
	ContentType pulumi.StringPtrInput
	// Copies the object if its entity tag (ETag) matches the specified tag
	CopyIfMatch pulumi.StringPtrInput
	// Copies the object if it has been modified since the specified time
	CopyIfModifiedSince pulumi.StringPtrInput
	// Copies the object if its entity tag (ETag) is different than the specified ETag
	CopyIfNoneMatch pulumi.StringPtrInput
	// Copies the object if it hasn't been modified since the specified time
	CopyIfUnmodifiedSince pulumi.StringPtrInput
	// [string] The date and time at which the object is no longer cacheable.
	Expires pulumi.StringPtrInput
	// [bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.
	ForceDestroy pulumi.BoolPtrInput
	// [string] The key of the object. Must be at least 1 character long.
	Key pulumi.StringInput
	// [map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.
	Metadata pulumi.StringMapInput
	// [string] Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.
	MetadataDirective pulumi.StringPtrInput
	// [string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.
	ObjectLockLegalHold pulumi.StringPtrInput
	// [string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
	ObjectLockMode pulumi.StringPtrInput
	// [string] The date and time when the object lock retention expires.Must be in RFC3999 format
	ObjectLockRetainUntilDate pulumi.StringPtrInput
	// [string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.
	ServerSideEncryption pulumi.StringPtrInput
	// [string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.
	ServerSideEncryptionCustomerAlgorithm pulumi.StringPtrInput
	// [string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.
	ServerSideEncryptionCustomerKey pulumi.StringPtrInput
	// [string] Specifies the 128-bit MD5 digest of the encryption key.
	ServerSideEncryptionCustomerKeyMd5 pulumi.StringPtrInput
	// [string] The source of the object to be copied
	Source pulumi.StringInput
	// [string] Specifies the algorithm used for source object encryption. Valid value is AES256.
	SourceCustomerAlgorithm pulumi.StringPtrInput
	// [string] Specifies the 256-bit, base64-encoded encryption key for source object encryption.
	SourceCustomerKey pulumi.StringPtrInput
	// [string] Specifies the 128-bit MD5 digest of the encryption key for source object encryption.
	SourceCustomerKeyMd5 pulumi.StringPtrInput
	// [string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.
	StorageClass pulumi.StringPtrInput
	// [string] Specifies whether the object tag-set is copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.
	TaggingDirective pulumi.StringPtrInput
	// [map] The tag-set for the object.
	Tags pulumi.StringMapInput
	// [string] Redirects requests for this object to another object in the same bucket or to an external URL.
	WebsiteRedirect pulumi.StringPtrInput
}

func (ObjectCopyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectCopyArgs)(nil)).Elem()
}

type ObjectCopyInput interface {
	pulumi.Input

	ToObjectCopyOutput() ObjectCopyOutput
	ToObjectCopyOutputWithContext(ctx context.Context) ObjectCopyOutput
}

func (*ObjectCopy) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectCopy)(nil)).Elem()
}

func (i *ObjectCopy) ToObjectCopyOutput() ObjectCopyOutput {
	return i.ToObjectCopyOutputWithContext(context.Background())
}

func (i *ObjectCopy) ToObjectCopyOutputWithContext(ctx context.Context) ObjectCopyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectCopyOutput)
}

// ObjectCopyArrayInput is an input type that accepts ObjectCopyArray and ObjectCopyArrayOutput values.
// You can construct a concrete instance of `ObjectCopyArrayInput` via:
//
//	ObjectCopyArray{ ObjectCopyArgs{...} }
type ObjectCopyArrayInput interface {
	pulumi.Input

	ToObjectCopyArrayOutput() ObjectCopyArrayOutput
	ToObjectCopyArrayOutputWithContext(context.Context) ObjectCopyArrayOutput
}

type ObjectCopyArray []ObjectCopyInput

func (ObjectCopyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectCopy)(nil)).Elem()
}

func (i ObjectCopyArray) ToObjectCopyArrayOutput() ObjectCopyArrayOutput {
	return i.ToObjectCopyArrayOutputWithContext(context.Background())
}

func (i ObjectCopyArray) ToObjectCopyArrayOutputWithContext(ctx context.Context) ObjectCopyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectCopyArrayOutput)
}

// ObjectCopyMapInput is an input type that accepts ObjectCopyMap and ObjectCopyMapOutput values.
// You can construct a concrete instance of `ObjectCopyMapInput` via:
//
//	ObjectCopyMap{ "key": ObjectCopyArgs{...} }
type ObjectCopyMapInput interface {
	pulumi.Input

	ToObjectCopyMapOutput() ObjectCopyMapOutput
	ToObjectCopyMapOutputWithContext(context.Context) ObjectCopyMapOutput
}

type ObjectCopyMap map[string]ObjectCopyInput

func (ObjectCopyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectCopy)(nil)).Elem()
}

func (i ObjectCopyMap) ToObjectCopyMapOutput() ObjectCopyMapOutput {
	return i.ToObjectCopyMapOutputWithContext(context.Background())
}

func (i ObjectCopyMap) ToObjectCopyMapOutputWithContext(ctx context.Context) ObjectCopyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectCopyMapOutput)
}

type ObjectCopyOutput struct{ *pulumi.OutputState }

func (ObjectCopyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectCopy)(nil)).Elem()
}

func (o ObjectCopyOutput) ToObjectCopyOutput() ObjectCopyOutput {
	return o
}

func (o ObjectCopyOutput) ToObjectCopyOutputWithContext(ctx context.Context) ObjectCopyOutput {
	return o
}

// [string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.
func (o ObjectCopyOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// [string] Specifies caching behavior along the request/reply chain.
func (o ObjectCopyOutput) CacheControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.CacheControl }).(pulumi.StringPtrOutput)
}

// [string] Specifies presentational information for the object.
func (o ObjectCopyOutput) ContentDisposition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.ContentDisposition }).(pulumi.StringPtrOutput)
}

// [string] Specifies what content encodings have been applied to the object.
func (o ObjectCopyOutput) ContentEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.ContentEncoding }).(pulumi.StringPtrOutput)
}

// [string] The natural language or languages of the intended audience for the object.
func (o ObjectCopyOutput) ContentLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.ContentLanguage }).(pulumi.StringPtrOutput)
}

// [string] A standard MIME type describing the format of the contents.
func (o ObjectCopyOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringOutput { return v.ContentType }).(pulumi.StringOutput)
}

// Copies the object if its entity tag (ETag) matches the specified tag
func (o ObjectCopyOutput) CopyIfMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.CopyIfMatch }).(pulumi.StringPtrOutput)
}

// Copies the object if it has been modified since the specified time
func (o ObjectCopyOutput) CopyIfModifiedSince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.CopyIfModifiedSince }).(pulumi.StringPtrOutput)
}

// Copies the object if its entity tag (ETag) is different than the specified ETag
func (o ObjectCopyOutput) CopyIfNoneMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.CopyIfNoneMatch }).(pulumi.StringPtrOutput)
}

// Copies the object if it hasn't been modified since the specified time
func (o ObjectCopyOutput) CopyIfUnmodifiedSince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.CopyIfUnmodifiedSince }).(pulumi.StringPtrOutput)
}

// [string] An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.
func (o ObjectCopyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// [string] The date and time at which the object is no longer cacheable.
func (o ObjectCopyOutput) Expires() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.Expires }).(pulumi.StringPtrOutput)
}

// [bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.
func (o ObjectCopyOutput) ForceDestroy() pulumi.BoolOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.BoolOutput { return v.ForceDestroy }).(pulumi.BoolOutput)
}

// [string] The key of the object. Must be at least 1 character long.
func (o ObjectCopyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// [string] The date and time at which the object was last modified.
func (o ObjectCopyOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringOutput { return v.LastModified }).(pulumi.StringOutput)
}

// [map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.
func (o ObjectCopyOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringMapOutput { return v.Metadata }).(pulumi.StringMapOutput)
}

// [string] Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.
func (o ObjectCopyOutput) MetadataDirective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.MetadataDirective }).(pulumi.StringPtrOutput)
}

// [string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.
func (o ObjectCopyOutput) ObjectLockLegalHold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.ObjectLockLegalHold }).(pulumi.StringPtrOutput)
}

// [string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
func (o ObjectCopyOutput) ObjectLockMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.ObjectLockMode }).(pulumi.StringPtrOutput)
}

// [string] The date and time when the object lock retention expires.Must be in RFC3999 format
func (o ObjectCopyOutput) ObjectLockRetainUntilDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.ObjectLockRetainUntilDate }).(pulumi.StringPtrOutput)
}

// [string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.
func (o ObjectCopyOutput) ServerSideEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.ServerSideEncryption }).(pulumi.StringPtrOutput)
}

// [string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.
func (o ObjectCopyOutput) ServerSideEncryptionCustomerAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.ServerSideEncryptionCustomerAlgorithm }).(pulumi.StringPtrOutput)
}

// [string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.
func (o ObjectCopyOutput) ServerSideEncryptionCustomerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.ServerSideEncryptionCustomerKey }).(pulumi.StringPtrOutput)
}

// [string] Specifies the 128-bit MD5 digest of the encryption key.
func (o ObjectCopyOutput) ServerSideEncryptionCustomerKeyMd5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.ServerSideEncryptionCustomerKeyMd5 }).(pulumi.StringPtrOutput)
}

// [string] The source of the object to be copied
func (o ObjectCopyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

// [string] Specifies the algorithm used for source object encryption. Valid value is AES256.
func (o ObjectCopyOutput) SourceCustomerAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.SourceCustomerAlgorithm }).(pulumi.StringPtrOutput)
}

// [string] Specifies the 256-bit, base64-encoded encryption key for source object encryption.
func (o ObjectCopyOutput) SourceCustomerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.SourceCustomerKey }).(pulumi.StringPtrOutput)
}

// [string] Specifies the 128-bit MD5 digest of the encryption key for source object encryption.
func (o ObjectCopyOutput) SourceCustomerKeyMd5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.SourceCustomerKeyMd5 }).(pulumi.StringPtrOutput)
}

// [string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.
func (o ObjectCopyOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringOutput { return v.StorageClass }).(pulumi.StringOutput)
}

// [string] Specifies whether the object tag-set is copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.
func (o ObjectCopyOutput) TaggingDirective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.TaggingDirective }).(pulumi.StringPtrOutput)
}

// [map] The tag-set for the object.
func (o ObjectCopyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// [string] The version of the object.
func (o ObjectCopyOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringOutput { return v.VersionId }).(pulumi.StringOutput)
}

// [string] Redirects requests for this object to another object in the same bucket or to an external URL.
func (o ObjectCopyOutput) WebsiteRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectCopy) pulumi.StringPtrOutput { return v.WebsiteRedirect }).(pulumi.StringPtrOutput)
}

type ObjectCopyArrayOutput struct{ *pulumi.OutputState }

func (ObjectCopyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectCopy)(nil)).Elem()
}

func (o ObjectCopyArrayOutput) ToObjectCopyArrayOutput() ObjectCopyArrayOutput {
	return o
}

func (o ObjectCopyArrayOutput) ToObjectCopyArrayOutputWithContext(ctx context.Context) ObjectCopyArrayOutput {
	return o
}

func (o ObjectCopyArrayOutput) Index(i pulumi.IntInput) ObjectCopyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ObjectCopy {
		return vs[0].([]*ObjectCopy)[vs[1].(int)]
	}).(ObjectCopyOutput)
}

type ObjectCopyMapOutput struct{ *pulumi.OutputState }

func (ObjectCopyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectCopy)(nil)).Elem()
}

func (o ObjectCopyMapOutput) ToObjectCopyMapOutput() ObjectCopyMapOutput {
	return o
}

func (o ObjectCopyMapOutput) ToObjectCopyMapOutputWithContext(ctx context.Context) ObjectCopyMapOutput {
	return o
}

func (o ObjectCopyMapOutput) MapIndex(k pulumi.StringInput) ObjectCopyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ObjectCopy {
		return vs[0].(map[string]*ObjectCopy)[vs[1].(string)]
	}).(ObjectCopyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectCopyInput)(nil)).Elem(), &ObjectCopy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectCopyArrayInput)(nil)).Elem(), ObjectCopyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectCopyMapInput)(nil)).Elem(), ObjectCopyMap{})
	pulumi.RegisterOutputType(ObjectCopyOutput{})
	pulumi.RegisterOutputType(ObjectCopyArrayOutput{})
	pulumi.RegisterOutputType(ObjectCopyMapOutput{})
}
