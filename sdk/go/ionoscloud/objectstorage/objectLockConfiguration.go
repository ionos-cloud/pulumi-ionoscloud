// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package objectstorage

import (
	"context"
	"reflect"

	"errors"
	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages Object Lock Configuration for Buckets on IonosCloud.
//
// ## Import
//
// IONOS Object Storage Bucket object lock configuration can be imported using the `bucket` name.
//
// ```sh
// $ pulumi import ionoscloud:objectstorage/objectLockConfiguration:ObjectLockConfiguration example example
// ```
type ObjectLockConfiguration struct {
	pulumi.CustomResourceState

	// [string] The name of the bucket where the object will be stored.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// [Optional] The object lock configuration status of the bucket. Must be `Enabled`.
	ObjectLockEnabled pulumi.StringOutput `pulumi:"objectLockEnabled"`
	// [block] A block of rule as defined below.
	Rule ObjectLockConfigurationRulePtrOutput `pulumi:"rule"`
}

// NewObjectLockConfiguration registers a new resource with the given unique name, arguments, and options.
func NewObjectLockConfiguration(ctx *pulumi.Context,
	name string, args *ObjectLockConfigurationArgs, opts ...pulumi.ResourceOption) (*ObjectLockConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ObjectLockConfiguration
	err := ctx.RegisterResource("ionoscloud:objectstorage/objectLockConfiguration:ObjectLockConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectLockConfiguration gets an existing ObjectLockConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectLockConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectLockConfigurationState, opts ...pulumi.ResourceOption) (*ObjectLockConfiguration, error) {
	var resource ObjectLockConfiguration
	err := ctx.ReadResource("ionoscloud:objectstorage/objectLockConfiguration:ObjectLockConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectLockConfiguration resources.
type objectLockConfigurationState struct {
	// [string] The name of the bucket where the object will be stored.
	Bucket *string `pulumi:"bucket"`
	// [Optional] The object lock configuration status of the bucket. Must be `Enabled`.
	ObjectLockEnabled *string `pulumi:"objectLockEnabled"`
	// [block] A block of rule as defined below.
	Rule *ObjectLockConfigurationRule `pulumi:"rule"`
}

type ObjectLockConfigurationState struct {
	// [string] The name of the bucket where the object will be stored.
	Bucket pulumi.StringPtrInput
	// [Optional] The object lock configuration status of the bucket. Must be `Enabled`.
	ObjectLockEnabled pulumi.StringPtrInput
	// [block] A block of rule as defined below.
	Rule ObjectLockConfigurationRulePtrInput
}

func (ObjectLockConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectLockConfigurationState)(nil)).Elem()
}

type objectLockConfigurationArgs struct {
	// [string] The name of the bucket where the object will be stored.
	Bucket string `pulumi:"bucket"`
	// [Optional] The object lock configuration status of the bucket. Must be `Enabled`.
	ObjectLockEnabled *string `pulumi:"objectLockEnabled"`
	// [block] A block of rule as defined below.
	Rule *ObjectLockConfigurationRule `pulumi:"rule"`
}

// The set of arguments for constructing a ObjectLockConfiguration resource.
type ObjectLockConfigurationArgs struct {
	// [string] The name of the bucket where the object will be stored.
	Bucket pulumi.StringInput
	// [Optional] The object lock configuration status of the bucket. Must be `Enabled`.
	ObjectLockEnabled pulumi.StringPtrInput
	// [block] A block of rule as defined below.
	Rule ObjectLockConfigurationRulePtrInput
}

func (ObjectLockConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectLockConfigurationArgs)(nil)).Elem()
}

type ObjectLockConfigurationInput interface {
	pulumi.Input

	ToObjectLockConfigurationOutput() ObjectLockConfigurationOutput
	ToObjectLockConfigurationOutputWithContext(ctx context.Context) ObjectLockConfigurationOutput
}

func (*ObjectLockConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectLockConfiguration)(nil)).Elem()
}

func (i *ObjectLockConfiguration) ToObjectLockConfigurationOutput() ObjectLockConfigurationOutput {
	return i.ToObjectLockConfigurationOutputWithContext(context.Background())
}

func (i *ObjectLockConfiguration) ToObjectLockConfigurationOutputWithContext(ctx context.Context) ObjectLockConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectLockConfigurationOutput)
}

// ObjectLockConfigurationArrayInput is an input type that accepts ObjectLockConfigurationArray and ObjectLockConfigurationArrayOutput values.
// You can construct a concrete instance of `ObjectLockConfigurationArrayInput` via:
//
//	ObjectLockConfigurationArray{ ObjectLockConfigurationArgs{...} }
type ObjectLockConfigurationArrayInput interface {
	pulumi.Input

	ToObjectLockConfigurationArrayOutput() ObjectLockConfigurationArrayOutput
	ToObjectLockConfigurationArrayOutputWithContext(context.Context) ObjectLockConfigurationArrayOutput
}

type ObjectLockConfigurationArray []ObjectLockConfigurationInput

func (ObjectLockConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectLockConfiguration)(nil)).Elem()
}

func (i ObjectLockConfigurationArray) ToObjectLockConfigurationArrayOutput() ObjectLockConfigurationArrayOutput {
	return i.ToObjectLockConfigurationArrayOutputWithContext(context.Background())
}

func (i ObjectLockConfigurationArray) ToObjectLockConfigurationArrayOutputWithContext(ctx context.Context) ObjectLockConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectLockConfigurationArrayOutput)
}

// ObjectLockConfigurationMapInput is an input type that accepts ObjectLockConfigurationMap and ObjectLockConfigurationMapOutput values.
// You can construct a concrete instance of `ObjectLockConfigurationMapInput` via:
//
//	ObjectLockConfigurationMap{ "key": ObjectLockConfigurationArgs{...} }
type ObjectLockConfigurationMapInput interface {
	pulumi.Input

	ToObjectLockConfigurationMapOutput() ObjectLockConfigurationMapOutput
	ToObjectLockConfigurationMapOutputWithContext(context.Context) ObjectLockConfigurationMapOutput
}

type ObjectLockConfigurationMap map[string]ObjectLockConfigurationInput

func (ObjectLockConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectLockConfiguration)(nil)).Elem()
}

func (i ObjectLockConfigurationMap) ToObjectLockConfigurationMapOutput() ObjectLockConfigurationMapOutput {
	return i.ToObjectLockConfigurationMapOutputWithContext(context.Background())
}

func (i ObjectLockConfigurationMap) ToObjectLockConfigurationMapOutputWithContext(ctx context.Context) ObjectLockConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectLockConfigurationMapOutput)
}

type ObjectLockConfigurationOutput struct{ *pulumi.OutputState }

func (ObjectLockConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectLockConfiguration)(nil)).Elem()
}

func (o ObjectLockConfigurationOutput) ToObjectLockConfigurationOutput() ObjectLockConfigurationOutput {
	return o
}

func (o ObjectLockConfigurationOutput) ToObjectLockConfigurationOutputWithContext(ctx context.Context) ObjectLockConfigurationOutput {
	return o
}

// [string] The name of the bucket where the object will be stored.
func (o ObjectLockConfigurationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectLockConfiguration) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// [Optional] The object lock configuration status of the bucket. Must be `Enabled`.
func (o ObjectLockConfigurationOutput) ObjectLockEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectLockConfiguration) pulumi.StringOutput { return v.ObjectLockEnabled }).(pulumi.StringOutput)
}

// [block] A block of rule as defined below.
func (o ObjectLockConfigurationOutput) Rule() ObjectLockConfigurationRulePtrOutput {
	return o.ApplyT(func(v *ObjectLockConfiguration) ObjectLockConfigurationRulePtrOutput { return v.Rule }).(ObjectLockConfigurationRulePtrOutput)
}

type ObjectLockConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ObjectLockConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectLockConfiguration)(nil)).Elem()
}

func (o ObjectLockConfigurationArrayOutput) ToObjectLockConfigurationArrayOutput() ObjectLockConfigurationArrayOutput {
	return o
}

func (o ObjectLockConfigurationArrayOutput) ToObjectLockConfigurationArrayOutputWithContext(ctx context.Context) ObjectLockConfigurationArrayOutput {
	return o
}

func (o ObjectLockConfigurationArrayOutput) Index(i pulumi.IntInput) ObjectLockConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ObjectLockConfiguration {
		return vs[0].([]*ObjectLockConfiguration)[vs[1].(int)]
	}).(ObjectLockConfigurationOutput)
}

type ObjectLockConfigurationMapOutput struct{ *pulumi.OutputState }

func (ObjectLockConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectLockConfiguration)(nil)).Elem()
}

func (o ObjectLockConfigurationMapOutput) ToObjectLockConfigurationMapOutput() ObjectLockConfigurationMapOutput {
	return o
}

func (o ObjectLockConfigurationMapOutput) ToObjectLockConfigurationMapOutputWithContext(ctx context.Context) ObjectLockConfigurationMapOutput {
	return o
}

func (o ObjectLockConfigurationMapOutput) MapIndex(k pulumi.StringInput) ObjectLockConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ObjectLockConfiguration {
		return vs[0].(map[string]*ObjectLockConfiguration)[vs[1].(string)]
	}).(ObjectLockConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectLockConfigurationInput)(nil)).Elem(), &ObjectLockConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectLockConfigurationArrayInput)(nil)).Elem(), ObjectLockConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectLockConfigurationMapInput)(nil)).Elem(), ObjectLockConfigurationMap{})
	pulumi.RegisterOutputType(ObjectLockConfigurationOutput{})
	pulumi.RegisterOutputType(ObjectLockConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ObjectLockConfigurationMapOutput{})
}
