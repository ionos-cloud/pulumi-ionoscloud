// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package objectstorage

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **Object Storage Accesskey data source** can be used to search for and return an existing Object Storage Accesskeys.
//
// ## Example Usage
//
// ### By ID
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/objectstorage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := objectstorage.LookupAccessKey(ctx, &objectstorage.LookupAccessKeyArgs{
//				Id: pulumi.StringRef("accesskey_id"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAccessKey(ctx *pulumi.Context, args *LookupAccessKeyArgs, opts ...pulumi.InvokeOption) (*LookupAccessKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccessKeyResult
	err := ctx.Invoke("ionoscloud:objectstorage/getAccessKey:getAccessKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccessKey.
type LookupAccessKeyArgs struct {
	// Access key metadata is a string of 92 characters.
	Accesskey *string `pulumi:"accesskey"`
	// Description of the Access key.
	Description *string `pulumi:"description"`
	// Id of an existing object storage accesskey that you want to search for.
	Id *string `pulumi:"id"`
}

// A collection of values returned by getAccessKey.
type LookupAccessKeyResult struct {
	// Access key metadata is a string of 92 characters.
	Accesskey string `pulumi:"accesskey"`
	// The canonical user ID which is valid for user-owned buckets.
	CanonicalUserId string `pulumi:"canonicalUserId"`
	// The contract user ID which is valid for contract-owned buckets
	ContractUserId string `pulumi:"contractUserId"`
	// Description of the Access key.
	Description string `pulumi:"description"`
	// The ID (UUID) of the AccessKey.
	Id string `pulumi:"id"`
}

func LookupAccessKeyOutput(ctx *pulumi.Context, args LookupAccessKeyOutputArgs, opts ...pulumi.InvokeOption) LookupAccessKeyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAccessKeyResultOutput, error) {
			args := v.(LookupAccessKeyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:objectstorage/getAccessKey:getAccessKey", args, LookupAccessKeyResultOutput{}, options).(LookupAccessKeyResultOutput), nil
		}).(LookupAccessKeyResultOutput)
}

// A collection of arguments for invoking getAccessKey.
type LookupAccessKeyOutputArgs struct {
	// Access key metadata is a string of 92 characters.
	Accesskey pulumi.StringPtrInput `pulumi:"accesskey"`
	// Description of the Access key.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Id of an existing object storage accesskey that you want to search for.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LookupAccessKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessKeyArgs)(nil)).Elem()
}

// A collection of values returned by getAccessKey.
type LookupAccessKeyResultOutput struct{ *pulumi.OutputState }

func (LookupAccessKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessKeyResult)(nil)).Elem()
}

func (o LookupAccessKeyResultOutput) ToLookupAccessKeyResultOutput() LookupAccessKeyResultOutput {
	return o
}

func (o LookupAccessKeyResultOutput) ToLookupAccessKeyResultOutputWithContext(ctx context.Context) LookupAccessKeyResultOutput {
	return o
}

// Access key metadata is a string of 92 characters.
func (o LookupAccessKeyResultOutput) Accesskey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessKeyResult) string { return v.Accesskey }).(pulumi.StringOutput)
}

// The canonical user ID which is valid for user-owned buckets.
func (o LookupAccessKeyResultOutput) CanonicalUserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessKeyResult) string { return v.CanonicalUserId }).(pulumi.StringOutput)
}

// The contract user ID which is valid for contract-owned buckets
func (o LookupAccessKeyResultOutput) ContractUserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessKeyResult) string { return v.ContractUserId }).(pulumi.StringOutput)
}

// Description of the Access key.
func (o LookupAccessKeyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessKeyResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID (UUID) of the AccessKey.
func (o LookupAccessKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccessKeyResultOutput{})
}
