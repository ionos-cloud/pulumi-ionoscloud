// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DistributionRoutingRule struct {
	// [string] The prefix of the routing rule.
	Prefix string `pulumi:"prefix"`
	// [string] The scheme of the routing rule.
	Scheme string `pulumi:"scheme"`
	// [map] - A map of properties for the rule
	Upstream DistributionRoutingRuleUpstream `pulumi:"upstream"`
}

// DistributionRoutingRuleInput is an input type that accepts DistributionRoutingRuleArgs and DistributionRoutingRuleOutput values.
// You can construct a concrete instance of `DistributionRoutingRuleInput` via:
//
//	DistributionRoutingRuleArgs{...}
type DistributionRoutingRuleInput interface {
	pulumi.Input

	ToDistributionRoutingRuleOutput() DistributionRoutingRuleOutput
	ToDistributionRoutingRuleOutputWithContext(context.Context) DistributionRoutingRuleOutput
}

type DistributionRoutingRuleArgs struct {
	// [string] The prefix of the routing rule.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// [string] The scheme of the routing rule.
	Scheme pulumi.StringInput `pulumi:"scheme"`
	// [map] - A map of properties for the rule
	Upstream DistributionRoutingRuleUpstreamInput `pulumi:"upstream"`
}

func (DistributionRoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRoutingRule)(nil)).Elem()
}

func (i DistributionRoutingRuleArgs) ToDistributionRoutingRuleOutput() DistributionRoutingRuleOutput {
	return i.ToDistributionRoutingRuleOutputWithContext(context.Background())
}

func (i DistributionRoutingRuleArgs) ToDistributionRoutingRuleOutputWithContext(ctx context.Context) DistributionRoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRoutingRuleOutput)
}

// DistributionRoutingRuleArrayInput is an input type that accepts DistributionRoutingRuleArray and DistributionRoutingRuleArrayOutput values.
// You can construct a concrete instance of `DistributionRoutingRuleArrayInput` via:
//
//	DistributionRoutingRuleArray{ DistributionRoutingRuleArgs{...} }
type DistributionRoutingRuleArrayInput interface {
	pulumi.Input

	ToDistributionRoutingRuleArrayOutput() DistributionRoutingRuleArrayOutput
	ToDistributionRoutingRuleArrayOutputWithContext(context.Context) DistributionRoutingRuleArrayOutput
}

type DistributionRoutingRuleArray []DistributionRoutingRuleInput

func (DistributionRoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionRoutingRule)(nil)).Elem()
}

func (i DistributionRoutingRuleArray) ToDistributionRoutingRuleArrayOutput() DistributionRoutingRuleArrayOutput {
	return i.ToDistributionRoutingRuleArrayOutputWithContext(context.Background())
}

func (i DistributionRoutingRuleArray) ToDistributionRoutingRuleArrayOutputWithContext(ctx context.Context) DistributionRoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRoutingRuleArrayOutput)
}

type DistributionRoutingRuleOutput struct{ *pulumi.OutputState }

func (DistributionRoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRoutingRule)(nil)).Elem()
}

func (o DistributionRoutingRuleOutput) ToDistributionRoutingRuleOutput() DistributionRoutingRuleOutput {
	return o
}

func (o DistributionRoutingRuleOutput) ToDistributionRoutingRuleOutputWithContext(ctx context.Context) DistributionRoutingRuleOutput {
	return o
}

// [string] The prefix of the routing rule.
func (o DistributionRoutingRuleOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionRoutingRule) string { return v.Prefix }).(pulumi.StringOutput)
}

// [string] The scheme of the routing rule.
func (o DistributionRoutingRuleOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionRoutingRule) string { return v.Scheme }).(pulumi.StringOutput)
}

// [map] - A map of properties for the rule
func (o DistributionRoutingRuleOutput) Upstream() DistributionRoutingRuleUpstreamOutput {
	return o.ApplyT(func(v DistributionRoutingRule) DistributionRoutingRuleUpstream { return v.Upstream }).(DistributionRoutingRuleUpstreamOutput)
}

type DistributionRoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (DistributionRoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionRoutingRule)(nil)).Elem()
}

func (o DistributionRoutingRuleArrayOutput) ToDistributionRoutingRuleArrayOutput() DistributionRoutingRuleArrayOutput {
	return o
}

func (o DistributionRoutingRuleArrayOutput) ToDistributionRoutingRuleArrayOutputWithContext(ctx context.Context) DistributionRoutingRuleArrayOutput {
	return o
}

func (o DistributionRoutingRuleArrayOutput) Index(i pulumi.IntInput) DistributionRoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionRoutingRule {
		return vs[0].([]DistributionRoutingRule)[vs[1].(int)]
	}).(DistributionRoutingRuleOutput)
}

type DistributionRoutingRuleUpstream struct {
	// [bool] Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
	Caching bool `pulumi:"caching"`
	// [map] - A map of geo_restrictions
	GeoRestrictions *DistributionRoutingRuleUpstreamGeoRestrictions `pulumi:"geoRestrictions"`
	// [string] The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
	Host string `pulumi:"host"`
	// [string] Rate limit class that will be applied to limit the number of incoming requests per IP.
	RateLimitClass string `pulumi:"rateLimitClass"`
	// [string] The SNI (Server Name Indication) mode of the upstream. It supports two modes: 1) `distribution`: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured domain of the CDN distribution; 2) `origin`: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured upstream/origin hostname.
	SniMode string `pulumi:"sniMode"`
	// [bool] Enable or disable WAF to protect the upstream host.
	Waf bool `pulumi:"waf"`
}

// DistributionRoutingRuleUpstreamInput is an input type that accepts DistributionRoutingRuleUpstreamArgs and DistributionRoutingRuleUpstreamOutput values.
// You can construct a concrete instance of `DistributionRoutingRuleUpstreamInput` via:
//
//	DistributionRoutingRuleUpstreamArgs{...}
type DistributionRoutingRuleUpstreamInput interface {
	pulumi.Input

	ToDistributionRoutingRuleUpstreamOutput() DistributionRoutingRuleUpstreamOutput
	ToDistributionRoutingRuleUpstreamOutputWithContext(context.Context) DistributionRoutingRuleUpstreamOutput
}

type DistributionRoutingRuleUpstreamArgs struct {
	// [bool] Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
	Caching pulumi.BoolInput `pulumi:"caching"`
	// [map] - A map of geo_restrictions
	GeoRestrictions DistributionRoutingRuleUpstreamGeoRestrictionsPtrInput `pulumi:"geoRestrictions"`
	// [string] The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
	Host pulumi.StringInput `pulumi:"host"`
	// [string] Rate limit class that will be applied to limit the number of incoming requests per IP.
	RateLimitClass pulumi.StringInput `pulumi:"rateLimitClass"`
	// [string] The SNI (Server Name Indication) mode of the upstream. It supports two modes: 1) `distribution`: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured domain of the CDN distribution; 2) `origin`: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured upstream/origin hostname.
	SniMode pulumi.StringInput `pulumi:"sniMode"`
	// [bool] Enable or disable WAF to protect the upstream host.
	Waf pulumi.BoolInput `pulumi:"waf"`
}

func (DistributionRoutingRuleUpstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRoutingRuleUpstream)(nil)).Elem()
}

func (i DistributionRoutingRuleUpstreamArgs) ToDistributionRoutingRuleUpstreamOutput() DistributionRoutingRuleUpstreamOutput {
	return i.ToDistributionRoutingRuleUpstreamOutputWithContext(context.Background())
}

func (i DistributionRoutingRuleUpstreamArgs) ToDistributionRoutingRuleUpstreamOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRoutingRuleUpstreamOutput)
}

type DistributionRoutingRuleUpstreamOutput struct{ *pulumi.OutputState }

func (DistributionRoutingRuleUpstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRoutingRuleUpstream)(nil)).Elem()
}

func (o DistributionRoutingRuleUpstreamOutput) ToDistributionRoutingRuleUpstreamOutput() DistributionRoutingRuleUpstreamOutput {
	return o
}

func (o DistributionRoutingRuleUpstreamOutput) ToDistributionRoutingRuleUpstreamOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamOutput {
	return o
}

// [bool] Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
func (o DistributionRoutingRuleUpstreamOutput) Caching() pulumi.BoolOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstream) bool { return v.Caching }).(pulumi.BoolOutput)
}

// [map] - A map of geo_restrictions
func (o DistributionRoutingRuleUpstreamOutput) GeoRestrictions() DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstream) *DistributionRoutingRuleUpstreamGeoRestrictions {
		return v.GeoRestrictions
	}).(DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput)
}

// [string] The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
func (o DistributionRoutingRuleUpstreamOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstream) string { return v.Host }).(pulumi.StringOutput)
}

// [string] Rate limit class that will be applied to limit the number of incoming requests per IP.
func (o DistributionRoutingRuleUpstreamOutput) RateLimitClass() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstream) string { return v.RateLimitClass }).(pulumi.StringOutput)
}

// [string] The SNI (Server Name Indication) mode of the upstream. It supports two modes: 1) `distribution`: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured domain of the CDN distribution; 2) `origin`: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured upstream/origin hostname.
func (o DistributionRoutingRuleUpstreamOutput) SniMode() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstream) string { return v.SniMode }).(pulumi.StringOutput)
}

// [bool] Enable or disable WAF to protect the upstream host.
func (o DistributionRoutingRuleUpstreamOutput) Waf() pulumi.BoolOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstream) bool { return v.Waf }).(pulumi.BoolOutput)
}

type DistributionRoutingRuleUpstreamGeoRestrictions struct {
	// [string] List of allowed countries
	AllowLists []string `pulumi:"allowLists"`
	// [string] List of blocked countries
	BlockLists []string `pulumi:"blockLists"`
}

// DistributionRoutingRuleUpstreamGeoRestrictionsInput is an input type that accepts DistributionRoutingRuleUpstreamGeoRestrictionsArgs and DistributionRoutingRuleUpstreamGeoRestrictionsOutput values.
// You can construct a concrete instance of `DistributionRoutingRuleUpstreamGeoRestrictionsInput` via:
//
//	DistributionRoutingRuleUpstreamGeoRestrictionsArgs{...}
type DistributionRoutingRuleUpstreamGeoRestrictionsInput interface {
	pulumi.Input

	ToDistributionRoutingRuleUpstreamGeoRestrictionsOutput() DistributionRoutingRuleUpstreamGeoRestrictionsOutput
	ToDistributionRoutingRuleUpstreamGeoRestrictionsOutputWithContext(context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsOutput
}

type DistributionRoutingRuleUpstreamGeoRestrictionsArgs struct {
	// [string] List of allowed countries
	AllowLists pulumi.StringArrayInput `pulumi:"allowLists"`
	// [string] List of blocked countries
	BlockLists pulumi.StringArrayInput `pulumi:"blockLists"`
}

func (DistributionRoutingRuleUpstreamGeoRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRoutingRuleUpstreamGeoRestrictions)(nil)).Elem()
}

func (i DistributionRoutingRuleUpstreamGeoRestrictionsArgs) ToDistributionRoutingRuleUpstreamGeoRestrictionsOutput() DistributionRoutingRuleUpstreamGeoRestrictionsOutput {
	return i.ToDistributionRoutingRuleUpstreamGeoRestrictionsOutputWithContext(context.Background())
}

func (i DistributionRoutingRuleUpstreamGeoRestrictionsArgs) ToDistributionRoutingRuleUpstreamGeoRestrictionsOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRoutingRuleUpstreamGeoRestrictionsOutput)
}

func (i DistributionRoutingRuleUpstreamGeoRestrictionsArgs) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput() DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return i.ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(context.Background())
}

func (i DistributionRoutingRuleUpstreamGeoRestrictionsArgs) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRoutingRuleUpstreamGeoRestrictionsOutput).ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(ctx)
}

// DistributionRoutingRuleUpstreamGeoRestrictionsPtrInput is an input type that accepts DistributionRoutingRuleUpstreamGeoRestrictionsArgs, DistributionRoutingRuleUpstreamGeoRestrictionsPtr and DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput values.
// You can construct a concrete instance of `DistributionRoutingRuleUpstreamGeoRestrictionsPtrInput` via:
//
//	        DistributionRoutingRuleUpstreamGeoRestrictionsArgs{...}
//
//	or:
//
//	        nil
type DistributionRoutingRuleUpstreamGeoRestrictionsPtrInput interface {
	pulumi.Input

	ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput() DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput
	ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput
}

type distributionRoutingRuleUpstreamGeoRestrictionsPtrType DistributionRoutingRuleUpstreamGeoRestrictionsArgs

func DistributionRoutingRuleUpstreamGeoRestrictionsPtr(v *DistributionRoutingRuleUpstreamGeoRestrictionsArgs) DistributionRoutingRuleUpstreamGeoRestrictionsPtrInput {
	return (*distributionRoutingRuleUpstreamGeoRestrictionsPtrType)(v)
}

func (*distributionRoutingRuleUpstreamGeoRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionRoutingRuleUpstreamGeoRestrictions)(nil)).Elem()
}

func (i *distributionRoutingRuleUpstreamGeoRestrictionsPtrType) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput() DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return i.ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(context.Background())
}

func (i *distributionRoutingRuleUpstreamGeoRestrictionsPtrType) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput)
}

type DistributionRoutingRuleUpstreamGeoRestrictionsOutput struct{ *pulumi.OutputState }

func (DistributionRoutingRuleUpstreamGeoRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRoutingRuleUpstreamGeoRestrictions)(nil)).Elem()
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsOutput) ToDistributionRoutingRuleUpstreamGeoRestrictionsOutput() DistributionRoutingRuleUpstreamGeoRestrictionsOutput {
	return o
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsOutput) ToDistributionRoutingRuleUpstreamGeoRestrictionsOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsOutput {
	return o
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsOutput) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput() DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return o.ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(context.Background())
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsOutput) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionRoutingRuleUpstreamGeoRestrictions) *DistributionRoutingRuleUpstreamGeoRestrictions {
		return &v
	}).(DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput)
}

// [string] List of allowed countries
func (o DistributionRoutingRuleUpstreamGeoRestrictionsOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstreamGeoRestrictions) []string { return v.AllowLists }).(pulumi.StringArrayOutput)
}

// [string] List of blocked countries
func (o DistributionRoutingRuleUpstreamGeoRestrictionsOutput) BlockLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstreamGeoRestrictions) []string { return v.BlockLists }).(pulumi.StringArrayOutput)
}

type DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionRoutingRuleUpstreamGeoRestrictions)(nil)).Elem()
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput() DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return o
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return o
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput) Elem() DistributionRoutingRuleUpstreamGeoRestrictionsOutput {
	return o.ApplyT(func(v *DistributionRoutingRuleUpstreamGeoRestrictions) DistributionRoutingRuleUpstreamGeoRestrictions {
		if v != nil {
			return *v
		}
		var ret DistributionRoutingRuleUpstreamGeoRestrictions
		return ret
	}).(DistributionRoutingRuleUpstreamGeoRestrictionsOutput)
}

// [string] List of allowed countries
func (o DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionRoutingRuleUpstreamGeoRestrictions) []string {
		if v == nil {
			return nil
		}
		return v.AllowLists
	}).(pulumi.StringArrayOutput)
}

// [string] List of blocked countries
func (o DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput) BlockLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionRoutingRuleUpstreamGeoRestrictions) []string {
		if v == nil {
			return nil
		}
		return v.BlockLists
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionRoutingRuleInput)(nil)).Elem(), DistributionRoutingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionRoutingRuleArrayInput)(nil)).Elem(), DistributionRoutingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionRoutingRuleUpstreamInput)(nil)).Elem(), DistributionRoutingRuleUpstreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionRoutingRuleUpstreamGeoRestrictionsInput)(nil)).Elem(), DistributionRoutingRuleUpstreamGeoRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionRoutingRuleUpstreamGeoRestrictionsPtrInput)(nil)).Elem(), DistributionRoutingRuleUpstreamGeoRestrictionsArgs{})
	pulumi.RegisterOutputType(DistributionRoutingRuleOutput{})
	pulumi.RegisterOutputType(DistributionRoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(DistributionRoutingRuleUpstreamOutput{})
	pulumi.RegisterOutputType(DistributionRoutingRuleUpstreamGeoRestrictionsOutput{})
	pulumi.RegisterOutputType(DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput{})
}
