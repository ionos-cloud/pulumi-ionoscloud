// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DistributionRoutingRule struct {
	// The prefix of the routing rule.
	Prefix string `pulumi:"prefix"`
	// The scheme of the routing rule.
	Scheme   string                          `pulumi:"scheme"`
	Upstream DistributionRoutingRuleUpstream `pulumi:"upstream"`
}

// DistributionRoutingRuleInput is an input type that accepts DistributionRoutingRuleArgs and DistributionRoutingRuleOutput values.
// You can construct a concrete instance of `DistributionRoutingRuleInput` via:
//
//	DistributionRoutingRuleArgs{...}
type DistributionRoutingRuleInput interface {
	pulumi.Input

	ToDistributionRoutingRuleOutput() DistributionRoutingRuleOutput
	ToDistributionRoutingRuleOutputWithContext(context.Context) DistributionRoutingRuleOutput
}

type DistributionRoutingRuleArgs struct {
	// The prefix of the routing rule.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// The scheme of the routing rule.
	Scheme   pulumi.StringInput                   `pulumi:"scheme"`
	Upstream DistributionRoutingRuleUpstreamInput `pulumi:"upstream"`
}

func (DistributionRoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRoutingRule)(nil)).Elem()
}

func (i DistributionRoutingRuleArgs) ToDistributionRoutingRuleOutput() DistributionRoutingRuleOutput {
	return i.ToDistributionRoutingRuleOutputWithContext(context.Background())
}

func (i DistributionRoutingRuleArgs) ToDistributionRoutingRuleOutputWithContext(ctx context.Context) DistributionRoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRoutingRuleOutput)
}

// DistributionRoutingRuleArrayInput is an input type that accepts DistributionRoutingRuleArray and DistributionRoutingRuleArrayOutput values.
// You can construct a concrete instance of `DistributionRoutingRuleArrayInput` via:
//
//	DistributionRoutingRuleArray{ DistributionRoutingRuleArgs{...} }
type DistributionRoutingRuleArrayInput interface {
	pulumi.Input

	ToDistributionRoutingRuleArrayOutput() DistributionRoutingRuleArrayOutput
	ToDistributionRoutingRuleArrayOutputWithContext(context.Context) DistributionRoutingRuleArrayOutput
}

type DistributionRoutingRuleArray []DistributionRoutingRuleInput

func (DistributionRoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionRoutingRule)(nil)).Elem()
}

func (i DistributionRoutingRuleArray) ToDistributionRoutingRuleArrayOutput() DistributionRoutingRuleArrayOutput {
	return i.ToDistributionRoutingRuleArrayOutputWithContext(context.Background())
}

func (i DistributionRoutingRuleArray) ToDistributionRoutingRuleArrayOutputWithContext(ctx context.Context) DistributionRoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRoutingRuleArrayOutput)
}

type DistributionRoutingRuleOutput struct{ *pulumi.OutputState }

func (DistributionRoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRoutingRule)(nil)).Elem()
}

func (o DistributionRoutingRuleOutput) ToDistributionRoutingRuleOutput() DistributionRoutingRuleOutput {
	return o
}

func (o DistributionRoutingRuleOutput) ToDistributionRoutingRuleOutputWithContext(ctx context.Context) DistributionRoutingRuleOutput {
	return o
}

// The prefix of the routing rule.
func (o DistributionRoutingRuleOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionRoutingRule) string { return v.Prefix }).(pulumi.StringOutput)
}

// The scheme of the routing rule.
func (o DistributionRoutingRuleOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionRoutingRule) string { return v.Scheme }).(pulumi.StringOutput)
}

func (o DistributionRoutingRuleOutput) Upstream() DistributionRoutingRuleUpstreamOutput {
	return o.ApplyT(func(v DistributionRoutingRule) DistributionRoutingRuleUpstream { return v.Upstream }).(DistributionRoutingRuleUpstreamOutput)
}

type DistributionRoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (DistributionRoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionRoutingRule)(nil)).Elem()
}

func (o DistributionRoutingRuleArrayOutput) ToDistributionRoutingRuleArrayOutput() DistributionRoutingRuleArrayOutput {
	return o
}

func (o DistributionRoutingRuleArrayOutput) ToDistributionRoutingRuleArrayOutputWithContext(ctx context.Context) DistributionRoutingRuleArrayOutput {
	return o
}

func (o DistributionRoutingRuleArrayOutput) Index(i pulumi.IntInput) DistributionRoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionRoutingRule {
		return vs[0].([]DistributionRoutingRule)[vs[1].(int)]
	}).(DistributionRoutingRuleOutput)
}

type DistributionRoutingRuleUpstream struct {
	// Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
	Caching         bool                                            `pulumi:"caching"`
	GeoRestrictions *DistributionRoutingRuleUpstreamGeoRestrictions `pulumi:"geoRestrictions"`
	// The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
	Host string `pulumi:"host"`
	// Rate limit class that will be applied to limit the number of incoming requests per IP.
	RateLimitClass string `pulumi:"rateLimitClass"`
	// The SNI (Server Name Indication) mode of the upstream host. It supports two modes: 'distribution' and 'origin', for more information about these modes please check the resource docs.
	SniMode string `pulumi:"sniMode"`
	// Enable or disable WAF to protect the upstream host.
	Waf bool `pulumi:"waf"`
}

// DistributionRoutingRuleUpstreamInput is an input type that accepts DistributionRoutingRuleUpstreamArgs and DistributionRoutingRuleUpstreamOutput values.
// You can construct a concrete instance of `DistributionRoutingRuleUpstreamInput` via:
//
//	DistributionRoutingRuleUpstreamArgs{...}
type DistributionRoutingRuleUpstreamInput interface {
	pulumi.Input

	ToDistributionRoutingRuleUpstreamOutput() DistributionRoutingRuleUpstreamOutput
	ToDistributionRoutingRuleUpstreamOutputWithContext(context.Context) DistributionRoutingRuleUpstreamOutput
}

type DistributionRoutingRuleUpstreamArgs struct {
	// Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
	Caching         pulumi.BoolInput                                       `pulumi:"caching"`
	GeoRestrictions DistributionRoutingRuleUpstreamGeoRestrictionsPtrInput `pulumi:"geoRestrictions"`
	// The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
	Host pulumi.StringInput `pulumi:"host"`
	// Rate limit class that will be applied to limit the number of incoming requests per IP.
	RateLimitClass pulumi.StringInput `pulumi:"rateLimitClass"`
	// The SNI (Server Name Indication) mode of the upstream host. It supports two modes: 'distribution' and 'origin', for more information about these modes please check the resource docs.
	SniMode pulumi.StringInput `pulumi:"sniMode"`
	// Enable or disable WAF to protect the upstream host.
	Waf pulumi.BoolInput `pulumi:"waf"`
}

func (DistributionRoutingRuleUpstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRoutingRuleUpstream)(nil)).Elem()
}

func (i DistributionRoutingRuleUpstreamArgs) ToDistributionRoutingRuleUpstreamOutput() DistributionRoutingRuleUpstreamOutput {
	return i.ToDistributionRoutingRuleUpstreamOutputWithContext(context.Background())
}

func (i DistributionRoutingRuleUpstreamArgs) ToDistributionRoutingRuleUpstreamOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRoutingRuleUpstreamOutput)
}

type DistributionRoutingRuleUpstreamOutput struct{ *pulumi.OutputState }

func (DistributionRoutingRuleUpstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRoutingRuleUpstream)(nil)).Elem()
}

func (o DistributionRoutingRuleUpstreamOutput) ToDistributionRoutingRuleUpstreamOutput() DistributionRoutingRuleUpstreamOutput {
	return o
}

func (o DistributionRoutingRuleUpstreamOutput) ToDistributionRoutingRuleUpstreamOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamOutput {
	return o
}

// Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
func (o DistributionRoutingRuleUpstreamOutput) Caching() pulumi.BoolOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstream) bool { return v.Caching }).(pulumi.BoolOutput)
}

func (o DistributionRoutingRuleUpstreamOutput) GeoRestrictions() DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstream) *DistributionRoutingRuleUpstreamGeoRestrictions {
		return v.GeoRestrictions
	}).(DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput)
}

// The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
func (o DistributionRoutingRuleUpstreamOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstream) string { return v.Host }).(pulumi.StringOutput)
}

// Rate limit class that will be applied to limit the number of incoming requests per IP.
func (o DistributionRoutingRuleUpstreamOutput) RateLimitClass() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstream) string { return v.RateLimitClass }).(pulumi.StringOutput)
}

// The SNI (Server Name Indication) mode of the upstream host. It supports two modes: 'distribution' and 'origin', for more information about these modes please check the resource docs.
func (o DistributionRoutingRuleUpstreamOutput) SniMode() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstream) string { return v.SniMode }).(pulumi.StringOutput)
}

// Enable or disable WAF to protect the upstream host.
func (o DistributionRoutingRuleUpstreamOutput) Waf() pulumi.BoolOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstream) bool { return v.Waf }).(pulumi.BoolOutput)
}

type DistributionRoutingRuleUpstreamGeoRestrictions struct {
	AllowLists []string `pulumi:"allowLists"`
	BlockLists []string `pulumi:"blockLists"`
}

// DistributionRoutingRuleUpstreamGeoRestrictionsInput is an input type that accepts DistributionRoutingRuleUpstreamGeoRestrictionsArgs and DistributionRoutingRuleUpstreamGeoRestrictionsOutput values.
// You can construct a concrete instance of `DistributionRoutingRuleUpstreamGeoRestrictionsInput` via:
//
//	DistributionRoutingRuleUpstreamGeoRestrictionsArgs{...}
type DistributionRoutingRuleUpstreamGeoRestrictionsInput interface {
	pulumi.Input

	ToDistributionRoutingRuleUpstreamGeoRestrictionsOutput() DistributionRoutingRuleUpstreamGeoRestrictionsOutput
	ToDistributionRoutingRuleUpstreamGeoRestrictionsOutputWithContext(context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsOutput
}

type DistributionRoutingRuleUpstreamGeoRestrictionsArgs struct {
	AllowLists pulumi.StringArrayInput `pulumi:"allowLists"`
	BlockLists pulumi.StringArrayInput `pulumi:"blockLists"`
}

func (DistributionRoutingRuleUpstreamGeoRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRoutingRuleUpstreamGeoRestrictions)(nil)).Elem()
}

func (i DistributionRoutingRuleUpstreamGeoRestrictionsArgs) ToDistributionRoutingRuleUpstreamGeoRestrictionsOutput() DistributionRoutingRuleUpstreamGeoRestrictionsOutput {
	return i.ToDistributionRoutingRuleUpstreamGeoRestrictionsOutputWithContext(context.Background())
}

func (i DistributionRoutingRuleUpstreamGeoRestrictionsArgs) ToDistributionRoutingRuleUpstreamGeoRestrictionsOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRoutingRuleUpstreamGeoRestrictionsOutput)
}

func (i DistributionRoutingRuleUpstreamGeoRestrictionsArgs) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput() DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return i.ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(context.Background())
}

func (i DistributionRoutingRuleUpstreamGeoRestrictionsArgs) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRoutingRuleUpstreamGeoRestrictionsOutput).ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(ctx)
}

// DistributionRoutingRuleUpstreamGeoRestrictionsPtrInput is an input type that accepts DistributionRoutingRuleUpstreamGeoRestrictionsArgs, DistributionRoutingRuleUpstreamGeoRestrictionsPtr and DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput values.
// You can construct a concrete instance of `DistributionRoutingRuleUpstreamGeoRestrictionsPtrInput` via:
//
//	        DistributionRoutingRuleUpstreamGeoRestrictionsArgs{...}
//
//	or:
//
//	        nil
type DistributionRoutingRuleUpstreamGeoRestrictionsPtrInput interface {
	pulumi.Input

	ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput() DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput
	ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput
}

type distributionRoutingRuleUpstreamGeoRestrictionsPtrType DistributionRoutingRuleUpstreamGeoRestrictionsArgs

func DistributionRoutingRuleUpstreamGeoRestrictionsPtr(v *DistributionRoutingRuleUpstreamGeoRestrictionsArgs) DistributionRoutingRuleUpstreamGeoRestrictionsPtrInput {
	return (*distributionRoutingRuleUpstreamGeoRestrictionsPtrType)(v)
}

func (*distributionRoutingRuleUpstreamGeoRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionRoutingRuleUpstreamGeoRestrictions)(nil)).Elem()
}

func (i *distributionRoutingRuleUpstreamGeoRestrictionsPtrType) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput() DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return i.ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(context.Background())
}

func (i *distributionRoutingRuleUpstreamGeoRestrictionsPtrType) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput)
}

type DistributionRoutingRuleUpstreamGeoRestrictionsOutput struct{ *pulumi.OutputState }

func (DistributionRoutingRuleUpstreamGeoRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRoutingRuleUpstreamGeoRestrictions)(nil)).Elem()
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsOutput) ToDistributionRoutingRuleUpstreamGeoRestrictionsOutput() DistributionRoutingRuleUpstreamGeoRestrictionsOutput {
	return o
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsOutput) ToDistributionRoutingRuleUpstreamGeoRestrictionsOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsOutput {
	return o
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsOutput) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput() DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return o.ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(context.Background())
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsOutput) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionRoutingRuleUpstreamGeoRestrictions) *DistributionRoutingRuleUpstreamGeoRestrictions {
		return &v
	}).(DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput)
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstreamGeoRestrictions) []string { return v.AllowLists }).(pulumi.StringArrayOutput)
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsOutput) BlockLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionRoutingRuleUpstreamGeoRestrictions) []string { return v.BlockLists }).(pulumi.StringArrayOutput)
}

type DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionRoutingRuleUpstreamGeoRestrictions)(nil)).Elem()
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput() DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return o
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput) ToDistributionRoutingRuleUpstreamGeoRestrictionsPtrOutputWithContext(ctx context.Context) DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput {
	return o
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput) Elem() DistributionRoutingRuleUpstreamGeoRestrictionsOutput {
	return o.ApplyT(func(v *DistributionRoutingRuleUpstreamGeoRestrictions) DistributionRoutingRuleUpstreamGeoRestrictions {
		if v != nil {
			return *v
		}
		var ret DistributionRoutingRuleUpstreamGeoRestrictions
		return ret
	}).(DistributionRoutingRuleUpstreamGeoRestrictionsOutput)
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionRoutingRuleUpstreamGeoRestrictions) []string {
		if v == nil {
			return nil
		}
		return v.AllowLists
	}).(pulumi.StringArrayOutput)
}

func (o DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput) BlockLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionRoutingRuleUpstreamGeoRestrictions) []string {
		if v == nil {
			return nil
		}
		return v.BlockLists
	}).(pulumi.StringArrayOutput)
}

type GetDistributionRoutingRule struct {
	// The prefix of the routing rule.
	Prefix string `pulumi:"prefix"`
	// The scheme of the routing rule.
	Scheme    string                               `pulumi:"scheme"`
	Upstreams []GetDistributionRoutingRuleUpstream `pulumi:"upstreams"`
}

// GetDistributionRoutingRuleInput is an input type that accepts GetDistributionRoutingRuleArgs and GetDistributionRoutingRuleOutput values.
// You can construct a concrete instance of `GetDistributionRoutingRuleInput` via:
//
//	GetDistributionRoutingRuleArgs{...}
type GetDistributionRoutingRuleInput interface {
	pulumi.Input

	ToGetDistributionRoutingRuleOutput() GetDistributionRoutingRuleOutput
	ToGetDistributionRoutingRuleOutputWithContext(context.Context) GetDistributionRoutingRuleOutput
}

type GetDistributionRoutingRuleArgs struct {
	// The prefix of the routing rule.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// The scheme of the routing rule.
	Scheme    pulumi.StringInput                           `pulumi:"scheme"`
	Upstreams GetDistributionRoutingRuleUpstreamArrayInput `pulumi:"upstreams"`
}

func (GetDistributionRoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionRoutingRule)(nil)).Elem()
}

func (i GetDistributionRoutingRuleArgs) ToGetDistributionRoutingRuleOutput() GetDistributionRoutingRuleOutput {
	return i.ToGetDistributionRoutingRuleOutputWithContext(context.Background())
}

func (i GetDistributionRoutingRuleArgs) ToGetDistributionRoutingRuleOutputWithContext(ctx context.Context) GetDistributionRoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionRoutingRuleOutput)
}

// GetDistributionRoutingRuleArrayInput is an input type that accepts GetDistributionRoutingRuleArray and GetDistributionRoutingRuleArrayOutput values.
// You can construct a concrete instance of `GetDistributionRoutingRuleArrayInput` via:
//
//	GetDistributionRoutingRuleArray{ GetDistributionRoutingRuleArgs{...} }
type GetDistributionRoutingRuleArrayInput interface {
	pulumi.Input

	ToGetDistributionRoutingRuleArrayOutput() GetDistributionRoutingRuleArrayOutput
	ToGetDistributionRoutingRuleArrayOutputWithContext(context.Context) GetDistributionRoutingRuleArrayOutput
}

type GetDistributionRoutingRuleArray []GetDistributionRoutingRuleInput

func (GetDistributionRoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionRoutingRule)(nil)).Elem()
}

func (i GetDistributionRoutingRuleArray) ToGetDistributionRoutingRuleArrayOutput() GetDistributionRoutingRuleArrayOutput {
	return i.ToGetDistributionRoutingRuleArrayOutputWithContext(context.Background())
}

func (i GetDistributionRoutingRuleArray) ToGetDistributionRoutingRuleArrayOutputWithContext(ctx context.Context) GetDistributionRoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionRoutingRuleArrayOutput)
}

type GetDistributionRoutingRuleOutput struct{ *pulumi.OutputState }

func (GetDistributionRoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionRoutingRule)(nil)).Elem()
}

func (o GetDistributionRoutingRuleOutput) ToGetDistributionRoutingRuleOutput() GetDistributionRoutingRuleOutput {
	return o
}

func (o GetDistributionRoutingRuleOutput) ToGetDistributionRoutingRuleOutputWithContext(ctx context.Context) GetDistributionRoutingRuleOutput {
	return o
}

// The prefix of the routing rule.
func (o GetDistributionRoutingRuleOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionRoutingRule) string { return v.Prefix }).(pulumi.StringOutput)
}

// The scheme of the routing rule.
func (o GetDistributionRoutingRuleOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionRoutingRule) string { return v.Scheme }).(pulumi.StringOutput)
}

func (o GetDistributionRoutingRuleOutput) Upstreams() GetDistributionRoutingRuleUpstreamArrayOutput {
	return o.ApplyT(func(v GetDistributionRoutingRule) []GetDistributionRoutingRuleUpstream { return v.Upstreams }).(GetDistributionRoutingRuleUpstreamArrayOutput)
}

type GetDistributionRoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDistributionRoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionRoutingRule)(nil)).Elem()
}

func (o GetDistributionRoutingRuleArrayOutput) ToGetDistributionRoutingRuleArrayOutput() GetDistributionRoutingRuleArrayOutput {
	return o
}

func (o GetDistributionRoutingRuleArrayOutput) ToGetDistributionRoutingRuleArrayOutputWithContext(ctx context.Context) GetDistributionRoutingRuleArrayOutput {
	return o
}

func (o GetDistributionRoutingRuleArrayOutput) Index(i pulumi.IntInput) GetDistributionRoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDistributionRoutingRule {
		return vs[0].([]GetDistributionRoutingRule)[vs[1].(int)]
	}).(GetDistributionRoutingRuleOutput)
}

type GetDistributionRoutingRuleUpstream struct {
	// Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
	Caching         bool                                               `pulumi:"caching"`
	GeoRestrictions []GetDistributionRoutingRuleUpstreamGeoRestriction `pulumi:"geoRestrictions"`
	// The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
	Host string `pulumi:"host"`
	// Rate limit class that will be applied to limit the number of incoming requests per IP.
	RateLimitClass string `pulumi:"rateLimitClass"`
	// The SNI (Server Name Indication) mode of the upstream host. It supports two modes: 'distribution' and 'origin', for more information about these modes please check the data source docs.
	SniMode string `pulumi:"sniMode"`
	// Enable or disable WAF to protect the upstream host.
	Waf bool `pulumi:"waf"`
}

// GetDistributionRoutingRuleUpstreamInput is an input type that accepts GetDistributionRoutingRuleUpstreamArgs and GetDistributionRoutingRuleUpstreamOutput values.
// You can construct a concrete instance of `GetDistributionRoutingRuleUpstreamInput` via:
//
//	GetDistributionRoutingRuleUpstreamArgs{...}
type GetDistributionRoutingRuleUpstreamInput interface {
	pulumi.Input

	ToGetDistributionRoutingRuleUpstreamOutput() GetDistributionRoutingRuleUpstreamOutput
	ToGetDistributionRoutingRuleUpstreamOutputWithContext(context.Context) GetDistributionRoutingRuleUpstreamOutput
}

type GetDistributionRoutingRuleUpstreamArgs struct {
	// Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
	Caching         pulumi.BoolInput                                           `pulumi:"caching"`
	GeoRestrictions GetDistributionRoutingRuleUpstreamGeoRestrictionArrayInput `pulumi:"geoRestrictions"`
	// The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
	Host pulumi.StringInput `pulumi:"host"`
	// Rate limit class that will be applied to limit the number of incoming requests per IP.
	RateLimitClass pulumi.StringInput `pulumi:"rateLimitClass"`
	// The SNI (Server Name Indication) mode of the upstream host. It supports two modes: 'distribution' and 'origin', for more information about these modes please check the data source docs.
	SniMode pulumi.StringInput `pulumi:"sniMode"`
	// Enable or disable WAF to protect the upstream host.
	Waf pulumi.BoolInput `pulumi:"waf"`
}

func (GetDistributionRoutingRuleUpstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionRoutingRuleUpstream)(nil)).Elem()
}

func (i GetDistributionRoutingRuleUpstreamArgs) ToGetDistributionRoutingRuleUpstreamOutput() GetDistributionRoutingRuleUpstreamOutput {
	return i.ToGetDistributionRoutingRuleUpstreamOutputWithContext(context.Background())
}

func (i GetDistributionRoutingRuleUpstreamArgs) ToGetDistributionRoutingRuleUpstreamOutputWithContext(ctx context.Context) GetDistributionRoutingRuleUpstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionRoutingRuleUpstreamOutput)
}

// GetDistributionRoutingRuleUpstreamArrayInput is an input type that accepts GetDistributionRoutingRuleUpstreamArray and GetDistributionRoutingRuleUpstreamArrayOutput values.
// You can construct a concrete instance of `GetDistributionRoutingRuleUpstreamArrayInput` via:
//
//	GetDistributionRoutingRuleUpstreamArray{ GetDistributionRoutingRuleUpstreamArgs{...} }
type GetDistributionRoutingRuleUpstreamArrayInput interface {
	pulumi.Input

	ToGetDistributionRoutingRuleUpstreamArrayOutput() GetDistributionRoutingRuleUpstreamArrayOutput
	ToGetDistributionRoutingRuleUpstreamArrayOutputWithContext(context.Context) GetDistributionRoutingRuleUpstreamArrayOutput
}

type GetDistributionRoutingRuleUpstreamArray []GetDistributionRoutingRuleUpstreamInput

func (GetDistributionRoutingRuleUpstreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionRoutingRuleUpstream)(nil)).Elem()
}

func (i GetDistributionRoutingRuleUpstreamArray) ToGetDistributionRoutingRuleUpstreamArrayOutput() GetDistributionRoutingRuleUpstreamArrayOutput {
	return i.ToGetDistributionRoutingRuleUpstreamArrayOutputWithContext(context.Background())
}

func (i GetDistributionRoutingRuleUpstreamArray) ToGetDistributionRoutingRuleUpstreamArrayOutputWithContext(ctx context.Context) GetDistributionRoutingRuleUpstreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionRoutingRuleUpstreamArrayOutput)
}

type GetDistributionRoutingRuleUpstreamOutput struct{ *pulumi.OutputState }

func (GetDistributionRoutingRuleUpstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionRoutingRuleUpstream)(nil)).Elem()
}

func (o GetDistributionRoutingRuleUpstreamOutput) ToGetDistributionRoutingRuleUpstreamOutput() GetDistributionRoutingRuleUpstreamOutput {
	return o
}

func (o GetDistributionRoutingRuleUpstreamOutput) ToGetDistributionRoutingRuleUpstreamOutputWithContext(ctx context.Context) GetDistributionRoutingRuleUpstreamOutput {
	return o
}

// Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
func (o GetDistributionRoutingRuleUpstreamOutput) Caching() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDistributionRoutingRuleUpstream) bool { return v.Caching }).(pulumi.BoolOutput)
}

func (o GetDistributionRoutingRuleUpstreamOutput) GeoRestrictions() GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput {
	return o.ApplyT(func(v GetDistributionRoutingRuleUpstream) []GetDistributionRoutingRuleUpstreamGeoRestriction {
		return v.GeoRestrictions
	}).(GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput)
}

// The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
func (o GetDistributionRoutingRuleUpstreamOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionRoutingRuleUpstream) string { return v.Host }).(pulumi.StringOutput)
}

// Rate limit class that will be applied to limit the number of incoming requests per IP.
func (o GetDistributionRoutingRuleUpstreamOutput) RateLimitClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionRoutingRuleUpstream) string { return v.RateLimitClass }).(pulumi.StringOutput)
}

// The SNI (Server Name Indication) mode of the upstream host. It supports two modes: 'distribution' and 'origin', for more information about these modes please check the data source docs.
func (o GetDistributionRoutingRuleUpstreamOutput) SniMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDistributionRoutingRuleUpstream) string { return v.SniMode }).(pulumi.StringOutput)
}

// Enable or disable WAF to protect the upstream host.
func (o GetDistributionRoutingRuleUpstreamOutput) Waf() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDistributionRoutingRuleUpstream) bool { return v.Waf }).(pulumi.BoolOutput)
}

type GetDistributionRoutingRuleUpstreamArrayOutput struct{ *pulumi.OutputState }

func (GetDistributionRoutingRuleUpstreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionRoutingRuleUpstream)(nil)).Elem()
}

func (o GetDistributionRoutingRuleUpstreamArrayOutput) ToGetDistributionRoutingRuleUpstreamArrayOutput() GetDistributionRoutingRuleUpstreamArrayOutput {
	return o
}

func (o GetDistributionRoutingRuleUpstreamArrayOutput) ToGetDistributionRoutingRuleUpstreamArrayOutputWithContext(ctx context.Context) GetDistributionRoutingRuleUpstreamArrayOutput {
	return o
}

func (o GetDistributionRoutingRuleUpstreamArrayOutput) Index(i pulumi.IntInput) GetDistributionRoutingRuleUpstreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDistributionRoutingRuleUpstream {
		return vs[0].([]GetDistributionRoutingRuleUpstream)[vs[1].(int)]
	}).(GetDistributionRoutingRuleUpstreamOutput)
}

type GetDistributionRoutingRuleUpstreamGeoRestriction struct {
	AllowLists []string `pulumi:"allowLists"`
	BlockLists []string `pulumi:"blockLists"`
}

// GetDistributionRoutingRuleUpstreamGeoRestrictionInput is an input type that accepts GetDistributionRoutingRuleUpstreamGeoRestrictionArgs and GetDistributionRoutingRuleUpstreamGeoRestrictionOutput values.
// You can construct a concrete instance of `GetDistributionRoutingRuleUpstreamGeoRestrictionInput` via:
//
//	GetDistributionRoutingRuleUpstreamGeoRestrictionArgs{...}
type GetDistributionRoutingRuleUpstreamGeoRestrictionInput interface {
	pulumi.Input

	ToGetDistributionRoutingRuleUpstreamGeoRestrictionOutput() GetDistributionRoutingRuleUpstreamGeoRestrictionOutput
	ToGetDistributionRoutingRuleUpstreamGeoRestrictionOutputWithContext(context.Context) GetDistributionRoutingRuleUpstreamGeoRestrictionOutput
}

type GetDistributionRoutingRuleUpstreamGeoRestrictionArgs struct {
	AllowLists pulumi.StringArrayInput `pulumi:"allowLists"`
	BlockLists pulumi.StringArrayInput `pulumi:"blockLists"`
}

func (GetDistributionRoutingRuleUpstreamGeoRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionRoutingRuleUpstreamGeoRestriction)(nil)).Elem()
}

func (i GetDistributionRoutingRuleUpstreamGeoRestrictionArgs) ToGetDistributionRoutingRuleUpstreamGeoRestrictionOutput() GetDistributionRoutingRuleUpstreamGeoRestrictionOutput {
	return i.ToGetDistributionRoutingRuleUpstreamGeoRestrictionOutputWithContext(context.Background())
}

func (i GetDistributionRoutingRuleUpstreamGeoRestrictionArgs) ToGetDistributionRoutingRuleUpstreamGeoRestrictionOutputWithContext(ctx context.Context) GetDistributionRoutingRuleUpstreamGeoRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionRoutingRuleUpstreamGeoRestrictionOutput)
}

// GetDistributionRoutingRuleUpstreamGeoRestrictionArrayInput is an input type that accepts GetDistributionRoutingRuleUpstreamGeoRestrictionArray and GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput values.
// You can construct a concrete instance of `GetDistributionRoutingRuleUpstreamGeoRestrictionArrayInput` via:
//
//	GetDistributionRoutingRuleUpstreamGeoRestrictionArray{ GetDistributionRoutingRuleUpstreamGeoRestrictionArgs{...} }
type GetDistributionRoutingRuleUpstreamGeoRestrictionArrayInput interface {
	pulumi.Input

	ToGetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput() GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput
	ToGetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutputWithContext(context.Context) GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput
}

type GetDistributionRoutingRuleUpstreamGeoRestrictionArray []GetDistributionRoutingRuleUpstreamGeoRestrictionInput

func (GetDistributionRoutingRuleUpstreamGeoRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionRoutingRuleUpstreamGeoRestriction)(nil)).Elem()
}

func (i GetDistributionRoutingRuleUpstreamGeoRestrictionArray) ToGetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput() GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput {
	return i.ToGetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutputWithContext(context.Background())
}

func (i GetDistributionRoutingRuleUpstreamGeoRestrictionArray) ToGetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutputWithContext(ctx context.Context) GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput)
}

type GetDistributionRoutingRuleUpstreamGeoRestrictionOutput struct{ *pulumi.OutputState }

func (GetDistributionRoutingRuleUpstreamGeoRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDistributionRoutingRuleUpstreamGeoRestriction)(nil)).Elem()
}

func (o GetDistributionRoutingRuleUpstreamGeoRestrictionOutput) ToGetDistributionRoutingRuleUpstreamGeoRestrictionOutput() GetDistributionRoutingRuleUpstreamGeoRestrictionOutput {
	return o
}

func (o GetDistributionRoutingRuleUpstreamGeoRestrictionOutput) ToGetDistributionRoutingRuleUpstreamGeoRestrictionOutputWithContext(ctx context.Context) GetDistributionRoutingRuleUpstreamGeoRestrictionOutput {
	return o
}

func (o GetDistributionRoutingRuleUpstreamGeoRestrictionOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDistributionRoutingRuleUpstreamGeoRestriction) []string { return v.AllowLists }).(pulumi.StringArrayOutput)
}

func (o GetDistributionRoutingRuleUpstreamGeoRestrictionOutput) BlockLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDistributionRoutingRuleUpstreamGeoRestriction) []string { return v.BlockLists }).(pulumi.StringArrayOutput)
}

type GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput struct{ *pulumi.OutputState }

func (GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDistributionRoutingRuleUpstreamGeoRestriction)(nil)).Elem()
}

func (o GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput) ToGetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput() GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput {
	return o
}

func (o GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput) ToGetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutputWithContext(ctx context.Context) GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput {
	return o
}

func (o GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput) Index(i pulumi.IntInput) GetDistributionRoutingRuleUpstreamGeoRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDistributionRoutingRuleUpstreamGeoRestriction {
		return vs[0].([]GetDistributionRoutingRuleUpstreamGeoRestriction)[vs[1].(int)]
	}).(GetDistributionRoutingRuleUpstreamGeoRestrictionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionRoutingRuleInput)(nil)).Elem(), DistributionRoutingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionRoutingRuleArrayInput)(nil)).Elem(), DistributionRoutingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionRoutingRuleUpstreamInput)(nil)).Elem(), DistributionRoutingRuleUpstreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionRoutingRuleUpstreamGeoRestrictionsInput)(nil)).Elem(), DistributionRoutingRuleUpstreamGeoRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionRoutingRuleUpstreamGeoRestrictionsPtrInput)(nil)).Elem(), DistributionRoutingRuleUpstreamGeoRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionRoutingRuleInput)(nil)).Elem(), GetDistributionRoutingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionRoutingRuleArrayInput)(nil)).Elem(), GetDistributionRoutingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionRoutingRuleUpstreamInput)(nil)).Elem(), GetDistributionRoutingRuleUpstreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionRoutingRuleUpstreamArrayInput)(nil)).Elem(), GetDistributionRoutingRuleUpstreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionRoutingRuleUpstreamGeoRestrictionInput)(nil)).Elem(), GetDistributionRoutingRuleUpstreamGeoRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDistributionRoutingRuleUpstreamGeoRestrictionArrayInput)(nil)).Elem(), GetDistributionRoutingRuleUpstreamGeoRestrictionArray{})
	pulumi.RegisterOutputType(DistributionRoutingRuleOutput{})
	pulumi.RegisterOutputType(DistributionRoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(DistributionRoutingRuleUpstreamOutput{})
	pulumi.RegisterOutputType(DistributionRoutingRuleUpstreamGeoRestrictionsOutput{})
	pulumi.RegisterOutputType(DistributionRoutingRuleUpstreamGeoRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(GetDistributionRoutingRuleOutput{})
	pulumi.RegisterOutputType(GetDistributionRoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDistributionRoutingRuleUpstreamOutput{})
	pulumi.RegisterOutputType(GetDistributionRoutingRuleUpstreamArrayOutput{})
	pulumi.RegisterOutputType(GetDistributionRoutingRuleUpstreamGeoRestrictionOutput{})
	pulumi.RegisterOutputType(GetDistributionRoutingRuleUpstreamGeoRestrictionArrayOutput{})
}
