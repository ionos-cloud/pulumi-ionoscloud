// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ionoscloud

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupKafkaCluster(ctx *pulumi.Context, args *LookupKafkaClusterArgs, opts ...pulumi.InvokeOption) (*LookupKafkaClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKafkaClusterResult
	err := ctx.Invoke("ionoscloud:index/getKafkaCluster:getKafkaCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKafkaCluster.
type LookupKafkaClusterArgs struct {
	Id           *string `pulumi:"id"`
	Location     string  `pulumi:"location"`
	Name         *string `pulumi:"name"`
	PartialMatch *bool   `pulumi:"partialMatch"`
}

// A collection of values returned by getKafkaCluster.
type LookupKafkaClusterResult struct {
	BrokerAddresses []string                    `pulumi:"brokerAddresses"`
	Connections     []GetKafkaClusterConnection `pulumi:"connections"`
	Id              string                      `pulumi:"id"`
	Location        string                      `pulumi:"location"`
	Name            string                      `pulumi:"name"`
	PartialMatch    *bool                       `pulumi:"partialMatch"`
	Size            string                      `pulumi:"size"`
	Version         string                      `pulumi:"version"`
}

func LookupKafkaClusterOutput(ctx *pulumi.Context, args LookupKafkaClusterOutputArgs, opts ...pulumi.InvokeOption) LookupKafkaClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupKafkaClusterResultOutput, error) {
			args := v.(LookupKafkaClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:index/getKafkaCluster:getKafkaCluster", args, LookupKafkaClusterResultOutput{}, options).(LookupKafkaClusterResultOutput), nil
		}).(LookupKafkaClusterResultOutput)
}

// A collection of arguments for invoking getKafkaCluster.
type LookupKafkaClusterOutputArgs struct {
	Id           pulumi.StringPtrInput `pulumi:"id"`
	Location     pulumi.StringInput    `pulumi:"location"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
	PartialMatch pulumi.BoolPtrInput   `pulumi:"partialMatch"`
}

func (LookupKafkaClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKafkaClusterArgs)(nil)).Elem()
}

// A collection of values returned by getKafkaCluster.
type LookupKafkaClusterResultOutput struct{ *pulumi.OutputState }

func (LookupKafkaClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKafkaClusterResult)(nil)).Elem()
}

func (o LookupKafkaClusterResultOutput) ToLookupKafkaClusterResultOutput() LookupKafkaClusterResultOutput {
	return o
}

func (o LookupKafkaClusterResultOutput) ToLookupKafkaClusterResultOutputWithContext(ctx context.Context) LookupKafkaClusterResultOutput {
	return o
}

func (o LookupKafkaClusterResultOutput) BrokerAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupKafkaClusterResult) []string { return v.BrokerAddresses }).(pulumi.StringArrayOutput)
}

func (o LookupKafkaClusterResultOutput) Connections() GetKafkaClusterConnectionArrayOutput {
	return o.ApplyT(func(v LookupKafkaClusterResult) []GetKafkaClusterConnection { return v.Connections }).(GetKafkaClusterConnectionArrayOutput)
}

func (o LookupKafkaClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupKafkaClusterResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaClusterResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupKafkaClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupKafkaClusterResultOutput) PartialMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupKafkaClusterResult) *bool { return v.PartialMatch }).(pulumi.BoolPtrOutput)
}

func (o LookupKafkaClusterResultOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaClusterResult) string { return v.Size }).(pulumi.StringOutput)
}

func (o LookupKafkaClusterResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaClusterResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKafkaClusterResultOutput{})
}
