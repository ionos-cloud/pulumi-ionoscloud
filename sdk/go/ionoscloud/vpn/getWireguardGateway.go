// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpn

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `vpn.WireguardGateway` data source provides information about a specific IonosCloud VPN WireGuard Gateway. You can use this data source to retrieve details of a WireGuard Gateway for use in other resources and configurations.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/vpn"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpn.LookupWireguardGateway(ctx, &vpn.LookupWireguardGatewayArgs{
//				Location: pulumi.StringRef("de/fra"),
//				Name:     pulumi.StringRef("example-gateway"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("vpnWireguardGatewayPublicKey", exampleVpnWireguardGateway.PublicKey)
//			return nil
//		})
//	}
//
// ```
func LookupWireguardGateway(ctx *pulumi.Context, args *LookupWireguardGatewayArgs, opts ...pulumi.InvokeOption) (*LookupWireguardGatewayResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWireguardGatewayResult
	err := ctx.Invoke("ionoscloud:vpn/getWireguardGateway:getWireguardGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWireguardGateway.
type LookupWireguardGatewayArgs struct {
	// The description of the WireGuard Gateway.
	Description *string `pulumi:"description"`
	// [String] The ID of the WireGuard Gateway.
	Id *string `pulumi:"id"`
	// [String] The location of the WireGuard Gateway.
	Location *string `pulumi:"location"`
	// [String] The name of the WireGuard Gateway.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getWireguardGateway.
type LookupWireguardGatewayResult struct {
	// A list of connection configurations for the WireGuard Gateway. Each `connections` block contains:
	Connections []GetWireguardGatewayConnection `pulumi:"connections"`
	// The description of the WireGuard Gateway.
	Description *string `pulumi:"description"`
	// The IP address of the WireGuard Gateway.
	GatewayIp string `pulumi:"gatewayIp"`
	Id        string `pulumi:"id"`
	// The IPv4 CIDR for the WireGuard Gateway interface.
	InterfaceIpv4Cidr string `pulumi:"interfaceIpv4Cidr"`
	// The IPv6 CIDR for the WireGuard Gateway interface.
	InterfaceIpv6Cidr string  `pulumi:"interfaceIpv6Cidr"`
	ListenPort        int     `pulumi:"listenPort"`
	Location          *string `pulumi:"location"`
	// A weekly 4 hour-long window, during which maintenance might occur.
	MaintenanceWindows []GetWireguardGatewayMaintenanceWindow `pulumi:"maintenanceWindows"`
	Name               string                                 `pulumi:"name"`
	// The public key for the WireGuard Gateway.
	PublicKey string `pulumi:"publicKey"`
	// The current status of the WireGuard Gateway.
	Status string `pulumi:"status"`
	// Gateway performance options.
	Tier string `pulumi:"tier"`
}

func LookupWireguardGatewayOutput(ctx *pulumi.Context, args LookupWireguardGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupWireguardGatewayResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupWireguardGatewayResultOutput, error) {
			args := v.(LookupWireguardGatewayArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:vpn/getWireguardGateway:getWireguardGateway", args, LookupWireguardGatewayResultOutput{}, options).(LookupWireguardGatewayResultOutput), nil
		}).(LookupWireguardGatewayResultOutput)
}

// A collection of arguments for invoking getWireguardGateway.
type LookupWireguardGatewayOutputArgs struct {
	// The description of the WireGuard Gateway.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// [String] The ID of the WireGuard Gateway.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// [String] The location of the WireGuard Gateway.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// [String] The name of the WireGuard Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupWireguardGatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWireguardGatewayArgs)(nil)).Elem()
}

// A collection of values returned by getWireguardGateway.
type LookupWireguardGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupWireguardGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWireguardGatewayResult)(nil)).Elem()
}

func (o LookupWireguardGatewayResultOutput) ToLookupWireguardGatewayResultOutput() LookupWireguardGatewayResultOutput {
	return o
}

func (o LookupWireguardGatewayResultOutput) ToLookupWireguardGatewayResultOutputWithContext(ctx context.Context) LookupWireguardGatewayResultOutput {
	return o
}

// A list of connection configurations for the WireGuard Gateway. Each `connections` block contains:
func (o LookupWireguardGatewayResultOutput) Connections() GetWireguardGatewayConnectionArrayOutput {
	return o.ApplyT(func(v LookupWireguardGatewayResult) []GetWireguardGatewayConnection { return v.Connections }).(GetWireguardGatewayConnectionArrayOutput)
}

// The description of the WireGuard Gateway.
func (o LookupWireguardGatewayResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWireguardGatewayResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The IP address of the WireGuard Gateway.
func (o LookupWireguardGatewayResultOutput) GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWireguardGatewayResult) string { return v.GatewayIp }).(pulumi.StringOutput)
}

func (o LookupWireguardGatewayResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWireguardGatewayResult) string { return v.Id }).(pulumi.StringOutput)
}

// The IPv4 CIDR for the WireGuard Gateway interface.
func (o LookupWireguardGatewayResultOutput) InterfaceIpv4Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWireguardGatewayResult) string { return v.InterfaceIpv4Cidr }).(pulumi.StringOutput)
}

// The IPv6 CIDR for the WireGuard Gateway interface.
func (o LookupWireguardGatewayResultOutput) InterfaceIpv6Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWireguardGatewayResult) string { return v.InterfaceIpv6Cidr }).(pulumi.StringOutput)
}

func (o LookupWireguardGatewayResultOutput) ListenPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWireguardGatewayResult) int { return v.ListenPort }).(pulumi.IntOutput)
}

func (o LookupWireguardGatewayResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWireguardGatewayResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// A weekly 4 hour-long window, during which maintenance might occur.
func (o LookupWireguardGatewayResultOutput) MaintenanceWindows() GetWireguardGatewayMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v LookupWireguardGatewayResult) []GetWireguardGatewayMaintenanceWindow {
		return v.MaintenanceWindows
	}).(GetWireguardGatewayMaintenanceWindowArrayOutput)
}

func (o LookupWireguardGatewayResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWireguardGatewayResult) string { return v.Name }).(pulumi.StringOutput)
}

// The public key for the WireGuard Gateway.
func (o LookupWireguardGatewayResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWireguardGatewayResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

// The current status of the WireGuard Gateway.
func (o LookupWireguardGatewayResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWireguardGatewayResult) string { return v.Status }).(pulumi.StringOutput)
}

// Gateway performance options.
func (o LookupWireguardGatewayResultOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWireguardGatewayResult) string { return v.Tier }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWireguardGatewayResultOutput{})
}
