// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ionoscloud

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **API Gateway data source** can be used to search for and return an existing API Gateway.
// You can provide a string for the name parameter which will be compared with provisioned API Gateways.
// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
// When this happens, please refine your search string so that it is specific enough to return only one result.
//
// ## Example Usage
//
// ### By Name
//
// Needs to have the resource be previously created, or a dependsOn clause to ensure that the resource is created before
// this data source is called.
//
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ionoscloud.LookupApigateway(ctx, &ionoscloud.LookupApigatewayArgs{
//				Name: pulumi.StringRef("example-apigateway"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupApigateway(ctx *pulumi.Context, args *LookupApigatewayArgs, opts ...pulumi.InvokeOption) (*LookupApigatewayResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApigatewayResult
	err := ctx.Invoke("ionoscloud:index/getApigateway:getApigateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApigateway.
type LookupApigatewayArgs struct {
	// ID of an existing API Gateway that you want to search for.
	Id *string `pulumi:"id"`
	// Name of an existing API Gateway that you want to search for.
	Name *string `pulumi:"name"`
	// Whether partial matching is allowed or not when using the name filter. Defaults to `false`.
	PartialMatch *bool `pulumi:"partialMatch"`
}

// A collection of values returned by getApigateway.
type LookupApigatewayResult struct {
	CustomDomains []GetApigatewayCustomDomain `pulumi:"customDomains"`
	// ID of the API Gateway.
	Id string `pulumi:"id"`
	// Shows whether the collection and reporting of logs for observability of this instance is enabled or disabled.
	Logs bool `pulumi:"logs"`
	// Shows whether the collection and reporting of metrics for observability of this instance is enabled or disabled.
	Metrics bool `pulumi:"metrics"`
	// The domain name of the distribution.
	Name         string `pulumi:"name"`
	PartialMatch *bool  `pulumi:"partialMatch"`
	// The public endpoint of the API Gateway.
	PublicEndpoint string `pulumi:"publicEndpoint"`
}

func LookupApigatewayOutput(ctx *pulumi.Context, args LookupApigatewayOutputArgs, opts ...pulumi.InvokeOption) LookupApigatewayResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApigatewayResultOutput, error) {
			args := v.(LookupApigatewayArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupApigatewayResult
			secret, err := ctx.InvokePackageRaw("ionoscloud:index/getApigateway:getApigateway", args, &rv, "", opts...)
			if err != nil {
				return LookupApigatewayResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupApigatewayResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupApigatewayResultOutput), nil
			}
			return output, nil
		}).(LookupApigatewayResultOutput)
}

// A collection of arguments for invoking getApigateway.
type LookupApigatewayOutputArgs struct {
	// ID of an existing API Gateway that you want to search for.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of an existing API Gateway that you want to search for.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether partial matching is allowed or not when using the name filter. Defaults to `false`.
	PartialMatch pulumi.BoolPtrInput `pulumi:"partialMatch"`
}

func (LookupApigatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApigatewayArgs)(nil)).Elem()
}

// A collection of values returned by getApigateway.
type LookupApigatewayResultOutput struct{ *pulumi.OutputState }

func (LookupApigatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApigatewayResult)(nil)).Elem()
}

func (o LookupApigatewayResultOutput) ToLookupApigatewayResultOutput() LookupApigatewayResultOutput {
	return o
}

func (o LookupApigatewayResultOutput) ToLookupApigatewayResultOutputWithContext(ctx context.Context) LookupApigatewayResultOutput {
	return o
}

func (o LookupApigatewayResultOutput) CustomDomains() GetApigatewayCustomDomainArrayOutput {
	return o.ApplyT(func(v LookupApigatewayResult) []GetApigatewayCustomDomain { return v.CustomDomains }).(GetApigatewayCustomDomainArrayOutput)
}

// ID of the API Gateway.
func (o LookupApigatewayResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApigatewayResult) string { return v.Id }).(pulumi.StringOutput)
}

// Shows whether the collection and reporting of logs for observability of this instance is enabled or disabled.
func (o LookupApigatewayResultOutput) Logs() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupApigatewayResult) bool { return v.Logs }).(pulumi.BoolOutput)
}

// Shows whether the collection and reporting of metrics for observability of this instance is enabled or disabled.
func (o LookupApigatewayResultOutput) Metrics() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupApigatewayResult) bool { return v.Metrics }).(pulumi.BoolOutput)
}

// The domain name of the distribution.
func (o LookupApigatewayResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApigatewayResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupApigatewayResultOutput) PartialMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupApigatewayResult) *bool { return v.PartialMatch }).(pulumi.BoolPtrOutput)
}

// The public endpoint of the API Gateway.
func (o LookupApigatewayResultOutput) PublicEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApigatewayResult) string { return v.PublicEndpoint }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApigatewayResultOutput{})
}
