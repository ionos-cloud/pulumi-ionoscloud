// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ionoscloud

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupApigateway(ctx *pulumi.Context, args *LookupApigatewayArgs, opts ...pulumi.InvokeOption) (*LookupApigatewayResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApigatewayResult
	err := ctx.Invoke("ionoscloud:index/getApigateway:getApigateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApigateway.
type LookupApigatewayArgs struct {
	Id           *string `pulumi:"id"`
	Name         *string `pulumi:"name"`
	PartialMatch *bool   `pulumi:"partialMatch"`
}

// A collection of values returned by getApigateway.
type LookupApigatewayResult struct {
	CustomDomains  []GetApigatewayCustomDomain `pulumi:"customDomains"`
	Id             string                      `pulumi:"id"`
	Logs           bool                        `pulumi:"logs"`
	Metrics        bool                        `pulumi:"metrics"`
	Name           string                      `pulumi:"name"`
	PartialMatch   *bool                       `pulumi:"partialMatch"`
	PublicEndpoint string                      `pulumi:"publicEndpoint"`
}

func LookupApigatewayOutput(ctx *pulumi.Context, args LookupApigatewayOutputArgs, opts ...pulumi.InvokeOption) LookupApigatewayResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApigatewayResultOutput, error) {
			args := v.(LookupApigatewayArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:index/getApigateway:getApigateway", args, LookupApigatewayResultOutput{}, options).(LookupApigatewayResultOutput), nil
		}).(LookupApigatewayResultOutput)
}

// A collection of arguments for invoking getApigateway.
type LookupApigatewayOutputArgs struct {
	Id           pulumi.StringPtrInput `pulumi:"id"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
	PartialMatch pulumi.BoolPtrInput   `pulumi:"partialMatch"`
}

func (LookupApigatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApigatewayArgs)(nil)).Elem()
}

// A collection of values returned by getApigateway.
type LookupApigatewayResultOutput struct{ *pulumi.OutputState }

func (LookupApigatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApigatewayResult)(nil)).Elem()
}

func (o LookupApigatewayResultOutput) ToLookupApigatewayResultOutput() LookupApigatewayResultOutput {
	return o
}

func (o LookupApigatewayResultOutput) ToLookupApigatewayResultOutputWithContext(ctx context.Context) LookupApigatewayResultOutput {
	return o
}

func (o LookupApigatewayResultOutput) CustomDomains() GetApigatewayCustomDomainArrayOutput {
	return o.ApplyT(func(v LookupApigatewayResult) []GetApigatewayCustomDomain { return v.CustomDomains }).(GetApigatewayCustomDomainArrayOutput)
}

func (o LookupApigatewayResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApigatewayResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupApigatewayResultOutput) Logs() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupApigatewayResult) bool { return v.Logs }).(pulumi.BoolOutput)
}

func (o LookupApigatewayResultOutput) Metrics() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupApigatewayResult) bool { return v.Metrics }).(pulumi.BoolOutput)
}

func (o LookupApigatewayResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApigatewayResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupApigatewayResultOutput) PartialMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupApigatewayResult) *bool { return v.PartialMatch }).(pulumi.BoolPtrOutput)
}

func (o LookupApigatewayResultOutput) PublicEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApigatewayResult) string { return v.PublicEndpoint }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApigatewayResultOutput{})
}
