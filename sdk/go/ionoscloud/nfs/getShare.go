// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nfs

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupShare(ctx *pulumi.Context, args *LookupShareArgs, opts ...pulumi.InvokeOption) (*LookupShareResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupShareResult
	err := ctx.Invoke("ionoscloud:nfs/getShare:getShare", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getShare.
type LookupShareArgs struct {
	ClientGroups []GetShareClientGroup `pulumi:"clientGroups"`
	ClusterId    string                `pulumi:"clusterId"`
	Gid          *int                  `pulumi:"gid"`
	Id           *string               `pulumi:"id"`
	Location     string                `pulumi:"location"`
	Name         *string               `pulumi:"name"`
	PartialMatch *bool                 `pulumi:"partialMatch"`
	Quota        *int                  `pulumi:"quota"`
	Uid          *int                  `pulumi:"uid"`
}

// A collection of values returned by getShare.
type LookupShareResult struct {
	ClientGroups []GetShareClientGroup `pulumi:"clientGroups"`
	ClusterId    string                `pulumi:"clusterId"`
	Gid          int                   `pulumi:"gid"`
	Id           string                `pulumi:"id"`
	Location     string                `pulumi:"location"`
	Name         string                `pulumi:"name"`
	NfsPath      string                `pulumi:"nfsPath"`
	PartialMatch *bool                 `pulumi:"partialMatch"`
	Quota        int                   `pulumi:"quota"`
	Uid          int                   `pulumi:"uid"`
}

func LookupShareOutput(ctx *pulumi.Context, args LookupShareOutputArgs, opts ...pulumi.InvokeOption) LookupShareResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupShareResultOutput, error) {
			args := v.(LookupShareArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:nfs/getShare:getShare", args, LookupShareResultOutput{}, options).(LookupShareResultOutput), nil
		}).(LookupShareResultOutput)
}

// A collection of arguments for invoking getShare.
type LookupShareOutputArgs struct {
	ClientGroups GetShareClientGroupArrayInput `pulumi:"clientGroups"`
	ClusterId    pulumi.StringInput            `pulumi:"clusterId"`
	Gid          pulumi.IntPtrInput            `pulumi:"gid"`
	Id           pulumi.StringPtrInput         `pulumi:"id"`
	Location     pulumi.StringInput            `pulumi:"location"`
	Name         pulumi.StringPtrInput         `pulumi:"name"`
	PartialMatch pulumi.BoolPtrInput           `pulumi:"partialMatch"`
	Quota        pulumi.IntPtrInput            `pulumi:"quota"`
	Uid          pulumi.IntPtrInput            `pulumi:"uid"`
}

func (LookupShareOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupShareArgs)(nil)).Elem()
}

// A collection of values returned by getShare.
type LookupShareResultOutput struct{ *pulumi.OutputState }

func (LookupShareResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupShareResult)(nil)).Elem()
}

func (o LookupShareResultOutput) ToLookupShareResultOutput() LookupShareResultOutput {
	return o
}

func (o LookupShareResultOutput) ToLookupShareResultOutputWithContext(ctx context.Context) LookupShareResultOutput {
	return o
}

func (o LookupShareResultOutput) ClientGroups() GetShareClientGroupArrayOutput {
	return o.ApplyT(func(v LookupShareResult) []GetShareClientGroup { return v.ClientGroups }).(GetShareClientGroupArrayOutput)
}

func (o LookupShareResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupShareResultOutput) Gid() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShareResult) int { return v.Gid }).(pulumi.IntOutput)
}

func (o LookupShareResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupShareResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupShareResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupShareResultOutput) NfsPath() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.NfsPath }).(pulumi.StringOutput)
}

func (o LookupShareResultOutput) PartialMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupShareResult) *bool { return v.PartialMatch }).(pulumi.BoolPtrOutput)
}

func (o LookupShareResultOutput) Quota() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShareResult) int { return v.Quota }).(pulumi.IntOutput)
}

func (o LookupShareResultOutput) Uid() pulumi.IntOutput {
	return o.ApplyT(func(v LookupShareResult) int { return v.Uid }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupShareResultOutput{})
}
