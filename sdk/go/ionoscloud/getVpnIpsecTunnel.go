// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ionoscloud

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **VPN IPSec Gateway Tunnel data source** can be used to search for and return an existing IPSec Gateway Tunnel.
// You can provide a string for the name parameter which will be compared with provisioned IPSec Gateway Tunnels.
// If a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.
// When this happens, please refine your search string so that it is specific enough to return only one result.
//
// ## Example Usage
func GetVpnIpsecTunnel(ctx *pulumi.Context, args *GetVpnIpsecTunnelArgs, opts ...pulumi.InvokeOption) (*GetVpnIpsecTunnelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVpnIpsecTunnelResult
	err := ctx.Invoke("ionoscloud:index/getVpnIpsecTunnel:getVpnIpsecTunnel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpnIpsecTunnel.
type GetVpnIpsecTunnelArgs struct {
	// The ID of the IPSec Gateway that the tunnel belongs to.
	GatewayId string `pulumi:"gatewayId"`
	// ID of an existing IPSec Gateway Tunnel that you want to search for.
	Id *string `pulumi:"id"`
	// The location of the IPSec Gateway Tunnel.
	Location string `pulumi:"location"`
	// Name of an existing IPSec Gateway Tunnel that you want to search for.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getVpnIpsecTunnel.
type GetVpnIpsecTunnelResult struct {
	Auths             []GetVpnIpsecTunnelAuth `pulumi:"auths"`
	CloudNetworkCidrs []string                `pulumi:"cloudNetworkCidrs"`
	Description       string                  `pulumi:"description"`
	Esps              []GetVpnIpsecTunnelEsp  `pulumi:"esps"`
	GatewayId         string                  `pulumi:"gatewayId"`
	Id                string                  `pulumi:"id"`
	Ikes              []GetVpnIpsecTunnelIke  `pulumi:"ikes"`
	Location          string                  `pulumi:"location"`
	Name              string                  `pulumi:"name"`
	PeerNetworkCidrs  []string                `pulumi:"peerNetworkCidrs"`
	RemoteHost        string                  `pulumi:"remoteHost"`
}

func GetVpnIpsecTunnelOutput(ctx *pulumi.Context, args GetVpnIpsecTunnelOutputArgs, opts ...pulumi.InvokeOption) GetVpnIpsecTunnelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVpnIpsecTunnelResult, error) {
			args := v.(GetVpnIpsecTunnelArgs)
			r, err := GetVpnIpsecTunnel(ctx, &args, opts...)
			var s GetVpnIpsecTunnelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVpnIpsecTunnelResultOutput)
}

// A collection of arguments for invoking getVpnIpsecTunnel.
type GetVpnIpsecTunnelOutputArgs struct {
	// The ID of the IPSec Gateway that the tunnel belongs to.
	GatewayId pulumi.StringInput `pulumi:"gatewayId"`
	// ID of an existing IPSec Gateway Tunnel that you want to search for.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The location of the IPSec Gateway Tunnel.
	Location pulumi.StringInput `pulumi:"location"`
	// Name of an existing IPSec Gateway Tunnel that you want to search for.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetVpnIpsecTunnelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnIpsecTunnelArgs)(nil)).Elem()
}

// A collection of values returned by getVpnIpsecTunnel.
type GetVpnIpsecTunnelResultOutput struct{ *pulumi.OutputState }

func (GetVpnIpsecTunnelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnIpsecTunnelResult)(nil)).Elem()
}

func (o GetVpnIpsecTunnelResultOutput) ToGetVpnIpsecTunnelResultOutput() GetVpnIpsecTunnelResultOutput {
	return o
}

func (o GetVpnIpsecTunnelResultOutput) ToGetVpnIpsecTunnelResultOutputWithContext(ctx context.Context) GetVpnIpsecTunnelResultOutput {
	return o
}

func (o GetVpnIpsecTunnelResultOutput) Auths() GetVpnIpsecTunnelAuthArrayOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelResult) []GetVpnIpsecTunnelAuth { return v.Auths }).(GetVpnIpsecTunnelAuthArrayOutput)
}

func (o GetVpnIpsecTunnelResultOutput) CloudNetworkCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelResult) []string { return v.CloudNetworkCidrs }).(pulumi.StringArrayOutput)
}

func (o GetVpnIpsecTunnelResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetVpnIpsecTunnelResultOutput) Esps() GetVpnIpsecTunnelEspArrayOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelResult) []GetVpnIpsecTunnelEsp { return v.Esps }).(GetVpnIpsecTunnelEspArrayOutput)
}

func (o GetVpnIpsecTunnelResultOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelResult) string { return v.GatewayId }).(pulumi.StringOutput)
}

func (o GetVpnIpsecTunnelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpnIpsecTunnelResultOutput) Ikes() GetVpnIpsecTunnelIkeArrayOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelResult) []GetVpnIpsecTunnelIke { return v.Ikes }).(GetVpnIpsecTunnelIkeArrayOutput)
}

func (o GetVpnIpsecTunnelResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetVpnIpsecTunnelResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVpnIpsecTunnelResultOutput) PeerNetworkCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelResult) []string { return v.PeerNetworkCidrs }).(pulumi.StringArrayOutput)
}

func (o GetVpnIpsecTunnelResultOutput) RemoteHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnIpsecTunnelResult) string { return v.RemoteHost }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVpnIpsecTunnelResultOutput{})
}
