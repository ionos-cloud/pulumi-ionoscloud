// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kafka

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterConnections struct {
	// [list] IP address and port of cluster brokers.
	BrokerAddresses []string `pulumi:"brokerAddresses"`
	// [string] The datacenter to connect your instance to.
	DatacenterId string `pulumi:"datacenterId"`
	// [string] The numeric LAN ID to connect your instance to.
	LanId string `pulumi:"lanId"`
}

// ClusterConnectionsInput is an input type that accepts ClusterConnectionsArgs and ClusterConnectionsOutput values.
// You can construct a concrete instance of `ClusterConnectionsInput` via:
//
//	ClusterConnectionsArgs{...}
type ClusterConnectionsInput interface {
	pulumi.Input

	ToClusterConnectionsOutput() ClusterConnectionsOutput
	ToClusterConnectionsOutputWithContext(context.Context) ClusterConnectionsOutput
}

type ClusterConnectionsArgs struct {
	// [list] IP address and port of cluster brokers.
	BrokerAddresses pulumi.StringArrayInput `pulumi:"brokerAddresses"`
	// [string] The datacenter to connect your instance to.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// [string] The numeric LAN ID to connect your instance to.
	LanId pulumi.StringInput `pulumi:"lanId"`
}

func (ClusterConnectionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnections)(nil)).Elem()
}

func (i ClusterConnectionsArgs) ToClusterConnectionsOutput() ClusterConnectionsOutput {
	return i.ToClusterConnectionsOutputWithContext(context.Background())
}

func (i ClusterConnectionsArgs) ToClusterConnectionsOutputWithContext(ctx context.Context) ClusterConnectionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionsOutput)
}

func (i ClusterConnectionsArgs) ToClusterConnectionsPtrOutput() ClusterConnectionsPtrOutput {
	return i.ToClusterConnectionsPtrOutputWithContext(context.Background())
}

func (i ClusterConnectionsArgs) ToClusterConnectionsPtrOutputWithContext(ctx context.Context) ClusterConnectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionsOutput).ToClusterConnectionsPtrOutputWithContext(ctx)
}

// ClusterConnectionsPtrInput is an input type that accepts ClusterConnectionsArgs, ClusterConnectionsPtr and ClusterConnectionsPtrOutput values.
// You can construct a concrete instance of `ClusterConnectionsPtrInput` via:
//
//	        ClusterConnectionsArgs{...}
//
//	or:
//
//	        nil
type ClusterConnectionsPtrInput interface {
	pulumi.Input

	ToClusterConnectionsPtrOutput() ClusterConnectionsPtrOutput
	ToClusterConnectionsPtrOutputWithContext(context.Context) ClusterConnectionsPtrOutput
}

type clusterConnectionsPtrType ClusterConnectionsArgs

func ClusterConnectionsPtr(v *ClusterConnectionsArgs) ClusterConnectionsPtrInput {
	return (*clusterConnectionsPtrType)(v)
}

func (*clusterConnectionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConnections)(nil)).Elem()
}

func (i *clusterConnectionsPtrType) ToClusterConnectionsPtrOutput() ClusterConnectionsPtrOutput {
	return i.ToClusterConnectionsPtrOutputWithContext(context.Background())
}

func (i *clusterConnectionsPtrType) ToClusterConnectionsPtrOutputWithContext(ctx context.Context) ClusterConnectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionsPtrOutput)
}

type ClusterConnectionsOutput struct{ *pulumi.OutputState }

func (ClusterConnectionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnections)(nil)).Elem()
}

func (o ClusterConnectionsOutput) ToClusterConnectionsOutput() ClusterConnectionsOutput {
	return o
}

func (o ClusterConnectionsOutput) ToClusterConnectionsOutputWithContext(ctx context.Context) ClusterConnectionsOutput {
	return o
}

func (o ClusterConnectionsOutput) ToClusterConnectionsPtrOutput() ClusterConnectionsPtrOutput {
	return o.ToClusterConnectionsPtrOutputWithContext(context.Background())
}

func (o ClusterConnectionsOutput) ToClusterConnectionsPtrOutputWithContext(ctx context.Context) ClusterConnectionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterConnections) *ClusterConnections {
		return &v
	}).(ClusterConnectionsPtrOutput)
}

// [list] IP address and port of cluster brokers.
func (o ClusterConnectionsOutput) BrokerAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterConnections) []string { return v.BrokerAddresses }).(pulumi.StringArrayOutput)
}

// [string] The datacenter to connect your instance to.
func (o ClusterConnectionsOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterConnections) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// [string] The numeric LAN ID to connect your instance to.
func (o ClusterConnectionsOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterConnections) string { return v.LanId }).(pulumi.StringOutput)
}

type ClusterConnectionsPtrOutput struct{ *pulumi.OutputState }

func (ClusterConnectionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConnections)(nil)).Elem()
}

func (o ClusterConnectionsPtrOutput) ToClusterConnectionsPtrOutput() ClusterConnectionsPtrOutput {
	return o
}

func (o ClusterConnectionsPtrOutput) ToClusterConnectionsPtrOutputWithContext(ctx context.Context) ClusterConnectionsPtrOutput {
	return o
}

func (o ClusterConnectionsPtrOutput) Elem() ClusterConnectionsOutput {
	return o.ApplyT(func(v *ClusterConnections) ClusterConnections {
		if v != nil {
			return *v
		}
		var ret ClusterConnections
		return ret
	}).(ClusterConnectionsOutput)
}

// [list] IP address and port of cluster brokers.
func (o ClusterConnectionsPtrOutput) BrokerAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterConnections) []string {
		if v == nil {
			return nil
		}
		return v.BrokerAddresses
	}).(pulumi.StringArrayOutput)
}

// [string] The datacenter to connect your instance to.
func (o ClusterConnectionsPtrOutput) DatacenterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterConnections) *string {
		if v == nil {
			return nil
		}
		return &v.DatacenterId
	}).(pulumi.StringPtrOutput)
}

// [string] The numeric LAN ID to connect your instance to.
func (o ClusterConnectionsPtrOutput) LanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterConnections) *string {
		if v == nil {
			return nil
		}
		return &v.LanId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionsInput)(nil)).Elem(), ClusterConnectionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionsPtrInput)(nil)).Elem(), ClusterConnectionsArgs{})
	pulumi.RegisterOutputType(ClusterConnectionsOutput{})
	pulumi.RegisterOutputType(ClusterConnectionsPtrOutput{})
}
