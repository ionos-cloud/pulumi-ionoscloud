// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package creg

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupRegistry(ctx *pulumi.Context, args *LookupRegistryArgs, opts ...pulumi.InvokeOption) (*LookupRegistryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRegistryResult
	err := ctx.Invoke("ionoscloud:creg/getRegistry:getRegistry", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegistry.
type LookupRegistryArgs struct {
	Id           *string `pulumi:"id"`
	Location     *string `pulumi:"location"`
	Name         *string `pulumi:"name"`
	PartialMatch *bool   `pulumi:"partialMatch"`
}

// A collection of values returned by getRegistry.
type LookupRegistryResult struct {
	ApiSubnetAllowLists        []string                               `pulumi:"apiSubnetAllowLists"`
	Features                   []GetRegistryFeature                   `pulumi:"features"`
	GarbageCollectionSchedules []GetRegistryGarbageCollectionSchedule `pulumi:"garbageCollectionSchedules"`
	Hostname                   string                                 `pulumi:"hostname"`
	Id                         *string                                `pulumi:"id"`
	Location                   *string                                `pulumi:"location"`
	MaintenanceWindows         []GetRegistryMaintenanceWindow         `pulumi:"maintenanceWindows"`
	Name                       *string                                `pulumi:"name"`
	PartialMatch               *bool                                  `pulumi:"partialMatch"`
	StorageUsages              []GetRegistryStorageUsage              `pulumi:"storageUsages"`
}

func LookupRegistryOutput(ctx *pulumi.Context, args LookupRegistryOutputArgs, opts ...pulumi.InvokeOption) LookupRegistryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRegistryResultOutput, error) {
			args := v.(LookupRegistryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:creg/getRegistry:getRegistry", args, LookupRegistryResultOutput{}, options).(LookupRegistryResultOutput), nil
		}).(LookupRegistryResultOutput)
}

// A collection of arguments for invoking getRegistry.
type LookupRegistryOutputArgs struct {
	Id           pulumi.StringPtrInput `pulumi:"id"`
	Location     pulumi.StringPtrInput `pulumi:"location"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
	PartialMatch pulumi.BoolPtrInput   `pulumi:"partialMatch"`
}

func (LookupRegistryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryArgs)(nil)).Elem()
}

// A collection of values returned by getRegistry.
type LookupRegistryResultOutput struct{ *pulumi.OutputState }

func (LookupRegistryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryResult)(nil)).Elem()
}

func (o LookupRegistryResultOutput) ToLookupRegistryResultOutput() LookupRegistryResultOutput {
	return o
}

func (o LookupRegistryResultOutput) ToLookupRegistryResultOutputWithContext(ctx context.Context) LookupRegistryResultOutput {
	return o
}

func (o LookupRegistryResultOutput) ApiSubnetAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRegistryResult) []string { return v.ApiSubnetAllowLists }).(pulumi.StringArrayOutput)
}

func (o LookupRegistryResultOutput) Features() GetRegistryFeatureArrayOutput {
	return o.ApplyT(func(v LookupRegistryResult) []GetRegistryFeature { return v.Features }).(GetRegistryFeatureArrayOutput)
}

func (o LookupRegistryResultOutput) GarbageCollectionSchedules() GetRegistryGarbageCollectionScheduleArrayOutput {
	return o.ApplyT(func(v LookupRegistryResult) []GetRegistryGarbageCollectionSchedule {
		return v.GarbageCollectionSchedules
	}).(GetRegistryGarbageCollectionScheduleArrayOutput)
}

func (o LookupRegistryResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryResult) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o LookupRegistryResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegistryResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupRegistryResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegistryResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o LookupRegistryResultOutput) MaintenanceWindows() GetRegistryMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v LookupRegistryResult) []GetRegistryMaintenanceWindow { return v.MaintenanceWindows }).(GetRegistryMaintenanceWindowArrayOutput)
}

func (o LookupRegistryResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegistryResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupRegistryResultOutput) PartialMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupRegistryResult) *bool { return v.PartialMatch }).(pulumi.BoolPtrOutput)
}

func (o LookupRegistryResultOutput) StorageUsages() GetRegistryStorageUsageArrayOutput {
	return o.ApplyT(func(v LookupRegistryResult) []GetRegistryStorageUsage { return v.StorageUsages }).(GetRegistryStorageUsageArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegistryResultOutput{})
}
