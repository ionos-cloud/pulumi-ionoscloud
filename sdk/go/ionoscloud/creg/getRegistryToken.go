// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package creg

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupRegistryToken(ctx *pulumi.Context, args *LookupRegistryTokenArgs, opts ...pulumi.InvokeOption) (*LookupRegistryTokenResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRegistryTokenResult
	err := ctx.Invoke("ionoscloud:creg/getRegistryToken:getRegistryToken", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegistryToken.
type LookupRegistryTokenArgs struct {
	Id           *string `pulumi:"id"`
	Name         *string `pulumi:"name"`
	PartialMatch *bool   `pulumi:"partialMatch"`
	RegistryId   string  `pulumi:"registryId"`
}

// A collection of values returned by getRegistryToken.
type LookupRegistryTokenResult struct {
	Credentials  []GetRegistryTokenCredential `pulumi:"credentials"`
	ExpiryDate   string                       `pulumi:"expiryDate"`
	Id           *string                      `pulumi:"id"`
	Name         *string                      `pulumi:"name"`
	PartialMatch *bool                        `pulumi:"partialMatch"`
	RegistryId   string                       `pulumi:"registryId"`
	Scopes       []GetRegistryTokenScope      `pulumi:"scopes"`
	Status       string                       `pulumi:"status"`
}

func LookupRegistryTokenOutput(ctx *pulumi.Context, args LookupRegistryTokenOutputArgs, opts ...pulumi.InvokeOption) LookupRegistryTokenResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRegistryTokenResultOutput, error) {
			args := v.(LookupRegistryTokenArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:creg/getRegistryToken:getRegistryToken", args, LookupRegistryTokenResultOutput{}, options).(LookupRegistryTokenResultOutput), nil
		}).(LookupRegistryTokenResultOutput)
}

// A collection of arguments for invoking getRegistryToken.
type LookupRegistryTokenOutputArgs struct {
	Id           pulumi.StringPtrInput `pulumi:"id"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
	PartialMatch pulumi.BoolPtrInput   `pulumi:"partialMatch"`
	RegistryId   pulumi.StringInput    `pulumi:"registryId"`
}

func (LookupRegistryTokenOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryTokenArgs)(nil)).Elem()
}

// A collection of values returned by getRegistryToken.
type LookupRegistryTokenResultOutput struct{ *pulumi.OutputState }

func (LookupRegistryTokenResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryTokenResult)(nil)).Elem()
}

func (o LookupRegistryTokenResultOutput) ToLookupRegistryTokenResultOutput() LookupRegistryTokenResultOutput {
	return o
}

func (o LookupRegistryTokenResultOutput) ToLookupRegistryTokenResultOutputWithContext(ctx context.Context) LookupRegistryTokenResultOutput {
	return o
}

func (o LookupRegistryTokenResultOutput) Credentials() GetRegistryTokenCredentialArrayOutput {
	return o.ApplyT(func(v LookupRegistryTokenResult) []GetRegistryTokenCredential { return v.Credentials }).(GetRegistryTokenCredentialArrayOutput)
}

func (o LookupRegistryTokenResultOutput) ExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryTokenResult) string { return v.ExpiryDate }).(pulumi.StringOutput)
}

func (o LookupRegistryTokenResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegistryTokenResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupRegistryTokenResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegistryTokenResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupRegistryTokenResultOutput) PartialMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupRegistryTokenResult) *bool { return v.PartialMatch }).(pulumi.BoolPtrOutput)
}

func (o LookupRegistryTokenResultOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryTokenResult) string { return v.RegistryId }).(pulumi.StringOutput)
}

func (o LookupRegistryTokenResultOutput) Scopes() GetRegistryTokenScopeArrayOutput {
	return o.ApplyT(func(v LookupRegistryTokenResult) []GetRegistryTokenScope { return v.Scopes }).(GetRegistryTokenScopeArrayOutput)
}

func (o LookupRegistryTokenResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryTokenResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegistryTokenResultOutput{})
}
