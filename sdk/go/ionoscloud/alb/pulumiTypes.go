// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alb

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApplicationLoadbalancerFlowlog struct {
	// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	Action string `pulumi:"action"`
	// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	Bucket string `pulumi:"bucket"`
	// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	Direction string `pulumi:"direction"`
	// The resource's unique identifier.
	Id *string `pulumi:"id"`
	// [string] Specifies the name of the flow log.
	//
	// ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the application load balancer resource.
	Name string `pulumi:"name"`
}

// ApplicationLoadbalancerFlowlogInput is an input type that accepts ApplicationLoadbalancerFlowlogArgs and ApplicationLoadbalancerFlowlogOutput values.
// You can construct a concrete instance of `ApplicationLoadbalancerFlowlogInput` via:
//
//	ApplicationLoadbalancerFlowlogArgs{...}
type ApplicationLoadbalancerFlowlogInput interface {
	pulumi.Input

	ToApplicationLoadbalancerFlowlogOutput() ApplicationLoadbalancerFlowlogOutput
	ToApplicationLoadbalancerFlowlogOutputWithContext(context.Context) ApplicationLoadbalancerFlowlogOutput
}

type ApplicationLoadbalancerFlowlogArgs struct {
	// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	Action pulumi.StringInput `pulumi:"action"`
	// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The resource's unique identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// [string] Specifies the name of the flow log.
	//
	// ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the application load balancer resource.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ApplicationLoadbalancerFlowlogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLoadbalancerFlowlog)(nil)).Elem()
}

func (i ApplicationLoadbalancerFlowlogArgs) ToApplicationLoadbalancerFlowlogOutput() ApplicationLoadbalancerFlowlogOutput {
	return i.ToApplicationLoadbalancerFlowlogOutputWithContext(context.Background())
}

func (i ApplicationLoadbalancerFlowlogArgs) ToApplicationLoadbalancerFlowlogOutputWithContext(ctx context.Context) ApplicationLoadbalancerFlowlogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerFlowlogOutput)
}

func (i ApplicationLoadbalancerFlowlogArgs) ToApplicationLoadbalancerFlowlogPtrOutput() ApplicationLoadbalancerFlowlogPtrOutput {
	return i.ToApplicationLoadbalancerFlowlogPtrOutputWithContext(context.Background())
}

func (i ApplicationLoadbalancerFlowlogArgs) ToApplicationLoadbalancerFlowlogPtrOutputWithContext(ctx context.Context) ApplicationLoadbalancerFlowlogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerFlowlogOutput).ToApplicationLoadbalancerFlowlogPtrOutputWithContext(ctx)
}

// ApplicationLoadbalancerFlowlogPtrInput is an input type that accepts ApplicationLoadbalancerFlowlogArgs, ApplicationLoadbalancerFlowlogPtr and ApplicationLoadbalancerFlowlogPtrOutput values.
// You can construct a concrete instance of `ApplicationLoadbalancerFlowlogPtrInput` via:
//
//	        ApplicationLoadbalancerFlowlogArgs{...}
//
//	or:
//
//	        nil
type ApplicationLoadbalancerFlowlogPtrInput interface {
	pulumi.Input

	ToApplicationLoadbalancerFlowlogPtrOutput() ApplicationLoadbalancerFlowlogPtrOutput
	ToApplicationLoadbalancerFlowlogPtrOutputWithContext(context.Context) ApplicationLoadbalancerFlowlogPtrOutput
}

type applicationLoadbalancerFlowlogPtrType ApplicationLoadbalancerFlowlogArgs

func ApplicationLoadbalancerFlowlogPtr(v *ApplicationLoadbalancerFlowlogArgs) ApplicationLoadbalancerFlowlogPtrInput {
	return (*applicationLoadbalancerFlowlogPtrType)(v)
}

func (*applicationLoadbalancerFlowlogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationLoadbalancerFlowlog)(nil)).Elem()
}

func (i *applicationLoadbalancerFlowlogPtrType) ToApplicationLoadbalancerFlowlogPtrOutput() ApplicationLoadbalancerFlowlogPtrOutput {
	return i.ToApplicationLoadbalancerFlowlogPtrOutputWithContext(context.Background())
}

func (i *applicationLoadbalancerFlowlogPtrType) ToApplicationLoadbalancerFlowlogPtrOutputWithContext(ctx context.Context) ApplicationLoadbalancerFlowlogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerFlowlogPtrOutput)
}

type ApplicationLoadbalancerFlowlogOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerFlowlogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLoadbalancerFlowlog)(nil)).Elem()
}

func (o ApplicationLoadbalancerFlowlogOutput) ToApplicationLoadbalancerFlowlogOutput() ApplicationLoadbalancerFlowlogOutput {
	return o
}

func (o ApplicationLoadbalancerFlowlogOutput) ToApplicationLoadbalancerFlowlogOutputWithContext(ctx context.Context) ApplicationLoadbalancerFlowlogOutput {
	return o
}

func (o ApplicationLoadbalancerFlowlogOutput) ToApplicationLoadbalancerFlowlogPtrOutput() ApplicationLoadbalancerFlowlogPtrOutput {
	return o.ToApplicationLoadbalancerFlowlogPtrOutputWithContext(context.Background())
}

func (o ApplicationLoadbalancerFlowlogOutput) ToApplicationLoadbalancerFlowlogPtrOutputWithContext(ctx context.Context) ApplicationLoadbalancerFlowlogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationLoadbalancerFlowlog) *ApplicationLoadbalancerFlowlog {
		return &v
	}).(ApplicationLoadbalancerFlowlogPtrOutput)
}

// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
func (o ApplicationLoadbalancerFlowlogOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerFlowlog) string { return v.Action }).(pulumi.StringOutput)
}

// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
func (o ApplicationLoadbalancerFlowlogOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerFlowlog) string { return v.Bucket }).(pulumi.StringOutput)
}

// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
func (o ApplicationLoadbalancerFlowlogOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerFlowlog) string { return v.Direction }).(pulumi.StringOutput)
}

// The resource's unique identifier.
func (o ApplicationLoadbalancerFlowlogOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerFlowlog) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// [string] Specifies the name of the flow log.
//
// ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the application load balancer resource.
func (o ApplicationLoadbalancerFlowlogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerFlowlog) string { return v.Name }).(pulumi.StringOutput)
}

type ApplicationLoadbalancerFlowlogPtrOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerFlowlogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationLoadbalancerFlowlog)(nil)).Elem()
}

func (o ApplicationLoadbalancerFlowlogPtrOutput) ToApplicationLoadbalancerFlowlogPtrOutput() ApplicationLoadbalancerFlowlogPtrOutput {
	return o
}

func (o ApplicationLoadbalancerFlowlogPtrOutput) ToApplicationLoadbalancerFlowlogPtrOutputWithContext(ctx context.Context) ApplicationLoadbalancerFlowlogPtrOutput {
	return o
}

func (o ApplicationLoadbalancerFlowlogPtrOutput) Elem() ApplicationLoadbalancerFlowlogOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerFlowlog) ApplicationLoadbalancerFlowlog {
		if v != nil {
			return *v
		}
		var ret ApplicationLoadbalancerFlowlog
		return ret
	}).(ApplicationLoadbalancerFlowlogOutput)
}

// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
func (o ApplicationLoadbalancerFlowlogPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

// [string] Specifies the IONOS Object Storage bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
func (o ApplicationLoadbalancerFlowlogPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
func (o ApplicationLoadbalancerFlowlogPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The resource's unique identifier.
func (o ApplicationLoadbalancerFlowlogPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// [string] Specifies the name of the flow log.
//
// ⚠️ **Note:**: Removing the `flowlog` forces re-creation of the application load balancer resource.
func (o ApplicationLoadbalancerFlowlogPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerFlowlog) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ApplicationLoadbalancerForwardingruleHttpRule struct {
	// [list] - An array of items in the collection.The action is only performed if each and every condition is met; if no conditions are set, the rule will always be performed.
	Conditions []ApplicationLoadbalancerForwardingruleHttpRuleCondition `pulumi:"conditions"`
	// [string] Valid only for STATIC actions.
	ContentType *string `pulumi:"contentType"`
	// [bool] Default is false; valid only for REDIRECT actions.
	DropQuery *bool `pulumi:"dropQuery"`
	// [string] The location for redirecting; mandatory and valid only for REDIRECT actions.
	Location *string `pulumi:"location"`
	// [string] The unique name of the Application Load Balancer HTTP rule.
	Name string `pulumi:"name"`
	// [string] The response message of the request; mandatory for STATIC action.
	ResponseMessage *string `pulumi:"responseMessage"`
	// [int] Valid only for REDIRECT and STATIC actions. For REDIRECT actions, default is 301 and possible values are 301, 302, 303, 307, and 308. For STATIC actions, default is 503 and valid range is 200 to 599.
	StatusCode *int `pulumi:"statusCode"`
	// [string] The UUID of the target group; mandatory for FORWARD action.
	TargetGroup *string `pulumi:"targetGroup"`
	// [string] Type of the Http Rule condition.
	Type string `pulumi:"type"`
}

// ApplicationLoadbalancerForwardingruleHttpRuleInput is an input type that accepts ApplicationLoadbalancerForwardingruleHttpRuleArgs and ApplicationLoadbalancerForwardingruleHttpRuleOutput values.
// You can construct a concrete instance of `ApplicationLoadbalancerForwardingruleHttpRuleInput` via:
//
//	ApplicationLoadbalancerForwardingruleHttpRuleArgs{...}
type ApplicationLoadbalancerForwardingruleHttpRuleInput interface {
	pulumi.Input

	ToApplicationLoadbalancerForwardingruleHttpRuleOutput() ApplicationLoadbalancerForwardingruleHttpRuleOutput
	ToApplicationLoadbalancerForwardingruleHttpRuleOutputWithContext(context.Context) ApplicationLoadbalancerForwardingruleHttpRuleOutput
}

type ApplicationLoadbalancerForwardingruleHttpRuleArgs struct {
	// [list] - An array of items in the collection.The action is only performed if each and every condition is met; if no conditions are set, the rule will always be performed.
	Conditions ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput `pulumi:"conditions"`
	// [string] Valid only for STATIC actions.
	ContentType pulumi.StringPtrInput `pulumi:"contentType"`
	// [bool] Default is false; valid only for REDIRECT actions.
	DropQuery pulumi.BoolPtrInput `pulumi:"dropQuery"`
	// [string] The location for redirecting; mandatory and valid only for REDIRECT actions.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// [string] The unique name of the Application Load Balancer HTTP rule.
	Name pulumi.StringInput `pulumi:"name"`
	// [string] The response message of the request; mandatory for STATIC action.
	ResponseMessage pulumi.StringPtrInput `pulumi:"responseMessage"`
	// [int] Valid only for REDIRECT and STATIC actions. For REDIRECT actions, default is 301 and possible values are 301, 302, 303, 307, and 308. For STATIC actions, default is 503 and valid range is 200 to 599.
	StatusCode pulumi.IntPtrInput `pulumi:"statusCode"`
	// [string] The UUID of the target group; mandatory for FORWARD action.
	TargetGroup pulumi.StringPtrInput `pulumi:"targetGroup"`
	// [string] Type of the Http Rule condition.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationLoadbalancerForwardingruleHttpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRule)(nil)).Elem()
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleArgs) ToApplicationLoadbalancerForwardingruleHttpRuleOutput() ApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return i.ToApplicationLoadbalancerForwardingruleHttpRuleOutputWithContext(context.Background())
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleArgs) ToApplicationLoadbalancerForwardingruleHttpRuleOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerForwardingruleHttpRuleOutput)
}

// ApplicationLoadbalancerForwardingruleHttpRuleArrayInput is an input type that accepts ApplicationLoadbalancerForwardingruleHttpRuleArray and ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationLoadbalancerForwardingruleHttpRuleArrayInput` via:
//
//	ApplicationLoadbalancerForwardingruleHttpRuleArray{ ApplicationLoadbalancerForwardingruleHttpRuleArgs{...} }
type ApplicationLoadbalancerForwardingruleHttpRuleArrayInput interface {
	pulumi.Input

	ToApplicationLoadbalancerForwardingruleHttpRuleArrayOutput() ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput
	ToApplicationLoadbalancerForwardingruleHttpRuleArrayOutputWithContext(context.Context) ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput
}

type ApplicationLoadbalancerForwardingruleHttpRuleArray []ApplicationLoadbalancerForwardingruleHttpRuleInput

func (ApplicationLoadbalancerForwardingruleHttpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLoadbalancerForwardingruleHttpRule)(nil)).Elem()
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleArray) ToApplicationLoadbalancerForwardingruleHttpRuleArrayOutput() ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput {
	return i.ToApplicationLoadbalancerForwardingruleHttpRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleArray) ToApplicationLoadbalancerForwardingruleHttpRuleArrayOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput)
}

type ApplicationLoadbalancerForwardingruleHttpRuleOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerForwardingruleHttpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRule)(nil)).Elem()
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) ToApplicationLoadbalancerForwardingruleHttpRuleOutput() ApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) ToApplicationLoadbalancerForwardingruleHttpRuleOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return o
}

// [list] - An array of items in the collection.The action is only performed if each and every condition is met; if no conditions are set, the rule will always be performed.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) Conditions() ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) []ApplicationLoadbalancerForwardingruleHttpRuleCondition {
		return v.Conditions
	}).(ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput)
}

// [string] Valid only for STATIC actions.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) *string { return v.ContentType }).(pulumi.StringPtrOutput)
}

// [bool] Default is false; valid only for REDIRECT actions.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) DropQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) *bool { return v.DropQuery }).(pulumi.BoolPtrOutput)
}

// [string] The location for redirecting; mandatory and valid only for REDIRECT actions.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// [string] The unique name of the Application Load Balancer HTTP rule.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) string { return v.Name }).(pulumi.StringOutput)
}

// [string] The response message of the request; mandatory for STATIC action.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) ResponseMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) *string { return v.ResponseMessage }).(pulumi.StringPtrOutput)
}

// [int] Valid only for REDIRECT and STATIC actions. For REDIRECT actions, default is 301 and possible values are 301, 302, 303, 307, and 308. For STATIC actions, default is 503 and valid range is 200 to 599.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

// [string] The UUID of the target group; mandatory for FORWARD action.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) TargetGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) *string { return v.TargetGroup }).(pulumi.StringPtrOutput)
}

// [string] Type of the Http Rule condition.
func (o ApplicationLoadbalancerForwardingruleHttpRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRule) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLoadbalancerForwardingruleHttpRule)(nil)).Elem()
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput) ToApplicationLoadbalancerForwardingruleHttpRuleArrayOutput() ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput) ToApplicationLoadbalancerForwardingruleHttpRuleArrayOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput) Index(i pulumi.IntInput) ApplicationLoadbalancerForwardingruleHttpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationLoadbalancerForwardingruleHttpRule {
		return vs[0].([]ApplicationLoadbalancerForwardingruleHttpRule)[vs[1].(int)]
	}).(ApplicationLoadbalancerForwardingruleHttpRuleOutput)
}

type ApplicationLoadbalancerForwardingruleHttpRuleCondition struct {
	// [string] Matching rule for the HTTP rule condition attribute; mandatory for HEADER, PATH, QUERY, METHOD, HOST, and COOKIE types; must be null when type is SOURCE_IP.
	Condition *string `pulumi:"condition"`
	// [string] Must be null when type is PATH, METHOD, HOST, or SOURCE_IP. Key can only be set when type is COOKIES, HEADER, or QUERY.
	Key *string `pulumi:"key"`
	// [bool] Specifies whether the condition is negated or not; the default is False.
	Negate *bool `pulumi:"negate"`
	// [string] Type of the Http Rule condition.
	Type string `pulumi:"type"`
	// [string] Mandatory for conditions CONTAINS, EQUALS, MATCHES, STARTS_WITH, ENDS_WITH; must be null when condition is EXISTS; should be a valid CIDR if provided and if type is SOURCE_IP.
	Value *string `pulumi:"value"`
}

// ApplicationLoadbalancerForwardingruleHttpRuleConditionInput is an input type that accepts ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs and ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput values.
// You can construct a concrete instance of `ApplicationLoadbalancerForwardingruleHttpRuleConditionInput` via:
//
//	ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs{...}
type ApplicationLoadbalancerForwardingruleHttpRuleConditionInput interface {
	pulumi.Input

	ToApplicationLoadbalancerForwardingruleHttpRuleConditionOutput() ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput
	ToApplicationLoadbalancerForwardingruleHttpRuleConditionOutputWithContext(context.Context) ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput
}

type ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs struct {
	// [string] Matching rule for the HTTP rule condition attribute; mandatory for HEADER, PATH, QUERY, METHOD, HOST, and COOKIE types; must be null when type is SOURCE_IP.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// [string] Must be null when type is PATH, METHOD, HOST, or SOURCE_IP. Key can only be set when type is COOKIES, HEADER, or QUERY.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// [bool] Specifies whether the condition is negated or not; the default is False.
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// [string] Type of the Http Rule condition.
	Type pulumi.StringInput `pulumi:"type"`
	// [string] Mandatory for conditions CONTAINS, EQUALS, MATCHES, STARTS_WITH, ENDS_WITH; must be null when condition is EXISTS; should be a valid CIDR if provided and if type is SOURCE_IP.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRuleCondition)(nil)).Elem()
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs) ToApplicationLoadbalancerForwardingruleHttpRuleConditionOutput() ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return i.ToApplicationLoadbalancerForwardingruleHttpRuleConditionOutputWithContext(context.Background())
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs) ToApplicationLoadbalancerForwardingruleHttpRuleConditionOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput)
}

// ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput is an input type that accepts ApplicationLoadbalancerForwardingruleHttpRuleConditionArray and ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput values.
// You can construct a concrete instance of `ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput` via:
//
//	ApplicationLoadbalancerForwardingruleHttpRuleConditionArray{ ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs{...} }
type ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput interface {
	pulumi.Input

	ToApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput() ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput
	ToApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutputWithContext(context.Context) ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput
}

type ApplicationLoadbalancerForwardingruleHttpRuleConditionArray []ApplicationLoadbalancerForwardingruleHttpRuleConditionInput

func (ApplicationLoadbalancerForwardingruleHttpRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLoadbalancerForwardingruleHttpRuleCondition)(nil)).Elem()
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleConditionArray) ToApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput() ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return i.ToApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutputWithContext(context.Background())
}

func (i ApplicationLoadbalancerForwardingruleHttpRuleConditionArray) ToApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput)
}

type ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRuleCondition)(nil)).Elem()
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) ToApplicationLoadbalancerForwardingruleHttpRuleConditionOutput() ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) ToApplicationLoadbalancerForwardingruleHttpRuleConditionOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return o
}

// [string] Matching rule for the HTTP rule condition attribute; mandatory for HEADER, PATH, QUERY, METHOD, HOST, and COOKIE types; must be null when type is SOURCE_IP.
func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRuleCondition) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// [string] Must be null when type is PATH, METHOD, HOST, or SOURCE_IP. Key can only be set when type is COOKIES, HEADER, or QUERY.
func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRuleCondition) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// [bool] Specifies whether the condition is negated or not; the default is False.
func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRuleCondition) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// [string] Type of the Http Rule condition.
func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRuleCondition) string { return v.Type }).(pulumi.StringOutput)
}

// [string] Mandatory for conditions CONTAINS, EQUALS, MATCHES, STARTS_WITH, ENDS_WITH; must be null when condition is EXISTS; should be a valid CIDR if provided and if type is SOURCE_IP.
func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationLoadbalancerForwardingruleHttpRuleCondition) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationLoadbalancerForwardingruleHttpRuleCondition)(nil)).Elem()
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput) ToApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput() ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput) ToApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput) Index(i pulumi.IntInput) ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationLoadbalancerForwardingruleHttpRuleCondition {
		return vs[0].([]ApplicationLoadbalancerForwardingruleHttpRuleCondition)[vs[1].(int)]
	}).(ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerFlowlogInput)(nil)).Elem(), ApplicationLoadbalancerFlowlogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerFlowlogPtrInput)(nil)).Elem(), ApplicationLoadbalancerFlowlogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRuleInput)(nil)).Elem(), ApplicationLoadbalancerForwardingruleHttpRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRuleArrayInput)(nil)).Elem(), ApplicationLoadbalancerForwardingruleHttpRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRuleConditionInput)(nil)).Elem(), ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayInput)(nil)).Elem(), ApplicationLoadbalancerForwardingruleHttpRuleConditionArray{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerFlowlogOutput{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerFlowlogPtrOutput{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerForwardingruleHttpRuleOutput{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerForwardingruleHttpRuleConditionOutput{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerForwardingruleHttpRuleConditionArrayOutput{})
}
