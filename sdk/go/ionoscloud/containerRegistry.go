// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ionoscloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an **Container Registry** on IonosCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ionoscloud.NewContainerRegistry(ctx, "example", &ionoscloud.ContainerRegistryArgs{
//				ApiSubnetAllowLists: pulumi.StringArray{
//					pulumi.String("1.2.3.4/32"),
//				},
//				GarbageCollectionSchedule: &ionoscloud.ContainerRegistryGarbageCollectionScheduleArgs{
//					Days: pulumi.StringArray{
//						pulumi.String("Monday"),
//						pulumi.String("Tuesday"),
//					},
//					Time: pulumi.String("05:19:00+00:00"),
//				},
//				Location: pulumi.String("de/fra"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Resource Container Registry can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import ionoscloud:index/containerRegistry:ContainerRegistry mycr {container_registry uuid}
// ```
type ContainerRegistry struct {
	pulumi.CustomResourceState

	// [list] The subnet CIDRs that are allowed to connect to the registry.  Specify "a.b.c.d/32" for an individual IP address. __Note__: If this list is empty or not set, there are no restrictions.
	ApiSubnetAllowLists pulumi.StringArrayOutput `pulumi:"apiSubnetAllowLists"`
	// [Map]
	Features ContainerRegistryFeaturesOutput `pulumi:"features"`
	// [Map]
	GarbageCollectionSchedule ContainerRegistryGarbageCollectionScheduleOutput `pulumi:"garbageCollectionSchedule"`
	Hostname                  pulumi.StringOutput                              `pulumi:"hostname"`
	// [string] Immutable, update forces re-creation of the resource.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the container registry. Immutable, update forces re-creation of the resource.
	Name          pulumi.StringOutput                      `pulumi:"name"`
	StorageUsages ContainerRegistryStorageUsageArrayOutput `pulumi:"storageUsages"`
}

// NewContainerRegistry registers a new resource with the given unique name, arguments, and options.
func NewContainerRegistry(ctx *pulumi.Context,
	name string, args *ContainerRegistryArgs, opts ...pulumi.ResourceOption) (*ContainerRegistry, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ContainerRegistry
	err := ctx.RegisterResource("ionoscloud:index/containerRegistry:ContainerRegistry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerRegistry gets an existing ContainerRegistry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerRegistry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerRegistryState, opts ...pulumi.ResourceOption) (*ContainerRegistry, error) {
	var resource ContainerRegistry
	err := ctx.ReadResource("ionoscloud:index/containerRegistry:ContainerRegistry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerRegistry resources.
type containerRegistryState struct {
	// [list] The subnet CIDRs that are allowed to connect to the registry.  Specify "a.b.c.d/32" for an individual IP address. __Note__: If this list is empty or not set, there are no restrictions.
	ApiSubnetAllowLists []string `pulumi:"apiSubnetAllowLists"`
	// [Map]
	Features *ContainerRegistryFeatures `pulumi:"features"`
	// [Map]
	GarbageCollectionSchedule *ContainerRegistryGarbageCollectionSchedule `pulumi:"garbageCollectionSchedule"`
	Hostname                  *string                                     `pulumi:"hostname"`
	// [string] Immutable, update forces re-creation of the resource.
	Location *string `pulumi:"location"`
	// The name of the container registry. Immutable, update forces re-creation of the resource.
	Name          *string                         `pulumi:"name"`
	StorageUsages []ContainerRegistryStorageUsage `pulumi:"storageUsages"`
}

type ContainerRegistryState struct {
	// [list] The subnet CIDRs that are allowed to connect to the registry.  Specify "a.b.c.d/32" for an individual IP address. __Note__: If this list is empty or not set, there are no restrictions.
	ApiSubnetAllowLists pulumi.StringArrayInput
	// [Map]
	Features ContainerRegistryFeaturesPtrInput
	// [Map]
	GarbageCollectionSchedule ContainerRegistryGarbageCollectionSchedulePtrInput
	Hostname                  pulumi.StringPtrInput
	// [string] Immutable, update forces re-creation of the resource.
	Location pulumi.StringPtrInput
	// The name of the container registry. Immutable, update forces re-creation of the resource.
	Name          pulumi.StringPtrInput
	StorageUsages ContainerRegistryStorageUsageArrayInput
}

func (ContainerRegistryState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerRegistryState)(nil)).Elem()
}

type containerRegistryArgs struct {
	// [list] The subnet CIDRs that are allowed to connect to the registry.  Specify "a.b.c.d/32" for an individual IP address. __Note__: If this list is empty or not set, there are no restrictions.
	ApiSubnetAllowLists []string `pulumi:"apiSubnetAllowLists"`
	// [Map]
	Features *ContainerRegistryFeatures `pulumi:"features"`
	// [Map]
	GarbageCollectionSchedule *ContainerRegistryGarbageCollectionSchedule `pulumi:"garbageCollectionSchedule"`
	// [string] Immutable, update forces re-creation of the resource.
	Location string `pulumi:"location"`
	// The name of the container registry. Immutable, update forces re-creation of the resource.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ContainerRegistry resource.
type ContainerRegistryArgs struct {
	// [list] The subnet CIDRs that are allowed to connect to the registry.  Specify "a.b.c.d/32" for an individual IP address. __Note__: If this list is empty or not set, there are no restrictions.
	ApiSubnetAllowLists pulumi.StringArrayInput
	// [Map]
	Features ContainerRegistryFeaturesPtrInput
	// [Map]
	GarbageCollectionSchedule ContainerRegistryGarbageCollectionSchedulePtrInput
	// [string] Immutable, update forces re-creation of the resource.
	Location pulumi.StringInput
	// The name of the container registry. Immutable, update forces re-creation of the resource.
	Name pulumi.StringPtrInput
}

func (ContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerRegistryArgs)(nil)).Elem()
}

type ContainerRegistryInput interface {
	pulumi.Input

	ToContainerRegistryOutput() ContainerRegistryOutput
	ToContainerRegistryOutputWithContext(ctx context.Context) ContainerRegistryOutput
}

func (*ContainerRegistry) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRegistry)(nil)).Elem()
}

func (i *ContainerRegistry) ToContainerRegistryOutput() ContainerRegistryOutput {
	return i.ToContainerRegistryOutputWithContext(context.Background())
}

func (i *ContainerRegistry) ToContainerRegistryOutputWithContext(ctx context.Context) ContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryOutput)
}

// ContainerRegistryArrayInput is an input type that accepts ContainerRegistryArray and ContainerRegistryArrayOutput values.
// You can construct a concrete instance of `ContainerRegistryArrayInput` via:
//
//	ContainerRegistryArray{ ContainerRegistryArgs{...} }
type ContainerRegistryArrayInput interface {
	pulumi.Input

	ToContainerRegistryArrayOutput() ContainerRegistryArrayOutput
	ToContainerRegistryArrayOutputWithContext(context.Context) ContainerRegistryArrayOutput
}

type ContainerRegistryArray []ContainerRegistryInput

func (ContainerRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ContainerRegistry)(nil)).Elem()
}

func (i ContainerRegistryArray) ToContainerRegistryArrayOutput() ContainerRegistryArrayOutput {
	return i.ToContainerRegistryArrayOutputWithContext(context.Background())
}

func (i ContainerRegistryArray) ToContainerRegistryArrayOutputWithContext(ctx context.Context) ContainerRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryArrayOutput)
}

// ContainerRegistryMapInput is an input type that accepts ContainerRegistryMap and ContainerRegistryMapOutput values.
// You can construct a concrete instance of `ContainerRegistryMapInput` via:
//
//	ContainerRegistryMap{ "key": ContainerRegistryArgs{...} }
type ContainerRegistryMapInput interface {
	pulumi.Input

	ToContainerRegistryMapOutput() ContainerRegistryMapOutput
	ToContainerRegistryMapOutputWithContext(context.Context) ContainerRegistryMapOutput
}

type ContainerRegistryMap map[string]ContainerRegistryInput

func (ContainerRegistryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ContainerRegistry)(nil)).Elem()
}

func (i ContainerRegistryMap) ToContainerRegistryMapOutput() ContainerRegistryMapOutput {
	return i.ToContainerRegistryMapOutputWithContext(context.Background())
}

func (i ContainerRegistryMap) ToContainerRegistryMapOutputWithContext(ctx context.Context) ContainerRegistryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryMapOutput)
}

type ContainerRegistryOutput struct{ *pulumi.OutputState }

func (ContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRegistry)(nil)).Elem()
}

func (o ContainerRegistryOutput) ToContainerRegistryOutput() ContainerRegistryOutput {
	return o
}

func (o ContainerRegistryOutput) ToContainerRegistryOutputWithContext(ctx context.Context) ContainerRegistryOutput {
	return o
}

// [list] The subnet CIDRs that are allowed to connect to the registry.  Specify "a.b.c.d/32" for an individual IP address. __Note__: If this list is empty or not set, there are no restrictions.
func (o ContainerRegistryOutput) ApiSubnetAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerRegistry) pulumi.StringArrayOutput { return v.ApiSubnetAllowLists }).(pulumi.StringArrayOutput)
}

// [Map]
func (o ContainerRegistryOutput) Features() ContainerRegistryFeaturesOutput {
	return o.ApplyT(func(v *ContainerRegistry) ContainerRegistryFeaturesOutput { return v.Features }).(ContainerRegistryFeaturesOutput)
}

// [Map]
func (o ContainerRegistryOutput) GarbageCollectionSchedule() ContainerRegistryGarbageCollectionScheduleOutput {
	return o.ApplyT(func(v *ContainerRegistry) ContainerRegistryGarbageCollectionScheduleOutput {
		return v.GarbageCollectionSchedule
	}).(ContainerRegistryGarbageCollectionScheduleOutput)
}

func (o ContainerRegistryOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRegistry) pulumi.StringOutput { return v.Hostname }).(pulumi.StringOutput)
}

// [string] Immutable, update forces re-creation of the resource.
func (o ContainerRegistryOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRegistry) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the container registry. Immutable, update forces re-creation of the resource.
func (o ContainerRegistryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerRegistry) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ContainerRegistryOutput) StorageUsages() ContainerRegistryStorageUsageArrayOutput {
	return o.ApplyT(func(v *ContainerRegistry) ContainerRegistryStorageUsageArrayOutput { return v.StorageUsages }).(ContainerRegistryStorageUsageArrayOutput)
}

type ContainerRegistryArrayOutput struct{ *pulumi.OutputState }

func (ContainerRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ContainerRegistry)(nil)).Elem()
}

func (o ContainerRegistryArrayOutput) ToContainerRegistryArrayOutput() ContainerRegistryArrayOutput {
	return o
}

func (o ContainerRegistryArrayOutput) ToContainerRegistryArrayOutputWithContext(ctx context.Context) ContainerRegistryArrayOutput {
	return o
}

func (o ContainerRegistryArrayOutput) Index(i pulumi.IntInput) ContainerRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ContainerRegistry {
		return vs[0].([]*ContainerRegistry)[vs[1].(int)]
	}).(ContainerRegistryOutput)
}

type ContainerRegistryMapOutput struct{ *pulumi.OutputState }

func (ContainerRegistryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ContainerRegistry)(nil)).Elem()
}

func (o ContainerRegistryMapOutput) ToContainerRegistryMapOutput() ContainerRegistryMapOutput {
	return o
}

func (o ContainerRegistryMapOutput) ToContainerRegistryMapOutputWithContext(ctx context.Context) ContainerRegistryMapOutput {
	return o
}

func (o ContainerRegistryMapOutput) MapIndex(k pulumi.StringInput) ContainerRegistryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ContainerRegistry {
		return vs[0].(map[string]*ContainerRegistry)[vs[1].(string)]
	}).(ContainerRegistryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRegistryInput)(nil)).Elem(), &ContainerRegistry{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRegistryArrayInput)(nil)).Elem(), ContainerRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRegistryMapInput)(nil)).Elem(), ContainerRegistryMap{})
	pulumi.RegisterOutputType(ContainerRegistryOutput{})
	pulumi.RegisterOutputType(ContainerRegistryArrayOutput{})
	pulumi.RegisterOutputType(ContainerRegistryMapOutput{})
}
