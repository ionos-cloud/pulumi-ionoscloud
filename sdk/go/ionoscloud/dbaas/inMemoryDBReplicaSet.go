// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbaas

import (
	"context"
	"reflect"

	"errors"
	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a **DBaaS InMemoryDB Replica Set**.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/compute"
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/dbaas"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := compute.NewDatacenter(ctx, "example", &compute.DatacenterArgs{
//				Name:        pulumi.String("example"),
//				Location:    pulumi.String("de/txl"),
//				Description: pulumi.String("Datacenter for DBaaS InMemoryDB replica sets"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleLan, err := compute.NewLan(ctx, "example", &compute.LanArgs{
//				DatacenterId: example.ID(),
//				Public:       pulumi.Bool(false),
//				Name:         pulumi.String("example"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewServer(ctx, "example", &compute.ServerArgs{
//				Name:             pulumi.String("example"),
//				DatacenterId:     example.ID(),
//				Cores:            pulumi.Int(2),
//				Ram:              pulumi.Int(2048),
//				AvailabilityZone: pulumi.String("ZONE_1"),
//				CpuFamily:        pulumi.String("INTEL_SKYLAKE"),
//				ImageName:        pulumi.String("rockylinux-8-GenericCloud-20230518"),
//				ImagePassword:    pulumi.String("password"),
//				Volume: &compute.ServerVolumeArgs{
//					Name:     pulumi.String("example"),
//					Size:     pulumi.Int(10),
//					DiskType: pulumi.String("SSD Standard"),
//				},
//				Nic: &compute.ServerNicArgs{
//					Lan:  exampleLan.ID(),
//					Name: pulumi.String("example"),
//					Dhcp: pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = dbaas.NewInMemoryDBReplicaSet(ctx, "example", &dbaas.InMemoryDBReplicaSetArgs{
//				Location:    example.Location,
//				DisplayName: pulumi.String("ExampleReplicaSet"),
//				Version:     pulumi.String("7.2"),
//				Replicas:    pulumi.Int(4),
//				Resources: &dbaas.InMemoryDBReplicaSetResourcesArgs{
//					Cores: pulumi.Int(1),
//					Ram:   pulumi.Int(6),
//				},
//				PersistenceMode: pulumi.String("RDB"),
//				EvictionPolicy:  pulumi.String("noeviction"),
//				Connections: &dbaas.InMemoryDBReplicaSetConnectionsArgs{
//					DatacenterId: example.ID(),
//					LanId:        exampleLan.ID(),
//					Cidr:         pulumi.String("database_ip_cidr_from_nic"),
//				},
//				MaintenanceWindow: &dbaas.InMemoryDBReplicaSetMaintenanceWindowArgs{
//					DayOfTheWeek: pulumi.String("Monday"),
//					Time:         pulumi.String("10:00:00"),
//				},
//				Credentials: &dbaas.InMemoryDBReplicaSetCredentialsArgs{
//					Username:          pulumi.String("myuser"),
//					PlainTextPassword: pulumi.String("testpassword"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Resource DBaaS InMemoryDB Replica Set can be imported using the `replicaset_id` and the `location`, separated by `:`, e.g:
//
// ```sh
// $ pulumi import ionoscloud:dbaas/inMemoryDBReplicaSet:InMemoryDBReplicaSet example location:replicaSet uuid
// ```
type InMemoryDBReplicaSet struct {
	pulumi.CustomResourceState

	// [object] The network connection for your replica set. Only one connection is allowed. Updates to the value of the fields force the replica set to be re-created.
	Connections InMemoryDBReplicaSetConnectionsOutput `pulumi:"connections"`
	// [object] Credentials for the InMemoryDB replicaset, only one type of password can be used since they are mutually exclusive. These values are used to create the initial InMemoryDB user, updating any of these will force recreation of the replica set resource.
	Credentials InMemoryDBReplicaSetCredentialsOutput `pulumi:"credentials"`
	// [string] The human-readable name of your replica set.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// [string] The DNS name pointing to your replica set. Will be used to connect to the active/standalone instance.
	//
	// > **⚠ NOTE:** `IONOS_API_URL_INMEMORYDB` can be used to set a custom API URL for the resource. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
	DnsName pulumi.StringOutput `pulumi:"dnsName"`
	// [string] The eviction policy for the replica set, possible values are:
	EvictionPolicy pulumi.StringOutput `pulumi:"evictionPolicy"`
	// [string] The ID of a snapshot to restore the replica set from. If set, the replica set will be created from the snapshot.
	InitialSnapshotId pulumi.StringPtrOutput `pulumi:"initialSnapshotId"`
	// [string] The location of your replica set. Updates to the value of the field force the replica set to be re-created. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// (Computed) A weekly 4 hour-long window, during which maintenance might occur.
	MaintenanceWindow InMemoryDBReplicaSetMaintenanceWindowOutput `pulumi:"maintenanceWindow"`
	// [string] Specifies How and If data is persisted, possible values are:
	// * `None` - Data is inMemory only and will not be persisted. Useful for cache only applications.
	// * `AOF` - (Append Only File) AOF persistence logs every write operation received by the server. These operations can then be replayed again at server startup, reconstructing the original dataset. Commands are logged using the same format as the InMemoryDB protocol itself.
	// * `RDB` - RDB persistence performs snapshots of the current in memory state.
	// * `RDB_AOF` - Both RDB and AOF persistence are enabled.
	PersistenceMode pulumi.StringOutput `pulumi:"persistenceMode"`
	// [int] The total number of replicas in the replica set (one active and n-1 passive). In case of a standalone instance, the value is 1. In all other cases, the value is > 1. The replicas will not be available as read replicas, they are only standby for a failure of the active instance.
	Replicas pulumi.IntOutput `pulumi:"replicas"`
	// [object] The resources of the individual replicas.
	Resources InMemoryDBReplicaSetResourcesOutput `pulumi:"resources"`
	// [string] The InMemoryDB version of your replica set.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewInMemoryDBReplicaSet registers a new resource with the given unique name, arguments, and options.
func NewInMemoryDBReplicaSet(ctx *pulumi.Context,
	name string, args *InMemoryDBReplicaSetArgs, opts ...pulumi.ResourceOption) (*InMemoryDBReplicaSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Connections == nil {
		return nil, errors.New("invalid value for required argument 'Connections'")
	}
	if args.Credentials == nil {
		return nil, errors.New("invalid value for required argument 'Credentials'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.EvictionPolicy == nil {
		return nil, errors.New("invalid value for required argument 'EvictionPolicy'")
	}
	if args.PersistenceMode == nil {
		return nil, errors.New("invalid value for required argument 'PersistenceMode'")
	}
	if args.Replicas == nil {
		return nil, errors.New("invalid value for required argument 'Replicas'")
	}
	if args.Resources == nil {
		return nil, errors.New("invalid value for required argument 'Resources'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InMemoryDBReplicaSet
	err := ctx.RegisterResource("ionoscloud:dbaas/inMemoryDBReplicaSet:InMemoryDBReplicaSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInMemoryDBReplicaSet gets an existing InMemoryDBReplicaSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInMemoryDBReplicaSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InMemoryDBReplicaSetState, opts ...pulumi.ResourceOption) (*InMemoryDBReplicaSet, error) {
	var resource InMemoryDBReplicaSet
	err := ctx.ReadResource("ionoscloud:dbaas/inMemoryDBReplicaSet:InMemoryDBReplicaSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InMemoryDBReplicaSet resources.
type inMemoryDBReplicaSetState struct {
	// [object] The network connection for your replica set. Only one connection is allowed. Updates to the value of the fields force the replica set to be re-created.
	Connections *InMemoryDBReplicaSetConnections `pulumi:"connections"`
	// [object] Credentials for the InMemoryDB replicaset, only one type of password can be used since they are mutually exclusive. These values are used to create the initial InMemoryDB user, updating any of these will force recreation of the replica set resource.
	Credentials *InMemoryDBReplicaSetCredentials `pulumi:"credentials"`
	// [string] The human-readable name of your replica set.
	DisplayName *string `pulumi:"displayName"`
	// [string] The DNS name pointing to your replica set. Will be used to connect to the active/standalone instance.
	//
	// > **⚠ NOTE:** `IONOS_API_URL_INMEMORYDB` can be used to set a custom API URL for the resource. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
	DnsName *string `pulumi:"dnsName"`
	// [string] The eviction policy for the replica set, possible values are:
	EvictionPolicy *string `pulumi:"evictionPolicy"`
	// [string] The ID of a snapshot to restore the replica set from. If set, the replica set will be created from the snapshot.
	InitialSnapshotId *string `pulumi:"initialSnapshotId"`
	// [string] The location of your replica set. Updates to the value of the field force the replica set to be re-created. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
	Location *string `pulumi:"location"`
	// (Computed) A weekly 4 hour-long window, during which maintenance might occur.
	MaintenanceWindow *InMemoryDBReplicaSetMaintenanceWindow `pulumi:"maintenanceWindow"`
	// [string] Specifies How and If data is persisted, possible values are:
	// * `None` - Data is inMemory only and will not be persisted. Useful for cache only applications.
	// * `AOF` - (Append Only File) AOF persistence logs every write operation received by the server. These operations can then be replayed again at server startup, reconstructing the original dataset. Commands are logged using the same format as the InMemoryDB protocol itself.
	// * `RDB` - RDB persistence performs snapshots of the current in memory state.
	// * `RDB_AOF` - Both RDB and AOF persistence are enabled.
	PersistenceMode *string `pulumi:"persistenceMode"`
	// [int] The total number of replicas in the replica set (one active and n-1 passive). In case of a standalone instance, the value is 1. In all other cases, the value is > 1. The replicas will not be available as read replicas, they are only standby for a failure of the active instance.
	Replicas *int `pulumi:"replicas"`
	// [object] The resources of the individual replicas.
	Resources *InMemoryDBReplicaSetResources `pulumi:"resources"`
	// [string] The InMemoryDB version of your replica set.
	Version *string `pulumi:"version"`
}

type InMemoryDBReplicaSetState struct {
	// [object] The network connection for your replica set. Only one connection is allowed. Updates to the value of the fields force the replica set to be re-created.
	Connections InMemoryDBReplicaSetConnectionsPtrInput
	// [object] Credentials for the InMemoryDB replicaset, only one type of password can be used since they are mutually exclusive. These values are used to create the initial InMemoryDB user, updating any of these will force recreation of the replica set resource.
	Credentials InMemoryDBReplicaSetCredentialsPtrInput
	// [string] The human-readable name of your replica set.
	DisplayName pulumi.StringPtrInput
	// [string] The DNS name pointing to your replica set. Will be used to connect to the active/standalone instance.
	//
	// > **⚠ NOTE:** `IONOS_API_URL_INMEMORYDB` can be used to set a custom API URL for the resource. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
	DnsName pulumi.StringPtrInput
	// [string] The eviction policy for the replica set, possible values are:
	EvictionPolicy pulumi.StringPtrInput
	// [string] The ID of a snapshot to restore the replica set from. If set, the replica set will be created from the snapshot.
	InitialSnapshotId pulumi.StringPtrInput
	// [string] The location of your replica set. Updates to the value of the field force the replica set to be re-created. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
	Location pulumi.StringPtrInput
	// (Computed) A weekly 4 hour-long window, during which maintenance might occur.
	MaintenanceWindow InMemoryDBReplicaSetMaintenanceWindowPtrInput
	// [string] Specifies How and If data is persisted, possible values are:
	// * `None` - Data is inMemory only and will not be persisted. Useful for cache only applications.
	// * `AOF` - (Append Only File) AOF persistence logs every write operation received by the server. These operations can then be replayed again at server startup, reconstructing the original dataset. Commands are logged using the same format as the InMemoryDB protocol itself.
	// * `RDB` - RDB persistence performs snapshots of the current in memory state.
	// * `RDB_AOF` - Both RDB and AOF persistence are enabled.
	PersistenceMode pulumi.StringPtrInput
	// [int] The total number of replicas in the replica set (one active and n-1 passive). In case of a standalone instance, the value is 1. In all other cases, the value is > 1. The replicas will not be available as read replicas, they are only standby for a failure of the active instance.
	Replicas pulumi.IntPtrInput
	// [object] The resources of the individual replicas.
	Resources InMemoryDBReplicaSetResourcesPtrInput
	// [string] The InMemoryDB version of your replica set.
	Version pulumi.StringPtrInput
}

func (InMemoryDBReplicaSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*inMemoryDBReplicaSetState)(nil)).Elem()
}

type inMemoryDBReplicaSetArgs struct {
	// [object] The network connection for your replica set. Only one connection is allowed. Updates to the value of the fields force the replica set to be re-created.
	Connections InMemoryDBReplicaSetConnections `pulumi:"connections"`
	// [object] Credentials for the InMemoryDB replicaset, only one type of password can be used since they are mutually exclusive. These values are used to create the initial InMemoryDB user, updating any of these will force recreation of the replica set resource.
	Credentials InMemoryDBReplicaSetCredentials `pulumi:"credentials"`
	// [string] The human-readable name of your replica set.
	DisplayName string `pulumi:"displayName"`
	// [string] The eviction policy for the replica set, possible values are:
	EvictionPolicy string `pulumi:"evictionPolicy"`
	// [string] The ID of a snapshot to restore the replica set from. If set, the replica set will be created from the snapshot.
	InitialSnapshotId *string `pulumi:"initialSnapshotId"`
	// [string] The location of your replica set. Updates to the value of the field force the replica set to be re-created. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
	Location *string `pulumi:"location"`
	// (Computed) A weekly 4 hour-long window, during which maintenance might occur.
	MaintenanceWindow *InMemoryDBReplicaSetMaintenanceWindow `pulumi:"maintenanceWindow"`
	// [string] Specifies How and If data is persisted, possible values are:
	// * `None` - Data is inMemory only and will not be persisted. Useful for cache only applications.
	// * `AOF` - (Append Only File) AOF persistence logs every write operation received by the server. These operations can then be replayed again at server startup, reconstructing the original dataset. Commands are logged using the same format as the InMemoryDB protocol itself.
	// * `RDB` - RDB persistence performs snapshots of the current in memory state.
	// * `RDB_AOF` - Both RDB and AOF persistence are enabled.
	PersistenceMode string `pulumi:"persistenceMode"`
	// [int] The total number of replicas in the replica set (one active and n-1 passive). In case of a standalone instance, the value is 1. In all other cases, the value is > 1. The replicas will not be available as read replicas, they are only standby for a failure of the active instance.
	Replicas int `pulumi:"replicas"`
	// [object] The resources of the individual replicas.
	Resources InMemoryDBReplicaSetResources `pulumi:"resources"`
	// [string] The InMemoryDB version of your replica set.
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a InMemoryDBReplicaSet resource.
type InMemoryDBReplicaSetArgs struct {
	// [object] The network connection for your replica set. Only one connection is allowed. Updates to the value of the fields force the replica set to be re-created.
	Connections InMemoryDBReplicaSetConnectionsInput
	// [object] Credentials for the InMemoryDB replicaset, only one type of password can be used since they are mutually exclusive. These values are used to create the initial InMemoryDB user, updating any of these will force recreation of the replica set resource.
	Credentials InMemoryDBReplicaSetCredentialsInput
	// [string] The human-readable name of your replica set.
	DisplayName pulumi.StringInput
	// [string] The eviction policy for the replica set, possible values are:
	EvictionPolicy pulumi.StringInput
	// [string] The ID of a snapshot to restore the replica set from. If set, the replica set will be created from the snapshot.
	InitialSnapshotId pulumi.StringPtrInput
	// [string] The location of your replica set. Updates to the value of the field force the replica set to be re-created. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
	Location pulumi.StringPtrInput
	// (Computed) A weekly 4 hour-long window, during which maintenance might occur.
	MaintenanceWindow InMemoryDBReplicaSetMaintenanceWindowPtrInput
	// [string] Specifies How and If data is persisted, possible values are:
	// * `None` - Data is inMemory only and will not be persisted. Useful for cache only applications.
	// * `AOF` - (Append Only File) AOF persistence logs every write operation received by the server. These operations can then be replayed again at server startup, reconstructing the original dataset. Commands are logged using the same format as the InMemoryDB protocol itself.
	// * `RDB` - RDB persistence performs snapshots of the current in memory state.
	// * `RDB_AOF` - Both RDB and AOF persistence are enabled.
	PersistenceMode pulumi.StringInput
	// [int] The total number of replicas in the replica set (one active and n-1 passive). In case of a standalone instance, the value is 1. In all other cases, the value is > 1. The replicas will not be available as read replicas, they are only standby for a failure of the active instance.
	Replicas pulumi.IntInput
	// [object] The resources of the individual replicas.
	Resources InMemoryDBReplicaSetResourcesInput
	// [string] The InMemoryDB version of your replica set.
	Version pulumi.StringInput
}

func (InMemoryDBReplicaSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*inMemoryDBReplicaSetArgs)(nil)).Elem()
}

type InMemoryDBReplicaSetInput interface {
	pulumi.Input

	ToInMemoryDBReplicaSetOutput() InMemoryDBReplicaSetOutput
	ToInMemoryDBReplicaSetOutputWithContext(ctx context.Context) InMemoryDBReplicaSetOutput
}

func (*InMemoryDBReplicaSet) ElementType() reflect.Type {
	return reflect.TypeOf((**InMemoryDBReplicaSet)(nil)).Elem()
}

func (i *InMemoryDBReplicaSet) ToInMemoryDBReplicaSetOutput() InMemoryDBReplicaSetOutput {
	return i.ToInMemoryDBReplicaSetOutputWithContext(context.Background())
}

func (i *InMemoryDBReplicaSet) ToInMemoryDBReplicaSetOutputWithContext(ctx context.Context) InMemoryDBReplicaSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetOutput)
}

// InMemoryDBReplicaSetArrayInput is an input type that accepts InMemoryDBReplicaSetArray and InMemoryDBReplicaSetArrayOutput values.
// You can construct a concrete instance of `InMemoryDBReplicaSetArrayInput` via:
//
//	InMemoryDBReplicaSetArray{ InMemoryDBReplicaSetArgs{...} }
type InMemoryDBReplicaSetArrayInput interface {
	pulumi.Input

	ToInMemoryDBReplicaSetArrayOutput() InMemoryDBReplicaSetArrayOutput
	ToInMemoryDBReplicaSetArrayOutputWithContext(context.Context) InMemoryDBReplicaSetArrayOutput
}

type InMemoryDBReplicaSetArray []InMemoryDBReplicaSetInput

func (InMemoryDBReplicaSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InMemoryDBReplicaSet)(nil)).Elem()
}

func (i InMemoryDBReplicaSetArray) ToInMemoryDBReplicaSetArrayOutput() InMemoryDBReplicaSetArrayOutput {
	return i.ToInMemoryDBReplicaSetArrayOutputWithContext(context.Background())
}

func (i InMemoryDBReplicaSetArray) ToInMemoryDBReplicaSetArrayOutputWithContext(ctx context.Context) InMemoryDBReplicaSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetArrayOutput)
}

// InMemoryDBReplicaSetMapInput is an input type that accepts InMemoryDBReplicaSetMap and InMemoryDBReplicaSetMapOutput values.
// You can construct a concrete instance of `InMemoryDBReplicaSetMapInput` via:
//
//	InMemoryDBReplicaSetMap{ "key": InMemoryDBReplicaSetArgs{...} }
type InMemoryDBReplicaSetMapInput interface {
	pulumi.Input

	ToInMemoryDBReplicaSetMapOutput() InMemoryDBReplicaSetMapOutput
	ToInMemoryDBReplicaSetMapOutputWithContext(context.Context) InMemoryDBReplicaSetMapOutput
}

type InMemoryDBReplicaSetMap map[string]InMemoryDBReplicaSetInput

func (InMemoryDBReplicaSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InMemoryDBReplicaSet)(nil)).Elem()
}

func (i InMemoryDBReplicaSetMap) ToInMemoryDBReplicaSetMapOutput() InMemoryDBReplicaSetMapOutput {
	return i.ToInMemoryDBReplicaSetMapOutputWithContext(context.Background())
}

func (i InMemoryDBReplicaSetMap) ToInMemoryDBReplicaSetMapOutputWithContext(ctx context.Context) InMemoryDBReplicaSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetMapOutput)
}

type InMemoryDBReplicaSetOutput struct{ *pulumi.OutputState }

func (InMemoryDBReplicaSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMemoryDBReplicaSet)(nil)).Elem()
}

func (o InMemoryDBReplicaSetOutput) ToInMemoryDBReplicaSetOutput() InMemoryDBReplicaSetOutput {
	return o
}

func (o InMemoryDBReplicaSetOutput) ToInMemoryDBReplicaSetOutputWithContext(ctx context.Context) InMemoryDBReplicaSetOutput {
	return o
}

// [object] The network connection for your replica set. Only one connection is allowed. Updates to the value of the fields force the replica set to be re-created.
func (o InMemoryDBReplicaSetOutput) Connections() InMemoryDBReplicaSetConnectionsOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSet) InMemoryDBReplicaSetConnectionsOutput { return v.Connections }).(InMemoryDBReplicaSetConnectionsOutput)
}

// [object] Credentials for the InMemoryDB replicaset, only one type of password can be used since they are mutually exclusive. These values are used to create the initial InMemoryDB user, updating any of these will force recreation of the replica set resource.
func (o InMemoryDBReplicaSetOutput) Credentials() InMemoryDBReplicaSetCredentialsOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSet) InMemoryDBReplicaSetCredentialsOutput { return v.Credentials }).(InMemoryDBReplicaSetCredentialsOutput)
}

// [string] The human-readable name of your replica set.
func (o InMemoryDBReplicaSetOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSet) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// [string] The DNS name pointing to your replica set. Will be used to connect to the active/standalone instance.
//
// > **⚠ NOTE:** `IONOS_API_URL_INMEMORYDB` can be used to set a custom API URL for the resource. `location` field needs to be empty, otherwise it will override the custom API URL. Setting `endpoint` or `IONOS_API_URL` does not have any effect.
func (o InMemoryDBReplicaSetOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSet) pulumi.StringOutput { return v.DnsName }).(pulumi.StringOutput)
}

// [string] The eviction policy for the replica set, possible values are:
func (o InMemoryDBReplicaSetOutput) EvictionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSet) pulumi.StringOutput { return v.EvictionPolicy }).(pulumi.StringOutput)
}

// [string] The ID of a snapshot to restore the replica set from. If set, the replica set will be created from the snapshot.
func (o InMemoryDBReplicaSetOutput) InitialSnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSet) pulumi.StringPtrOutput { return v.InitialSnapshotId }).(pulumi.StringPtrOutput)
}

// [string] The location of your replica set. Updates to the value of the field force the replica set to be re-created. If this is not set and if no value is provided for the `IONOS_API_URL` env var, the default `location` will be: `de/fra`.
func (o InMemoryDBReplicaSetOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSet) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// (Computed) A weekly 4 hour-long window, during which maintenance might occur.
func (o InMemoryDBReplicaSetOutput) MaintenanceWindow() InMemoryDBReplicaSetMaintenanceWindowOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSet) InMemoryDBReplicaSetMaintenanceWindowOutput { return v.MaintenanceWindow }).(InMemoryDBReplicaSetMaintenanceWindowOutput)
}

// [string] Specifies How and If data is persisted, possible values are:
// * `None` - Data is inMemory only and will not be persisted. Useful for cache only applications.
// * `AOF` - (Append Only File) AOF persistence logs every write operation received by the server. These operations can then be replayed again at server startup, reconstructing the original dataset. Commands are logged using the same format as the InMemoryDB protocol itself.
// * `RDB` - RDB persistence performs snapshots of the current in memory state.
// * `RDB_AOF` - Both RDB and AOF persistence are enabled.
func (o InMemoryDBReplicaSetOutput) PersistenceMode() pulumi.StringOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSet) pulumi.StringOutput { return v.PersistenceMode }).(pulumi.StringOutput)
}

// [int] The total number of replicas in the replica set (one active and n-1 passive). In case of a standalone instance, the value is 1. In all other cases, the value is > 1. The replicas will not be available as read replicas, they are only standby for a failure of the active instance.
func (o InMemoryDBReplicaSetOutput) Replicas() pulumi.IntOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSet) pulumi.IntOutput { return v.Replicas }).(pulumi.IntOutput)
}

// [object] The resources of the individual replicas.
func (o InMemoryDBReplicaSetOutput) Resources() InMemoryDBReplicaSetResourcesOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSet) InMemoryDBReplicaSetResourcesOutput { return v.Resources }).(InMemoryDBReplicaSetResourcesOutput)
}

// [string] The InMemoryDB version of your replica set.
func (o InMemoryDBReplicaSetOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSet) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type InMemoryDBReplicaSetArrayOutput struct{ *pulumi.OutputState }

func (InMemoryDBReplicaSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InMemoryDBReplicaSet)(nil)).Elem()
}

func (o InMemoryDBReplicaSetArrayOutput) ToInMemoryDBReplicaSetArrayOutput() InMemoryDBReplicaSetArrayOutput {
	return o
}

func (o InMemoryDBReplicaSetArrayOutput) ToInMemoryDBReplicaSetArrayOutputWithContext(ctx context.Context) InMemoryDBReplicaSetArrayOutput {
	return o
}

func (o InMemoryDBReplicaSetArrayOutput) Index(i pulumi.IntInput) InMemoryDBReplicaSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InMemoryDBReplicaSet {
		return vs[0].([]*InMemoryDBReplicaSet)[vs[1].(int)]
	}).(InMemoryDBReplicaSetOutput)
}

type InMemoryDBReplicaSetMapOutput struct{ *pulumi.OutputState }

func (InMemoryDBReplicaSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InMemoryDBReplicaSet)(nil)).Elem()
}

func (o InMemoryDBReplicaSetMapOutput) ToInMemoryDBReplicaSetMapOutput() InMemoryDBReplicaSetMapOutput {
	return o
}

func (o InMemoryDBReplicaSetMapOutput) ToInMemoryDBReplicaSetMapOutputWithContext(ctx context.Context) InMemoryDBReplicaSetMapOutput {
	return o
}

func (o InMemoryDBReplicaSetMapOutput) MapIndex(k pulumi.StringInput) InMemoryDBReplicaSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InMemoryDBReplicaSet {
		return vs[0].(map[string]*InMemoryDBReplicaSet)[vs[1].(string)]
	}).(InMemoryDBReplicaSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InMemoryDBReplicaSetInput)(nil)).Elem(), &InMemoryDBReplicaSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*InMemoryDBReplicaSetArrayInput)(nil)).Elem(), InMemoryDBReplicaSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InMemoryDBReplicaSetMapInput)(nil)).Elem(), InMemoryDBReplicaSetMap{})
	pulumi.RegisterOutputType(InMemoryDBReplicaSetOutput{})
	pulumi.RegisterOutputType(InMemoryDBReplicaSetArrayOutput{})
	pulumi.RegisterOutputType(InMemoryDBReplicaSetMapOutput{})
}
