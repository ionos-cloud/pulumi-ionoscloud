// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbaas

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **DbaaS Postgres Versions data source** can be used to search for and retrieve list of available postgres versions for a specific cluster or for all clusters.
//
// ## Example Usage
//
// ### Retrieve list of postgres versions for all clusters
// ```go
// package main
//
// import (
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/dbaas"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dbaas.GetPSQLVersions(ctx, &dbaas.GetPSQLVersionsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPSQLVersions(ctx *pulumi.Context, args *GetPSQLVersionsArgs, opts ...pulumi.InvokeOption) (*GetPSQLVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPSQLVersionsResult
	err := ctx.Invoke("ionoscloud:dbaas/getPSQLVersions:getPSQLVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPSQLVersions.
type GetPSQLVersionsArgs struct {
	// The unique ID of the cluster.
	//
	// If `clusterId` is not provided the data source will return the list of postgres version for all cluster.
	ClusterId *string `pulumi:"clusterId"`
}

// A collection of values returned by getPSQLVersions.
type GetPSQLVersionsResult struct {
	// Id of the cluster
	ClusterId *string `pulumi:"clusterId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// list of PostgreSQL versions.
	PostgresVersions []string `pulumi:"postgresVersions"`
}

func GetPSQLVersionsOutput(ctx *pulumi.Context, args GetPSQLVersionsOutputArgs, opts ...pulumi.InvokeOption) GetPSQLVersionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPSQLVersionsResultOutput, error) {
			args := v.(GetPSQLVersionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:dbaas/getPSQLVersions:getPSQLVersions", args, GetPSQLVersionsResultOutput{}, options).(GetPSQLVersionsResultOutput), nil
		}).(GetPSQLVersionsResultOutput)
}

// A collection of arguments for invoking getPSQLVersions.
type GetPSQLVersionsOutputArgs struct {
	// The unique ID of the cluster.
	//
	// If `clusterId` is not provided the data source will return the list of postgres version for all cluster.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
}

func (GetPSQLVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPSQLVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getPSQLVersions.
type GetPSQLVersionsResultOutput struct{ *pulumi.OutputState }

func (GetPSQLVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPSQLVersionsResult)(nil)).Elem()
}

func (o GetPSQLVersionsResultOutput) ToGetPSQLVersionsResultOutput() GetPSQLVersionsResultOutput {
	return o
}

func (o GetPSQLVersionsResultOutput) ToGetPSQLVersionsResultOutputWithContext(ctx context.Context) GetPSQLVersionsResultOutput {
	return o
}

// Id of the cluster
func (o GetPSQLVersionsResultOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPSQLVersionsResult) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPSQLVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPSQLVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// list of PostgreSQL versions.
func (o GetPSQLVersionsResultOutput) PostgresVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPSQLVersionsResult) []string { return v.PostgresVersions }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPSQLVersionsResultOutput{})
}
