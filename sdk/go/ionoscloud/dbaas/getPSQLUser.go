// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbaas

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupPSQLUser(ctx *pulumi.Context, args *LookupPSQLUserArgs, opts ...pulumi.InvokeOption) (*LookupPSQLUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPSQLUserResult
	err := ctx.Invoke("ionoscloud:dbaas/getPSQLUser:getPSQLUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPSQLUser.
type LookupPSQLUserArgs struct {
	ClusterId string `pulumi:"clusterId"`
	Username  string `pulumi:"username"`
}

// A collection of values returned by getPSQLUser.
type LookupPSQLUserResult struct {
	ClusterId    string `pulumi:"clusterId"`
	Id           string `pulumi:"id"`
	IsSystemUser bool   `pulumi:"isSystemUser"`
	Username     string `pulumi:"username"`
}

func LookupPSQLUserOutput(ctx *pulumi.Context, args LookupPSQLUserOutputArgs, opts ...pulumi.InvokeOption) LookupPSQLUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPSQLUserResultOutput, error) {
			args := v.(LookupPSQLUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:dbaas/getPSQLUser:getPSQLUser", args, LookupPSQLUserResultOutput{}, options).(LookupPSQLUserResultOutput), nil
		}).(LookupPSQLUserResultOutput)
}

// A collection of arguments for invoking getPSQLUser.
type LookupPSQLUserOutputArgs struct {
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	Username  pulumi.StringInput `pulumi:"username"`
}

func (LookupPSQLUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPSQLUserArgs)(nil)).Elem()
}

// A collection of values returned by getPSQLUser.
type LookupPSQLUserResultOutput struct{ *pulumi.OutputState }

func (LookupPSQLUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPSQLUserResult)(nil)).Elem()
}

func (o LookupPSQLUserResultOutput) ToLookupPSQLUserResultOutput() LookupPSQLUserResultOutput {
	return o
}

func (o LookupPSQLUserResultOutput) ToLookupPSQLUserResultOutputWithContext(ctx context.Context) LookupPSQLUserResultOutput {
	return o
}

func (o LookupPSQLUserResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPSQLUserResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupPSQLUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPSQLUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPSQLUserResultOutput) IsSystemUser() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPSQLUserResult) bool { return v.IsSystemUser }).(pulumi.BoolOutput)
}

func (o LookupPSQLUserResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPSQLUserResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPSQLUserResultOutput{})
}
