// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ionoscloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an **Application Load Balancer Forwarding Rule** on IonosCloud.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"os"
//
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud"
//	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func readFileOrPanic(path string) pulumi.StringPtrInput {
//		data, err := os.ReadFile(path)
//		if err != nil {
//			panic(err.Error())
//		}
//		return pulumi.String(string(data))
//	}
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleDatacenter, err := compute.NewDatacenter(ctx, "exampleDatacenter", &compute.DatacenterArgs{
//				Location:          pulumi.String("us/las"),
//				Description:       pulumi.String("datacenter description"),
//				SecAuthProtection: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			example1, err := compute.NewLan(ctx, "example1", &compute.LanArgs{
//				DatacenterId: exampleDatacenter.ID(),
//				Public:       pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			example2, err := compute.NewLan(ctx, "example2", &compute.LanArgs{
//				DatacenterId: exampleDatacenter.ID(),
//				Public:       pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			exampleApplicationLoadbalancer, err := ionoscloud.NewApplicationLoadbalancer(ctx, "exampleApplicationLoadbalancer", &ionoscloud.ApplicationLoadbalancerArgs{
//				DatacenterId: exampleDatacenter.ID(),
//				ListenerLan:  example1.ID(),
//				Ips: pulumi.StringArray{
//					pulumi.String("10.12.118.224"),
//				},
//				TargetLan: example2.ID(),
//				LbPrivateIps: pulumi.StringArray{
//					pulumi.String("10.13.72.225/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// optionally you can add a certificate to the application load balancer
//			cert, err := ionoscloud.NewCertificate(ctx, "cert", &ionoscloud.CertificateArgs{
//				Certificate:      readFileOrPanic("path_to_cert"),
//				CertificateChain: readFileOrPanic("path_to_cert_chain"),
//				PrivateKey:       readFileOrPanic("path_to_private_key"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ionoscloud.NewApplicationLoadbalancerForwardingrule(ctx, "exampleApplicationLoadbalancerForwardingrule", &ionoscloud.ApplicationLoadbalancerForwardingruleArgs{
//				DatacenterId:              exampleDatacenter.ID(),
//				ApplicationLoadbalancerId: exampleApplicationLoadbalancer.ID(),
//				Protocol:                  pulumi.String("HTTP"),
//				ListenerIp:                pulumi.String("10.12.118.224"),
//				ListenerPort:              pulumi.Int(8080),
//				ClientTimeout:             pulumi.Int(1000),
//				HttpRules: ionoscloud.ApplicationLoadbalancerForwardingruleHttpRuleArray{
//					&ionoscloud.ApplicationLoadbalancerForwardingruleHttpRuleArgs{
//						Name:       pulumi.String("http_rule"),
//						Type:       pulumi.String("REDIRECT"),
//						DropQuery:  pulumi.Bool(true),
//						Location:   pulumi.String("www.ionos.com"),
//						StatusCode: pulumi.Int(301),
//						Conditions: ionoscloud.ApplicationLoadbalancerForwardingruleHttpRuleConditionArray{
//							&ionoscloud.ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs{
//								Type:      pulumi.String("HEADER"),
//								Condition: pulumi.String("EQUALS"),
//								Negate:    pulumi.Bool(true),
//								Key:       pulumi.String("key"),
//								Value:     pulumi.String("10.12.120.224/24"),
//							},
//						},
//					},
//					&ionoscloud.ApplicationLoadbalancerForwardingruleHttpRuleArgs{
//						Name:            pulumi.String("http_rule_2"),
//						Type:            pulumi.String("STATIC"),
//						DropQuery:       pulumi.Bool(false),
//						StatusCode:      pulumi.Int(303),
//						ResponseMessage: pulumi.String("Response"),
//						ContentType:     pulumi.String("text/plain"),
//						Conditions: ionoscloud.ApplicationLoadbalancerForwardingruleHttpRuleConditionArray{
//							&ionoscloud.ApplicationLoadbalancerForwardingruleHttpRuleConditionArgs{
//								Type:      pulumi.String("QUERY"),
//								Condition: pulumi.String("MATCHES"),
//								Negate:    pulumi.Bool(false),
//								Key:       pulumi.String("key"),
//								Value:     pulumi.String("10.12.120.224/24"),
//							},
//						},
//					},
//				},
//				ServerCertificates: pulumi.StringArray{
//					cert.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Resource Application Load Balancer Forwarding Rule can be imported using the `resource id`, `alb id` and `datacenter id`, e.g.
//
// ```sh
// $ pulumi import ionoscloud:index/applicationLoadbalancerForwardingrule:ApplicationLoadbalancerForwardingrule my_application_loadbalancer_forwardingrule {datacenter uuid}/{application_loadbalancer uuid}/{application_loadbalancer_forwardingrule uuid}
// ```
type ApplicationLoadbalancerForwardingrule struct {
	pulumi.CustomResourceState

	// [string] The ID of Application Load Balancer.
	ApplicationLoadbalancerId pulumi.StringOutput `pulumi:"applicationLoadbalancerId"`
	// [int] The maximum time in milliseconds to wait for the client to acknowledge or send data; default is 50,000 (50 seconds).
	ClientTimeout pulumi.IntOutput `pulumi:"clientTimeout"`
	// [string] The ID of a Virtual Data Center.
	DatacenterId pulumi.StringOutput `pulumi:"datacenterId"`
	// [list] Array of items in that collection
	HttpRules ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput `pulumi:"httpRules"`
	// [string] Listening (inbound) IP.
	ListenerIp pulumi.StringOutput `pulumi:"listenerIp"`
	// [int] Listening (inbound) port number; valid range is 1 to 65535.
	ListenerPort pulumi.IntOutput `pulumi:"listenerPort"`
	// [string] The unique name of the Application Load Balancer HTTP rule.
	Name pulumi.StringOutput `pulumi:"name"`
	// [string] Balancing protocol.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// [list] Array of certificate ids. You can create certificates with the certificate resource.
	ServerCertificates pulumi.StringArrayOutput `pulumi:"serverCertificates"`
}

// NewApplicationLoadbalancerForwardingrule registers a new resource with the given unique name, arguments, and options.
func NewApplicationLoadbalancerForwardingrule(ctx *pulumi.Context,
	name string, args *ApplicationLoadbalancerForwardingruleArgs, opts ...pulumi.ResourceOption) (*ApplicationLoadbalancerForwardingrule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationLoadbalancerId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationLoadbalancerId'")
	}
	if args.DatacenterId == nil {
		return nil, errors.New("invalid value for required argument 'DatacenterId'")
	}
	if args.ListenerIp == nil {
		return nil, errors.New("invalid value for required argument 'ListenerIp'")
	}
	if args.ListenerPort == nil {
		return nil, errors.New("invalid value for required argument 'ListenerPort'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationLoadbalancerForwardingrule
	err := ctx.RegisterResource("ionoscloud:index/applicationLoadbalancerForwardingrule:ApplicationLoadbalancerForwardingrule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationLoadbalancerForwardingrule gets an existing ApplicationLoadbalancerForwardingrule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationLoadbalancerForwardingrule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationLoadbalancerForwardingruleState, opts ...pulumi.ResourceOption) (*ApplicationLoadbalancerForwardingrule, error) {
	var resource ApplicationLoadbalancerForwardingrule
	err := ctx.ReadResource("ionoscloud:index/applicationLoadbalancerForwardingrule:ApplicationLoadbalancerForwardingrule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationLoadbalancerForwardingrule resources.
type applicationLoadbalancerForwardingruleState struct {
	// [string] The ID of Application Load Balancer.
	ApplicationLoadbalancerId *string `pulumi:"applicationLoadbalancerId"`
	// [int] The maximum time in milliseconds to wait for the client to acknowledge or send data; default is 50,000 (50 seconds).
	ClientTimeout *int `pulumi:"clientTimeout"`
	// [string] The ID of a Virtual Data Center.
	DatacenterId *string `pulumi:"datacenterId"`
	// [list] Array of items in that collection
	HttpRules []ApplicationLoadbalancerForwardingruleHttpRule `pulumi:"httpRules"`
	// [string] Listening (inbound) IP.
	ListenerIp *string `pulumi:"listenerIp"`
	// [int] Listening (inbound) port number; valid range is 1 to 65535.
	ListenerPort *int `pulumi:"listenerPort"`
	// [string] The unique name of the Application Load Balancer HTTP rule.
	Name *string `pulumi:"name"`
	// [string] Balancing protocol.
	Protocol *string `pulumi:"protocol"`
	// [list] Array of certificate ids. You can create certificates with the certificate resource.
	ServerCertificates []string `pulumi:"serverCertificates"`
}

type ApplicationLoadbalancerForwardingruleState struct {
	// [string] The ID of Application Load Balancer.
	ApplicationLoadbalancerId pulumi.StringPtrInput
	// [int] The maximum time in milliseconds to wait for the client to acknowledge or send data; default is 50,000 (50 seconds).
	ClientTimeout pulumi.IntPtrInput
	// [string] The ID of a Virtual Data Center.
	DatacenterId pulumi.StringPtrInput
	// [list] Array of items in that collection
	HttpRules ApplicationLoadbalancerForwardingruleHttpRuleArrayInput
	// [string] Listening (inbound) IP.
	ListenerIp pulumi.StringPtrInput
	// [int] Listening (inbound) port number; valid range is 1 to 65535.
	ListenerPort pulumi.IntPtrInput
	// [string] The unique name of the Application Load Balancer HTTP rule.
	Name pulumi.StringPtrInput
	// [string] Balancing protocol.
	Protocol pulumi.StringPtrInput
	// [list] Array of certificate ids. You can create certificates with the certificate resource.
	ServerCertificates pulumi.StringArrayInput
}

func (ApplicationLoadbalancerForwardingruleState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationLoadbalancerForwardingruleState)(nil)).Elem()
}

type applicationLoadbalancerForwardingruleArgs struct {
	// [string] The ID of Application Load Balancer.
	ApplicationLoadbalancerId string `pulumi:"applicationLoadbalancerId"`
	// [int] The maximum time in milliseconds to wait for the client to acknowledge or send data; default is 50,000 (50 seconds).
	ClientTimeout *int `pulumi:"clientTimeout"`
	// [string] The ID of a Virtual Data Center.
	DatacenterId string `pulumi:"datacenterId"`
	// [list] Array of items in that collection
	HttpRules []ApplicationLoadbalancerForwardingruleHttpRule `pulumi:"httpRules"`
	// [string] Listening (inbound) IP.
	ListenerIp string `pulumi:"listenerIp"`
	// [int] Listening (inbound) port number; valid range is 1 to 65535.
	ListenerPort int `pulumi:"listenerPort"`
	// [string] The unique name of the Application Load Balancer HTTP rule.
	Name *string `pulumi:"name"`
	// [string] Balancing protocol.
	Protocol string `pulumi:"protocol"`
	// [list] Array of certificate ids. You can create certificates with the certificate resource.
	ServerCertificates []string `pulumi:"serverCertificates"`
}

// The set of arguments for constructing a ApplicationLoadbalancerForwardingrule resource.
type ApplicationLoadbalancerForwardingruleArgs struct {
	// [string] The ID of Application Load Balancer.
	ApplicationLoadbalancerId pulumi.StringInput
	// [int] The maximum time in milliseconds to wait for the client to acknowledge or send data; default is 50,000 (50 seconds).
	ClientTimeout pulumi.IntPtrInput
	// [string] The ID of a Virtual Data Center.
	DatacenterId pulumi.StringInput
	// [list] Array of items in that collection
	HttpRules ApplicationLoadbalancerForwardingruleHttpRuleArrayInput
	// [string] Listening (inbound) IP.
	ListenerIp pulumi.StringInput
	// [int] Listening (inbound) port number; valid range is 1 to 65535.
	ListenerPort pulumi.IntInput
	// [string] The unique name of the Application Load Balancer HTTP rule.
	Name pulumi.StringPtrInput
	// [string] Balancing protocol.
	Protocol pulumi.StringInput
	// [list] Array of certificate ids. You can create certificates with the certificate resource.
	ServerCertificates pulumi.StringArrayInput
}

func (ApplicationLoadbalancerForwardingruleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationLoadbalancerForwardingruleArgs)(nil)).Elem()
}

type ApplicationLoadbalancerForwardingruleInput interface {
	pulumi.Input

	ToApplicationLoadbalancerForwardingruleOutput() ApplicationLoadbalancerForwardingruleOutput
	ToApplicationLoadbalancerForwardingruleOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleOutput
}

func (*ApplicationLoadbalancerForwardingrule) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationLoadbalancerForwardingrule)(nil)).Elem()
}

func (i *ApplicationLoadbalancerForwardingrule) ToApplicationLoadbalancerForwardingruleOutput() ApplicationLoadbalancerForwardingruleOutput {
	return i.ToApplicationLoadbalancerForwardingruleOutputWithContext(context.Background())
}

func (i *ApplicationLoadbalancerForwardingrule) ToApplicationLoadbalancerForwardingruleOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerForwardingruleOutput)
}

// ApplicationLoadbalancerForwardingruleArrayInput is an input type that accepts ApplicationLoadbalancerForwardingruleArray and ApplicationLoadbalancerForwardingruleArrayOutput values.
// You can construct a concrete instance of `ApplicationLoadbalancerForwardingruleArrayInput` via:
//
//	ApplicationLoadbalancerForwardingruleArray{ ApplicationLoadbalancerForwardingruleArgs{...} }
type ApplicationLoadbalancerForwardingruleArrayInput interface {
	pulumi.Input

	ToApplicationLoadbalancerForwardingruleArrayOutput() ApplicationLoadbalancerForwardingruleArrayOutput
	ToApplicationLoadbalancerForwardingruleArrayOutputWithContext(context.Context) ApplicationLoadbalancerForwardingruleArrayOutput
}

type ApplicationLoadbalancerForwardingruleArray []ApplicationLoadbalancerForwardingruleInput

func (ApplicationLoadbalancerForwardingruleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationLoadbalancerForwardingrule)(nil)).Elem()
}

func (i ApplicationLoadbalancerForwardingruleArray) ToApplicationLoadbalancerForwardingruleArrayOutput() ApplicationLoadbalancerForwardingruleArrayOutput {
	return i.ToApplicationLoadbalancerForwardingruleArrayOutputWithContext(context.Background())
}

func (i ApplicationLoadbalancerForwardingruleArray) ToApplicationLoadbalancerForwardingruleArrayOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerForwardingruleArrayOutput)
}

// ApplicationLoadbalancerForwardingruleMapInput is an input type that accepts ApplicationLoadbalancerForwardingruleMap and ApplicationLoadbalancerForwardingruleMapOutput values.
// You can construct a concrete instance of `ApplicationLoadbalancerForwardingruleMapInput` via:
//
//	ApplicationLoadbalancerForwardingruleMap{ "key": ApplicationLoadbalancerForwardingruleArgs{...} }
type ApplicationLoadbalancerForwardingruleMapInput interface {
	pulumi.Input

	ToApplicationLoadbalancerForwardingruleMapOutput() ApplicationLoadbalancerForwardingruleMapOutput
	ToApplicationLoadbalancerForwardingruleMapOutputWithContext(context.Context) ApplicationLoadbalancerForwardingruleMapOutput
}

type ApplicationLoadbalancerForwardingruleMap map[string]ApplicationLoadbalancerForwardingruleInput

func (ApplicationLoadbalancerForwardingruleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationLoadbalancerForwardingrule)(nil)).Elem()
}

func (i ApplicationLoadbalancerForwardingruleMap) ToApplicationLoadbalancerForwardingruleMapOutput() ApplicationLoadbalancerForwardingruleMapOutput {
	return i.ToApplicationLoadbalancerForwardingruleMapOutputWithContext(context.Background())
}

func (i ApplicationLoadbalancerForwardingruleMap) ToApplicationLoadbalancerForwardingruleMapOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLoadbalancerForwardingruleMapOutput)
}

type ApplicationLoadbalancerForwardingruleOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerForwardingruleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationLoadbalancerForwardingrule)(nil)).Elem()
}

func (o ApplicationLoadbalancerForwardingruleOutput) ToApplicationLoadbalancerForwardingruleOutput() ApplicationLoadbalancerForwardingruleOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleOutput) ToApplicationLoadbalancerForwardingruleOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleOutput {
	return o
}

// [string] The ID of Application Load Balancer.
func (o ApplicationLoadbalancerForwardingruleOutput) ApplicationLoadbalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerForwardingrule) pulumi.StringOutput { return v.ApplicationLoadbalancerId }).(pulumi.StringOutput)
}

// [int] The maximum time in milliseconds to wait for the client to acknowledge or send data; default is 50,000 (50 seconds).
func (o ApplicationLoadbalancerForwardingruleOutput) ClientTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerForwardingrule) pulumi.IntOutput { return v.ClientTimeout }).(pulumi.IntOutput)
}

// [string] The ID of a Virtual Data Center.
func (o ApplicationLoadbalancerForwardingruleOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerForwardingrule) pulumi.StringOutput { return v.DatacenterId }).(pulumi.StringOutput)
}

// [list] Array of items in that collection
func (o ApplicationLoadbalancerForwardingruleOutput) HttpRules() ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerForwardingrule) ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput {
		return v.HttpRules
	}).(ApplicationLoadbalancerForwardingruleHttpRuleArrayOutput)
}

// [string] Listening (inbound) IP.
func (o ApplicationLoadbalancerForwardingruleOutput) ListenerIp() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerForwardingrule) pulumi.StringOutput { return v.ListenerIp }).(pulumi.StringOutput)
}

// [int] Listening (inbound) port number; valid range is 1 to 65535.
func (o ApplicationLoadbalancerForwardingruleOutput) ListenerPort() pulumi.IntOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerForwardingrule) pulumi.IntOutput { return v.ListenerPort }).(pulumi.IntOutput)
}

// [string] The unique name of the Application Load Balancer HTTP rule.
func (o ApplicationLoadbalancerForwardingruleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerForwardingrule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// [string] Balancing protocol.
func (o ApplicationLoadbalancerForwardingruleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerForwardingrule) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// [list] Array of certificate ids. You can create certificates with the certificate resource.
func (o ApplicationLoadbalancerForwardingruleOutput) ServerCertificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationLoadbalancerForwardingrule) pulumi.StringArrayOutput { return v.ServerCertificates }).(pulumi.StringArrayOutput)
}

type ApplicationLoadbalancerForwardingruleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerForwardingruleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationLoadbalancerForwardingrule)(nil)).Elem()
}

func (o ApplicationLoadbalancerForwardingruleArrayOutput) ToApplicationLoadbalancerForwardingruleArrayOutput() ApplicationLoadbalancerForwardingruleArrayOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleArrayOutput) ToApplicationLoadbalancerForwardingruleArrayOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleArrayOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleArrayOutput) Index(i pulumi.IntInput) ApplicationLoadbalancerForwardingruleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationLoadbalancerForwardingrule {
		return vs[0].([]*ApplicationLoadbalancerForwardingrule)[vs[1].(int)]
	}).(ApplicationLoadbalancerForwardingruleOutput)
}

type ApplicationLoadbalancerForwardingruleMapOutput struct{ *pulumi.OutputState }

func (ApplicationLoadbalancerForwardingruleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationLoadbalancerForwardingrule)(nil)).Elem()
}

func (o ApplicationLoadbalancerForwardingruleMapOutput) ToApplicationLoadbalancerForwardingruleMapOutput() ApplicationLoadbalancerForwardingruleMapOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleMapOutput) ToApplicationLoadbalancerForwardingruleMapOutputWithContext(ctx context.Context) ApplicationLoadbalancerForwardingruleMapOutput {
	return o
}

func (o ApplicationLoadbalancerForwardingruleMapOutput) MapIndex(k pulumi.StringInput) ApplicationLoadbalancerForwardingruleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationLoadbalancerForwardingrule {
		return vs[0].(map[string]*ApplicationLoadbalancerForwardingrule)[vs[1].(string)]
	}).(ApplicationLoadbalancerForwardingruleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerForwardingruleInput)(nil)).Elem(), &ApplicationLoadbalancerForwardingrule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerForwardingruleArrayInput)(nil)).Elem(), ApplicationLoadbalancerForwardingruleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationLoadbalancerForwardingruleMapInput)(nil)).Elem(), ApplicationLoadbalancerForwardingruleMap{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerForwardingruleOutput{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerForwardingruleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationLoadbalancerForwardingruleMapOutput{})
}
