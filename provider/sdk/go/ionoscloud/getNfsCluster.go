// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ionoscloud

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns information about clusters of Network File Storage (NFS) on IonosCloud.
func GetNfsCluster(ctx *pulumi.Context, args *GetNfsClusterArgs, opts ...pulumi.InvokeOption) (*GetNfsClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNfsClusterResult
	err := ctx.Invoke("ionoscloud:index/getNfsCluster:getNfsCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNfsCluster.
type GetNfsClusterArgs struct {
	// ID of the Network File Storage cluster.
	Id *string `pulumi:"id"`
	// The location where the Network File Storage cluster is located.
	Location string `pulumi:"location"`
	// Name of the Network File Storage cluster.
	Name *string `pulumi:"name"`
	// Whether partial matching is allowed or not when using the name filter. Defaults to `false`.
	PartialMatch *bool `pulumi:"partialMatch"`
}

// A collection of values returned by getNfsCluster.
type GetNfsClusterResult struct {
	// A list of connections for the Network File Storage cluster. You can specify only one connection. Each connection supports the following:
	Connections []GetNfsClusterConnection `pulumi:"connections"`
	// The ID of the Network File Storage cluster.
	Id string `pulumi:"id"`
	// The location where the Network File Storage cluster is located.
	Location string `pulumi:"location"`
	// The name of the Network File Storage cluster.
	Name string `pulumi:"name"`
	// The NFS configuration for the Network File Storage cluster. Each NFS configuration supports the following:
	Nfs          []GetNfsClusterNf `pulumi:"nfs"`
	PartialMatch *bool             `pulumi:"partialMatch"`
	// The size of the Network File Storage cluster in TiB. Note that the cluster size cannot be reduced after provisioning. This value determines the billing fees. Default is `2`. The minimum value is `2` and the maximum value is `42`.
	Size int `pulumi:"size"`
}

func GetNfsClusterOutput(ctx *pulumi.Context, args GetNfsClusterOutputArgs, opts ...pulumi.InvokeOption) GetNfsClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetNfsClusterResultOutput, error) {
			args := v.(GetNfsClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ionoscloud:index/getNfsCluster:getNfsCluster", args, GetNfsClusterResultOutput{}, options).(GetNfsClusterResultOutput), nil
		}).(GetNfsClusterResultOutput)
}

// A collection of arguments for invoking getNfsCluster.
type GetNfsClusterOutputArgs struct {
	// ID of the Network File Storage cluster.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The location where the Network File Storage cluster is located.
	Location pulumi.StringInput `pulumi:"location"`
	// Name of the Network File Storage cluster.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether partial matching is allowed or not when using the name filter. Defaults to `false`.
	PartialMatch pulumi.BoolPtrInput `pulumi:"partialMatch"`
}

func (GetNfsClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNfsClusterArgs)(nil)).Elem()
}

// A collection of values returned by getNfsCluster.
type GetNfsClusterResultOutput struct{ *pulumi.OutputState }

func (GetNfsClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNfsClusterResult)(nil)).Elem()
}

func (o GetNfsClusterResultOutput) ToGetNfsClusterResultOutput() GetNfsClusterResultOutput {
	return o
}

func (o GetNfsClusterResultOutput) ToGetNfsClusterResultOutputWithContext(ctx context.Context) GetNfsClusterResultOutput {
	return o
}

// A list of connections for the Network File Storage cluster. You can specify only one connection. Each connection supports the following:
func (o GetNfsClusterResultOutput) Connections() GetNfsClusterConnectionArrayOutput {
	return o.ApplyT(func(v GetNfsClusterResult) []GetNfsClusterConnection { return v.Connections }).(GetNfsClusterConnectionArrayOutput)
}

// The ID of the Network File Storage cluster.
func (o GetNfsClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNfsClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// The location where the Network File Storage cluster is located.
func (o GetNfsClusterResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetNfsClusterResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the Network File Storage cluster.
func (o GetNfsClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNfsClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

// The NFS configuration for the Network File Storage cluster. Each NFS configuration supports the following:
func (o GetNfsClusterResultOutput) Nfs() GetNfsClusterNfArrayOutput {
	return o.ApplyT(func(v GetNfsClusterResult) []GetNfsClusterNf { return v.Nfs }).(GetNfsClusterNfArrayOutput)
}

func (o GetNfsClusterResultOutput) PartialMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetNfsClusterResult) *bool { return v.PartialMatch }).(pulumi.BoolPtrOutput)
}

// The size of the Network File Storage cluster in TiB. Note that the cluster size cannot be reduced after provisioning. This value determines the billing fees. Default is `2`. The minimum value is `2` and the maximum value is `42`.
func (o GetNfsClusterResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetNfsClusterResult) int { return v.Size }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNfsClusterResultOutput{})
}
