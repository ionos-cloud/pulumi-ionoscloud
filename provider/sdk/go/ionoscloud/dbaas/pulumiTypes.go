// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbaas

import (
	"context"
	"reflect"

	"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type InMemoryDBReplicaSetConnections struct {
	// [string] The IP and subnet for your instance. Note the following unavailable IP ranges: 10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24.
	Cidr string `pulumi:"cidr"`
	// [string] The datacenter to connect your instance to.
	DatacenterId string `pulumi:"datacenterId"`
	// [string] The numeric LAN ID to connect your instance to.
	LanId string `pulumi:"lanId"`
}

// InMemoryDBReplicaSetConnectionsInput is an input type that accepts InMemoryDBReplicaSetConnectionsArgs and InMemoryDBReplicaSetConnectionsOutput values.
// You can construct a concrete instance of `InMemoryDBReplicaSetConnectionsInput` via:
//
//	InMemoryDBReplicaSetConnectionsArgs{...}
type InMemoryDBReplicaSetConnectionsInput interface {
	pulumi.Input

	ToInMemoryDBReplicaSetConnectionsOutput() InMemoryDBReplicaSetConnectionsOutput
	ToInMemoryDBReplicaSetConnectionsOutputWithContext(context.Context) InMemoryDBReplicaSetConnectionsOutput
}

type InMemoryDBReplicaSetConnectionsArgs struct {
	// [string] The IP and subnet for your instance. Note the following unavailable IP ranges: 10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24.
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// [string] The datacenter to connect your instance to.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// [string] The numeric LAN ID to connect your instance to.
	LanId pulumi.StringInput `pulumi:"lanId"`
}

func (InMemoryDBReplicaSetConnectionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMemoryDBReplicaSetConnections)(nil)).Elem()
}

func (i InMemoryDBReplicaSetConnectionsArgs) ToInMemoryDBReplicaSetConnectionsOutput() InMemoryDBReplicaSetConnectionsOutput {
	return i.ToInMemoryDBReplicaSetConnectionsOutputWithContext(context.Background())
}

func (i InMemoryDBReplicaSetConnectionsArgs) ToInMemoryDBReplicaSetConnectionsOutputWithContext(ctx context.Context) InMemoryDBReplicaSetConnectionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetConnectionsOutput)
}

func (i InMemoryDBReplicaSetConnectionsArgs) ToInMemoryDBReplicaSetConnectionsPtrOutput() InMemoryDBReplicaSetConnectionsPtrOutput {
	return i.ToInMemoryDBReplicaSetConnectionsPtrOutputWithContext(context.Background())
}

func (i InMemoryDBReplicaSetConnectionsArgs) ToInMemoryDBReplicaSetConnectionsPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetConnectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetConnectionsOutput).ToInMemoryDBReplicaSetConnectionsPtrOutputWithContext(ctx)
}

// InMemoryDBReplicaSetConnectionsPtrInput is an input type that accepts InMemoryDBReplicaSetConnectionsArgs, InMemoryDBReplicaSetConnectionsPtr and InMemoryDBReplicaSetConnectionsPtrOutput values.
// You can construct a concrete instance of `InMemoryDBReplicaSetConnectionsPtrInput` via:
//
//	        InMemoryDBReplicaSetConnectionsArgs{...}
//
//	or:
//
//	        nil
type InMemoryDBReplicaSetConnectionsPtrInput interface {
	pulumi.Input

	ToInMemoryDBReplicaSetConnectionsPtrOutput() InMemoryDBReplicaSetConnectionsPtrOutput
	ToInMemoryDBReplicaSetConnectionsPtrOutputWithContext(context.Context) InMemoryDBReplicaSetConnectionsPtrOutput
}

type inMemoryDBReplicaSetConnectionsPtrType InMemoryDBReplicaSetConnectionsArgs

func InMemoryDBReplicaSetConnectionsPtr(v *InMemoryDBReplicaSetConnectionsArgs) InMemoryDBReplicaSetConnectionsPtrInput {
	return (*inMemoryDBReplicaSetConnectionsPtrType)(v)
}

func (*inMemoryDBReplicaSetConnectionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMemoryDBReplicaSetConnections)(nil)).Elem()
}

func (i *inMemoryDBReplicaSetConnectionsPtrType) ToInMemoryDBReplicaSetConnectionsPtrOutput() InMemoryDBReplicaSetConnectionsPtrOutput {
	return i.ToInMemoryDBReplicaSetConnectionsPtrOutputWithContext(context.Background())
}

func (i *inMemoryDBReplicaSetConnectionsPtrType) ToInMemoryDBReplicaSetConnectionsPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetConnectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetConnectionsPtrOutput)
}

type InMemoryDBReplicaSetConnectionsOutput struct{ *pulumi.OutputState }

func (InMemoryDBReplicaSetConnectionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMemoryDBReplicaSetConnections)(nil)).Elem()
}

func (o InMemoryDBReplicaSetConnectionsOutput) ToInMemoryDBReplicaSetConnectionsOutput() InMemoryDBReplicaSetConnectionsOutput {
	return o
}

func (o InMemoryDBReplicaSetConnectionsOutput) ToInMemoryDBReplicaSetConnectionsOutputWithContext(ctx context.Context) InMemoryDBReplicaSetConnectionsOutput {
	return o
}

func (o InMemoryDBReplicaSetConnectionsOutput) ToInMemoryDBReplicaSetConnectionsPtrOutput() InMemoryDBReplicaSetConnectionsPtrOutput {
	return o.ToInMemoryDBReplicaSetConnectionsPtrOutputWithContext(context.Background())
}

func (o InMemoryDBReplicaSetConnectionsOutput) ToInMemoryDBReplicaSetConnectionsPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetConnectionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMemoryDBReplicaSetConnections) *InMemoryDBReplicaSetConnections {
		return &v
	}).(InMemoryDBReplicaSetConnectionsPtrOutput)
}

// [string] The IP and subnet for your instance. Note the following unavailable IP ranges: 10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24.
func (o InMemoryDBReplicaSetConnectionsOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v InMemoryDBReplicaSetConnections) string { return v.Cidr }).(pulumi.StringOutput)
}

// [string] The datacenter to connect your instance to.
func (o InMemoryDBReplicaSetConnectionsOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v InMemoryDBReplicaSetConnections) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// [string] The numeric LAN ID to connect your instance to.
func (o InMemoryDBReplicaSetConnectionsOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v InMemoryDBReplicaSetConnections) string { return v.LanId }).(pulumi.StringOutput)
}

type InMemoryDBReplicaSetConnectionsPtrOutput struct{ *pulumi.OutputState }

func (InMemoryDBReplicaSetConnectionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMemoryDBReplicaSetConnections)(nil)).Elem()
}

func (o InMemoryDBReplicaSetConnectionsPtrOutput) ToInMemoryDBReplicaSetConnectionsPtrOutput() InMemoryDBReplicaSetConnectionsPtrOutput {
	return o
}

func (o InMemoryDBReplicaSetConnectionsPtrOutput) ToInMemoryDBReplicaSetConnectionsPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetConnectionsPtrOutput {
	return o
}

func (o InMemoryDBReplicaSetConnectionsPtrOutput) Elem() InMemoryDBReplicaSetConnectionsOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetConnections) InMemoryDBReplicaSetConnections {
		if v != nil {
			return *v
		}
		var ret InMemoryDBReplicaSetConnections
		return ret
	}).(InMemoryDBReplicaSetConnectionsOutput)
}

// [string] The IP and subnet for your instance. Note the following unavailable IP ranges: 10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24.
func (o InMemoryDBReplicaSetConnectionsPtrOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetConnections) *string {
		if v == nil {
			return nil
		}
		return &v.Cidr
	}).(pulumi.StringPtrOutput)
}

// [string] The datacenter to connect your instance to.
func (o InMemoryDBReplicaSetConnectionsPtrOutput) DatacenterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetConnections) *string {
		if v == nil {
			return nil
		}
		return &v.DatacenterId
	}).(pulumi.StringPtrOutput)
}

// [string] The numeric LAN ID to connect your instance to.
func (o InMemoryDBReplicaSetConnectionsPtrOutput) LanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetConnections) *string {
		if v == nil {
			return nil
		}
		return &v.LanId
	}).(pulumi.StringPtrOutput)
}

type InMemoryDBReplicaSetCredentials struct {
	// [object] The hashed password for a InMemoryDB user.
	HashedPassword *InMemoryDBReplicaSetCredentialsHashedPassword `pulumi:"hashedPassword"`
	// [string] The password for a InMemoryDB user, this is a field that is marked as `Sensitive`.
	PlainTextPassword *string `pulumi:"plainTextPassword"`
	// [string] The username for the initial InMemoryDB user. Some system usernames are restricted (e.g. 'admin', 'standby').
	Username string `pulumi:"username"`
}

// InMemoryDBReplicaSetCredentialsInput is an input type that accepts InMemoryDBReplicaSetCredentialsArgs and InMemoryDBReplicaSetCredentialsOutput values.
// You can construct a concrete instance of `InMemoryDBReplicaSetCredentialsInput` via:
//
//	InMemoryDBReplicaSetCredentialsArgs{...}
type InMemoryDBReplicaSetCredentialsInput interface {
	pulumi.Input

	ToInMemoryDBReplicaSetCredentialsOutput() InMemoryDBReplicaSetCredentialsOutput
	ToInMemoryDBReplicaSetCredentialsOutputWithContext(context.Context) InMemoryDBReplicaSetCredentialsOutput
}

type InMemoryDBReplicaSetCredentialsArgs struct {
	// [object] The hashed password for a InMemoryDB user.
	HashedPassword InMemoryDBReplicaSetCredentialsHashedPasswordPtrInput `pulumi:"hashedPassword"`
	// [string] The password for a InMemoryDB user, this is a field that is marked as `Sensitive`.
	PlainTextPassword pulumi.StringPtrInput `pulumi:"plainTextPassword"`
	// [string] The username for the initial InMemoryDB user. Some system usernames are restricted (e.g. 'admin', 'standby').
	Username pulumi.StringInput `pulumi:"username"`
}

func (InMemoryDBReplicaSetCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMemoryDBReplicaSetCredentials)(nil)).Elem()
}

func (i InMemoryDBReplicaSetCredentialsArgs) ToInMemoryDBReplicaSetCredentialsOutput() InMemoryDBReplicaSetCredentialsOutput {
	return i.ToInMemoryDBReplicaSetCredentialsOutputWithContext(context.Background())
}

func (i InMemoryDBReplicaSetCredentialsArgs) ToInMemoryDBReplicaSetCredentialsOutputWithContext(ctx context.Context) InMemoryDBReplicaSetCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetCredentialsOutput)
}

func (i InMemoryDBReplicaSetCredentialsArgs) ToInMemoryDBReplicaSetCredentialsPtrOutput() InMemoryDBReplicaSetCredentialsPtrOutput {
	return i.ToInMemoryDBReplicaSetCredentialsPtrOutputWithContext(context.Background())
}

func (i InMemoryDBReplicaSetCredentialsArgs) ToInMemoryDBReplicaSetCredentialsPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetCredentialsOutput).ToInMemoryDBReplicaSetCredentialsPtrOutputWithContext(ctx)
}

// InMemoryDBReplicaSetCredentialsPtrInput is an input type that accepts InMemoryDBReplicaSetCredentialsArgs, InMemoryDBReplicaSetCredentialsPtr and InMemoryDBReplicaSetCredentialsPtrOutput values.
// You can construct a concrete instance of `InMemoryDBReplicaSetCredentialsPtrInput` via:
//
//	        InMemoryDBReplicaSetCredentialsArgs{...}
//
//	or:
//
//	        nil
type InMemoryDBReplicaSetCredentialsPtrInput interface {
	pulumi.Input

	ToInMemoryDBReplicaSetCredentialsPtrOutput() InMemoryDBReplicaSetCredentialsPtrOutput
	ToInMemoryDBReplicaSetCredentialsPtrOutputWithContext(context.Context) InMemoryDBReplicaSetCredentialsPtrOutput
}

type inMemoryDBReplicaSetCredentialsPtrType InMemoryDBReplicaSetCredentialsArgs

func InMemoryDBReplicaSetCredentialsPtr(v *InMemoryDBReplicaSetCredentialsArgs) InMemoryDBReplicaSetCredentialsPtrInput {
	return (*inMemoryDBReplicaSetCredentialsPtrType)(v)
}

func (*inMemoryDBReplicaSetCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMemoryDBReplicaSetCredentials)(nil)).Elem()
}

func (i *inMemoryDBReplicaSetCredentialsPtrType) ToInMemoryDBReplicaSetCredentialsPtrOutput() InMemoryDBReplicaSetCredentialsPtrOutput {
	return i.ToInMemoryDBReplicaSetCredentialsPtrOutputWithContext(context.Background())
}

func (i *inMemoryDBReplicaSetCredentialsPtrType) ToInMemoryDBReplicaSetCredentialsPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetCredentialsPtrOutput)
}

type InMemoryDBReplicaSetCredentialsOutput struct{ *pulumi.OutputState }

func (InMemoryDBReplicaSetCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMemoryDBReplicaSetCredentials)(nil)).Elem()
}

func (o InMemoryDBReplicaSetCredentialsOutput) ToInMemoryDBReplicaSetCredentialsOutput() InMemoryDBReplicaSetCredentialsOutput {
	return o
}

func (o InMemoryDBReplicaSetCredentialsOutput) ToInMemoryDBReplicaSetCredentialsOutputWithContext(ctx context.Context) InMemoryDBReplicaSetCredentialsOutput {
	return o
}

func (o InMemoryDBReplicaSetCredentialsOutput) ToInMemoryDBReplicaSetCredentialsPtrOutput() InMemoryDBReplicaSetCredentialsPtrOutput {
	return o.ToInMemoryDBReplicaSetCredentialsPtrOutputWithContext(context.Background())
}

func (o InMemoryDBReplicaSetCredentialsOutput) ToInMemoryDBReplicaSetCredentialsPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMemoryDBReplicaSetCredentials) *InMemoryDBReplicaSetCredentials {
		return &v
	}).(InMemoryDBReplicaSetCredentialsPtrOutput)
}

// [object] The hashed password for a InMemoryDB user.
func (o InMemoryDBReplicaSetCredentialsOutput) HashedPassword() InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput {
	return o.ApplyT(func(v InMemoryDBReplicaSetCredentials) *InMemoryDBReplicaSetCredentialsHashedPassword {
		return v.HashedPassword
	}).(InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput)
}

// [string] The password for a InMemoryDB user, this is a field that is marked as `Sensitive`.
func (o InMemoryDBReplicaSetCredentialsOutput) PlainTextPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InMemoryDBReplicaSetCredentials) *string { return v.PlainTextPassword }).(pulumi.StringPtrOutput)
}

// [string] The username for the initial InMemoryDB user. Some system usernames are restricted (e.g. 'admin', 'standby').
func (o InMemoryDBReplicaSetCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v InMemoryDBReplicaSetCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type InMemoryDBReplicaSetCredentialsPtrOutput struct{ *pulumi.OutputState }

func (InMemoryDBReplicaSetCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMemoryDBReplicaSetCredentials)(nil)).Elem()
}

func (o InMemoryDBReplicaSetCredentialsPtrOutput) ToInMemoryDBReplicaSetCredentialsPtrOutput() InMemoryDBReplicaSetCredentialsPtrOutput {
	return o
}

func (o InMemoryDBReplicaSetCredentialsPtrOutput) ToInMemoryDBReplicaSetCredentialsPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetCredentialsPtrOutput {
	return o
}

func (o InMemoryDBReplicaSetCredentialsPtrOutput) Elem() InMemoryDBReplicaSetCredentialsOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetCredentials) InMemoryDBReplicaSetCredentials {
		if v != nil {
			return *v
		}
		var ret InMemoryDBReplicaSetCredentials
		return ret
	}).(InMemoryDBReplicaSetCredentialsOutput)
}

// [object] The hashed password for a InMemoryDB user.
func (o InMemoryDBReplicaSetCredentialsPtrOutput) HashedPassword() InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetCredentials) *InMemoryDBReplicaSetCredentialsHashedPassword {
		if v == nil {
			return nil
		}
		return v.HashedPassword
	}).(InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput)
}

// [string] The password for a InMemoryDB user, this is a field that is marked as `Sensitive`.
func (o InMemoryDBReplicaSetCredentialsPtrOutput) PlainTextPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetCredentials) *string {
		if v == nil {
			return nil
		}
		return v.PlainTextPassword
	}).(pulumi.StringPtrOutput)
}

// [string] The username for the initial InMemoryDB user. Some system usernames are restricted (e.g. 'admin', 'standby').
func (o InMemoryDBReplicaSetCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type InMemoryDBReplicaSetCredentialsHashedPassword struct {
	// [string] The value can be only: "SHA-256".
	Algorithm string `pulumi:"algorithm"`
	// [string] The hashed password.
	Hash string `pulumi:"hash"`
}

// InMemoryDBReplicaSetCredentialsHashedPasswordInput is an input type that accepts InMemoryDBReplicaSetCredentialsHashedPasswordArgs and InMemoryDBReplicaSetCredentialsHashedPasswordOutput values.
// You can construct a concrete instance of `InMemoryDBReplicaSetCredentialsHashedPasswordInput` via:
//
//	InMemoryDBReplicaSetCredentialsHashedPasswordArgs{...}
type InMemoryDBReplicaSetCredentialsHashedPasswordInput interface {
	pulumi.Input

	ToInMemoryDBReplicaSetCredentialsHashedPasswordOutput() InMemoryDBReplicaSetCredentialsHashedPasswordOutput
	ToInMemoryDBReplicaSetCredentialsHashedPasswordOutputWithContext(context.Context) InMemoryDBReplicaSetCredentialsHashedPasswordOutput
}

type InMemoryDBReplicaSetCredentialsHashedPasswordArgs struct {
	// [string] The value can be only: "SHA-256".
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// [string] The hashed password.
	Hash pulumi.StringInput `pulumi:"hash"`
}

func (InMemoryDBReplicaSetCredentialsHashedPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMemoryDBReplicaSetCredentialsHashedPassword)(nil)).Elem()
}

func (i InMemoryDBReplicaSetCredentialsHashedPasswordArgs) ToInMemoryDBReplicaSetCredentialsHashedPasswordOutput() InMemoryDBReplicaSetCredentialsHashedPasswordOutput {
	return i.ToInMemoryDBReplicaSetCredentialsHashedPasswordOutputWithContext(context.Background())
}

func (i InMemoryDBReplicaSetCredentialsHashedPasswordArgs) ToInMemoryDBReplicaSetCredentialsHashedPasswordOutputWithContext(ctx context.Context) InMemoryDBReplicaSetCredentialsHashedPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetCredentialsHashedPasswordOutput)
}

func (i InMemoryDBReplicaSetCredentialsHashedPasswordArgs) ToInMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput() InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput {
	return i.ToInMemoryDBReplicaSetCredentialsHashedPasswordPtrOutputWithContext(context.Background())
}

func (i InMemoryDBReplicaSetCredentialsHashedPasswordArgs) ToInMemoryDBReplicaSetCredentialsHashedPasswordPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetCredentialsHashedPasswordOutput).ToInMemoryDBReplicaSetCredentialsHashedPasswordPtrOutputWithContext(ctx)
}

// InMemoryDBReplicaSetCredentialsHashedPasswordPtrInput is an input type that accepts InMemoryDBReplicaSetCredentialsHashedPasswordArgs, InMemoryDBReplicaSetCredentialsHashedPasswordPtr and InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput values.
// You can construct a concrete instance of `InMemoryDBReplicaSetCredentialsHashedPasswordPtrInput` via:
//
//	        InMemoryDBReplicaSetCredentialsHashedPasswordArgs{...}
//
//	or:
//
//	        nil
type InMemoryDBReplicaSetCredentialsHashedPasswordPtrInput interface {
	pulumi.Input

	ToInMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput() InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput
	ToInMemoryDBReplicaSetCredentialsHashedPasswordPtrOutputWithContext(context.Context) InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput
}

type inMemoryDBReplicaSetCredentialsHashedPasswordPtrType InMemoryDBReplicaSetCredentialsHashedPasswordArgs

func InMemoryDBReplicaSetCredentialsHashedPasswordPtr(v *InMemoryDBReplicaSetCredentialsHashedPasswordArgs) InMemoryDBReplicaSetCredentialsHashedPasswordPtrInput {
	return (*inMemoryDBReplicaSetCredentialsHashedPasswordPtrType)(v)
}

func (*inMemoryDBReplicaSetCredentialsHashedPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMemoryDBReplicaSetCredentialsHashedPassword)(nil)).Elem()
}

func (i *inMemoryDBReplicaSetCredentialsHashedPasswordPtrType) ToInMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput() InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput {
	return i.ToInMemoryDBReplicaSetCredentialsHashedPasswordPtrOutputWithContext(context.Background())
}

func (i *inMemoryDBReplicaSetCredentialsHashedPasswordPtrType) ToInMemoryDBReplicaSetCredentialsHashedPasswordPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput)
}

type InMemoryDBReplicaSetCredentialsHashedPasswordOutput struct{ *pulumi.OutputState }

func (InMemoryDBReplicaSetCredentialsHashedPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMemoryDBReplicaSetCredentialsHashedPassword)(nil)).Elem()
}

func (o InMemoryDBReplicaSetCredentialsHashedPasswordOutput) ToInMemoryDBReplicaSetCredentialsHashedPasswordOutput() InMemoryDBReplicaSetCredentialsHashedPasswordOutput {
	return o
}

func (o InMemoryDBReplicaSetCredentialsHashedPasswordOutput) ToInMemoryDBReplicaSetCredentialsHashedPasswordOutputWithContext(ctx context.Context) InMemoryDBReplicaSetCredentialsHashedPasswordOutput {
	return o
}

func (o InMemoryDBReplicaSetCredentialsHashedPasswordOutput) ToInMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput() InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput {
	return o.ToInMemoryDBReplicaSetCredentialsHashedPasswordPtrOutputWithContext(context.Background())
}

func (o InMemoryDBReplicaSetCredentialsHashedPasswordOutput) ToInMemoryDBReplicaSetCredentialsHashedPasswordPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMemoryDBReplicaSetCredentialsHashedPassword) *InMemoryDBReplicaSetCredentialsHashedPassword {
		return &v
	}).(InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput)
}

// [string] The value can be only: "SHA-256".
func (o InMemoryDBReplicaSetCredentialsHashedPasswordOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v InMemoryDBReplicaSetCredentialsHashedPassword) string { return v.Algorithm }).(pulumi.StringOutput)
}

// [string] The hashed password.
func (o InMemoryDBReplicaSetCredentialsHashedPasswordOutput) Hash() pulumi.StringOutput {
	return o.ApplyT(func(v InMemoryDBReplicaSetCredentialsHashedPassword) string { return v.Hash }).(pulumi.StringOutput)
}

type InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput struct{ *pulumi.OutputState }

func (InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMemoryDBReplicaSetCredentialsHashedPassword)(nil)).Elem()
}

func (o InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput) ToInMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput() InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput {
	return o
}

func (o InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput) ToInMemoryDBReplicaSetCredentialsHashedPasswordPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput {
	return o
}

func (o InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput) Elem() InMemoryDBReplicaSetCredentialsHashedPasswordOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetCredentialsHashedPassword) InMemoryDBReplicaSetCredentialsHashedPassword {
		if v != nil {
			return *v
		}
		var ret InMemoryDBReplicaSetCredentialsHashedPassword
		return ret
	}).(InMemoryDBReplicaSetCredentialsHashedPasswordOutput)
}

// [string] The value can be only: "SHA-256".
func (o InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetCredentialsHashedPassword) *string {
		if v == nil {
			return nil
		}
		return &v.Algorithm
	}).(pulumi.StringPtrOutput)
}

// [string] The hashed password.
func (o InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput) Hash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetCredentialsHashedPassword) *string {
		if v == nil {
			return nil
		}
		return &v.Hash
	}).(pulumi.StringPtrOutput)
}

type InMemoryDBReplicaSetMaintenanceWindow struct {
	// [string] The name of the week day.
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// [string] Start of the maintenance window in UTC time.
	Time string `pulumi:"time"`
}

// InMemoryDBReplicaSetMaintenanceWindowInput is an input type that accepts InMemoryDBReplicaSetMaintenanceWindowArgs and InMemoryDBReplicaSetMaintenanceWindowOutput values.
// You can construct a concrete instance of `InMemoryDBReplicaSetMaintenanceWindowInput` via:
//
//	InMemoryDBReplicaSetMaintenanceWindowArgs{...}
type InMemoryDBReplicaSetMaintenanceWindowInput interface {
	pulumi.Input

	ToInMemoryDBReplicaSetMaintenanceWindowOutput() InMemoryDBReplicaSetMaintenanceWindowOutput
	ToInMemoryDBReplicaSetMaintenanceWindowOutputWithContext(context.Context) InMemoryDBReplicaSetMaintenanceWindowOutput
}

type InMemoryDBReplicaSetMaintenanceWindowArgs struct {
	// [string] The name of the week day.
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// [string] Start of the maintenance window in UTC time.
	Time pulumi.StringInput `pulumi:"time"`
}

func (InMemoryDBReplicaSetMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMemoryDBReplicaSetMaintenanceWindow)(nil)).Elem()
}

func (i InMemoryDBReplicaSetMaintenanceWindowArgs) ToInMemoryDBReplicaSetMaintenanceWindowOutput() InMemoryDBReplicaSetMaintenanceWindowOutput {
	return i.ToInMemoryDBReplicaSetMaintenanceWindowOutputWithContext(context.Background())
}

func (i InMemoryDBReplicaSetMaintenanceWindowArgs) ToInMemoryDBReplicaSetMaintenanceWindowOutputWithContext(ctx context.Context) InMemoryDBReplicaSetMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetMaintenanceWindowOutput)
}

func (i InMemoryDBReplicaSetMaintenanceWindowArgs) ToInMemoryDBReplicaSetMaintenanceWindowPtrOutput() InMemoryDBReplicaSetMaintenanceWindowPtrOutput {
	return i.ToInMemoryDBReplicaSetMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i InMemoryDBReplicaSetMaintenanceWindowArgs) ToInMemoryDBReplicaSetMaintenanceWindowPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetMaintenanceWindowOutput).ToInMemoryDBReplicaSetMaintenanceWindowPtrOutputWithContext(ctx)
}

// InMemoryDBReplicaSetMaintenanceWindowPtrInput is an input type that accepts InMemoryDBReplicaSetMaintenanceWindowArgs, InMemoryDBReplicaSetMaintenanceWindowPtr and InMemoryDBReplicaSetMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `InMemoryDBReplicaSetMaintenanceWindowPtrInput` via:
//
//	        InMemoryDBReplicaSetMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type InMemoryDBReplicaSetMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToInMemoryDBReplicaSetMaintenanceWindowPtrOutput() InMemoryDBReplicaSetMaintenanceWindowPtrOutput
	ToInMemoryDBReplicaSetMaintenanceWindowPtrOutputWithContext(context.Context) InMemoryDBReplicaSetMaintenanceWindowPtrOutput
}

type inMemoryDBReplicaSetMaintenanceWindowPtrType InMemoryDBReplicaSetMaintenanceWindowArgs

func InMemoryDBReplicaSetMaintenanceWindowPtr(v *InMemoryDBReplicaSetMaintenanceWindowArgs) InMemoryDBReplicaSetMaintenanceWindowPtrInput {
	return (*inMemoryDBReplicaSetMaintenanceWindowPtrType)(v)
}

func (*inMemoryDBReplicaSetMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMemoryDBReplicaSetMaintenanceWindow)(nil)).Elem()
}

func (i *inMemoryDBReplicaSetMaintenanceWindowPtrType) ToInMemoryDBReplicaSetMaintenanceWindowPtrOutput() InMemoryDBReplicaSetMaintenanceWindowPtrOutput {
	return i.ToInMemoryDBReplicaSetMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *inMemoryDBReplicaSetMaintenanceWindowPtrType) ToInMemoryDBReplicaSetMaintenanceWindowPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetMaintenanceWindowPtrOutput)
}

type InMemoryDBReplicaSetMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (InMemoryDBReplicaSetMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMemoryDBReplicaSetMaintenanceWindow)(nil)).Elem()
}

func (o InMemoryDBReplicaSetMaintenanceWindowOutput) ToInMemoryDBReplicaSetMaintenanceWindowOutput() InMemoryDBReplicaSetMaintenanceWindowOutput {
	return o
}

func (o InMemoryDBReplicaSetMaintenanceWindowOutput) ToInMemoryDBReplicaSetMaintenanceWindowOutputWithContext(ctx context.Context) InMemoryDBReplicaSetMaintenanceWindowOutput {
	return o
}

func (o InMemoryDBReplicaSetMaintenanceWindowOutput) ToInMemoryDBReplicaSetMaintenanceWindowPtrOutput() InMemoryDBReplicaSetMaintenanceWindowPtrOutput {
	return o.ToInMemoryDBReplicaSetMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o InMemoryDBReplicaSetMaintenanceWindowOutput) ToInMemoryDBReplicaSetMaintenanceWindowPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMemoryDBReplicaSetMaintenanceWindow) *InMemoryDBReplicaSetMaintenanceWindow {
		return &v
	}).(InMemoryDBReplicaSetMaintenanceWindowPtrOutput)
}

// [string] The name of the week day.
func (o InMemoryDBReplicaSetMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v InMemoryDBReplicaSetMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// [string] Start of the maintenance window in UTC time.
func (o InMemoryDBReplicaSetMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v InMemoryDBReplicaSetMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type InMemoryDBReplicaSetMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (InMemoryDBReplicaSetMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMemoryDBReplicaSetMaintenanceWindow)(nil)).Elem()
}

func (o InMemoryDBReplicaSetMaintenanceWindowPtrOutput) ToInMemoryDBReplicaSetMaintenanceWindowPtrOutput() InMemoryDBReplicaSetMaintenanceWindowPtrOutput {
	return o
}

func (o InMemoryDBReplicaSetMaintenanceWindowPtrOutput) ToInMemoryDBReplicaSetMaintenanceWindowPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetMaintenanceWindowPtrOutput {
	return o
}

func (o InMemoryDBReplicaSetMaintenanceWindowPtrOutput) Elem() InMemoryDBReplicaSetMaintenanceWindowOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetMaintenanceWindow) InMemoryDBReplicaSetMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret InMemoryDBReplicaSetMaintenanceWindow
		return ret
	}).(InMemoryDBReplicaSetMaintenanceWindowOutput)
}

// [string] The name of the week day.
func (o InMemoryDBReplicaSetMaintenanceWindowPtrOutput) DayOfTheWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfTheWeek
	}).(pulumi.StringPtrOutput)
}

// [string] Start of the maintenance window in UTC time.
func (o InMemoryDBReplicaSetMaintenanceWindowPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

type InMemoryDBReplicaSetResources struct {
	// [int] The number of CPU cores per instance.
	Cores int `pulumi:"cores"`
	// [int] The amount of memory per instance in gigabytes (GB).
	Ram int `pulumi:"ram"`
	// [int] The size of the storage in GB. The size is derived from the amount of RAM and the persistence mode and is not configurable.
	Storage *int `pulumi:"storage"`
}

// InMemoryDBReplicaSetResourcesInput is an input type that accepts InMemoryDBReplicaSetResourcesArgs and InMemoryDBReplicaSetResourcesOutput values.
// You can construct a concrete instance of `InMemoryDBReplicaSetResourcesInput` via:
//
//	InMemoryDBReplicaSetResourcesArgs{...}
type InMemoryDBReplicaSetResourcesInput interface {
	pulumi.Input

	ToInMemoryDBReplicaSetResourcesOutput() InMemoryDBReplicaSetResourcesOutput
	ToInMemoryDBReplicaSetResourcesOutputWithContext(context.Context) InMemoryDBReplicaSetResourcesOutput
}

type InMemoryDBReplicaSetResourcesArgs struct {
	// [int] The number of CPU cores per instance.
	Cores pulumi.IntInput `pulumi:"cores"`
	// [int] The amount of memory per instance in gigabytes (GB).
	Ram pulumi.IntInput `pulumi:"ram"`
	// [int] The size of the storage in GB. The size is derived from the amount of RAM and the persistence mode and is not configurable.
	Storage pulumi.IntPtrInput `pulumi:"storage"`
}

func (InMemoryDBReplicaSetResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InMemoryDBReplicaSetResources)(nil)).Elem()
}

func (i InMemoryDBReplicaSetResourcesArgs) ToInMemoryDBReplicaSetResourcesOutput() InMemoryDBReplicaSetResourcesOutput {
	return i.ToInMemoryDBReplicaSetResourcesOutputWithContext(context.Background())
}

func (i InMemoryDBReplicaSetResourcesArgs) ToInMemoryDBReplicaSetResourcesOutputWithContext(ctx context.Context) InMemoryDBReplicaSetResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetResourcesOutput)
}

func (i InMemoryDBReplicaSetResourcesArgs) ToInMemoryDBReplicaSetResourcesPtrOutput() InMemoryDBReplicaSetResourcesPtrOutput {
	return i.ToInMemoryDBReplicaSetResourcesPtrOutputWithContext(context.Background())
}

func (i InMemoryDBReplicaSetResourcesArgs) ToInMemoryDBReplicaSetResourcesPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetResourcesOutput).ToInMemoryDBReplicaSetResourcesPtrOutputWithContext(ctx)
}

// InMemoryDBReplicaSetResourcesPtrInput is an input type that accepts InMemoryDBReplicaSetResourcesArgs, InMemoryDBReplicaSetResourcesPtr and InMemoryDBReplicaSetResourcesPtrOutput values.
// You can construct a concrete instance of `InMemoryDBReplicaSetResourcesPtrInput` via:
//
//	        InMemoryDBReplicaSetResourcesArgs{...}
//
//	or:
//
//	        nil
type InMemoryDBReplicaSetResourcesPtrInput interface {
	pulumi.Input

	ToInMemoryDBReplicaSetResourcesPtrOutput() InMemoryDBReplicaSetResourcesPtrOutput
	ToInMemoryDBReplicaSetResourcesPtrOutputWithContext(context.Context) InMemoryDBReplicaSetResourcesPtrOutput
}

type inMemoryDBReplicaSetResourcesPtrType InMemoryDBReplicaSetResourcesArgs

func InMemoryDBReplicaSetResourcesPtr(v *InMemoryDBReplicaSetResourcesArgs) InMemoryDBReplicaSetResourcesPtrInput {
	return (*inMemoryDBReplicaSetResourcesPtrType)(v)
}

func (*inMemoryDBReplicaSetResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InMemoryDBReplicaSetResources)(nil)).Elem()
}

func (i *inMemoryDBReplicaSetResourcesPtrType) ToInMemoryDBReplicaSetResourcesPtrOutput() InMemoryDBReplicaSetResourcesPtrOutput {
	return i.ToInMemoryDBReplicaSetResourcesPtrOutputWithContext(context.Background())
}

func (i *inMemoryDBReplicaSetResourcesPtrType) ToInMemoryDBReplicaSetResourcesPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InMemoryDBReplicaSetResourcesPtrOutput)
}

type InMemoryDBReplicaSetResourcesOutput struct{ *pulumi.OutputState }

func (InMemoryDBReplicaSetResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InMemoryDBReplicaSetResources)(nil)).Elem()
}

func (o InMemoryDBReplicaSetResourcesOutput) ToInMemoryDBReplicaSetResourcesOutput() InMemoryDBReplicaSetResourcesOutput {
	return o
}

func (o InMemoryDBReplicaSetResourcesOutput) ToInMemoryDBReplicaSetResourcesOutputWithContext(ctx context.Context) InMemoryDBReplicaSetResourcesOutput {
	return o
}

func (o InMemoryDBReplicaSetResourcesOutput) ToInMemoryDBReplicaSetResourcesPtrOutput() InMemoryDBReplicaSetResourcesPtrOutput {
	return o.ToInMemoryDBReplicaSetResourcesPtrOutputWithContext(context.Background())
}

func (o InMemoryDBReplicaSetResourcesOutput) ToInMemoryDBReplicaSetResourcesPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InMemoryDBReplicaSetResources) *InMemoryDBReplicaSetResources {
		return &v
	}).(InMemoryDBReplicaSetResourcesPtrOutput)
}

// [int] The number of CPU cores per instance.
func (o InMemoryDBReplicaSetResourcesOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v InMemoryDBReplicaSetResources) int { return v.Cores }).(pulumi.IntOutput)
}

// [int] The amount of memory per instance in gigabytes (GB).
func (o InMemoryDBReplicaSetResourcesOutput) Ram() pulumi.IntOutput {
	return o.ApplyT(func(v InMemoryDBReplicaSetResources) int { return v.Ram }).(pulumi.IntOutput)
}

// [int] The size of the storage in GB. The size is derived from the amount of RAM and the persistence mode and is not configurable.
func (o InMemoryDBReplicaSetResourcesOutput) Storage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InMemoryDBReplicaSetResources) *int { return v.Storage }).(pulumi.IntPtrOutput)
}

type InMemoryDBReplicaSetResourcesPtrOutput struct{ *pulumi.OutputState }

func (InMemoryDBReplicaSetResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InMemoryDBReplicaSetResources)(nil)).Elem()
}

func (o InMemoryDBReplicaSetResourcesPtrOutput) ToInMemoryDBReplicaSetResourcesPtrOutput() InMemoryDBReplicaSetResourcesPtrOutput {
	return o
}

func (o InMemoryDBReplicaSetResourcesPtrOutput) ToInMemoryDBReplicaSetResourcesPtrOutputWithContext(ctx context.Context) InMemoryDBReplicaSetResourcesPtrOutput {
	return o
}

func (o InMemoryDBReplicaSetResourcesPtrOutput) Elem() InMemoryDBReplicaSetResourcesOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetResources) InMemoryDBReplicaSetResources {
		if v != nil {
			return *v
		}
		var ret InMemoryDBReplicaSetResources
		return ret
	}).(InMemoryDBReplicaSetResourcesOutput)
}

// [int] The number of CPU cores per instance.
func (o InMemoryDBReplicaSetResourcesPtrOutput) Cores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetResources) *int {
		if v == nil {
			return nil
		}
		return &v.Cores
	}).(pulumi.IntPtrOutput)
}

// [int] The amount of memory per instance in gigabytes (GB).
func (o InMemoryDBReplicaSetResourcesPtrOutput) Ram() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetResources) *int {
		if v == nil {
			return nil
		}
		return &v.Ram
	}).(pulumi.IntPtrOutput)
}

// [int] The size of the storage in GB. The size is derived from the amount of RAM and the persistence mode and is not configurable.
func (o InMemoryDBReplicaSetResourcesPtrOutput) Storage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InMemoryDBReplicaSetResources) *int {
		if v == nil {
			return nil
		}
		return v.Storage
	}).(pulumi.IntPtrOutput)
}

type MariaDBClusterConnections struct {
	// The IP and subnet for your cluster.
	Cidr string `pulumi:"cidr"`
	// The datacenter to connect your cluster to.
	DatacenterId string `pulumi:"datacenterId"`
	// The numeric LAN ID to connect your cluster to.
	LanId string `pulumi:"lanId"`
}

// MariaDBClusterConnectionsInput is an input type that accepts MariaDBClusterConnectionsArgs and MariaDBClusterConnectionsOutput values.
// You can construct a concrete instance of `MariaDBClusterConnectionsInput` via:
//
//	MariaDBClusterConnectionsArgs{...}
type MariaDBClusterConnectionsInput interface {
	pulumi.Input

	ToMariaDBClusterConnectionsOutput() MariaDBClusterConnectionsOutput
	ToMariaDBClusterConnectionsOutputWithContext(context.Context) MariaDBClusterConnectionsOutput
}

type MariaDBClusterConnectionsArgs struct {
	// The IP and subnet for your cluster.
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// The datacenter to connect your cluster to.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// The numeric LAN ID to connect your cluster to.
	LanId pulumi.StringInput `pulumi:"lanId"`
}

func (MariaDBClusterConnectionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBClusterConnections)(nil)).Elem()
}

func (i MariaDBClusterConnectionsArgs) ToMariaDBClusterConnectionsOutput() MariaDBClusterConnectionsOutput {
	return i.ToMariaDBClusterConnectionsOutputWithContext(context.Background())
}

func (i MariaDBClusterConnectionsArgs) ToMariaDBClusterConnectionsOutputWithContext(ctx context.Context) MariaDBClusterConnectionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBClusterConnectionsOutput)
}

func (i MariaDBClusterConnectionsArgs) ToMariaDBClusterConnectionsPtrOutput() MariaDBClusterConnectionsPtrOutput {
	return i.ToMariaDBClusterConnectionsPtrOutputWithContext(context.Background())
}

func (i MariaDBClusterConnectionsArgs) ToMariaDBClusterConnectionsPtrOutputWithContext(ctx context.Context) MariaDBClusterConnectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBClusterConnectionsOutput).ToMariaDBClusterConnectionsPtrOutputWithContext(ctx)
}

// MariaDBClusterConnectionsPtrInput is an input type that accepts MariaDBClusterConnectionsArgs, MariaDBClusterConnectionsPtr and MariaDBClusterConnectionsPtrOutput values.
// You can construct a concrete instance of `MariaDBClusterConnectionsPtrInput` via:
//
//	        MariaDBClusterConnectionsArgs{...}
//
//	or:
//
//	        nil
type MariaDBClusterConnectionsPtrInput interface {
	pulumi.Input

	ToMariaDBClusterConnectionsPtrOutput() MariaDBClusterConnectionsPtrOutput
	ToMariaDBClusterConnectionsPtrOutputWithContext(context.Context) MariaDBClusterConnectionsPtrOutput
}

type mariaDBClusterConnectionsPtrType MariaDBClusterConnectionsArgs

func MariaDBClusterConnectionsPtr(v *MariaDBClusterConnectionsArgs) MariaDBClusterConnectionsPtrInput {
	return (*mariaDBClusterConnectionsPtrType)(v)
}

func (*mariaDBClusterConnectionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MariaDBClusterConnections)(nil)).Elem()
}

func (i *mariaDBClusterConnectionsPtrType) ToMariaDBClusterConnectionsPtrOutput() MariaDBClusterConnectionsPtrOutput {
	return i.ToMariaDBClusterConnectionsPtrOutputWithContext(context.Background())
}

func (i *mariaDBClusterConnectionsPtrType) ToMariaDBClusterConnectionsPtrOutputWithContext(ctx context.Context) MariaDBClusterConnectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBClusterConnectionsPtrOutput)
}

type MariaDBClusterConnectionsOutput struct{ *pulumi.OutputState }

func (MariaDBClusterConnectionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBClusterConnections)(nil)).Elem()
}

func (o MariaDBClusterConnectionsOutput) ToMariaDBClusterConnectionsOutput() MariaDBClusterConnectionsOutput {
	return o
}

func (o MariaDBClusterConnectionsOutput) ToMariaDBClusterConnectionsOutputWithContext(ctx context.Context) MariaDBClusterConnectionsOutput {
	return o
}

func (o MariaDBClusterConnectionsOutput) ToMariaDBClusterConnectionsPtrOutput() MariaDBClusterConnectionsPtrOutput {
	return o.ToMariaDBClusterConnectionsPtrOutputWithContext(context.Background())
}

func (o MariaDBClusterConnectionsOutput) ToMariaDBClusterConnectionsPtrOutputWithContext(ctx context.Context) MariaDBClusterConnectionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MariaDBClusterConnections) *MariaDBClusterConnections {
		return &v
	}).(MariaDBClusterConnectionsPtrOutput)
}

// The IP and subnet for your cluster.
func (o MariaDBClusterConnectionsOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v MariaDBClusterConnections) string { return v.Cidr }).(pulumi.StringOutput)
}

// The datacenter to connect your cluster to.
func (o MariaDBClusterConnectionsOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v MariaDBClusterConnections) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// The numeric LAN ID to connect your cluster to.
func (o MariaDBClusterConnectionsOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v MariaDBClusterConnections) string { return v.LanId }).(pulumi.StringOutput)
}

type MariaDBClusterConnectionsPtrOutput struct{ *pulumi.OutputState }

func (MariaDBClusterConnectionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MariaDBClusterConnections)(nil)).Elem()
}

func (o MariaDBClusterConnectionsPtrOutput) ToMariaDBClusterConnectionsPtrOutput() MariaDBClusterConnectionsPtrOutput {
	return o
}

func (o MariaDBClusterConnectionsPtrOutput) ToMariaDBClusterConnectionsPtrOutputWithContext(ctx context.Context) MariaDBClusterConnectionsPtrOutput {
	return o
}

func (o MariaDBClusterConnectionsPtrOutput) Elem() MariaDBClusterConnectionsOutput {
	return o.ApplyT(func(v *MariaDBClusterConnections) MariaDBClusterConnections {
		if v != nil {
			return *v
		}
		var ret MariaDBClusterConnections
		return ret
	}).(MariaDBClusterConnectionsOutput)
}

// The IP and subnet for your cluster.
func (o MariaDBClusterConnectionsPtrOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MariaDBClusterConnections) *string {
		if v == nil {
			return nil
		}
		return &v.Cidr
	}).(pulumi.StringPtrOutput)
}

// The datacenter to connect your cluster to.
func (o MariaDBClusterConnectionsPtrOutput) DatacenterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MariaDBClusterConnections) *string {
		if v == nil {
			return nil
		}
		return &v.DatacenterId
	}).(pulumi.StringPtrOutput)
}

// The numeric LAN ID to connect your cluster to.
func (o MariaDBClusterConnectionsPtrOutput) LanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MariaDBClusterConnections) *string {
		if v == nil {
			return nil
		}
		return &v.LanId
	}).(pulumi.StringPtrOutput)
}

type MariaDBClusterCredentials struct {
	// The password for a MariaDB user.
	Password string `pulumi:"password"`
	// The username for the initial MariaDB user. Some system usernames are restricted (e.g 'mariadb', 'admin', 'standby').
	Username string `pulumi:"username"`
}

// MariaDBClusterCredentialsInput is an input type that accepts MariaDBClusterCredentialsArgs and MariaDBClusterCredentialsOutput values.
// You can construct a concrete instance of `MariaDBClusterCredentialsInput` via:
//
//	MariaDBClusterCredentialsArgs{...}
type MariaDBClusterCredentialsInput interface {
	pulumi.Input

	ToMariaDBClusterCredentialsOutput() MariaDBClusterCredentialsOutput
	ToMariaDBClusterCredentialsOutputWithContext(context.Context) MariaDBClusterCredentialsOutput
}

type MariaDBClusterCredentialsArgs struct {
	// The password for a MariaDB user.
	Password pulumi.StringInput `pulumi:"password"`
	// The username for the initial MariaDB user. Some system usernames are restricted (e.g 'mariadb', 'admin', 'standby').
	Username pulumi.StringInput `pulumi:"username"`
}

func (MariaDBClusterCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBClusterCredentials)(nil)).Elem()
}

func (i MariaDBClusterCredentialsArgs) ToMariaDBClusterCredentialsOutput() MariaDBClusterCredentialsOutput {
	return i.ToMariaDBClusterCredentialsOutputWithContext(context.Background())
}

func (i MariaDBClusterCredentialsArgs) ToMariaDBClusterCredentialsOutputWithContext(ctx context.Context) MariaDBClusterCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBClusterCredentialsOutput)
}

func (i MariaDBClusterCredentialsArgs) ToMariaDBClusterCredentialsPtrOutput() MariaDBClusterCredentialsPtrOutput {
	return i.ToMariaDBClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i MariaDBClusterCredentialsArgs) ToMariaDBClusterCredentialsPtrOutputWithContext(ctx context.Context) MariaDBClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBClusterCredentialsOutput).ToMariaDBClusterCredentialsPtrOutputWithContext(ctx)
}

// MariaDBClusterCredentialsPtrInput is an input type that accepts MariaDBClusterCredentialsArgs, MariaDBClusterCredentialsPtr and MariaDBClusterCredentialsPtrOutput values.
// You can construct a concrete instance of `MariaDBClusterCredentialsPtrInput` via:
//
//	        MariaDBClusterCredentialsArgs{...}
//
//	or:
//
//	        nil
type MariaDBClusterCredentialsPtrInput interface {
	pulumi.Input

	ToMariaDBClusterCredentialsPtrOutput() MariaDBClusterCredentialsPtrOutput
	ToMariaDBClusterCredentialsPtrOutputWithContext(context.Context) MariaDBClusterCredentialsPtrOutput
}

type mariaDBClusterCredentialsPtrType MariaDBClusterCredentialsArgs

func MariaDBClusterCredentialsPtr(v *MariaDBClusterCredentialsArgs) MariaDBClusterCredentialsPtrInput {
	return (*mariaDBClusterCredentialsPtrType)(v)
}

func (*mariaDBClusterCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MariaDBClusterCredentials)(nil)).Elem()
}

func (i *mariaDBClusterCredentialsPtrType) ToMariaDBClusterCredentialsPtrOutput() MariaDBClusterCredentialsPtrOutput {
	return i.ToMariaDBClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i *mariaDBClusterCredentialsPtrType) ToMariaDBClusterCredentialsPtrOutputWithContext(ctx context.Context) MariaDBClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBClusterCredentialsPtrOutput)
}

type MariaDBClusterCredentialsOutput struct{ *pulumi.OutputState }

func (MariaDBClusterCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBClusterCredentials)(nil)).Elem()
}

func (o MariaDBClusterCredentialsOutput) ToMariaDBClusterCredentialsOutput() MariaDBClusterCredentialsOutput {
	return o
}

func (o MariaDBClusterCredentialsOutput) ToMariaDBClusterCredentialsOutputWithContext(ctx context.Context) MariaDBClusterCredentialsOutput {
	return o
}

func (o MariaDBClusterCredentialsOutput) ToMariaDBClusterCredentialsPtrOutput() MariaDBClusterCredentialsPtrOutput {
	return o.ToMariaDBClusterCredentialsPtrOutputWithContext(context.Background())
}

func (o MariaDBClusterCredentialsOutput) ToMariaDBClusterCredentialsPtrOutputWithContext(ctx context.Context) MariaDBClusterCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MariaDBClusterCredentials) *MariaDBClusterCredentials {
		return &v
	}).(MariaDBClusterCredentialsPtrOutput)
}

// The password for a MariaDB user.
func (o MariaDBClusterCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v MariaDBClusterCredentials) string { return v.Password }).(pulumi.StringOutput)
}

// The username for the initial MariaDB user. Some system usernames are restricted (e.g 'mariadb', 'admin', 'standby').
func (o MariaDBClusterCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v MariaDBClusterCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type MariaDBClusterCredentialsPtrOutput struct{ *pulumi.OutputState }

func (MariaDBClusterCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MariaDBClusterCredentials)(nil)).Elem()
}

func (o MariaDBClusterCredentialsPtrOutput) ToMariaDBClusterCredentialsPtrOutput() MariaDBClusterCredentialsPtrOutput {
	return o
}

func (o MariaDBClusterCredentialsPtrOutput) ToMariaDBClusterCredentialsPtrOutputWithContext(ctx context.Context) MariaDBClusterCredentialsPtrOutput {
	return o
}

func (o MariaDBClusterCredentialsPtrOutput) Elem() MariaDBClusterCredentialsOutput {
	return o.ApplyT(func(v *MariaDBClusterCredentials) MariaDBClusterCredentials {
		if v != nil {
			return *v
		}
		var ret MariaDBClusterCredentials
		return ret
	}).(MariaDBClusterCredentialsOutput)
}

// The password for a MariaDB user.
func (o MariaDBClusterCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MariaDBClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The username for the initial MariaDB user. Some system usernames are restricted (e.g 'mariadb', 'admin', 'standby').
func (o MariaDBClusterCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MariaDBClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type MariaDBClusterMaintenanceWindow struct {
	// The name of the week day.
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// Start of the maintenance window in UTC time.
	Time string `pulumi:"time"`
}

// MariaDBClusterMaintenanceWindowInput is an input type that accepts MariaDBClusterMaintenanceWindowArgs and MariaDBClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `MariaDBClusterMaintenanceWindowInput` via:
//
//	MariaDBClusterMaintenanceWindowArgs{...}
type MariaDBClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToMariaDBClusterMaintenanceWindowOutput() MariaDBClusterMaintenanceWindowOutput
	ToMariaDBClusterMaintenanceWindowOutputWithContext(context.Context) MariaDBClusterMaintenanceWindowOutput
}

type MariaDBClusterMaintenanceWindowArgs struct {
	// The name of the week day.
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// Start of the maintenance window in UTC time.
	Time pulumi.StringInput `pulumi:"time"`
}

func (MariaDBClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBClusterMaintenanceWindow)(nil)).Elem()
}

func (i MariaDBClusterMaintenanceWindowArgs) ToMariaDBClusterMaintenanceWindowOutput() MariaDBClusterMaintenanceWindowOutput {
	return i.ToMariaDBClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i MariaDBClusterMaintenanceWindowArgs) ToMariaDBClusterMaintenanceWindowOutputWithContext(ctx context.Context) MariaDBClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBClusterMaintenanceWindowOutput)
}

func (i MariaDBClusterMaintenanceWindowArgs) ToMariaDBClusterMaintenanceWindowPtrOutput() MariaDBClusterMaintenanceWindowPtrOutput {
	return i.ToMariaDBClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i MariaDBClusterMaintenanceWindowArgs) ToMariaDBClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) MariaDBClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBClusterMaintenanceWindowOutput).ToMariaDBClusterMaintenanceWindowPtrOutputWithContext(ctx)
}

// MariaDBClusterMaintenanceWindowPtrInput is an input type that accepts MariaDBClusterMaintenanceWindowArgs, MariaDBClusterMaintenanceWindowPtr and MariaDBClusterMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `MariaDBClusterMaintenanceWindowPtrInput` via:
//
//	        MariaDBClusterMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type MariaDBClusterMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToMariaDBClusterMaintenanceWindowPtrOutput() MariaDBClusterMaintenanceWindowPtrOutput
	ToMariaDBClusterMaintenanceWindowPtrOutputWithContext(context.Context) MariaDBClusterMaintenanceWindowPtrOutput
}

type mariaDBClusterMaintenanceWindowPtrType MariaDBClusterMaintenanceWindowArgs

func MariaDBClusterMaintenanceWindowPtr(v *MariaDBClusterMaintenanceWindowArgs) MariaDBClusterMaintenanceWindowPtrInput {
	return (*mariaDBClusterMaintenanceWindowPtrType)(v)
}

func (*mariaDBClusterMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MariaDBClusterMaintenanceWindow)(nil)).Elem()
}

func (i *mariaDBClusterMaintenanceWindowPtrType) ToMariaDBClusterMaintenanceWindowPtrOutput() MariaDBClusterMaintenanceWindowPtrOutput {
	return i.ToMariaDBClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *mariaDBClusterMaintenanceWindowPtrType) ToMariaDBClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) MariaDBClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MariaDBClusterMaintenanceWindowPtrOutput)
}

type MariaDBClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (MariaDBClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MariaDBClusterMaintenanceWindow)(nil)).Elem()
}

func (o MariaDBClusterMaintenanceWindowOutput) ToMariaDBClusterMaintenanceWindowOutput() MariaDBClusterMaintenanceWindowOutput {
	return o
}

func (o MariaDBClusterMaintenanceWindowOutput) ToMariaDBClusterMaintenanceWindowOutputWithContext(ctx context.Context) MariaDBClusterMaintenanceWindowOutput {
	return o
}

func (o MariaDBClusterMaintenanceWindowOutput) ToMariaDBClusterMaintenanceWindowPtrOutput() MariaDBClusterMaintenanceWindowPtrOutput {
	return o.ToMariaDBClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o MariaDBClusterMaintenanceWindowOutput) ToMariaDBClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) MariaDBClusterMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MariaDBClusterMaintenanceWindow) *MariaDBClusterMaintenanceWindow {
		return &v
	}).(MariaDBClusterMaintenanceWindowPtrOutput)
}

// The name of the week day.
func (o MariaDBClusterMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v MariaDBClusterMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// Start of the maintenance window in UTC time.
func (o MariaDBClusterMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v MariaDBClusterMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type MariaDBClusterMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (MariaDBClusterMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MariaDBClusterMaintenanceWindow)(nil)).Elem()
}

func (o MariaDBClusterMaintenanceWindowPtrOutput) ToMariaDBClusterMaintenanceWindowPtrOutput() MariaDBClusterMaintenanceWindowPtrOutput {
	return o
}

func (o MariaDBClusterMaintenanceWindowPtrOutput) ToMariaDBClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) MariaDBClusterMaintenanceWindowPtrOutput {
	return o
}

func (o MariaDBClusterMaintenanceWindowPtrOutput) Elem() MariaDBClusterMaintenanceWindowOutput {
	return o.ApplyT(func(v *MariaDBClusterMaintenanceWindow) MariaDBClusterMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret MariaDBClusterMaintenanceWindow
		return ret
	}).(MariaDBClusterMaintenanceWindowOutput)
}

// The name of the week day.
func (o MariaDBClusterMaintenanceWindowPtrOutput) DayOfTheWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MariaDBClusterMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfTheWeek
	}).(pulumi.StringPtrOutput)
}

// Start of the maintenance window in UTC time.
func (o MariaDBClusterMaintenanceWindowPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MariaDBClusterMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

type MongoClusterBackup struct {
	// [string] - The location where the cluster backups will be stored. If not set, the backup is stored in the nearest location of the cluster. Possible values are de, eu-south-2, or eu-central-2.
	Location *string `pulumi:"location"`
	// Number of hours in the past for which a point-in-time snapshot can be created.
	PointInTimeWindowHours *int `pulumi:"pointInTimeWindowHours"`
	// Number of hours between snapshots.
	SnapshotIntervalHours *int `pulumi:"snapshotIntervalHours"`
}

// MongoClusterBackupInput is an input type that accepts MongoClusterBackupArgs and MongoClusterBackupOutput values.
// You can construct a concrete instance of `MongoClusterBackupInput` via:
//
//	MongoClusterBackupArgs{...}
type MongoClusterBackupInput interface {
	pulumi.Input

	ToMongoClusterBackupOutput() MongoClusterBackupOutput
	ToMongoClusterBackupOutputWithContext(context.Context) MongoClusterBackupOutput
}

type MongoClusterBackupArgs struct {
	// [string] - The location where the cluster backups will be stored. If not set, the backup is stored in the nearest location of the cluster. Possible values are de, eu-south-2, or eu-central-2.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Number of hours in the past for which a point-in-time snapshot can be created.
	PointInTimeWindowHours pulumi.IntPtrInput `pulumi:"pointInTimeWindowHours"`
	// Number of hours between snapshots.
	SnapshotIntervalHours pulumi.IntPtrInput `pulumi:"snapshotIntervalHours"`
}

func (MongoClusterBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoClusterBackup)(nil)).Elem()
}

func (i MongoClusterBackupArgs) ToMongoClusterBackupOutput() MongoClusterBackupOutput {
	return i.ToMongoClusterBackupOutputWithContext(context.Background())
}

func (i MongoClusterBackupArgs) ToMongoClusterBackupOutputWithContext(ctx context.Context) MongoClusterBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoClusterBackupOutput)
}

func (i MongoClusterBackupArgs) ToMongoClusterBackupPtrOutput() MongoClusterBackupPtrOutput {
	return i.ToMongoClusterBackupPtrOutputWithContext(context.Background())
}

func (i MongoClusterBackupArgs) ToMongoClusterBackupPtrOutputWithContext(ctx context.Context) MongoClusterBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoClusterBackupOutput).ToMongoClusterBackupPtrOutputWithContext(ctx)
}

// MongoClusterBackupPtrInput is an input type that accepts MongoClusterBackupArgs, MongoClusterBackupPtr and MongoClusterBackupPtrOutput values.
// You can construct a concrete instance of `MongoClusterBackupPtrInput` via:
//
//	        MongoClusterBackupArgs{...}
//
//	or:
//
//	        nil
type MongoClusterBackupPtrInput interface {
	pulumi.Input

	ToMongoClusterBackupPtrOutput() MongoClusterBackupPtrOutput
	ToMongoClusterBackupPtrOutputWithContext(context.Context) MongoClusterBackupPtrOutput
}

type mongoClusterBackupPtrType MongoClusterBackupArgs

func MongoClusterBackupPtr(v *MongoClusterBackupArgs) MongoClusterBackupPtrInput {
	return (*mongoClusterBackupPtrType)(v)
}

func (*mongoClusterBackupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoClusterBackup)(nil)).Elem()
}

func (i *mongoClusterBackupPtrType) ToMongoClusterBackupPtrOutput() MongoClusterBackupPtrOutput {
	return i.ToMongoClusterBackupPtrOutputWithContext(context.Background())
}

func (i *mongoClusterBackupPtrType) ToMongoClusterBackupPtrOutputWithContext(ctx context.Context) MongoClusterBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoClusterBackupPtrOutput)
}

type MongoClusterBackupOutput struct{ *pulumi.OutputState }

func (MongoClusterBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoClusterBackup)(nil)).Elem()
}

func (o MongoClusterBackupOutput) ToMongoClusterBackupOutput() MongoClusterBackupOutput {
	return o
}

func (o MongoClusterBackupOutput) ToMongoClusterBackupOutputWithContext(ctx context.Context) MongoClusterBackupOutput {
	return o
}

func (o MongoClusterBackupOutput) ToMongoClusterBackupPtrOutput() MongoClusterBackupPtrOutput {
	return o.ToMongoClusterBackupPtrOutputWithContext(context.Background())
}

func (o MongoClusterBackupOutput) ToMongoClusterBackupPtrOutputWithContext(ctx context.Context) MongoClusterBackupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoClusterBackup) *MongoClusterBackup {
		return &v
	}).(MongoClusterBackupPtrOutput)
}

// [string] - The location where the cluster backups will be stored. If not set, the backup is stored in the nearest location of the cluster. Possible values are de, eu-south-2, or eu-central-2.
func (o MongoClusterBackupOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoClusterBackup) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Number of hours in the past for which a point-in-time snapshot can be created.
func (o MongoClusterBackupOutput) PointInTimeWindowHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoClusterBackup) *int { return v.PointInTimeWindowHours }).(pulumi.IntPtrOutput)
}

// Number of hours between snapshots.
func (o MongoClusterBackupOutput) SnapshotIntervalHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoClusterBackup) *int { return v.SnapshotIntervalHours }).(pulumi.IntPtrOutput)
}

type MongoClusterBackupPtrOutput struct{ *pulumi.OutputState }

func (MongoClusterBackupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoClusterBackup)(nil)).Elem()
}

func (o MongoClusterBackupPtrOutput) ToMongoClusterBackupPtrOutput() MongoClusterBackupPtrOutput {
	return o
}

func (o MongoClusterBackupPtrOutput) ToMongoClusterBackupPtrOutputWithContext(ctx context.Context) MongoClusterBackupPtrOutput {
	return o
}

func (o MongoClusterBackupPtrOutput) Elem() MongoClusterBackupOutput {
	return o.ApplyT(func(v *MongoClusterBackup) MongoClusterBackup {
		if v != nil {
			return *v
		}
		var ret MongoClusterBackup
		return ret
	}).(MongoClusterBackupOutput)
}

// [string] - The location where the cluster backups will be stored. If not set, the backup is stored in the nearest location of the cluster. Possible values are de, eu-south-2, or eu-central-2.
func (o MongoClusterBackupPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoClusterBackup) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Number of hours in the past for which a point-in-time snapshot can be created.
func (o MongoClusterBackupPtrOutput) PointInTimeWindowHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoClusterBackup) *int {
		if v == nil {
			return nil
		}
		return v.PointInTimeWindowHours
	}).(pulumi.IntPtrOutput)
}

// Number of hours between snapshots.
func (o MongoClusterBackupPtrOutput) SnapshotIntervalHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoClusterBackup) *int {
		if v == nil {
			return nil
		}
		return v.SnapshotIntervalHours
	}).(pulumi.IntPtrOutput)
}

type MongoClusterBiConnector struct {
	// [bool] - The status of the BI Connector. If not set, the BI Connector is disabled.
	Enabled *bool `pulumi:"enabled"`
	// [string] - The host where this new BI Connector is installed.
	Host *string `pulumi:"host"`
	// [string] - Port number used when connecting to this new BI Connector.
	Port *string `pulumi:"port"`
}

// MongoClusterBiConnectorInput is an input type that accepts MongoClusterBiConnectorArgs and MongoClusterBiConnectorOutput values.
// You can construct a concrete instance of `MongoClusterBiConnectorInput` via:
//
//	MongoClusterBiConnectorArgs{...}
type MongoClusterBiConnectorInput interface {
	pulumi.Input

	ToMongoClusterBiConnectorOutput() MongoClusterBiConnectorOutput
	ToMongoClusterBiConnectorOutputWithContext(context.Context) MongoClusterBiConnectorOutput
}

type MongoClusterBiConnectorArgs struct {
	// [bool] - The status of the BI Connector. If not set, the BI Connector is disabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// [string] - The host where this new BI Connector is installed.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// [string] - Port number used when connecting to this new BI Connector.
	Port pulumi.StringPtrInput `pulumi:"port"`
}

func (MongoClusterBiConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoClusterBiConnector)(nil)).Elem()
}

func (i MongoClusterBiConnectorArgs) ToMongoClusterBiConnectorOutput() MongoClusterBiConnectorOutput {
	return i.ToMongoClusterBiConnectorOutputWithContext(context.Background())
}

func (i MongoClusterBiConnectorArgs) ToMongoClusterBiConnectorOutputWithContext(ctx context.Context) MongoClusterBiConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoClusterBiConnectorOutput)
}

func (i MongoClusterBiConnectorArgs) ToMongoClusterBiConnectorPtrOutput() MongoClusterBiConnectorPtrOutput {
	return i.ToMongoClusterBiConnectorPtrOutputWithContext(context.Background())
}

func (i MongoClusterBiConnectorArgs) ToMongoClusterBiConnectorPtrOutputWithContext(ctx context.Context) MongoClusterBiConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoClusterBiConnectorOutput).ToMongoClusterBiConnectorPtrOutputWithContext(ctx)
}

// MongoClusterBiConnectorPtrInput is an input type that accepts MongoClusterBiConnectorArgs, MongoClusterBiConnectorPtr and MongoClusterBiConnectorPtrOutput values.
// You can construct a concrete instance of `MongoClusterBiConnectorPtrInput` via:
//
//	        MongoClusterBiConnectorArgs{...}
//
//	or:
//
//	        nil
type MongoClusterBiConnectorPtrInput interface {
	pulumi.Input

	ToMongoClusterBiConnectorPtrOutput() MongoClusterBiConnectorPtrOutput
	ToMongoClusterBiConnectorPtrOutputWithContext(context.Context) MongoClusterBiConnectorPtrOutput
}

type mongoClusterBiConnectorPtrType MongoClusterBiConnectorArgs

func MongoClusterBiConnectorPtr(v *MongoClusterBiConnectorArgs) MongoClusterBiConnectorPtrInput {
	return (*mongoClusterBiConnectorPtrType)(v)
}

func (*mongoClusterBiConnectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoClusterBiConnector)(nil)).Elem()
}

func (i *mongoClusterBiConnectorPtrType) ToMongoClusterBiConnectorPtrOutput() MongoClusterBiConnectorPtrOutput {
	return i.ToMongoClusterBiConnectorPtrOutputWithContext(context.Background())
}

func (i *mongoClusterBiConnectorPtrType) ToMongoClusterBiConnectorPtrOutputWithContext(ctx context.Context) MongoClusterBiConnectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoClusterBiConnectorPtrOutput)
}

type MongoClusterBiConnectorOutput struct{ *pulumi.OutputState }

func (MongoClusterBiConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoClusterBiConnector)(nil)).Elem()
}

func (o MongoClusterBiConnectorOutput) ToMongoClusterBiConnectorOutput() MongoClusterBiConnectorOutput {
	return o
}

func (o MongoClusterBiConnectorOutput) ToMongoClusterBiConnectorOutputWithContext(ctx context.Context) MongoClusterBiConnectorOutput {
	return o
}

func (o MongoClusterBiConnectorOutput) ToMongoClusterBiConnectorPtrOutput() MongoClusterBiConnectorPtrOutput {
	return o.ToMongoClusterBiConnectorPtrOutputWithContext(context.Background())
}

func (o MongoClusterBiConnectorOutput) ToMongoClusterBiConnectorPtrOutputWithContext(ctx context.Context) MongoClusterBiConnectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoClusterBiConnector) *MongoClusterBiConnector {
		return &v
	}).(MongoClusterBiConnectorPtrOutput)
}

// [bool] - The status of the BI Connector. If not set, the BI Connector is disabled.
func (o MongoClusterBiConnectorOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MongoClusterBiConnector) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// [string] - The host where this new BI Connector is installed.
func (o MongoClusterBiConnectorOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoClusterBiConnector) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// [string] - Port number used when connecting to this new BI Connector.
func (o MongoClusterBiConnectorOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoClusterBiConnector) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type MongoClusterBiConnectorPtrOutput struct{ *pulumi.OutputState }

func (MongoClusterBiConnectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoClusterBiConnector)(nil)).Elem()
}

func (o MongoClusterBiConnectorPtrOutput) ToMongoClusterBiConnectorPtrOutput() MongoClusterBiConnectorPtrOutput {
	return o
}

func (o MongoClusterBiConnectorPtrOutput) ToMongoClusterBiConnectorPtrOutputWithContext(ctx context.Context) MongoClusterBiConnectorPtrOutput {
	return o
}

func (o MongoClusterBiConnectorPtrOutput) Elem() MongoClusterBiConnectorOutput {
	return o.ApplyT(func(v *MongoClusterBiConnector) MongoClusterBiConnector {
		if v != nil {
			return *v
		}
		var ret MongoClusterBiConnector
		return ret
	}).(MongoClusterBiConnectorOutput)
}

// [bool] - The status of the BI Connector. If not set, the BI Connector is disabled.
func (o MongoClusterBiConnectorPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MongoClusterBiConnector) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// [string] - The host where this new BI Connector is installed.
func (o MongoClusterBiConnectorPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoClusterBiConnector) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// [string] - Port number used when connecting to this new BI Connector.
func (o MongoClusterBiConnectorPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoClusterBiConnector) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

type MongoClusterConnections struct {
	// [List] The list of IPs and subnet for your cluster. Note the following unavailable IP ranges:10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24. example: [192.168.1.100/24, 192.168.1.101/24]. See [Private IPs](https://www.ionos.com/help/server-cloud-infrastructure/private-network/private-ip-address-ranges/) and [Cluster Setup - Preparing the network](https://docs.ionos.com/cloud/databases/mongodb/api-howtos/create-a-cluster#preparing-the-network).
	CidrLists []string `pulumi:"cidrLists"`
	// [string] The datacenter to connect your cluster to.
	DatacenterId string `pulumi:"datacenterId"`
	// [string] The LAN to connect your cluster to.
	LanId string `pulumi:"lanId"`
}

// MongoClusterConnectionsInput is an input type that accepts MongoClusterConnectionsArgs and MongoClusterConnectionsOutput values.
// You can construct a concrete instance of `MongoClusterConnectionsInput` via:
//
//	MongoClusterConnectionsArgs{...}
type MongoClusterConnectionsInput interface {
	pulumi.Input

	ToMongoClusterConnectionsOutput() MongoClusterConnectionsOutput
	ToMongoClusterConnectionsOutputWithContext(context.Context) MongoClusterConnectionsOutput
}

type MongoClusterConnectionsArgs struct {
	// [List] The list of IPs and subnet for your cluster. Note the following unavailable IP ranges:10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24. example: [192.168.1.100/24, 192.168.1.101/24]. See [Private IPs](https://www.ionos.com/help/server-cloud-infrastructure/private-network/private-ip-address-ranges/) and [Cluster Setup - Preparing the network](https://docs.ionos.com/cloud/databases/mongodb/api-howtos/create-a-cluster#preparing-the-network).
	CidrLists pulumi.StringArrayInput `pulumi:"cidrLists"`
	// [string] The datacenter to connect your cluster to.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// [string] The LAN to connect your cluster to.
	LanId pulumi.StringInput `pulumi:"lanId"`
}

func (MongoClusterConnectionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoClusterConnections)(nil)).Elem()
}

func (i MongoClusterConnectionsArgs) ToMongoClusterConnectionsOutput() MongoClusterConnectionsOutput {
	return i.ToMongoClusterConnectionsOutputWithContext(context.Background())
}

func (i MongoClusterConnectionsArgs) ToMongoClusterConnectionsOutputWithContext(ctx context.Context) MongoClusterConnectionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoClusterConnectionsOutput)
}

func (i MongoClusterConnectionsArgs) ToMongoClusterConnectionsPtrOutput() MongoClusterConnectionsPtrOutput {
	return i.ToMongoClusterConnectionsPtrOutputWithContext(context.Background())
}

func (i MongoClusterConnectionsArgs) ToMongoClusterConnectionsPtrOutputWithContext(ctx context.Context) MongoClusterConnectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoClusterConnectionsOutput).ToMongoClusterConnectionsPtrOutputWithContext(ctx)
}

// MongoClusterConnectionsPtrInput is an input type that accepts MongoClusterConnectionsArgs, MongoClusterConnectionsPtr and MongoClusterConnectionsPtrOutput values.
// You can construct a concrete instance of `MongoClusterConnectionsPtrInput` via:
//
//	        MongoClusterConnectionsArgs{...}
//
//	or:
//
//	        nil
type MongoClusterConnectionsPtrInput interface {
	pulumi.Input

	ToMongoClusterConnectionsPtrOutput() MongoClusterConnectionsPtrOutput
	ToMongoClusterConnectionsPtrOutputWithContext(context.Context) MongoClusterConnectionsPtrOutput
}

type mongoClusterConnectionsPtrType MongoClusterConnectionsArgs

func MongoClusterConnectionsPtr(v *MongoClusterConnectionsArgs) MongoClusterConnectionsPtrInput {
	return (*mongoClusterConnectionsPtrType)(v)
}

func (*mongoClusterConnectionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoClusterConnections)(nil)).Elem()
}

func (i *mongoClusterConnectionsPtrType) ToMongoClusterConnectionsPtrOutput() MongoClusterConnectionsPtrOutput {
	return i.ToMongoClusterConnectionsPtrOutputWithContext(context.Background())
}

func (i *mongoClusterConnectionsPtrType) ToMongoClusterConnectionsPtrOutputWithContext(ctx context.Context) MongoClusterConnectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoClusterConnectionsPtrOutput)
}

type MongoClusterConnectionsOutput struct{ *pulumi.OutputState }

func (MongoClusterConnectionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoClusterConnections)(nil)).Elem()
}

func (o MongoClusterConnectionsOutput) ToMongoClusterConnectionsOutput() MongoClusterConnectionsOutput {
	return o
}

func (o MongoClusterConnectionsOutput) ToMongoClusterConnectionsOutputWithContext(ctx context.Context) MongoClusterConnectionsOutput {
	return o
}

func (o MongoClusterConnectionsOutput) ToMongoClusterConnectionsPtrOutput() MongoClusterConnectionsPtrOutput {
	return o.ToMongoClusterConnectionsPtrOutputWithContext(context.Background())
}

func (o MongoClusterConnectionsOutput) ToMongoClusterConnectionsPtrOutputWithContext(ctx context.Context) MongoClusterConnectionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoClusterConnections) *MongoClusterConnections {
		return &v
	}).(MongoClusterConnectionsPtrOutput)
}

// [List] The list of IPs and subnet for your cluster. Note the following unavailable IP ranges:10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24. example: [192.168.1.100/24, 192.168.1.101/24]. See [Private IPs](https://www.ionos.com/help/server-cloud-infrastructure/private-network/private-ip-address-ranges/) and [Cluster Setup - Preparing the network](https://docs.ionos.com/cloud/databases/mongodb/api-howtos/create-a-cluster#preparing-the-network).
func (o MongoClusterConnectionsOutput) CidrLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MongoClusterConnections) []string { return v.CidrLists }).(pulumi.StringArrayOutput)
}

// [string] The datacenter to connect your cluster to.
func (o MongoClusterConnectionsOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v MongoClusterConnections) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// [string] The LAN to connect your cluster to.
func (o MongoClusterConnectionsOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v MongoClusterConnections) string { return v.LanId }).(pulumi.StringOutput)
}

type MongoClusterConnectionsPtrOutput struct{ *pulumi.OutputState }

func (MongoClusterConnectionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoClusterConnections)(nil)).Elem()
}

func (o MongoClusterConnectionsPtrOutput) ToMongoClusterConnectionsPtrOutput() MongoClusterConnectionsPtrOutput {
	return o
}

func (o MongoClusterConnectionsPtrOutput) ToMongoClusterConnectionsPtrOutputWithContext(ctx context.Context) MongoClusterConnectionsPtrOutput {
	return o
}

func (o MongoClusterConnectionsPtrOutput) Elem() MongoClusterConnectionsOutput {
	return o.ApplyT(func(v *MongoClusterConnections) MongoClusterConnections {
		if v != nil {
			return *v
		}
		var ret MongoClusterConnections
		return ret
	}).(MongoClusterConnectionsOutput)
}

// [List] The list of IPs and subnet for your cluster. Note the following unavailable IP ranges:10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24. example: [192.168.1.100/24, 192.168.1.101/24]. See [Private IPs](https://www.ionos.com/help/server-cloud-infrastructure/private-network/private-ip-address-ranges/) and [Cluster Setup - Preparing the network](https://docs.ionos.com/cloud/databases/mongodb/api-howtos/create-a-cluster#preparing-the-network).
func (o MongoClusterConnectionsPtrOutput) CidrLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MongoClusterConnections) []string {
		if v == nil {
			return nil
		}
		return v.CidrLists
	}).(pulumi.StringArrayOutput)
}

// [string] The datacenter to connect your cluster to.
func (o MongoClusterConnectionsPtrOutput) DatacenterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoClusterConnections) *string {
		if v == nil {
			return nil
		}
		return &v.DatacenterId
	}).(pulumi.StringPtrOutput)
}

// [string] The LAN to connect your cluster to.
func (o MongoClusterConnectionsPtrOutput) LanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoClusterConnections) *string {
		if v == nil {
			return nil
		}
		return &v.LanId
	}).(pulumi.StringPtrOutput)
}

type MongoClusterMaintenanceWindow struct {
	// [string]
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// [string]
	Time string `pulumi:"time"`
}

// MongoClusterMaintenanceWindowInput is an input type that accepts MongoClusterMaintenanceWindowArgs and MongoClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `MongoClusterMaintenanceWindowInput` via:
//
//	MongoClusterMaintenanceWindowArgs{...}
type MongoClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToMongoClusterMaintenanceWindowOutput() MongoClusterMaintenanceWindowOutput
	ToMongoClusterMaintenanceWindowOutputWithContext(context.Context) MongoClusterMaintenanceWindowOutput
}

type MongoClusterMaintenanceWindowArgs struct {
	// [string]
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// [string]
	Time pulumi.StringInput `pulumi:"time"`
}

func (MongoClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoClusterMaintenanceWindow)(nil)).Elem()
}

func (i MongoClusterMaintenanceWindowArgs) ToMongoClusterMaintenanceWindowOutput() MongoClusterMaintenanceWindowOutput {
	return i.ToMongoClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i MongoClusterMaintenanceWindowArgs) ToMongoClusterMaintenanceWindowOutputWithContext(ctx context.Context) MongoClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoClusterMaintenanceWindowOutput)
}

func (i MongoClusterMaintenanceWindowArgs) ToMongoClusterMaintenanceWindowPtrOutput() MongoClusterMaintenanceWindowPtrOutput {
	return i.ToMongoClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i MongoClusterMaintenanceWindowArgs) ToMongoClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) MongoClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoClusterMaintenanceWindowOutput).ToMongoClusterMaintenanceWindowPtrOutputWithContext(ctx)
}

// MongoClusterMaintenanceWindowPtrInput is an input type that accepts MongoClusterMaintenanceWindowArgs, MongoClusterMaintenanceWindowPtr and MongoClusterMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `MongoClusterMaintenanceWindowPtrInput` via:
//
//	        MongoClusterMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type MongoClusterMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToMongoClusterMaintenanceWindowPtrOutput() MongoClusterMaintenanceWindowPtrOutput
	ToMongoClusterMaintenanceWindowPtrOutputWithContext(context.Context) MongoClusterMaintenanceWindowPtrOutput
}

type mongoClusterMaintenanceWindowPtrType MongoClusterMaintenanceWindowArgs

func MongoClusterMaintenanceWindowPtr(v *MongoClusterMaintenanceWindowArgs) MongoClusterMaintenanceWindowPtrInput {
	return (*mongoClusterMaintenanceWindowPtrType)(v)
}

func (*mongoClusterMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoClusterMaintenanceWindow)(nil)).Elem()
}

func (i *mongoClusterMaintenanceWindowPtrType) ToMongoClusterMaintenanceWindowPtrOutput() MongoClusterMaintenanceWindowPtrOutput {
	return i.ToMongoClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *mongoClusterMaintenanceWindowPtrType) ToMongoClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) MongoClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoClusterMaintenanceWindowPtrOutput)
}

type MongoClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (MongoClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoClusterMaintenanceWindow)(nil)).Elem()
}

func (o MongoClusterMaintenanceWindowOutput) ToMongoClusterMaintenanceWindowOutput() MongoClusterMaintenanceWindowOutput {
	return o
}

func (o MongoClusterMaintenanceWindowOutput) ToMongoClusterMaintenanceWindowOutputWithContext(ctx context.Context) MongoClusterMaintenanceWindowOutput {
	return o
}

func (o MongoClusterMaintenanceWindowOutput) ToMongoClusterMaintenanceWindowPtrOutput() MongoClusterMaintenanceWindowPtrOutput {
	return o.ToMongoClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o MongoClusterMaintenanceWindowOutput) ToMongoClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) MongoClusterMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoClusterMaintenanceWindow) *MongoClusterMaintenanceWindow {
		return &v
	}).(MongoClusterMaintenanceWindowPtrOutput)
}

// [string]
func (o MongoClusterMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v MongoClusterMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// [string]
func (o MongoClusterMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v MongoClusterMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type MongoClusterMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (MongoClusterMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoClusterMaintenanceWindow)(nil)).Elem()
}

func (o MongoClusterMaintenanceWindowPtrOutput) ToMongoClusterMaintenanceWindowPtrOutput() MongoClusterMaintenanceWindowPtrOutput {
	return o
}

func (o MongoClusterMaintenanceWindowPtrOutput) ToMongoClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) MongoClusterMaintenanceWindowPtrOutput {
	return o
}

func (o MongoClusterMaintenanceWindowPtrOutput) Elem() MongoClusterMaintenanceWindowOutput {
	return o.ApplyT(func(v *MongoClusterMaintenanceWindow) MongoClusterMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret MongoClusterMaintenanceWindow
		return ret
	}).(MongoClusterMaintenanceWindowOutput)
}

// [string]
func (o MongoClusterMaintenanceWindowPtrOutput) DayOfTheWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoClusterMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfTheWeek
	}).(pulumi.StringPtrOutput)
}

// [string]
func (o MongoClusterMaintenanceWindowPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoClusterMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

type MongoUserRole struct {
	// [true] Database on which to apply the role.
	//
	// **NOTE:** MongoDb users do not support update at the moment. Changing any attribute will result in the user being re-created.
	Database *string `pulumi:"database"`
	// [true] Mongodb user role. Examples: read, readWrite, readAnyDatabase, readWriteAnyDatabase, dbAdmin, dbAdminAnyDatabase, clusterMonitor.
	Role *string `pulumi:"role"`
}

// MongoUserRoleInput is an input type that accepts MongoUserRoleArgs and MongoUserRoleOutput values.
// You can construct a concrete instance of `MongoUserRoleInput` via:
//
//	MongoUserRoleArgs{...}
type MongoUserRoleInput interface {
	pulumi.Input

	ToMongoUserRoleOutput() MongoUserRoleOutput
	ToMongoUserRoleOutputWithContext(context.Context) MongoUserRoleOutput
}

type MongoUserRoleArgs struct {
	// [true] Database on which to apply the role.
	//
	// **NOTE:** MongoDb users do not support update at the moment. Changing any attribute will result in the user being re-created.
	Database pulumi.StringPtrInput `pulumi:"database"`
	// [true] Mongodb user role. Examples: read, readWrite, readAnyDatabase, readWriteAnyDatabase, dbAdmin, dbAdminAnyDatabase, clusterMonitor.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (MongoUserRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoUserRole)(nil)).Elem()
}

func (i MongoUserRoleArgs) ToMongoUserRoleOutput() MongoUserRoleOutput {
	return i.ToMongoUserRoleOutputWithContext(context.Background())
}

func (i MongoUserRoleArgs) ToMongoUserRoleOutputWithContext(ctx context.Context) MongoUserRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoUserRoleOutput)
}

// MongoUserRoleArrayInput is an input type that accepts MongoUserRoleArray and MongoUserRoleArrayOutput values.
// You can construct a concrete instance of `MongoUserRoleArrayInput` via:
//
//	MongoUserRoleArray{ MongoUserRoleArgs{...} }
type MongoUserRoleArrayInput interface {
	pulumi.Input

	ToMongoUserRoleArrayOutput() MongoUserRoleArrayOutput
	ToMongoUserRoleArrayOutputWithContext(context.Context) MongoUserRoleArrayOutput
}

type MongoUserRoleArray []MongoUserRoleInput

func (MongoUserRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoUserRole)(nil)).Elem()
}

func (i MongoUserRoleArray) ToMongoUserRoleArrayOutput() MongoUserRoleArrayOutput {
	return i.ToMongoUserRoleArrayOutputWithContext(context.Background())
}

func (i MongoUserRoleArray) ToMongoUserRoleArrayOutputWithContext(ctx context.Context) MongoUserRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoUserRoleArrayOutput)
}

type MongoUserRoleOutput struct{ *pulumi.OutputState }

func (MongoUserRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoUserRole)(nil)).Elem()
}

func (o MongoUserRoleOutput) ToMongoUserRoleOutput() MongoUserRoleOutput {
	return o
}

func (o MongoUserRoleOutput) ToMongoUserRoleOutputWithContext(ctx context.Context) MongoUserRoleOutput {
	return o
}

// [true] Database on which to apply the role.
//
// **NOTE:** MongoDb users do not support update at the moment. Changing any attribute will result in the user being re-created.
func (o MongoUserRoleOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoUserRole) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// [true] Mongodb user role. Examples: read, readWrite, readAnyDatabase, readWriteAnyDatabase, dbAdmin, dbAdminAnyDatabase, clusterMonitor.
func (o MongoUserRoleOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoUserRole) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type MongoUserRoleArrayOutput struct{ *pulumi.OutputState }

func (MongoUserRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoUserRole)(nil)).Elem()
}

func (o MongoUserRoleArrayOutput) ToMongoUserRoleArrayOutput() MongoUserRoleArrayOutput {
	return o
}

func (o MongoUserRoleArrayOutput) ToMongoUserRoleArrayOutputWithContext(ctx context.Context) MongoUserRoleArrayOutput {
	return o
}

func (o MongoUserRoleArrayOutput) Index(i pulumi.IntInput) MongoUserRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoUserRole {
		return vs[0].([]MongoUserRole)[vs[1].(int)]
	}).(MongoUserRoleOutput)
}

type PSQLClusterConnectionPooler struct {
	// [bool]
	Enabled bool `pulumi:"enabled"`
	// [string] Represents different modes of connection pooling for the connection pooler.
	PoolMode string `pulumi:"poolMode"`
}

// PSQLClusterConnectionPoolerInput is an input type that accepts PSQLClusterConnectionPoolerArgs and PSQLClusterConnectionPoolerOutput values.
// You can construct a concrete instance of `PSQLClusterConnectionPoolerInput` via:
//
//	PSQLClusterConnectionPoolerArgs{...}
type PSQLClusterConnectionPoolerInput interface {
	pulumi.Input

	ToPSQLClusterConnectionPoolerOutput() PSQLClusterConnectionPoolerOutput
	ToPSQLClusterConnectionPoolerOutputWithContext(context.Context) PSQLClusterConnectionPoolerOutput
}

type PSQLClusterConnectionPoolerArgs struct {
	// [bool]
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// [string] Represents different modes of connection pooling for the connection pooler.
	PoolMode pulumi.StringInput `pulumi:"poolMode"`
}

func (PSQLClusterConnectionPoolerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PSQLClusterConnectionPooler)(nil)).Elem()
}

func (i PSQLClusterConnectionPoolerArgs) ToPSQLClusterConnectionPoolerOutput() PSQLClusterConnectionPoolerOutput {
	return i.ToPSQLClusterConnectionPoolerOutputWithContext(context.Background())
}

func (i PSQLClusterConnectionPoolerArgs) ToPSQLClusterConnectionPoolerOutputWithContext(ctx context.Context) PSQLClusterConnectionPoolerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterConnectionPoolerOutput)
}

func (i PSQLClusterConnectionPoolerArgs) ToPSQLClusterConnectionPoolerPtrOutput() PSQLClusterConnectionPoolerPtrOutput {
	return i.ToPSQLClusterConnectionPoolerPtrOutputWithContext(context.Background())
}

func (i PSQLClusterConnectionPoolerArgs) ToPSQLClusterConnectionPoolerPtrOutputWithContext(ctx context.Context) PSQLClusterConnectionPoolerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterConnectionPoolerOutput).ToPSQLClusterConnectionPoolerPtrOutputWithContext(ctx)
}

// PSQLClusterConnectionPoolerPtrInput is an input type that accepts PSQLClusterConnectionPoolerArgs, PSQLClusterConnectionPoolerPtr and PSQLClusterConnectionPoolerPtrOutput values.
// You can construct a concrete instance of `PSQLClusterConnectionPoolerPtrInput` via:
//
//	        PSQLClusterConnectionPoolerArgs{...}
//
//	or:
//
//	        nil
type PSQLClusterConnectionPoolerPtrInput interface {
	pulumi.Input

	ToPSQLClusterConnectionPoolerPtrOutput() PSQLClusterConnectionPoolerPtrOutput
	ToPSQLClusterConnectionPoolerPtrOutputWithContext(context.Context) PSQLClusterConnectionPoolerPtrOutput
}

type psqlclusterConnectionPoolerPtrType PSQLClusterConnectionPoolerArgs

func PSQLClusterConnectionPoolerPtr(v *PSQLClusterConnectionPoolerArgs) PSQLClusterConnectionPoolerPtrInput {
	return (*psqlclusterConnectionPoolerPtrType)(v)
}

func (*psqlclusterConnectionPoolerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PSQLClusterConnectionPooler)(nil)).Elem()
}

func (i *psqlclusterConnectionPoolerPtrType) ToPSQLClusterConnectionPoolerPtrOutput() PSQLClusterConnectionPoolerPtrOutput {
	return i.ToPSQLClusterConnectionPoolerPtrOutputWithContext(context.Background())
}

func (i *psqlclusterConnectionPoolerPtrType) ToPSQLClusterConnectionPoolerPtrOutputWithContext(ctx context.Context) PSQLClusterConnectionPoolerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterConnectionPoolerPtrOutput)
}

type PSQLClusterConnectionPoolerOutput struct{ *pulumi.OutputState }

func (PSQLClusterConnectionPoolerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PSQLClusterConnectionPooler)(nil)).Elem()
}

func (o PSQLClusterConnectionPoolerOutput) ToPSQLClusterConnectionPoolerOutput() PSQLClusterConnectionPoolerOutput {
	return o
}

func (o PSQLClusterConnectionPoolerOutput) ToPSQLClusterConnectionPoolerOutputWithContext(ctx context.Context) PSQLClusterConnectionPoolerOutput {
	return o
}

func (o PSQLClusterConnectionPoolerOutput) ToPSQLClusterConnectionPoolerPtrOutput() PSQLClusterConnectionPoolerPtrOutput {
	return o.ToPSQLClusterConnectionPoolerPtrOutputWithContext(context.Background())
}

func (o PSQLClusterConnectionPoolerOutput) ToPSQLClusterConnectionPoolerPtrOutputWithContext(ctx context.Context) PSQLClusterConnectionPoolerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PSQLClusterConnectionPooler) *PSQLClusterConnectionPooler {
		return &v
	}).(PSQLClusterConnectionPoolerPtrOutput)
}

// [bool]
func (o PSQLClusterConnectionPoolerOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PSQLClusterConnectionPooler) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// [string] Represents different modes of connection pooling for the connection pooler.
func (o PSQLClusterConnectionPoolerOutput) PoolMode() pulumi.StringOutput {
	return o.ApplyT(func(v PSQLClusterConnectionPooler) string { return v.PoolMode }).(pulumi.StringOutput)
}

type PSQLClusterConnectionPoolerPtrOutput struct{ *pulumi.OutputState }

func (PSQLClusterConnectionPoolerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PSQLClusterConnectionPooler)(nil)).Elem()
}

func (o PSQLClusterConnectionPoolerPtrOutput) ToPSQLClusterConnectionPoolerPtrOutput() PSQLClusterConnectionPoolerPtrOutput {
	return o
}

func (o PSQLClusterConnectionPoolerPtrOutput) ToPSQLClusterConnectionPoolerPtrOutputWithContext(ctx context.Context) PSQLClusterConnectionPoolerPtrOutput {
	return o
}

func (o PSQLClusterConnectionPoolerPtrOutput) Elem() PSQLClusterConnectionPoolerOutput {
	return o.ApplyT(func(v *PSQLClusterConnectionPooler) PSQLClusterConnectionPooler {
		if v != nil {
			return *v
		}
		var ret PSQLClusterConnectionPooler
		return ret
	}).(PSQLClusterConnectionPoolerOutput)
}

// [bool]
func (o PSQLClusterConnectionPoolerPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PSQLClusterConnectionPooler) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// [string] Represents different modes of connection pooling for the connection pooler.
func (o PSQLClusterConnectionPoolerPtrOutput) PoolMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PSQLClusterConnectionPooler) *string {
		if v == nil {
			return nil
		}
		return &v.PoolMode
	}).(pulumi.StringPtrOutput)
}

type PSQLClusterConnections struct {
	// [true] The IP and subnet for the database. Note the following unavailable IP ranges: 10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24. Please enter in the correct format like IP/Subnet, exp: 192.168.10.0/24. See [Private IPs](https://www.ionos.com/help/server-cloud-infrastructure/private-network/private-ip-address-ranges/) and [Configuring the network](https://docs.ionos.com/cloud/compute-engine/networks/how-tos/configure-networks).
	Cidr string `pulumi:"cidr"`
	// [true] The datacenter to connect your cluster to.
	DatacenterId string `pulumi:"datacenterId"`
	// [true] The LAN to connect your cluster to.
	LanId string `pulumi:"lanId"`
}

// PSQLClusterConnectionsInput is an input type that accepts PSQLClusterConnectionsArgs and PSQLClusterConnectionsOutput values.
// You can construct a concrete instance of `PSQLClusterConnectionsInput` via:
//
//	PSQLClusterConnectionsArgs{...}
type PSQLClusterConnectionsInput interface {
	pulumi.Input

	ToPSQLClusterConnectionsOutput() PSQLClusterConnectionsOutput
	ToPSQLClusterConnectionsOutputWithContext(context.Context) PSQLClusterConnectionsOutput
}

type PSQLClusterConnectionsArgs struct {
	// [true] The IP and subnet for the database. Note the following unavailable IP ranges: 10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24. Please enter in the correct format like IP/Subnet, exp: 192.168.10.0/24. See [Private IPs](https://www.ionos.com/help/server-cloud-infrastructure/private-network/private-ip-address-ranges/) and [Configuring the network](https://docs.ionos.com/cloud/compute-engine/networks/how-tos/configure-networks).
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// [true] The datacenter to connect your cluster to.
	DatacenterId pulumi.StringInput `pulumi:"datacenterId"`
	// [true] The LAN to connect your cluster to.
	LanId pulumi.StringInput `pulumi:"lanId"`
}

func (PSQLClusterConnectionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PSQLClusterConnections)(nil)).Elem()
}

func (i PSQLClusterConnectionsArgs) ToPSQLClusterConnectionsOutput() PSQLClusterConnectionsOutput {
	return i.ToPSQLClusterConnectionsOutputWithContext(context.Background())
}

func (i PSQLClusterConnectionsArgs) ToPSQLClusterConnectionsOutputWithContext(ctx context.Context) PSQLClusterConnectionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterConnectionsOutput)
}

func (i PSQLClusterConnectionsArgs) ToPSQLClusterConnectionsPtrOutput() PSQLClusterConnectionsPtrOutput {
	return i.ToPSQLClusterConnectionsPtrOutputWithContext(context.Background())
}

func (i PSQLClusterConnectionsArgs) ToPSQLClusterConnectionsPtrOutputWithContext(ctx context.Context) PSQLClusterConnectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterConnectionsOutput).ToPSQLClusterConnectionsPtrOutputWithContext(ctx)
}

// PSQLClusterConnectionsPtrInput is an input type that accepts PSQLClusterConnectionsArgs, PSQLClusterConnectionsPtr and PSQLClusterConnectionsPtrOutput values.
// You can construct a concrete instance of `PSQLClusterConnectionsPtrInput` via:
//
//	        PSQLClusterConnectionsArgs{...}
//
//	or:
//
//	        nil
type PSQLClusterConnectionsPtrInput interface {
	pulumi.Input

	ToPSQLClusterConnectionsPtrOutput() PSQLClusterConnectionsPtrOutput
	ToPSQLClusterConnectionsPtrOutputWithContext(context.Context) PSQLClusterConnectionsPtrOutput
}

type psqlclusterConnectionsPtrType PSQLClusterConnectionsArgs

func PSQLClusterConnectionsPtr(v *PSQLClusterConnectionsArgs) PSQLClusterConnectionsPtrInput {
	return (*psqlclusterConnectionsPtrType)(v)
}

func (*psqlclusterConnectionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PSQLClusterConnections)(nil)).Elem()
}

func (i *psqlclusterConnectionsPtrType) ToPSQLClusterConnectionsPtrOutput() PSQLClusterConnectionsPtrOutput {
	return i.ToPSQLClusterConnectionsPtrOutputWithContext(context.Background())
}

func (i *psqlclusterConnectionsPtrType) ToPSQLClusterConnectionsPtrOutputWithContext(ctx context.Context) PSQLClusterConnectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterConnectionsPtrOutput)
}

type PSQLClusterConnectionsOutput struct{ *pulumi.OutputState }

func (PSQLClusterConnectionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PSQLClusterConnections)(nil)).Elem()
}

func (o PSQLClusterConnectionsOutput) ToPSQLClusterConnectionsOutput() PSQLClusterConnectionsOutput {
	return o
}

func (o PSQLClusterConnectionsOutput) ToPSQLClusterConnectionsOutputWithContext(ctx context.Context) PSQLClusterConnectionsOutput {
	return o
}

func (o PSQLClusterConnectionsOutput) ToPSQLClusterConnectionsPtrOutput() PSQLClusterConnectionsPtrOutput {
	return o.ToPSQLClusterConnectionsPtrOutputWithContext(context.Background())
}

func (o PSQLClusterConnectionsOutput) ToPSQLClusterConnectionsPtrOutputWithContext(ctx context.Context) PSQLClusterConnectionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PSQLClusterConnections) *PSQLClusterConnections {
		return &v
	}).(PSQLClusterConnectionsPtrOutput)
}

// [true] The IP and subnet for the database. Note the following unavailable IP ranges: 10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24. Please enter in the correct format like IP/Subnet, exp: 192.168.10.0/24. See [Private IPs](https://www.ionos.com/help/server-cloud-infrastructure/private-network/private-ip-address-ranges/) and [Configuring the network](https://docs.ionos.com/cloud/compute-engine/networks/how-tos/configure-networks).
func (o PSQLClusterConnectionsOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v PSQLClusterConnections) string { return v.Cidr }).(pulumi.StringOutput)
}

// [true] The datacenter to connect your cluster to.
func (o PSQLClusterConnectionsOutput) DatacenterId() pulumi.StringOutput {
	return o.ApplyT(func(v PSQLClusterConnections) string { return v.DatacenterId }).(pulumi.StringOutput)
}

// [true] The LAN to connect your cluster to.
func (o PSQLClusterConnectionsOutput) LanId() pulumi.StringOutput {
	return o.ApplyT(func(v PSQLClusterConnections) string { return v.LanId }).(pulumi.StringOutput)
}

type PSQLClusterConnectionsPtrOutput struct{ *pulumi.OutputState }

func (PSQLClusterConnectionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PSQLClusterConnections)(nil)).Elem()
}

func (o PSQLClusterConnectionsPtrOutput) ToPSQLClusterConnectionsPtrOutput() PSQLClusterConnectionsPtrOutput {
	return o
}

func (o PSQLClusterConnectionsPtrOutput) ToPSQLClusterConnectionsPtrOutputWithContext(ctx context.Context) PSQLClusterConnectionsPtrOutput {
	return o
}

func (o PSQLClusterConnectionsPtrOutput) Elem() PSQLClusterConnectionsOutput {
	return o.ApplyT(func(v *PSQLClusterConnections) PSQLClusterConnections {
		if v != nil {
			return *v
		}
		var ret PSQLClusterConnections
		return ret
	}).(PSQLClusterConnectionsOutput)
}

// [true] The IP and subnet for the database. Note the following unavailable IP ranges: 10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24. Please enter in the correct format like IP/Subnet, exp: 192.168.10.0/24. See [Private IPs](https://www.ionos.com/help/server-cloud-infrastructure/private-network/private-ip-address-ranges/) and [Configuring the network](https://docs.ionos.com/cloud/compute-engine/networks/how-tos/configure-networks).
func (o PSQLClusterConnectionsPtrOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PSQLClusterConnections) *string {
		if v == nil {
			return nil
		}
		return &v.Cidr
	}).(pulumi.StringPtrOutput)
}

// [true] The datacenter to connect your cluster to.
func (o PSQLClusterConnectionsPtrOutput) DatacenterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PSQLClusterConnections) *string {
		if v == nil {
			return nil
		}
		return &v.DatacenterId
	}).(pulumi.StringPtrOutput)
}

// [true] The LAN to connect your cluster to.
func (o PSQLClusterConnectionsPtrOutput) LanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PSQLClusterConnections) *string {
		if v == nil {
			return nil
		}
		return &v.LanId
	}).(pulumi.StringPtrOutput)
}

type PSQLClusterCredentials struct {
	// [string]
	Password string `pulumi:"password"`
	// [string] The username for the initial postgres user. Some system usernames are restricted (e.g. "postgres", "admin", "standby")
	Username string `pulumi:"username"`
}

// PSQLClusterCredentialsInput is an input type that accepts PSQLClusterCredentialsArgs and PSQLClusterCredentialsOutput values.
// You can construct a concrete instance of `PSQLClusterCredentialsInput` via:
//
//	PSQLClusterCredentialsArgs{...}
type PSQLClusterCredentialsInput interface {
	pulumi.Input

	ToPSQLClusterCredentialsOutput() PSQLClusterCredentialsOutput
	ToPSQLClusterCredentialsOutputWithContext(context.Context) PSQLClusterCredentialsOutput
}

type PSQLClusterCredentialsArgs struct {
	// [string]
	Password pulumi.StringInput `pulumi:"password"`
	// [string] The username for the initial postgres user. Some system usernames are restricted (e.g. "postgres", "admin", "standby")
	Username pulumi.StringInput `pulumi:"username"`
}

func (PSQLClusterCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PSQLClusterCredentials)(nil)).Elem()
}

func (i PSQLClusterCredentialsArgs) ToPSQLClusterCredentialsOutput() PSQLClusterCredentialsOutput {
	return i.ToPSQLClusterCredentialsOutputWithContext(context.Background())
}

func (i PSQLClusterCredentialsArgs) ToPSQLClusterCredentialsOutputWithContext(ctx context.Context) PSQLClusterCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterCredentialsOutput)
}

func (i PSQLClusterCredentialsArgs) ToPSQLClusterCredentialsPtrOutput() PSQLClusterCredentialsPtrOutput {
	return i.ToPSQLClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i PSQLClusterCredentialsArgs) ToPSQLClusterCredentialsPtrOutputWithContext(ctx context.Context) PSQLClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterCredentialsOutput).ToPSQLClusterCredentialsPtrOutputWithContext(ctx)
}

// PSQLClusterCredentialsPtrInput is an input type that accepts PSQLClusterCredentialsArgs, PSQLClusterCredentialsPtr and PSQLClusterCredentialsPtrOutput values.
// You can construct a concrete instance of `PSQLClusterCredentialsPtrInput` via:
//
//	        PSQLClusterCredentialsArgs{...}
//
//	or:
//
//	        nil
type PSQLClusterCredentialsPtrInput interface {
	pulumi.Input

	ToPSQLClusterCredentialsPtrOutput() PSQLClusterCredentialsPtrOutput
	ToPSQLClusterCredentialsPtrOutputWithContext(context.Context) PSQLClusterCredentialsPtrOutput
}

type psqlclusterCredentialsPtrType PSQLClusterCredentialsArgs

func PSQLClusterCredentialsPtr(v *PSQLClusterCredentialsArgs) PSQLClusterCredentialsPtrInput {
	return (*psqlclusterCredentialsPtrType)(v)
}

func (*psqlclusterCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PSQLClusterCredentials)(nil)).Elem()
}

func (i *psqlclusterCredentialsPtrType) ToPSQLClusterCredentialsPtrOutput() PSQLClusterCredentialsPtrOutput {
	return i.ToPSQLClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i *psqlclusterCredentialsPtrType) ToPSQLClusterCredentialsPtrOutputWithContext(ctx context.Context) PSQLClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterCredentialsPtrOutput)
}

type PSQLClusterCredentialsOutput struct{ *pulumi.OutputState }

func (PSQLClusterCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PSQLClusterCredentials)(nil)).Elem()
}

func (o PSQLClusterCredentialsOutput) ToPSQLClusterCredentialsOutput() PSQLClusterCredentialsOutput {
	return o
}

func (o PSQLClusterCredentialsOutput) ToPSQLClusterCredentialsOutputWithContext(ctx context.Context) PSQLClusterCredentialsOutput {
	return o
}

func (o PSQLClusterCredentialsOutput) ToPSQLClusterCredentialsPtrOutput() PSQLClusterCredentialsPtrOutput {
	return o.ToPSQLClusterCredentialsPtrOutputWithContext(context.Background())
}

func (o PSQLClusterCredentialsOutput) ToPSQLClusterCredentialsPtrOutputWithContext(ctx context.Context) PSQLClusterCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PSQLClusterCredentials) *PSQLClusterCredentials {
		return &v
	}).(PSQLClusterCredentialsPtrOutput)
}

// [string]
func (o PSQLClusterCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v PSQLClusterCredentials) string { return v.Password }).(pulumi.StringOutput)
}

// [string] The username for the initial postgres user. Some system usernames are restricted (e.g. "postgres", "admin", "standby")
func (o PSQLClusterCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v PSQLClusterCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type PSQLClusterCredentialsPtrOutput struct{ *pulumi.OutputState }

func (PSQLClusterCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PSQLClusterCredentials)(nil)).Elem()
}

func (o PSQLClusterCredentialsPtrOutput) ToPSQLClusterCredentialsPtrOutput() PSQLClusterCredentialsPtrOutput {
	return o
}

func (o PSQLClusterCredentialsPtrOutput) ToPSQLClusterCredentialsPtrOutputWithContext(ctx context.Context) PSQLClusterCredentialsPtrOutput {
	return o
}

func (o PSQLClusterCredentialsPtrOutput) Elem() PSQLClusterCredentialsOutput {
	return o.ApplyT(func(v *PSQLClusterCredentials) PSQLClusterCredentials {
		if v != nil {
			return *v
		}
		var ret PSQLClusterCredentials
		return ret
	}).(PSQLClusterCredentialsOutput)
}

// [string]
func (o PSQLClusterCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PSQLClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// [string] The username for the initial postgres user. Some system usernames are restricted (e.g. "postgres", "admin", "standby")
func (o PSQLClusterCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PSQLClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type PSQLClusterFromBackup struct {
	// [string] The unique ID of the backup you want to restore.
	BackupId string `pulumi:"backupId"`
	// [string] If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp. If empty, the backup will be applied completely.
	RecoveryTargetTime *string `pulumi:"recoveryTargetTime"`
}

// PSQLClusterFromBackupInput is an input type that accepts PSQLClusterFromBackupArgs and PSQLClusterFromBackupOutput values.
// You can construct a concrete instance of `PSQLClusterFromBackupInput` via:
//
//	PSQLClusterFromBackupArgs{...}
type PSQLClusterFromBackupInput interface {
	pulumi.Input

	ToPSQLClusterFromBackupOutput() PSQLClusterFromBackupOutput
	ToPSQLClusterFromBackupOutputWithContext(context.Context) PSQLClusterFromBackupOutput
}

type PSQLClusterFromBackupArgs struct {
	// [string] The unique ID of the backup you want to restore.
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// [string] If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp. If empty, the backup will be applied completely.
	RecoveryTargetTime pulumi.StringPtrInput `pulumi:"recoveryTargetTime"`
}

func (PSQLClusterFromBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PSQLClusterFromBackup)(nil)).Elem()
}

func (i PSQLClusterFromBackupArgs) ToPSQLClusterFromBackupOutput() PSQLClusterFromBackupOutput {
	return i.ToPSQLClusterFromBackupOutputWithContext(context.Background())
}

func (i PSQLClusterFromBackupArgs) ToPSQLClusterFromBackupOutputWithContext(ctx context.Context) PSQLClusterFromBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterFromBackupOutput)
}

func (i PSQLClusterFromBackupArgs) ToPSQLClusterFromBackupPtrOutput() PSQLClusterFromBackupPtrOutput {
	return i.ToPSQLClusterFromBackupPtrOutputWithContext(context.Background())
}

func (i PSQLClusterFromBackupArgs) ToPSQLClusterFromBackupPtrOutputWithContext(ctx context.Context) PSQLClusterFromBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterFromBackupOutput).ToPSQLClusterFromBackupPtrOutputWithContext(ctx)
}

// PSQLClusterFromBackupPtrInput is an input type that accepts PSQLClusterFromBackupArgs, PSQLClusterFromBackupPtr and PSQLClusterFromBackupPtrOutput values.
// You can construct a concrete instance of `PSQLClusterFromBackupPtrInput` via:
//
//	        PSQLClusterFromBackupArgs{...}
//
//	or:
//
//	        nil
type PSQLClusterFromBackupPtrInput interface {
	pulumi.Input

	ToPSQLClusterFromBackupPtrOutput() PSQLClusterFromBackupPtrOutput
	ToPSQLClusterFromBackupPtrOutputWithContext(context.Context) PSQLClusterFromBackupPtrOutput
}

type psqlclusterFromBackupPtrType PSQLClusterFromBackupArgs

func PSQLClusterFromBackupPtr(v *PSQLClusterFromBackupArgs) PSQLClusterFromBackupPtrInput {
	return (*psqlclusterFromBackupPtrType)(v)
}

func (*psqlclusterFromBackupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PSQLClusterFromBackup)(nil)).Elem()
}

func (i *psqlclusterFromBackupPtrType) ToPSQLClusterFromBackupPtrOutput() PSQLClusterFromBackupPtrOutput {
	return i.ToPSQLClusterFromBackupPtrOutputWithContext(context.Background())
}

func (i *psqlclusterFromBackupPtrType) ToPSQLClusterFromBackupPtrOutputWithContext(ctx context.Context) PSQLClusterFromBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterFromBackupPtrOutput)
}

type PSQLClusterFromBackupOutput struct{ *pulumi.OutputState }

func (PSQLClusterFromBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PSQLClusterFromBackup)(nil)).Elem()
}

func (o PSQLClusterFromBackupOutput) ToPSQLClusterFromBackupOutput() PSQLClusterFromBackupOutput {
	return o
}

func (o PSQLClusterFromBackupOutput) ToPSQLClusterFromBackupOutputWithContext(ctx context.Context) PSQLClusterFromBackupOutput {
	return o
}

func (o PSQLClusterFromBackupOutput) ToPSQLClusterFromBackupPtrOutput() PSQLClusterFromBackupPtrOutput {
	return o.ToPSQLClusterFromBackupPtrOutputWithContext(context.Background())
}

func (o PSQLClusterFromBackupOutput) ToPSQLClusterFromBackupPtrOutputWithContext(ctx context.Context) PSQLClusterFromBackupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PSQLClusterFromBackup) *PSQLClusterFromBackup {
		return &v
	}).(PSQLClusterFromBackupPtrOutput)
}

// [string] The unique ID of the backup you want to restore.
func (o PSQLClusterFromBackupOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v PSQLClusterFromBackup) string { return v.BackupId }).(pulumi.StringOutput)
}

// [string] If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp. If empty, the backup will be applied completely.
func (o PSQLClusterFromBackupOutput) RecoveryTargetTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PSQLClusterFromBackup) *string { return v.RecoveryTargetTime }).(pulumi.StringPtrOutput)
}

type PSQLClusterFromBackupPtrOutput struct{ *pulumi.OutputState }

func (PSQLClusterFromBackupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PSQLClusterFromBackup)(nil)).Elem()
}

func (o PSQLClusterFromBackupPtrOutput) ToPSQLClusterFromBackupPtrOutput() PSQLClusterFromBackupPtrOutput {
	return o
}

func (o PSQLClusterFromBackupPtrOutput) ToPSQLClusterFromBackupPtrOutputWithContext(ctx context.Context) PSQLClusterFromBackupPtrOutput {
	return o
}

func (o PSQLClusterFromBackupPtrOutput) Elem() PSQLClusterFromBackupOutput {
	return o.ApplyT(func(v *PSQLClusterFromBackup) PSQLClusterFromBackup {
		if v != nil {
			return *v
		}
		var ret PSQLClusterFromBackup
		return ret
	}).(PSQLClusterFromBackupOutput)
}

// [string] The unique ID of the backup you want to restore.
func (o PSQLClusterFromBackupPtrOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PSQLClusterFromBackup) *string {
		if v == nil {
			return nil
		}
		return &v.BackupId
	}).(pulumi.StringPtrOutput)
}

// [string] If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp. If empty, the backup will be applied completely.
func (o PSQLClusterFromBackupPtrOutput) RecoveryTargetTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PSQLClusterFromBackup) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryTargetTime
	}).(pulumi.StringPtrOutput)
}

type PSQLClusterMaintenanceWindow struct {
	// [string]
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// [string]
	Time string `pulumi:"time"`
}

// PSQLClusterMaintenanceWindowInput is an input type that accepts PSQLClusterMaintenanceWindowArgs and PSQLClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `PSQLClusterMaintenanceWindowInput` via:
//
//	PSQLClusterMaintenanceWindowArgs{...}
type PSQLClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToPSQLClusterMaintenanceWindowOutput() PSQLClusterMaintenanceWindowOutput
	ToPSQLClusterMaintenanceWindowOutputWithContext(context.Context) PSQLClusterMaintenanceWindowOutput
}

type PSQLClusterMaintenanceWindowArgs struct {
	// [string]
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// [string]
	Time pulumi.StringInput `pulumi:"time"`
}

func (PSQLClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PSQLClusterMaintenanceWindow)(nil)).Elem()
}

func (i PSQLClusterMaintenanceWindowArgs) ToPSQLClusterMaintenanceWindowOutput() PSQLClusterMaintenanceWindowOutput {
	return i.ToPSQLClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i PSQLClusterMaintenanceWindowArgs) ToPSQLClusterMaintenanceWindowOutputWithContext(ctx context.Context) PSQLClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterMaintenanceWindowOutput)
}

func (i PSQLClusterMaintenanceWindowArgs) ToPSQLClusterMaintenanceWindowPtrOutput() PSQLClusterMaintenanceWindowPtrOutput {
	return i.ToPSQLClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i PSQLClusterMaintenanceWindowArgs) ToPSQLClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) PSQLClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterMaintenanceWindowOutput).ToPSQLClusterMaintenanceWindowPtrOutputWithContext(ctx)
}

// PSQLClusterMaintenanceWindowPtrInput is an input type that accepts PSQLClusterMaintenanceWindowArgs, PSQLClusterMaintenanceWindowPtr and PSQLClusterMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `PSQLClusterMaintenanceWindowPtrInput` via:
//
//	        PSQLClusterMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type PSQLClusterMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToPSQLClusterMaintenanceWindowPtrOutput() PSQLClusterMaintenanceWindowPtrOutput
	ToPSQLClusterMaintenanceWindowPtrOutputWithContext(context.Context) PSQLClusterMaintenanceWindowPtrOutput
}

type psqlclusterMaintenanceWindowPtrType PSQLClusterMaintenanceWindowArgs

func PSQLClusterMaintenanceWindowPtr(v *PSQLClusterMaintenanceWindowArgs) PSQLClusterMaintenanceWindowPtrInput {
	return (*psqlclusterMaintenanceWindowPtrType)(v)
}

func (*psqlclusterMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PSQLClusterMaintenanceWindow)(nil)).Elem()
}

func (i *psqlclusterMaintenanceWindowPtrType) ToPSQLClusterMaintenanceWindowPtrOutput() PSQLClusterMaintenanceWindowPtrOutput {
	return i.ToPSQLClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *psqlclusterMaintenanceWindowPtrType) ToPSQLClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) PSQLClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PSQLClusterMaintenanceWindowPtrOutput)
}

type PSQLClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (PSQLClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PSQLClusterMaintenanceWindow)(nil)).Elem()
}

func (o PSQLClusterMaintenanceWindowOutput) ToPSQLClusterMaintenanceWindowOutput() PSQLClusterMaintenanceWindowOutput {
	return o
}

func (o PSQLClusterMaintenanceWindowOutput) ToPSQLClusterMaintenanceWindowOutputWithContext(ctx context.Context) PSQLClusterMaintenanceWindowOutput {
	return o
}

func (o PSQLClusterMaintenanceWindowOutput) ToPSQLClusterMaintenanceWindowPtrOutput() PSQLClusterMaintenanceWindowPtrOutput {
	return o.ToPSQLClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o PSQLClusterMaintenanceWindowOutput) ToPSQLClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) PSQLClusterMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PSQLClusterMaintenanceWindow) *PSQLClusterMaintenanceWindow {
		return &v
	}).(PSQLClusterMaintenanceWindowPtrOutput)
}

// [string]
func (o PSQLClusterMaintenanceWindowOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v PSQLClusterMaintenanceWindow) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// [string]
func (o PSQLClusterMaintenanceWindowOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v PSQLClusterMaintenanceWindow) string { return v.Time }).(pulumi.StringOutput)
}

type PSQLClusterMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (PSQLClusterMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PSQLClusterMaintenanceWindow)(nil)).Elem()
}

func (o PSQLClusterMaintenanceWindowPtrOutput) ToPSQLClusterMaintenanceWindowPtrOutput() PSQLClusterMaintenanceWindowPtrOutput {
	return o
}

func (o PSQLClusterMaintenanceWindowPtrOutput) ToPSQLClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) PSQLClusterMaintenanceWindowPtrOutput {
	return o
}

func (o PSQLClusterMaintenanceWindowPtrOutput) Elem() PSQLClusterMaintenanceWindowOutput {
	return o.ApplyT(func(v *PSQLClusterMaintenanceWindow) PSQLClusterMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret PSQLClusterMaintenanceWindow
		return ret
	}).(PSQLClusterMaintenanceWindowOutput)
}

// [string]
func (o PSQLClusterMaintenanceWindowPtrOutput) DayOfTheWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PSQLClusterMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfTheWeek
	}).(pulumi.StringPtrOutput)
}

// [string]
func (o PSQLClusterMaintenanceWindowPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PSQLClusterMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InMemoryDBReplicaSetConnectionsInput)(nil)).Elem(), InMemoryDBReplicaSetConnectionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InMemoryDBReplicaSetConnectionsPtrInput)(nil)).Elem(), InMemoryDBReplicaSetConnectionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InMemoryDBReplicaSetCredentialsInput)(nil)).Elem(), InMemoryDBReplicaSetCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InMemoryDBReplicaSetCredentialsPtrInput)(nil)).Elem(), InMemoryDBReplicaSetCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InMemoryDBReplicaSetCredentialsHashedPasswordInput)(nil)).Elem(), InMemoryDBReplicaSetCredentialsHashedPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InMemoryDBReplicaSetCredentialsHashedPasswordPtrInput)(nil)).Elem(), InMemoryDBReplicaSetCredentialsHashedPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InMemoryDBReplicaSetMaintenanceWindowInput)(nil)).Elem(), InMemoryDBReplicaSetMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InMemoryDBReplicaSetMaintenanceWindowPtrInput)(nil)).Elem(), InMemoryDBReplicaSetMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InMemoryDBReplicaSetResourcesInput)(nil)).Elem(), InMemoryDBReplicaSetResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InMemoryDBReplicaSetResourcesPtrInput)(nil)).Elem(), InMemoryDBReplicaSetResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MariaDBClusterConnectionsInput)(nil)).Elem(), MariaDBClusterConnectionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MariaDBClusterConnectionsPtrInput)(nil)).Elem(), MariaDBClusterConnectionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MariaDBClusterCredentialsInput)(nil)).Elem(), MariaDBClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MariaDBClusterCredentialsPtrInput)(nil)).Elem(), MariaDBClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MariaDBClusterMaintenanceWindowInput)(nil)).Elem(), MariaDBClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MariaDBClusterMaintenanceWindowPtrInput)(nil)).Elem(), MariaDBClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoClusterBackupInput)(nil)).Elem(), MongoClusterBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoClusterBackupPtrInput)(nil)).Elem(), MongoClusterBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoClusterBiConnectorInput)(nil)).Elem(), MongoClusterBiConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoClusterBiConnectorPtrInput)(nil)).Elem(), MongoClusterBiConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoClusterConnectionsInput)(nil)).Elem(), MongoClusterConnectionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoClusterConnectionsPtrInput)(nil)).Elem(), MongoClusterConnectionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoClusterMaintenanceWindowInput)(nil)).Elem(), MongoClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoClusterMaintenanceWindowPtrInput)(nil)).Elem(), MongoClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoUserRoleInput)(nil)).Elem(), MongoUserRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoUserRoleArrayInput)(nil)).Elem(), MongoUserRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PSQLClusterConnectionPoolerInput)(nil)).Elem(), PSQLClusterConnectionPoolerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PSQLClusterConnectionPoolerPtrInput)(nil)).Elem(), PSQLClusterConnectionPoolerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PSQLClusterConnectionsInput)(nil)).Elem(), PSQLClusterConnectionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PSQLClusterConnectionsPtrInput)(nil)).Elem(), PSQLClusterConnectionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PSQLClusterCredentialsInput)(nil)).Elem(), PSQLClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PSQLClusterCredentialsPtrInput)(nil)).Elem(), PSQLClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PSQLClusterFromBackupInput)(nil)).Elem(), PSQLClusterFromBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PSQLClusterFromBackupPtrInput)(nil)).Elem(), PSQLClusterFromBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PSQLClusterMaintenanceWindowInput)(nil)).Elem(), PSQLClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PSQLClusterMaintenanceWindowPtrInput)(nil)).Elem(), PSQLClusterMaintenanceWindowArgs{})
	pulumi.RegisterOutputType(InMemoryDBReplicaSetConnectionsOutput{})
	pulumi.RegisterOutputType(InMemoryDBReplicaSetConnectionsPtrOutput{})
	pulumi.RegisterOutputType(InMemoryDBReplicaSetCredentialsOutput{})
	pulumi.RegisterOutputType(InMemoryDBReplicaSetCredentialsPtrOutput{})
	pulumi.RegisterOutputType(InMemoryDBReplicaSetCredentialsHashedPasswordOutput{})
	pulumi.RegisterOutputType(InMemoryDBReplicaSetCredentialsHashedPasswordPtrOutput{})
	pulumi.RegisterOutputType(InMemoryDBReplicaSetMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(InMemoryDBReplicaSetMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(InMemoryDBReplicaSetResourcesOutput{})
	pulumi.RegisterOutputType(InMemoryDBReplicaSetResourcesPtrOutput{})
	pulumi.RegisterOutputType(MariaDBClusterConnectionsOutput{})
	pulumi.RegisterOutputType(MariaDBClusterConnectionsPtrOutput{})
	pulumi.RegisterOutputType(MariaDBClusterCredentialsOutput{})
	pulumi.RegisterOutputType(MariaDBClusterCredentialsPtrOutput{})
	pulumi.RegisterOutputType(MariaDBClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(MariaDBClusterMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(MongoClusterBackupOutput{})
	pulumi.RegisterOutputType(MongoClusterBackupPtrOutput{})
	pulumi.RegisterOutputType(MongoClusterBiConnectorOutput{})
	pulumi.RegisterOutputType(MongoClusterBiConnectorPtrOutput{})
	pulumi.RegisterOutputType(MongoClusterConnectionsOutput{})
	pulumi.RegisterOutputType(MongoClusterConnectionsPtrOutput{})
	pulumi.RegisterOutputType(MongoClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(MongoClusterMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(MongoUserRoleOutput{})
	pulumi.RegisterOutputType(MongoUserRoleArrayOutput{})
	pulumi.RegisterOutputType(PSQLClusterConnectionPoolerOutput{})
	pulumi.RegisterOutputType(PSQLClusterConnectionPoolerPtrOutput{})
	pulumi.RegisterOutputType(PSQLClusterConnectionsOutput{})
	pulumi.RegisterOutputType(PSQLClusterConnectionsPtrOutput{})
	pulumi.RegisterOutputType(PSQLClusterCredentialsOutput{})
	pulumi.RegisterOutputType(PSQLClusterCredentialsPtrOutput{})
	pulumi.RegisterOutputType(PSQLClusterFromBackupOutput{})
	pulumi.RegisterOutputType(PSQLClusterFromBackupPtrOutput{})
	pulumi.RegisterOutputType(PSQLClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(PSQLClusterMaintenanceWindowPtrOutput{})
}
