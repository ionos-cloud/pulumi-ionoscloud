{
    "name": "ionoscloud",
    "displayName": "IonosCloud",
    "description": "A Pulumi package for creating and managing ionoscloud cloud resources.",
    "keywords": [
        "ionos-cloud",
        "ionoscloud",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`ionoscloud` Terraform Provider](https://github.com/ionos-cloud/terraform-provider-ionoscloud).",
    "repository": "https://github.com/ionos-cloud/pulumi-ionoscloud",
    "publisher": "ionos-cloud",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20"
        },
        "go": {
            "importBasePath": "github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing ionoscloud cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/ionos-cloud/terraform-provider-ionoscloud)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-ionoscloud` repo](https://github.com/ionos-cloud/pulumi-ionoscloud/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-ionoscloud` repo](https://github.com/ionos-cloud/terraform-provider-ionoscloud/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "ionoscloud",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/ionos-cloud/terraform-provider-ionoscloud)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-ionoscloud` repo](https://github.com/ionos-cloud/pulumi-ionoscloud/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-ionoscloud` repo](https://github.com/ionos-cloud/terraform-provider-ionoscloud/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "contractNumber": {
                "type": "string"
            },
            "endpoint": {
                "type": "string",
                "description": "IonosCloud REST API URL. Usually not necessary to be set, SDKs know internally how to route requests to the API.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "This field is to be set only for testing purposes. It is not recommended to set this field in production environments.\n"
            },
            "password": {
                "type": "string",
                "description": "IonosCloud password for API operations. If token is provided, token is preferred\n"
            },
            "retries": {
                "type": "integer",
                "deprecationMessage": "Timeout is used instead of this functionality"
            },
            "s3AccessKey": {
                "type": "string",
                "description": "Access key for IONOS Object Storage operations.\n"
            },
            "s3Region": {
                "type": "string",
                "description": "Region for IONOS Object Storage operations.\n"
            },
            "s3SecretKey": {
                "type": "string",
                "description": "Secret key for IONOS Object Storage operations.\n"
            },
            "token": {
                "type": "string",
                "description": "IonosCloud bearer token for API operations.\n"
            },
            "username": {
                "type": "string",
                "description": "IonosCloud username for API operations. If token is provided, token is preferred\n"
            }
        }
    },
    "types": {
        "ionoscloud:alb/BalancerFlowlog:BalancerFlowlog": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: ACCEPTED, REJECTED, ALL. Immutable, forces re-recreation of the nic resource.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "The bucket name of an existing IONOS Object Storage bucket. Immutable, forces re-recreation of the nic resource.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-recreation of the nic resource.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The resource's unique identifier.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "bucket",
                "direction",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "action",
                        "bucket",
                        "direction",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "ionoscloud:alb/ForwardingRuleHttpRule:ForwardingRuleHttpRule": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:alb/ForwardingRuleHttpRuleCondition:ForwardingRuleHttpRuleCondition"
                    },
                    "description": "An array of items in the collection.The action is only performed if each and every condition is met; if no conditions are set, the rule will always be performed.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "Valid only for STATIC actions.\n"
                },
                "dropQuery": {
                    "type": "boolean",
                    "description": "Default is false; valid only for REDIRECT actions.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location for redirecting; mandatory and valid only for REDIRECT actions.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Application Load Balancer HTTP rule.\n"
                },
                "responseMessage": {
                    "type": "string",
                    "description": "The response message of the request; mandatory for STATIC actions.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "Valid only for REDIRECT and STATIC actions. For REDIRECT actions, default is 301 and possible values are 301, 302, 303, 307, and 308. For STATIC actions, default is 503 and valid range is 200 to 599.\n"
                },
                "targetGroup": {
                    "type": "string",
                    "description": "The ID of the target group; mandatory and only valid for FORWARD actions.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the HTTP rule.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "conditions",
                        "contentType",
                        "name",
                        "statusCode",
                        "type"
                    ]
                }
            }
        },
        "ionoscloud:alb/ForwardingRuleHttpRuleCondition:ForwardingRuleHttpRuleCondition": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "Matching rule for the HTTP rule condition attribute; mandatory for HEADER, PATH, QUERY, METHOD, HOST, and COOKIE types; must be null when type is SOURCE_IP.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Must be null when type is PATH, METHOD, HOST, or SOURCE_IP. Key can only be set when type is COOKIES, HEADER, or QUERY.\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Specifies whether the condition is negated or not; the default is False.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the HTTP rule condition.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Mandatory for conditions CONTAINS, EQUALS, MATCHES, STARTS_WITH, ENDS_WITH; must be null when condition is EXISTS; should be a valid CIDR if provided and if type is SOURCE_IP.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "ionoscloud:alb/getBalancerFlowlog:getBalancerFlowlog": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: ACCEPTED, REJECTED, ALL.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "The bucket name of an existing IONOS Object Storage bucket.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The resource's unique identifier.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "bucket",
                "direction",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:alb/getForwardingRuleHttpRule:getForwardingRuleHttpRule": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:alb/getForwardingRuleHttpRuleCondition:getForwardingRuleHttpRuleCondition"
                    },
                    "description": "An array of items in the collection.The action is only performed if each and every condition is met; if no conditions are set, the rule will always be performed.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "Valid only for STATIC actions.\n"
                },
                "dropQuery": {
                    "type": "boolean",
                    "description": "Default is false; valid only for REDIRECT actions.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location for redirecting; mandatory and valid only for REDIRECT actions.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the Application Load Balancer HTTP rule.\n"
                },
                "responseMessage": {
                    "type": "string",
                    "description": "The response message of the request; mandatory for STATIC actions.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "Valid only for REDIRECT and STATIC actions. For REDIRECT actions, default is 301 and possible values are 301, 302, 303, 307, and 308. For STATIC actions, default is 503 and valid range is 200 to 599.\n"
                },
                "targetGroup": {
                    "type": "string",
                    "description": "The ID of the target group; mandatory and only valid for FORWARD actions.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the HTTP rule.\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "contentType",
                "dropQuery",
                "location",
                "name",
                "responseMessage",
                "statusCode",
                "targetGroup",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:alb/getForwardingRuleHttpRuleCondition:getForwardingRuleHttpRuleCondition": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "Matching rule for the HTTP rule condition attribute; mandatory for HEADER, PATH, QUERY, METHOD, HOST, and COOKIE types; must be null when type is SOURCE_IP.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Must be null when type is PATH, METHOD, HOST, or SOURCE_IP. Key can only be set when type is COOKIES, HEADER, or QUERY.\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Specifies whether the condition is negated or not; the default is False.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the HTTP rule condition.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Mandatory for conditions CONTAINS, EQUALS, MATCHES, STARTS_WITH, ENDS_WITH; must be null when condition is EXISTS; should be a valid CIDR if provided and if type is SOURCE_IP.\n"
                }
            },
            "type": "object",
            "required": [
                "condition",
                "key",
                "negate",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:apigateway/ApigatewayCustomDomain:ApigatewayCustomDomain": {
            "properties": {
                "certificateId": {
                    "type": "string",
                    "description": "The certificate ID for the domain.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The domain name.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "ionoscloud:apigateway/RouteUpstream:RouteUpstream": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "The host of the upstream.\n"
                },
                "loadbalancer": {
                    "type": "string",
                    "description": "The load balancer algorithm.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the upstream.\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "The target URL of the upstream.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Weight with which to split traffic to the upstream.\n"
                }
            },
            "type": "object",
            "required": [
                "host"
            ]
        },
        "ionoscloud:apigateway/getApigatewayCustomDomain:getApigatewayCustomDomain": {
            "properties": {
                "certificateId": {
                    "type": "string",
                    "description": "The ID of the certificate to use for the distribution.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The domain name of the distribution.\n"
                }
            },
            "type": "object",
            "required": [
                "certificateId",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:apigateway/getRouteUpstream:getRouteUpstream": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "The host of the upstream.\n"
                },
                "loadbalancer": {
                    "type": "string",
                    "description": "The load balancer algorithm.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the upstream.\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "The target URL of the upstream.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Weight with which to split traffic to the upstream.\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "loadbalancer",
                "port",
                "scheme",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:autoscaling/GroupPolicy:GroupPolicy": {
            "properties": {
                "metric": {
                    "type": "string",
                    "description": "The Metric that should trigger the scaling actions. Metric values are checked at fixed intervals.\n"
                },
                "range": {
                    "type": "string",
                    "description": "Specifies the time range for which the samples are to be aggregated. Must be \u003e= 2 minutes.\n"
                },
                "scaleInAction": {
                    "$ref": "#/types/ionoscloud:autoscaling/GroupPolicyScaleInAction:GroupPolicyScaleInAction",
                    "description": "Defines the action to be taken when the 'scaleInThreshold' is exceeded. Here, scaling is always about removing VMs associated with this VM Auto Scaling Group. By default, the termination policy is 'OLDEST_SERVER_FIRST' is effective.\n"
                },
                "scaleInThreshold": {
                    "type": "integer",
                    "description": "The upper threshold for the value of the 'metric'. Used with the 'greater than' (\u003e) operator. A scale-out action is triggered when this value is exceeded, specified by the 'scale_out_action' property. The value must have a lower minimum delta to the 'scale_in_threshold', depending on the metric, to avoid competing for actions simultaneously. If 'properties.policy.unit=TOTAL', a value \u003e= 40 must be chosen.\n"
                },
                "scaleOutAction": {
                    "$ref": "#/types/ionoscloud:autoscaling/GroupPolicyScaleOutAction:GroupPolicyScaleOutAction",
                    "description": "Defines the action to be performed when the 'scaleOutThreshold' is exceeded. Here, scaling is always about adding new VMs to this VM Auto Scaling Group.\n"
                },
                "scaleOutThreshold": {
                    "type": "integer",
                    "description": "The upper threshold for the value of the 'metric'. Used with the 'greater than' (\u003e) operator. A scale-out action is triggered when this value is exceeded, specified by the 'scaleOutAction' property. The value must have a lower minimum delta to the 'scaleInThreshold', depending on the metric, to avoid competing for actions simultaneously. If 'properties.policy.unit=TOTAL', a value \u003e= 40 must be chosen.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "Units of the applied Metric. Possible values are: PER_HOUR, PER_MINUTE, PER_SECOND, TOTAL.\n"
                }
            },
            "type": "object",
            "required": [
                "metric",
                "scaleInAction",
                "scaleInThreshold",
                "scaleOutAction",
                "scaleOutThreshold",
                "unit"
            ]
        },
        "ionoscloud:autoscaling/GroupPolicyScaleInAction:GroupPolicyScaleInAction": {
            "properties": {
                "amount": {
                    "type": "integer",
                    "description": "When 'amountType=ABSOLUTE' specifies the absolute number of VMs that are removed. The value must be between 1 to 10. 'amountType=PERCENTAGE' specifies the percentage value that is applied to the current number of replicas of the VM Auto Scaling Group. The value must be between 1 to 200. At least one VM is always removed. Note that for 'SCALE_IN' operations, volumes are not deleted after the server is deleted.\n"
                },
                "amountType": {
                    "type": "string",
                    "description": "The type for the given amount. Possible values are: [ABSOLUTE, PERCENTAGE].\n"
                },
                "cooldownPeriod": {
                    "type": "string",
                    "description": "The minimum time that elapses after the start of this scaling action until the following scaling action is started. While a scaling action is in progress, no second action is initiated for the same VM Auto Scaling Group. Instead, the metric is re-evaluated after the current scaling action completes (either successfully or with errors). This is currently validated with a minimum value of 2 minutes and a maximum of 24 hours. The default value is 5 minutes if not specified.\n"
                },
                "deleteVolumes": {
                    "type": "boolean",
                    "description": "If set to 'true', when deleting an replica during scale in, any attached volume will also be deleted. When set to 'false', all volumes remain in the datacenter and must be deleted manually. Note that every scale-out creates new volumes. When they are not deleted, they will eventually use all of your contracts resource limits. At this point, scaling out would not be possible anymore.\n"
                },
                "terminationPolicyType": {
                    "type": "string",
                    "description": "The type of termination policy for the VM Auto Scaling Group to follow a specific pattern for scaling-in replicas. The default termination policy is 'OLDEST_SERVER_FIRST'.\n"
                }
            },
            "type": "object",
            "required": [
                "amount",
                "amountType",
                "deleteVolumes"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "amount",
                        "amountType",
                        "cooldownPeriod",
                        "deleteVolumes",
                        "terminationPolicyType"
                    ]
                }
            }
        },
        "ionoscloud:autoscaling/GroupPolicyScaleOutAction:GroupPolicyScaleOutAction": {
            "properties": {
                "amount": {
                    "type": "integer",
                    "description": "When 'amountType=ABSOLUTE' specifies the absolute number of VMs that are added. The value must be between 1 to 10. 'amountType=PERCENTAGE' specifies the percentage value that is applied to the current number of replicas of the VM Auto Scaling Group. The value must be between 1 to 200. At least one VM is always added or removed.\n"
                },
                "amountType": {
                    "type": "string",
                    "description": "The type for the given amount. Possible values are: [ABSOLUTE, PERCENTAGE].\n"
                },
                "cooldownPeriod": {
                    "type": "string",
                    "description": "The minimum time that elapses after the start of this scaling action until the following scaling action is started. While a scaling action is in progress, no second action is initiated for the same VM Auto Scaling Group. Instead, the metric is re-evaluated after the current scaling action completes (either successfully or with errors). This is currently validated with a minimum value of 2 minutes and a maximum of 24 hours. The default value is 5 minutes if not specified.\n"
                }
            },
            "type": "object",
            "required": [
                "amount",
                "amountType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "amount",
                        "amountType",
                        "cooldownPeriod"
                    ]
                }
            }
        },
        "ionoscloud:autoscaling/GroupReplicaConfiguration:GroupReplicaConfiguration": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "description": "The zone where the VMs are created using this configuration.\n"
                },
                "cores": {
                    "type": "integer",
                    "description": "The total number of cores for the VMs.\n"
                },
                "cpuFamily": {
                    "type": "string",
                    "description": "The zone where the VMs are created using this configuration.\n"
                },
                "nics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:autoscaling/GroupReplicaConfigurationNic:GroupReplicaConfigurationNic"
                    },
                    "description": "Set of NICs associated with this Replica.\n"
                },
                "ram": {
                    "type": "integer",
                    "description": "The amount of memory for the VMs in MB, e.g. 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB.\n"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:autoscaling/GroupReplicaConfigurationVolume:GroupReplicaConfigurationVolume"
                    },
                    "description": "List of volumes associated with this Replica.\n"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "cores",
                "ram"
            ]
        },
        "ionoscloud:autoscaling/GroupReplicaConfigurationNic:GroupReplicaConfigurationNic": {
            "properties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Dhcp flag for this replica Nic. This is an optional attribute with default value of 'true' if not given in the request payload or given as null.\n"
                },
                "firewallActive": {
                    "type": "boolean",
                    "description": "Activate or deactivate the firewall. By default, an active firewall without any defined rules will block all incoming network traffic except for the firewall rules that explicitly allows certain protocols, IP addresses and ports.\n"
                },
                "firewallRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:autoscaling/GroupReplicaConfigurationNicFirewallRule:GroupReplicaConfigurationNicFirewallRule"
                    },
                    "description": "List of all firewall rules for the specified NIC.\n"
                },
                "firewallType": {
                    "type": "string",
                    "description": "The type of firewall rules that will be allowed on the NIC. If not specified, the default INGRESS value is used.\n"
                },
                "flowLogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:autoscaling/GroupReplicaConfigurationNicFlowLog:GroupReplicaConfigurationNicFlowLog"
                    },
                    "description": "List of all flow logs for the specified NIC.\n"
                },
                "lan": {
                    "type": "integer",
                    "description": "Lan ID for this replica Nic.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for this replica NIC.\n"
                },
                "targetGroup": {
                    "$ref": "#/types/ionoscloud:autoscaling/GroupReplicaConfigurationNicTargetGroup:GroupReplicaConfigurationNicTargetGroup",
                    "description": "In order to link VM to ALB, target group must be provided.\n"
                }
            },
            "type": "object",
            "required": [
                "lan",
                "name"
            ]
        },
        "ionoscloud:autoscaling/GroupReplicaConfigurationNicFirewallRule:GroupReplicaConfigurationNicFirewallRule": {
            "properties": {
                "icmpCode": {
                    "type": "integer",
                    "description": "Sets the allowed code (from 0 to 254) when ICMP protocol is selected. The value 'null' allows all codes.\n"
                },
                "icmpType": {
                    "type": "integer",
                    "description": "Sets the allowed type (from 0 to 254) if the protocol ICMP is selected. The value 'null' allows all types.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the firewall rule.\n"
                },
                "portRangeEnd": {
                    "type": "integer",
                    "description": "Sets the end range of the allowed port (from 1 to 65535) if the protocol TCP or UDP is selected. The value 'null' for 'port_range_start' and 'port_range_end' allows all ports.\n"
                },
                "portRangeStart": {
                    "type": "integer",
                    "description": "Sets the initial range of the allowed port (from 1 to 65535) if the protocol TCP or UDP is selected. The value 'null' for 'port_range_start' and 'port_range_end' allows all ports.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol for the rule. The property cannot be modified after its creation (not allowed in update requests).\n"
                },
                "sourceIp": {
                    "type": "string",
                    "description": "Only traffic originating from the respective IPv4 address is permitted. The value 'null' allows traffic from any IP address.\n"
                },
                "sourceMac": {
                    "type": "string",
                    "description": "Only traffic originating from the respective MAC address is permitted. Valid format: 'aa:bb:cc:dd:ee:ff'. The value 'null' allows traffic from any MAC address.\n"
                },
                "targetIp": {
                    "type": "string",
                    "description": "If the target NIC has multiple IP addresses, only the traffic directed to the respective IP address of the NIC is allowed. The value 'null' allows traffic to any target IP address.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The firewall rule type. If not specified, the default value 'INGRESS' is used.\n"
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "protocol",
                        "type"
                    ]
                }
            }
        },
        "ionoscloud:autoscaling/GroupReplicaConfigurationNicFlowLog:GroupReplicaConfigurationNicFlowLog": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: ACCEPTED, REJECTED, ALL. Immutable, forces re-recreation of the nic resource.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "The bucket name of an existing IONOS Object Storage bucket. Immutable, forces re-recreation of the nic resource.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-recreation of the nic resource.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The resource's unique identifier.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "bucket",
                "direction",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "action",
                        "bucket",
                        "direction",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "ionoscloud:autoscaling/GroupReplicaConfigurationNicTargetGroup:GroupReplicaConfigurationNicTargetGroup": {
            "properties": {
                "port": {
                    "type": "integer",
                    "description": "The port for the target group.\n"
                },
                "targetGroupId": {
                    "type": "string",
                    "description": "The ID of the target group.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for the target group.\n"
                }
            },
            "type": "object",
            "required": [
                "port",
                "targetGroupId",
                "weight"
            ]
        },
        "ionoscloud:autoscaling/GroupReplicaConfigurationVolume:GroupReplicaConfigurationVolume": {
            "properties": {
                "backupUnitId": {
                    "type": "string",
                    "description": "The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' in conjunction with this property.\n"
                },
                "bootOrder": {
                    "type": "string",
                    "description": "Determines whether the volume will be used as a boot volume. Set to NONE, the volume will not be used as boot volume. \nSet to PRIMARY, the volume will be used as boot volume and set to AUTO will delegate the decision to the provisioning engine to decide whether to use the volume as boot volume.\nNotice that exactly one volume can be set to PRIMARY or all of them set to AUTO.\n"
                },
                "bus": {
                    "type": "string",
                    "description": "The bus type of the volume. Default setting is 'VIRTIO'. The bus type 'IDE' is also supported.\n"
                },
                "image": {
                    "type": "string",
                    "description": "The image installed on the disk. Currently, only the UUID of the image is supported. Note that either 'image' or 'imageAlias' must be specified, but not both.\n"
                },
                "imageAlias": {
                    "type": "string",
                    "description": "The image installed on the volume. Must be an 'imageAlias' as specified via the images API. Note that one of 'image' or 'imageAlias' must be set, but not both.\n"
                },
                "imagePassword": {
                    "type": "string",
                    "description": "Image password for this replica volume.\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "Name for this replica volume.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "User-defined size for this replica volume in GB.\n"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Storage Type for this replica volume. Possible values: SSD, HDD, SSD_STANDARD or SSD_PREMIUM\n"
                },
                "userData": {
                    "type": "string",
                    "description": "User-data (Cloud Init) for this replica volume.\n"
                }
            },
            "type": "object",
            "required": [
                "bootOrder",
                "name",
                "size",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "backupUnitId",
                        "bootOrder",
                        "name",
                        "size",
                        "type",
                        "userData"
                    ]
                }
            }
        },
        "ionoscloud:autoscaling/getGroupPolicy:getGroupPolicy": {
            "properties": {
                "metric": {
                    "type": "string",
                    "description": "The Metric that should trigger the scaling actions. Metric values are checked at fixed intervals.\n"
                },
                "range": {
                    "type": "string",
                    "description": "Defines the time range, for which the samples will be aggregated. Default is 120s.\n"
                },
                "scaleInActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:autoscaling/getGroupPolicyScaleInAction:getGroupPolicyScaleInAction"
                    },
                    "description": "Specifies the action to take when the `scaleInThreshold` is exceeded. Hereby, scaling in is always about removing VMs that are currently associated with this autoscaling group. Default termination policy is OLDEST_SERVER_FIRST.\n"
                },
                "scaleInThreshold": {
                    "type": "integer",
                    "description": "The lower threshold for the value of the `metric`. Will be used with `less than` (\u003c) operator. Exceeding this will start a Scale-In action as specified by the `scaleInAction` property. The value must have a higher minimum delta to the `scaleOutThreshold` depending on the `metric` to avoid competitive actions at the same time.\n"
                },
                "scaleOutActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:autoscaling/getGroupPolicyScaleOutAction:getGroupPolicyScaleOutAction"
                    },
                    "description": "Specifies the action to take when the `scaleOutThreshold` is exceeded. Hereby, scaling out is always about adding new VMs to this autoscaling group.\n"
                },
                "scaleOutThreshold": {
                    "type": "integer",
                    "description": "The upper threshold for the value of the `metric`. Will be used with `greater than` (\u003e) operator. Exceeding this will start a Scale-Out action as specified by the `scaleOutAction` property. The value must have a lower minimum delta to the `scaleInThreshold` depending on the `metric` to avoid competitive actions at the same time.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "Units of the applied Metric. Possible values are: PER_HOUR, PER_MINUTE, PER_SECOND, TOTAL.\n"
                }
            },
            "type": "object",
            "required": [
                "metric",
                "range",
                "scaleInActions",
                "scaleInThreshold",
                "scaleOutActions",
                "scaleOutThreshold",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:autoscaling/getGroupPolicyScaleInAction:getGroupPolicyScaleInAction": {
            "properties": {
                "amount": {
                    "type": "integer",
                    "description": "When 'amountType=ABSOLUTE' specifies the absolute number of VMs that are removed. The value must be between 1 to 10. 'amountType=PERCENTAGE' specifies the percentage value that is applied to the current number of replicas of the VM Auto Scaling Group. The value must be between 1 to 200. At least one VM is always removed. Note that for 'SCALE_IN' operations, volumes are not deleted after the server is deleted.\n"
                },
                "amountType": {
                    "type": "string",
                    "description": "The type for the given amount. Possible values are: [ABSOLUTE, PERCENTAGE].\n"
                },
                "cooldownPeriod": {
                    "type": "string",
                    "description": "Minimum time to pass after this Scaling action has started, until the next Scaling action will be started. Additionally, if a Scaling action is currently in progress, no second Scaling action will be started for the same autoscaling group. Instead, the Metric will be re-evaluated after the current Scaling action is completed (either successfully or with failures). This is validated with a minimum value of 2 minutes and a maximum of 24 hours currently. Default value is 5 minutes if not given.\n"
                },
                "deleteVolumes": {
                    "type": "boolean",
                    "description": "If set to 'true', when deleting an replica during scale in, any attached volume will also be deleted. When set to 'false', all volumes remain in the datacenter and must be deleted manually. Note that every scale-out creates new volumes. When they are not deleted, they will eventually use all of your contracts resource limits. At this point, scaling out would not be possible anymore.\n"
                },
                "terminationPolicyType": {
                    "type": "string",
                    "description": "The type of the termination policy for the autoscaling group so that a specific pattern is followed for Scaling-In instances. Default termination policy is OLDEST_SERVER_FIRST.\n"
                }
            },
            "type": "object",
            "required": [
                "amount",
                "amountType",
                "cooldownPeriod",
                "deleteVolumes",
                "terminationPolicyType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:autoscaling/getGroupPolicyScaleOutAction:getGroupPolicyScaleOutAction": {
            "properties": {
                "amount": {
                    "type": "integer",
                    "description": "When 'amountType=ABSOLUTE' specifies the absolute number of VMs that are added. The value must be between 1 to 10. 'amountType=PERCENTAGE' specifies the percentage value that is applied to the current number of replicas of the VM Auto Scaling Group. The value must be between 1 to 200. At least one VM is always added. Note that for 'SCALE_IN' operations, volumes are not deleted after the server is deleted.\n"
                },
                "amountType": {
                    "type": "string",
                    "description": "The type for the given amount. Possible values are: [ABSOLUTE, PERCENTAGE].\n"
                },
                "cooldownPeriod": {
                    "type": "string",
                    "description": "Minimum time to pass after this Scaling action has started, until the next Scaling action will be started. Additionally, if a Scaling action is currently in progress, no second Scaling action will be started for the same autoscaling group. Instead, the Metric will be re-evaluated after the current Scaling action is completed (either successfully or with failures). This is validated with a minimum value of 2 minutes and a maximum of 24 hours currently. Default value is 5 minutes if not given.\n"
                }
            },
            "type": "object",
            "required": [
                "amount",
                "amountType",
                "cooldownPeriod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:autoscaling/getGroupReplicaConfiguration:getGroupReplicaConfiguration": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "description": "The zone where the VMs are created using this configuration.\n"
                },
                "cores": {
                    "type": "integer",
                    "description": "The total number of cores for the VMs.\n"
                },
                "cpuFamily": {
                    "type": "string",
                    "description": "The zone where the VMs are created using this configuration.\n"
                },
                "nics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:autoscaling/getGroupReplicaConfigurationNic:getGroupReplicaConfigurationNic"
                    },
                    "description": "List of NICs associated with this Replica.\n"
                },
                "ram": {
                    "type": "integer",
                    "description": "The amount of memory for the VMs in MB, e.g. 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB.\n"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:autoscaling/getGroupReplicaConfigurationVolume:getGroupReplicaConfigurationVolume"
                    },
                    "description": "List of volumes associated with this Replica. Only a single volume is currently supported.\n"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "cores",
                "cpuFamily",
                "nics",
                "ram",
                "volumes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:autoscaling/getGroupReplicaConfigurationNic:getGroupReplicaConfigurationNic": {
            "properties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Dhcp flag for this replica Nic. This is an optional attribute with default value of 'true' if not given in the request payload or given as null.\n"
                },
                "firewallActive": {
                    "type": "boolean",
                    "description": "Activate or deactivate the firewall. By default, an active firewall without any defined rules will block all incoming network traffic except for the firewall rules that explicitly allows certain protocols, IP addresses and ports.\n"
                },
                "firewallRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:autoscaling/getGroupReplicaConfigurationNicFirewallRule:getGroupReplicaConfigurationNicFirewallRule"
                    },
                    "description": "List of all firewall rules for the specified NIC.\n"
                },
                "firewallType": {
                    "type": "string",
                    "description": "The type of firewall rules that will be allowed on the NIC. If not specified, the default INGRESS value is used.\n"
                },
                "flowLogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:autoscaling/getGroupReplicaConfigurationNicFlowLog:getGroupReplicaConfigurationNicFlowLog"
                    },
                    "description": "Flow log configuration for the NIC. By default, the flow log is inactive. If you want to activate the flow log, you must specify the target resource and the type of traffic to log.\n"
                },
                "lan": {
                    "type": "integer",
                    "description": "Lan ID for this replica Nic.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for this replica NIC.\n"
                },
                "targetGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:autoscaling/getGroupReplicaConfigurationNicTargetGroup:getGroupReplicaConfigurationNicTargetGroup"
                    },
                    "description": "In order to link VM to ALB, target group must be provided.\n"
                }
            },
            "type": "object",
            "required": [
                "dhcp",
                "firewallActive",
                "firewallRules",
                "firewallType",
                "flowLogs",
                "lan",
                "name",
                "targetGroups"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:autoscaling/getGroupReplicaConfigurationNicFirewallRule:getGroupReplicaConfigurationNicFirewallRule": {
            "properties": {
                "icmpCode": {
                    "type": "integer",
                    "description": "Sets the allowed code (from 0 to 254) when ICMP protocol is selected. The value 'null' allows all codes.\n"
                },
                "icmpType": {
                    "type": "integer",
                    "description": "Sets the allowed type (from 0 to 254) if the protocol ICMP is selected. The value 'null' allows all types.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the firewall rule.\n"
                },
                "portRangeEnd": {
                    "type": "integer",
                    "description": "Sets the end range of the allowed port (from 1 to 65535) if the protocol TCP or UDP is selected. The value 'null' for 'port_range_start' and 'port_range_end' allows all ports.\n"
                },
                "portRangeStart": {
                    "type": "integer",
                    "description": "Sets the initial range of the allowed port (from 1 to 65535) if the protocol TCP or UDP is selected. The value 'null' for 'port_range_start' and 'port_range_end' allows all ports.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol for the rule. The property cannot be modified after its creation (not allowed in update requests).\n"
                },
                "sourceIp": {
                    "type": "string",
                    "description": "Only traffic originating from the respective IPv4 address is permitted. The value 'null' allows traffic from any IP address.\n"
                },
                "sourceMac": {
                    "type": "string",
                    "description": "Only traffic originating from the respective MAC address is permitted. Valid format: 'aa:bb:cc:dd:ee:ff'. The value 'null' allows traffic from any MAC address.\n"
                },
                "targetIp": {
                    "type": "string",
                    "description": "If the target NIC has multiple IP addresses, only the traffic directed to the respective IP address of the NIC is allowed. The value 'null' allows traffic to any target IP address.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The firewall rule type. If not specified, the default value 'INGRESS' is used.\n"
                }
            },
            "type": "object",
            "required": [
                "icmpCode",
                "icmpType",
                "name",
                "portRangeEnd",
                "portRangeStart",
                "protocol",
                "sourceIp",
                "sourceMac",
                "targetIp",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:autoscaling/getGroupReplicaConfigurationNicFlowLog:getGroupReplicaConfigurationNicFlowLog": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: ACCEPTED, REJECTED, ALL.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "The bucket name of an existing IONOS Object Storage bucket.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The resource's unique identifier.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "bucket",
                "direction",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:autoscaling/getGroupReplicaConfigurationNicTargetGroup:getGroupReplicaConfigurationNicTargetGroup": {
            "properties": {
                "port": {
                    "type": "integer",
                    "description": "The port for the target group.\n"
                },
                "targetGroupId": {
                    "type": "string",
                    "description": "The ID of the target group.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for the target group.\n"
                }
            },
            "type": "object",
            "required": [
                "port",
                "targetGroupId",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:autoscaling/getGroupReplicaConfigurationVolume:getGroupReplicaConfigurationVolume": {
            "properties": {
                "backupUnitId": {
                    "type": "string",
                    "description": "The uuid of the Backup Unit that user has access to.\n"
                },
                "bootOrder": {
                    "type": "string",
                    "description": "Determines whether the volume will be used as a boot volume: NONE - the volume will not be used as boot volume, PRIMARY - the volume will be used as boot volume, AUTO - will delegate the decision to the provisioning engine to decide whether to use the volume as boot volume.\n"
                },
                "bus": {
                    "type": "string",
                    "description": "The bus type of the volume. Default setting is 'VIRTIO'. The bus type 'IDE' is also supported.\n"
                },
                "image": {
                    "type": "string",
                    "description": "The image installed on the volume. Only the UUID of the image is presently supported.\n"
                },
                "imageAlias": {
                    "type": "string",
                    "description": "The image installed on the volume. Must be an 'imageAlias' as specified via the images API.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name for this replica volume.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "User-defined size for this replica volume in GB.\n"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Storage Type for this replica volume. Possible values: SSD, HDD, SSD_STANDARD or SSD_PREMIUM\n"
                }
            },
            "type": "object",
            "required": [
                "backupUnitId",
                "bootOrder",
                "bus",
                "image",
                "imageAlias",
                "name",
                "size",
                "sshKeys",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:autoscaling/getServersServer:getServersServer": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the resource\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:cdn/DistributionRoutingRule:DistributionRoutingRule": {
            "properties": {
                "prefix": {
                    "type": "string",
                    "description": "The prefix of the routing rule.\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "The scheme of the routing rule.\n"
                },
                "upstream": {
                    "$ref": "#/types/ionoscloud:cdn/DistributionRoutingRuleUpstream:DistributionRoutingRuleUpstream"
                }
            },
            "type": "object",
            "required": [
                "prefix",
                "scheme",
                "upstream"
            ]
        },
        "ionoscloud:cdn/DistributionRoutingRuleUpstream:DistributionRoutingRuleUpstream": {
            "properties": {
                "caching": {
                    "type": "boolean",
                    "description": "Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.\n"
                },
                "geoRestrictions": {
                    "$ref": "#/types/ionoscloud:cdn/DistributionRoutingRuleUpstreamGeoRestrictions:DistributionRoutingRuleUpstreamGeoRestrictions"
                },
                "host": {
                    "type": "string",
                    "description": "The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.\n"
                },
                "rateLimitClass": {
                    "type": "string",
                    "description": "Rate limit class that will be applied to limit the number of incoming requests per IP.\n"
                },
                "sniMode": {
                    "type": "string",
                    "description": "The SNI (Server Name Indication) mode of the upstream host. It supports two modes: 'distribution' and 'origin', for more information about these modes please check the resource docs.\n"
                },
                "waf": {
                    "type": "boolean",
                    "description": "Enable or disable WAF to protect the upstream host.\n"
                }
            },
            "type": "object",
            "required": [
                "caching",
                "host",
                "rateLimitClass",
                "sniMode",
                "waf"
            ]
        },
        "ionoscloud:cdn/DistributionRoutingRuleUpstreamGeoRestrictions:DistributionRoutingRuleUpstreamGeoRestrictions": {
            "properties": {
                "allowLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blockLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "ionoscloud:cdn/getDistributionRoutingRule:getDistributionRoutingRule": {
            "properties": {
                "prefix": {
                    "type": "string",
                    "description": "The prefix of the routing rule.\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "The scheme of the routing rule.\n"
                },
                "upstreams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:cdn/getDistributionRoutingRuleUpstream:getDistributionRoutingRuleUpstream"
                    }
                }
            },
            "type": "object",
            "required": [
                "prefix",
                "scheme",
                "upstreams"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:cdn/getDistributionRoutingRuleUpstream:getDistributionRoutingRuleUpstream": {
            "properties": {
                "caching": {
                    "type": "boolean",
                    "description": "Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.\n"
                },
                "geoRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:cdn/getDistributionRoutingRuleUpstreamGeoRestriction:getDistributionRoutingRuleUpstreamGeoRestriction"
                    }
                },
                "host": {
                    "type": "string",
                    "description": "The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.\n"
                },
                "rateLimitClass": {
                    "type": "string",
                    "description": "Rate limit class that will be applied to limit the number of incoming requests per IP.\n"
                },
                "sniMode": {
                    "type": "string",
                    "description": "The SNI (Server Name Indication) mode of the upstream host. It supports two modes: 'distribution' and 'origin', for more information about these modes please check the data source docs.\n"
                },
                "waf": {
                    "type": "boolean",
                    "description": "Enable or disable WAF to protect the upstream host.\n"
                }
            },
            "type": "object",
            "required": [
                "caching",
                "geoRestrictions",
                "host",
                "rateLimitClass",
                "sniMode",
                "waf"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:cdn/getDistributionRoutingRuleUpstreamGeoRestriction:getDistributionRoutingRuleUpstreamGeoRestriction": {
            "properties": {
                "allowLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blockLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "allowLists",
                "blockLists"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:cert/AutoCertificateProviderExternalAccountBinding:AutoCertificateProviderExternalAccountBinding": {
            "properties": {
                "keyId": {
                    "type": "string",
                    "description": "The key ID of the external account binding\n",
                    "willReplaceOnChanges": true
                },
                "keySecret": {
                    "type": "string",
                    "description": "The secret of the external account binding\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "keyId",
                "keySecret"
            ]
        },
        "ionoscloud:cert/getAutoCertificateProviderExternalAccountBinding:getAutoCertificateProviderExternalAccountBinding": {
            "properties": {
                "keyId": {
                    "type": "string",
                    "description": "The key ID of the external account binding\n"
                }
            },
            "type": "object",
            "required": [
                "keyId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/CrossconnectConnectableDatacenter:CrossconnectConnectableDatacenter": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The UUID of the connectable datacenter\n"
                },
                "location": {
                    "type": "string",
                    "description": "The physical location of the connectable datacenter\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the connectable datacenter\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "location",
                        "name"
                    ]
                }
            }
        },
        "ionoscloud:compute/CrossconnectPeer:CrossconnectPeer": {
            "properties": {
                "datacenterId": {
                    "type": "string",
                    "description": "The id of the cross-connected datacenter\n"
                },
                "datacenterName": {
                    "type": "string",
                    "description": "The name of the cross-connected datacenter\n"
                },
                "lanId": {
                    "type": "string",
                    "description": "The id of the cross-connected LAN\n"
                },
                "lanName": {
                    "type": "string",
                    "description": "The name of the cross-connected LAN\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the cross-connected datacenter\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "datacenterId",
                        "datacenterName",
                        "lanId",
                        "lanName",
                        "location"
                    ]
                }
            }
        },
        "ionoscloud:compute/CubeServerNic:CubeServerNic": {
            "properties": {
                "deviceNumber": {
                    "type": "integer"
                },
                "dhcp": {
                    "type": "boolean"
                },
                "dhcpv6": {
                    "type": "boolean",
                    "description": "Indicates whether this NIC receives an IPv6 address through DHCP.\n"
                },
                "firewall": {
                    "$ref": "#/types/ionoscloud:compute/CubeServerNicFirewall:CubeServerNicFirewall"
                },
                "firewallActive": {
                    "type": "boolean"
                },
                "firewallType": {
                    "type": "string"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipv6CidrBlock": {
                    "type": "string",
                    "description": "IPv6 CIDR block assigned to the NIC.\n"
                },
                "ipv6Ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection for IPv6 addresses assigned to a nic. Explicitly assigned IPv6 addresses need to come from inside the IPv6 CIDR block assigned to the nic.\n"
                },
                "lan": {
                    "type": "integer"
                },
                "mac": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Security Group IDs for the NIC\n"
                }
            },
            "type": "object",
            "required": [
                "lan"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deviceNumber",
                        "firewallType",
                        "ips",
                        "ipv6CidrBlock",
                        "ipv6Ips",
                        "lan",
                        "mac",
                        "pciSlot"
                    ]
                }
            }
        },
        "ionoscloud:compute/CubeServerNicFirewall:CubeServerNicFirewall": {
            "properties": {
                "icmpCode": {
                    "type": "string"
                },
                "icmpType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "portRangeEnd": {
                    "type": "integer"
                },
                "portRangeStart": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "sourceMac": {
                    "type": "string"
                },
                "targetIp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "protocol",
                        "type"
                    ]
                }
            }
        },
        "ionoscloud:compute/CubeServerVolume:CubeServerVolume": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "backupUnitId": {
                    "type": "string",
                    "description": "The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' in conjunction with this property.\n",
                    "willReplaceOnChanges": true
                },
                "bootServer": {
                    "type": "string",
                    "description": "The UUID of the attached server.\n"
                },
                "bus": {
                    "type": "string"
                },
                "cpuHotPlug": {
                    "type": "boolean"
                },
                "deviceNumber": {
                    "type": "integer"
                },
                "discVirtioHotPlug": {
                    "type": "boolean"
                },
                "discVirtioHotUnplug": {
                    "type": "boolean"
                },
                "diskType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "imagePassword": {
                    "type": "string",
                    "deprecationMessage": "Please use image_password under server level"
                },
                "licenceType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicHotPlug": {
                    "type": "boolean"
                },
                "nicHotUnplug": {
                    "type": "boolean"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "ramHotPlug": {
                    "type": "boolean"
                },
                "sshKeyPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "Please use ssh_key_path under server level"
                },
                "userData": {
                    "type": "string",
                    "description": "The cloud-init configuration for the volume as base64 encoded string. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' that has cloud-init compatibility in conjunction with this property.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "diskType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "availabilityZone",
                        "backupUnitId",
                        "bootServer",
                        "bus",
                        "cpuHotPlug",
                        "deviceNumber",
                        "discVirtioHotPlug",
                        "discVirtioHotUnplug",
                        "diskType",
                        "licenceType",
                        "nicHotPlug",
                        "nicHotUnplug",
                        "pciSlot",
                        "ramHotPlug",
                        "sshKeyPaths",
                        "userData"
                    ]
                }
            }
        },
        "ionoscloud:compute/DatacenterCpuArchitecture:DatacenterCpuArchitecture": {
            "properties": {
                "cpuFamily": {
                    "type": "string"
                },
                "maxCores": {
                    "type": "integer"
                },
                "maxRam": {
                    "type": "integer"
                },
                "vendor": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cpuFamily",
                        "maxCores",
                        "maxRam",
                        "vendor"
                    ]
                }
            }
        },
        "ionoscloud:compute/GroupUser:GroupUser": {
            "properties": {
                "administrator": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "forceSecAuth": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "administrator",
                        "email",
                        "firstName",
                        "forceSecAuth",
                        "id",
                        "lastName",
                        "password"
                    ]
                }
            }
        },
        "ionoscloud:compute/IPBlockIpConsumer:IPBlockIpConsumer": {
            "properties": {
                "datacenterId": {
                    "type": "string"
                },
                "datacenterName": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "k8sClusterUuid": {
                    "type": "string"
                },
                "k8sNodepoolUuid": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "nicId": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string"
                },
                "serverName": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "datacenterId",
                        "datacenterName",
                        "ip",
                        "k8sClusterUuid",
                        "k8sNodepoolUuid",
                        "mac",
                        "nicId",
                        "serverId",
                        "serverName"
                    ]
                }
            }
        },
        "ionoscloud:compute/LanIpFailover:LanIpFailover": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "nicUuid": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ip",
                        "nicUuid"
                    ]
                }
            }
        },
        "ionoscloud:compute/NatGatewayLan:NatGatewayLan": {
            "properties": {
                "gatewayIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Id for the LAN connected to the NAT gateway\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "gatewayIps",
                        "id"
                    ]
                }
            }
        },
        "ionoscloud:compute/NatGatewayRuleTargetPortRange:NatGatewayRuleTargetPortRange": {
            "properties": {
                "end": {
                    "type": "integer",
                    "description": "Target port range end associated with the NAT gateway rule.\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Target port range start associated with the NAT gateway rule.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "end",
                        "start"
                    ]
                }
            }
        },
        "ionoscloud:compute/NicFlowlog:NicFlowlog": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: ACCEPTED, REJECTED, ALL. Immutable, forces re-recreation of the nic resource.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "The bucket name of an existing IONOS Object Storage bucket. Immutable, forces re-recreation of the nic resource.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-recreation of the nic resource.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The resource's unique identifier.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "bucket",
                "direction",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "action",
                        "bucket",
                        "direction",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "ionoscloud:compute/ServerLabel:ServerLabel": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "ionoscloud:compute/ServerNic:ServerNic": {
            "properties": {
                "deviceNumber": {
                    "type": "integer"
                },
                "dhcp": {
                    "type": "boolean"
                },
                "dhcpv6": {
                    "type": "boolean",
                    "description": "Indicates whether this NIC receives an IPv6 address through DHCP.\n"
                },
                "firewallActive": {
                    "type": "boolean"
                },
                "firewallType": {
                    "type": "string"
                },
                "firewalls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/ServerNicFirewall:ServerNicFirewall"
                    },
                    "description": "Firewall rules created in the server resource. The rules can also be created as separate resources outside the server resource\n"
                },
                "id": {
                    "type": "string"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of IP addresses assigned to a nic. Explicitly assigned public IPs need to come from reserved IP blocks, Passing value null or empty array will assign an IP address automatically.\n"
                },
                "ipv6CidrBlock": {
                    "type": "string",
                    "description": "IPv6 CIDR block assigned to the NIC.\n"
                },
                "ipv6Ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection for IPv6 addresses assigned to a nic. Explicitly assigned IPv6 addresses need to come from inside the IPv6 CIDR block assigned to the nic.\n"
                },
                "lan": {
                    "type": "integer"
                },
                "mac": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Security Group IDs for the NIC\n"
                }
            },
            "type": "object",
            "required": [
                "lan"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deviceNumber",
                        "firewallType",
                        "id",
                        "ips",
                        "ipv6CidrBlock",
                        "ipv6Ips",
                        "lan",
                        "mac",
                        "pciSlot"
                    ]
                }
            }
        },
        "ionoscloud:compute/ServerNicFirewall:ServerNicFirewall": {
            "properties": {
                "icmpCode": {
                    "type": "string"
                },
                "icmpType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "portRangeEnd": {
                    "type": "integer"
                },
                "portRangeStart": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "sourceMac": {
                    "type": "string"
                },
                "targetIp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "protocol",
                        "type"
                    ]
                }
            }
        },
        "ionoscloud:compute/ServerVolume:ServerVolume": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "backupUnitId": {
                    "type": "string",
                    "description": "The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' in conjunction with this property.\n",
                    "willReplaceOnChanges": true
                },
                "bootServer": {
                    "type": "string",
                    "description": "The UUID of the attached server.\n"
                },
                "bus": {
                    "type": "string"
                },
                "cpuHotPlug": {
                    "type": "boolean"
                },
                "deviceNumber": {
                    "type": "integer"
                },
                "discVirtioHotPlug": {
                    "type": "boolean"
                },
                "discVirtioHotUnplug": {
                    "type": "boolean"
                },
                "diskType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "imagePassword": {
                    "type": "string",
                    "deprecationMessage": "Please use image_password under server level"
                },
                "licenceType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicHotPlug": {
                    "type": "boolean"
                },
                "nicHotUnplug": {
                    "type": "boolean"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "ramHotPlug": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the volume in GB.\n"
                },
                "sshKeyPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation.\n",
                    "deprecationMessage": "Please use ssh_key_path under server level"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation.\n",
                    "deprecationMessage": "Please use ssh_keys under server level",
                    "willReplaceOnChanges": true
                },
                "userData": {
                    "type": "string",
                    "description": "The cloud-init configuration for the volume as base64 encoded string. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' that has cloud-init compatibility in conjunction with this property.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "diskType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "availabilityZone",
                        "backupUnitId",
                        "bootServer",
                        "bus",
                        "cpuHotPlug",
                        "deviceNumber",
                        "discVirtioHotPlug",
                        "discVirtioHotUnplug",
                        "diskType",
                        "licenceType",
                        "nicHotPlug",
                        "nicHotUnplug",
                        "pciSlot",
                        "ramHotPlug",
                        "size",
                        "sshKeys",
                        "userData"
                    ]
                }
            }
        },
        "ionoscloud:compute/TargetGroupHealthCheck:TargetGroupHealthCheck": {
            "properties": {
                "checkInterval": {
                    "type": "integer",
                    "description": "The interval in milliseconds between consecutive health checks; default is 2000.\n"
                },
                "checkTimeout": {
                    "type": "integer",
                    "description": "The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.\n"
                },
                "retries": {
                    "type": "integer",
                    "description": "The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "checkInterval",
                        "checkTimeout",
                        "retries"
                    ]
                }
            }
        },
        "ionoscloud:compute/TargetGroupHttpHealthCheck:TargetGroupHttpHealthCheck": {
            "properties": {
                "matchType": {
                    "type": "string"
                },
                "method": {
                    "type": "string",
                    "description": "The method for the HTTP health check.\n"
                },
                "negate": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string",
                    "description": "The path (destination URL) for the HTTP health check request; the default is /.\n"
                },
                "regex": {
                    "type": "boolean"
                },
                "response": {
                    "type": "string",
                    "description": "The response returned by the request, depending on the match type.\n"
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "response"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "matchType",
                        "method",
                        "path",
                        "response"
                    ]
                }
            }
        },
        "ionoscloud:compute/TargetGroupTarget:TargetGroupTarget": {
            "properties": {
                "healthCheckEnabled": {
                    "type": "boolean",
                    "description": "Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The IP of the balanced target VM.\n"
                },
                "maintenanceEnabled": {
                    "type": "boolean",
                    "description": "Maintenance mode prevents the target from receiving balanced traffic.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the balanced target service; valid range is 1 to 65535.\n"
                },
                "proxyProtocol": {
                    "type": "string",
                    "description": "Proxy protocol version\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.\n"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "port",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "healthCheckEnabled",
                        "ip",
                        "port",
                        "weight"
                    ]
                }
            }
        },
        "ionoscloud:compute/VCPUServerLabel:VCPUServerLabel": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "ionoscloud:compute/VCPUServerNic:VCPUServerNic": {
            "properties": {
                "deviceNumber": {
                    "type": "integer"
                },
                "dhcp": {
                    "type": "boolean"
                },
                "dhcpv6": {
                    "type": "boolean"
                },
                "firewallActive": {
                    "type": "boolean"
                },
                "firewallType": {
                    "type": "string"
                },
                "firewalls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/VCPUServerNicFirewall:VCPUServerNicFirewall"
                    },
                    "description": "Firewall rules created in the server resource. The rules can also be created as separate resources outside the server resource\n"
                },
                "id": {
                    "type": "string"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of IP addresses assigned to a nic. Explicitly assigned public IPs need to come from reserved IP blocks, Passing value null or empty array will assign an IP address automatically.\n"
                },
                "ipv6CidrBlock": {
                    "type": "string"
                },
                "ipv6Ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lan": {
                    "type": "integer"
                },
                "mac": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Security Group IDs for the NIC\n"
                }
            },
            "type": "object",
            "required": [
                "lan"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deviceNumber",
                        "firewallType",
                        "id",
                        "ips",
                        "ipv6CidrBlock",
                        "ipv6Ips",
                        "lan",
                        "mac",
                        "pciSlot"
                    ]
                }
            }
        },
        "ionoscloud:compute/VCPUServerNicFirewall:VCPUServerNicFirewall": {
            "properties": {
                "icmpCode": {
                    "type": "string"
                },
                "icmpType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "portRangeEnd": {
                    "type": "integer"
                },
                "portRangeStart": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "sourceMac": {
                    "type": "string"
                },
                "targetIp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "protocol",
                        "type"
                    ]
                }
            }
        },
        "ionoscloud:compute/VCPUServerVolume:VCPUServerVolume": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "backupUnitId": {
                    "type": "string",
                    "description": "The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' in conjunction with this property.\n",
                    "willReplaceOnChanges": true
                },
                "bootServer": {
                    "type": "string",
                    "description": "The UUID of the attached server.\n"
                },
                "bus": {
                    "type": "string"
                },
                "cpuHotPlug": {
                    "type": "boolean"
                },
                "deviceNumber": {
                    "type": "integer"
                },
                "discVirtioHotPlug": {
                    "type": "boolean"
                },
                "discVirtioHotUnplug": {
                    "type": "boolean"
                },
                "diskType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "licenceType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicHotPlug": {
                    "type": "boolean"
                },
                "nicHotUnplug": {
                    "type": "boolean"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "ramHotPlug": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the volume in GB.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "The cloud-init configuration for the volume as base64 encoded string. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' that has cloud-init compatibility in conjunction with this property.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "diskType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "availabilityZone",
                        "backupUnitId",
                        "bootServer",
                        "bus",
                        "cpuHotPlug",
                        "deviceNumber",
                        "discVirtioHotPlug",
                        "discVirtioHotUnplug",
                        "diskType",
                        "licenceType",
                        "nicHotPlug",
                        "nicHotUnplug",
                        "pciSlot",
                        "ramHotPlug",
                        "size",
                        "userData"
                    ]
                }
            }
        },
        "ionoscloud:compute/getCrossconnectConnectableDatacenter:getCrossconnectConnectableDatacenter": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "location",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getCrossconnectPeer:getCrossconnectPeer": {
            "properties": {
                "datacenterId": {
                    "type": "string",
                    "description": "The id of the cross-connected VDC\n"
                },
                "datacenterName": {
                    "type": "string",
                    "description": "The name of the cross-connected VDC\n"
                },
                "lanId": {
                    "type": "string",
                    "description": "The id of the cross-connected LAN\n"
                },
                "lanName": {
                    "type": "string",
                    "description": "The name of the cross-connected LAN\n"
                },
                "location": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "datacenterName",
                "lanId",
                "lanName",
                "location"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getCubeServerCdrom:getCubeServerCdrom": {
            "properties": {
                "cloudInit": {
                    "type": "string"
                },
                "cpuHotPlug": {
                    "type": "boolean"
                },
                "cpuHotUnplug": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "discScsiHotPlug": {
                    "type": "boolean"
                },
                "discScsiHotUnplug": {
                    "type": "boolean"
                },
                "discVirtioHotPlug": {
                    "type": "boolean"
                },
                "discVirtioHotUnplug": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "imageAliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "imageType": {
                    "type": "string"
                },
                "licenceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicHotPlug": {
                    "type": "boolean"
                },
                "nicHotUnplug": {
                    "type": "boolean"
                },
                "public": {
                    "type": "boolean"
                },
                "ramHotPlug": {
                    "type": "boolean"
                },
                "ramHotUnplug": {
                    "type": "boolean"
                },
                "size": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "cloudInit",
                "cpuHotPlug",
                "cpuHotUnplug",
                "description",
                "discScsiHotPlug",
                "discScsiHotUnplug",
                "discVirtioHotPlug",
                "discVirtioHotUnplug",
                "id",
                "imageAliases",
                "imageType",
                "licenceType",
                "location",
                "name",
                "nicHotPlug",
                "nicHotUnplug",
                "public",
                "ramHotPlug",
                "ramHotUnplug",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getCubeServerNic:getCubeServerNic": {
            "properties": {
                "deviceNumber": {
                    "type": "integer"
                },
                "dhcp": {
                    "type": "boolean"
                },
                "dhcpv6": {
                    "type": "boolean"
                },
                "firewallActive": {
                    "type": "boolean"
                },
                "firewallRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/getCubeServerNicFirewallRule:getCubeServerNicFirewallRule"
                    }
                },
                "firewallType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipv6CidrBlock": {
                    "type": "string"
                },
                "ipv6Ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lan": {
                    "type": "integer"
                },
                "mac": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "deviceNumber",
                "dhcp",
                "firewallActive",
                "firewallRules",
                "firewallType",
                "id",
                "ips",
                "ipv6CidrBlock",
                "ipv6Ips",
                "lan",
                "mac",
                "name",
                "pciSlot",
                "securityGroupsIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getCubeServerNicFirewallRule:getCubeServerNicFirewallRule": {
            "properties": {
                "icmpCode": {
                    "type": "integer"
                },
                "icmpType": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "portRangeEnd": {
                    "type": "integer"
                },
                "portRangeStart": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "sourceMac": {
                    "type": "string"
                },
                "targetIp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "icmpCode",
                "icmpType",
                "id",
                "name",
                "portRangeEnd",
                "portRangeStart",
                "protocol",
                "sourceIp",
                "sourceMac",
                "targetIp",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getCubeServerVolume:getCubeServerVolume": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "backupUnitId": {
                    "type": "string"
                },
                "bootServer": {
                    "type": "string",
                    "description": "The UUID of the attached server.\n"
                },
                "bus": {
                    "type": "string"
                },
                "cpuHotPlug": {
                    "type": "boolean"
                },
                "deviceNumber": {
                    "type": "integer"
                },
                "discVirtioHotPlug": {
                    "type": "boolean"
                },
                "discVirtioHotUnplug": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "imagePassword": {
                    "type": "string"
                },
                "licenceType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicHotPlug": {
                    "type": "boolean"
                },
                "nicHotUnplug": {
                    "type": "boolean"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "ramHotPlug": {
                    "type": "boolean"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "userData": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "backupUnitId",
                "bootServer",
                "bus",
                "cpuHotPlug",
                "deviceNumber",
                "discVirtioHotPlug",
                "discVirtioHotUnplug",
                "id",
                "imageName",
                "imagePassword",
                "licenceType",
                "name",
                "nicHotPlug",
                "nicHotUnplug",
                "pciSlot",
                "ramHotPlug",
                "sshKeys",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getDatacenterCpuArchitecture:getDatacenterCpuArchitecture": {
            "properties": {
                "cpuFamily": {
                    "type": "string"
                },
                "maxCores": {
                    "type": "integer"
                },
                "maxRam": {
                    "type": "integer"
                },
                "vendor": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cpuFamily",
                "maxCores",
                "maxRam",
                "vendor"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getGroupUser:getGroupUser": {
            "properties": {
                "administrator": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "forceSecAuth": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "administrator",
                "email",
                "firstName",
                "forceSecAuth",
                "id",
                "lastName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getIPBlockIpConsumer:getIPBlockIpConsumer": {
            "properties": {
                "datacenterId": {
                    "type": "string"
                },
                "datacenterName": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "k8sClusterUuid": {
                    "type": "string"
                },
                "k8sNodepoolUuid": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "nicId": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string"
                },
                "serverName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "datacenterName",
                "ip",
                "k8sClusterUuid",
                "k8sNodepoolUuid",
                "mac",
                "nicId",
                "serverId",
                "serverName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getLanIpFailover:getLanIpFailover": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "nicUuid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "nicUuid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getLocationCpuArchitecture:getLocationCpuArchitecture": {
            "properties": {
                "cpuFamily": {
                    "type": "string"
                },
                "maxCores": {
                    "type": "integer"
                },
                "maxRam": {
                    "type": "integer"
                },
                "vendor": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cpuFamily",
                "maxCores",
                "maxRam",
                "vendor"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getNatGatewayLan:getNatGatewayLan": {
            "properties": {
                "gatewayIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of gateway IP addresses of the NAT gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Id for the LAN connected to the NAT gateway\n"
                }
            },
            "type": "object",
            "required": [
                "gatewayIps",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getNatGatewayRuleTargetPortRange:getNatGatewayRuleTargetPortRange": {
            "properties": {
                "end": {
                    "type": "integer",
                    "description": "Target port range end associated with the NAT gateway rule.\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Target port range start associated with the NAT gateway rule.\n"
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getNicFlowlog:getNicFlowlog": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: ACCEPTED, REJECTED, ALL.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "The bucket name of an existing IONOS Object Storage bucket.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The resource's unique identifier.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "bucket",
                "direction",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getServerCdrom:getServerCdrom": {
            "properties": {
                "cloudInit": {
                    "type": "string"
                },
                "cpuHotPlug": {
                    "type": "boolean"
                },
                "cpuHotUnplug": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "discScsiHotPlug": {
                    "type": "boolean"
                },
                "discScsiHotUnplug": {
                    "type": "boolean"
                },
                "discVirtioHotPlug": {
                    "type": "boolean"
                },
                "discVirtioHotUnplug": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "imageAliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "imageType": {
                    "type": "string"
                },
                "licenceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicHotPlug": {
                    "type": "boolean"
                },
                "nicHotUnplug": {
                    "type": "boolean"
                },
                "public": {
                    "type": "boolean"
                },
                "ramHotPlug": {
                    "type": "boolean"
                },
                "ramHotUnplug": {
                    "type": "boolean"
                },
                "size": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "cloudInit",
                "cpuHotPlug",
                "cpuHotUnplug",
                "description",
                "discScsiHotPlug",
                "discScsiHotUnplug",
                "discVirtioHotPlug",
                "discVirtioHotUnplug",
                "id",
                "imageAliases",
                "imageType",
                "licenceType",
                "location",
                "name",
                "nicHotPlug",
                "nicHotUnplug",
                "public",
                "ramHotPlug",
                "ramHotUnplug",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getServerLabel:getServerLabel": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getServerNic:getServerNic": {
            "properties": {
                "deviceNumber": {
                    "type": "integer"
                },
                "dhcp": {
                    "type": "boolean"
                },
                "dhcpv6": {
                    "type": "boolean"
                },
                "firewallActive": {
                    "type": "boolean"
                },
                "firewallRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/getServerNicFirewallRule:getServerNicFirewallRule"
                    }
                },
                "firewallType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipv6CidrBlock": {
                    "type": "string"
                },
                "ipv6Ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lan": {
                    "type": "integer"
                },
                "mac": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "deviceNumber",
                "dhcp",
                "firewallActive",
                "firewallRules",
                "firewallType",
                "id",
                "ips",
                "ipv6CidrBlock",
                "ipv6Ips",
                "lan",
                "mac",
                "name",
                "pciSlot",
                "securityGroupsIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getServerNicFirewallRule:getServerNicFirewallRule": {
            "properties": {
                "icmpCode": {
                    "type": "integer"
                },
                "icmpType": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "portRangeEnd": {
                    "type": "integer"
                },
                "portRangeStart": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "sourceMac": {
                    "type": "string"
                },
                "targetIp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "icmpCode",
                "icmpType",
                "id",
                "name",
                "portRangeEnd",
                "portRangeStart",
                "protocol",
                "sourceIp",
                "sourceMac",
                "targetIp",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getServerVolume:getServerVolume": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "backupUnitId": {
                    "type": "string"
                },
                "bootServer": {
                    "type": "string",
                    "description": "The UUID of the attached server.\n"
                },
                "bus": {
                    "type": "string"
                },
                "cpuHotPlug": {
                    "type": "boolean"
                },
                "deviceNumber": {
                    "type": "integer"
                },
                "discVirtioHotPlug": {
                    "type": "boolean"
                },
                "discVirtioHotUnplug": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "imagePassword": {
                    "type": "string"
                },
                "licenceType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicHotPlug": {
                    "type": "boolean"
                },
                "nicHotUnplug": {
                    "type": "boolean"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "ramHotPlug": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "userData": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "backupUnitId",
                "bootServer",
                "bus",
                "cpuHotPlug",
                "deviceNumber",
                "discVirtioHotPlug",
                "discVirtioHotUnplug",
                "id",
                "imageName",
                "imagePassword",
                "licenceType",
                "name",
                "nicHotPlug",
                "nicHotUnplug",
                "pciSlot",
                "ramHotPlug",
                "size",
                "sshKeys",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getServersFilter:getServersFilter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "ionoscloud:compute/getServersServer:getServersServer": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "bootCdrom": {
                    "type": "string"
                },
                "bootImage": {
                    "type": "string"
                },
                "bootVolume": {
                    "type": "string"
                },
                "cdroms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/getServersServerCdrom:getServersServerCdrom"
                    }
                },
                "cores": {
                    "type": "integer"
                },
                "cpuFamily": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID of the server.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/getServersServerLabel:getServersServerLabel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/getServersServerNic:getServersServerNic"
                    }
                },
                "ram": {
                    "type": "integer"
                },
                "templateUuid": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vmState": {
                    "type": "string"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/getServersServerVolume:getServersServerVolume"
                    }
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "bootCdrom",
                "bootImage",
                "bootVolume",
                "cdroms",
                "cores",
                "cpuFamily",
                "hostname",
                "id",
                "labels",
                "nics",
                "ram",
                "token",
                "type",
                "vmState",
                "volumes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getServersServerCdrom:getServersServerCdrom": {
            "properties": {
                "cloudInit": {
                    "type": "string"
                },
                "cpuHotPlug": {
                    "type": "boolean"
                },
                "cpuHotUnplug": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "discScsiHotPlug": {
                    "type": "boolean"
                },
                "discScsiHotUnplug": {
                    "type": "boolean"
                },
                "discVirtioHotPlug": {
                    "type": "boolean"
                },
                "discVirtioHotUnplug": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "imageAliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "imageType": {
                    "type": "string"
                },
                "licenceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicHotPlug": {
                    "type": "boolean"
                },
                "nicHotUnplug": {
                    "type": "boolean"
                },
                "public": {
                    "type": "boolean"
                },
                "ramHotPlug": {
                    "type": "boolean"
                },
                "ramHotUnplug": {
                    "type": "boolean"
                },
                "size": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "cloudInit",
                "cpuHotPlug",
                "cpuHotUnplug",
                "description",
                "discScsiHotPlug",
                "discScsiHotUnplug",
                "discVirtioHotPlug",
                "discVirtioHotUnplug",
                "id",
                "imageAliases",
                "imageType",
                "licenceType",
                "location",
                "name",
                "nicHotPlug",
                "nicHotUnplug",
                "public",
                "ramHotPlug",
                "ramHotUnplug",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getServersServerLabel:getServersServerLabel": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getServersServerNic:getServersServerNic": {
            "properties": {
                "deviceNumber": {
                    "type": "integer"
                },
                "dhcp": {
                    "type": "boolean"
                },
                "dhcpv6": {
                    "type": "boolean"
                },
                "firewallActive": {
                    "type": "boolean"
                },
                "firewallRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/getServersServerNicFirewallRule:getServersServerNicFirewallRule"
                    }
                },
                "firewallType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipv6CidrBlock": {
                    "type": "string"
                },
                "ipv6Ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lan": {
                    "type": "integer"
                },
                "mac": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "deviceNumber",
                "dhcp",
                "firewallActive",
                "firewallRules",
                "firewallType",
                "id",
                "ips",
                "ipv6CidrBlock",
                "ipv6Ips",
                "lan",
                "mac",
                "name",
                "pciSlot",
                "securityGroupsIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getServersServerNicFirewallRule:getServersServerNicFirewallRule": {
            "properties": {
                "icmpCode": {
                    "type": "integer"
                },
                "icmpType": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "portRangeEnd": {
                    "type": "integer"
                },
                "portRangeStart": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "sourceMac": {
                    "type": "string"
                },
                "targetIp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "icmpCode",
                "icmpType",
                "id",
                "name",
                "portRangeEnd",
                "portRangeStart",
                "protocol",
                "sourceIp",
                "sourceMac",
                "targetIp",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getServersServerVolume:getServersServerVolume": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "backupUnitId": {
                    "type": "string"
                },
                "bootServer": {
                    "type": "string",
                    "description": "The UUID of the attached server.\n"
                },
                "bus": {
                    "type": "string"
                },
                "cpuHotPlug": {
                    "type": "boolean"
                },
                "deviceNumber": {
                    "type": "integer"
                },
                "discVirtioHotPlug": {
                    "type": "boolean"
                },
                "discVirtioHotUnplug": {
                    "type": "boolean"
                },
                "diskType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "imagePassword": {
                    "type": "string"
                },
                "licenceType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicHotPlug": {
                    "type": "boolean"
                },
                "nicHotUnplug": {
                    "type": "boolean"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "ramHotPlug": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userData": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "backupUnitId",
                "bootServer",
                "bus",
                "cpuHotPlug",
                "deviceNumber",
                "discVirtioHotPlug",
                "discVirtioHotUnplug",
                "diskType",
                "id",
                "imageName",
                "imagePassword",
                "licenceType",
                "name",
                "nicHotPlug",
                "nicHotUnplug",
                "pciSlot",
                "ramHotPlug",
                "size",
                "sshKeys"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getTargetGroupHealthCheck:getTargetGroupHealthCheck": {
            "properties": {
                "checkInterval": {
                    "type": "integer",
                    "description": "The interval in milliseconds between consecutive health checks; default is 2000.\n"
                },
                "checkTimeout": {
                    "type": "integer",
                    "description": "The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.\n"
                },
                "retries": {
                    "type": "integer",
                    "description": "The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection.\n"
                }
            },
            "type": "object",
            "required": [
                "checkInterval",
                "checkTimeout",
                "retries"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getTargetGroupHttpHealthCheck:getTargetGroupHttpHealthCheck": {
            "properties": {
                "matchType": {
                    "type": "string"
                },
                "method": {
                    "type": "string",
                    "description": "The method for the HTTP health check.\n"
                },
                "negate": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string",
                    "description": "The path (destination URL) for the HTTP health check request; the default is /.\n"
                },
                "regex": {
                    "type": "boolean"
                },
                "response": {
                    "type": "string",
                    "description": "The response returned by the request, depending on the match type.\n"
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "method",
                "negate",
                "path",
                "regex",
                "response"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getTargetGroupTarget:getTargetGroupTarget": {
            "properties": {
                "healthCheckEnabled": {
                    "type": "boolean",
                    "description": "Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True.\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The IP of the balanced target VM.\n"
                },
                "maintenanceEnabled": {
                    "type": "boolean",
                    "description": "Maintenance mode prevents the target from receiving balanced traffic.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the balanced target service; valid range is 1 to 65535.\n"
                },
                "proxyProtocol": {
                    "type": "string",
                    "description": "Proxy protocol version\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.\n"
                }
            },
            "type": "object",
            "required": [
                "healthCheckEnabled",
                "ip",
                "maintenanceEnabled",
                "port",
                "proxyProtocol",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getUserGroup:getUserGroup": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getVCPUServerCdrom:getVCPUServerCdrom": {
            "properties": {
                "cloudInit": {
                    "type": "string"
                },
                "cpuHotPlug": {
                    "type": "boolean"
                },
                "cpuHotUnplug": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "discScsiHotPlug": {
                    "type": "boolean"
                },
                "discScsiHotUnplug": {
                    "type": "boolean"
                },
                "discVirtioHotPlug": {
                    "type": "boolean"
                },
                "discVirtioHotUnplug": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "imageAliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "imageType": {
                    "type": "string"
                },
                "licenceType": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicHotPlug": {
                    "type": "boolean"
                },
                "nicHotUnplug": {
                    "type": "boolean"
                },
                "public": {
                    "type": "boolean"
                },
                "ramHotPlug": {
                    "type": "boolean"
                },
                "ramHotUnplug": {
                    "type": "boolean"
                },
                "size": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "cloudInit",
                "cpuHotPlug",
                "cpuHotUnplug",
                "description",
                "discScsiHotPlug",
                "discScsiHotUnplug",
                "discVirtioHotPlug",
                "discVirtioHotUnplug",
                "id",
                "imageAliases",
                "imageType",
                "licenceType",
                "location",
                "name",
                "nicHotPlug",
                "nicHotUnplug",
                "public",
                "ramHotPlug",
                "ramHotUnplug",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getVCPUServerLabel:getVCPUServerLabel": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getVCPUServerNic:getVCPUServerNic": {
            "properties": {
                "deviceNumber": {
                    "type": "integer"
                },
                "dhcp": {
                    "type": "boolean"
                },
                "dhcpv6": {
                    "type": "boolean"
                },
                "firewallActive": {
                    "type": "boolean"
                },
                "firewallRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/getVCPUServerNicFirewallRule:getVCPUServerNicFirewallRule"
                    }
                },
                "firewallType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipv6CidrBlock": {
                    "type": "string"
                },
                "ipv6Ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lan": {
                    "type": "integer"
                },
                "mac": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "deviceNumber",
                "dhcp",
                "firewallActive",
                "firewallRules",
                "firewallType",
                "id",
                "ips",
                "ipv6CidrBlock",
                "ipv6Ips",
                "lan",
                "mac",
                "name",
                "pciSlot",
                "securityGroupsIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getVCPUServerNicFirewallRule:getVCPUServerNicFirewallRule": {
            "properties": {
                "icmpCode": {
                    "type": "integer"
                },
                "icmpType": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "portRangeEnd": {
                    "type": "integer"
                },
                "portRangeStart": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "sourceMac": {
                    "type": "string"
                },
                "targetIp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "icmpCode",
                "icmpType",
                "id",
                "name",
                "portRangeEnd",
                "portRangeStart",
                "protocol",
                "sourceIp",
                "sourceMac",
                "targetIp",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:compute/getVCPUServerVolume:getVCPUServerVolume": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "backupUnitId": {
                    "type": "string"
                },
                "bootServer": {
                    "type": "string",
                    "description": "The UUID of the attached server.\n"
                },
                "bus": {
                    "type": "string"
                },
                "cpuHotPlug": {
                    "type": "boolean"
                },
                "deviceNumber": {
                    "type": "integer"
                },
                "discVirtioHotPlug": {
                    "type": "boolean"
                },
                "discVirtioHotUnplug": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "imagePassword": {
                    "type": "string"
                },
                "licenceType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicHotPlug": {
                    "type": "boolean"
                },
                "nicHotUnplug": {
                    "type": "boolean"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "ramHotPlug": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "userData": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "backupUnitId",
                "bootServer",
                "bus",
                "cpuHotPlug",
                "deviceNumber",
                "discVirtioHotPlug",
                "discVirtioHotUnplug",
                "id",
                "imageName",
                "imagePassword",
                "licenceType",
                "name",
                "nicHotPlug",
                "nicHotUnplug",
                "pciSlot",
                "ramHotPlug",
                "size",
                "sshKeys",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:creg/RegistryFeatures:RegistryFeatures": {
            "properties": {
                "vulnerabilityScanning": {
                    "type": "boolean",
                    "description": "Enables vulnerability scanning for images in the container registry. Note: this feature can incur additional charges\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "vulnerabilityScanning"
                    ]
                }
            }
        },
        "ionoscloud:creg/RegistryGarbageCollectionSchedule:RegistryGarbageCollectionSchedule": {
            "properties": {
                "days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "time": {
                    "type": "string",
                    "description": "UTC time of day e.g. 01:00:00 - as defined by partial-time - RFC3339\n"
                }
            },
            "type": "object",
            "required": [
                "days",
                "time"
            ]
        },
        "ionoscloud:creg/RegistryStorageUsage:RegistryStorageUsage": {
            "properties": {
                "bytes": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bytes",
                        "updatedAt"
                    ]
                }
            }
        },
        "ionoscloud:creg/RegistryTokenCredential:RegistryTokenCredential": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "ionoscloud:creg/RegistryTokenScope:RegistryTokenScope": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Example: [\"pull\", \"push\", \"delete\"]\n"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "actions",
                "name",
                "type"
            ]
        },
        "ionoscloud:creg/getRegistryFeature:getRegistryFeature": {
            "properties": {
                "vulnerabilityScanning": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "vulnerabilityScanning"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:creg/getRegistryGarbageCollectionSchedule:getRegistryGarbageCollectionSchedule": {
            "properties": {
                "days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "time": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "days",
                "time"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:creg/getRegistryMaintenanceWindow:getRegistryMaintenanceWindow": {
            "properties": {
                "days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "time": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "days",
                "time"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:creg/getRegistryStorageUsage:getRegistryStorageUsage": {
            "properties": {
                "bytes": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bytes",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:creg/getRegistryTokenCredential:getRegistryTokenCredential": {
            "properties": {
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:creg/getRegistryTokenScope:getRegistryTokenScope": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "actions",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/InMemoryDBReplicaSetConnections:InMemoryDBReplicaSetConnections": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "The IP and subnet for your instance. Note the following unavailable IP ranges: 10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24\n",
                    "willReplaceOnChanges": true
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The datacenter to connect your instance to.\n",
                    "willReplaceOnChanges": true
                },
                "lanId": {
                    "type": "string",
                    "description": "The numeric LAN ID to connect your instance to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "datacenterId",
                "lanId"
            ]
        },
        "ionoscloud:dbaas/InMemoryDBReplicaSetCredentials:InMemoryDBReplicaSetCredentials": {
            "properties": {
                "hashedPassword": {
                    "$ref": "#/types/ionoscloud:dbaas/InMemoryDBReplicaSetCredentialsHashedPassword:InMemoryDBReplicaSetCredentialsHashedPassword",
                    "description": "The hashed password for a InMemoryDB user.\n"
                },
                "plainTextPassword": {
                    "type": "string",
                    "description": "The password for a InMemoryDB user.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "The username for the initial InMemoryDB user. Some system usernames are restricted (e.g. 'admin', 'standby').\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "username"
            ]
        },
        "ionoscloud:dbaas/InMemoryDBReplicaSetCredentialsHashedPassword:InMemoryDBReplicaSetCredentialsHashedPassword": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hash": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "hash"
            ]
        },
        "ionoscloud:dbaas/InMemoryDBReplicaSetMaintenanceWindow:InMemoryDBReplicaSetMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string",
                    "description": "The name of the week day.\n"
                },
                "time": {
                    "type": "string",
                    "description": "Start of the maintenance window in UTC time.\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ]
        },
        "ionoscloud:dbaas/InMemoryDBReplicaSetResources:InMemoryDBReplicaSetResources": {
            "properties": {
                "cores": {
                    "type": "integer",
                    "description": "The number of CPU cores per instance.\n"
                },
                "ram": {
                    "type": "integer",
                    "description": "The amount of memory per instance in gigabytes (GB).\n"
                },
                "storage": {
                    "type": "integer",
                    "description": "The size of the storage in GB. The size is derived from the amount of RAM and the persistence mode and is not configurable.\n"
                }
            },
            "type": "object",
            "required": [
                "cores",
                "ram"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cores",
                        "ram",
                        "storage"
                    ]
                }
            }
        },
        "ionoscloud:dbaas/MariaDBClusterConnections:MariaDBClusterConnections": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "The IP and subnet for your cluster.\n"
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The datacenter to connect your cluster to.\n"
                },
                "lanId": {
                    "type": "string",
                    "description": "The numeric LAN ID to connect your cluster to.\n"
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "datacenterId",
                "lanId"
            ]
        },
        "ionoscloud:dbaas/MariaDBClusterCredentials:MariaDBClusterCredentials": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "The password for a MariaDB user.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username for the initial MariaDB user. Some system usernames are restricted (e.g 'mariadb', 'admin', 'standby').\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "ionoscloud:dbaas/MariaDBClusterMaintenanceWindow:MariaDBClusterMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string",
                    "description": "The name of the week day.\n"
                },
                "time": {
                    "type": "string",
                    "description": "Start of the maintenance window in UTC time.\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ]
        },
        "ionoscloud:dbaas/MongoClusterBackup:MongoClusterBackup": {
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The location where the cluster backups will be stored. If not set, the backup is stored in the nearest location of the cluster. Examples: de, eu-sounth-2, eu-central-2\n"
                },
                "pointInTimeWindowHours": {
                    "type": "integer",
                    "description": "Number of hours in the past for which a point-in-time snapshot can be created.\n"
                },
                "snapshotIntervalHours": {
                    "type": "integer",
                    "description": "Number of hours between snapshots.\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:dbaas/MongoClusterBiConnector:MongoClusterBiConnector": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the BiConnector.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The host where this new BI Connector is installed.\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port number used when connecting to this new BI Connector.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "port"
                    ]
                }
            }
        },
        "ionoscloud:dbaas/MongoClusterConnections:MongoClusterConnections": {
            "properties": {
                "cidrLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of IPs and subnet for your cluster. Note the following unavailable IP ranges:10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24. example: [192.168.1.100/24, 192.168.1.101/24]\n"
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The datacenter to connect your cluster to.\n"
                },
                "lanId": {
                    "type": "string",
                    "description": "The LAN to connect your cluster to.\n"
                }
            },
            "type": "object",
            "required": [
                "cidrLists",
                "datacenterId",
                "lanId"
            ]
        },
        "ionoscloud:dbaas/MongoClusterMaintenanceWindow:MongoClusterMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ]
        },
        "ionoscloud:dbaas/MongoUserRole:MongoUserRole": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "description": "A list of mongodb user roles. Examples: read, readWrite, readAnyDatabase\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:dbaas/PSQLClusterConnectionPooler:PSQLClusterConnectionPooler": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "poolMode": {
                    "type": "string",
                    "description": "Represents different modes of connection pooling for the connection pooler\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "poolMode"
            ]
        },
        "ionoscloud:dbaas/PSQLClusterConnections:PSQLClusterConnections": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "The IP and subnet for the database.\n          Note the following unavailable IP ranges:\n          10.233.64.0/18\n          10.233.0.0/18\n          10.233.114.0/24\n"
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The datacenter to connect your cluster to.\n"
                },
                "lanId": {
                    "type": "string",
                    "description": "The LAN to connect your cluster to.\n"
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "datacenterId",
                "lanId"
            ]
        },
        "ionoscloud:dbaas/PSQLClusterCredentials:PSQLClusterCredentials": {
            "properties": {
                "password": {
                    "type": "string",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "the username for the initial postgres user. some system usernames are restricted (e.g. \"postgres\", \"admin\", \"standby\")\n"
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "ionoscloud:dbaas/PSQLClusterFromBackup:PSQLClusterFromBackup": {
            "properties": {
                "backupId": {
                    "type": "string",
                    "description": "The unique ID of the backup you want to restore.\n"
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "description": "If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp. If empty, the backup will be applied completely.\n"
                }
            },
            "type": "object",
            "required": [
                "backupId"
            ]
        },
        "ionoscloud:dbaas/PSQLClusterMaintenanceWindow:PSQLClusterMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ]
        },
        "ionoscloud:dbaas/getInMemoryDBReplicaSetConnection:getInMemoryDBReplicaSetConnection": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "The IP and subnet for your Replicaset.\n"
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The datacenter to connect your Replicaset to.\n"
                },
                "lanId": {
                    "type": "string",
                    "description": "The numeric LAN ID to connect your Replicaset to.\n"
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "datacenterId",
                "lanId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getInMemoryDBReplicaSetCredential:getInMemoryDBReplicaSetCredential": {
            "properties": {
                "username": {
                    "type": "string",
                    "description": "The username for your Replicaset.\n"
                }
            },
            "type": "object",
            "required": [
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getInMemoryDBReplicaSetMaintenanceWindow:getInMemoryDBReplicaSetMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string",
                    "description": "The name of the week day.\n"
                },
                "time": {
                    "type": "string",
                    "description": "Start of the maintenance window in UTC time.\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getInMemoryDBReplicaSetResource:getInMemoryDBReplicaSetResource": {
            "properties": {
                "cores": {
                    "type": "integer",
                    "description": "The number of CPU cores per instance.\n"
                },
                "ram": {
                    "type": "integer",
                    "description": "The amount of memory per instance in gigabytes (GB).\n"
                },
                "storage": {
                    "type": "integer",
                    "description": "The amount of storage per instance in gigabytes (GB).\n"
                }
            },
            "type": "object",
            "required": [
                "cores",
                "ram",
                "storage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getInmemorydbSnapshotMetadata:getInmemorydbSnapshotMetadata": {
            "properties": {
                "createdDate": {
                    "type": "string",
                    "description": "The ISO 8601 creation timestamp.\n"
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The ID of the datacenter the snapshot was created in. Please mind, that the snapshot is not available in other datacenters.\n"
                },
                "lastModifiedDate": {
                    "type": "string",
                    "description": "The ISO 8601 modified timestamp.\n"
                },
                "replicaSetId": {
                    "type": "string",
                    "description": "The ID of the InMemoryDB replica set the snapshot is taken from.\n"
                },
                "snapshotTime": {
                    "type": "string",
                    "description": "The time the snapshot was dumped from the replica set.\n"
                }
            },
            "type": "object",
            "required": [
                "createdDate",
                "datacenterId",
                "lastModifiedDate",
                "replicaSetId",
                "snapshotTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getMariaDBBackupsBackup:getMariaDBBackupsBackup": {
            "properties": {
                "baseBackups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dbaas/getMariaDBBackupsBackupBaseBackup:getMariaDBBackupsBackupBaseBackup"
                    },
                    "description": "The list of backups for the specified cluster\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The unique ID of the cluster that was backed up\n"
                },
                "earliestRecoveryTargetTime": {
                    "type": "string",
                    "description": "The oldest available timestamp to which you can restore\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of all base backups in Mebibytes (MiB). This is at least the sum of all base backup sizes\n"
                }
            },
            "type": "object",
            "required": [
                "baseBackups",
                "clusterId",
                "earliestRecoveryTargetTime",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getMariaDBBackupsBackupBaseBackup:getMariaDBBackupsBackupBaseBackup": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "The ISO 8601 creation timestamp\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the backup in Mebibytes (MiB). This is the size of the binary backup file that was stored\n"
                }
            },
            "type": "object",
            "required": [
                "created",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getMariaDBClusterConnection:getMariaDBClusterConnection": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "The IP and subnet for your cluster.\n"
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The datacenter to connect your cluster to.\n"
                },
                "lanId": {
                    "type": "string",
                    "description": "The numeric LAN ID to connect your cluster to.\n"
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "datacenterId",
                "lanId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getMariaDBClusterMaintenanceWindow:getMariaDBClusterMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string",
                    "description": "The name of the week day.\n"
                },
                "time": {
                    "type": "string",
                    "description": "Start of the maintenance window in UTC time.\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getMongoClusterBackup:getMongoClusterBackup": {
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The location where the cluster backups will be stored. If not set, the backup is stored in the nearest location of the cluster. Examples: de, eu-sounth-2, eu-central-2\n"
                }
            },
            "type": "object",
            "required": [
                "location"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getMongoClusterBiConnector:getMongoClusterBiConnector": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the BiConnector\n"
                },
                "host": {
                    "type": "string",
                    "description": "The host where this new BI Connector is installed\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port number used when connecting to this new BI Connector\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "host",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getMongoClusterConnection:getMongoClusterConnection": {
            "properties": {
                "cidrLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of IPs and subnet for your cluster.\n          Note the following unavailable IP ranges:\n          10.233.64.0/18\n          10.233.0.0/18\n          10.233.114.0/24 \t\t\n example: [192.168.1.100/24, 192.168.1.101/24]\n"
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The datacenter to connect your cluster to\n"
                },
                "lanId": {
                    "type": "string",
                    "description": "The LAN to connect your cluster to\n"
                }
            },
            "type": "object",
            "required": [
                "cidrLists",
                "datacenterId",
                "lanId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getMongoClusterMaintenanceWindow:getMongoClusterMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getMongoUserRole:getMongoUserRole": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "description": "A list of mongodb user roles. Examples: read, readWrite, readAnyDatabase\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "role"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getPSQLBackupsClusterBackup:getPSQLBackupsClusterBackup": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The unique ID of the cluster\n"
                },
                "earliestRecoveryTargetTime": {
                    "type": "string",
                    "description": "The oldest available timestamp to which you can restore.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID of the resource.\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Whether a cluster currently backs up data to this backup.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The Object Storage location where the backups will be stored.\n"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dbaas/getPSQLBackupsClusterBackupMetadata:getPSQLBackupsClusterBackupMetadata"
                    },
                    "description": "Metadata of the resource\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of all base backups including the wal size in MB.\n"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string",
                    "description": "The PostgreSQL version this backup was created from.\n"
                }
            },
            "type": "object",
            "required": [
                "clusterId",
                "earliestRecoveryTargetTime",
                "id",
                "isActive",
                "location",
                "metadatas",
                "size",
                "type",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getPSQLBackupsClusterBackupMetadata:getPSQLBackupsClusterBackupMetadata": {
            "properties": {
                "createdDate": {
                    "type": "string",
                    "description": "The ISO 8601 creation timestamp.\n"
                }
            },
            "type": "object",
            "required": [
                "createdDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getPSQLClusterConnection:getPSQLClusterConnection": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "The IP and subnet for the database. Note the following unavailable IP ranges: 10.233.64.0/18, 10.233.0.0/18, 10.233.114.0/24\n"
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The datacenter to connect your cluster to.\n"
                },
                "lanId": {
                    "type": "string",
                    "description": "The LAN to connect your cluster to.\n"
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "datacenterId",
                "lanId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getPSQLClusterConnectionPooler:getPSQLClusterConnectionPooler": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "poolMode": {
                    "type": "string",
                    "description": "Represents different modes of connection pooling for the connection pooler\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "poolMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getPSQLClusterFromBackup:getPSQLClusterFromBackup": {
            "properties": {
                "backupId": {
                    "type": "string",
                    "description": "The unique ID of the backup you want to restore.\n"
                },
                "recoveryTargetTime": {
                    "type": "string",
                    "description": "If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp. If empty, the backup will be applied completely.\n"
                }
            },
            "type": "object",
            "required": [
                "backupId",
                "recoveryTargetTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getPSQLClusterMaintenanceWindow:getPSQLClusterMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dbaas/getPSQLDatabasesDatabase:getPSQLDatabasesDatabase": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "owner"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dsaas/ClusterLan:ClusterLan": {
            "properties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Indicates if the Kubernetes node pool LAN will reserve an IP using DHCP. The default value is 'true'\n"
                },
                "lanId": {
                    "type": "string",
                    "description": "The LAN ID of an existing LAN at the related data center\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dsaas/ClusterLanRoute:ClusterLanRoute"
                    },
                    "description": "An array of additional LANs attached to worker nodes\n"
                }
            },
            "type": "object",
            "required": [
                "lanId"
            ]
        },
        "ionoscloud:dsaas/ClusterLanRoute:ClusterLanRoute": {
            "properties": {
                "gateway": {
                    "type": "string",
                    "description": "IPv4 or IPv6 gateway IP for the route\n"
                },
                "network": {
                    "type": "string",
                    "description": "IPv4 or IPv6 CIDR to be routed via the interface\n"
                }
            },
            "type": "object",
            "required": [
                "gateway",
                "network"
            ]
        },
        "ionoscloud:dsaas/ClusterMaintenanceWindow:ClusterMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string"
                },
                "time": {
                    "type": "string",
                    "description": "Time at which the maintenance should start.\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ]
        },
        "ionoscloud:dsaas/NodePoolAutoScaling:NodePoolAutoScaling": {
            "properties": {
                "maxNodeCount": {
                    "type": "integer",
                    "description": "The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count\n"
                },
                "minNodeCount": {
                    "type": "integer",
                    "description": "The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count\n"
                }
            },
            "type": "object",
            "required": [
                "maxNodeCount",
                "minNodeCount"
            ]
        },
        "ionoscloud:dsaas/NodePoolMaintenanceWindow:NodePoolMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string"
                },
                "time": {
                    "type": "string",
                    "description": "Time at which the maintenance should start.\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ]
        },
        "ionoscloud:dsaas/getClusterConfig:getClusterConfig": {
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "secret": true
                },
                "clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dsaas/getClusterConfigCluster:getClusterConfigCluster"
                    }
                },
                "contexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dsaas/getClusterConfigContext:getClusterConfigContext"
                    }
                },
                "currentContext": {
                    "type": "string",
                    "secret": true
                },
                "kind": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dsaas/getClusterConfigUser:getClusterConfigUser"
                    }
                }
            },
            "type": "object",
            "required": [
                "apiVersion",
                "clusters",
                "contexts",
                "currentContext",
                "kind",
                "users"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dsaas/getClusterConfigCluster:getClusterConfigCluster": {
            "properties": {
                "cluster": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cluster",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dsaas/getClusterConfigContext:getClusterConfigContext": {
            "properties": {
                "context": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "context",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dsaas/getClusterConfigUser:getClusterConfigUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "secret": true
                },
                "user": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dsaas/getClusterLan:getClusterLan": {
            "properties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Indicates if the Kubernetes node pool LAN will reserve an IP using DHCP. The default value is 'true'\n"
                },
                "lanId": {
                    "type": "string",
                    "description": "The LAN ID of an existing LAN at the related data center\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dsaas/getClusterLanRoute:getClusterLanRoute"
                    },
                    "description": "An array of additional LANs attached to worker nodes\n"
                }
            },
            "type": "object",
            "required": [
                "dhcp",
                "lanId",
                "routes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dsaas/getClusterLanRoute:getClusterLanRoute": {
            "properties": {
                "gateway": {
                    "type": "string",
                    "description": "IPv4 or IPv6 gateway IP for the route\n"
                },
                "network": {
                    "type": "string",
                    "description": "IPv4 or IPv6 CIDR to be routed via the interface\n"
                }
            },
            "type": "object",
            "required": [
                "gateway",
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dsaas/getClusterMaintenanceWindow:getClusterMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string"
                },
                "time": {
                    "type": "string",
                    "description": "Time at which the maintenance should start. Must conform to the 'HH:MM:SS' 24-hour format.\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dsaas/getNodePoolAutoScaling:getNodePoolAutoScaling": {
            "properties": {
                "maxNodeCount": {
                    "type": "integer",
                    "description": "The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count\n"
                },
                "minNodeCount": {
                    "type": "integer",
                    "description": "The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count\n"
                }
            },
            "type": "object",
            "required": [
                "maxNodeCount",
                "minNodeCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dsaas/getNodePoolMaintenanceWindow:getNodePoolMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string"
                },
                "time": {
                    "type": "string",
                    "description": "Time at which the maintenance should start. Must conform to the 'HH:MM:SS' 24-hour format.\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dsaas/getNodePoolsNodePool:getNodePoolsNodePool": {
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value pairs attached to node pool resource as kubernetes annotations\n"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "The availability zone of the virtual datacenter region where the node pool resources should be provisioned.\n"
                },
                "coresCount": {
                    "type": "integer",
                    "description": "The number of CPU cores per node.\n"
                },
                "cpuFamily": {
                    "type": "string",
                    "description": "A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource.\n"
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The UUID of the virtual data center (VDC) in which the node pool is provisioned\n"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value pairs attached to the node pool resource as kubernetes labels\n"
                },
                "maintenanceWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dsaas/getNodePoolsNodePoolMaintenanceWindow:getNodePoolsNodePoolMaintenanceWindow"
                    },
                    "description": "Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of your node pool.\n"
                },
                "nodeCount": {
                    "type": "integer",
                    "description": "The number of nodes that make up the node pool.\n"
                },
                "ramSize": {
                    "type": "integer",
                    "description": "The RAM size for one node in MB. Must be set in multiples of 1024 MB, with a minimum size is of 2048 MB.\n"
                },
                "storageSize": {
                    "type": "integer",
                    "description": "The size of the volume in GB. The size must be greater than 10GB.\n"
                },
                "storageType": {
                    "type": "string",
                    "description": "The type of hardware for the volume.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the Data Platform.\n"
                }
            },
            "type": "object",
            "required": [
                "annotations",
                "availabilityZone",
                "coresCount",
                "cpuFamily",
                "datacenterId",
                "id",
                "labels",
                "maintenanceWindows",
                "name",
                "nodeCount",
                "ramSize",
                "storageSize",
                "storageType",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:dsaas/getNodePoolsNodePoolMaintenanceWindow:getNodePoolsNodePoolMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string"
                },
                "time": {
                    "type": "string",
                    "description": "Time at which the maintenance should start. Must conform to the 'HH:MM:SS' 24-hour format.\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:index/getNsgRule:getNsgRule": {
            "properties": {
                "icmpCode": {
                    "type": "string"
                },
                "icmpType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "portRangeEnd": {
                    "type": "integer"
                },
                "portRangeStart": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "sourceMac": {
                    "type": "string"
                },
                "targetIp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "icmpCode",
                "icmpType",
                "id",
                "name",
                "portRangeEnd",
                "portRangeStart",
                "protocol",
                "sourceIp",
                "sourceMac",
                "targetIp",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/ClusterMaintenanceWindow:ClusterMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string",
                    "description": "Day of the week when maintenance is allowed\n"
                },
                "time": {
                    "type": "string",
                    "description": "A clock time in the day when maintenance is allowed\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ]
        },
        "ionoscloud:k8s/ClusterS3Bucket:ClusterS3Bucket": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Object Storage bucket\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:k8s/NodePoolAutoScaling:NodePoolAutoScaling": {
            "properties": {
                "maxNodeCount": {
                    "type": "integer",
                    "description": "The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count\n"
                },
                "minNodeCount": {
                    "type": "integer",
                    "description": "The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count\n"
                }
            },
            "type": "object",
            "required": [
                "maxNodeCount",
                "minNodeCount"
            ]
        },
        "ionoscloud:k8s/NodePoolLan:NodePoolLan": {
            "properties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Indicates if the Kubernetes Node Pool LAN will reserve an IP using DHCP\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The LAN ID of an existing LAN at the related datacenter\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/NodePoolLanRoute:NodePoolLanRoute"
                    },
                    "description": "An array of additional LANs attached to worker nodes\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "ionoscloud:k8s/NodePoolLanRoute:NodePoolLanRoute": {
            "properties": {
                "gatewayIp": {
                    "type": "string",
                    "description": "IPv4 or IPv6 Gateway IP for the route\n"
                },
                "network": {
                    "type": "string",
                    "description": "IPv4 or IPv6 CIDR to be routed via the interface\n"
                }
            },
            "type": "object",
            "required": [
                "gatewayIp",
                "network"
            ]
        },
        "ionoscloud:k8s/NodePoolMaintenanceWindow:NodePoolMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string",
                    "description": "Day of the week when maintenance is allowed\n"
                },
                "time": {
                    "type": "string",
                    "description": "A clock time in the day when maintenance is allowed\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ]
        },
        "ionoscloud:k8s/getClusterConfig:getClusterConfig": {
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "secret": true
                },
                "clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/getClusterConfigCluster:getClusterConfigCluster"
                    }
                },
                "contexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/getClusterConfigContext:getClusterConfigContext"
                    }
                },
                "currentContext": {
                    "type": "string",
                    "secret": true
                },
                "kind": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/getClusterConfigUser:getClusterConfigUser"
                    }
                }
            },
            "type": "object",
            "required": [
                "apiVersion",
                "clusters",
                "contexts",
                "currentContext",
                "kind",
                "users"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getClusterConfigCluster:getClusterConfigCluster": {
            "properties": {
                "cluster": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cluster",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getClusterConfigContext:getClusterConfigContext": {
            "properties": {
                "context": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "context",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getClusterConfigUser:getClusterConfigUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "secret": true
                },
                "user": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getClusterMaintenanceWindow:getClusterMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string",
                    "description": "Day of the week when maintenance is allowed\n"
                },
                "time": {
                    "type": "string",
                    "description": "A clock time in the day when maintenance is allowed\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getClusterS3Bucket:getClusterS3Bucket": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Object Storage bucket\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getClustersCluster:getClustersCluster": {
            "properties": {
                "apiSubnetAllowLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will be used: 32 for IPv4 and 128 for IPv6.\n"
                },
                "availableUpgradeVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of available versions for upgrading the cluster\n"
                },
                "caCrt": {
                    "type": "string",
                    "secret": true
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/getClustersClusterConfig:getClustersClusterConfig"
                    },
                    "secret": true
                },
                "id": {
                    "type": "string"
                },
                "k8sVersion": {
                    "type": "string"
                },
                "kubeConfig": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "maintenanceWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/getClustersClusterMaintenanceWindow:getClustersClusterMaintenanceWindow"
                    },
                    "description": "A maintenance window comprise of a day of the week and a time for maintenance to be allowed\n"
                },
                "name": {
                    "type": "string"
                },
                "natGatewayIp": {
                    "type": "string",
                    "description": "The NAT gateway IP of the cluster if the cluster is private.\n"
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeSubnet": {
                    "type": "string",
                    "description": "The node subnet of the cluster, if the cluster is private.\n"
                },
                "public": {
                    "type": "boolean",
                    "description": "The indicator if the cluster is public or private.\n"
                },
                "s3Buckets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/getClustersClusterS3Bucket:getClustersClusterS3Bucket"
                    },
                    "description": "List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store K8s API audit logs.\n"
                },
                "server": {
                    "type": "string",
                    "secret": true
                },
                "state": {
                    "type": "string"
                },
                "userTokens": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "secret": true
                },
                "viableNodePoolVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of versions that may be used for node pools under this cluster\n"
                }
            },
            "type": "object",
            "required": [
                "apiSubnetAllowLists",
                "availableUpgradeVersions",
                "caCrt",
                "configs",
                "id",
                "k8sVersion",
                "kubeConfig",
                "location",
                "maintenanceWindows",
                "name",
                "natGatewayIp",
                "nodePools",
                "nodeSubnet",
                "public",
                "s3Buckets",
                "server",
                "state",
                "userTokens",
                "viableNodePoolVersions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getClustersClusterConfig:getClustersClusterConfig": {
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "secret": true
                },
                "clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/getClustersClusterConfigCluster:getClustersClusterConfigCluster"
                    }
                },
                "contexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/getClustersClusterConfigContext:getClustersClusterConfigContext"
                    }
                },
                "currentContext": {
                    "type": "string",
                    "secret": true
                },
                "kind": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/getClustersClusterConfigUser:getClustersClusterConfigUser"
                    }
                }
            },
            "type": "object",
            "required": [
                "apiVersion",
                "clusters",
                "contexts",
                "currentContext",
                "kind",
                "users"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getClustersClusterConfigCluster:getClustersClusterConfigCluster": {
            "properties": {
                "cluster": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "cluster",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getClustersClusterConfigContext:getClustersClusterConfigContext": {
            "properties": {
                "context": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "context",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getClustersClusterConfigUser:getClustersClusterConfigUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "secret": true
                },
                "user": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getClustersClusterMaintenanceWindow:getClustersClusterMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string",
                    "description": "Day of the week when maintenance is allowed\n"
                },
                "time": {
                    "type": "string",
                    "description": "A clock time in the day when maintenance is allowed\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getClustersClusterS3Bucket:getClustersClusterS3Bucket": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Object Storage bucket\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getClustersFilter:getClustersFilter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "ionoscloud:k8s/getNodePoolAutoScaling:getNodePoolAutoScaling": {
            "properties": {
                "maxNodeCount": {
                    "type": "integer",
                    "description": "The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count\n"
                },
                "minNodeCount": {
                    "type": "integer",
                    "description": "The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count\n"
                }
            },
            "type": "object",
            "required": [
                "maxNodeCount",
                "minNodeCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getNodePoolLan:getNodePoolLan": {
            "properties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Indicates if the Kubernetes Node Pool LAN will reserve an IP using DHCP\n"
                },
                "id": {
                    "type": "integer",
                    "description": "The LAN ID of an existing LAN at the related datacenter\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/getNodePoolLanRoute:getNodePoolLanRoute"
                    },
                    "description": "An array of additional LANs attached to worker nodes\n"
                }
            },
            "type": "object",
            "required": [
                "dhcp",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getNodePoolLanRoute:getNodePoolLanRoute": {
            "properties": {
                "gatewayIp": {
                    "type": "string",
                    "description": "IPv4 or IPv6 Gateway IP for the route\n"
                },
                "network": {
                    "type": "string",
                    "description": "IPv4 or IPv6 CIDR to be routed via the interface\n"
                }
            },
            "type": "object",
            "required": [
                "gatewayIp",
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getNodePoolMaintenanceWindow:getNodePoolMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string",
                    "description": "Day of the week when maintenance is allowed\n"
                },
                "time": {
                    "type": "string",
                    "description": "A clock time in the day when maintenance is allowed\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:k8s/getNodePoolNodesNode:getNodePoolNodesNode": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "k8sVersion": {
                    "type": "string",
                    "description": "The kubernetes version\n"
                },
                "name": {
                    "type": "string",
                    "description": "The kubernetes node name\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "A valid private IP\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "A valid public IP\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "k8sVersion",
                "name",
                "privateIp",
                "publicIp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:kafka/ClusterConnections:ClusterConnections": {
            "properties": {
                "brokerAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The broker addresses of the Kafka Cluster. Can be empty, but must be present.\n",
                    "willReplaceOnChanges": true
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The datacenter to connect your Kafka Cluster to.\n",
                    "willReplaceOnChanges": true
                },
                "lanId": {
                    "type": "string",
                    "description": "The numeric LAN ID to connect your Kafka Cluster to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "brokerAddresses",
                "datacenterId",
                "lanId"
            ]
        },
        "ionoscloud:kafka/getClusterConnection:getClusterConnection": {
            "properties": {
                "brokerAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The broker addresses of the Kafka Cluster\n"
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The datacenter to connect your Kafka Cluster to.\n"
                },
                "lanId": {
                    "type": "string",
                    "description": "The numeric LAN ID to connect your Kafka Cluster to.\n"
                }
            },
            "type": "object",
            "required": [
                "brokerAddresses",
                "datacenterId",
                "lanId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:logging/PipelineLog:PipelineLog": {
            "properties": {
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:logging/PipelineLogDestination:PipelineLogDestination"
                    },
                    "description": "The internal output stream to send logs to. Possible values are: loki.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol to use as intake. Possible values are: http, tcp.\n"
                },
                "public": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string",
                    "description": "The source parser to be used\n"
                },
                "tag": {
                    "type": "string",
                    "description": "The tag is used to distinguish different pipelines. Must be unique amongst the pipeline's array items.\n"
                }
            },
            "type": "object",
            "required": [
                "protocol",
                "source",
                "tag"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "destinations",
                        "protocol",
                        "public",
                        "source",
                        "tag"
                    ]
                }
            }
        },
        "ionoscloud:logging/PipelineLogDestination:PipelineLogDestination": {
            "properties": {
                "retentionInDays": {
                    "type": "integer",
                    "description": "Defines the number of days a log record should be kept in loki. Works with loki destination type only. Possible values are: 7, 14, 30.\n"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "retentionInDays",
                        "type"
                    ]
                }
            }
        },
        "ionoscloud:logging/getPipelineLog:getPipelineLog": {
            "properties": {
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:logging/getPipelineLogDestination:getPipelineLogDestination"
                    },
                    "description": "The internal output stream to send logs to. Possible values are: loki.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol to use as intake. Possible values are: http, tcp.\n"
                },
                "public": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string",
                    "description": "The source parser to be used\n"
                },
                "tag": {
                    "type": "string",
                    "description": "The tag is used to distinguish different pipelines. Must be unique amongst the pipeline's array items.\n"
                }
            },
            "type": "object",
            "required": [
                "destinations",
                "protocol",
                "public",
                "source",
                "tag"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:logging/getPipelineLogDestination:getPipelineLogDestination": {
            "properties": {
                "retentionInDays": {
                    "type": "integer",
                    "description": "Defines the number of days a log record should be kept in loki. Works with loki destination type only. Possible values are: 7, 14, 30.\n"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "retentionInDays",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:nfs/ClusterConnections:ClusterConnections": {
            "properties": {
                "datacenterId": {
                    "type": "string",
                    "description": "The datacenter to connect your instance to.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP address and subnet for your instance.\n"
                },
                "lan": {
                    "type": "string",
                    "description": "The numeric LAN ID to connect your instance to.\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "ipAddress",
                "lan"
            ]
        },
        "ionoscloud:nfs/ClusterNfs:ClusterNfs": {
            "properties": {
                "minVersion": {
                    "type": "string",
                    "description": "The minimum Network File Storage version\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:nfs/ShareClientGroup:ShareClientGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description for the clients groups.\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A singular host allowed to connect to the share. The host can be specified as IP address and can be either IPv4 or IPv6.\n"
                },
                "ipNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The allowed host or network to which the export is being shared. The IP address can be either IPv4 or IPv6 and has to be given with CIDR notation.\n"
                },
                "nfs": {
                    "$ref": "#/types/ionoscloud:nfs/ShareClientGroupNfs:ShareClientGroupNfs"
                }
            },
            "type": "object",
            "required": [
                "hosts",
                "ipNetworks"
            ]
        },
        "ionoscloud:nfs/ShareClientGroupNfs:ShareClientGroupNfs": {
            "properties": {
                "squash": {
                    "type": "string",
                    "description": "The squash mode for the export. The squash mode can be: none - No squash mode. no mapping, root-anonymous - Map root user to anonymous uid, all-anonymous - Map all users to anonymous uid.\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:nfs/getClusterConnection:getClusterConnection": {
            "properties": {
                "datacenterId": {
                    "type": "string",
                    "description": "The datacenter ID of the connection.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP address of the connection.\n"
                },
                "lan": {
                    "type": "string",
                    "description": "The LAN of the connection.\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "ipAddress",
                "lan"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:nfs/getClusterNf:getClusterNf": {
            "properties": {
                "minVersion": {
                    "type": "string",
                    "description": "The minimum version of the NFS.\n"
                }
            },
            "type": "object",
            "required": [
                "minVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:nfs/getShareClientGroup:getShareClientGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description for the clients groups.\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A singular host allowed to connect to the share. The host can be specified as IP address and can be either IPv4 or IPv6.\n"
                },
                "ipNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The allowed host or network to which the export is being shared. The IP address can be either IPv4 or IPv6 and has to be given with CIDR notation.\n"
                },
                "nfs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:nfs/getShareClientGroupNf:getShareClientGroupNf"
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "hosts",
                "ipNetworks",
                "nfs"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:nfs/getShareClientGroupNf:getShareClientGroupNf": {
            "properties": {
                "squash": {
                    "type": "string",
                    "description": "The squash mode for the export. The squash mode can be: none - No squash mode. no mapping, root-anonymous - Map root user to anonymous uid, all-anonymous - Map all users to anonymous uid.\n"
                }
            },
            "type": "object",
            "required": [
                "squash"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:nlb/BalancerFlowlog:BalancerFlowlog": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: ACCEPTED, REJECTED, ALL. Immutable, forces re-recreation of the nic resource.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "The bucket name of an existing IONOS Object Storage bucket. Immutable, forces re-recreation of the nic resource.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-recreation of the nic resource.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The resource's unique identifier.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "bucket",
                "direction",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "action",
                        "bucket",
                        "direction",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "ionoscloud:nlb/ForwardingRuleHealthCheck:ForwardingRuleHealthCheck": {
            "properties": {
                "clientTimeout": {
                    "type": "integer",
                    "description": "ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.\n"
                },
                "connectTimeout": {
                    "type": "integer",
                    "description": "It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.\n"
                },
                "retries": {
                    "type": "integer",
                    "description": "Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.\n"
                },
                "targetTimeout": {
                    "type": "integer",
                    "description": "TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clientTimeout",
                        "connectTimeout",
                        "retries",
                        "targetTimeout"
                    ]
                }
            }
        },
        "ionoscloud:nlb/ForwardingRuleTarget:ForwardingRuleTarget": {
            "properties": {
                "healthCheck": {
                    "$ref": "#/types/ionoscloud:nlb/ForwardingRuleTargetHealthCheck:ForwardingRuleTargetHealthCheck",
                    "description": "Health check attributes for Network Load Balancer forwarding rule target\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP of a balanced target VM\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the balanced target service. (range: 1 to 65535)\n"
                },
                "proxyProtocol": {
                    "type": "string",
                    "description": "Proxy protocol version\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Weight parameter is used to adjust the target VM's weight relative to other target VMs\n"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "port",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "healthCheck",
                        "ip",
                        "port",
                        "weight"
                    ]
                }
            }
        },
        "ionoscloud:nlb/ForwardingRuleTargetHealthCheck:ForwardingRuleTargetHealthCheck": {
            "properties": {
                "check": {
                    "type": "boolean",
                    "description": "Check specifies whether the target VM's health is checked.\n"
                },
                "checkInterval": {
                    "type": "integer",
                    "description": "CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.\n"
                },
                "maintenance": {
                    "type": "boolean",
                    "description": "Maintenance specifies if a target VM should be marked as down, even if it is not.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "check",
                        "checkInterval",
                        "maintenance"
                    ]
                }
            }
        },
        "ionoscloud:nlb/getBalancerFlowlog:getBalancerFlowlog": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: ACCEPTED, REJECTED, ALL.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "The bucket name of an existing IONOS Object Storage bucket.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The resource's unique identifier.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The resource name.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "bucket",
                "direction",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:nlb/getForwardingRuleHealthCheck:getForwardingRuleHealthCheck": {
            "properties": {
                "clientTimeout": {
                    "type": "integer",
                    "description": "ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.\n"
                },
                "connectTimeout": {
                    "type": "integer",
                    "description": "It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.\n"
                },
                "retries": {
                    "type": "integer",
                    "description": "Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.\n"
                },
                "targetTimeout": {
                    "type": "integer",
                    "description": "TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.\n"
                }
            },
            "type": "object",
            "required": [
                "clientTimeout",
                "connectTimeout",
                "retries",
                "targetTimeout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:nlb/getForwardingRuleTarget:getForwardingRuleTarget": {
            "properties": {
                "healthChecks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:nlb/getForwardingRuleTargetHealthCheck:getForwardingRuleTargetHealthCheck"
                    },
                    "description": "Health check attributes for Network Load Balancer forwarding rule target\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP of a balanced target VM\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the balanced target service. (range: 1 to 65535)\n"
                },
                "proxyProtocol": {
                    "type": "string",
                    "description": "Proxy protocol version\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Weight parameter is used to adjust the target VM's weight relative to other target VMs\n"
                }
            },
            "type": "object",
            "required": [
                "healthChecks",
                "ip",
                "port",
                "proxyProtocol",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:nlb/getForwardingRuleTargetHealthCheck:getForwardingRuleTargetHealthCheck": {
            "properties": {
                "check": {
                    "type": "boolean",
                    "description": "Check specifies whether the target VM's health is checked.\n"
                },
                "checkInterval": {
                    "type": "integer",
                    "description": "CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.\n"
                },
                "maintenance": {
                    "type": "boolean",
                    "description": "Maintenance specifies if a target VM should be marked as down, even if it is not.\n"
                }
            },
            "type": "object",
            "required": [
                "check",
                "checkInterval",
                "maintenance"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:objectstorage/BucketLifecycleConfigurationRule:BucketLifecycleConfigurationRule": {
            "properties": {
                "abortIncompleteMultipartUpload": {
                    "$ref": "#/types/ionoscloud:objectstorage/BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload:BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload",
                    "description": "Specifies the days since the initiation of an incomplete multipart upload that IONOS Object Storage Object Storage will wait before permanently removing all parts of the upload.\n"
                },
                "expiration": {
                    "$ref": "#/types/ionoscloud:objectstorage/BucketLifecycleConfigurationRuleExpiration:BucketLifecycleConfigurationRuleExpiration",
                    "description": "A lifecycle rule for when an object expires.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the rule.\n"
                },
                "noncurrentVersionExpiration": {
                    "$ref": "#/types/ionoscloud:objectstorage/BucketLifecycleConfigurationRuleNoncurrentVersionExpiration:BucketLifecycleConfigurationRuleNoncurrentVersionExpiration",
                    "description": "A lifecycle rule for when non-current object versions expire.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Object key prefix identifying one or more objects to which the rule applies.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Whether the rule is currently being applied. Valid values: Enabled or Disabled.\n"
                }
            },
            "type": "object",
            "required": [
                "prefix",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "prefix",
                        "status"
                    ]
                }
            }
        },
        "ionoscloud:objectstorage/BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload:BucketLifecycleConfigurationRuleAbortIncompleteMultipartUpload": {
            "properties": {
                "daysAfterInitiation": {
                    "type": "integer",
                    "description": "Specifies the number of days after which IONOS Object Storage Object Storage aborts an incomplete multipart upload.\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:objectstorage/BucketLifecycleConfigurationRuleExpiration:BucketLifecycleConfigurationRuleExpiration": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Specifies the date when the object expires. Required if 'days' is not specified.\n"
                },
                "days": {
                    "type": "integer",
                    "description": "Specifies the number of days after object creation when the object expires. Required if 'date' is not specified.\n"
                },
                "expiredObjectDeleteMarker": {
                    "type": "boolean",
                    "description": "Indicates whether IONOS Object Storage Object Storage will remove a delete marker with no noncurrent versions. If set to true, the delete marker will be expired; if set to false the policy takes no operation. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:objectstorage/BucketLifecycleConfigurationRuleNoncurrentVersionExpiration:BucketLifecycleConfigurationRuleNoncurrentVersionExpiration": {
            "properties": {
                "noncurrentDays": {
                    "type": "integer",
                    "description": "Specifies the number of days an object is noncurrent before IONOS Object Storage can perform the associated action.\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:objectstorage/BucketServerSideEncryptionConfigurationRule:BucketServerSideEncryptionConfigurationRule": {
            "properties": {
                "applyServerSideEncryptionByDefault": {
                    "$ref": "#/types/ionoscloud:objectstorage/BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault:BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault",
                    "description": "[block] Defines the default encryption settings.\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:objectstorage/BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault:BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault": {
            "properties": {
                "sseAlgorithm": {
                    "type": "string",
                    "description": "[string] Server-side encryption algorithm to use. Valid values are 'AES256'\n"
                }
            },
            "type": "object",
            "required": [
                "sseAlgorithm"
            ]
        },
        "ionoscloud:objectstorage/BucketTimeouts:BucketTimeouts": {
            "properties": {
                "create": {
                    "type": "string",
                    "description": "[string] Time to wait for the bucket to be created. Default is `10m`.\n"
                },
                "delete": {
                    "type": "string",
                    "description": "[string] Time to wait for the bucket to be deleted. Default is `10m`.\n"
                },
                "read": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.\n"
                },
                "update": {
                    "type": "string",
                    "description": "A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as \"30s\" or \"2h45m\". Valid time units are \"s\" (seconds), \"m\" (minutes), \"h\" (hours).\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:objectstorage/BucketVersioningVersioningConfiguration:BucketVersioningVersioningConfiguration": {
            "properties": {
                "mfaDelete": {
                    "type": "string",
                    "description": "[string] Specifies whether MFA delete is enabled or not. Can be `Enabled` or `Disabled`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "[string] The versioning state of the bucket. Can be `Enabled` or `Suspended`.\n"
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "mfaDelete",
                        "status"
                    ]
                }
            }
        },
        "ionoscloud:objectstorage/CorsConfigurationCorsRule:CorsConfigurationCorsRule": {
            "properties": {
                "allowedHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "[list] Specifies which headers are allowed in a preflight OPTIONS request through the Access-Control-Request-Headers header\n"
                },
                "allowedMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "[list] An HTTP method that you allow the origin to execute. Valid values are GET, PUT, HEAD, POST, DELETE.\n"
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "[list] Specifies which origins are allowed to make requests to the resource.\n"
                },
                "exposeHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "[list] Specifies which headers are exposed to the browser.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "[int] Container for the Contract Number of the owner\n\n\nDays and years are mutually exclusive. You can only specify one of them.\n"
                },
                "maxAgeSeconds": {
                    "type": "integer",
                    "description": "[int] Specifies how long the results of a pre-flight request can be cached in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "allowedMethods",
                "allowedOrigins"
            ]
        },
        "ionoscloud:objectstorage/ObjectLockConfigurationRule:ObjectLockConfigurationRule": {
            "properties": {
                "defaultRetention": {
                    "$ref": "#/types/ionoscloud:objectstorage/ObjectLockConfigurationRuleDefaultRetention:ObjectLockConfigurationRuleDefaultRetention",
                    "description": "[block] A block of default_retention as defined below.\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:objectstorage/ObjectLockConfigurationRuleDefaultRetention:ObjectLockConfigurationRuleDefaultRetention": {
            "properties": {
                "days": {
                    "type": "integer",
                    "description": "[int] The default retention period of the bucket in days.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "[string] The default retention mode of the bucket. Can be `GOVERNANCE` or `COMPLIANCE`.\n"
                },
                "years": {
                    "type": "integer",
                    "description": "[int] The default retention period of the bucket in years.\n\nDays and years are mutually exclusive. You can only specify one of them.\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:objectstorage/WebsiteConfigurationErrorDocument:WebsiteConfigurationErrorDocument": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The object key\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:objectstorage/WebsiteConfigurationIndexDocument:WebsiteConfigurationIndexDocument": {
            "properties": {
                "suffix": {
                    "type": "string",
                    "description": "A suffix that is appended to a request that is for a directory on the website endpoint (for example, if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character. Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests.\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:objectstorage/WebsiteConfigurationRedirectAllRequestsTo:WebsiteConfigurationRedirectAllRequestsTo": {
            "properties": {
                "hostName": {
                    "type": "string",
                    "description": "Name of the host where requests will be redirected.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol to use (http, https).\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:objectstorage/WebsiteConfigurationRoutingRule:WebsiteConfigurationRoutingRule": {
            "properties": {
                "condition": {
                    "$ref": "#/types/ionoscloud:objectstorage/WebsiteConfigurationRoutingRuleCondition:WebsiteConfigurationRoutingRuleCondition",
                    "description": "A container for describing a condition that must be met for the specified redirect to apply.\n"
                },
                "redirect": {
                    "$ref": "#/types/ionoscloud:objectstorage/WebsiteConfigurationRoutingRuleRedirect:WebsiteConfigurationRoutingRuleRedirect",
                    "description": "Container for the redirect information.\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:objectstorage/WebsiteConfigurationRoutingRuleCondition:WebsiteConfigurationRoutingRuleCondition": {
            "properties": {
                "httpErrorCodeReturnedEquals": {
                    "type": "string",
                    "description": "The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied.\n"
                },
                "keyPrefixEquals": {
                    "type": "string",
                    "description": "The object key name prefix when the redirect is applied. For example, to redirect requests for ExamplePage.html, the key prefix will be ExamplePage.html. To redirect request for all pages with the prefix example, the key prefix will be /example.\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:objectstorage/WebsiteConfigurationRoutingRuleRedirect:WebsiteConfigurationRoutingRuleRedirect": {
            "properties": {
                "hostName": {
                    "type": "string",
                    "description": "The host name to use in the redirect request.\n"
                },
                "httpRedirectCode": {
                    "type": "string",
                    "description": "The HTTP redirect code to use on the response. Not required if one of the siblings is present.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol to use (http, https).\n"
                },
                "replaceKeyPrefixWith": {
                    "type": "string",
                    "description": "The object key to be used in the redirect request. For example, redirect request to error.html, the replace key prefix will be /error.html. Not required if one of the siblings is present.\n"
                },
                "replaceKeyWith": {
                    "type": "string",
                    "description": "The specific object key to use in the redirect request. For example, redirect request for error.html, the replace key will be /error.html. Not required if one of the siblings is present.\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:vpn/IpsecGatewayConnection:IpsecGatewayConnection": {
            "properties": {
                "datacenterId": {
                    "type": "string",
                    "description": "The datacenter to connect your VPN Gateway to.\n"
                },
                "ipv4Cidr": {
                    "type": "string",
                    "description": "Describes the private ipv4 subnet in your LAN that should be accessible by the VPN Gateway. Note: this should be the subnet already assigned to the LAN\n"
                },
                "ipv6Cidr": {
                    "type": "string",
                    "description": "Describes the ipv6 subnet in your LAN that should be accessible by the VPN Gateway. Note: this should be the subnet already assigned to the LAN\n"
                },
                "lanId": {
                    "type": "string",
                    "description": "The numeric LAN ID to connect your VPN Gateway to.\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "ipv4Cidr",
                "lanId"
            ]
        },
        "ionoscloud:vpn/IpsecGatewayMaintenanceWindow:IpsecGatewayMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string",
                    "description": "The name of the week day\n"
                },
                "time": {
                    "type": "string",
                    "description": "Start of the maintenance window in UTC time.\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ]
        },
        "ionoscloud:vpn/IpsecTunnelAuth:IpsecTunnelAuth": {
            "properties": {
                "method": {
                    "type": "string",
                    "description": "The Authentication Method to use for IPSec Authentication.\n"
                },
                "pskKey": {
                    "type": "string",
                    "description": "The Pre-Shared Key to use for IPSec Authentication. Note: Required if method is PSK.\n",
                    "secret": true
                }
            },
            "type": "object"
        },
        "ionoscloud:vpn/IpsecTunnelEsp:IpsecTunnelEsp": {
            "properties": {
                "diffieHellmanGroup": {
                    "type": "string",
                    "description": "The Diffie-Hellman Group to use for IPSec Encryption.\n"
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "The encryption algorithm to use for IPSec Encryption.\n"
                },
                "integrityAlgorithm": {
                    "type": "string",
                    "description": "The integrity algorithm to use for IPSec Encryption.\n"
                },
                "lifetime": {
                    "type": "integer",
                    "description": "The phase lifetime in seconds.\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:vpn/IpsecTunnelIke:IpsecTunnelIke": {
            "properties": {
                "diffieHellmanGroup": {
                    "type": "string",
                    "description": "The Diffie-Hellman Group to use for IPSec Encryption.\n"
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "The encryption algorithm to use for IPSec Encryption.\n"
                },
                "integrityAlgorithm": {
                    "type": "string",
                    "description": "The integrity algorithm to use for IPSec Encryption.\n"
                },
                "lifetime": {
                    "type": "integer",
                    "description": "The phase lifetime in seconds.\n"
                }
            },
            "type": "object"
        },
        "ionoscloud:vpn/WireguardGatewayConnection:WireguardGatewayConnection": {
            "properties": {
                "datacenterId": {
                    "type": "string"
                },
                "ipv4Cidr": {
                    "type": "string"
                },
                "ipv6Cidr": {
                    "type": "string"
                },
                "lanId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "lanId"
            ]
        },
        "ionoscloud:vpn/WireguardGatewayMaintenanceWindow:WireguardGatewayMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string",
                    "description": "The name of the week day\n"
                },
                "time": {
                    "type": "string",
                    "description": "Start of the maintenance window in UTC time.\n"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ]
        },
        "ionoscloud:vpn/WireguardPeerEndpoint:WireguardPeerEndpoint": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Hostname or IPV4 address that the WireGuard Server will connect to.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that the WireGuard Server will connect to.\n"
                }
            },
            "type": "object",
            "required": [
                "host"
            ]
        },
        "ionoscloud:vpn/getIpsecGatewayConnection:getIpsecGatewayConnection": {
            "properties": {
                "datacenterId": {
                    "type": "string",
                    "description": "The datacenter to connect your VPN Gateway to.\n"
                },
                "ipv4Cidr": {
                    "type": "string",
                    "description": "Describes the private ipv4 subnet in your LAN that should be accessible by the VPN Gateway. Note: this should be the subnet already assigned to the LAN\n"
                },
                "ipv6Cidr": {
                    "type": "string",
                    "description": "Describes the ipv6 subnet in your LAN that should be accessible by the VPN Gateway. Note: this should be the subnet already assigned to the LAN\n"
                },
                "lanId": {
                    "type": "string",
                    "description": "The numeric LAN ID to connect your VPN Gateway to.\n"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "ipv4Cidr",
                "ipv6Cidr",
                "lanId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:vpn/getIpsecGatewayMaintenanceWindow:getIpsecGatewayMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:vpn/getIpsecTunnelAuth:getIpsecTunnelAuth": {
            "properties": {
                "method": {
                    "type": "string",
                    "description": "The Authentication Method to use for IPSec Authentication.\n"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:vpn/getIpsecTunnelEsp:getIpsecTunnelEsp": {
            "properties": {
                "diffieHellmanGroup": {
                    "type": "string",
                    "description": "The Diffie-Hellman Group to use for IPSec Encryption.\n"
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "The encryption algorithm to use for IPSec Encryption.\n"
                },
                "integrityAlgorithm": {
                    "type": "string",
                    "description": "The integrity algorithm to use for IPSec Encryption.\n"
                },
                "lifetime": {
                    "type": "integer",
                    "description": "The phase lifetime in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "diffieHellmanGroup",
                "encryptionAlgorithm",
                "integrityAlgorithm",
                "lifetime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:vpn/getIpsecTunnelIke:getIpsecTunnelIke": {
            "properties": {
                "diffieHellmanGroup": {
                    "type": "string",
                    "description": "The Diffie-Hellman Group to use for IPSec Encryption.\n"
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "The encryption algorithm to use for IPSec Encryption.\n"
                },
                "integrityAlgorithm": {
                    "type": "string",
                    "description": "The integrity algorithm to use for IPSec Encryption.\n"
                },
                "lifetime": {
                    "type": "integer",
                    "description": "The phase lifetime in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "diffieHellmanGroup",
                "encryptionAlgorithm",
                "integrityAlgorithm",
                "lifetime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:vpn/getWireguardGatewayConnection:getWireguardGatewayConnection": {
            "properties": {
                "datacenterId": {
                    "type": "string"
                },
                "ipv4Cidr": {
                    "type": "string"
                },
                "ipv6Cidr": {
                    "type": "string"
                },
                "lanId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "ipv4Cidr",
                "ipv6Cidr",
                "lanId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:vpn/getWireguardGatewayMaintenanceWindow:getWireguardGatewayMaintenanceWindow": {
            "properties": {
                "dayOfTheWeek": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dayOfTheWeek",
                "time"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ionoscloud:vpn/getWireguardPeerEndpoint:getWireguardPeerEndpoint": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the ionoscloud package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "contractNumber": {
                "type": "string"
            },
            "endpoint": {
                "type": "string",
                "description": "IonosCloud REST API URL. Usually not necessary to be set, SDKs know internally how to route requests to the API.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "This field is to be set only for testing purposes. It is not recommended to set this field in production environments.\n"
            },
            "password": {
                "type": "string",
                "description": "IonosCloud password for API operations. If token is provided, token is preferred\n"
            },
            "retries": {
                "type": "integer",
                "deprecationMessage": "Timeout is used instead of this functionality"
            },
            "s3AccessKey": {
                "type": "string",
                "description": "Access key for IONOS Object Storage operations.\n"
            },
            "s3Region": {
                "type": "string",
                "description": "Region for IONOS Object Storage operations.\n"
            },
            "s3SecretKey": {
                "type": "string",
                "description": "Secret key for IONOS Object Storage operations.\n"
            },
            "token": {
                "type": "string",
                "description": "IonosCloud bearer token for API operations.\n"
            },
            "username": {
                "type": "string",
                "description": "IonosCloud username for API operations. If token is provided, token is preferred\n"
            }
        },
        "inputProperties": {
            "contractNumber": {
                "type": "string"
            },
            "endpoint": {
                "type": "string",
                "description": "IonosCloud REST API URL. Usually not necessary to be set, SDKs know internally how to route requests to the API.\n"
            },
            "insecure": {
                "type": "boolean",
                "description": "This field is to be set only for testing purposes. It is not recommended to set this field in production environments.\n"
            },
            "password": {
                "type": "string",
                "description": "IonosCloud password for API operations. If token is provided, token is preferred\n"
            },
            "retries": {
                "type": "integer",
                "deprecationMessage": "Timeout is used instead of this functionality"
            },
            "s3AccessKey": {
                "type": "string",
                "description": "Access key for IONOS Object Storage operations.\n"
            },
            "s3Region": {
                "type": "string",
                "description": "Region for IONOS Object Storage operations.\n"
            },
            "s3SecretKey": {
                "type": "string",
                "description": "Secret key for IONOS Object Storage operations.\n"
            },
            "token": {
                "type": "string",
                "description": "IonosCloud bearer token for API operations.\n"
            },
            "username": {
                "type": "string",
                "description": "IonosCloud username for API operations. If token is provided, token is preferred\n"
            }
        }
    },
    "resources": {
        "ionoscloud:alb/balancer:Balancer": {
            "properties": {
                "centralLogging": {
                    "type": "boolean",
                    "description": "Turn logging on and off for this product. Default value is 'false'.\n"
                },
                "datacenterId": {
                    "type": "string"
                },
                "flowlog": {
                    "$ref": "#/types/ionoscloud:alb/BalancerFlowlog:BalancerFlowlog",
                    "description": "Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture\nnetwork information such as source and destination IP addresses, source and destination ports, number of packets, amount\nof bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your\ninstances are being accessed.\n"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of the Application Load Balancer IP addresses. (Inbound and outbound) IPs of the listenerLan are\ncustomer-reserved public IPs for the public Load Balancers, and private IPs for the private Load Balancers.\n"
                },
                "lbPrivateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of private IP addresses with the subnet mask of the Application Load Balancer. IPs must contain valid a\nsubnet mask. If no IP is provided, the system will generate an IP with /24 subnet.\n"
                },
                "listenerLan": {
                    "type": "integer",
                    "description": "ID of the listening (inbound) LAN.\n"
                },
                "loggingFormat": {
                    "type": "string",
                    "description": "Specifies the format of the logs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Application Load Balancer.\n"
                },
                "targetLan": {
                    "type": "integer",
                    "description": "ID of the balanced private target LAN (outbound).\n"
                }
            },
            "required": [
                "datacenterId",
                "listenerLan",
                "name",
                "targetLan"
            ],
            "inputProperties": {
                "centralLogging": {
                    "type": "boolean",
                    "description": "Turn logging on and off for this product. Default value is 'false'.\n"
                },
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flowlog": {
                    "$ref": "#/types/ionoscloud:alb/BalancerFlowlog:BalancerFlowlog",
                    "description": "Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture\nnetwork information such as source and destination IP addresses, source and destination ports, number of packets, amount\nof bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your\ninstances are being accessed.\n"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of the Application Load Balancer IP addresses. (Inbound and outbound) IPs of the listenerLan are\ncustomer-reserved public IPs for the public Load Balancers, and private IPs for the private Load Balancers.\n"
                },
                "lbPrivateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of private IP addresses with the subnet mask of the Application Load Balancer. IPs must contain valid a\nsubnet mask. If no IP is provided, the system will generate an IP with /24 subnet.\n"
                },
                "listenerLan": {
                    "type": "integer",
                    "description": "ID of the listening (inbound) LAN.\n"
                },
                "loggingFormat": {
                    "type": "string",
                    "description": "Specifies the format of the logs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Application Load Balancer.\n"
                },
                "targetLan": {
                    "type": "integer",
                    "description": "ID of the balanced private target LAN (outbound).\n"
                }
            },
            "requiredInputs": [
                "datacenterId",
                "listenerLan",
                "targetLan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Balancer resources.\n",
                "properties": {
                    "centralLogging": {
                        "type": "boolean",
                        "description": "Turn logging on and off for this product. Default value is 'false'.\n"
                    },
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "flowlog": {
                        "$ref": "#/types/ionoscloud:alb/BalancerFlowlog:BalancerFlowlog",
                        "description": "Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture\nnetwork information such as source and destination IP addresses, source and destination ports, number of packets, amount\nof bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your\ninstances are being accessed.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Collection of the Application Load Balancer IP addresses. (Inbound and outbound) IPs of the listenerLan are\ncustomer-reserved public IPs for the public Load Balancers, and private IPs for the private Load Balancers.\n"
                    },
                    "lbPrivateIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Collection of private IP addresses with the subnet mask of the Application Load Balancer. IPs must contain valid a\nsubnet mask. If no IP is provided, the system will generate an IP with /24 subnet.\n"
                    },
                    "listenerLan": {
                        "type": "integer",
                        "description": "ID of the listening (inbound) LAN.\n"
                    },
                    "loggingFormat": {
                        "type": "string",
                        "description": "Specifies the format of the logs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Application Load Balancer.\n"
                    },
                    "targetLan": {
                        "type": "integer",
                        "description": "ID of the balanced private target LAN (outbound).\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:alb/forwardingRule:ForwardingRule": {
            "properties": {
                "applicationLoadbalancerId": {
                    "type": "string"
                },
                "clientTimeout": {
                    "type": "integer",
                    "description": "The maximum time in milliseconds to wait for the client to acknowledge or send data; default is 50,000 (50 seconds).\n"
                },
                "datacenterId": {
                    "type": "string"
                },
                "httpRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:alb/ForwardingRuleHttpRule:ForwardingRuleHttpRule"
                    },
                    "description": "Array of items in that collection\n"
                },
                "listenerIp": {
                    "type": "string",
                    "description": "Listening (inbound) IP.\n"
                },
                "listenerPort": {
                    "type": "integer",
                    "description": "Listening (inbound) port number; valid range is 1 to 65535.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Application Load Balancer forwarding rule.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Balancing protocol.\n"
                },
                "serverCertificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of items in the collection.\n"
                }
            },
            "required": [
                "applicationLoadbalancerId",
                "clientTimeout",
                "datacenterId",
                "listenerIp",
                "listenerPort",
                "name",
                "protocol"
            ],
            "inputProperties": {
                "applicationLoadbalancerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "clientTimeout": {
                    "type": "integer",
                    "description": "The maximum time in milliseconds to wait for the client to acknowledge or send data; default is 50,000 (50 seconds).\n"
                },
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "httpRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:alb/ForwardingRuleHttpRule:ForwardingRuleHttpRule"
                    },
                    "description": "Array of items in that collection\n"
                },
                "listenerIp": {
                    "type": "string",
                    "description": "Listening (inbound) IP.\n"
                },
                "listenerPort": {
                    "type": "integer",
                    "description": "Listening (inbound) port number; valid range is 1 to 65535.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Application Load Balancer forwarding rule.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Balancing protocol.\n"
                },
                "serverCertificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of items in the collection.\n"
                }
            },
            "requiredInputs": [
                "applicationLoadbalancerId",
                "datacenterId",
                "listenerIp",
                "listenerPort",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ForwardingRule resources.\n",
                "properties": {
                    "applicationLoadbalancerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "clientTimeout": {
                        "type": "integer",
                        "description": "The maximum time in milliseconds to wait for the client to acknowledge or send data; default is 50,000 (50 seconds).\n"
                    },
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "httpRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:alb/ForwardingRuleHttpRule:ForwardingRuleHttpRule"
                        },
                        "description": "Array of items in that collection\n"
                    },
                    "listenerIp": {
                        "type": "string",
                        "description": "Listening (inbound) IP.\n"
                    },
                    "listenerPort": {
                        "type": "integer",
                        "description": "Listening (inbound) port number; valid range is 1 to 65535.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Application Load Balancer forwarding rule.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Balancing protocol.\n"
                    },
                    "serverCertificates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of items in the collection.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:apigateway/apigateway:Apigateway": {
            "properties": {
                "customDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:apigateway/ApigatewayCustomDomain:ApigatewayCustomDomain"
                    },
                    "description": "Custom domains for the API Gateway.\n"
                },
                "logs": {
                    "type": "boolean",
                    "description": "Enable or disable logging. NOTE: Central Logging must be enabled through the Logging API to enable this feature.\n"
                },
                "metrics": {
                    "type": "boolean",
                    "description": "Enable or disable metrics.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the API Gateway.\n"
                },
                "publicEndpoint": {
                    "type": "string",
                    "description": "The public endpoint of the API Gateway.\n"
                }
            },
            "required": [
                "name",
                "publicEndpoint"
            ],
            "inputProperties": {
                "customDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:apigateway/ApigatewayCustomDomain:ApigatewayCustomDomain"
                    },
                    "description": "Custom domains for the API Gateway.\n"
                },
                "logs": {
                    "type": "boolean",
                    "description": "Enable or disable logging. NOTE: Central Logging must be enabled through the Logging API to enable this feature.\n"
                },
                "metrics": {
                    "type": "boolean",
                    "description": "Enable or disable metrics.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the API Gateway.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Apigateway resources.\n",
                "properties": {
                    "customDomains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:apigateway/ApigatewayCustomDomain:ApigatewayCustomDomain"
                        },
                        "description": "Custom domains for the API Gateway.\n"
                    },
                    "logs": {
                        "type": "boolean",
                        "description": "Enable or disable logging. NOTE: Central Logging must be enabled through the Logging API to enable this feature.\n"
                    },
                    "metrics": {
                        "type": "boolean",
                        "description": "Enable or disable metrics.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the API Gateway.\n"
                    },
                    "publicEndpoint": {
                        "type": "string",
                        "description": "The public endpoint of the API Gateway.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:apigateway/route:Route": {
            "properties": {
                "gatewayId": {
                    "type": "string",
                    "description": "The ID of the API Gateway that the route belongs to.\n"
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The HTTP methods that the route should match.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the API Gateway Route.\n"
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The paths that the route should match.\n"
                },
                "type": {
                    "type": "string",
                    "description": "This field specifies the protocol used by the ingress to route traffic to the backend service.\n"
                },
                "upstreams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:apigateway/RouteUpstream:RouteUpstream"
                    }
                },
                "websocket": {
                    "type": "boolean",
                    "description": "To enable websocket support.\n"
                }
            },
            "required": [
                "gatewayId",
                "methods",
                "name",
                "paths",
                "upstreams"
            ],
            "inputProperties": {
                "gatewayId": {
                    "type": "string",
                    "description": "The ID of the API Gateway that the route belongs to.\n"
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The HTTP methods that the route should match.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the API Gateway Route.\n"
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The paths that the route should match.\n"
                },
                "type": {
                    "type": "string",
                    "description": "This field specifies the protocol used by the ingress to route traffic to the backend service.\n"
                },
                "upstreams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:apigateway/RouteUpstream:RouteUpstream"
                    }
                },
                "websocket": {
                    "type": "boolean",
                    "description": "To enable websocket support.\n"
                }
            },
            "requiredInputs": [
                "gatewayId",
                "methods",
                "paths",
                "upstreams"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Route resources.\n",
                "properties": {
                    "gatewayId": {
                        "type": "string",
                        "description": "The ID of the API Gateway that the route belongs to.\n"
                    },
                    "methods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The HTTP methods that the route should match.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the API Gateway Route.\n"
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The paths that the route should match.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "This field specifies the protocol used by the ingress to route traffic to the backend service.\n"
                    },
                    "upstreams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:apigateway/RouteUpstream:RouteUpstream"
                        }
                    },
                    "websocket": {
                        "type": "boolean",
                        "description": "To enable websocket support.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:autoscaling/group:Group": {
            "properties": {
                "datacenterId": {
                    "type": "string",
                    "description": "Unique identifier for the resource\n"
                },
                "location": {
                    "type": "string",
                    "description": "Location of the data center.\n"
                },
                "maxReplicaCount": {
                    "type": "integer",
                    "description": "The maximum value for the number of replicas on a VM Auto Scaling Group. Must be \u003e= 0 and \u003c= 200. Will be enforced for\nboth automatic and manual changes.\n"
                },
                "minReplicaCount": {
                    "type": "integer",
                    "description": "The minimum value for the number of replicas on a VM Auto Scaling Group. Must be \u003e= 0 and \u003c= 200. Will be enforced for\nboth automatic and manual changes\n"
                },
                "name": {
                    "type": "string",
                    "description": "User-defined name for the Autoscaling Group.\n"
                },
                "policy": {
                    "$ref": "#/types/ionoscloud:autoscaling/GroupPolicy:GroupPolicy",
                    "description": "Defines the behavior of this VM Auto Scaling Group. A policy consists of triggers and actions, where an action is an\nautomated behavior, and the trigger defines the circumstances under which the action is triggered. Currently, two\nseparate actions are supported, namely scaling inward and outward, triggered by the thresholds defined for a particular\nmetric.\n"
                },
                "replicaConfiguration": {
                    "$ref": "#/types/ionoscloud:autoscaling/GroupReplicaConfiguration:GroupReplicaConfiguration"
                }
            },
            "required": [
                "datacenterId",
                "location",
                "maxReplicaCount",
                "minReplicaCount",
                "name",
                "policy",
                "replicaConfiguration"
            ],
            "inputProperties": {
                "datacenterId": {
                    "type": "string",
                    "description": "Unique identifier for the resource\n"
                },
                "maxReplicaCount": {
                    "type": "integer",
                    "description": "The maximum value for the number of replicas on a VM Auto Scaling Group. Must be \u003e= 0 and \u003c= 200. Will be enforced for\nboth automatic and manual changes.\n"
                },
                "minReplicaCount": {
                    "type": "integer",
                    "description": "The minimum value for the number of replicas on a VM Auto Scaling Group. Must be \u003e= 0 and \u003c= 200. Will be enforced for\nboth automatic and manual changes\n"
                },
                "name": {
                    "type": "string",
                    "description": "User-defined name for the Autoscaling Group.\n"
                },
                "policy": {
                    "$ref": "#/types/ionoscloud:autoscaling/GroupPolicy:GroupPolicy",
                    "description": "Defines the behavior of this VM Auto Scaling Group. A policy consists of triggers and actions, where an action is an\nautomated behavior, and the trigger defines the circumstances under which the action is triggered. Currently, two\nseparate actions are supported, namely scaling inward and outward, triggered by the thresholds defined for a particular\nmetric.\n"
                },
                "replicaConfiguration": {
                    "$ref": "#/types/ionoscloud:autoscaling/GroupReplicaConfiguration:GroupReplicaConfiguration"
                }
            },
            "requiredInputs": [
                "datacenterId",
                "maxReplicaCount",
                "minReplicaCount",
                "policy",
                "replicaConfiguration"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "description": "Unique identifier for the resource\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location of the data center.\n"
                    },
                    "maxReplicaCount": {
                        "type": "integer",
                        "description": "The maximum value for the number of replicas on a VM Auto Scaling Group. Must be \u003e= 0 and \u003c= 200. Will be enforced for\nboth automatic and manual changes.\n"
                    },
                    "minReplicaCount": {
                        "type": "integer",
                        "description": "The minimum value for the number of replicas on a VM Auto Scaling Group. Must be \u003e= 0 and \u003c= 200. Will be enforced for\nboth automatic and manual changes\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "User-defined name for the Autoscaling Group.\n"
                    },
                    "policy": {
                        "$ref": "#/types/ionoscloud:autoscaling/GroupPolicy:GroupPolicy",
                        "description": "Defines the behavior of this VM Auto Scaling Group. A policy consists of triggers and actions, where an action is an\nautomated behavior, and the trigger defines the circumstances under which the action is triggered. Currently, two\nseparate actions are supported, namely scaling inward and outward, triggered by the thresholds defined for a particular\nmetric.\n"
                    },
                    "replicaConfiguration": {
                        "$ref": "#/types/ionoscloud:autoscaling/GroupReplicaConfiguration:GroupReplicaConfiguration"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:cdn/distribution:Distribution": {
            "properties": {
                "certificateId": {
                    "type": "string",
                    "description": "The ID of the certificate to use for the distribution.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the distribution.\n"
                },
                "publicEndpointV4": {
                    "type": "string",
                    "description": "IP of the distribution, it has to be included on the domain DNS Zone as A record.\n"
                },
                "publicEndpointV6": {
                    "type": "string",
                    "description": "IP of the distribution, it has to be included on the domain DNS Zone as AAAA record.\n"
                },
                "resourceUrn": {
                    "type": "string",
                    "description": "Unique name of the resource.\n"
                },
                "routingRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:cdn/DistributionRoutingRule:DistributionRoutingRule"
                    },
                    "description": "The routing rules for the distribution.\n"
                }
            },
            "required": [
                "domain",
                "publicEndpointV4",
                "publicEndpointV6",
                "resourceUrn",
                "routingRules"
            ],
            "inputProperties": {
                "certificateId": {
                    "type": "string",
                    "description": "The ID of the certificate to use for the distribution.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the distribution.\n"
                },
                "routingRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:cdn/DistributionRoutingRule:DistributionRoutingRule"
                    },
                    "description": "The routing rules for the distribution.\n"
                }
            },
            "requiredInputs": [
                "domain",
                "routingRules"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Distribution resources.\n",
                "properties": {
                    "certificateId": {
                        "type": "string",
                        "description": "The ID of the certificate to use for the distribution.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The domain of the distribution.\n"
                    },
                    "publicEndpointV4": {
                        "type": "string",
                        "description": "IP of the distribution, it has to be included on the domain DNS Zone as A record.\n"
                    },
                    "publicEndpointV6": {
                        "type": "string",
                        "description": "IP of the distribution, it has to be included on the domain DNS Zone as AAAA record.\n"
                    },
                    "resourceUrn": {
                        "type": "string",
                        "description": "Unique name of the resource.\n"
                    },
                    "routingRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:cdn/DistributionRoutingRule:DistributionRoutingRule"
                        },
                        "description": "The routing rules for the distribution.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:cert/autoCertificate:AutoCertificate": {
            "properties": {
                "commonName": {
                    "type": "string",
                    "description": "The common name (DNS) of the certificate to issue. The common name needs to be part of a zone in IONOS Cloud DNS\n"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "The key algorithm used to generate the certificate\n"
                },
                "lastIssuedCertificateId": {
                    "type": "string",
                    "description": "The ID of the last certificate that was issued\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the auto-certificate\n"
                },
                "name": {
                    "type": "string",
                    "description": "A certificate name used for management purposes\n"
                },
                "providerId": {
                    "type": "string",
                    "description": "The certificate provider used to issue the certificates\n"
                },
                "subjectAlternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional additional names to be added to the issued certificate. The additional names needs to be part of a zone in\nIONOS Cloud DNS\n"
                }
            },
            "required": [
                "commonName",
                "keyAlgorithm",
                "lastIssuedCertificateId",
                "location",
                "name",
                "providerId"
            ],
            "inputProperties": {
                "commonName": {
                    "type": "string",
                    "description": "The common name (DNS) of the certificate to issue. The common name needs to be part of a zone in IONOS Cloud DNS\n",
                    "willReplaceOnChanges": true
                },
                "keyAlgorithm": {
                    "type": "string",
                    "description": "The key algorithm used to generate the certificate\n",
                    "willReplaceOnChanges": true
                },
                "location": {
                    "type": "string",
                    "description": "The location of the auto-certificate\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "A certificate name used for management purposes\n"
                },
                "providerId": {
                    "type": "string",
                    "description": "The certificate provider used to issue the certificates\n",
                    "willReplaceOnChanges": true
                },
                "subjectAlternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional additional names to be added to the issued certificate. The additional names needs to be part of a zone in\nIONOS Cloud DNS\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "commonName",
                "keyAlgorithm",
                "location",
                "providerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AutoCertificate resources.\n",
                "properties": {
                    "commonName": {
                        "type": "string",
                        "description": "The common name (DNS) of the certificate to issue. The common name needs to be part of a zone in IONOS Cloud DNS\n",
                        "willReplaceOnChanges": true
                    },
                    "keyAlgorithm": {
                        "type": "string",
                        "description": "The key algorithm used to generate the certificate\n",
                        "willReplaceOnChanges": true
                    },
                    "lastIssuedCertificateId": {
                        "type": "string",
                        "description": "The ID of the last certificate that was issued\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of the auto-certificate\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A certificate name used for management purposes\n"
                    },
                    "providerId": {
                        "type": "string",
                        "description": "The certificate provider used to issue the certificates\n",
                        "willReplaceOnChanges": true
                    },
                    "subjectAlternativeNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Optional additional names to be added to the issued certificate. The additional names needs to be part of a zone in\nIONOS Cloud DNS\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:cert/autoCertificateProvider:AutoCertificateProvider": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email address of the certificate requester\n"
                },
                "externalAccountBinding": {
                    "$ref": "#/types/ionoscloud:cert/AutoCertificateProviderExternalAccountBinding:AutoCertificateProviderExternalAccountBinding"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the certificate provider\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the certificate provider\n"
                },
                "server": {
                    "type": "string",
                    "description": "The URL of the certificate provider\n"
                }
            },
            "required": [
                "email",
                "name",
                "server"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "The email address of the certificate requester\n",
                    "willReplaceOnChanges": true
                },
                "externalAccountBinding": {
                    "$ref": "#/types/ionoscloud:cert/AutoCertificateProviderExternalAccountBinding:AutoCertificateProviderExternalAccountBinding",
                    "willReplaceOnChanges": true
                },
                "location": {
                    "type": "string",
                    "description": "The location of the certificate provider\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the certificate provider\n"
                },
                "server": {
                    "type": "string",
                    "description": "The URL of the certificate provider\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "email",
                "server"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AutoCertificateProvider resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The email address of the certificate requester\n",
                        "willReplaceOnChanges": true
                    },
                    "externalAccountBinding": {
                        "$ref": "#/types/ionoscloud:cert/AutoCertificateProviderExternalAccountBinding:AutoCertificateProviderExternalAccountBinding",
                        "willReplaceOnChanges": true
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of the certificate provider\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the certificate provider\n"
                    },
                    "server": {
                        "type": "string",
                        "description": "The URL of the certificate provider\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:cert/certificate:Certificate": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "The certificate body in PEM format. This attribute is immutable.\n"
                },
                "certificateChain": {
                    "type": "string",
                    "description": "The certificate chain. This attribute is immutable.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The certificate name\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key blob. This attribute is immutable.\n",
                    "secret": true
                }
            },
            "required": [
                "certificate",
                "name",
                "privateKey"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "string",
                    "description": "The certificate body in PEM format. This attribute is immutable.\n"
                },
                "certificateChain": {
                    "type": "string",
                    "description": "The certificate chain. This attribute is immutable.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The certificate name\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key blob. This attribute is immutable.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "certificate",
                "privateKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Certificate resources.\n",
                "properties": {
                    "certificate": {
                        "type": "string",
                        "description": "The certificate body in PEM format. This attribute is immutable.\n"
                    },
                    "certificateChain": {
                        "type": "string",
                        "description": "The certificate chain. This attribute is immutable.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The certificate name\n"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "The private key blob. This attribute is immutable.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/backupUnit:BackupUnit": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The e-mail address you want assigned to the backup unit.\n"
                },
                "login": {
                    "type": "string",
                    "description": "The login associated with the backup unit. Derived from the contract number\n"
                },
                "name": {
                    "type": "string",
                    "description": "Alphanumeric name you want assigned to the backup unit.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password you want assigned to the backup unit.\n",
                    "secret": true
                }
            },
            "required": [
                "email",
                "login",
                "name",
                "password"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "The e-mail address you want assigned to the backup unit.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Alphanumeric name you want assigned to the backup unit.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password you want assigned to the backup unit.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "email",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BackupUnit resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The e-mail address you want assigned to the backup unit.\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "The login associated with the backup unit. Derived from the contract number\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Alphanumeric name you want assigned to the backup unit.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password you want assigned to the backup unit.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/balancer:Balancer": {
            "properties": {
                "datacenterId": {
                    "type": "string"
                },
                "dhcp": {
                    "type": "boolean"
                },
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "datacenterId",
                "ip",
                "name",
                "nicIds"
            ],
            "inputProperties": {
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dhcp": {
                    "type": "boolean"
                },
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "datacenterId",
                "nicIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Balancer resources.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dhcp": {
                        "type": "boolean"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nicIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/bootDeviceSelection:BootDeviceSelection": {
            "properties": {
                "bootDeviceId": {
                    "type": "string",
                    "description": "ID of the entity to set as primary boot device. Possible boot devices are CDROM Images and Volumes. If omitted, server\nwill boot from PXE\n"
                },
                "datacenterId": {
                    "type": "string",
                    "description": "ID of the Datacenter that holds the server for which the boot volume is selected\n"
                },
                "defaultBootVolumeId": {
                    "type": "string",
                    "description": "ID of the first attached volume of the Server, which will be the default boot volume.\n"
                },
                "serverId": {
                    "type": "string",
                    "description": "ID of the Server for which the boot device will be selected.\n"
                }
            },
            "required": [
                "datacenterId",
                "defaultBootVolumeId",
                "serverId"
            ],
            "inputProperties": {
                "bootDeviceId": {
                    "type": "string",
                    "description": "ID of the entity to set as primary boot device. Possible boot devices are CDROM Images and Volumes. If omitted, server\nwill boot from PXE\n"
                },
                "datacenterId": {
                    "type": "string",
                    "description": "ID of the Datacenter that holds the server for which the boot volume is selected\n",
                    "willReplaceOnChanges": true
                },
                "serverId": {
                    "type": "string",
                    "description": "ID of the Server for which the boot device will be selected.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "datacenterId",
                "serverId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BootDeviceSelection resources.\n",
                "properties": {
                    "bootDeviceId": {
                        "type": "string",
                        "description": "ID of the entity to set as primary boot device. Possible boot devices are CDROM Images and Volumes. If omitted, server\nwill boot from PXE\n"
                    },
                    "datacenterId": {
                        "type": "string",
                        "description": "ID of the Datacenter that holds the server for which the boot volume is selected\n",
                        "willReplaceOnChanges": true
                    },
                    "defaultBootVolumeId": {
                        "type": "string",
                        "description": "ID of the first attached volume of the Server, which will be the default boot volume.\n"
                    },
                    "serverId": {
                        "type": "string",
                        "description": "ID of the Server for which the boot device will be selected.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/crossconnect:Crossconnect": {
            "properties": {
                "connectableDatacenters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/CrossconnectConnectableDatacenter:CrossconnectConnectableDatacenter"
                    },
                    "description": "A list containing all the connectable datacenters\n"
                },
                "description": {
                    "type": "string",
                    "description": "The desired description\n"
                },
                "name": {
                    "type": "string",
                    "description": "The desired name\n"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/CrossconnectPeer:CrossconnectPeer"
                    },
                    "description": "A list containing the details of all cross-connected datacenters\n"
                }
            },
            "required": [
                "connectableDatacenters",
                "name",
                "peers"
            ],
            "inputProperties": {
                "connectableDatacenters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/CrossconnectConnectableDatacenter:CrossconnectConnectableDatacenter"
                    },
                    "description": "A list containing all the connectable datacenters\n"
                },
                "description": {
                    "type": "string",
                    "description": "The desired description\n"
                },
                "name": {
                    "type": "string",
                    "description": "The desired name\n"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/CrossconnectPeer:CrossconnectPeer"
                    },
                    "description": "A list containing the details of all cross-connected datacenters\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Crossconnect resources.\n",
                "properties": {
                    "connectableDatacenters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/CrossconnectConnectableDatacenter:CrossconnectConnectableDatacenter"
                        },
                        "description": "A list containing all the connectable datacenters\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The desired description\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The desired name\n"
                    },
                    "peers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/CrossconnectPeer:CrossconnectPeer"
                        },
                        "description": "A list containing the details of all cross-connected datacenters\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/cubeServer:CubeServer": {
            "properties": {
                "allowReplace": {
                    "type": "boolean",
                    "description": "When set to true, allows the update of immutable fields by destroying and re-creating the resource.\n"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "bootCdrom": {
                    "type": "string",
                    "deprecationMessage": "Please use the 'ionoscloud_server_boot_device_selection' resource for managing the boot device of the server."
                },
                "bootImage": {
                    "type": "string"
                },
                "bootVolume": {
                    "type": "string"
                },
                "datacenterId": {
                    "type": "string"
                },
                "firewallruleId": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string",
                    "description": "The hostname of the resource. Allowed characters are a-z, 0-9 and - (minus). Hostname should not start with minus and\nshould not be longer than 63 characters. If no value provided explicitly, it will be populated with the name of the\nserver\n"
                },
                "imageName": {
                    "type": "string"
                },
                "imagePassword": {
                    "type": "string",
                    "secret": true
                },
                "inlineVolumeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list that contains the IDs for the volumes defined inside the cube server resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "nic": {
                    "$ref": "#/types/ionoscloud:compute/CubeServerNic:CubeServerNic"
                },
                "primaryIp": {
                    "type": "string"
                },
                "primaryNic": {
                    "type": "string"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Security Group IDs for the server\n"
                },
                "sshKeyPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "templateUuid": {
                    "type": "string"
                },
                "vmState": {
                    "type": "string",
                    "description": "Sets the power state of the cube server. Possible values: `RUNNING` or `SUSPENDED`.\n"
                },
                "volume": {
                    "$ref": "#/types/ionoscloud:compute/CubeServerVolume:CubeServerVolume"
                }
            },
            "required": [
                "availabilityZone",
                "bootCdrom",
                "bootImage",
                "bootVolume",
                "datacenterId",
                "firewallruleId",
                "hostname",
                "imageName",
                "imagePassword",
                "inlineVolumeIds",
                "name",
                "nic",
                "primaryIp",
                "primaryNic",
                "sshKeyPaths",
                "templateUuid",
                "vmState",
                "volume"
            ],
            "inputProperties": {
                "allowReplace": {
                    "type": "boolean",
                    "description": "When set to true, allows the update of immutable fields by destroying and re-creating the resource.\n"
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "bootCdrom": {
                    "type": "string",
                    "deprecationMessage": "Please use the 'ionoscloud_server_boot_device_selection' resource for managing the boot device of the server."
                },
                "bootImage": {
                    "type": "string"
                },
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostname": {
                    "type": "string",
                    "description": "The hostname of the resource. Allowed characters are a-z, 0-9 and - (minus). Hostname should not start with minus and\nshould not be longer than 63 characters. If no value provided explicitly, it will be populated with the name of the\nserver\n"
                },
                "imageName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "imagePassword": {
                    "type": "string",
                    "secret": true
                },
                "name": {
                    "type": "string"
                },
                "nic": {
                    "$ref": "#/types/ionoscloud:compute/CubeServerNic:CubeServerNic"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Security Group IDs for the server\n"
                },
                "sshKeyPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "templateUuid": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vmState": {
                    "type": "string",
                    "description": "Sets the power state of the cube server. Possible values: `RUNNING` or `SUSPENDED`.\n"
                },
                "volume": {
                    "$ref": "#/types/ionoscloud:compute/CubeServerVolume:CubeServerVolume"
                }
            },
            "requiredInputs": [
                "datacenterId",
                "nic",
                "templateUuid",
                "volume"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CubeServer resources.\n",
                "properties": {
                    "allowReplace": {
                        "type": "boolean",
                        "description": "When set to true, allows the update of immutable fields by destroying and re-creating the resource.\n"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bootCdrom": {
                        "type": "string",
                        "deprecationMessage": "Please use the 'ionoscloud_server_boot_device_selection' resource for managing the boot device of the server."
                    },
                    "bootImage": {
                        "type": "string"
                    },
                    "bootVolume": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "firewallruleId": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "The hostname of the resource. Allowed characters are a-z, 0-9 and - (minus). Hostname should not start with minus and\nshould not be longer than 63 characters. If no value provided explicitly, it will be populated with the name of the\nserver\n"
                    },
                    "imageName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "imagePassword": {
                        "type": "string",
                        "secret": true
                    },
                    "inlineVolumeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list that contains the IDs for the volumes defined inside the cube server resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nic": {
                        "$ref": "#/types/ionoscloud:compute/CubeServerNic:CubeServerNic"
                    },
                    "primaryIp": {
                        "type": "string"
                    },
                    "primaryNic": {
                        "type": "string"
                    },
                    "securityGroupsIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Security Group IDs for the server\n"
                    },
                    "sshKeyPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "templateUuid": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vmState": {
                        "type": "string",
                        "description": "Sets the power state of the cube server. Possible values: `RUNNING` or `SUSPENDED`.\n"
                    },
                    "volume": {
                        "$ref": "#/types/ionoscloud:compute/CubeServerVolume:CubeServerVolume"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/datacenter:Datacenter": {
            "properties": {
                "cpuArchitectures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/DatacenterCpuArchitecture:DatacenterCpuArchitecture"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "A description for the datacenter, e.g. staging, production\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipv6CidrBlock": {
                    "type": "string",
                    "description": "Auto-assigned /56 IPv6 CIDR block, if IPv6 is enabled for the datacenter. Read-only\n"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "secAuthProtection": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "cpuArchitectures",
                "description",
                "features",
                "ipv6CidrBlock",
                "location",
                "name",
                "version"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description for the datacenter, e.g. staging, production\n"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "secAuthProtection": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "location"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Datacenter resources.\n",
                "properties": {
                    "cpuArchitectures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/DatacenterCpuArchitecture:DatacenterCpuArchitecture"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for the datacenter, e.g. staging, production\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipv6CidrBlock": {
                        "type": "string",
                        "description": "Auto-assigned /56 IPv6 CIDR block, if IPv6 is enabled for the datacenter. Read-only\n"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secAuthProtection": {
                        "type": "boolean"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/firewall:Firewall": {
            "properties": {
                "datacenterId": {
                    "type": "string"
                },
                "icmpCode": {
                    "type": "string"
                },
                "icmpType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicId": {
                    "type": "string"
                },
                "portRangeEnd": {
                    "type": "integer"
                },
                "portRangeStart": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "sourceMac": {
                    "type": "string"
                },
                "targetIp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "datacenterId",
                "name",
                "nicId",
                "protocol",
                "serverId",
                "sourceIp",
                "targetIp",
                "type"
            ],
            "inputProperties": {
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "icmpCode": {
                    "type": "string"
                },
                "icmpType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "portRangeEnd": {
                    "type": "integer"
                },
                "portRangeStart": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sourceIp": {
                    "type": "string"
                },
                "sourceMac": {
                    "type": "string"
                },
                "targetIp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "datacenterId",
                "nicId",
                "protocol",
                "serverId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Firewall resources.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "icmpCode": {
                        "type": "string"
                    },
                    "icmpType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nicId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "portRangeEnd": {
                        "type": "integer"
                    },
                    "portRangeStart": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sourceIp": {
                        "type": "string"
                    },
                    "sourceMac": {
                        "type": "string"
                    },
                    "targetIp": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/group:Group": {
            "properties": {
                "accessActivityLog": {
                    "type": "boolean"
                },
                "accessAndManageCertificates": {
                    "type": "boolean",
                    "description": "Privilege for a group to access and manage certificates.\n"
                },
                "accessAndManageMonitoring": {
                    "type": "boolean",
                    "description": "Privilege for a group to access and manage monitoring related functionality (access metrics, CRUD on alarms,\nalarm-actions etc) using Monotoring-as-a-Service (MaaS).\n"
                },
                "createBackupUnit": {
                    "type": "boolean",
                    "description": "Create backup unit privilege.\n"
                },
                "createDatacenter": {
                    "type": "boolean"
                },
                "createFlowLog": {
                    "type": "boolean",
                    "description": "Create Flow Logs privilege.\n"
                },
                "createInternetAccess": {
                    "type": "boolean",
                    "description": "Create internet access privilege.\n"
                },
                "createK8sCluster": {
                    "type": "boolean",
                    "description": "Create Kubernetes cluster privilege.\n"
                },
                "createPcc": {
                    "type": "boolean"
                },
                "createSnapshot": {
                    "type": "boolean"
                },
                "manageDbaas": {
                    "type": "boolean",
                    "description": "Privilege for a group to manage DBaaS related functionality\n"
                },
                "name": {
                    "type": "string"
                },
                "reserveIp": {
                    "type": "boolean"
                },
                "s3Privilege": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "string",
                    "deprecationMessage": "Please use user_ids for adding users to the group, since user_id will be removed in the future"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/GroupUser:GroupUser"
                    }
                }
            },
            "required": [
                "name",
                "users"
            ],
            "inputProperties": {
                "accessActivityLog": {
                    "type": "boolean"
                },
                "accessAndManageCertificates": {
                    "type": "boolean",
                    "description": "Privilege for a group to access and manage certificates.\n"
                },
                "accessAndManageMonitoring": {
                    "type": "boolean",
                    "description": "Privilege for a group to access and manage monitoring related functionality (access metrics, CRUD on alarms,\nalarm-actions etc) using Monotoring-as-a-Service (MaaS).\n"
                },
                "createBackupUnit": {
                    "type": "boolean",
                    "description": "Create backup unit privilege.\n"
                },
                "createDatacenter": {
                    "type": "boolean"
                },
                "createFlowLog": {
                    "type": "boolean",
                    "description": "Create Flow Logs privilege.\n"
                },
                "createInternetAccess": {
                    "type": "boolean",
                    "description": "Create internet access privilege.\n"
                },
                "createK8sCluster": {
                    "type": "boolean",
                    "description": "Create Kubernetes cluster privilege.\n"
                },
                "createPcc": {
                    "type": "boolean"
                },
                "createSnapshot": {
                    "type": "boolean"
                },
                "manageDbaas": {
                    "type": "boolean",
                    "description": "Privilege for a group to manage DBaaS related functionality\n"
                },
                "name": {
                    "type": "string"
                },
                "reserveIp": {
                    "type": "boolean"
                },
                "s3Privilege": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "string",
                    "deprecationMessage": "Please use user_ids for adding users to the group, since user_id will be removed in the future"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "accessActivityLog": {
                        "type": "boolean"
                    },
                    "accessAndManageCertificates": {
                        "type": "boolean",
                        "description": "Privilege for a group to access and manage certificates.\n"
                    },
                    "accessAndManageMonitoring": {
                        "type": "boolean",
                        "description": "Privilege for a group to access and manage monitoring related functionality (access metrics, CRUD on alarms,\nalarm-actions etc) using Monotoring-as-a-Service (MaaS).\n"
                    },
                    "createBackupUnit": {
                        "type": "boolean",
                        "description": "Create backup unit privilege.\n"
                    },
                    "createDatacenter": {
                        "type": "boolean"
                    },
                    "createFlowLog": {
                        "type": "boolean",
                        "description": "Create Flow Logs privilege.\n"
                    },
                    "createInternetAccess": {
                        "type": "boolean",
                        "description": "Create internet access privilege.\n"
                    },
                    "createK8sCluster": {
                        "type": "boolean",
                        "description": "Create Kubernetes cluster privilege.\n"
                    },
                    "createPcc": {
                        "type": "boolean"
                    },
                    "createSnapshot": {
                        "type": "boolean"
                    },
                    "manageDbaas": {
                        "type": "boolean",
                        "description": "Privilege for a group to manage DBaaS related functionality\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "reserveIp": {
                        "type": "boolean"
                    },
                    "s3Privilege": {
                        "type": "boolean"
                    },
                    "userId": {
                        "type": "string",
                        "deprecationMessage": "Please use user_ids for adding users to the group, since user_id will be removed in the future"
                    },
                    "userIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/GroupUser:GroupUser"
                        }
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/iPBlock:IPBlock": {
            "properties": {
                "ipConsumers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/IPBlockIpConsumer:IPBlockIpConsumer"
                    }
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            },
            "required": [
                "ipConsumers",
                "ips",
                "location",
                "name",
                "size"
            ],
            "inputProperties": {
                "ipConsumers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/IPBlockIpConsumer:IPBlockIpConsumer"
                    }
                },
                "location": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "location",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPBlock resources.\n",
                "properties": {
                    "ipConsumers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/IPBlockIpConsumer:IPBlockIpConsumer"
                        }
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "location": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/iPFailover:IPFailover": {
            "properties": {
                "datacenterId": {
                    "type": "string"
                },
                "ip": {
                    "type": "string",
                    "description": "Failover IP\n"
                },
                "lanId": {
                    "type": "string"
                },
                "nicuuid": {
                    "type": "string",
                    "description": "The UUID of the master NIC\n"
                }
            },
            "required": [
                "datacenterId",
                "ip",
                "lanId",
                "nicuuid"
            ],
            "inputProperties": {
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "description": "Failover IP\n",
                    "willReplaceOnChanges": true
                },
                "lanId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "nicuuid": {
                    "type": "string",
                    "description": "The UUID of the master NIC\n"
                }
            },
            "requiredInputs": [
                "datacenterId",
                "ip",
                "lanId",
                "nicuuid"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IPFailover resources.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ip": {
                        "type": "string",
                        "description": "Failover IP\n",
                        "willReplaceOnChanges": true
                    },
                    "lanId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "nicuuid": {
                        "type": "string",
                        "description": "The UUID of the master NIC\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/lan:Lan": {
            "properties": {
                "datacenterId": {
                    "type": "string"
                },
                "ipFailovers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/LanIpFailover:LanIpFailover"
                    }
                },
                "ipv6CidrBlock": {
                    "type": "string",
                    "description": "IPv6 CIDR block assigned to the LAN. Can be set to 'AUTO' for an automatically assigned address or the address can be\nexplicitly supplied.\n"
                },
                "name": {
                    "type": "string"
                },
                "pcc": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                }
            },
            "required": [
                "datacenterId",
                "ipFailovers",
                "ipv6CidrBlock",
                "name"
            ],
            "inputProperties": {
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipFailovers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/LanIpFailover:LanIpFailover"
                    }
                },
                "ipv6CidrBlock": {
                    "type": "string",
                    "description": "IPv6 CIDR block assigned to the LAN. Can be set to 'AUTO' for an automatically assigned address or the address can be\nexplicitly supplied.\n"
                },
                "name": {
                    "type": "string"
                },
                "pcc": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "datacenterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Lan resources.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipFailovers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/LanIpFailover:LanIpFailover"
                        }
                    },
                    "ipv6CidrBlock": {
                        "type": "string",
                        "description": "IPv6 CIDR block assigned to the LAN. Can be set to 'AUTO' for an automatically assigned address or the address can be\nexplicitly supplied.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pcc": {
                        "type": "string"
                    },
                    "public": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/natGateway:NatGateway": {
            "properties": {
                "datacenterId": {
                    "type": "string"
                },
                "lans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/NatGatewayLan:NatGatewayLan"
                    },
                    "description": "A list of Local Area Networks the node pool should be part of\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the NAT gateway\n"
                },
                "publicIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of public IP addresses of the NAT gateway. Should be customer reserved IP addresses in that location\n"
                }
            },
            "required": [
                "datacenterId",
                "lans",
                "name",
                "publicIps"
            ],
            "inputProperties": {
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "lans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/NatGatewayLan:NatGatewayLan"
                    },
                    "description": "A list of Local Area Networks the node pool should be part of\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the NAT gateway\n"
                },
                "publicIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of public IP addresses of the NAT gateway. Should be customer reserved IP addresses in that location\n"
                }
            },
            "requiredInputs": [
                "datacenterId",
                "lans",
                "publicIps"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NatGateway resources.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "lans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/NatGatewayLan:NatGatewayLan"
                        },
                        "description": "A list of Local Area Networks the node pool should be part of\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the NAT gateway\n"
                    },
                    "publicIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Collection of public IP addresses of the NAT gateway. Should be customer reserved IP addresses in that location\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/natGatewayRule:NatGatewayRule": {
            "properties": {
                "datacenterId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the NAT gateway rule\n"
                },
                "natgatewayId": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol of the NAT gateway rule. Defaults to ALL. If protocol is 'ICMP' then targetPortRange start and end cannot be\nset.\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "Public IP address of the NAT gateway rule. Specifies the address used for masking outgoing packets source address field.\nShould be one of the customer reserved IP address already configured on the NAT gateway resource\n"
                },
                "sourceSubnet": {
                    "type": "string",
                    "description": "Source subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to based\non the packets source IP address.\n"
                },
                "targetPortRange": {
                    "$ref": "#/types/ionoscloud:compute/NatGatewayRuleTargetPortRange:NatGatewayRuleTargetPortRange",
                    "description": "Target port range of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to\nbased on destination port. If none is provided, rule will match any port\n"
                },
                "targetSubnet": {
                    "type": "string",
                    "description": "Target or destination subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule\napplies to based on the packets destination IP address. If none is provided, rule will match any address.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the NAT gateway rule.\n"
                }
            },
            "required": [
                "datacenterId",
                "name",
                "natgatewayId",
                "protocol",
                "publicIp",
                "sourceSubnet",
                "targetPortRange",
                "targetSubnet",
                "type"
            ],
            "inputProperties": {
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the NAT gateway rule\n"
                },
                "natgatewayId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol of the NAT gateway rule. Defaults to ALL. If protocol is 'ICMP' then targetPortRange start and end cannot be\nset.\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "Public IP address of the NAT gateway rule. Specifies the address used for masking outgoing packets source address field.\nShould be one of the customer reserved IP address already configured on the NAT gateway resource\n"
                },
                "sourceSubnet": {
                    "type": "string",
                    "description": "Source subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to based\non the packets source IP address.\n"
                },
                "targetPortRange": {
                    "$ref": "#/types/ionoscloud:compute/NatGatewayRuleTargetPortRange:NatGatewayRuleTargetPortRange",
                    "description": "Target port range of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to\nbased on destination port. If none is provided, rule will match any port\n"
                },
                "targetSubnet": {
                    "type": "string",
                    "description": "Target or destination subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule\napplies to based on the packets destination IP address. If none is provided, rule will match any address.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the NAT gateway rule.\n"
                }
            },
            "requiredInputs": [
                "datacenterId",
                "natgatewayId",
                "publicIp",
                "sourceSubnet"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NatGatewayRule resources.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the NAT gateway rule\n"
                    },
                    "natgatewayId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Protocol of the NAT gateway rule. Defaults to ALL. If protocol is 'ICMP' then targetPortRange start and end cannot be\nset.\n"
                    },
                    "publicIp": {
                        "type": "string",
                        "description": "Public IP address of the NAT gateway rule. Specifies the address used for masking outgoing packets source address field.\nShould be one of the customer reserved IP address already configured on the NAT gateway resource\n"
                    },
                    "sourceSubnet": {
                        "type": "string",
                        "description": "Source subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to based\non the packets source IP address.\n"
                    },
                    "targetPortRange": {
                        "$ref": "#/types/ionoscloud:compute/NatGatewayRuleTargetPortRange:NatGatewayRuleTargetPortRange",
                        "description": "Target port range of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule applies to\nbased on destination port. If none is provided, rule will match any port\n"
                    },
                    "targetSubnet": {
                        "type": "string",
                        "description": "Target or destination subnet of the NAT gateway rule. For SNAT rules it specifies which packets this translation rule\napplies to based on the packets destination IP address. If none is provided, rule will match any address.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the NAT gateway rule.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/nic:Nic": {
            "properties": {
                "datacenterId": {
                    "type": "string"
                },
                "deviceNumber": {
                    "type": "integer"
                },
                "dhcp": {
                    "type": "boolean"
                },
                "dhcpv6": {
                    "type": "boolean",
                    "description": "Indicates whether this NIC receives an IPv6 address through DHCP.\n"
                },
                "firewallActive": {
                    "type": "boolean"
                },
                "firewallType": {
                    "type": "string"
                },
                "flowlog": {
                    "$ref": "#/types/ionoscloud:compute/NicFlowlog:NicFlowlog",
                    "description": "Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture\nnetwork information such as source and destination IP addresses, source and destination ports, number of packets, amount\nof bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your\ninstances are being accessed.\n"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of IP addresses assigned to a nic. Explicitly assigned public IPs need to come from reserved IP blocks,\nPassing value null or empty array will assign an IP address automatically.\n"
                },
                "ipv6CidrBlock": {
                    "type": "string",
                    "description": "IPv6 CIDR block assigned to the NIC.\n"
                },
                "ipv6Ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection for IPv6 addresses assigned to a nic. Explicitly assigned IPv6 addresses need to come from inside the IPv6\nCIDR block assigned to the nic.\n"
                },
                "lan": {
                    "type": "integer"
                },
                "mac": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Security Group IDs\n"
                },
                "serverId": {
                    "type": "string"
                }
            },
            "required": [
                "datacenterId",
                "deviceNumber",
                "firewallType",
                "ips",
                "ipv6CidrBlock",
                "ipv6Ips",
                "lan",
                "mac",
                "name",
                "pciSlot",
                "serverId"
            ],
            "inputProperties": {
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dhcp": {
                    "type": "boolean"
                },
                "dhcpv6": {
                    "type": "boolean",
                    "description": "Indicates whether this NIC receives an IPv6 address through DHCP.\n"
                },
                "firewallActive": {
                    "type": "boolean"
                },
                "firewallType": {
                    "type": "string"
                },
                "flowlog": {
                    "$ref": "#/types/ionoscloud:compute/NicFlowlog:NicFlowlog",
                    "description": "Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture\nnetwork information such as source and destination IP addresses, source and destination ports, number of packets, amount\nof bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your\ninstances are being accessed.\n"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of IP addresses assigned to a nic. Explicitly assigned public IPs need to come from reserved IP blocks,\nPassing value null or empty array will assign an IP address automatically.\n"
                },
                "ipv6CidrBlock": {
                    "type": "string",
                    "description": "IPv6 CIDR block assigned to the NIC.\n"
                },
                "ipv6Ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection for IPv6 addresses assigned to a nic. Explicitly assigned IPv6 addresses need to come from inside the IPv6\nCIDR block assigned to the nic.\n"
                },
                "lan": {
                    "type": "integer"
                },
                "mac": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Security Group IDs\n"
                },
                "serverId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "datacenterId",
                "lan",
                "serverId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Nic resources.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "deviceNumber": {
                        "type": "integer"
                    },
                    "dhcp": {
                        "type": "boolean"
                    },
                    "dhcpv6": {
                        "type": "boolean",
                        "description": "Indicates whether this NIC receives an IPv6 address through DHCP.\n"
                    },
                    "firewallActive": {
                        "type": "boolean"
                    },
                    "firewallType": {
                        "type": "string"
                    },
                    "flowlog": {
                        "$ref": "#/types/ionoscloud:compute/NicFlowlog:NicFlowlog",
                        "description": "Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture\nnetwork information such as source and destination IP addresses, source and destination ports, number of packets, amount\nof bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your\ninstances are being accessed.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Collection of IP addresses assigned to a nic. Explicitly assigned public IPs need to come from reserved IP blocks,\nPassing value null or empty array will assign an IP address automatically.\n"
                    },
                    "ipv6CidrBlock": {
                        "type": "string",
                        "description": "IPv6 CIDR block assigned to the NIC.\n"
                    },
                    "ipv6Ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Collection for IPv6 addresses assigned to a nic. Explicitly assigned IPv6 addresses need to come from inside the IPv6\nCIDR block assigned to the nic.\n"
                    },
                    "lan": {
                        "type": "integer"
                    },
                    "mac": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "pciSlot": {
                        "type": "integer"
                    },
                    "securityGroupsIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Security Group IDs\n"
                    },
                    "serverId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/s3Key:S3Key": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether this key should be active or not.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "The Object Storage Secret key.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user that owns the key.\n"
                }
            },
            "required": [
                "secretKey",
                "userId"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether this key should be active or not.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user that owns the key.\n"
                }
            },
            "requiredInputs": [
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering S3Key resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Whether this key should be active or not.\n"
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "The Object Storage Secret key.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of the user that owns the key.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/server:Server": {
            "properties": {
                "allowReplace": {
                    "type": "boolean",
                    "description": "When set to true, allows the update of immutable fields by destroying and re-creating the resource.\n"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "bootCdrom": {
                    "type": "string",
                    "description": "The associated boot drive, if any. Must be the UUID of a bootable CDROM image that you can retrieve using the image data\nsource\n",
                    "deprecationMessage": "Please use the 'ionoscloud_server_boot_device_selection' resource for managing the boot device of the server."
                },
                "bootImage": {
                    "type": "string"
                },
                "bootVolume": {
                    "type": "string"
                },
                "cores": {
                    "type": "integer"
                },
                "cpuFamily": {
                    "type": "string"
                },
                "datacenterId": {
                    "type": "string"
                },
                "firewallruleId": {
                    "type": "string"
                },
                "firewallruleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hostname": {
                    "type": "string",
                    "description": "The hostname of the resource. Allowed characters are a-z, 0-9 and - (minus). Hostname should not start with minus and\nshould not be longer than 63 characters. If no value provided explicitly, it will be populated with the name of the\nserver\n"
                },
                "imageName": {
                    "type": "string"
                },
                "imagePassword": {
                    "type": "string",
                    "secret": true
                },
                "inlineVolumeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list that contains the IDs for the volumes defined inside the server resource.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/ServerLabel:ServerLabel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nic": {
                    "$ref": "#/types/ionoscloud:compute/ServerNic:ServerNic"
                },
                "primaryIp": {
                    "type": "string"
                },
                "primaryNic": {
                    "type": "string",
                    "description": "Id of the primary network interface\n"
                },
                "ram": {
                    "type": "integer"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Security Group IDs for the server\n"
                },
                "sshKeyPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Immutable List of absolute or relative paths to files containing public SSH key that will be injected into IonosCloud\nprovided Linux images. Does not support `~` expansion to homedir in the given path. Public SSH keys are set on the image\nas authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be\nset in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is\nused for the volume creation. This property is immutable.\n",
                    "deprecationMessage": "Will be renamed to ssh_keys in the future, to allow users to set both the ssh key path or directly the ssh key"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the\ncorresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH\nkeys are only supported if a public Linux image is used for the volume creation.\n"
                },
                "templateUuid": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "server usages: ENTERPRISE or CUBE\n"
                },
                "vmState": {
                    "type": "string",
                    "description": "Sets the power state of the server. Possible values: `RUNNING`, `SHUTOFF` or `SUSPENDED`. SUSPENDED state is only valid\nfor cube. SHUTOFF state is only valid for enterprise\n"
                },
                "volume": {
                    "$ref": "#/types/ionoscloud:compute/ServerVolume:ServerVolume"
                }
            },
            "required": [
                "availabilityZone",
                "bootCdrom",
                "bootImage",
                "bootVolume",
                "cores",
                "cpuFamily",
                "datacenterId",
                "firewallruleId",
                "firewallruleIds",
                "hostname",
                "imageName",
                "imagePassword",
                "inlineVolumeIds",
                "name",
                "primaryIp",
                "primaryNic",
                "ram",
                "type",
                "vmState",
                "volume"
            ],
            "inputProperties": {
                "allowReplace": {
                    "type": "boolean",
                    "description": "When set to true, allows the update of immutable fields by destroying and re-creating the resource.\n"
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "bootCdrom": {
                    "type": "string",
                    "description": "The associated boot drive, if any. Must be the UUID of a bootable CDROM image that you can retrieve using the image data\nsource\n",
                    "deprecationMessage": "Please use the 'ionoscloud_server_boot_device_selection' resource for managing the boot device of the server."
                },
                "bootImage": {
                    "type": "string"
                },
                "cores": {
                    "type": "integer"
                },
                "cpuFamily": {
                    "type": "string"
                },
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "firewallruleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hostname": {
                    "type": "string",
                    "description": "The hostname of the resource. Allowed characters are a-z, 0-9 and - (minus). Hostname should not start with minus and\nshould not be longer than 63 characters. If no value provided explicitly, it will be populated with the name of the\nserver\n"
                },
                "imageName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "imagePassword": {
                    "type": "string",
                    "secret": true
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/ServerLabel:ServerLabel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nic": {
                    "$ref": "#/types/ionoscloud:compute/ServerNic:ServerNic"
                },
                "ram": {
                    "type": "integer"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Security Group IDs for the server\n"
                },
                "sshKeyPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Immutable List of absolute or relative paths to files containing public SSH key that will be injected into IonosCloud\nprovided Linux images. Does not support `~` expansion to homedir in the given path. Public SSH keys are set on the image\nas authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be\nset in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is\nused for the volume creation. This property is immutable.\n",
                    "deprecationMessage": "Will be renamed to ssh_keys in the future, to allow users to set both the ssh key path or directly the ssh key"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the\ncorresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH\nkeys are only supported if a public Linux image is used for the volume creation.\n"
                },
                "templateUuid": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "server usages: ENTERPRISE or CUBE\n"
                },
                "vmState": {
                    "type": "string",
                    "description": "Sets the power state of the server. Possible values: `RUNNING`, `SHUTOFF` or `SUSPENDED`. SUSPENDED state is only valid\nfor cube. SHUTOFF state is only valid for enterprise\n"
                },
                "volume": {
                    "$ref": "#/types/ionoscloud:compute/ServerVolume:ServerVolume"
                }
            },
            "requiredInputs": [
                "datacenterId",
                "volume"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Server resources.\n",
                "properties": {
                    "allowReplace": {
                        "type": "boolean",
                        "description": "When set to true, allows the update of immutable fields by destroying and re-creating the resource.\n"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bootCdrom": {
                        "type": "string",
                        "description": "The associated boot drive, if any. Must be the UUID of a bootable CDROM image that you can retrieve using the image data\nsource\n",
                        "deprecationMessage": "Please use the 'ionoscloud_server_boot_device_selection' resource for managing the boot device of the server."
                    },
                    "bootImage": {
                        "type": "string"
                    },
                    "bootVolume": {
                        "type": "string"
                    },
                    "cores": {
                        "type": "integer"
                    },
                    "cpuFamily": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "firewallruleId": {
                        "type": "string"
                    },
                    "firewallruleIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hostname": {
                        "type": "string",
                        "description": "The hostname of the resource. Allowed characters are a-z, 0-9 and - (minus). Hostname should not start with minus and\nshould not be longer than 63 characters. If no value provided explicitly, it will be populated with the name of the\nserver\n"
                    },
                    "imageName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "imagePassword": {
                        "type": "string",
                        "secret": true
                    },
                    "inlineVolumeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list that contains the IDs for the volumes defined inside the server resource.\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/ServerLabel:ServerLabel"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "nic": {
                        "$ref": "#/types/ionoscloud:compute/ServerNic:ServerNic"
                    },
                    "primaryIp": {
                        "type": "string"
                    },
                    "primaryNic": {
                        "type": "string",
                        "description": "Id of the primary network interface\n"
                    },
                    "ram": {
                        "type": "integer"
                    },
                    "securityGroupsIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Security Group IDs for the server\n"
                    },
                    "sshKeyPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Immutable List of absolute or relative paths to files containing public SSH key that will be injected into IonosCloud\nprovided Linux images. Does not support `~` expansion to homedir in the given path. Public SSH keys are set on the image\nas authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be\nset in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is\nused for the volume creation. This property is immutable.\n",
                        "deprecationMessage": "Will be renamed to ssh_keys in the future, to allow users to set both the ssh key path or directly the ssh key"
                    },
                    "sshKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the\ncorresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH\nkeys are only supported if a public Linux image is used for the volume creation.\n"
                    },
                    "templateUuid": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "server usages: ENTERPRISE or CUBE\n"
                    },
                    "vmState": {
                        "type": "string",
                        "description": "Sets the power state of the server. Possible values: `RUNNING`, `SHUTOFF` or `SUSPENDED`. SUSPENDED state is only valid\nfor cube. SHUTOFF state is only valid for enterprise\n"
                    },
                    "volume": {
                        "$ref": "#/types/ionoscloud:compute/ServerVolume:ServerVolume"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/share:Share": {
            "properties": {
                "editPrivilege": {
                    "type": "boolean"
                },
                "groupId": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "sharePrivilege": {
                    "type": "boolean"
                }
            },
            "required": [
                "groupId",
                "resourceId"
            ],
            "inputProperties": {
                "editPrivilege": {
                    "type": "boolean"
                },
                "groupId": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "sharePrivilege": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "groupId",
                "resourceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Share resources.\n",
                "properties": {
                    "editPrivilege": {
                        "type": "boolean"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "sharePrivilege": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/snapshot:Snapshot": {
            "properties": {
                "cpuHotPlug": {
                    "type": "boolean"
                },
                "cpuHotUnplug": {
                    "type": "boolean"
                },
                "datacenterId": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Human readable description\n"
                },
                "discScsiHotPlug": {
                    "type": "boolean"
                },
                "discScsiHotUnplug": {
                    "type": "boolean"
                },
                "discVirtioHotPlug": {
                    "type": "boolean"
                },
                "discVirtioHotUnplug": {
                    "type": "boolean"
                },
                "licenceType": {
                    "type": "string",
                    "description": "OS type of this Snapshot\n"
                },
                "location": {
                    "type": "string",
                    "description": "Location of that image/snapshot\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name of that resource\n"
                },
                "nicHotPlug": {
                    "type": "boolean"
                },
                "nicHotUnplug": {
                    "type": "boolean"
                },
                "ramHotPlug": {
                    "type": "boolean"
                },
                "ramHotUnplug": {
                    "type": "boolean"
                },
                "secAuthProtection": {
                    "type": "boolean",
                    "description": "Boolean value representing if the snapshot requires extra protection e.g. two factor protection\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the image in GB\n"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "required": [
                "cpuHotPlug",
                "cpuHotUnplug",
                "datacenterId",
                "description",
                "discScsiHotPlug",
                "discScsiHotUnplug",
                "discVirtioHotPlug",
                "discVirtioHotUnplug",
                "licenceType",
                "location",
                "name",
                "nicHotPlug",
                "nicHotUnplug",
                "ramHotPlug",
                "ramHotUnplug",
                "secAuthProtection",
                "size",
                "volumeId"
            ],
            "inputProperties": {
                "cpuHotPlug": {
                    "type": "boolean"
                },
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Human readable description\n"
                },
                "discVirtioHotPlug": {
                    "type": "boolean"
                },
                "discVirtioHotUnplug": {
                    "type": "boolean"
                },
                "licenceType": {
                    "type": "string",
                    "description": "OS type of this Snapshot\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name of that resource\n"
                },
                "nicHotPlug": {
                    "type": "boolean"
                },
                "nicHotUnplug": {
                    "type": "boolean"
                },
                "ramHotPlug": {
                    "type": "boolean"
                },
                "secAuthProtection": {
                    "type": "boolean",
                    "description": "Boolean value representing if the snapshot requires extra protection e.g. two factor protection\n"
                },
                "volumeId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "datacenterId",
                "volumeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Snapshot resources.\n",
                "properties": {
                    "cpuHotPlug": {
                        "type": "boolean"
                    },
                    "cpuHotUnplug": {
                        "type": "boolean"
                    },
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Human readable description\n"
                    },
                    "discScsiHotPlug": {
                        "type": "boolean"
                    },
                    "discScsiHotUnplug": {
                        "type": "boolean"
                    },
                    "discVirtioHotPlug": {
                        "type": "boolean"
                    },
                    "discVirtioHotUnplug": {
                        "type": "boolean"
                    },
                    "licenceType": {
                        "type": "string",
                        "description": "OS type of this Snapshot\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location of that image/snapshot\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A name of that resource\n"
                    },
                    "nicHotPlug": {
                        "type": "boolean"
                    },
                    "nicHotUnplug": {
                        "type": "boolean"
                    },
                    "ramHotPlug": {
                        "type": "boolean"
                    },
                    "ramHotUnplug": {
                        "type": "boolean"
                    },
                    "secAuthProtection": {
                        "type": "boolean",
                        "description": "Boolean value representing if the snapshot requires extra protection e.g. two factor protection\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the image in GB\n"
                    },
                    "volumeId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/targetGroup:TargetGroup": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "Balancing algorithm.\n"
                },
                "healthCheck": {
                    "$ref": "#/types/ionoscloud:compute/TargetGroupHealthCheck:TargetGroupHealthCheck",
                    "description": "Health check attributes for Application Load Balancer forwarding rule\n"
                },
                "httpHealthCheck": {
                    "$ref": "#/types/ionoscloud:compute/TargetGroupHttpHealthCheck:TargetGroupHttpHealthCheck",
                    "description": "Http health check attributes for Target Group\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the target group.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Balancing protocol.\n"
                },
                "protocolVersion": {
                    "type": "string",
                    "description": "The forwarding protocol version. Value is ignored when protocol is not 'HTTP'.\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/TargetGroupTarget:TargetGroupTarget"
                    },
                    "description": "Array of items in the collection.\n"
                }
            },
            "required": [
                "algorithm",
                "healthCheck",
                "httpHealthCheck",
                "name",
                "protocol",
                "protocolVersion",
                "targets"
            ],
            "inputProperties": {
                "algorithm": {
                    "type": "string",
                    "description": "Balancing algorithm.\n"
                },
                "healthCheck": {
                    "$ref": "#/types/ionoscloud:compute/TargetGroupHealthCheck:TargetGroupHealthCheck",
                    "description": "Health check attributes for Application Load Balancer forwarding rule\n"
                },
                "httpHealthCheck": {
                    "$ref": "#/types/ionoscloud:compute/TargetGroupHttpHealthCheck:TargetGroupHttpHealthCheck",
                    "description": "Http health check attributes for Target Group\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the target group.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Balancing protocol.\n"
                },
                "protocolVersion": {
                    "type": "string",
                    "description": "The forwarding protocol version. Value is ignored when protocol is not 'HTTP'.\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/TargetGroupTarget:TargetGroupTarget"
                    },
                    "description": "Array of items in the collection.\n"
                }
            },
            "requiredInputs": [
                "algorithm",
                "protocol",
                "protocolVersion"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TargetGroup resources.\n",
                "properties": {
                    "algorithm": {
                        "type": "string",
                        "description": "Balancing algorithm.\n"
                    },
                    "healthCheck": {
                        "$ref": "#/types/ionoscloud:compute/TargetGroupHealthCheck:TargetGroupHealthCheck",
                        "description": "Health check attributes for Application Load Balancer forwarding rule\n"
                    },
                    "httpHealthCheck": {
                        "$ref": "#/types/ionoscloud:compute/TargetGroupHttpHealthCheck:TargetGroupHttpHealthCheck",
                        "description": "Http health check attributes for Target Group\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the target group.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Balancing protocol.\n"
                    },
                    "protocolVersion": {
                        "type": "string",
                        "description": "The forwarding protocol version. Value is ignored when protocol is not 'HTTP'.\n"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/TargetGroupTarget:TargetGroupTarget"
                        },
                        "description": "Array of items in the collection.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/user:User": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Indicates if the user is active\n"
                },
                "administrator": {
                    "type": "boolean",
                    "description": "Indicates if the user has administrative rights. Administrators do not need to be managed in groups, as they\nautomatically have access to all resources associated with the contract.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the user\n"
                },
                "firstName": {
                    "type": "string"
                },
                "forceSecAuth": {
                    "type": "boolean",
                    "description": "Indicates if secure (two-factor) authentication is forced for the user\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Ids of the groups that the user is a member of\n"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "s3CanonicalUserId": {
                    "type": "string"
                },
                "secAuthActive": {
                    "type": "boolean",
                    "description": "Indicates if secure (two-factor) authentication is active for the user. It can not be used in create requests - can be\nused in update.\n"
                }
            },
            "required": [
                "email",
                "firstName",
                "lastName",
                "password",
                "s3CanonicalUserId",
                "secAuthActive"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Indicates if the user is active\n"
                },
                "administrator": {
                    "type": "boolean",
                    "description": "Indicates if the user has administrative rights. Administrators do not need to be managed in groups, as they\nautomatically have access to all resources associated with the contract.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the user\n"
                },
                "firstName": {
                    "type": "string"
                },
                "forceSecAuth": {
                    "type": "boolean",
                    "description": "Indicates if secure (two-factor) authentication is forced for the user\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Ids of the groups that the user is a member of\n"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                }
            },
            "requiredInputs": [
                "email",
                "firstName",
                "lastName",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Indicates if the user is active\n"
                    },
                    "administrator": {
                        "type": "boolean",
                        "description": "Indicates if the user has administrative rights. Administrators do not need to be managed in groups, as they\nautomatically have access to all resources associated with the contract.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address of the user\n"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "forceSecAuth": {
                        "type": "boolean",
                        "description": "Indicates if secure (two-factor) authentication is forced for the user\n"
                    },
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Ids of the groups that the user is a member of\n"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "s3CanonicalUserId": {
                        "type": "string"
                    },
                    "secAuthActive": {
                        "type": "boolean",
                        "description": "Indicates if secure (two-factor) authentication is active for the user. It can not be used in create requests - can be\nused in update.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/vCPUServer:VCPUServer": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "bootCdrom": {
                    "type": "string",
                    "description": "The associated boot drive, if any. Must be the UUID of a bootable CDROM image that can be retrieved using the\nionoscloud.compute.getImage data source.\n",
                    "deprecationMessage": "Please use the 'ionoscloud_server_boot_device_selection' resource for managing the boot device of the server."
                },
                "bootImage": {
                    "type": "string"
                },
                "bootVolume": {
                    "type": "string"
                },
                "cores": {
                    "type": "integer"
                },
                "cpuFamily": {
                    "type": "string"
                },
                "datacenterId": {
                    "type": "string"
                },
                "firewallruleId": {
                    "type": "string"
                },
                "firewallruleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hostname": {
                    "type": "string",
                    "description": "The hostname of the resource. Allowed characters are a-z, 0-9 and - (minus). Hostname should not start with minus and\nshould not be longer than 63 characters. If no value provided explicitly, it will be populated with the name of the\nserver\n"
                },
                "imageName": {
                    "type": "string"
                },
                "imagePassword": {
                    "type": "string",
                    "secret": true
                },
                "inlineVolumeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list that contains the IDs for the volumes defined inside the server resource.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/VCPUServerLabel:VCPUServerLabel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nic": {
                    "$ref": "#/types/ionoscloud:compute/VCPUServerNic:VCPUServerNic"
                },
                "primaryIp": {
                    "type": "string"
                },
                "primaryNic": {
                    "type": "string",
                    "description": "Id of the primary network interface\n"
                },
                "ram": {
                    "type": "integer"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Security Group IDs for the server\n"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the\ncorresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH\nkeys are only supported if a public Linux image is used for the volume creation.\n"
                },
                "type": {
                    "type": "string"
                },
                "vmState": {
                    "type": "string",
                    "description": "Sets the power state of the vcpu server. Possible values: `RUNNING` or `SHUTOFF`.\n"
                },
                "volume": {
                    "$ref": "#/types/ionoscloud:compute/VCPUServerVolume:VCPUServerVolume"
                }
            },
            "required": [
                "availabilityZone",
                "bootCdrom",
                "bootImage",
                "bootVolume",
                "cores",
                "cpuFamily",
                "datacenterId",
                "firewallruleId",
                "firewallruleIds",
                "hostname",
                "imageName",
                "imagePassword",
                "inlineVolumeIds",
                "name",
                "primaryIp",
                "primaryNic",
                "ram",
                "type",
                "vmState",
                "volume"
            ],
            "inputProperties": {
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "bootCdrom": {
                    "type": "string",
                    "description": "The associated boot drive, if any. Must be the UUID of a bootable CDROM image that can be retrieved using the\nionoscloud.compute.getImage data source.\n",
                    "deprecationMessage": "Please use the 'ionoscloud_server_boot_device_selection' resource for managing the boot device of the server."
                },
                "bootImage": {
                    "type": "string"
                },
                "cores": {
                    "type": "integer"
                },
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "firewallruleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hostname": {
                    "type": "string",
                    "description": "The hostname of the resource. Allowed characters are a-z, 0-9 and - (minus). Hostname should not start with minus and\nshould not be longer than 63 characters. If no value provided explicitly, it will be populated with the name of the\nserver\n"
                },
                "imageName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "imagePassword": {
                    "type": "string",
                    "secret": true
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:compute/VCPUServerLabel:VCPUServerLabel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nic": {
                    "$ref": "#/types/ionoscloud:compute/VCPUServerNic:VCPUServerNic"
                },
                "ram": {
                    "type": "integer"
                },
                "securityGroupsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of Security Group IDs for the server\n"
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the\ncorresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH\nkeys are only supported if a public Linux image is used for the volume creation.\n",
                    "willReplaceOnChanges": true
                },
                "vmState": {
                    "type": "string",
                    "description": "Sets the power state of the vcpu server. Possible values: `RUNNING` or `SHUTOFF`.\n"
                },
                "volume": {
                    "$ref": "#/types/ionoscloud:compute/VCPUServerVolume:VCPUServerVolume"
                }
            },
            "requiredInputs": [
                "cores",
                "datacenterId",
                "ram",
                "volume"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VCPUServer resources.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bootCdrom": {
                        "type": "string",
                        "description": "The associated boot drive, if any. Must be the UUID of a bootable CDROM image that can be retrieved using the\nionoscloud.compute.getImage data source.\n",
                        "deprecationMessage": "Please use the 'ionoscloud_server_boot_device_selection' resource for managing the boot device of the server."
                    },
                    "bootImage": {
                        "type": "string"
                    },
                    "bootVolume": {
                        "type": "string"
                    },
                    "cores": {
                        "type": "integer"
                    },
                    "cpuFamily": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "firewallruleId": {
                        "type": "string"
                    },
                    "firewallruleIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hostname": {
                        "type": "string",
                        "description": "The hostname of the resource. Allowed characters are a-z, 0-9 and - (minus). Hostname should not start with minus and\nshould not be longer than 63 characters. If no value provided explicitly, it will be populated with the name of the\nserver\n"
                    },
                    "imageName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "imagePassword": {
                        "type": "string",
                        "secret": true
                    },
                    "inlineVolumeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list that contains the IDs for the volumes defined inside the server resource.\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/VCPUServerLabel:VCPUServerLabel"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "nic": {
                        "$ref": "#/types/ionoscloud:compute/VCPUServerNic:VCPUServerNic"
                    },
                    "primaryIp": {
                        "type": "string"
                    },
                    "primaryNic": {
                        "type": "string",
                        "description": "Id of the primary network interface\n"
                    },
                    "ram": {
                        "type": "integer"
                    },
                    "securityGroupsIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of Security Group IDs for the server\n"
                    },
                    "sshKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the\ncorresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH\nkeys are only supported if a public Linux image is used for the volume creation.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string"
                    },
                    "vmState": {
                        "type": "string",
                        "description": "Sets the power state of the vcpu server. Possible values: `RUNNING` or `SHUTOFF`.\n"
                    },
                    "volume": {
                        "$ref": "#/types/ionoscloud:compute/VCPUServerVolume:VCPUServerVolume"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:compute/volume:Volume": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "backupUnitId": {
                    "type": "string"
                },
                "bootServer": {
                    "type": "string",
                    "description": "The UUID of the attached server.\n"
                },
                "bus": {
                    "type": "string"
                },
                "cpuHotPlug": {
                    "type": "boolean"
                },
                "datacenterId": {
                    "type": "string"
                },
                "deviceNumber": {
                    "type": "integer"
                },
                "discVirtioHotPlug": {
                    "type": "boolean"
                },
                "discVirtioHotUnplug": {
                    "type": "boolean"
                },
                "diskType": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "imagePassword": {
                    "type": "string"
                },
                "licenceType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nicHotPlug": {
                    "type": "boolean"
                },
                "nicHotUnplug": {
                    "type": "boolean"
                },
                "pciSlot": {
                    "type": "integer"
                },
                "ramHotPlug": {
                    "type": "boolean"
                },
                "serverId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "sshKeyPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sshkey": {
                    "type": "string"
                },
                "userData": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "backupUnitId",
                "bootServer",
                "bus",
                "cpuHotPlug",
                "datacenterId",
                "deviceNumber",
                "discVirtioHotPlug",
                "discVirtioHotUnplug",
                "diskType",
                "image",
                "imageId",
                "licenceType",
                "name",
                "nicHotPlug",
                "nicHotUnplug",
                "pciSlot",
                "ramHotPlug",
                "serverId",
                "size",
                "sshkey",
                "userData"
            ],
            "inputProperties": {
                "availabilityZone": {
                    "type": "string"
                },
                "backupUnitId": {
                    "type": "string"
                },
                "bus": {
                    "type": "string"
                },
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "diskType": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "imagePassword": {
                    "type": "string"
                },
                "licenceType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "sshKeyPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userData": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "datacenterId",
                "diskType",
                "serverId",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Volume resources.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "backupUnitId": {
                        "type": "string"
                    },
                    "bootServer": {
                        "type": "string",
                        "description": "The UUID of the attached server.\n"
                    },
                    "bus": {
                        "type": "string"
                    },
                    "cpuHotPlug": {
                        "type": "boolean"
                    },
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "deviceNumber": {
                        "type": "integer"
                    },
                    "discVirtioHotPlug": {
                        "type": "boolean"
                    },
                    "discVirtioHotUnplug": {
                        "type": "boolean"
                    },
                    "diskType": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "imageName": {
                        "type": "string"
                    },
                    "imagePassword": {
                        "type": "string"
                    },
                    "licenceType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nicHotPlug": {
                        "type": "boolean"
                    },
                    "nicHotUnplug": {
                        "type": "boolean"
                    },
                    "pciSlot": {
                        "type": "integer"
                    },
                    "ramHotPlug": {
                        "type": "boolean"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "sshKeyPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sshKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sshkey": {
                        "type": "string"
                    },
                    "userData": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:creg/registry:Registry": {
            "properties": {
                "apiSubnetAllowLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The subnet CIDRs that are allowed to connect to the registry. Specify 'a.b.c.d/32' for an individual IP address.\n__Note__: If this list is empty or not set, there are no restrictions.\n"
                },
                "features": {
                    "$ref": "#/types/ionoscloud:creg/RegistryFeatures:RegistryFeatures"
                },
                "garbageCollectionSchedule": {
                    "$ref": "#/types/ionoscloud:creg/RegistryGarbageCollectionSchedule:RegistryGarbageCollectionSchedule"
                },
                "hostname": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "storageUsages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:creg/RegistryStorageUsage:RegistryStorageUsage"
                    }
                }
            },
            "required": [
                "features",
                "garbageCollectionSchedule",
                "hostname",
                "location",
                "name",
                "storageUsages"
            ],
            "inputProperties": {
                "apiSubnetAllowLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The subnet CIDRs that are allowed to connect to the registry. Specify 'a.b.c.d/32' for an individual IP address.\n__Note__: If this list is empty or not set, there are no restrictions.\n"
                },
                "features": {
                    "$ref": "#/types/ionoscloud:creg/RegistryFeatures:RegistryFeatures"
                },
                "garbageCollectionSchedule": {
                    "$ref": "#/types/ionoscloud:creg/RegistryGarbageCollectionSchedule:RegistryGarbageCollectionSchedule"
                },
                "location": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "location"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Registry resources.\n",
                "properties": {
                    "apiSubnetAllowLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The subnet CIDRs that are allowed to connect to the registry. Specify 'a.b.c.d/32' for an individual IP address.\n__Note__: If this list is empty or not set, there are no restrictions.\n"
                    },
                    "features": {
                        "$ref": "#/types/ionoscloud:creg/RegistryFeatures:RegistryFeatures"
                    },
                    "garbageCollectionSchedule": {
                        "$ref": "#/types/ionoscloud:creg/RegistryGarbageCollectionSchedule:RegistryGarbageCollectionSchedule"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "storageUsages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:creg/RegistryStorageUsage:RegistryStorageUsage"
                        }
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:creg/registryToken:RegistryToken": {
            "properties": {
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:creg/RegistryTokenCredential:RegistryTokenCredential"
                    }
                },
                "expiryDate": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "registryId": {
                    "type": "string"
                },
                "savePasswordToFile": {
                    "type": "string",
                    "description": "Saves password to file. Only works on create. Takes as argument a file name, or a file path\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:creg/RegistryTokenScope:RegistryTokenScope"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Can be one of enabled, disabled\n"
                }
            },
            "required": [
                "credentials",
                "name",
                "registryId",
                "scopes",
                "status"
            ],
            "inputProperties": {
                "expiryDate": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "registryId": {
                    "type": "string"
                },
                "savePasswordToFile": {
                    "type": "string",
                    "description": "Saves password to file. Only works on create. Takes as argument a file name, or a file path\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:creg/RegistryTokenScope:RegistryTokenScope"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Can be one of enabled, disabled\n"
                }
            },
            "requiredInputs": [
                "registryId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RegistryToken resources.\n",
                "properties": {
                    "credentials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:creg/RegistryTokenCredential:RegistryTokenCredential"
                        }
                    },
                    "expiryDate": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "savePasswordToFile": {
                        "type": "string",
                        "description": "Saves password to file. Only works on create. Takes as argument a file name, or a file path\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:creg/RegistryTokenScope:RegistryTokenScope"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "Can be one of enabled, disabled\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:dbaas/inMemoryDBReplicaSet:InMemoryDBReplicaSet": {
            "properties": {
                "connections": {
                    "$ref": "#/types/ionoscloud:dbaas/InMemoryDBReplicaSetConnections:InMemoryDBReplicaSetConnections",
                    "description": "The network connection for your replica set. Only one connection is allowed.\n"
                },
                "credentials": {
                    "$ref": "#/types/ionoscloud:dbaas/InMemoryDBReplicaSetCredentials:InMemoryDBReplicaSetCredentials",
                    "description": "Credentials for the InMemoryDB replicaset.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The human readable name of your replica set.\n"
                },
                "dnsName": {
                    "type": "string",
                    "description": "The DNS name pointing to your replica set. Will be used to connect to the active/standalone instance.\n"
                },
                "evictionPolicy": {
                    "type": "string",
                    "description": "The eviction policy for the replica set.\n"
                },
                "initialSnapshotId": {
                    "type": "string",
                    "description": "The ID of a snapshot to restore the replica set from. If set, the replica set will be created from the snapshot.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The replica set location\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:dbaas/InMemoryDBReplicaSetMaintenanceWindow:InMemoryDBReplicaSetMaintenanceWindow",
                    "description": "A weekly 4 hour-long window, during which maintenance might occur.\n"
                },
                "persistenceMode": {
                    "type": "string",
                    "description": "Specifies How and If data is persisted.\n"
                },
                "replicas": {
                    "type": "integer",
                    "description": "The total number of replicas in the replica set (one active and n-1 passive). In case of a standalone instance, the\nvalue is 1. In all other cases, the value is \u003e 1. The replicas will not be available as read replicas, they are only\nstandby for a failure of the active instance.\n"
                },
                "resources": {
                    "$ref": "#/types/ionoscloud:dbaas/InMemoryDBReplicaSetResources:InMemoryDBReplicaSetResources",
                    "description": "The resources of the individual replicas.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The InMemoryDB version of your replica set.\n"
                }
            },
            "required": [
                "connections",
                "credentials",
                "displayName",
                "dnsName",
                "evictionPolicy",
                "maintenanceWindow",
                "persistenceMode",
                "replicas",
                "resources",
                "version"
            ],
            "inputProperties": {
                "connections": {
                    "$ref": "#/types/ionoscloud:dbaas/InMemoryDBReplicaSetConnections:InMemoryDBReplicaSetConnections",
                    "description": "The network connection for your replica set. Only one connection is allowed.\n"
                },
                "credentials": {
                    "$ref": "#/types/ionoscloud:dbaas/InMemoryDBReplicaSetCredentials:InMemoryDBReplicaSetCredentials",
                    "description": "Credentials for the InMemoryDB replicaset.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The human readable name of your replica set.\n"
                },
                "evictionPolicy": {
                    "type": "string",
                    "description": "The eviction policy for the replica set.\n"
                },
                "initialSnapshotId": {
                    "type": "string",
                    "description": "The ID of a snapshot to restore the replica set from. If set, the replica set will be created from the snapshot.\n",
                    "willReplaceOnChanges": true
                },
                "location": {
                    "type": "string",
                    "description": "The replica set location\n",
                    "willReplaceOnChanges": true
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:dbaas/InMemoryDBReplicaSetMaintenanceWindow:InMemoryDBReplicaSetMaintenanceWindow",
                    "description": "A weekly 4 hour-long window, during which maintenance might occur.\n"
                },
                "persistenceMode": {
                    "type": "string",
                    "description": "Specifies How and If data is persisted.\n"
                },
                "replicas": {
                    "type": "integer",
                    "description": "The total number of replicas in the replica set (one active and n-1 passive). In case of a standalone instance, the\nvalue is 1. In all other cases, the value is \u003e 1. The replicas will not be available as read replicas, they are only\nstandby for a failure of the active instance.\n"
                },
                "resources": {
                    "$ref": "#/types/ionoscloud:dbaas/InMemoryDBReplicaSetResources:InMemoryDBReplicaSetResources",
                    "description": "The resources of the individual replicas.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The InMemoryDB version of your replica set.\n"
                }
            },
            "requiredInputs": [
                "connections",
                "credentials",
                "displayName",
                "evictionPolicy",
                "persistenceMode",
                "replicas",
                "resources",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InMemoryDBReplicaSet resources.\n",
                "properties": {
                    "connections": {
                        "$ref": "#/types/ionoscloud:dbaas/InMemoryDBReplicaSetConnections:InMemoryDBReplicaSetConnections",
                        "description": "The network connection for your replica set. Only one connection is allowed.\n"
                    },
                    "credentials": {
                        "$ref": "#/types/ionoscloud:dbaas/InMemoryDBReplicaSetCredentials:InMemoryDBReplicaSetCredentials",
                        "description": "Credentials for the InMemoryDB replicaset.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The human readable name of your replica set.\n"
                    },
                    "dnsName": {
                        "type": "string",
                        "description": "The DNS name pointing to your replica set. Will be used to connect to the active/standalone instance.\n"
                    },
                    "evictionPolicy": {
                        "type": "string",
                        "description": "The eviction policy for the replica set.\n"
                    },
                    "initialSnapshotId": {
                        "type": "string",
                        "description": "The ID of a snapshot to restore the replica set from. If set, the replica set will be created from the snapshot.\n",
                        "willReplaceOnChanges": true
                    },
                    "location": {
                        "type": "string",
                        "description": "The replica set location\n",
                        "willReplaceOnChanges": true
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/ionoscloud:dbaas/InMemoryDBReplicaSetMaintenanceWindow:InMemoryDBReplicaSetMaintenanceWindow",
                        "description": "A weekly 4 hour-long window, during which maintenance might occur.\n"
                    },
                    "persistenceMode": {
                        "type": "string",
                        "description": "Specifies How and If data is persisted.\n"
                    },
                    "replicas": {
                        "type": "integer",
                        "description": "The total number of replicas in the replica set (one active and n-1 passive). In case of a standalone instance, the\nvalue is 1. In all other cases, the value is \u003e 1. The replicas will not be available as read replicas, they are only\nstandby for a failure of the active instance.\n"
                    },
                    "resources": {
                        "$ref": "#/types/ionoscloud:dbaas/InMemoryDBReplicaSetResources:InMemoryDBReplicaSetResources",
                        "description": "The resources of the individual replicas.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The InMemoryDB version of your replica set.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:dbaas/mariaDBCluster:MariaDBCluster": {
            "properties": {
                "connections": {
                    "$ref": "#/types/ionoscloud:dbaas/MariaDBClusterConnections:MariaDBClusterConnections",
                    "description": "The network connection for your cluster. Only one connection is allowed.\n"
                },
                "cores": {
                    "type": "integer",
                    "description": "The number of CPU cores per instance.\n"
                },
                "credentials": {
                    "$ref": "#/types/ionoscloud:dbaas/MariaDBClusterCredentials:MariaDBClusterCredentials",
                    "description": "Credentials for the database user to be created.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The friendly name of your cluster.\n"
                },
                "dnsName": {
                    "type": "string",
                    "description": "The DNS name pointing to your cluster.\n"
                },
                "instances": {
                    "type": "integer",
                    "description": "The total number of instances in the cluster (one primary and n-1 secondary).\n"
                },
                "location": {
                    "type": "string",
                    "description": "The cluster location\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:dbaas/MariaDBClusterMaintenanceWindow:MariaDBClusterMaintenanceWindow",
                    "description": "A weekly 4 hour-long window, during which maintenance might occur.\n"
                },
                "mariadbVersion": {
                    "type": "string",
                    "description": "The MariaDB version of your cluster. Cannot be downgraded.\n"
                },
                "ram": {
                    "type": "integer",
                    "description": "The amount of memory per instance in gigabytes (GB).\n"
                },
                "storageSize": {
                    "type": "integer",
                    "description": "The amount of storage per instance in gigabytes (GB).\n"
                }
            },
            "required": [
                "connections",
                "cores",
                "credentials",
                "displayName",
                "dnsName",
                "instances",
                "maintenanceWindow",
                "mariadbVersion",
                "ram",
                "storageSize"
            ],
            "inputProperties": {
                "connections": {
                    "$ref": "#/types/ionoscloud:dbaas/MariaDBClusterConnections:MariaDBClusterConnections",
                    "description": "The network connection for your cluster. Only one connection is allowed.\n"
                },
                "cores": {
                    "type": "integer",
                    "description": "The number of CPU cores per instance.\n"
                },
                "credentials": {
                    "$ref": "#/types/ionoscloud:dbaas/MariaDBClusterCredentials:MariaDBClusterCredentials",
                    "description": "Credentials for the database user to be created.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The friendly name of your cluster.\n"
                },
                "instances": {
                    "type": "integer",
                    "description": "The total number of instances in the cluster (one primary and n-1 secondary).\n"
                },
                "location": {
                    "type": "string",
                    "description": "The cluster location\n",
                    "willReplaceOnChanges": true
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:dbaas/MariaDBClusterMaintenanceWindow:MariaDBClusterMaintenanceWindow",
                    "description": "A weekly 4 hour-long window, during which maintenance might occur.\n"
                },
                "mariadbVersion": {
                    "type": "string",
                    "description": "The MariaDB version of your cluster. Cannot be downgraded.\n"
                },
                "ram": {
                    "type": "integer",
                    "description": "The amount of memory per instance in gigabytes (GB).\n"
                },
                "storageSize": {
                    "type": "integer",
                    "description": "The amount of storage per instance in gigabytes (GB).\n"
                }
            },
            "requiredInputs": [
                "connections",
                "cores",
                "credentials",
                "displayName",
                "instances",
                "mariadbVersion",
                "ram",
                "storageSize"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MariaDBCluster resources.\n",
                "properties": {
                    "connections": {
                        "$ref": "#/types/ionoscloud:dbaas/MariaDBClusterConnections:MariaDBClusterConnections",
                        "description": "The network connection for your cluster. Only one connection is allowed.\n"
                    },
                    "cores": {
                        "type": "integer",
                        "description": "The number of CPU cores per instance.\n"
                    },
                    "credentials": {
                        "$ref": "#/types/ionoscloud:dbaas/MariaDBClusterCredentials:MariaDBClusterCredentials",
                        "description": "Credentials for the database user to be created.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The friendly name of your cluster.\n"
                    },
                    "dnsName": {
                        "type": "string",
                        "description": "The DNS name pointing to your cluster.\n"
                    },
                    "instances": {
                        "type": "integer",
                        "description": "The total number of instances in the cluster (one primary and n-1 secondary).\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The cluster location\n",
                        "willReplaceOnChanges": true
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/ionoscloud:dbaas/MariaDBClusterMaintenanceWindow:MariaDBClusterMaintenanceWindow",
                        "description": "A weekly 4 hour-long window, during which maintenance might occur.\n"
                    },
                    "mariadbVersion": {
                        "type": "string",
                        "description": "The MariaDB version of your cluster. Cannot be downgraded.\n"
                    },
                    "ram": {
                        "type": "integer",
                        "description": "The amount of memory per instance in gigabytes (GB).\n"
                    },
                    "storageSize": {
                        "type": "integer",
                        "description": "The amount of storage per instance in gigabytes (GB).\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:dbaas/mongoCluster:MongoCluster": {
            "properties": {
                "backup": {
                    "$ref": "#/types/ionoscloud:dbaas/MongoClusterBackup:MongoClusterBackup",
                    "description": "Backup related properties.\n"
                },
                "biConnector": {
                    "$ref": "#/types/ionoscloud:dbaas/MongoClusterBiConnector:MongoClusterBiConnector",
                    "description": "The MongoDB Connector for Business Intelligence allows you to query a MongoDB database using SQL commands to aid in data\nanalysis.\n"
                },
                "connectionString": {
                    "type": "string",
                    "description": "The connection string for your cluster.\n"
                },
                "connections": {
                    "$ref": "#/types/ionoscloud:dbaas/MongoClusterConnections:MongoClusterConnections",
                    "description": "Details about the network connection for your cluster.\n"
                },
                "cores": {
                    "type": "integer",
                    "description": "The number of CPU cores per instance.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of your cluster.\n"
                },
                "edition": {
                    "type": "string",
                    "description": "The cluster edition. Must be one of: playground, business, enterprise\n"
                },
                "instances": {
                    "type": "integer",
                    "description": "The total number of instances in the cluster (one master and n-1 standbys). Example: 1, 3, 5, 7. For enterprise edition\nat least 3.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The physical location where the cluster will be created. This will be where all of your instances live. Property cannot\nbe modified after datacenter creation (disallowed in update requests). Available locations: de/txl, gb/lhr, es/vit.\nUpdate forces cluster re-creation.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:dbaas/MongoClusterMaintenanceWindow:MongoClusterMaintenanceWindow",
                    "description": "A weekly 4 hour-long window, during which maintenance might occur\n"
                },
                "mongodbVersion": {
                    "type": "string",
                    "description": "The MongoDB version of your cluster. Update forces cluster re-creation.\n"
                },
                "ram": {
                    "type": "integer",
                    "description": "The amount of memory per instance in megabytes. Multiple of 1024\n"
                },
                "shards": {
                    "type": "integer",
                    "description": "The total number of shards in the cluster.\n"
                },
                "storageSize": {
                    "type": "integer",
                    "description": "The amount of storage per instance in megabytes. At least 5120, at most 2097152\n"
                },
                "storageType": {
                    "type": "string",
                    "description": "The storage type. One of : HDD, SSD, SSD Standard, SSD Premium\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "The unique ID of the template, which specifies the number of cores, storage size, and memory. You cannot downgrade to a\nsmaller template or minor edition (e.g. from business to playground). To get a list of all templates to confirm the\nchanges use the /templates endpoint.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The cluster type, either `replicaset` or `sharded-cluster`\n"
                }
            },
            "required": [
                "biConnector",
                "connectionString",
                "connections",
                "cores",
                "displayName",
                "edition",
                "instances",
                "location",
                "maintenanceWindow",
                "mongodbVersion",
                "ram",
                "storageSize",
                "storageType",
                "type"
            ],
            "inputProperties": {
                "backup": {
                    "$ref": "#/types/ionoscloud:dbaas/MongoClusterBackup:MongoClusterBackup",
                    "description": "Backup related properties.\n"
                },
                "biConnector": {
                    "$ref": "#/types/ionoscloud:dbaas/MongoClusterBiConnector:MongoClusterBiConnector",
                    "description": "The MongoDB Connector for Business Intelligence allows you to query a MongoDB database using SQL commands to aid in data\nanalysis.\n"
                },
                "connections": {
                    "$ref": "#/types/ionoscloud:dbaas/MongoClusterConnections:MongoClusterConnections",
                    "description": "Details about the network connection for your cluster.\n"
                },
                "cores": {
                    "type": "integer",
                    "description": "The number of CPU cores per instance.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of your cluster.\n"
                },
                "edition": {
                    "type": "string",
                    "description": "The cluster edition. Must be one of: playground, business, enterprise\n"
                },
                "instances": {
                    "type": "integer",
                    "description": "The total number of instances in the cluster (one master and n-1 standbys). Example: 1, 3, 5, 7. For enterprise edition\nat least 3.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The physical location where the cluster will be created. This will be where all of your instances live. Property cannot\nbe modified after datacenter creation (disallowed in update requests). Available locations: de/txl, gb/lhr, es/vit.\nUpdate forces cluster re-creation.\n",
                    "willReplaceOnChanges": true
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:dbaas/MongoClusterMaintenanceWindow:MongoClusterMaintenanceWindow",
                    "description": "A weekly 4 hour-long window, during which maintenance might occur\n"
                },
                "mongodbVersion": {
                    "type": "string",
                    "description": "The MongoDB version of your cluster. Update forces cluster re-creation.\n",
                    "willReplaceOnChanges": true
                },
                "ram": {
                    "type": "integer",
                    "description": "The amount of memory per instance in megabytes. Multiple of 1024\n"
                },
                "shards": {
                    "type": "integer",
                    "description": "The total number of shards in the cluster.\n"
                },
                "storageSize": {
                    "type": "integer",
                    "description": "The amount of storage per instance in megabytes. At least 5120, at most 2097152\n",
                    "willReplaceOnChanges": true
                },
                "storageType": {
                    "type": "string",
                    "description": "The storage type. One of : HDD, SSD, SSD Standard, SSD Premium\n"
                },
                "templateId": {
                    "type": "string",
                    "description": "The unique ID of the template, which specifies the number of cores, storage size, and memory. You cannot downgrade to a\nsmaller template or minor edition (e.g. from business to playground). To get a list of all templates to confirm the\nchanges use the /templates endpoint.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The cluster type, either `replicaset` or `sharded-cluster`\n"
                }
            },
            "requiredInputs": [
                "connections",
                "displayName",
                "instances",
                "location",
                "mongodbVersion"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MongoCluster resources.\n",
                "properties": {
                    "backup": {
                        "$ref": "#/types/ionoscloud:dbaas/MongoClusterBackup:MongoClusterBackup",
                        "description": "Backup related properties.\n"
                    },
                    "biConnector": {
                        "$ref": "#/types/ionoscloud:dbaas/MongoClusterBiConnector:MongoClusterBiConnector",
                        "description": "The MongoDB Connector for Business Intelligence allows you to query a MongoDB database using SQL commands to aid in data\nanalysis.\n"
                    },
                    "connectionString": {
                        "type": "string",
                        "description": "The connection string for your cluster.\n"
                    },
                    "connections": {
                        "$ref": "#/types/ionoscloud:dbaas/MongoClusterConnections:MongoClusterConnections",
                        "description": "Details about the network connection for your cluster.\n"
                    },
                    "cores": {
                        "type": "integer",
                        "description": "The number of CPU cores per instance.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The name of your cluster.\n"
                    },
                    "edition": {
                        "type": "string",
                        "description": "The cluster edition. Must be one of: playground, business, enterprise\n"
                    },
                    "instances": {
                        "type": "integer",
                        "description": "The total number of instances in the cluster (one master and n-1 standbys). Example: 1, 3, 5, 7. For enterprise edition\nat least 3.\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The physical location where the cluster will be created. This will be where all of your instances live. Property cannot\nbe modified after datacenter creation (disallowed in update requests). Available locations: de/txl, gb/lhr, es/vit.\nUpdate forces cluster re-creation.\n",
                        "willReplaceOnChanges": true
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/ionoscloud:dbaas/MongoClusterMaintenanceWindow:MongoClusterMaintenanceWindow",
                        "description": "A weekly 4 hour-long window, during which maintenance might occur\n"
                    },
                    "mongodbVersion": {
                        "type": "string",
                        "description": "The MongoDB version of your cluster. Update forces cluster re-creation.\n",
                        "willReplaceOnChanges": true
                    },
                    "ram": {
                        "type": "integer",
                        "description": "The amount of memory per instance in megabytes. Multiple of 1024\n"
                    },
                    "shards": {
                        "type": "integer",
                        "description": "The total number of shards in the cluster.\n"
                    },
                    "storageSize": {
                        "type": "integer",
                        "description": "The amount of storage per instance in megabytes. At least 5120, at most 2097152\n",
                        "willReplaceOnChanges": true
                    },
                    "storageType": {
                        "type": "string",
                        "description": "The storage type. One of : HDD, SSD, SSD Standard, SSD Premium\n"
                    },
                    "templateId": {
                        "type": "string",
                        "description": "The unique ID of the template, which specifies the number of cores, storage size, and memory. You cannot downgrade to a\nsmaller template or minor edition (e.g. from business to playground). To get a list of all templates to confirm the\nchanges use the /templates endpoint.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The cluster type, either `replicaset` or `sharded-cluster`\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:dbaas/mongoUser:MongoUser": {
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dbaas/MongoUserRole:MongoUserRole"
                    }
                },
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "clusterId",
                "password",
                "username"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dbaas/MongoUserRole:MongoUserRole"
                    }
                },
                "username": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "password",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MongoUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/MongoUserRole:MongoUserRole"
                        }
                    },
                    "username": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:dbaas/pSQLCluster:PSQLCluster": {
            "properties": {
                "backupLocation": {
                    "type": "string",
                    "description": "The Object Storage location where the backups will be stored.\n"
                },
                "connectionPooler": {
                    "$ref": "#/types/ionoscloud:dbaas/PSQLClusterConnectionPooler:PSQLClusterConnectionPooler",
                    "description": "Configuration options for the connection pooler\n"
                },
                "connections": {
                    "$ref": "#/types/ionoscloud:dbaas/PSQLClusterConnections:PSQLClusterConnections",
                    "description": "Details about the network connection for your cluster.\n"
                },
                "cores": {
                    "type": "integer",
                    "description": "The number of CPU cores per replica.\n"
                },
                "credentials": {
                    "$ref": "#/types/ionoscloud:dbaas/PSQLClusterCredentials:PSQLClusterCredentials",
                    "description": "Credentials for the database user to be created.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The friendly name of your cluster.\n"
                },
                "dnsName": {
                    "type": "string",
                    "description": "The DNS name pointing to your cluster\n"
                },
                "fromBackup": {
                    "$ref": "#/types/ionoscloud:dbaas/PSQLClusterFromBackup:PSQLClusterFromBackup",
                    "description": "Creates the cluster based on the existing backup.\n"
                },
                "instances": {
                    "type": "integer",
                    "description": "The total number of instances in the cluster (one master and n-1 standbys)\n"
                },
                "location": {
                    "type": "string",
                    "description": "The physical location where the cluster will be created. This will be where all of your instances live. Property cannot\nbe modified after datacenter creation (disallowed in update requests)\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:dbaas/PSQLClusterMaintenanceWindow:PSQLClusterMaintenanceWindow",
                    "description": "a weekly 4 hour-long window, during which maintenance might occur\n"
                },
                "postgresVersion": {
                    "type": "string",
                    "description": "The PostgreSQL version of your cluster.\n"
                },
                "ram": {
                    "type": "integer",
                    "description": "The amount of memory per instance in megabytes. Has to be a multiple of 1024.\n"
                },
                "storageSize": {
                    "type": "integer",
                    "description": "The amount of storage per instance in megabytes. Has to be a multiple of 2048.\n"
                },
                "storageType": {
                    "type": "string",
                    "description": "The storage type used in your cluster.\n"
                },
                "synchronizationMode": {
                    "type": "string",
                    "description": "Represents different modes of replication.\n"
                }
            },
            "required": [
                "backupLocation",
                "connectionPooler",
                "cores",
                "credentials",
                "displayName",
                "dnsName",
                "instances",
                "location",
                "maintenanceWindow",
                "postgresVersion",
                "ram",
                "storageSize",
                "storageType",
                "synchronizationMode"
            ],
            "inputProperties": {
                "backupLocation": {
                    "type": "string",
                    "description": "The Object Storage location where the backups will be stored.\n"
                },
                "connectionPooler": {
                    "$ref": "#/types/ionoscloud:dbaas/PSQLClusterConnectionPooler:PSQLClusterConnectionPooler",
                    "description": "Configuration options for the connection pooler\n"
                },
                "connections": {
                    "$ref": "#/types/ionoscloud:dbaas/PSQLClusterConnections:PSQLClusterConnections",
                    "description": "Details about the network connection for your cluster.\n"
                },
                "cores": {
                    "type": "integer",
                    "description": "The number of CPU cores per replica.\n"
                },
                "credentials": {
                    "$ref": "#/types/ionoscloud:dbaas/PSQLClusterCredentials:PSQLClusterCredentials",
                    "description": "Credentials for the database user to be created.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The friendly name of your cluster.\n"
                },
                "fromBackup": {
                    "$ref": "#/types/ionoscloud:dbaas/PSQLClusterFromBackup:PSQLClusterFromBackup",
                    "description": "Creates the cluster based on the existing backup.\n"
                },
                "instances": {
                    "type": "integer",
                    "description": "The total number of instances in the cluster (one master and n-1 standbys)\n"
                },
                "location": {
                    "type": "string",
                    "description": "The physical location where the cluster will be created. This will be where all of your instances live. Property cannot\nbe modified after datacenter creation (disallowed in update requests)\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:dbaas/PSQLClusterMaintenanceWindow:PSQLClusterMaintenanceWindow",
                    "description": "a weekly 4 hour-long window, during which maintenance might occur\n"
                },
                "postgresVersion": {
                    "type": "string",
                    "description": "The PostgreSQL version of your cluster.\n"
                },
                "ram": {
                    "type": "integer",
                    "description": "The amount of memory per instance in megabytes. Has to be a multiple of 1024.\n"
                },
                "storageSize": {
                    "type": "integer",
                    "description": "The amount of storage per instance in megabytes. Has to be a multiple of 2048.\n"
                },
                "storageType": {
                    "type": "string",
                    "description": "The storage type used in your cluster.\n"
                },
                "synchronizationMode": {
                    "type": "string",
                    "description": "Represents different modes of replication.\n"
                }
            },
            "requiredInputs": [
                "cores",
                "credentials",
                "displayName",
                "instances",
                "location",
                "postgresVersion",
                "ram",
                "storageSize",
                "storageType",
                "synchronizationMode"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PSQLCluster resources.\n",
                "properties": {
                    "backupLocation": {
                        "type": "string",
                        "description": "The Object Storage location where the backups will be stored.\n"
                    },
                    "connectionPooler": {
                        "$ref": "#/types/ionoscloud:dbaas/PSQLClusterConnectionPooler:PSQLClusterConnectionPooler",
                        "description": "Configuration options for the connection pooler\n"
                    },
                    "connections": {
                        "$ref": "#/types/ionoscloud:dbaas/PSQLClusterConnections:PSQLClusterConnections",
                        "description": "Details about the network connection for your cluster.\n"
                    },
                    "cores": {
                        "type": "integer",
                        "description": "The number of CPU cores per replica.\n"
                    },
                    "credentials": {
                        "$ref": "#/types/ionoscloud:dbaas/PSQLClusterCredentials:PSQLClusterCredentials",
                        "description": "Credentials for the database user to be created.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The friendly name of your cluster.\n"
                    },
                    "dnsName": {
                        "type": "string",
                        "description": "The DNS name pointing to your cluster\n"
                    },
                    "fromBackup": {
                        "$ref": "#/types/ionoscloud:dbaas/PSQLClusterFromBackup:PSQLClusterFromBackup",
                        "description": "Creates the cluster based on the existing backup.\n"
                    },
                    "instances": {
                        "type": "integer",
                        "description": "The total number of instances in the cluster (one master and n-1 standbys)\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The physical location where the cluster will be created. This will be where all of your instances live. Property cannot\nbe modified after datacenter creation (disallowed in update requests)\n"
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/ionoscloud:dbaas/PSQLClusterMaintenanceWindow:PSQLClusterMaintenanceWindow",
                        "description": "a weekly 4 hour-long window, during which maintenance might occur\n"
                    },
                    "postgresVersion": {
                        "type": "string",
                        "description": "The PostgreSQL version of your cluster.\n"
                    },
                    "ram": {
                        "type": "integer",
                        "description": "The amount of memory per instance in megabytes. Has to be a multiple of 1024.\n"
                    },
                    "storageSize": {
                        "type": "integer",
                        "description": "The amount of storage per instance in megabytes. Has to be a multiple of 2048.\n"
                    },
                    "storageType": {
                        "type": "string",
                        "description": "The storage type used in your cluster.\n"
                    },
                    "synchronizationMode": {
                        "type": "string",
                        "description": "Represents different modes of replication.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:dbaas/pSQLDatabase:PSQLDatabase": {
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The databasename of a given database.\n"
                },
                "owner": {
                    "type": "string",
                    "description": "The name of the role owning a given database.\n"
                }
            },
            "required": [
                "clusterId",
                "name",
                "owner"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The databasename of a given database.\n"
                },
                "owner": {
                    "type": "string",
                    "description": "The name of the role owning a given database.\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "owner"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PSQLDatabase resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The databasename of a given database.\n"
                    },
                    "owner": {
                        "type": "string",
                        "description": "The name of the role owning a given database.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:dbaas/pSQLUser:PSQLUser": {
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "isSystemUser": {
                    "type": "boolean",
                    "description": "Describes whether this user is a system user or not. A system user cannot be updated or deleted.\n"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "clusterId",
                "isSystemUser",
                "password",
                "username"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "password",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PSQLUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "isSystemUser": {
                        "type": "boolean",
                        "description": "Describes whether this user is a system user or not. A system user cannot be updated or deleted.\n"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "username": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:dns/record:Record": {
            "properties": {
                "content": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "fqdn": {
                    "type": "string",
                    "description": "Fully qualified domain name\n"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "ttl": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "zoneId": {
                    "type": "string"
                }
            },
            "required": [
                "content",
                "enabled",
                "fqdn",
                "name",
                "ttl",
                "type",
                "zoneId"
            ],
            "inputProperties": {
                "content": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "ttl": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "zoneId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "content",
                "type",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Record resources.\n",
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "fqdn": {
                        "type": "string",
                        "description": "Fully qualified domain name\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "zoneId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:dns/zone:Zone": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "nameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of available name servers.\n"
                }
            },
            "required": [
                "enabled",
                "name",
                "nameservers"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Zone resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameservers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of available name servers.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:dsaas/cluster:Cluster": {
            "properties": {
                "datacenterId": {
                    "type": "string",
                    "description": "The UUID of the virtual data center (VDC) in which the cluster is provisioned\n"
                },
                "lans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dsaas/ClusterLan:ClusterLan"
                    },
                    "description": "A list of LANs you want this node pool to be part of\n"
                },
                "maintenanceWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dsaas/ClusterMaintenanceWindow:ClusterMaintenanceWindow"
                    },
                    "description": "Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of your cluster. Must be 63 characters or less and must be empty or begin and end with an alphanumeric\ncharacter ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the Data Platform.\n"
                }
            },
            "required": [
                "datacenterId",
                "maintenanceWindows",
                "name",
                "version"
            ],
            "inputProperties": {
                "datacenterId": {
                    "type": "string",
                    "description": "The UUID of the virtual data center (VDC) in which the cluster is provisioned\n",
                    "willReplaceOnChanges": true
                },
                "lans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dsaas/ClusterLan:ClusterLan"
                    },
                    "description": "A list of LANs you want this node pool to be part of\n"
                },
                "maintenanceWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dsaas/ClusterMaintenanceWindow:ClusterMaintenanceWindow"
                    },
                    "description": "Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of your cluster. Must be 63 characters or less and must be empty or begin and end with an alphanumeric\ncharacter ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the Data Platform.\n"
                }
            },
            "requiredInputs": [
                "datacenterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "description": "The UUID of the virtual data center (VDC) in which the cluster is provisioned\n",
                        "willReplaceOnChanges": true
                    },
                    "lans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:dsaas/ClusterLan:ClusterLan"
                        },
                        "description": "A list of LANs you want this node pool to be part of\n"
                    },
                    "maintenanceWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:dsaas/ClusterMaintenanceWindow:ClusterMaintenanceWindow"
                        },
                        "description": "Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of your cluster. Must be 63 characters or less and must be empty or begin and end with an alphanumeric\ncharacter ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the Data Platform.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:dsaas/nodePool:NodePool": {
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value pairs attached to node pool resource as [Kubernetes\nannotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)\n"
                },
                "autoScaling": {
                    "$ref": "#/types/ionoscloud:dsaas/NodePoolAutoScaling:NodePoolAutoScaling",
                    "description": "The range defining the minimum and maximum number of worker nodes that the managed node group can scale in\n"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "The availability zone of the virtual datacenter region where the node pool resources should be provisioned.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The UUID of an existing Dataplatform cluster.\n"
                },
                "coresCount": {
                    "type": "integer",
                    "description": "The number of CPU cores per node.\n"
                },
                "cpuFamily": {
                    "type": "string",
                    "description": "A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can\nbe retrieved from the datacenter resource.\n"
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The UUID of the virtual data center (VDC) in which the nodepool is provisioned\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value pairs attached to the node pool resource as [Kubernetes\nlabels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)\n"
                },
                "maintenanceWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dsaas/NodePoolMaintenanceWindow:NodePoolMaintenanceWindow"
                    },
                    "description": "Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of your node pool. Must be 63 characters or less and must be empty or begin and end with an alphanumeric\ncharacter ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.\n"
                },
                "nodeCount": {
                    "type": "integer",
                    "description": "The number of nodes that make up the node pool.\n"
                },
                "ramSize": {
                    "type": "integer",
                    "description": "The RAM size for one node in MB. Must be set in multiples of 1024 MB, with a minimum size is of 2048 MB.\n"
                },
                "storageSize": {
                    "type": "integer",
                    "description": "The size of the volume in GB. The size must be greater than 10GB.\n"
                },
                "storageType": {
                    "type": "string",
                    "description": "The type of hardware for the volume.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the Data Platform.\n"
                }
            },
            "required": [
                "availabilityZone",
                "clusterId",
                "coresCount",
                "cpuFamily",
                "datacenterId",
                "maintenanceWindows",
                "name",
                "nodeCount",
                "ramSize",
                "storageSize",
                "storageType",
                "version"
            ],
            "inputProperties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value pairs attached to node pool resource as [Kubernetes\nannotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)\n"
                },
                "autoScaling": {
                    "$ref": "#/types/ionoscloud:dsaas/NodePoolAutoScaling:NodePoolAutoScaling",
                    "description": "The range defining the minimum and maximum number of worker nodes that the managed node group can scale in\n"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "The availability zone of the virtual datacenter region where the node pool resources should be provisioned.\n",
                    "willReplaceOnChanges": true
                },
                "clusterId": {
                    "type": "string",
                    "description": "The UUID of an existing Dataplatform cluster.\n"
                },
                "coresCount": {
                    "type": "integer",
                    "description": "The number of CPU cores per node.\n",
                    "willReplaceOnChanges": true
                },
                "cpuFamily": {
                    "type": "string",
                    "description": "A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can\nbe retrieved from the datacenter resource.\n",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value pairs attached to the node pool resource as [Kubernetes\nlabels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)\n"
                },
                "maintenanceWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:dsaas/NodePoolMaintenanceWindow:NodePoolMaintenanceWindow"
                    },
                    "description": "Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of your node pool. Must be 63 characters or less and must be empty or begin and end with an alphanumeric\ncharacter ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.\n",
                    "willReplaceOnChanges": true
                },
                "nodeCount": {
                    "type": "integer",
                    "description": "The number of nodes that make up the node pool.\n"
                },
                "ramSize": {
                    "type": "integer",
                    "description": "The RAM size for one node in MB. Must be set in multiples of 1024 MB, with a minimum size is of 2048 MB.\n",
                    "willReplaceOnChanges": true
                },
                "storageSize": {
                    "type": "integer",
                    "description": "The size of the volume in GB. The size must be greater than 10GB.\n",
                    "willReplaceOnChanges": true
                },
                "storageType": {
                    "type": "string",
                    "description": "The type of hardware for the volume.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "nodeCount"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NodePool resources.\n",
                "properties": {
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value pairs attached to node pool resource as [Kubernetes\nannotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)\n"
                    },
                    "autoScaling": {
                        "$ref": "#/types/ionoscloud:dsaas/NodePoolAutoScaling:NodePoolAutoScaling",
                        "description": "The range defining the minimum and maximum number of worker nodes that the managed node group can scale in\n"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "description": "The availability zone of the virtual datacenter region where the node pool resources should be provisioned.\n",
                        "willReplaceOnChanges": true
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The UUID of an existing Dataplatform cluster.\n"
                    },
                    "coresCount": {
                        "type": "integer",
                        "description": "The number of CPU cores per node.\n",
                        "willReplaceOnChanges": true
                    },
                    "cpuFamily": {
                        "type": "string",
                        "description": "A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can\nbe retrieved from the datacenter resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "datacenterId": {
                        "type": "string",
                        "description": "The UUID of the virtual data center (VDC) in which the nodepool is provisioned\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value pairs attached to the node pool resource as [Kubernetes\nlabels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)\n"
                    },
                    "maintenanceWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:dsaas/NodePoolMaintenanceWindow:NodePoolMaintenanceWindow"
                        },
                        "description": "Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of your node pool. Must be 63 characters or less and must be empty or begin and end with an alphanumeric\ncharacter ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.\n",
                        "willReplaceOnChanges": true
                    },
                    "nodeCount": {
                        "type": "integer",
                        "description": "The number of nodes that make up the node pool.\n"
                    },
                    "ramSize": {
                        "type": "integer",
                        "description": "The RAM size for one node in MB. Must be set in multiples of 1024 MB, with a minimum size is of 2048 MB.\n",
                        "willReplaceOnChanges": true
                    },
                    "storageSize": {
                        "type": "integer",
                        "description": "The size of the volume in GB. The size must be greater than 10GB.\n",
                        "willReplaceOnChanges": true
                    },
                    "storageType": {
                        "type": "string",
                        "description": "The type of hardware for the volume.\n",
                        "willReplaceOnChanges": true
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the Data Platform.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:index/datacenterNsgSelection:DatacenterNsgSelection": {
            "properties": {
                "datacenterId": {
                    "type": "string",
                    "description": "ID of the Datacenter to which the NSG will be attached.\n"
                },
                "nsgId": {
                    "type": "string",
                    "description": "ID of the NSG which will be attached to the datacenter. If an empty string is specified and a NSG was attached\npreviously, it will be unset.\n"
                }
            },
            "required": [
                "datacenterId",
                "nsgId"
            ],
            "inputProperties": {
                "datacenterId": {
                    "type": "string",
                    "description": "ID of the Datacenter to which the NSG will be attached.\n"
                },
                "nsgId": {
                    "type": "string",
                    "description": "ID of the NSG which will be attached to the datacenter. If an empty string is specified and a NSG was attached\npreviously, it will be unset.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "datacenterId",
                "nsgId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatacenterNsgSelection resources.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "description": "ID of the Datacenter to which the NSG will be attached.\n"
                    },
                    "nsgId": {
                        "type": "string",
                        "description": "ID of the NSG which will be attached to the datacenter. If an empty string is specified and a NSG was attached\npreviously, it will be unset.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:index/nsg:Nsg": {
            "properties": {
                "datacenterId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ruleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "datacenterId",
                "description",
                "name",
                "ruleIds"
            ],
            "inputProperties": {
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "datacenterId",
                "description"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Nsg resources.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ruleIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:index/nsgFirewallrule:NsgFirewallrule": {
            "properties": {
                "datacenterId": {
                    "type": "string"
                },
                "icmpCode": {
                    "type": "string"
                },
                "icmpType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nsgId": {
                    "type": "string"
                },
                "portRangeEnd": {
                    "type": "integer"
                },
                "portRangeStart": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "sourceMac": {
                    "type": "string"
                },
                "targetIp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "datacenterId",
                "name",
                "nsgId",
                "protocol",
                "sourceIp",
                "targetIp",
                "type"
            ],
            "inputProperties": {
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "icmpCode": {
                    "type": "string"
                },
                "icmpType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nsgId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "portRangeEnd": {
                    "type": "integer"
                },
                "portRangeStart": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "sourceMac": {
                    "type": "string"
                },
                "targetIp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "datacenterId",
                "nsgId",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NsgFirewallrule resources.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "icmpCode": {
                        "type": "string"
                    },
                    "icmpType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nsgId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "portRangeEnd": {
                        "type": "integer"
                    },
                    "portRangeStart": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "sourceIp": {
                        "type": "string"
                    },
                    "sourceMac": {
                        "type": "string"
                    },
                    "targetIp": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:k8s/cluster:Cluster": {
            "properties": {
                "allowReplace": {
                    "type": "boolean",
                    "description": "When set to true, allows the update of immutable fields by destroying and re-creating the cluster.\n"
                },
                "apiSubnetAllowLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction.\nIf no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will\nbe used: 32 for IPv4 and 128 for IPv6.\n"
                },
                "k8sVersion": {
                    "type": "string",
                    "description": "The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.\nThe provider will ignore downgrades of patch level.\n"
                },
                "location": {
                    "type": "string",
                    "description": "This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have\na data center at that location. This attribute is immutable.\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:k8s/ClusterMaintenanceWindow:ClusterMaintenanceWindow",
                    "description": "A maintenance window comprise of a day of the week and a time for maintenance to be allowed\n"
                },
                "name": {
                    "type": "string",
                    "description": "The desired name for the cluster\n"
                },
                "natGatewayIp": {
                    "type": "string",
                    "description": "The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the\nsame location as the cluster's location. This attribute is mandatory if the cluster is private.\n"
                },
                "nodeSubnet": {
                    "type": "string",
                    "description": "The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid\nCIDR notation for an IPv4 network prefix of 16 bits length.\n"
                },
                "public": {
                    "type": "boolean",
                    "description": "The indicator if the cluster is public or private.\n"
                },
                "s3Buckets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/ClusterS3Bucket:ClusterS3Bucket"
                    },
                    "description": "List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store\nK8s API audit logs.\n"
                },
                "viableNodePoolVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of versions that may be used for node pools under this cluster\n"
                }
            },
            "required": [
                "k8sVersion",
                "maintenanceWindow",
                "name",
                "nodeSubnet",
                "viableNodePoolVersions"
            ],
            "inputProperties": {
                "allowReplace": {
                    "type": "boolean",
                    "description": "When set to true, allows the update of immutable fields by destroying and re-creating the cluster.\n"
                },
                "apiSubnetAllowLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction.\nIf no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will\nbe used: 32 for IPv4 and 128 for IPv6.\n"
                },
                "k8sVersion": {
                    "type": "string",
                    "description": "The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.\nThe provider will ignore downgrades of patch level.\n"
                },
                "location": {
                    "type": "string",
                    "description": "This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have\na data center at that location. This attribute is immutable.\n",
                    "willReplaceOnChanges": true
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:k8s/ClusterMaintenanceWindow:ClusterMaintenanceWindow",
                    "description": "A maintenance window comprise of a day of the week and a time for maintenance to be allowed\n"
                },
                "name": {
                    "type": "string",
                    "description": "The desired name for the cluster\n"
                },
                "natGatewayIp": {
                    "type": "string",
                    "description": "The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the\nsame location as the cluster's location. This attribute is mandatory if the cluster is private.\n",
                    "willReplaceOnChanges": true
                },
                "nodeSubnet": {
                    "type": "string",
                    "description": "The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid\nCIDR notation for an IPv4 network prefix of 16 bits length.\n",
                    "willReplaceOnChanges": true
                },
                "public": {
                    "type": "boolean",
                    "description": "The indicator if the cluster is public or private.\n",
                    "willReplaceOnChanges": true
                },
                "s3Buckets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/ClusterS3Bucket:ClusterS3Bucket"
                    },
                    "description": "List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store\nK8s API audit logs.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "allowReplace": {
                        "type": "boolean",
                        "description": "When set to true, allows the update of immutable fields by destroying and re-creating the cluster.\n"
                    },
                    "apiSubnetAllowLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Access to the K8s API server is restricted to these CIDRs. Cluster-internal traffic is not affected by this restriction.\nIf no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value will\nbe used: 32 for IPv4 and 128 for IPv6.\n"
                    },
                    "k8sVersion": {
                        "type": "string",
                        "description": "The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.\nThe provider will ignore downgrades of patch level.\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "This attribute is mandatory if the cluster is private. The location must be enabled for your contract, or you must have\na data center at that location. This attribute is immutable.\n",
                        "willReplaceOnChanges": true
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/ionoscloud:k8s/ClusterMaintenanceWindow:ClusterMaintenanceWindow",
                        "description": "A maintenance window comprise of a day of the week and a time for maintenance to be allowed\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The desired name for the cluster\n"
                    },
                    "natGatewayIp": {
                        "type": "string",
                        "description": "The NAT gateway IP of the cluster if the cluster is private. This attribute is immutable. Must be a reserved IP in the\nsame location as the cluster's location. This attribute is mandatory if the cluster is private.\n",
                        "willReplaceOnChanges": true
                    },
                    "nodeSubnet": {
                        "type": "string",
                        "description": "The node subnet of the cluster, if the cluster is private. This attribute is optional and immutable. Must be a valid\nCIDR notation for an IPv4 network prefix of 16 bits length.\n",
                        "willReplaceOnChanges": true
                    },
                    "public": {
                        "type": "boolean",
                        "description": "The indicator if the cluster is public or private.\n",
                        "willReplaceOnChanges": true
                    },
                    "s3Buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:k8s/ClusterS3Bucket:ClusterS3Bucket"
                        },
                        "description": "List of Object Storage bucket configured for K8s usage. For now it contains only an Object Storage bucket used to store\nK8s API audit logs.\n"
                    },
                    "viableNodePoolVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of versions that may be used for node pools under this cluster\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:k8s/nodePool:NodePool": {
            "properties": {
                "allowReplace": {
                    "type": "boolean",
                    "description": "When set to true, allows the update of immutable fields by destroying and re-creating the node pool\n"
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "autoScaling": {
                    "$ref": "#/types/ionoscloud:k8s/NodePoolAutoScaling:NodePoolAutoScaling",
                    "description": "The range defining the minimum and maximum number of worker nodes that the managed node group can scale in\n"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "The compute availability zone in which the nodes should exist\n"
                },
                "coresCount": {
                    "type": "integer",
                    "description": "CPU cores count\n"
                },
                "cpuFamily": {
                    "type": "string",
                    "description": "CPU Family\n"
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The UUID of the VDC\n"
                },
                "k8sClusterId": {
                    "type": "string",
                    "description": "The UUID of an existing kubernetes cluster\n"
                },
                "k8sVersion": {
                    "type": "string",
                    "description": "The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.\nThe provider will ignore downgrades of patch level.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "lans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/NodePoolLan:NodePoolLan"
                    },
                    "description": "A list of Local Area Networks the node pool should be part of\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:k8s/NodePoolMaintenanceWindow:NodePoolMaintenanceWindow",
                    "description": "A maintenance window comprise of a day of the week and a time for maintenance to be allowed\n"
                },
                "name": {
                    "type": "string",
                    "description": "The desired name for the node pool\n"
                },
                "nodeCount": {
                    "type": "integer",
                    "description": "The number of nodes in this node pool\n"
                },
                "publicIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of fixed IPs. Cannot be set on private clusters.\n"
                },
                "ramSize": {
                    "type": "integer",
                    "description": "The amount of RAM in MB\n"
                },
                "storageSize": {
                    "type": "integer",
                    "description": "The total allocated storage capacity of a node in GB\n"
                },
                "storageType": {
                    "type": "string",
                    "description": "Storage type to use\n"
                }
            },
            "required": [
                "availabilityZone",
                "coresCount",
                "cpuFamily",
                "datacenterId",
                "k8sClusterId",
                "k8sVersion",
                "maintenanceWindow",
                "name",
                "nodeCount",
                "ramSize",
                "storageSize",
                "storageType"
            ],
            "inputProperties": {
                "allowReplace": {
                    "type": "boolean",
                    "description": "When set to true, allows the update of immutable fields by destroying and re-creating the node pool\n"
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "autoScaling": {
                    "$ref": "#/types/ionoscloud:k8s/NodePoolAutoScaling:NodePoolAutoScaling",
                    "description": "The range defining the minimum and maximum number of worker nodes that the managed node group can scale in\n"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "The compute availability zone in which the nodes should exist\n",
                    "willReplaceOnChanges": true
                },
                "coresCount": {
                    "type": "integer",
                    "description": "CPU cores count\n",
                    "willReplaceOnChanges": true
                },
                "cpuFamily": {
                    "type": "string",
                    "description": "CPU Family\n",
                    "willReplaceOnChanges": true
                },
                "datacenterId": {
                    "type": "string",
                    "description": "The UUID of the VDC\n"
                },
                "k8sClusterId": {
                    "type": "string",
                    "description": "The UUID of an existing kubernetes cluster\n"
                },
                "k8sVersion": {
                    "type": "string",
                    "description": "The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.\nThe provider will ignore downgrades of patch level.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "lans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:k8s/NodePoolLan:NodePoolLan"
                    },
                    "description": "A list of Local Area Networks the node pool should be part of\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:k8s/NodePoolMaintenanceWindow:NodePoolMaintenanceWindow",
                    "description": "A maintenance window comprise of a day of the week and a time for maintenance to be allowed\n"
                },
                "name": {
                    "type": "string",
                    "description": "The desired name for the node pool\n",
                    "willReplaceOnChanges": true
                },
                "nodeCount": {
                    "type": "integer",
                    "description": "The number of nodes in this node pool\n"
                },
                "publicIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of fixed IPs. Cannot be set on private clusters.\n"
                },
                "ramSize": {
                    "type": "integer",
                    "description": "The amount of RAM in MB\n",
                    "willReplaceOnChanges": true
                },
                "storageSize": {
                    "type": "integer",
                    "description": "The total allocated storage capacity of a node in GB\n",
                    "willReplaceOnChanges": true
                },
                "storageType": {
                    "type": "string",
                    "description": "Storage type to use\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "coresCount",
                "cpuFamily",
                "datacenterId",
                "k8sClusterId",
                "k8sVersion",
                "nodeCount",
                "ramSize",
                "storageSize",
                "storageType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NodePool resources.\n",
                "properties": {
                    "allowReplace": {
                        "type": "boolean",
                        "description": "When set to true, allows the update of immutable fields by destroying and re-creating the node pool\n"
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "autoScaling": {
                        "$ref": "#/types/ionoscloud:k8s/NodePoolAutoScaling:NodePoolAutoScaling",
                        "description": "The range defining the minimum and maximum number of worker nodes that the managed node group can scale in\n"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "description": "The compute availability zone in which the nodes should exist\n",
                        "willReplaceOnChanges": true
                    },
                    "coresCount": {
                        "type": "integer",
                        "description": "CPU cores count\n",
                        "willReplaceOnChanges": true
                    },
                    "cpuFamily": {
                        "type": "string",
                        "description": "CPU Family\n",
                        "willReplaceOnChanges": true
                    },
                    "datacenterId": {
                        "type": "string",
                        "description": "The UUID of the VDC\n"
                    },
                    "k8sClusterId": {
                        "type": "string",
                        "description": "The UUID of an existing kubernetes cluster\n"
                    },
                    "k8sVersion": {
                        "type": "string",
                        "description": "The desired Kubernetes Version. For supported values, please check the API documentation. Downgrades are not supported.\nThe provider will ignore downgrades of patch level.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "lans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:k8s/NodePoolLan:NodePoolLan"
                        },
                        "description": "A list of Local Area Networks the node pool should be part of\n"
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/ionoscloud:k8s/NodePoolMaintenanceWindow:NodePoolMaintenanceWindow",
                        "description": "A maintenance window comprise of a day of the week and a time for maintenance to be allowed\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The desired name for the node pool\n",
                        "willReplaceOnChanges": true
                    },
                    "nodeCount": {
                        "type": "integer",
                        "description": "The number of nodes in this node pool\n"
                    },
                    "publicIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of fixed IPs. Cannot be set on private clusters.\n"
                    },
                    "ramSize": {
                        "type": "integer",
                        "description": "The amount of RAM in MB\n",
                        "willReplaceOnChanges": true
                    },
                    "storageSize": {
                        "type": "integer",
                        "description": "The total allocated storage capacity of a node in GB\n",
                        "willReplaceOnChanges": true
                    },
                    "storageType": {
                        "type": "string",
                        "description": "Storage type to use\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:kafka/cluster:Cluster": {
            "properties": {
                "brokerAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP address and port of cluster brokers.\n"
                },
                "connections": {
                    "$ref": "#/types/ionoscloud:kafka/ClusterConnections:ClusterConnections",
                    "description": "The network connection for your Kafka Cluster. Only one connection is allowed.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of your Kafka Cluster. Supported locations: de/fra, de/txl\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of your Kafka Cluster. Must be 63 characters or less and must begin and end with an alphanumeric character\n(`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between.\n"
                },
                "size": {
                    "type": "string",
                    "description": "The size of your Kafka Cluster. The size of the Kafka Cluster is given in T-shirt sizes. Valid values are: XS, S\n"
                },
                "version": {
                    "type": "string",
                    "description": "The desired Kafka Version. Supported version: 3.7.0\n"
                }
            },
            "required": [
                "brokerAddresses",
                "connections",
                "name",
                "size",
                "version"
            ],
            "inputProperties": {
                "connections": {
                    "$ref": "#/types/ionoscloud:kafka/ClusterConnections:ClusterConnections",
                    "description": "The network connection for your Kafka Cluster. Only one connection is allowed.\n",
                    "willReplaceOnChanges": true
                },
                "location": {
                    "type": "string",
                    "description": "The location of your Kafka Cluster. Supported locations: de/fra, de/txl\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of your Kafka Cluster. Must be 63 characters or less and must begin and end with an alphanumeric character\n(`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between.\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "string",
                    "description": "The size of your Kafka Cluster. The size of the Kafka Cluster is given in T-shirt sizes. Valid values are: XS, S\n",
                    "willReplaceOnChanges": true
                },
                "version": {
                    "type": "string",
                    "description": "The desired Kafka Version. Supported version: 3.7.0\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "connections",
                "size",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "brokerAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IP address and port of cluster brokers.\n"
                    },
                    "connections": {
                        "$ref": "#/types/ionoscloud:kafka/ClusterConnections:ClusterConnections",
                        "description": "The network connection for your Kafka Cluster. Only one connection is allowed.\n",
                        "willReplaceOnChanges": true
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of your Kafka Cluster. Supported locations: de/fra, de/txl\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of your Kafka Cluster. Must be 63 characters or less and must begin and end with an alphanumeric character\n(`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between.\n",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "string",
                        "description": "The size of your Kafka Cluster. The size of the Kafka Cluster is given in T-shirt sizes. Valid values are: XS, S\n",
                        "willReplaceOnChanges": true
                    },
                    "version": {
                        "type": "string",
                        "description": "The desired Kafka Version. Supported version: 3.7.0\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:kafka/topic:Topic": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the Kafka Cluster to which the topic belongs.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of your Kafka Cluster Topic. Supported locations: de/fra, de/txl\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of your Kafka Cluster Topic. Must be 63 characters or less and must begin and end with an alphanumeric\ncharacter (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between.\n"
                },
                "numberOfPartitions": {
                    "type": "integer",
                    "description": "The number of partitions of the topic. Partitions allow for parallel processing of messages. The partition count must be\ngreater than or equal to the replication factor.\n"
                },
                "replicationFactor": {
                    "type": "integer",
                    "description": "The number of replicas of the topic. The replication factor determines how many copies of the topic are stored on\ndifferent brokers. The replication factor must be less than or equal to the number of brokers in the Kafka Cluster.\n"
                },
                "retentionTime": {
                    "type": "integer",
                    "description": "This configuration controls the maximum time we will retain a log before we will discard old log segments to free up\nspace. This represents an SLA on how soon consumers must read their data. If set to -1, no time limit is applied.\n"
                },
                "segmentBytes": {
                    "type": "integer",
                    "description": "This configuration controls the segment file size for the log. Retention and cleaning is always done a file at a time so\na larger segment size means fewer files but less granular control over retention.\n"
                }
            },
            "required": [
                "clusterId",
                "name"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the Kafka Cluster to which the topic belongs.\n",
                    "willReplaceOnChanges": true
                },
                "location": {
                    "type": "string",
                    "description": "The location of your Kafka Cluster Topic. Supported locations: de/fra, de/txl\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of your Kafka Cluster Topic. Must be 63 characters or less and must begin and end with an alphanumeric\ncharacter (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between.\n",
                    "willReplaceOnChanges": true
                },
                "numberOfPartitions": {
                    "type": "integer",
                    "description": "The number of partitions of the topic. Partitions allow for parallel processing of messages. The partition count must be\ngreater than or equal to the replication factor.\n",
                    "willReplaceOnChanges": true
                },
                "replicationFactor": {
                    "type": "integer",
                    "description": "The number of replicas of the topic. The replication factor determines how many copies of the topic are stored on\ndifferent brokers. The replication factor must be less than or equal to the number of brokers in the Kafka Cluster.\n",
                    "willReplaceOnChanges": true
                },
                "retentionTime": {
                    "type": "integer",
                    "description": "This configuration controls the maximum time we will retain a log before we will discard old log segments to free up\nspace. This represents an SLA on how soon consumers must read their data. If set to -1, no time limit is applied.\n",
                    "willReplaceOnChanges": true
                },
                "segmentBytes": {
                    "type": "integer",
                    "description": "This configuration controls the segment file size for the log. Retention and cleaning is always done a file at a time so\na larger segment size means fewer files but less granular control over retention.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Topic resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the Kafka Cluster to which the topic belongs.\n",
                        "willReplaceOnChanges": true
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of your Kafka Cluster Topic. Supported locations: de/fra, de/txl\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of your Kafka Cluster Topic. Must be 63 characters or less and must begin and end with an alphanumeric\ncharacter (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between.\n",
                        "willReplaceOnChanges": true
                    },
                    "numberOfPartitions": {
                        "type": "integer",
                        "description": "The number of partitions of the topic. Partitions allow for parallel processing of messages. The partition count must be\ngreater than or equal to the replication factor.\n",
                        "willReplaceOnChanges": true
                    },
                    "replicationFactor": {
                        "type": "integer",
                        "description": "The number of replicas of the topic. The replication factor determines how many copies of the topic are stored on\ndifferent brokers. The replication factor must be less than or equal to the number of brokers in the Kafka Cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "retentionTime": {
                        "type": "integer",
                        "description": "This configuration controls the maximum time we will retain a log before we will discard old log segments to free up\nspace. This represents an SLA on how soon consumers must read their data. If set to -1, no time limit is applied.\n",
                        "willReplaceOnChanges": true
                    },
                    "segmentBytes": {
                        "type": "integer",
                        "description": "This configuration controls the segment file size for the log. Retention and cleaning is always done a file at a time so\na larger segment size means fewer files but less granular control over retention.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:logging/pipeline:Pipeline": {
            "properties": {
                "grafanaAddress": {
                    "type": "string",
                    "description": "The address of the client's grafana instance\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of your logging pipeline. Default: de/txl. Supported locations: de/fra, de/txl, es/vit, gb/lhr, fr/par\n"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:logging/PipelineLog:PipelineLog"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "grafanaAddress",
                "logs",
                "name"
            ],
            "inputProperties": {
                "location": {
                    "type": "string",
                    "description": "The location of your logging pipeline. Default: de/txl. Supported locations: de/fra, de/txl, es/vit, gb/lhr, fr/par\n",
                    "willReplaceOnChanges": true
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:logging/PipelineLog:PipelineLog"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "logs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pipeline resources.\n",
                "properties": {
                    "grafanaAddress": {
                        "type": "string",
                        "description": "The address of the client's grafana instance\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of your logging pipeline. Default: de/txl. Supported locations: de/fra, de/txl, es/vit, gb/lhr, fr/par\n",
                        "willReplaceOnChanges": true
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:logging/PipelineLog:PipelineLog"
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:nfs/cluster:Cluster": {
            "properties": {
                "connections": {
                    "$ref": "#/types/ionoscloud:nfs/ClusterConnections:ClusterConnections",
                    "description": "The network connections for the Network File Storage Cluster.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the Network File Storage Cluster. Available locations: 'de/fra, 'de/txl'\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Network File Storage Cluster.\n"
                },
                "nfs": {
                    "$ref": "#/types/ionoscloud:nfs/ClusterNfs:ClusterNfs"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the Network File Storage Cluster. Minimum size is 2.\n"
                }
            },
            "required": [
                "connections",
                "name",
                "size"
            ],
            "inputProperties": {
                "connections": {
                    "$ref": "#/types/ionoscloud:nfs/ClusterConnections:ClusterConnections",
                    "description": "The network connections for the Network File Storage Cluster.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the Network File Storage Cluster. Available locations: 'de/fra, 'de/txl'\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Network File Storage Cluster.\n"
                },
                "nfs": {
                    "$ref": "#/types/ionoscloud:nfs/ClusterNfs:ClusterNfs"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the Network File Storage Cluster. Minimum size is 2.\n"
                }
            },
            "requiredInputs": [
                "connections",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "connections": {
                        "$ref": "#/types/ionoscloud:nfs/ClusterConnections:ClusterConnections",
                        "description": "The network connections for the Network File Storage Cluster.\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of the Network File Storage Cluster. Available locations: 'de/fra, 'de/txl'\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Network File Storage Cluster.\n"
                    },
                    "nfs": {
                        "$ref": "#/types/ionoscloud:nfs/ClusterNfs:ClusterNfs"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the Network File Storage Cluster. Minimum size is 2.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:nfs/share:Share": {
            "properties": {
                "clientGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:nfs/ShareClientGroup:ShareClientGroup"
                    },
                    "description": "The groups of clients are the systems connecting to the Network File Storage cluster.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the Network File Storage Cluster.\n"
                },
                "gid": {
                    "type": "integer",
                    "description": "The group ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the Network File Storage Cluster. Available locations: 'de/fra, 'de/txl'\n"
                },
                "name": {
                    "type": "string",
                    "description": "The directory being exported\n"
                },
                "nfsPath": {
                    "type": "string",
                    "description": "Path to the NFS export. The NFS path is the path to the directory being exported.\n"
                },
                "quota": {
                    "type": "integer",
                    "description": "The quota in MiB for the export. The quota can restrict the amount of data that can be stored within the export. The\nquota can be disabled using `0`.\n"
                },
                "uid": {
                    "type": "integer",
                    "description": "The user ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.\n"
                }
            },
            "required": [
                "clientGroups",
                "clusterId",
                "name",
                "nfsPath"
            ],
            "inputProperties": {
                "clientGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:nfs/ShareClientGroup:ShareClientGroup"
                    },
                    "description": "The groups of clients are the systems connecting to the Network File Storage cluster.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the Network File Storage Cluster.\n",
                    "willReplaceOnChanges": true
                },
                "gid": {
                    "type": "integer",
                    "description": "The group ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the Network File Storage Cluster. Available locations: 'de/fra, 'de/txl'\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The directory being exported\n"
                },
                "quota": {
                    "type": "integer",
                    "description": "The quota in MiB for the export. The quota can restrict the amount of data that can be stored within the export. The\nquota can be disabled using `0`.\n"
                },
                "uid": {
                    "type": "integer",
                    "description": "The user ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.\n"
                }
            },
            "requiredInputs": [
                "clientGroups",
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Share resources.\n",
                "properties": {
                    "clientGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:nfs/ShareClientGroup:ShareClientGroup"
                        },
                        "description": "The groups of clients are the systems connecting to the Network File Storage cluster.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the Network File Storage Cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "gid": {
                        "type": "integer",
                        "description": "The group ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of the Network File Storage Cluster. Available locations: 'de/fra, 'de/txl'\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The directory being exported\n"
                    },
                    "nfsPath": {
                        "type": "string",
                        "description": "Path to the NFS export. The NFS path is the path to the directory being exported.\n"
                    },
                    "quota": {
                        "type": "integer",
                        "description": "The quota in MiB for the export. The quota can restrict the amount of data that can be stored within the export. The\nquota can be disabled using `0`.\n"
                    },
                    "uid": {
                        "type": "integer",
                        "description": "The user ID that will own the exported directory. If not set, **anonymous** (`512`) will be used.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:nlb/balancer:Balancer": {
            "properties": {
                "centralLogging": {
                    "type": "boolean",
                    "description": "Turn logging on and off for this product. Default value is 'false'.\n"
                },
                "datacenterId": {
                    "type": "string"
                },
                "flowlog": {
                    "$ref": "#/types/ionoscloud:nlb/BalancerFlowlog:BalancerFlowlog",
                    "description": "Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture\nnetwork information such as source and destination IP addresses, source and destination ports, number of packets, amount\nof bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your\ninstances are being accessed.\n"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer\nreserved IP for the public load balancer and private IP for the private load balancer.\n"
                },
                "lbPrivateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If\nuser will not provide any IP then the system will generate one IP with /24 subnet.\n"
                },
                "listenerLan": {
                    "type": "integer",
                    "description": "Id of the listening LAN. (inbound)\n"
                },
                "loggingFormat": {
                    "type": "string",
                    "description": "Specifies the format of the logs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name of that Network Load Balancer\n"
                },
                "targetLan": {
                    "type": "integer",
                    "description": "Id of the balanced private target LAN. (outbound)\n"
                }
            },
            "required": [
                "datacenterId",
                "lbPrivateIps",
                "listenerLan",
                "name",
                "targetLan"
            ],
            "inputProperties": {
                "centralLogging": {
                    "type": "boolean",
                    "description": "Turn logging on and off for this product. Default value is 'false'.\n"
                },
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flowlog": {
                    "$ref": "#/types/ionoscloud:nlb/BalancerFlowlog:BalancerFlowlog",
                    "description": "Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture\nnetwork information such as source and destination IP addresses, source and destination ports, number of packets, amount\nof bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your\ninstances are being accessed.\n"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer\nreserved IP for the public load balancer and private IP for the private load balancer.\n"
                },
                "lbPrivateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If\nuser will not provide any IP then the system will generate one IP with /24 subnet.\n"
                },
                "listenerLan": {
                    "type": "integer",
                    "description": "Id of the listening LAN. (inbound)\n"
                },
                "loggingFormat": {
                    "type": "string",
                    "description": "Specifies the format of the logs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name of that Network Load Balancer\n"
                },
                "targetLan": {
                    "type": "integer",
                    "description": "Id of the balanced private target LAN. (outbound)\n"
                }
            },
            "requiredInputs": [
                "datacenterId",
                "listenerLan",
                "targetLan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Balancer resources.\n",
                "properties": {
                    "centralLogging": {
                        "type": "boolean",
                        "description": "Turn logging on and off for this product. Default value is 'false'.\n"
                    },
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "flowlog": {
                        "$ref": "#/types/ionoscloud:nlb/BalancerFlowlog:BalancerFlowlog",
                        "description": "Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture\nnetwork information such as source and destination IP addresses, source and destination ports, number of packets, amount\nof bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your\ninstances are being accessed.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer\nreserved IP for the public load balancer and private IP for the private load balancer.\n"
                    },
                    "lbPrivateIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If\nuser will not provide any IP then the system will generate one IP with /24 subnet.\n"
                    },
                    "listenerLan": {
                        "type": "integer",
                        "description": "Id of the listening LAN. (inbound)\n"
                    },
                    "loggingFormat": {
                        "type": "string",
                        "description": "Specifies the format of the logs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A name of that Network Load Balancer\n"
                    },
                    "targetLan": {
                        "type": "integer",
                        "description": "Id of the balanced private target LAN. (outbound)\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:nlb/forwardingRule:ForwardingRule": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "Algorithm for the balancing.\n"
                },
                "datacenterId": {
                    "type": "string"
                },
                "healthCheck": {
                    "$ref": "#/types/ionoscloud:nlb/ForwardingRuleHealthCheck:ForwardingRuleHealthCheck",
                    "description": "Health check attributes for Network Load Balancer forwarding rule\n"
                },
                "listenerIp": {
                    "type": "string",
                    "description": "Listening IP. (inbound)\n"
                },
                "listenerPort": {
                    "type": "integer",
                    "description": "Listening port number. (inbound) (range: 1 to 65535)\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name of that Network Load Balancer forwarding rule\n"
                },
                "networkloadbalancerId": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol of the balancing.\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:nlb/ForwardingRuleTarget:ForwardingRuleTarget"
                    },
                    "description": "Array of items in that collection\n"
                }
            },
            "required": [
                "algorithm",
                "datacenterId",
                "healthCheck",
                "listenerIp",
                "listenerPort",
                "name",
                "networkloadbalancerId",
                "protocol",
                "targets"
            ],
            "inputProperties": {
                "algorithm": {
                    "type": "string",
                    "description": "Algorithm for the balancing.\n"
                },
                "datacenterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "healthCheck": {
                    "$ref": "#/types/ionoscloud:nlb/ForwardingRuleHealthCheck:ForwardingRuleHealthCheck",
                    "description": "Health check attributes for Network Load Balancer forwarding rule\n"
                },
                "listenerIp": {
                    "type": "string",
                    "description": "Listening IP. (inbound)\n"
                },
                "listenerPort": {
                    "type": "integer",
                    "description": "Listening port number. (inbound) (range: 1 to 65535)\n"
                },
                "name": {
                    "type": "string",
                    "description": "A name of that Network Load Balancer forwarding rule\n"
                },
                "networkloadbalancerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol of the balancing.\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:nlb/ForwardingRuleTarget:ForwardingRuleTarget"
                    },
                    "description": "Array of items in that collection\n"
                }
            },
            "requiredInputs": [
                "algorithm",
                "datacenterId",
                "listenerIp",
                "listenerPort",
                "networkloadbalancerId",
                "protocol",
                "targets"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ForwardingRule resources.\n",
                "properties": {
                    "algorithm": {
                        "type": "string",
                        "description": "Algorithm for the balancing.\n"
                    },
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "healthCheck": {
                        "$ref": "#/types/ionoscloud:nlb/ForwardingRuleHealthCheck:ForwardingRuleHealthCheck",
                        "description": "Health check attributes for Network Load Balancer forwarding rule\n"
                    },
                    "listenerIp": {
                        "type": "string",
                        "description": "Listening IP. (inbound)\n"
                    },
                    "listenerPort": {
                        "type": "integer",
                        "description": "Listening port number. (inbound) (range: 1 to 65535)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A name of that Network Load Balancer forwarding rule\n"
                    },
                    "networkloadbalancerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Protocol of the balancing.\n"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:nlb/ForwardingRuleTarget:ForwardingRuleTarget"
                        },
                        "description": "Array of items in that collection\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:objectstorage/bucket:Bucket": {
            "description": "Manages **IONOS Object Storage Buckets** on IonosCloud.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.Bucket;\nimport com.pulumi.ionoscloud.objectstorage.BucketArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Bucket(\"example\", BucketArgs.builder()\n            .region(\"eu-central-3\")\n            .objectLockEnabled(true)\n            .forceDestroy(true)\n            .tags(Map.ofEntries(\n                Map.entry(\"key1\", \"value1\"),\n                Map.entry(\"key2\", \"value2\")\n            ))\n            .timeouts(BucketTimeoutsArgs.builder()\n                .create(\"10m\")\n                .delete(\"10m\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: ionoscloud:objectstorage:Bucket\n    properties:\n      region: eu-central-3\n      objectLockEnabled: true\n      forceDestroy: true\n      tags:\n        key1: value1\n        key2: value2\n      timeouts:\n        - create: 10m\n          delete: 10m\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nResource Bucket can be imported using the `bucket name`\n\n```sh\n$ pulumi import ionoscloud:objectstorage/bucket:Bucket example example\n```\n\n",
            "properties": {
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Whether all objects should be deleted from the bucket so that the bucket can be destroyed\n"
                },
                "name": {
                    "type": "string",
                    "description": "[string] The bucket name. [ 3 .. 63 ] characters\n"
                },
                "objectLockEnabled": {
                    "type": "boolean",
                    "description": "[bool] The object lock configuration status of the bucket. Must be `true` or `false`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "[string] Specifies the Region where the bucket will be created. Please refer to the list of available regions\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A mapping of tags to assign to the bucket.\n"
                },
                "timeouts": {
                    "$ref": "#/types/ionoscloud:objectstorage/BucketTimeouts:BucketTimeouts",
                    "description": "Timeouts for this resource.\n"
                }
            },
            "required": [
                "forceDestroy",
                "name",
                "objectLockEnabled",
                "region"
            ],
            "inputProperties": {
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Whether all objects should be deleted from the bucket so that the bucket can be destroyed\n"
                },
                "name": {
                    "type": "string",
                    "description": "[string] The bucket name. [ 3 .. 63 ] characters\n"
                },
                "objectLockEnabled": {
                    "type": "boolean",
                    "description": "[bool] The object lock configuration status of the bucket. Must be `true` or `false`.\n"
                },
                "region": {
                    "type": "string",
                    "description": "[string] Specifies the Region where the bucket will be created. Please refer to the list of available regions\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A mapping of tags to assign to the bucket.\n"
                },
                "timeouts": {
                    "$ref": "#/types/ionoscloud:objectstorage/BucketTimeouts:BucketTimeouts",
                    "description": "Timeouts for this resource.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Bucket resources.\n",
                "properties": {
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "Whether all objects should be deleted from the bucket so that the bucket can be destroyed\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "[string] The bucket name. [ 3 .. 63 ] characters\n"
                    },
                    "objectLockEnabled": {
                        "type": "boolean",
                        "description": "[bool] The object lock configuration status of the bucket. Must be `true` or `false`.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "[string] Specifies the Region where the bucket will be created. Please refer to the list of available regions\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A mapping of tags to assign to the bucket.\n"
                    },
                    "timeouts": {
                        "$ref": "#/types/ionoscloud:objectstorage/BucketTimeouts:BucketTimeouts",
                        "description": "Timeouts for this resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:objectstorage/bucketLifecycleConfiguration:BucketLifecycleConfiguration": {
            "description": "Manages Lifecycle Configuration for Buckets on IonosCloud.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.Bucket;\nimport com.pulumi.ionoscloud.objectstorage.BucketLifecycleConfiguration;\nimport com.pulumi.ionoscloud.objectstorage.BucketLifecycleConfigurationArgs;\nimport com.pulumi.ionoscloud.objectstorage.inputs.BucketLifecycleConfigurationRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleBucket = new Bucket(\"exampleBucket\");\n\n        var exampleBucketLifecycleConfiguration = new BucketLifecycleConfiguration(\"exampleBucketLifecycleConfiguration\", BucketLifecycleConfigurationArgs.builder()\n            .bucket(exampleBucket.name())\n            .rules(            \n                BucketLifecycleConfigurationRuleArgs.builder()\n                    .id(\"1\")\n                    .status(\"Enabled\")\n                    .prefix(\"/logs\")\n                    .expiration(BucketLifecycleConfigurationRuleExpirationArgs.builder()\n                        .days(90)\n                        .build())\n                    .build(),\n                BucketLifecycleConfigurationRuleArgs.builder()\n                    .id(\"2\")\n                    .status(\"Enabled\")\n                    .prefix(\"/logs\")\n                    .noncurrentVersionExpiration(BucketLifecycleConfigurationRuleNoncurrentVersionExpirationArgs.builder()\n                        .noncurrentDays(90)\n                        .build())\n                    .build(),\n                BucketLifecycleConfigurationRuleArgs.builder()\n                    .id(\"3\")\n                    .status(\"Enabled\")\n                    .prefix(\"/logs\")\n                    .abortIncompleteMultipartUpload(BucketLifecycleConfigurationRuleAbortIncompleteMultipartUploadArgs.builder()\n                        .daysAfterInitiation(90)\n                        .build())\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleBucket:\n    type: ionoscloud:objectstorage:Bucket\n  exampleBucketLifecycleConfiguration:\n    type: ionoscloud:objectstorage:BucketLifecycleConfiguration\n    properties:\n      bucket: ${exampleBucket.name}\n      rules:\n        - id: '1'\n          status: Enabled\n          prefix: /logs\n          expiration:\n            - days: 90\n        - id: '2'\n          status: Enabled\n          prefix: /logs\n          noncurrentVersionExpiration:\n            - noncurrentDays: 90\n        - id: '3'\n          status: Enabled\n          prefix: /logs\n          abortIncompleteMultipartUpload:\n            - daysAfterInitiation: 90\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nIONOS Object Storage Bucket lifecycle configuration can be imported using the `bucket` name.\n\n```sh\n$ pulumi import ionoscloud:objectstorage/bucketLifecycleConfiguration:BucketLifecycleConfiguration example example\n```\n\n",
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:objectstorage/BucketLifecycleConfigurationRule:BucketLifecycleConfigurationRule"
                    },
                    "description": "A list of lifecycle rules for objects in the bucket.\n"
                }
            },
            "required": [
                "bucket"
            ],
            "inputProperties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:objectstorage/BucketLifecycleConfigurationRule:BucketLifecycleConfigurationRule"
                    },
                    "description": "A list of lifecycle rules for objects in the bucket.\n"
                }
            },
            "requiredInputs": [
                "bucket"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BucketLifecycleConfiguration resources.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "[string] The name of the bucket where the object will be stored.\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:objectstorage/BucketLifecycleConfigurationRule:BucketLifecycleConfigurationRule"
                        },
                        "description": "A list of lifecycle rules for objects in the bucket.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:objectstorage/bucketPolicy:BucketPolicy": {
            "description": "Manages **Buckets policies** on IonosCloud.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ionoscloud from \"@pulumi/ionoscloud\";\n\nconst exampleBucket = new ionoscloud.objectstorage.Bucket(\"exampleBucket\", {});\nconst exampleBucketPolicy = new ionoscloud.objectstorage.BucketPolicy(\"exampleBucketPolicy\", {\n    bucket: exampleBucket.name,\n    policy: JSON.stringify({\n        Version: \"2012-10-17\",\n        Statement: [{\n            Sid: \"Delegate certain actions to another user\",\n            Action: [\n                \"s3:ListBucket\",\n                \"s3:PutObject\",\n                \"s3:GetObject\",\n            ],\n            Effect: \"Allow\",\n            Resource: [\n                \"arn:aws:s3:::example\",\n                \"arn:aws:s3:::example/*\",\n            ],\n            Condition: {\n                IpAddress: [\"123.123.123.123/32\"],\n            },\n            Principal: [\"arn:aws:iam:::user/31000000:9acd8251-2857-410e-b1fd-ca86462bdcec\"],\n        }],\n    }),\n});\n```\n```python\nimport pulumi\nimport ionoscloud as ionoscloud\nimport json\n\nexample_bucket = ionoscloud.objectstorage.Bucket(\"exampleBucket\")\nexample_bucket_policy = ionoscloud.objectstorage.BucketPolicy(\"exampleBucketPolicy\",\n    bucket=example_bucket.name,\n    policy=json.dumps({\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [{\n            \"Sid\": \"Delegate certain actions to another user\",\n            \"Action\": [\n                \"s3:ListBucket\",\n                \"s3:PutObject\",\n                \"s3:GetObject\",\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": [\n                \"arn:aws:s3:::example\",\n                \"arn:aws:s3:::example/*\",\n            ],\n            \"Condition\": {\n                \"IpAddress\": [\"123.123.123.123/32\"],\n            },\n            \"Principal\": [\"arn:aws:iam:::user/31000000:9acd8251-2857-410e-b1fd-ca86462bdcec\"],\n        }],\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Ionoscloud = Pulumi.Ionoscloud;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleBucket = new Ionoscloud.Objectstorage.Bucket(\"exampleBucket\");\n\n    var exampleBucketPolicy = new Ionoscloud.Objectstorage.BucketPolicy(\"exampleBucketPolicy\", new()\n    {\n        Bucket = exampleBucket.Name,\n        Policy = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"Version\"] = \"2012-10-17\",\n            [\"Statement\"] = new[]\n            {\n                new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"Sid\"] = \"Delegate certain actions to another user\",\n                    [\"Action\"] = new[]\n                    {\n                        \"s3:ListBucket\",\n                        \"s3:PutObject\",\n                        \"s3:GetObject\",\n                    },\n                    [\"Effect\"] = \"Allow\",\n                    [\"Resource\"] = new[]\n                    {\n                        \"arn:aws:s3:::example\",\n                        \"arn:aws:s3:::example/*\",\n                    },\n                    [\"Condition\"] = new Dictionary\u003cstring, object?\u003e\n                    {\n                        [\"IpAddress\"] = new[]\n                        {\n                            \"123.123.123.123/32\",\n                        },\n                    },\n                    [\"Principal\"] = new[]\n                    {\n                        \"arn:aws:iam:::user/31000000:9acd8251-2857-410e-b1fd-ca86462bdcec\",\n                    },\n                },\n            },\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/objectstorage\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleBucket, err := objectstorage.NewBucket(ctx, \"exampleBucket\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"Version\": \"2012-10-17\",\n\t\t\t\"Statement\": []map[string]interface{}{\n\t\t\t\tmap[string]interface{}{\n\t\t\t\t\t\"Sid\": \"Delegate certain actions to another user\",\n\t\t\t\t\t\"Action\": []string{\n\t\t\t\t\t\t\"s3:ListBucket\",\n\t\t\t\t\t\t\"s3:PutObject\",\n\t\t\t\t\t\t\"s3:GetObject\",\n\t\t\t\t\t},\n\t\t\t\t\t\"Effect\": \"Allow\",\n\t\t\t\t\t\"Resource\": []string{\n\t\t\t\t\t\t\"arn:aws:s3:::example\",\n\t\t\t\t\t\t\"arn:aws:s3:::example/*\",\n\t\t\t\t\t},\n\t\t\t\t\t\"Condition\": map[string]interface{}{\n\t\t\t\t\t\t\"IpAddress\": []string{\n\t\t\t\t\t\t\t\"123.123.123.123/32\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"Principal\": []string{\n\t\t\t\t\t\t\"arn:aws:iam:::user/31000000:9acd8251-2857-410e-b1fd-ca86462bdcec\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = objectstorage.NewBucketPolicy(ctx, \"exampleBucketPolicy\", \u0026objectstorage.BucketPolicyArgs{\n\t\t\tBucket: exampleBucket.Name,\n\t\t\tPolicy: pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.Bucket;\nimport com.pulumi.ionoscloud.objectstorage.BucketPolicy;\nimport com.pulumi.ionoscloud.objectstorage.BucketPolicyArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleBucket = new Bucket(\"exampleBucket\");\n\n        var exampleBucketPolicy = new BucketPolicy(\"exampleBucketPolicy\", BucketPolicyArgs.builder()\n            .bucket(exampleBucket.name())\n            .policy(serializeJson(\n                jsonObject(\n                    jsonProperty(\"Version\", \"2012-10-17\"),\n                    jsonProperty(\"Statement\", jsonArray(jsonObject(\n                        jsonProperty(\"Sid\", \"Delegate certain actions to another user\"),\n                        jsonProperty(\"Action\", jsonArray(\n                            \"s3:ListBucket\", \n                            \"s3:PutObject\", \n                            \"s3:GetObject\"\n                        )),\n                        jsonProperty(\"Effect\", \"Allow\"),\n                        jsonProperty(\"Resource\", jsonArray(\n                            \"arn:aws:s3:::example\", \n                            \"arn:aws:s3:::example/*\"\n                        )),\n                        jsonProperty(\"Condition\", jsonObject(\n                            jsonProperty(\"IpAddress\", jsonArray(\"123.123.123.123/32\"))\n                        )),\n                        jsonProperty(\"Principal\", jsonArray(\"arn:aws:iam:::user/31000000:9acd8251-2857-410e-b1fd-ca86462bdcec\"))\n                    )))\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleBucket:\n    type: ionoscloud:objectstorage:Bucket\n  exampleBucketPolicy:\n    type: ionoscloud:objectstorage:BucketPolicy\n    properties:\n      bucket: ${exampleBucket.name}\n      policy:\n        fn::toJSON:\n          Version: 2012-10-17\n          Statement:\n            - Sid: Delegate certain actions to another user\n              Action:\n                - s3:ListBucket\n                - s3:PutObject\n                - s3:GetObject\n              Effect: Allow\n              Resource:\n                - arn:aws:s3:::example\n                - arn:aws:s3:::example/*\n              Condition:\n                IpAddress:\n                  - 123.123.123.123/32\n              Principal:\n                - arn:aws:iam:::user/31000000:9acd8251-2857-410e-b1fd-ca86462bdcec\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nResource Policy can be imported using the `bucket name`\n\n```sh\n$ pulumi import ionoscloud:objectstorage/bucketPolicy:BucketPolicy example example\n```\n\n",
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "policy": {
                    "type": "string",
                    "description": "[string] The policy document. This is a JSON formatted string.\n"
                }
            },
            "required": [
                "bucket",
                "policy"
            ],
            "inputProperties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "policy": {
                    "type": "string",
                    "description": "[string] The policy document. This is a JSON formatted string.\n"
                }
            },
            "requiredInputs": [
                "bucket",
                "policy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BucketPolicy resources.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "[string] The name of the bucket where the object will be stored.\n"
                    },
                    "policy": {
                        "type": "string",
                        "description": "[string] The policy document. This is a JSON formatted string.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:objectstorage/bucketServerSideEncryptionConfiguration:BucketServerSideEncryptionConfiguration": {
            "description": "Manages Server Side Encryption Configuration for Buckets on IonosCloud.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.Bucket;\nimport com.pulumi.ionoscloud.objectstorage.BucketServerSideEncryptionConfiguration;\nimport com.pulumi.ionoscloud.objectstorage.BucketServerSideEncryptionConfigurationArgs;\nimport com.pulumi.ionoscloud.objectstorage.inputs.BucketServerSideEncryptionConfigurationRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleBucket = new Bucket(\"exampleBucket\");\n\n        var exampleBucketServerSideEncryptionConfiguration = new BucketServerSideEncryptionConfiguration(\"exampleBucketServerSideEncryptionConfiguration\", BucketServerSideEncryptionConfigurationArgs.builder()\n            .bucket(exampleBucket.name())\n            .rules(BucketServerSideEncryptionConfigurationRuleArgs.builder()\n                .applyServerSideEncryptionByDefault(BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs.builder()\n                    .sseAlgorithm(\"AES256\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleBucket:\n    type: ionoscloud:objectstorage:Bucket\n  exampleBucketServerSideEncryptionConfiguration:\n    type: ionoscloud:objectstorage:BucketServerSideEncryptionConfiguration\n    properties:\n      bucket: ${exampleBucket.name}\n      rules:\n        - applyServerSideEncryptionByDefault:\n            - sseAlgorithm: AES256\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nIONOS Object Storage Bucket server side encryption configuration can be imported using the `bucket` name.\n\n```sh\n$ pulumi import ionoscloud:objectstorage/bucketServerSideEncryptionConfiguration:BucketServerSideEncryptionConfiguration example example\n```\n\n",
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:objectstorage/BucketServerSideEncryptionConfigurationRule:BucketServerSideEncryptionConfigurationRule"
                    },
                    "description": "[block] A block of rule as defined below.\n"
                }
            },
            "required": [
                "bucket"
            ],
            "inputProperties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:objectstorage/BucketServerSideEncryptionConfigurationRule:BucketServerSideEncryptionConfigurationRule"
                    },
                    "description": "[block] A block of rule as defined below.\n"
                }
            },
            "requiredInputs": [
                "bucket"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BucketServerSideEncryptionConfiguration resources.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "[string] The name of the bucket where the object will be stored.\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:objectstorage/BucketServerSideEncryptionConfigurationRule:BucketServerSideEncryptionConfigurationRule"
                        },
                        "description": "[block] A block of rule as defined below.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:objectstorage/bucketVersioning:BucketVersioning": {
            "description": "Manages **Buckets versioning** on IonosCloud.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.Bucket;\nimport com.pulumi.ionoscloud.objectstorage.BucketVersioning;\nimport com.pulumi.ionoscloud.objectstorage.BucketVersioningArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleBucket = new Bucket(\"exampleBucket\");\n\n        var exampleBucketVersioning = new BucketVersioning(\"exampleBucketVersioning\", BucketVersioningArgs.builder()\n            .bucket(exampleBucket.name())\n            .versioningConfiguration(BucketVersioningVersioningConfigurationArgs.builder()\n                .status(\"Enabled\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleBucket:\n    type: ionoscloud:objectstorage:Bucket\n  exampleBucketVersioning:\n    type: ionoscloud:objectstorage:BucketVersioning\n    properties:\n      bucket: ${exampleBucket.name}\n      versioningConfiguration:\n        - status: Enabled\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nIONOS Object Storage Bucket Versioning can be imported using the `bucket` name.\n\n```sh\n$ pulumi import ionoscloud:objectstorage/bucketVersioning:BucketVersioning example example\n```\n\n",
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "versioningConfiguration": {
                    "$ref": "#/types/ionoscloud:objectstorage/BucketVersioningVersioningConfiguration:BucketVersioningVersioningConfiguration",
                    "description": "[block] A block of versioning_configuration as defined below.\n"
                }
            },
            "required": [
                "bucket"
            ],
            "inputProperties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "versioningConfiguration": {
                    "$ref": "#/types/ionoscloud:objectstorage/BucketVersioningVersioningConfiguration:BucketVersioningVersioningConfiguration",
                    "description": "[block] A block of versioning_configuration as defined below.\n"
                }
            },
            "requiredInputs": [
                "bucket"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BucketVersioning resources.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "[string] The name of the bucket where the object will be stored.\n"
                    },
                    "versioningConfiguration": {
                        "$ref": "#/types/ionoscloud:objectstorage/BucketVersioningVersioningConfiguration:BucketVersioningVersioningConfiguration",
                        "description": "[block] A block of versioning_configuration as defined below.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:objectstorage/corsConfiguration:CorsConfiguration": {
            "description": "Manages Object Lock Configuration for Buckets on IonosCloud.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ionoscloud from \"@pulumi/ionoscloud\";\n\nconst example = new ionoscloud.objectstorage.Bucket(\"example\", {});\nconst test = new ionoscloud.objectstorage.CorsConfiguration(\"test\", {\n    bucket: example.name,\n    corsRules: [{\n        allowedHeaders: [\"*\"],\n        allowedMethods: [\n            \"PUT\",\n            \"POST\",\n        ],\n        allowedOrigins: [\"https://s3-website-test.hashicorp.com\"],\n        exposeHeaders: [\"ETag\"],\n        maxAgeSeconds: 3000,\n        id: 1234,\n    }],\n});\n```\n```python\nimport pulumi\nimport ionoscloud as ionoscloud\n\nexample = ionoscloud.objectstorage.Bucket(\"example\")\ntest = ionoscloud.objectstorage.CorsConfiguration(\"test\",\n    bucket=example.name,\n    cors_rules=[{\n        \"allowed_headers\": [\"*\"],\n        \"allowed_methods\": [\n            \"PUT\",\n            \"POST\",\n        ],\n        \"allowed_origins\": [\"https://s3-website-test.hashicorp.com\"],\n        \"expose_headers\": [\"ETag\"],\n        \"max_age_seconds\": 3000,\n        \"id\": 1234,\n    }])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ionoscloud = Pulumi.Ionoscloud;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Ionoscloud.Objectstorage.Bucket(\"example\");\n\n    var test = new Ionoscloud.Objectstorage.CorsConfiguration(\"test\", new()\n    {\n        Bucket = example.Name,\n        CorsRules = new[]\n        {\n            new Ionoscloud.Objectstorage.Inputs.CorsConfigurationCorsRuleArgs\n            {\n                AllowedHeaders = new[]\n                {\n                    \"*\",\n                },\n                AllowedMethods = new[]\n                {\n                    \"PUT\",\n                    \"POST\",\n                },\n                AllowedOrigins = new[]\n                {\n                    \"https://s3-website-test.hashicorp.com\",\n                },\n                ExposeHeaders = new[]\n                {\n                    \"ETag\",\n                },\n                MaxAgeSeconds = 3000,\n                Id = 1234,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/objectstorage\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := objectstorage.NewBucket(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = objectstorage.NewCorsConfiguration(ctx, \"test\", \u0026objectstorage.CorsConfigurationArgs{\n\t\t\tBucket: example.Name,\n\t\t\tCorsRules: objectstorage.CorsConfigurationCorsRuleArray{\n\t\t\t\t\u0026objectstorage.CorsConfigurationCorsRuleArgs{\n\t\t\t\t\tAllowedHeaders: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"*\"),\n\t\t\t\t\t},\n\t\t\t\t\tAllowedMethods: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"PUT\"),\n\t\t\t\t\t\tpulumi.String(\"POST\"),\n\t\t\t\t\t},\n\t\t\t\t\tAllowedOrigins: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"https://s3-website-test.hashicorp.com\"),\n\t\t\t\t\t},\n\t\t\t\t\tExposeHeaders: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"ETag\"),\n\t\t\t\t\t},\n\t\t\t\t\tMaxAgeSeconds: pulumi.Int(3000),\n\t\t\t\t\tId:            pulumi.Int(1234),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.Bucket;\nimport com.pulumi.ionoscloud.objectstorage.CorsConfiguration;\nimport com.pulumi.ionoscloud.objectstorage.CorsConfigurationArgs;\nimport com.pulumi.ionoscloud.objectstorage.inputs.CorsConfigurationCorsRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Bucket(\"example\");\n\n        var test = new CorsConfiguration(\"test\", CorsConfigurationArgs.builder()\n            .bucket(example.name())\n            .corsRules(CorsConfigurationCorsRuleArgs.builder()\n                .allowedHeaders(\"*\")\n                .allowedMethods(                \n                    \"PUT\",\n                    \"POST\")\n                .allowedOrigins(\"https://s3-website-test.hashicorp.com\")\n                .exposeHeaders(\"ETag\")\n                .maxAgeSeconds(3000)\n                .id(1234)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: ionoscloud:objectstorage:Bucket\n  test:\n    type: ionoscloud:objectstorage:CorsConfiguration\n    properties:\n      bucket: ${example.name}\n      corsRules:\n        - allowedHeaders:\n            - '*'\n          allowedMethods:\n            - PUT\n            - POST\n          allowedOrigins:\n            - https://s3-website-test.hashicorp.com\n          exposeHeaders:\n            - ETag\n          maxAgeSeconds: 3000\n          id: 1234\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nIONOS Object Storage Bucket cors configuration can be imported using the `bucket` name.\n\n```sh\n$ pulumi import ionoscloud:objectstorage/corsConfiguration:CorsConfiguration example example\n```\n\n",
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "corsRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:objectstorage/CorsConfigurationCorsRule:CorsConfigurationCorsRule"
                    },
                    "description": "[block] A block of cors_rule as defined below.\n"
                }
            },
            "required": [
                "bucket"
            ],
            "inputProperties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "corsRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:objectstorage/CorsConfigurationCorsRule:CorsConfigurationCorsRule"
                    },
                    "description": "[block] A block of cors_rule as defined below.\n"
                }
            },
            "requiredInputs": [
                "bucket"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CorsConfiguration resources.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "[string] The name of the bucket where the object will be stored.\n"
                    },
                    "corsRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:objectstorage/CorsConfigurationCorsRule:CorsConfigurationCorsRule"
                        },
                        "description": "[block] A block of cors_rule as defined below.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:objectstorage/object:Object": {
            "description": "Manages **IONOS Object Storage Objects** on IonosCloud.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ionoscloud from \"@pulumi/ionoscloud\";\n\nconst exampleBucket = new ionoscloud.objectstorage.Bucket(\"exampleBucket\", {objectLockEnabled: true});\nconst exampleObject = new ionoscloud.objectstorage.Object(\"exampleObject\", {\n    bucket: exampleBucket.name,\n    key: \"object\",\n    content: \"body\",\n    contentType: \"text/plain\",\n    cacheControl: \"no-cache\",\n    contentDisposition: \"attachment\",\n    contentEncoding: \"identity\",\n    contentLanguage: \"en-GB\",\n    expires: \"2024-10-07T12:34:56Z\",\n    websiteRedirect: \"https://www.ionos.com\",\n    serverSideEncryption: \"AES256\",\n    objectLockMode: \"GOVERNANCE\",\n    objectLockRetainUntilDate: \"2024-10-07T12:34:56Z\",\n    objectLockLegalHold: \"ON\",\n    tags: {\n        tk: \"tv\",\n    },\n    metadata: {\n        mk: \"mv\",\n    },\n    forceDestroy: true,\n});\n// Upload from file\nconst exampleObjectstorage_objectObject = new ionoscloud.objectstorage.Object(\"exampleObjectstorage/objectObject\", {\n    bucket: exampleBucket.name,\n    key: \"file-object\",\n    source: \"path/to/file\",\n});\n```\n```python\nimport pulumi\nimport ionoscloud as ionoscloud\n\nexample_bucket = ionoscloud.objectstorage.Bucket(\"exampleBucket\", object_lock_enabled=True)\nexample_object = ionoscloud.objectstorage.Object(\"exampleObject\",\n    bucket=example_bucket.name,\n    key=\"object\",\n    content=\"body\",\n    content_type=\"text/plain\",\n    cache_control=\"no-cache\",\n    content_disposition=\"attachment\",\n    content_encoding=\"identity\",\n    content_language=\"en-GB\",\n    expires=\"2024-10-07T12:34:56Z\",\n    website_redirect=\"https://www.ionos.com\",\n    server_side_encryption=\"AES256\",\n    object_lock_mode=\"GOVERNANCE\",\n    object_lock_retain_until_date=\"2024-10-07T12:34:56Z\",\n    object_lock_legal_hold=\"ON\",\n    tags={\n        \"tk\": \"tv\",\n    },\n    metadata={\n        \"mk\": \"mv\",\n    },\n    force_destroy=True)\n# Upload from file\nexample_objectstorage_object_object = ionoscloud.objectstorage.Object(\"exampleObjectstorage/objectObject\",\n    bucket=example_bucket.name,\n    key=\"file-object\",\n    source=\"path/to/file\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ionoscloud = Pulumi.Ionoscloud;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleBucket = new Ionoscloud.Objectstorage.Bucket(\"exampleBucket\", new()\n    {\n        ObjectLockEnabled = true,\n    });\n\n    var exampleObject = new Ionoscloud.Objectstorage.Object(\"exampleObject\", new()\n    {\n        Bucket = exampleBucket.Name,\n        Key = \"object\",\n        Content = \"body\",\n        ContentType = \"text/plain\",\n        CacheControl = \"no-cache\",\n        ContentDisposition = \"attachment\",\n        ContentEncoding = \"identity\",\n        ContentLanguage = \"en-GB\",\n        Expires = \"2024-10-07T12:34:56Z\",\n        WebsiteRedirect = \"https://www.ionos.com\",\n        ServerSideEncryption = \"AES256\",\n        ObjectLockMode = \"GOVERNANCE\",\n        ObjectLockRetainUntilDate = \"2024-10-07T12:34:56Z\",\n        ObjectLockLegalHold = \"ON\",\n        Tags = \n        {\n            { \"tk\", \"tv\" },\n        },\n        Metadata = \n        {\n            { \"mk\", \"mv\" },\n        },\n        ForceDestroy = true,\n    });\n\n    // Upload from file\n    var exampleObjectstorage_objectObject = new Ionoscloud.Objectstorage.Object(\"exampleObjectstorage/objectObject\", new()\n    {\n        Bucket = exampleBucket.Name,\n        Key = \"file-object\",\n        Source = \"path/to/file\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/objectstorage\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texampleBucket, err := objectstorage.NewBucket(ctx, \"exampleBucket\", \u0026objectstorage.BucketArgs{\n\t\t\tObjectLockEnabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = objectstorage.NewObject(ctx, \"exampleObject\", \u0026objectstorage.ObjectArgs{\n\t\t\tBucket:                    exampleBucket.Name,\n\t\t\tKey:                       pulumi.String(\"object\"),\n\t\t\tContent:                   pulumi.String(\"body\"),\n\t\t\tContentType:               pulumi.String(\"text/plain\"),\n\t\t\tCacheControl:              pulumi.String(\"no-cache\"),\n\t\t\tContentDisposition:        pulumi.String(\"attachment\"),\n\t\t\tContentEncoding:           pulumi.String(\"identity\"),\n\t\t\tContentLanguage:           pulumi.String(\"en-GB\"),\n\t\t\tExpires:                   pulumi.String(\"2024-10-07T12:34:56Z\"),\n\t\t\tWebsiteRedirect:           pulumi.String(\"https://www.ionos.com\"),\n\t\t\tServerSideEncryption:      pulumi.String(\"AES256\"),\n\t\t\tObjectLockMode:            pulumi.String(\"GOVERNANCE\"),\n\t\t\tObjectLockRetainUntilDate: pulumi.String(\"2024-10-07T12:34:56Z\"),\n\t\t\tObjectLockLegalHold:       pulumi.String(\"ON\"),\n\t\t\tTags: pulumi.StringMap{\n\t\t\t\t\"tk\": pulumi.String(\"tv\"),\n\t\t\t},\n\t\t\tMetadata: pulumi.StringMap{\n\t\t\t\t\"mk\": pulumi.String(\"mv\"),\n\t\t\t},\n\t\t\tForceDestroy: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Upload from file\n\t\t_, err = objectstorage.NewObject(ctx, \"exampleObjectstorage/objectObject\", \u0026objectstorage.ObjectArgs{\n\t\t\tBucket: exampleBucket.Name,\n\t\t\tKey:    pulumi.String(\"file-object\"),\n\t\t\tSource: pulumi.String(\"path/to/file\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.Bucket;\nimport com.pulumi.ionoscloud.objectstorage.BucketArgs;\nimport com.pulumi.ionoscloud.objectstorage.Object;\nimport com.pulumi.ionoscloud.objectstorage.ObjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleBucket = new Bucket(\"exampleBucket\", BucketArgs.builder()\n            .objectLockEnabled(true)\n            .build());\n\n        var exampleObject = new Object(\"exampleObject\", ObjectArgs.builder()\n            .bucket(exampleBucket.name())\n            .key(\"object\")\n            .content(\"body\")\n            .contentType(\"text/plain\")\n            .cacheControl(\"no-cache\")\n            .contentDisposition(\"attachment\")\n            .contentEncoding(\"identity\")\n            .contentLanguage(\"en-GB\")\n            .expires(\"2024-10-07T12:34:56Z\")\n            .websiteRedirect(\"https://www.ionos.com\")\n            .serverSideEncryption(\"AES256\")\n            .objectLockMode(\"GOVERNANCE\")\n            .objectLockRetainUntilDate(\"2024-10-07T12:34:56Z\")\n            .objectLockLegalHold(\"ON\")\n            .tags(Map.of(\"tk\", \"tv\"))\n            .metadata(Map.of(\"mk\", \"mv\"))\n            .forceDestroy(true)\n            .build());\n\n        // Upload from file\n        var exampleObjectstorage_objectObject = new Object(\"exampleObjectstorage/objectObject\", ObjectArgs.builder()\n            .bucket(exampleBucket.name())\n            .key(\"file-object\")\n            .source(\"path/to/file\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleBucket:\n    type: ionoscloud:objectstorage:Bucket\n    properties:\n      objectLockEnabled: true\n  exampleObject:\n    type: ionoscloud:objectstorage:Object\n    properties:\n      bucket: ${exampleBucket.name}\n      key: object\n      content: body\n      contentType: text/plain\n      cacheControl: no-cache\n      contentDisposition: attachment\n      contentEncoding: identity\n      contentLanguage: en-GB\n      expires: 2024-10-07T12:34:56Z\n      websiteRedirect: https://www.ionos.com\n      serverSideEncryption: AES256\n      objectLockMode: GOVERNANCE\n      objectLockRetainUntilDate: 2024-10-07T12:34:56Z\n      objectLockLegalHold: ON\n      tags:\n        tk: tv\n      metadata:\n        mk: mv\n      forceDestroy: true\n  # Upload from file\n  exampleObjectstorage/objectObject:\n    type: ionoscloud:objectstorage:Object\n    properties:\n      bucket: ${exampleBucket.name}\n      key: file-object\n      source: path/to/file\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nResource Object can be imported using the `bucket name` and `object key`\n\n```sh\n$ pulumi import ionoscloud:objectstorage/object:Object example example/object\n```\n\n",
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.\n"
                },
                "cacheControl": {
                    "type": "string",
                    "description": "[string] Specifies caching behavior along the request/reply chain.\n"
                },
                "content": {
                    "type": "string",
                    "description": "[string] Inline content of the object.\n"
                },
                "contentDisposition": {
                    "type": "string",
                    "description": "[string] Specifies presentational information for the object.\n"
                },
                "contentEncoding": {
                    "type": "string",
                    "description": "[string] Specifies what content encodings have been applied to the object.\n"
                },
                "contentLanguage": {
                    "type": "string",
                    "description": "[string] The natural language or languages of the intended audience for the object.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "[string] A standard MIME type describing the format of the contents.\n"
                },
                "etag": {
                    "type": "string",
                    "description": "[string] An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.\n"
                },
                "expires": {
                    "type": "string",
                    "description": "[string] The date and time at which the object is no longer cacheable.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "[bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "[string] The key of the object. Must be at least 1 character long.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.\n"
                },
                "mfa": {
                    "type": "string",
                    "description": "[string]The concatenation of the authentication device's serial number, a space, and the value displayed on your authentication device.\n"
                },
                "objectLockLegalHold": {
                    "type": "string",
                    "description": "[string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.\n"
                },
                "objectLockMode": {
                    "type": "string",
                    "description": "[string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.\n"
                },
                "objectLockRetainUntilDate": {
                    "type": "string",
                    "description": "[string] The date and time when the object lock retention expires.Must be in RFC3999 format\n"
                },
                "requestPayer": {
                    "type": "string",
                    "description": "[string] Confirms that the requester knows that they will be charged for the request.\n"
                },
                "serverSideEncryption": {
                    "type": "string",
                    "description": "[string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.\n"
                },
                "serverSideEncryptionContext": {
                    "type": "string",
                    "description": "[string] Specifies the IONOS Object Storage Encryption Context for object encryption.\n",
                    "secret": true
                },
                "serverSideEncryptionCustomerAlgorithm": {
                    "type": "string",
                    "description": "[string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.\n"
                },
                "serverSideEncryptionCustomerKey": {
                    "type": "string",
                    "description": "[string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.\n"
                },
                "serverSideEncryptionCustomerKeyMd5": {
                    "type": "string",
                    "description": "[string] Specifies the 128-bit MD5 digest of the encryption key.\n"
                },
                "source": {
                    "type": "string",
                    "description": "[string] The path to the file to upload.\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "[string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[map] The tag-set for the object.\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "[string] The version of the object.\n"
                },
                "websiteRedirect": {
                    "type": "string",
                    "description": "[string] Redirects requests for this object to another object in the same bucket or to an external URL.\n"
                }
            },
            "required": [
                "bucket",
                "contentType",
                "etag",
                "forceDestroy",
                "key",
                "serverSideEncryption",
                "storageClass",
                "versionId"
            ],
            "inputProperties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.\n"
                },
                "cacheControl": {
                    "type": "string",
                    "description": "[string] Specifies caching behavior along the request/reply chain.\n"
                },
                "content": {
                    "type": "string",
                    "description": "[string] Inline content of the object.\n"
                },
                "contentDisposition": {
                    "type": "string",
                    "description": "[string] Specifies presentational information for the object.\n"
                },
                "contentEncoding": {
                    "type": "string",
                    "description": "[string] Specifies what content encodings have been applied to the object.\n"
                },
                "contentLanguage": {
                    "type": "string",
                    "description": "[string] The natural language or languages of the intended audience for the object.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "[string] A standard MIME type describing the format of the contents.\n"
                },
                "expires": {
                    "type": "string",
                    "description": "[string] The date and time at which the object is no longer cacheable.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "[bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "[string] The key of the object. Must be at least 1 character long.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.\n"
                },
                "mfa": {
                    "type": "string",
                    "description": "[string]The concatenation of the authentication device's serial number, a space, and the value displayed on your authentication device.\n"
                },
                "objectLockLegalHold": {
                    "type": "string",
                    "description": "[string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.\n"
                },
                "objectLockMode": {
                    "type": "string",
                    "description": "[string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.\n"
                },
                "objectLockRetainUntilDate": {
                    "type": "string",
                    "description": "[string] The date and time when the object lock retention expires.Must be in RFC3999 format\n"
                },
                "requestPayer": {
                    "type": "string",
                    "description": "[string] Confirms that the requester knows that they will be charged for the request.\n"
                },
                "serverSideEncryption": {
                    "type": "string",
                    "description": "[string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.\n"
                },
                "serverSideEncryptionContext": {
                    "type": "string",
                    "description": "[string] Specifies the IONOS Object Storage Encryption Context for object encryption.\n",
                    "secret": true
                },
                "serverSideEncryptionCustomerAlgorithm": {
                    "type": "string",
                    "description": "[string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.\n"
                },
                "serverSideEncryptionCustomerKey": {
                    "type": "string",
                    "description": "[string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.\n"
                },
                "serverSideEncryptionCustomerKeyMd5": {
                    "type": "string",
                    "description": "[string] Specifies the 128-bit MD5 digest of the encryption key.\n"
                },
                "source": {
                    "type": "string",
                    "description": "[string] The path to the file to upload.\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "[string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[map] The tag-set for the object.\n"
                },
                "websiteRedirect": {
                    "type": "string",
                    "description": "[string] Redirects requests for this object to another object in the same bucket or to an external URL.\n"
                }
            },
            "requiredInputs": [
                "bucket",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Object resources.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "[string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.\n"
                    },
                    "cacheControl": {
                        "type": "string",
                        "description": "[string] Specifies caching behavior along the request/reply chain.\n"
                    },
                    "content": {
                        "type": "string",
                        "description": "[string] Inline content of the object.\n"
                    },
                    "contentDisposition": {
                        "type": "string",
                        "description": "[string] Specifies presentational information for the object.\n"
                    },
                    "contentEncoding": {
                        "type": "string",
                        "description": "[string] Specifies what content encodings have been applied to the object.\n"
                    },
                    "contentLanguage": {
                        "type": "string",
                        "description": "[string] The natural language or languages of the intended audience for the object.\n"
                    },
                    "contentType": {
                        "type": "string",
                        "description": "[string] A standard MIME type describing the format of the contents.\n"
                    },
                    "etag": {
                        "type": "string",
                        "description": "[string] An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.\n"
                    },
                    "expires": {
                        "type": "string",
                        "description": "[string] The date and time at which the object is no longer cacheable.\n"
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "[bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "[string] The key of the object. Must be at least 1 character long.\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "[map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.\n"
                    },
                    "mfa": {
                        "type": "string",
                        "description": "[string]The concatenation of the authentication device's serial number, a space, and the value displayed on your authentication device.\n"
                    },
                    "objectLockLegalHold": {
                        "type": "string",
                        "description": "[string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.\n"
                    },
                    "objectLockMode": {
                        "type": "string",
                        "description": "[string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.\n"
                    },
                    "objectLockRetainUntilDate": {
                        "type": "string",
                        "description": "[string] The date and time when the object lock retention expires.Must be in RFC3999 format\n"
                    },
                    "requestPayer": {
                        "type": "string",
                        "description": "[string] Confirms that the requester knows that they will be charged for the request.\n"
                    },
                    "serverSideEncryption": {
                        "type": "string",
                        "description": "[string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.\n"
                    },
                    "serverSideEncryptionContext": {
                        "type": "string",
                        "description": "[string] Specifies the IONOS Object Storage Encryption Context for object encryption.\n",
                        "secret": true
                    },
                    "serverSideEncryptionCustomerAlgorithm": {
                        "type": "string",
                        "description": "[string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.\n"
                    },
                    "serverSideEncryptionCustomerKey": {
                        "type": "string",
                        "description": "[string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.\n"
                    },
                    "serverSideEncryptionCustomerKeyMd5": {
                        "type": "string",
                        "description": "[string] Specifies the 128-bit MD5 digest of the encryption key.\n"
                    },
                    "source": {
                        "type": "string",
                        "description": "[string] The path to the file to upload.\n"
                    },
                    "storageClass": {
                        "type": "string",
                        "description": "[string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "[map] The tag-set for the object.\n"
                    },
                    "versionId": {
                        "type": "string",
                        "description": "[string] The version of the object.\n"
                    },
                    "websiteRedirect": {
                        "type": "string",
                        "description": "[string] Redirects requests for this object to another object in the same bucket or to an external URL.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:objectstorage/objectCopy:ObjectCopy": {
            "description": "Creates a copy of an object that is already stored in IONOS Object Storage.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ionoscloud from \"@pulumi/ionoscloud\";\n\nconst sourceBucket = new ionoscloud.objectstorage.Bucket(\"sourceBucket\", {});\nconst target = new ionoscloud.objectstorage.Bucket(\"target\", {});\nconst sourceObject = new ionoscloud.objectstorage.Object(\"sourceObject\", {\n    bucket: sourceBucket.name,\n    key: \"source_object\",\n    content: \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n    contentType: \"application/octet-stream\",\n});\nconst example = new ionoscloud.objectstorage.ObjectCopy(\"example\", {\n    bucket: target.name,\n    key: \"example\",\n    source: pulumi.interpolate`${sourceBucket.name}/${sourceObject.key}`,\n});\n```\n```python\nimport pulumi\nimport ionoscloud as ionoscloud\n\nsource_bucket = ionoscloud.objectstorage.Bucket(\"sourceBucket\")\ntarget = ionoscloud.objectstorage.Bucket(\"target\")\nsource_object = ionoscloud.objectstorage.Object(\"sourceObject\",\n    bucket=source_bucket.name,\n    key=\"source_object\",\n    content=\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n    content_type=\"application/octet-stream\")\nexample = ionoscloud.objectstorage.ObjectCopy(\"example\",\n    bucket=target.name,\n    key=\"example\",\n    source=pulumi.Output.all(\n        name=source_bucket.name,\n        key=source_object.key\n).apply(lambda resolved_outputs: f\"{resolved_outputs['name']}/{resolved_outputs['key']}\")\n)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ionoscloud = Pulumi.Ionoscloud;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var sourceBucket = new Ionoscloud.Objectstorage.Bucket(\"sourceBucket\");\n\n    var target = new Ionoscloud.Objectstorage.Bucket(\"target\");\n\n    var sourceObject = new Ionoscloud.Objectstorage.Object(\"sourceObject\", new()\n    {\n        Bucket = sourceBucket.Name,\n        Key = \"source_object\",\n        Content = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n        ContentType = \"application/octet-stream\",\n    });\n\n    var example = new Ionoscloud.Objectstorage.ObjectCopy(\"example\", new()\n    {\n        Bucket = target.Name,\n        Key = \"example\",\n        Source = Output.Tuple(sourceBucket.Name, sourceObject.Key).Apply(values =\u003e\n        {\n            var name = values.Item1;\n            var key = values.Item2;\n            return $\"{name}/{key}\";\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/objectstorage\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tsourceBucket, err := objectstorage.NewBucket(ctx, \"sourceBucket\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttarget, err := objectstorage.NewBucket(ctx, \"target\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsourceObject, err := objectstorage.NewObject(ctx, \"sourceObject\", \u0026objectstorage.ObjectArgs{\n\t\t\tBucket:      sourceBucket.Name,\n\t\t\tKey:         pulumi.String(\"source_object\"),\n\t\t\tContent:     pulumi.String(\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"),\n\t\t\tContentType: pulumi.String(\"application/octet-stream\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = objectstorage.NewObjectCopy(ctx, \"example\", \u0026objectstorage.ObjectCopyArgs{\n\t\t\tBucket: target.Name,\n\t\t\tKey:    pulumi.String(\"example\"),\n\t\t\tSource: pulumi.All(sourceBucket.Name, sourceObject.Key).ApplyT(func(_args []interface{}) (string, error) {\n\t\t\t\tname := _args[0].(string)\n\t\t\t\tkey := _args[1].(string)\n\t\t\t\treturn fmt.Sprintf(\"%v/%v\", name, key), nil\n\t\t\t}).(pulumi.StringOutput),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.Bucket;\nimport com.pulumi.ionoscloud.objectstorage.Object;\nimport com.pulumi.ionoscloud.objectstorage.ObjectArgs;\nimport com.pulumi.ionoscloud.objectstorage.ObjectCopy;\nimport com.pulumi.ionoscloud.objectstorage.ObjectCopyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var sourceBucket = new Bucket(\"sourceBucket\");\n\n        var target = new Bucket(\"target\");\n\n        var sourceObject = new Object(\"sourceObject\", ObjectArgs.builder()\n            .bucket(sourceBucket.name())\n            .key(\"source_object\")\n            .content(\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n            .contentType(\"application/octet-stream\")\n            .build());\n\n        var example = new ObjectCopy(\"example\", ObjectCopyArgs.builder()\n            .bucket(target.name())\n            .key(\"example\")\n            .source(Output.tuple(sourceBucket.name(), sourceObject.key()).applyValue(values -\u003e {\n                var name = values.t1;\n                var key = values.t2;\n                return String.format(\"%s/%s\", name,key);\n            }))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  sourceBucket:\n    type: ionoscloud:objectstorage:Bucket\n  target:\n    type: ionoscloud:objectstorage:Bucket\n  sourceObject:\n    type: ionoscloud:objectstorage:Object\n    properties:\n      bucket: ${sourceBucket.name}\n      key: source_object\n      content: 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\n      contentType: application/octet-stream\n  example:\n    type: ionoscloud:objectstorage:ObjectCopy\n    properties:\n      bucket: ${target.name}\n      key: example\n      source: ${sourceBucket.name}/${sourceObject.key}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.\n"
                },
                "cacheControl": {
                    "type": "string",
                    "description": "[string] Specifies caching behavior along the request/reply chain.\n"
                },
                "contentDisposition": {
                    "type": "string",
                    "description": "[string] Specifies presentational information for the object.\n"
                },
                "contentEncoding": {
                    "type": "string",
                    "description": "[string] Specifies what content encodings have been applied to the object.\n"
                },
                "contentLanguage": {
                    "type": "string",
                    "description": "[string] The natural language or languages of the intended audience for the object.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "[string] A standard MIME type describing the format of the contents.\n"
                },
                "copyIfMatch": {
                    "type": "string",
                    "description": "Copies the object if its entity tag (ETag) matches the specified tag\n"
                },
                "copyIfModifiedSince": {
                    "type": "string",
                    "description": "Copies the object if it has been modified since the specified time\n"
                },
                "copyIfNoneMatch": {
                    "type": "string",
                    "description": "Copies the object if its entity tag (ETag) is different than the specified ETag\n"
                },
                "copyIfUnmodifiedSince": {
                    "type": "string",
                    "description": "Copies the object if it hasn't been modified since the specified time\n"
                },
                "etag": {
                    "type": "string",
                    "description": "[string] An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.\n"
                },
                "expires": {
                    "type": "string",
                    "description": "[string] The date and time at which the object is no longer cacheable.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "[bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "[string] The key of the object. Must be at least 1 character long.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "[string] The date and time at which the object was last modified.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.\n"
                },
                "metadataDirective": {
                    "type": "string",
                    "description": "[string] Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.\n"
                },
                "objectLockLegalHold": {
                    "type": "string",
                    "description": "[string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.\n"
                },
                "objectLockMode": {
                    "type": "string",
                    "description": "[string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.\n"
                },
                "objectLockRetainUntilDate": {
                    "type": "string",
                    "description": "[string] The date and time when the object lock retention expires.Must be in RFC3999 format\n"
                },
                "serverSideEncryption": {
                    "type": "string",
                    "description": "[string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.\n"
                },
                "serverSideEncryptionCustomerAlgorithm": {
                    "type": "string",
                    "description": "[string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.\n"
                },
                "serverSideEncryptionCustomerKey": {
                    "type": "string",
                    "description": "[string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.\n"
                },
                "serverSideEncryptionCustomerKeyMd5": {
                    "type": "string",
                    "description": "[string] Specifies the 128-bit MD5 digest of the encryption key.\n"
                },
                "source": {
                    "type": "string",
                    "description": "[string] The source of the object to be copied\n"
                },
                "sourceCustomerAlgorithm": {
                    "type": "string",
                    "description": "[string] Specifies the algorithm used for source object encryption. Valid value is AES256.\n"
                },
                "sourceCustomerKey": {
                    "type": "string",
                    "description": "[string] Specifies the 256-bit, base64-encoded encryption key for source object encryption.\n"
                },
                "sourceCustomerKeyMd5": {
                    "type": "string",
                    "description": "[string] Specifies the 128-bit MD5 digest of the encryption key for source object encryption.\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "[string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.\n"
                },
                "taggingDirective": {
                    "type": "string",
                    "description": "[string] Specifies whether the object tag-set is copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[map] The tag-set for the object.\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "[string] The version of the object.\n"
                },
                "websiteRedirect": {
                    "type": "string",
                    "description": "[string] Redirects requests for this object to another object in the same bucket or to an external URL.\n"
                }
            },
            "required": [
                "bucket",
                "contentType",
                "etag",
                "forceDestroy",
                "key",
                "lastModified",
                "source",
                "storageClass",
                "versionId"
            ],
            "inputProperties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.\n"
                },
                "cacheControl": {
                    "type": "string",
                    "description": "[string] Specifies caching behavior along the request/reply chain.\n"
                },
                "contentDisposition": {
                    "type": "string",
                    "description": "[string] Specifies presentational information for the object.\n"
                },
                "contentEncoding": {
                    "type": "string",
                    "description": "[string] Specifies what content encodings have been applied to the object.\n"
                },
                "contentLanguage": {
                    "type": "string",
                    "description": "[string] The natural language or languages of the intended audience for the object.\n"
                },
                "contentType": {
                    "type": "string",
                    "description": "[string] A standard MIME type describing the format of the contents.\n"
                },
                "copyIfMatch": {
                    "type": "string",
                    "description": "Copies the object if its entity tag (ETag) matches the specified tag\n"
                },
                "copyIfModifiedSince": {
                    "type": "string",
                    "description": "Copies the object if it has been modified since the specified time\n"
                },
                "copyIfNoneMatch": {
                    "type": "string",
                    "description": "Copies the object if its entity tag (ETag) is different than the specified ETag\n"
                },
                "copyIfUnmodifiedSince": {
                    "type": "string",
                    "description": "Copies the object if it hasn't been modified since the specified time\n"
                },
                "expires": {
                    "type": "string",
                    "description": "[string] The date and time at which the object is no longer cacheable.\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "[bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "[string] The key of the object. Must be at least 1 character long.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.\n"
                },
                "metadataDirective": {
                    "type": "string",
                    "description": "[string] Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.\n"
                },
                "objectLockLegalHold": {
                    "type": "string",
                    "description": "[string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.\n"
                },
                "objectLockMode": {
                    "type": "string",
                    "description": "[string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.\n"
                },
                "objectLockRetainUntilDate": {
                    "type": "string",
                    "description": "[string] The date and time when the object lock retention expires.Must be in RFC3999 format\n"
                },
                "serverSideEncryption": {
                    "type": "string",
                    "description": "[string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.\n"
                },
                "serverSideEncryptionCustomerAlgorithm": {
                    "type": "string",
                    "description": "[string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.\n"
                },
                "serverSideEncryptionCustomerKey": {
                    "type": "string",
                    "description": "[string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.\n"
                },
                "serverSideEncryptionCustomerKeyMd5": {
                    "type": "string",
                    "description": "[string] Specifies the 128-bit MD5 digest of the encryption key.\n"
                },
                "source": {
                    "type": "string",
                    "description": "[string] The source of the object to be copied\n"
                },
                "sourceCustomerAlgorithm": {
                    "type": "string",
                    "description": "[string] Specifies the algorithm used for source object encryption. Valid value is AES256.\n"
                },
                "sourceCustomerKey": {
                    "type": "string",
                    "description": "[string] Specifies the 256-bit, base64-encoded encryption key for source object encryption.\n"
                },
                "sourceCustomerKeyMd5": {
                    "type": "string",
                    "description": "[string] Specifies the 128-bit MD5 digest of the encryption key for source object encryption.\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "[string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.\n"
                },
                "taggingDirective": {
                    "type": "string",
                    "description": "[string] Specifies whether the object tag-set is copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "[map] The tag-set for the object.\n"
                },
                "websiteRedirect": {
                    "type": "string",
                    "description": "[string] Redirects requests for this object to another object in the same bucket or to an external URL.\n"
                }
            },
            "requiredInputs": [
                "bucket",
                "key",
                "source"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ObjectCopy resources.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "[string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.\n"
                    },
                    "cacheControl": {
                        "type": "string",
                        "description": "[string] Specifies caching behavior along the request/reply chain.\n"
                    },
                    "contentDisposition": {
                        "type": "string",
                        "description": "[string] Specifies presentational information for the object.\n"
                    },
                    "contentEncoding": {
                        "type": "string",
                        "description": "[string] Specifies what content encodings have been applied to the object.\n"
                    },
                    "contentLanguage": {
                        "type": "string",
                        "description": "[string] The natural language or languages of the intended audience for the object.\n"
                    },
                    "contentType": {
                        "type": "string",
                        "description": "[string] A standard MIME type describing the format of the contents.\n"
                    },
                    "copyIfMatch": {
                        "type": "string",
                        "description": "Copies the object if its entity tag (ETag) matches the specified tag\n"
                    },
                    "copyIfModifiedSince": {
                        "type": "string",
                        "description": "Copies the object if it has been modified since the specified time\n"
                    },
                    "copyIfNoneMatch": {
                        "type": "string",
                        "description": "Copies the object if its entity tag (ETag) is different than the specified ETag\n"
                    },
                    "copyIfUnmodifiedSince": {
                        "type": "string",
                        "description": "Copies the object if it hasn't been modified since the specified time\n"
                    },
                    "etag": {
                        "type": "string",
                        "description": "[string] An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.\n"
                    },
                    "expires": {
                        "type": "string",
                        "description": "[string] The date and time at which the object is no longer cacheable.\n"
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "[bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is `false`.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "[string] The key of the object. Must be at least 1 character long.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "[string] The date and time at which the object was last modified.\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "[map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.\n"
                    },
                    "metadataDirective": {
                        "type": "string",
                        "description": "[string] Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.\n"
                    },
                    "objectLockLegalHold": {
                        "type": "string",
                        "description": "[string] Indicates whether a legal hold is in effect for the object. Valid values are `ON` and `OFF`.\n"
                    },
                    "objectLockMode": {
                        "type": "string",
                        "description": "[string] The object lock mode that you want to apply to the object. Valid values are `GOVERNANCE` and `COMPLIANCE`.\n"
                    },
                    "objectLockRetainUntilDate": {
                        "type": "string",
                        "description": "[string] The date and time when the object lock retention expires.Must be in RFC3999 format\n"
                    },
                    "serverSideEncryption": {
                        "type": "string",
                        "description": "[string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.\n"
                    },
                    "serverSideEncryptionCustomerAlgorithm": {
                        "type": "string",
                        "description": "[string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.\n"
                    },
                    "serverSideEncryptionCustomerKey": {
                        "type": "string",
                        "description": "[string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.\n"
                    },
                    "serverSideEncryptionCustomerKeyMd5": {
                        "type": "string",
                        "description": "[string] Specifies the 128-bit MD5 digest of the encryption key.\n"
                    },
                    "source": {
                        "type": "string",
                        "description": "[string] The source of the object to be copied\n"
                    },
                    "sourceCustomerAlgorithm": {
                        "type": "string",
                        "description": "[string] Specifies the algorithm used for source object encryption. Valid value is AES256.\n"
                    },
                    "sourceCustomerKey": {
                        "type": "string",
                        "description": "[string] Specifies the 256-bit, base64-encoded encryption key for source object encryption.\n"
                    },
                    "sourceCustomerKeyMd5": {
                        "type": "string",
                        "description": "[string] Specifies the 128-bit MD5 digest of the encryption key for source object encryption.\n"
                    },
                    "storageClass": {
                        "type": "string",
                        "description": "[string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.\n"
                    },
                    "taggingDirective": {
                        "type": "string",
                        "description": "[string] Specifies whether the object tag-set is copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "[map] The tag-set for the object.\n"
                    },
                    "versionId": {
                        "type": "string",
                        "description": "[string] The version of the object.\n"
                    },
                    "websiteRedirect": {
                        "type": "string",
                        "description": "[string] Redirects requests for this object to another object in the same bucket or to an external URL.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:objectstorage/objectLockConfiguration:ObjectLockConfiguration": {
            "description": "Manages Object Lock Configuration for Buckets on IonosCloud.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.Bucket;\nimport com.pulumi.ionoscloud.objectstorage.BucketArgs;\nimport com.pulumi.ionoscloud.objectstorage.ObjectLockConfiguration;\nimport com.pulumi.ionoscloud.objectstorage.ObjectLockConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Bucket(\"example\", BucketArgs.builder()\n            .objectLockEnabled(true)\n            .build());\n\n        var test = new ObjectLockConfiguration(\"test\", ObjectLockConfigurationArgs.builder()\n            .bucket(example.name())\n            .objectLockEnabled(\"Enabled\")\n            .rule(ObjectLockConfigurationRuleArgs.builder()\n                .defaultRetention(ObjectLockConfigurationRuleDefaultRetentionArgs.builder()\n                    .mode(\"GOVERNANCE\")\n                    .days(1)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: ionoscloud:objectstorage:Bucket\n    properties:\n      objectLockEnabled: true\n  test:\n    type: ionoscloud:objectstorage:ObjectLockConfiguration\n    properties:\n      bucket: ${example.name}\n      objectLockEnabled: Enabled\n      rule:\n        - defaultRetention:\n            - mode: GOVERNANCE\n              days: 1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nIONOS Object Storage Bucket object lock configuration can be imported using the `bucket` name.\n\n```sh\n$ pulumi import ionoscloud:objectstorage/objectLockConfiguration:ObjectLockConfiguration example example\n```\n\n",
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "objectLockEnabled": {
                    "type": "string",
                    "description": "[Optional] The object lock configuration status of the bucket. Must be `Enabled`.\n"
                },
                "rule": {
                    "$ref": "#/types/ionoscloud:objectstorage/ObjectLockConfigurationRule:ObjectLockConfigurationRule",
                    "description": "[block] A block of rule as defined below.\n"
                }
            },
            "required": [
                "bucket",
                "objectLockEnabled"
            ],
            "inputProperties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "objectLockEnabled": {
                    "type": "string",
                    "description": "[Optional] The object lock configuration status of the bucket. Must be `Enabled`.\n"
                },
                "rule": {
                    "$ref": "#/types/ionoscloud:objectstorage/ObjectLockConfigurationRule:ObjectLockConfigurationRule",
                    "description": "[block] A block of rule as defined below.\n"
                }
            },
            "requiredInputs": [
                "bucket"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ObjectLockConfiguration resources.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "[string] The name of the bucket where the object will be stored.\n"
                    },
                    "objectLockEnabled": {
                        "type": "string",
                        "description": "[Optional] The object lock configuration status of the bucket. Must be `Enabled`.\n"
                    },
                    "rule": {
                        "$ref": "#/types/ionoscloud:objectstorage/ObjectLockConfigurationRule:ObjectLockConfigurationRule",
                        "description": "[block] A block of rule as defined below.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:objectstorage/publicAccessBlock:PublicAccessBlock": {
            "description": "Manages **public acccess for Buckets** on IonosCloud.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ionoscloud from \"@pulumi/ionoscloud\";\n\nconst example = new ionoscloud.objectstorage.PublicAccessBlock(\"example\", {\n    bucket: ionoscloud_s3_bucket.example.name,\n    ignorePublicAcls: true,\n    restrictPublicBuckets: true,\n    blockPublicPolicy: false,\n    blockPublicAcls: false,\n});\n```\n```python\nimport pulumi\nimport ionoscloud as ionoscloud\n\nexample = ionoscloud.objectstorage.PublicAccessBlock(\"example\",\n    bucket=ionoscloud_s3_bucket[\"example\"][\"name\"],\n    ignore_public_acls=True,\n    restrict_public_buckets=True,\n    block_public_policy=False,\n    block_public_acls=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ionoscloud = Pulumi.Ionoscloud;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Ionoscloud.Objectstorage.PublicAccessBlock(\"example\", new()\n    {\n        Bucket = ionoscloud_s3_bucket.Example.Name,\n        IgnorePublicAcls = true,\n        RestrictPublicBuckets = true,\n        BlockPublicPolicy = false,\n        BlockPublicAcls = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/objectstorage\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := objectstorage.NewPublicAccessBlock(ctx, \"example\", \u0026objectstorage.PublicAccessBlockArgs{\n\t\t\tBucket:                pulumi.Any(ionoscloud_s3_bucket.Example.Name),\n\t\t\tIgnorePublicAcls:      pulumi.Bool(true),\n\t\t\tRestrictPublicBuckets: pulumi.Bool(true),\n\t\t\tBlockPublicPolicy:     pulumi.Bool(false),\n\t\t\tBlockPublicAcls:       pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.PublicAccessBlock;\nimport com.pulumi.ionoscloud.objectstorage.PublicAccessBlockArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PublicAccessBlock(\"example\", PublicAccessBlockArgs.builder()\n            .bucket(ionoscloud_s3_bucket.example().name())\n            .ignorePublicAcls(true)\n            .restrictPublicBuckets(true)\n            .blockPublicPolicy(false)\n            .blockPublicAcls(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: ionoscloud:objectstorage:PublicAccessBlock\n    properties:\n      bucket: ${ionoscloud_s3_bucket.example.name}\n      ignorePublicAcls: true\n      restrictPublicBuckets: true\n      blockPublicPolicy: false\n      blockPublicAcls: false\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nResource Bucket access block can be imported using the `bucket name`\n\n```sh\n$ pulumi import ionoscloud:objectstorage/publicAccessBlock:PublicAccessBlock example example\n```\n\n",
            "properties": {
                "blockPublicAcls": {
                    "type": "boolean",
                    "description": "[bool] Indicates that access to the bucket via Access Control Lists (ACLs) that grant public access is blocked. In other words, ACLs that allow public access are not permitted.\n"
                },
                "blockPublicPolicy": {
                    "type": "boolean",
                    "description": "[bool] Blocks public access to the bucket via bucket policies. Bucket policies that grant public access will not be allowed.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "ignorePublicAcls": {
                    "type": "boolean",
                    "description": "[bool] Instructs the system to ignore any ACLs that grant public access. Even if ACLs are set to allow public access, they will be disregarded.\n"
                },
                "restrictPublicBuckets": {
                    "type": "boolean",
                    "description": "[bool] Restricts access to buckets that have public policies. Buckets with policies that grant public access will have their access restricted.\n"
                }
            },
            "required": [
                "blockPublicAcls",
                "blockPublicPolicy",
                "bucket",
                "ignorePublicAcls",
                "restrictPublicBuckets"
            ],
            "inputProperties": {
                "blockPublicAcls": {
                    "type": "boolean",
                    "description": "[bool] Indicates that access to the bucket via Access Control Lists (ACLs) that grant public access is blocked. In other words, ACLs that allow public access are not permitted.\n"
                },
                "blockPublicPolicy": {
                    "type": "boolean",
                    "description": "[bool] Blocks public access to the bucket via bucket policies. Bucket policies that grant public access will not be allowed.\n"
                },
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "ignorePublicAcls": {
                    "type": "boolean",
                    "description": "[bool] Instructs the system to ignore any ACLs that grant public access. Even if ACLs are set to allow public access, they will be disregarded.\n"
                },
                "restrictPublicBuckets": {
                    "type": "boolean",
                    "description": "[bool] Restricts access to buckets that have public policies. Buckets with policies that grant public access will have their access restricted.\n"
                }
            },
            "requiredInputs": [
                "bucket"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PublicAccessBlock resources.\n",
                "properties": {
                    "blockPublicAcls": {
                        "type": "boolean",
                        "description": "[bool] Indicates that access to the bucket via Access Control Lists (ACLs) that grant public access is blocked. In other words, ACLs that allow public access are not permitted.\n"
                    },
                    "blockPublicPolicy": {
                        "type": "boolean",
                        "description": "[bool] Blocks public access to the bucket via bucket policies. Bucket policies that grant public access will not be allowed.\n"
                    },
                    "bucket": {
                        "type": "string",
                        "description": "[string] The name of the bucket where the object will be stored.\n"
                    },
                    "ignorePublicAcls": {
                        "type": "boolean",
                        "description": "[bool] Instructs the system to ignore any ACLs that grant public access. Even if ACLs are set to allow public access, they will be disregarded.\n"
                    },
                    "restrictPublicBuckets": {
                        "type": "boolean",
                        "description": "[bool] Restricts access to buckets that have public policies. Buckets with policies that grant public access will have their access restricted.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:objectstorage/websiteConfiguration:WebsiteConfiguration": {
            "description": "Manages Website Configuration for Buckets on IonosCloud.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.Bucket;\nimport com.pulumi.ionoscloud.objectstorage.WebsiteConfiguration;\nimport com.pulumi.ionoscloud.objectstorage.WebsiteConfigurationArgs;\nimport com.pulumi.ionoscloud.objectstorage.inputs.WebsiteConfigurationRoutingRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleBucket = new Bucket(\"exampleBucket\");\n\n        var exampleWebsiteConfiguration = new WebsiteConfiguration(\"exampleWebsiteConfiguration\", WebsiteConfigurationArgs.builder()\n            .bucket(exampleBucket.name())\n            .indexDocument(WebsiteConfigurationIndexDocumentArgs.builder()\n                .suffix(\"index.html\")\n                .build())\n            .errorDocument(WebsiteConfigurationErrorDocumentArgs.builder()\n                .key(\"error.html\")\n                .build())\n            .routingRules(WebsiteConfigurationRoutingRuleArgs.builder()\n                .condition(WebsiteConfigurationRoutingRuleConditionArgs.builder()\n                    .keyPrefixEquals(\"docs/\")\n                    .build())\n                .redirect(WebsiteConfigurationRoutingRuleRedirectArgs.builder()\n                    .replaceKeyPrefixWith(\"documents/\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleBucket:\n    type: ionoscloud:objectstorage:Bucket\n  exampleWebsiteConfiguration:\n    type: ionoscloud:objectstorage:WebsiteConfiguration\n    properties:\n      bucket: ${exampleBucket.name}\n      indexDocument:\n        - suffix: index.html\n      errorDocument:\n        - key: error.html\n      routingRules:\n        - condition:\n            - keyPrefixEquals: docs/\n          redirect:\n            - replaceKeyPrefixWith: documents/\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nIONOS Object Storage Bucket website configuration can be imported using the `bucket` name.\n\n```sh\n$ pulumi import ionoscloud:objectstorage/websiteConfiguration:WebsiteConfiguration example example\n```\n\n",
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "errorDocument": {
                    "$ref": "#/types/ionoscloud:objectstorage/WebsiteConfigurationErrorDocument:WebsiteConfigurationErrorDocument",
                    "description": "The object key name to use when a 4XX class error occurs. Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests\n"
                },
                "indexDocument": {
                    "$ref": "#/types/ionoscloud:objectstorage/WebsiteConfigurationIndexDocument:WebsiteConfigurationIndexDocument",
                    "description": "Container for the Suffix element.\n"
                },
                "redirectAllRequestsTo": {
                    "$ref": "#/types/ionoscloud:objectstorage/WebsiteConfigurationRedirectAllRequestsTo:WebsiteConfigurationRedirectAllRequestsTo",
                    "description": "Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can can specify a different error code to return.\n"
                },
                "routingRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:objectstorage/WebsiteConfigurationRoutingRule:WebsiteConfigurationRoutingRule"
                    },
                    "description": "A container for describing a condition that must be met for the specified redirect to apply.\n"
                }
            },
            "required": [
                "bucket"
            ],
            "inputProperties": {
                "bucket": {
                    "type": "string",
                    "description": "[string] The name of the bucket where the object will be stored.\n"
                },
                "errorDocument": {
                    "$ref": "#/types/ionoscloud:objectstorage/WebsiteConfigurationErrorDocument:WebsiteConfigurationErrorDocument",
                    "description": "The object key name to use when a 4XX class error occurs. Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests\n"
                },
                "indexDocument": {
                    "$ref": "#/types/ionoscloud:objectstorage/WebsiteConfigurationIndexDocument:WebsiteConfigurationIndexDocument",
                    "description": "Container for the Suffix element.\n"
                },
                "redirectAllRequestsTo": {
                    "$ref": "#/types/ionoscloud:objectstorage/WebsiteConfigurationRedirectAllRequestsTo:WebsiteConfigurationRedirectAllRequestsTo",
                    "description": "Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can can specify a different error code to return.\n"
                },
                "routingRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:objectstorage/WebsiteConfigurationRoutingRule:WebsiteConfigurationRoutingRule"
                    },
                    "description": "A container for describing a condition that must be met for the specified redirect to apply.\n"
                }
            },
            "requiredInputs": [
                "bucket"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebsiteConfiguration resources.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "[string] The name of the bucket where the object will be stored.\n"
                    },
                    "errorDocument": {
                        "$ref": "#/types/ionoscloud:objectstorage/WebsiteConfigurationErrorDocument:WebsiteConfigurationErrorDocument",
                        "description": "The object key name to use when a 4XX class error occurs. Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests\n"
                    },
                    "indexDocument": {
                        "$ref": "#/types/ionoscloud:objectstorage/WebsiteConfigurationIndexDocument:WebsiteConfigurationIndexDocument",
                        "description": "Container for the Suffix element.\n"
                    },
                    "redirectAllRequestsTo": {
                        "$ref": "#/types/ionoscloud:objectstorage/WebsiteConfigurationRedirectAllRequestsTo:WebsiteConfigurationRedirectAllRequestsTo",
                        "description": "Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can can specify a different error code to return.\n"
                    },
                    "routingRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:objectstorage/WebsiteConfigurationRoutingRule:WebsiteConfigurationRoutingRule"
                        },
                        "description": "A container for describing a condition that must be met for the specified redirect to apply.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:vpn/ipsecGateway:IpsecGateway": {
            "properties": {
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:vpn/IpsecGatewayConnection:IpsecGatewayConnection"
                    },
                    "description": "The network connection for your gateway. Note: all connections must belong to the same datacenter.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The human-readable description of your IPSec Gateway.\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "Public IP address to be assigned to the gateway. Note: This must be an IP address in the same datacenter as the\nconnections.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the IPSec Gateway. Supported locations: de/fra, de/txl, es/vit, gb/bhx, gb/lhr, us/ewr, us/las, us/mci,\nfr/par\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:vpn/IpsecGatewayMaintenanceWindow:IpsecGatewayMaintenanceWindow",
                    "description": "A weekly 4 hour-long window, during which maintenance might occur\n"
                },
                "name": {
                    "type": "string",
                    "description": "The human readable name of your IPSecGateway.\n"
                },
                "tier": {
                    "type": "string",
                    "description": "Gateway performance options. See the documentation for the available options\n"
                },
                "version": {
                    "type": "string",
                    "description": "The IKE version that is permitted for the VPN tunnels.\n"
                }
            },
            "required": [
                "connections",
                "gatewayIp",
                "maintenanceWindow",
                "name"
            ],
            "inputProperties": {
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:vpn/IpsecGatewayConnection:IpsecGatewayConnection"
                    },
                    "description": "The network connection for your gateway. Note: all connections must belong to the same datacenter.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The human-readable description of your IPSec Gateway.\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "Public IP address to be assigned to the gateway. Note: This must be an IP address in the same datacenter as the\nconnections.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the IPSec Gateway. Supported locations: de/fra, de/txl, es/vit, gb/bhx, gb/lhr, us/ewr, us/las, us/mci,\nfr/par\n",
                    "willReplaceOnChanges": true
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:vpn/IpsecGatewayMaintenanceWindow:IpsecGatewayMaintenanceWindow",
                    "description": "A weekly 4 hour-long window, during which maintenance might occur\n"
                },
                "name": {
                    "type": "string",
                    "description": "The human readable name of your IPSecGateway.\n"
                },
                "tier": {
                    "type": "string",
                    "description": "Gateway performance options. See the documentation for the available options\n"
                },
                "version": {
                    "type": "string",
                    "description": "The IKE version that is permitted for the VPN tunnels.\n"
                }
            },
            "requiredInputs": [
                "connections",
                "gatewayIp"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpsecGateway resources.\n",
                "properties": {
                    "connections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:vpn/IpsecGatewayConnection:IpsecGatewayConnection"
                        },
                        "description": "The network connection for your gateway. Note: all connections must belong to the same datacenter.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The human-readable description of your IPSec Gateway.\n"
                    },
                    "gatewayIp": {
                        "type": "string",
                        "description": "Public IP address to be assigned to the gateway. Note: This must be an IP address in the same datacenter as the\nconnections.\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of the IPSec Gateway. Supported locations: de/fra, de/txl, es/vit, gb/bhx, gb/lhr, us/ewr, us/las, us/mci,\nfr/par\n",
                        "willReplaceOnChanges": true
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/ionoscloud:vpn/IpsecGatewayMaintenanceWindow:IpsecGatewayMaintenanceWindow",
                        "description": "A weekly 4 hour-long window, during which maintenance might occur\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The human readable name of your IPSecGateway.\n"
                    },
                    "tier": {
                        "type": "string",
                        "description": "Gateway performance options. See the documentation for the available options\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The IKE version that is permitted for the VPN tunnels.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:vpn/ipsecTunnel:IpsecTunnel": {
            "properties": {
                "auth": {
                    "$ref": "#/types/ionoscloud:vpn/IpsecTunnelAuth:IpsecTunnelAuth",
                    "description": "Properties with all data needed to define IPSec Authentication.\n"
                },
                "cloudNetworkCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network CIDRs on the \"Left\" side that are allowed to connect to the IPSec tunnel, i.e. the CIDRs within your IONOS\nCloud LAN. Specify \"0.0.0.0/0\" or \"::/0\" for all addresses.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The human-readable description of your IPSec Gateway Tunnel.\n"
                },
                "esps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:vpn/IpsecTunnelEsp:IpsecTunnelEsp"
                    },
                    "description": "Settings for the IPSec SA (ESP) phase.\n"
                },
                "gatewayId": {
                    "type": "string",
                    "description": "The ID of the IPSec Gateway that the tunnel belongs to.\n"
                },
                "ike": {
                    "$ref": "#/types/ionoscloud:vpn/IpsecTunnelIke:IpsecTunnelIke",
                    "description": "Settings for the initial security exchange phase.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the IPSec Gateway Tunnel. Supported locations: de/fra, de/txl, es/vit, gb/bhx, gb/lhr, us/ewr, us/las,\nus/mci, fr/par\n"
                },
                "name": {
                    "type": "string",
                    "description": "The human-readable name of your IPSec Gateway Tunnel.\n"
                },
                "peerNetworkCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network CIDRs on the \"Right\" side that are allowed to connect to the IPSec tunnel. Specify \"0.0.0.0/0\" or \"::/0\" for\nall addresses.\n"
                },
                "remoteHost": {
                    "type": "string",
                    "description": "The remote peer host fully qualified domain name or public IPV4 IP to connect to.\n"
                }
            },
            "required": [
                "auth",
                "cloudNetworkCidrs",
                "esps",
                "gatewayId",
                "ike",
                "name",
                "peerNetworkCidrs",
                "remoteHost"
            ],
            "inputProperties": {
                "auth": {
                    "$ref": "#/types/ionoscloud:vpn/IpsecTunnelAuth:IpsecTunnelAuth",
                    "description": "Properties with all data needed to define IPSec Authentication.\n"
                },
                "cloudNetworkCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network CIDRs on the \"Left\" side that are allowed to connect to the IPSec tunnel, i.e. the CIDRs within your IONOS\nCloud LAN. Specify \"0.0.0.0/0\" or \"::/0\" for all addresses.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The human-readable description of your IPSec Gateway Tunnel.\n"
                },
                "esps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:vpn/IpsecTunnelEsp:IpsecTunnelEsp"
                    },
                    "description": "Settings for the IPSec SA (ESP) phase.\n"
                },
                "gatewayId": {
                    "type": "string",
                    "description": "The ID of the IPSec Gateway that the tunnel belongs to.\n"
                },
                "ike": {
                    "$ref": "#/types/ionoscloud:vpn/IpsecTunnelIke:IpsecTunnelIke",
                    "description": "Settings for the initial security exchange phase.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the IPSec Gateway Tunnel. Supported locations: de/fra, de/txl, es/vit, gb/bhx, gb/lhr, us/ewr, us/las,\nus/mci, fr/par\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The human-readable name of your IPSec Gateway Tunnel.\n"
                },
                "peerNetworkCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network CIDRs on the \"Right\" side that are allowed to connect to the IPSec tunnel. Specify \"0.0.0.0/0\" or \"::/0\" for\nall addresses.\n"
                },
                "remoteHost": {
                    "type": "string",
                    "description": "The remote peer host fully qualified domain name or public IPV4 IP to connect to.\n"
                }
            },
            "requiredInputs": [
                "auth",
                "cloudNetworkCidrs",
                "esps",
                "gatewayId",
                "ike",
                "peerNetworkCidrs",
                "remoteHost"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpsecTunnel resources.\n",
                "properties": {
                    "auth": {
                        "$ref": "#/types/ionoscloud:vpn/IpsecTunnelAuth:IpsecTunnelAuth",
                        "description": "Properties with all data needed to define IPSec Authentication.\n"
                    },
                    "cloudNetworkCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network CIDRs on the \"Left\" side that are allowed to connect to the IPSec tunnel, i.e. the CIDRs within your IONOS\nCloud LAN. Specify \"0.0.0.0/0\" or \"::/0\" for all addresses.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The human-readable description of your IPSec Gateway Tunnel.\n"
                    },
                    "esps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:vpn/IpsecTunnelEsp:IpsecTunnelEsp"
                        },
                        "description": "Settings for the IPSec SA (ESP) phase.\n"
                    },
                    "gatewayId": {
                        "type": "string",
                        "description": "The ID of the IPSec Gateway that the tunnel belongs to.\n"
                    },
                    "ike": {
                        "$ref": "#/types/ionoscloud:vpn/IpsecTunnelIke:IpsecTunnelIke",
                        "description": "Settings for the initial security exchange phase.\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of the IPSec Gateway Tunnel. Supported locations: de/fra, de/txl, es/vit, gb/bhx, gb/lhr, us/ewr, us/las,\nus/mci, fr/par\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The human-readable name of your IPSec Gateway Tunnel.\n"
                    },
                    "peerNetworkCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network CIDRs on the \"Right\" side that are allowed to connect to the IPSec tunnel. Specify \"0.0.0.0/0\" or \"::/0\" for\nall addresses.\n"
                    },
                    "remoteHost": {
                        "type": "string",
                        "description": "The remote peer host fully qualified domain name or public IPV4 IP to connect to.\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:vpn/wireguardGateway:WireguardGateway": {
            "properties": {
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:vpn/WireguardGatewayConnection:WireguardGatewayConnection"
                    }
                },
                "description": {
                    "type": "string"
                },
                "gatewayIp": {
                    "type": "string"
                },
                "interfaceIpv4Cidr": {
                    "type": "string",
                    "description": "The IPV4 address (with CIDR mask) to be assigned to the WireGuard interface. __Note__: either interfaceIPv4CIDR or\ninterfaceIPv6CIDR is __required__.\n"
                },
                "interfaceIpv6Cidr": {
                    "type": "string",
                    "description": "The IPV6 address (with CIDR mask) to be assigned to the WireGuard interface. __Note__: either interfaceIPv6CIDR or\ninterfaceIPv4CIDR is __required__.\n"
                },
                "listenPort": {
                    "type": "integer"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the WireGuard Gateway. Supported locations: de/fra, de/txl, es/vit, gb/bhx, gb/lhr, us/ewr, us/las,\nus/mci, fr/par\n"
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:vpn/WireguardGatewayMaintenanceWindow:WireguardGatewayMaintenanceWindow",
                    "description": "A weekly 4 hour-long window, during which maintenance might occur\n"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "description": "PrivateKey used for WireGuard Server\n",
                    "secret": true
                },
                "publicKey": {
                    "type": "string",
                    "description": "PublicKey used for WireGuard Server. Received in response from API\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the WireGuard Gateway\n"
                },
                "tier": {
                    "type": "string",
                    "description": "Gateway performance options. See the documentation for the available options\n"
                }
            },
            "required": [
                "connections",
                "gatewayIp",
                "maintenanceWindow",
                "name",
                "privateKey",
                "publicKey",
                "status"
            ],
            "inputProperties": {
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ionoscloud:vpn/WireguardGatewayConnection:WireguardGatewayConnection"
                    }
                },
                "description": {
                    "type": "string"
                },
                "gatewayIp": {
                    "type": "string"
                },
                "interfaceIpv4Cidr": {
                    "type": "string",
                    "description": "The IPV4 address (with CIDR mask) to be assigned to the WireGuard interface. __Note__: either interfaceIPv4CIDR or\ninterfaceIPv6CIDR is __required__.\n"
                },
                "interfaceIpv6Cidr": {
                    "type": "string",
                    "description": "The IPV6 address (with CIDR mask) to be assigned to the WireGuard interface. __Note__: either interfaceIPv6CIDR or\ninterfaceIPv4CIDR is __required__.\n"
                },
                "listenPort": {
                    "type": "integer"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the WireGuard Gateway. Supported locations: de/fra, de/txl, es/vit, gb/bhx, gb/lhr, us/ewr, us/las,\nus/mci, fr/par\n",
                    "willReplaceOnChanges": true
                },
                "maintenanceWindow": {
                    "$ref": "#/types/ionoscloud:vpn/WireguardGatewayMaintenanceWindow:WireguardGatewayMaintenanceWindow",
                    "description": "A weekly 4 hour-long window, during which maintenance might occur\n"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "description": "PrivateKey used for WireGuard Server\n",
                    "secret": true
                },
                "tier": {
                    "type": "string",
                    "description": "Gateway performance options. See the documentation for the available options\n"
                }
            },
            "requiredInputs": [
                "connections",
                "gatewayIp",
                "privateKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WireguardGateway resources.\n",
                "properties": {
                    "connections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:vpn/WireguardGatewayConnection:WireguardGatewayConnection"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "interfaceIpv4Cidr": {
                        "type": "string",
                        "description": "The IPV4 address (with CIDR mask) to be assigned to the WireGuard interface. __Note__: either interfaceIPv4CIDR or\ninterfaceIPv6CIDR is __required__.\n"
                    },
                    "interfaceIpv6Cidr": {
                        "type": "string",
                        "description": "The IPV6 address (with CIDR mask) to be assigned to the WireGuard interface. __Note__: either interfaceIPv6CIDR or\ninterfaceIPv4CIDR is __required__.\n"
                    },
                    "listenPort": {
                        "type": "integer"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of the WireGuard Gateway. Supported locations: de/fra, de/txl, es/vit, gb/bhx, gb/lhr, us/ewr, us/las,\nus/mci, fr/par\n",
                        "willReplaceOnChanges": true
                    },
                    "maintenanceWindow": {
                        "$ref": "#/types/ionoscloud:vpn/WireguardGatewayMaintenanceWindow:WireguardGatewayMaintenanceWindow",
                        "description": "A weekly 4 hour-long window, during which maintenance might occur\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "PrivateKey used for WireGuard Server\n",
                        "secret": true
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "PublicKey used for WireGuard Server. Received in response from API\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the WireGuard Gateway\n"
                    },
                    "tier": {
                        "type": "string",
                        "description": "Gateway performance options. See the documentation for the available options\n"
                    }
                },
                "type": "object"
            }
        },
        "ionoscloud:vpn/wireguardPeer:WireguardPeer": {
            "properties": {
                "allowedIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The subnet CIDRs that are allowed to connect to the WireGuard Gateway.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Human readable description of the WireGuard Gateway Peer.\n"
                },
                "endpoint": {
                    "$ref": "#/types/ionoscloud:vpn/WireguardPeerEndpoint:WireguardPeerEndpoint",
                    "description": "Endpoint configuration for the WireGuard Peer.\n"
                },
                "gatewayId": {
                    "type": "string",
                    "description": "The ID of the WireGuard Peer that the peer will connect to.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the WireGuard Peer. Supported locations: de/fra, de/txl, es/vit, gb/bhx, gb/lhr, us/ewr, us/las, us/mci,\nfr/par\n"
                },
                "name": {
                    "type": "string",
                    "description": "The human readable name of your WireGuard Gateway Peer.\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "WireGuard public key of the connecting peer\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the WireGuard Gateway\n"
                }
            },
            "required": [
                "allowedIps",
                "gatewayId",
                "name",
                "publicKey",
                "status"
            ],
            "inputProperties": {
                "allowedIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The subnet CIDRs that are allowed to connect to the WireGuard Gateway.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Human readable description of the WireGuard Gateway Peer.\n"
                },
                "endpoint": {
                    "$ref": "#/types/ionoscloud:vpn/WireguardPeerEndpoint:WireguardPeerEndpoint",
                    "description": "Endpoint configuration for the WireGuard Peer.\n"
                },
                "gatewayId": {
                    "type": "string",
                    "description": "The ID of the WireGuard Peer that the peer will connect to.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the WireGuard Peer. Supported locations: de/fra, de/txl, es/vit, gb/bhx, gb/lhr, us/ewr, us/las, us/mci,\nfr/par\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The human readable name of your WireGuard Gateway Peer.\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "WireGuard public key of the connecting peer\n"
                }
            },
            "requiredInputs": [
                "allowedIps",
                "gatewayId",
                "publicKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WireguardPeer resources.\n",
                "properties": {
                    "allowedIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The subnet CIDRs that are allowed to connect to the WireGuard Gateway.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Human readable description of the WireGuard Gateway Peer.\n"
                    },
                    "endpoint": {
                        "$ref": "#/types/ionoscloud:vpn/WireguardPeerEndpoint:WireguardPeerEndpoint",
                        "description": "Endpoint configuration for the WireGuard Peer.\n"
                    },
                    "gatewayId": {
                        "type": "string",
                        "description": "The ID of the WireGuard Peer that the peer will connect to.\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of the WireGuard Peer. Supported locations: de/fra, de/txl, es/vit, gb/bhx, gb/lhr, us/ewr, us/las, us/mci,\nfr/par\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The human readable name of your WireGuard Gateway Peer.\n"
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "WireGuard public key of the connecting peer\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the WireGuard Gateway\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "ionoscloud:alb/getBalancer:getBalancer": {
            "inputs": {
                "description": "A collection of arguments for invoking getBalancer.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBalancer.\n",
                "properties": {
                    "centralLogging": {
                        "type": "boolean"
                    },
                    "datacenterId": {
                        "type": "string"
                    },
                    "flowlogs": {
                        "items": {
                            "$ref": "#/types/ionoscloud:alb/getBalancerFlowlog:getBalancerFlowlog"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ips": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "lbPrivateIps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "listenerLan": {
                        "type": "integer"
                    },
                    "loggingFormat": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "targetLan": {
                        "type": "integer"
                    }
                },
                "required": [
                    "centralLogging",
                    "datacenterId",
                    "flowlogs",
                    "id",
                    "ips",
                    "lbPrivateIps",
                    "listenerLan",
                    "loggingFormat",
                    "name",
                    "targetLan"
                ],
                "type": "object"
            }
        },
        "ionoscloud:alb/getForwardingRule:getForwardingRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getForwardingRule.\n",
                "properties": {
                    "applicationLoadbalancerId": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "applicationLoadbalancerId",
                    "datacenterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getForwardingRule.\n",
                "properties": {
                    "applicationLoadbalancerId": {
                        "type": "string"
                    },
                    "clientTimeout": {
                        "type": "integer"
                    },
                    "datacenterId": {
                        "type": "string"
                    },
                    "httpRules": {
                        "items": {
                            "$ref": "#/types/ionoscloud:alb/getForwardingRuleHttpRule:getForwardingRuleHttpRule"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "listenerIp": {
                        "type": "string"
                    },
                    "listenerPort": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "serverCertificates": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "applicationLoadbalancerId",
                    "clientTimeout",
                    "datacenterId",
                    "httpRules",
                    "id",
                    "listenerIp",
                    "listenerPort",
                    "name",
                    "protocol",
                    "serverCertificates"
                ],
                "type": "object"
            }
        },
        "ionoscloud:apigateway/getApigateway:getApigateway": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigateway.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApigateway.\n",
                "properties": {
                    "customDomains": {
                        "items": {
                            "$ref": "#/types/ionoscloud:apigateway/getApigatewayCustomDomain:getApigatewayCustomDomain"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "logs": {
                        "type": "boolean"
                    },
                    "metrics": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "publicEndpoint": {
                        "type": "string"
                    }
                },
                "required": [
                    "customDomains",
                    "id",
                    "logs",
                    "metrics",
                    "name",
                    "publicEndpoint"
                ],
                "type": "object"
            }
        },
        "ionoscloud:apigateway/getRoute:getRoute": {
            "inputs": {
                "description": "A collection of arguments for invoking getRoute.\n",
                "properties": {
                    "gatewayId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "gatewayId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRoute.\n",
                "properties": {
                    "gatewayId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "methods": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "paths": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string"
                    },
                    "upstreams": {
                        "items": {
                            "$ref": "#/types/ionoscloud:apigateway/getRouteUpstream:getRouteUpstream"
                        },
                        "type": "array"
                    },
                    "websocket": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "gatewayId",
                    "id",
                    "methods",
                    "name",
                    "paths",
                    "type",
                    "upstreams",
                    "websocket"
                ],
                "type": "object"
            }
        },
        "ionoscloud:autoscaling/getGroup:getGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "maxReplicaCount": {
                        "type": "integer"
                    },
                    "minReplicaCount": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policies": {
                        "items": {
                            "$ref": "#/types/ionoscloud:autoscaling/getGroupPolicy:getGroupPolicy"
                        },
                        "type": "array"
                    },
                    "replicaConfigurations": {
                        "items": {
                            "$ref": "#/types/ionoscloud:autoscaling/getGroupReplicaConfiguration:getGroupReplicaConfiguration"
                        },
                        "type": "array"
                    },
                    "targetReplicaCount": {
                        "type": "integer"
                    }
                },
                "required": [
                    "datacenterId",
                    "id",
                    "location",
                    "maxReplicaCount",
                    "minReplicaCount",
                    "name",
                    "policies",
                    "replicaConfigurations",
                    "targetReplicaCount"
                ],
                "type": "object"
            }
        },
        "ionoscloud:autoscaling/getServers:getServers": {
            "inputs": {
                "description": "A collection of arguments for invoking getServers.\n",
                "properties": {
                    "groupId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "groupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServers.\n",
                "properties": {
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "servers": {
                        "items": {
                            "$ref": "#/types/ionoscloud:autoscaling/getServersServer:getServersServer"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "groupId",
                    "servers",
                    "id"
                ],
                "type": "object"
            }
        },
        "ionoscloud:cdn/getDistribution:getDistribution": {
            "inputs": {
                "description": "A collection of arguments for invoking getDistribution.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDistribution.\n",
                "properties": {
                    "certificateId": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "publicEndpointV4": {
                        "type": "string"
                    },
                    "publicEndpointV6": {
                        "type": "string"
                    },
                    "resourceUrn": {
                        "type": "string"
                    },
                    "routingRules": {
                        "items": {
                            "$ref": "#/types/ionoscloud:cdn/getDistributionRoutingRule:getDistributionRoutingRule"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "certificateId",
                    "id",
                    "publicEndpointV4",
                    "publicEndpointV6",
                    "resourceUrn",
                    "routingRules"
                ],
                "type": "object"
            }
        },
        "ionoscloud:cert/getAutoCertificate:getAutoCertificate": {
            "inputs": {
                "description": "A collection of arguments for invoking getAutoCertificate.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "location"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAutoCertificate.\n",
                "properties": {
                    "commonName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "keyAlgorithm": {
                        "type": "string"
                    },
                    "lastIssuedCertificateId": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "providerId": {
                        "type": "string"
                    },
                    "subjectAlternativeNames": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "commonName",
                    "id",
                    "keyAlgorithm",
                    "lastIssuedCertificateId",
                    "location",
                    "name",
                    "providerId",
                    "subjectAlternativeNames"
                ],
                "type": "object"
            }
        },
        "ionoscloud:cert/getAutoCertificateProvider:getAutoCertificateProvider": {
            "inputs": {
                "description": "A collection of arguments for invoking getAutoCertificateProvider.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAutoCertificateProvider.\n",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "externalAccountBindings": {
                        "items": {
                            "$ref": "#/types/ionoscloud:cert/getAutoCertificateProviderExternalAccountBinding:getAutoCertificateProviderExternalAccountBinding"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "server": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "externalAccountBindings",
                    "id",
                    "name",
                    "server"
                ],
                "type": "object"
            }
        },
        "ionoscloud:cert/getCertificate:getCertificate": {
            "inputs": {
                "description": "A collection of arguments for invoking getCertificate.\n",
                "properties": {
                    "certificate": {
                        "type": "string"
                    },
                    "certificateChain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCertificate.\n",
                "properties": {
                    "certificate": {
                        "type": "string"
                    },
                    "certificateChain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "certificate",
                    "certificateChain",
                    "id",
                    "name"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getBackupUnit:getBackupUnit": {
            "inputs": {
                "description": "A collection of arguments for invoking getBackupUnit.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBackupUnit.\n",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "login": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "id",
                    "login",
                    "name"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getCrossconnect:getCrossconnect": {
            "inputs": {
                "description": "A collection of arguments for invoking getCrossconnect.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCrossconnect.\n",
                "properties": {
                    "connectableDatacenters": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getCrossconnectConnectableDatacenter:getCrossconnectConnectableDatacenter"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "peers": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getCrossconnectPeer:getCrossconnectPeer"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "connectableDatacenters",
                    "description",
                    "id",
                    "name",
                    "peers"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getCubeServer:getCubeServer": {
            "inputs": {
                "description": "A collection of arguments for invoking getCubeServer.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "templateUuid": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCubeServer.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "bootCdrom": {
                        "type": "string"
                    },
                    "bootImage": {
                        "type": "string"
                    },
                    "bootVolume": {
                        "type": "string"
                    },
                    "cdroms": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getCubeServerCdrom:getCubeServerCdrom"
                        },
                        "type": "array"
                    },
                    "cores": {
                        "type": "integer"
                    },
                    "cpuFamily": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nics": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getCubeServerNic:getCubeServerNic"
                        },
                        "type": "array"
                    },
                    "ram": {
                        "type": "integer"
                    },
                    "securityGroupsIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "templateUuid": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "vmState": {
                        "type": "string"
                    },
                    "volumes": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getCubeServerVolume:getCubeServerVolume"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "availabilityZone",
                    "bootCdrom",
                    "bootImage",
                    "bootVolume",
                    "cdroms",
                    "cores",
                    "cpuFamily",
                    "datacenterId",
                    "hostname",
                    "id",
                    "name",
                    "nics",
                    "ram",
                    "securityGroupsIds",
                    "token",
                    "vmState",
                    "volumes"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getDatacenter:getDatacenter": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatacenter.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDatacenter.\n",
                "properties": {
                    "cpuArchitectures": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getDatacenterCpuArchitecture:getDatacenterCpuArchitecture"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "features": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv6CidrBlock": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secAuthProtection": {
                        "type": "boolean"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "required": [
                    "cpuArchitectures",
                    "description",
                    "features",
                    "id",
                    "ipv6CidrBlock",
                    "name",
                    "secAuthProtection",
                    "version"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getFirewall:getFirewall": {
            "inputs": {
                "description": "A collection of arguments for invoking getFirewall.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nicId": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId",
                    "nicId",
                    "serverId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFirewall.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "icmpCode": {
                        "type": "string"
                    },
                    "icmpType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nicId": {
                        "type": "string"
                    },
                    "portRangeEnd": {
                        "type": "integer"
                    },
                    "portRangeStart": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "sourceIp": {
                        "type": "string"
                    },
                    "sourceMac": {
                        "type": "string"
                    },
                    "targetIp": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "datacenterId",
                    "icmpCode",
                    "icmpType",
                    "id",
                    "name",
                    "nicId",
                    "portRangeEnd",
                    "portRangeStart",
                    "protocol",
                    "serverId",
                    "sourceIp",
                    "sourceMac",
                    "targetIp",
                    "type"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getGroup:getGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "accessActivityLog": {
                        "type": "boolean"
                    },
                    "accessAndManageCertificates": {
                        "type": "boolean"
                    },
                    "accessAndManageMonitoring": {
                        "type": "boolean"
                    },
                    "createBackupUnit": {
                        "type": "boolean"
                    },
                    "createDatacenter": {
                        "type": "boolean"
                    },
                    "createFlowLog": {
                        "type": "boolean"
                    },
                    "createInternetAccess": {
                        "type": "boolean"
                    },
                    "createK8sCluster": {
                        "type": "boolean"
                    },
                    "createPcc": {
                        "type": "boolean"
                    },
                    "createSnapshot": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "manageDbaas": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "reserveIp": {
                        "type": "boolean"
                    },
                    "s3Privilege": {
                        "type": "boolean"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getGroupUser:getGroupUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "accessActivityLog",
                    "accessAndManageCertificates",
                    "accessAndManageMonitoring",
                    "createBackupUnit",
                    "createDatacenter",
                    "createFlowLog",
                    "createInternetAccess",
                    "createK8sCluster",
                    "createPcc",
                    "createSnapshot",
                    "id",
                    "manageDbaas",
                    "name",
                    "reserveIp",
                    "s3Privilege",
                    "users"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getIPBlock:getIPBlock": {
            "inputs": {
                "description": "A collection of arguments for invoking getIPBlock.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIPBlock.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "ipConsumers": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getIPBlockIpConsumer:getIPBlockIpConsumer"
                        },
                        "type": "array"
                    },
                    "ips": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "ipConsumers",
                    "ips",
                    "location",
                    "name",
                    "size"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getIPFailover:getIPFailover": {
            "inputs": {
                "description": "A collection of arguments for invoking getIPFailover.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "lanId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId",
                    "ip",
                    "lanId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIPFailover.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "lanId": {
                        "type": "string"
                    },
                    "nicuuid": {
                        "type": "string"
                    }
                },
                "required": [
                    "datacenterId",
                    "id",
                    "ip",
                    "lanId",
                    "nicuuid"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getImage:getImage": {
            "inputs": {
                "description": "A collection of arguments for invoking getImage.\n",
                "properties": {
                    "cloudInit": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "imageAlias": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getImage.\n",
                "properties": {
                    "cloudInit": {
                        "type": "string"
                    },
                    "cpuHotPlug": {
                        "type": "boolean"
                    },
                    "cpuHotUnplug": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "discScsiHotPlug": {
                        "type": "boolean"
                    },
                    "discScsiHotUnplug": {
                        "type": "boolean"
                    },
                    "discVirtioHotPlug": {
                        "type": "boolean"
                    },
                    "discVirtioHotUnplug": {
                        "type": "boolean"
                    },
                    "exposeSerial": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "imageAlias": {
                        "type": "string"
                    },
                    "imageAliases": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "licenceType": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nicHotPlug": {
                        "type": "boolean"
                    },
                    "nicHotUnplug": {
                        "type": "boolean"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "ramHotPlug": {
                        "type": "boolean"
                    },
                    "ramHotUnplug": {
                        "type": "boolean"
                    },
                    "size": {
                        "type": "number"
                    },
                    "type": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "cloudInit",
                    "cpuHotPlug",
                    "cpuHotUnplug",
                    "description",
                    "discScsiHotPlug",
                    "discScsiHotUnplug",
                    "discVirtioHotPlug",
                    "discVirtioHotUnplug",
                    "exposeSerial",
                    "imageAlias",
                    "imageAliases",
                    "licenceType",
                    "location",
                    "name",
                    "nicHotPlug",
                    "nicHotUnplug",
                    "public",
                    "ramHotPlug",
                    "ramHotUnplug",
                    "size",
                    "type",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getLan:getLan": {
            "inputs": {
                "description": "A collection of arguments for invoking getLan.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLan.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipFailovers": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getLanIpFailover:getLanIpFailover"
                        },
                        "type": "array"
                    },
                    "ipv6CidrBlock": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pcc": {
                        "type": "string"
                    },
                    "public": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "datacenterId",
                    "id",
                    "ipFailovers",
                    "ipv6CidrBlock",
                    "name",
                    "pcc",
                    "public"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getLocation:getLocation": {
            "inputs": {
                "description": "A collection of arguments for invoking getLocation.\n",
                "properties": {
                    "feature": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLocation.\n",
                "properties": {
                    "cpuArchitectures": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getLocationCpuArchitecture:getLocationCpuArchitecture"
                        },
                        "type": "array"
                    },
                    "feature": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "imageAliases": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "cpuArchitectures",
                    "feature",
                    "imageAliases",
                    "name",
                    "id"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getNatGateway:getNatGateway": {
            "inputs": {
                "description": "A collection of arguments for invoking getNatGateway.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNatGateway.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "lans": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getNatGatewayLan:getNatGatewayLan"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicIps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "datacenterId",
                    "id",
                    "lans",
                    "name",
                    "publicIps"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getNatGatewayRule:getNatGatewayRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getNatGatewayRule.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "natgatewayId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId",
                    "natgatewayId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNatGatewayRule.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "natgatewayId": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "sourceSubnet": {
                        "type": "string"
                    },
                    "targetPortRanges": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getNatGatewayRuleTargetPortRange:getNatGatewayRuleTargetPortRange"
                        },
                        "type": "array"
                    },
                    "targetSubnet": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "datacenterId",
                    "id",
                    "name",
                    "natgatewayId",
                    "protocol",
                    "publicIp",
                    "sourceSubnet",
                    "targetPortRanges",
                    "targetSubnet",
                    "type"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getNic:getNic": {
            "inputs": {
                "description": "A collection of arguments for invoking getNic.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId",
                    "serverId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNic.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "deviceNumber": {
                        "type": "integer"
                    },
                    "dhcp": {
                        "type": "boolean"
                    },
                    "dhcpv6": {
                        "type": "boolean"
                    },
                    "firewallActive": {
                        "type": "boolean"
                    },
                    "firewallType": {
                        "type": "string"
                    },
                    "flowlogs": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getNicFlowlog:getNicFlowlog"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ips": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ipv6CidrBlock": {
                        "type": "string"
                    },
                    "ipv6Ips": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "lan": {
                        "type": "integer"
                    },
                    "mac": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pciSlot": {
                        "type": "integer"
                    },
                    "securityGroupsIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serverId": {
                        "type": "string"
                    }
                },
                "required": [
                    "datacenterId",
                    "deviceNumber",
                    "dhcp",
                    "dhcpv6",
                    "firewallActive",
                    "firewallType",
                    "flowlogs",
                    "id",
                    "ips",
                    "ipv6CidrBlock",
                    "ipv6Ips",
                    "lan",
                    "mac",
                    "name",
                    "pciSlot",
                    "securityGroupsIds",
                    "serverId"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getResource:getResource": {
            "inputs": {
                "description": "A collection of arguments for invoking getResource.\n",
                "properties": {
                    "resourceId": {
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getResource.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getS3Key:getS3Key": {
            "inputs": {
                "description": "A collection of arguments for invoking getS3Key.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getS3Key.\n",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "secretKey": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "required": [
                    "active",
                    "id",
                    "secretKey",
                    "userId"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getServer:getServer": {
            "inputs": {
                "description": "A collection of arguments for invoking getServer.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "templateUuid": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServer.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "bootCdrom": {
                        "type": "string"
                    },
                    "bootImage": {
                        "type": "string"
                    },
                    "bootVolume": {
                        "type": "string"
                    },
                    "cdroms": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getServerCdrom:getServerCdrom"
                        },
                        "type": "array"
                    },
                    "cores": {
                        "type": "integer"
                    },
                    "cpuFamily": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "labels": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getServerLabel:getServerLabel"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nics": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getServerNic:getServerNic"
                        },
                        "type": "array"
                    },
                    "ram": {
                        "type": "integer"
                    },
                    "securityGroupsIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "templateUuid": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vmState": {
                        "type": "string"
                    },
                    "volumes": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getServerVolume:getServerVolume"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "availabilityZone",
                    "bootCdrom",
                    "bootImage",
                    "bootVolume",
                    "cdroms",
                    "cores",
                    "cpuFamily",
                    "datacenterId",
                    "hostname",
                    "id",
                    "labels",
                    "name",
                    "nics",
                    "ram",
                    "securityGroupsIds",
                    "token",
                    "type",
                    "vmState",
                    "volumes"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getServers:getServers": {
            "inputs": {
                "description": "A collection of arguments for invoking getServers.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getServersFilter:getServersFilter"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServers.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "filters": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getServersFilter:getServersFilter"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "servers": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getServersServer:getServersServer"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "datacenterId",
                    "servers",
                    "id"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getShare:getShare": {
            "inputs": {
                "description": "A collection of arguments for invoking getShare.\n",
                "properties": {
                    "groupId": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "groupId",
                    "resourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getShare.\n",
                "properties": {
                    "editPrivilege": {
                        "type": "boolean"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "sharePrivilege": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "editPrivilege",
                    "groupId",
                    "id",
                    "resourceId",
                    "sharePrivilege"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getSnapshot:getSnapshot": {
            "inputs": {
                "description": "A collection of arguments for invoking getSnapshot.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSnapshot.\n",
                "properties": {
                    "cpuHotPlug": {
                        "type": "boolean"
                    },
                    "cpuHotUnplug": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "discScsiHotPlug": {
                        "type": "boolean"
                    },
                    "discScsiHotUnplug": {
                        "type": "boolean"
                    },
                    "discVirtioHotPlug": {
                        "type": "boolean"
                    },
                    "discVirtioHotUnplug": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "licenceType": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nicHotPlug": {
                        "type": "boolean"
                    },
                    "nicHotUnplug": {
                        "type": "boolean"
                    },
                    "ramHotPlug": {
                        "type": "boolean"
                    },
                    "ramHotUnplug": {
                        "type": "boolean"
                    },
                    "secAuthProtection": {
                        "type": "boolean"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "required": [
                    "cpuHotPlug",
                    "cpuHotUnplug",
                    "description",
                    "discScsiHotPlug",
                    "discScsiHotUnplug",
                    "discVirtioHotPlug",
                    "discVirtioHotUnplug",
                    "id",
                    "licenceType",
                    "location",
                    "name",
                    "nicHotPlug",
                    "nicHotUnplug",
                    "ramHotPlug",
                    "ramHotUnplug",
                    "secAuthProtection",
                    "size"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getTargetGroup:getTargetGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getTargetGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTargetGroup.\n",
                "properties": {
                    "algorithm": {
                        "type": "string"
                    },
                    "healthChecks": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getTargetGroupHealthCheck:getTargetGroupHealthCheck"
                        },
                        "type": "array"
                    },
                    "httpHealthChecks": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getTargetGroupHttpHealthCheck:getTargetGroupHttpHealthCheck"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "protocolVersion": {
                        "type": "string"
                    },
                    "targets": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getTargetGroupTarget:getTargetGroupTarget"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "algorithm",
                    "healthChecks",
                    "httpHealthChecks",
                    "id",
                    "name",
                    "protocol",
                    "protocolVersion",
                    "targets"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getTemplate:getTemplate": {
            "inputs": {
                "description": "A collection of arguments for invoking getTemplate.\n",
                "properties": {
                    "cores": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ram": {
                        "type": "number"
                    },
                    "storageSize": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTemplate.\n",
                "properties": {
                    "cores": {
                        "type": "number"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ram": {
                        "type": "number"
                    },
                    "storageSize": {
                        "type": "number"
                    }
                },
                "required": [
                    "cores",
                    "id",
                    "name",
                    "ram",
                    "storageSize"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getUser:getUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "administrator": {
                        "type": "boolean"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "forceSecAuth": {
                        "type": "boolean"
                    },
                    "groups": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getUserGroup:getUserGroup"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "s3CanonicalUserId": {
                        "type": "string"
                    },
                    "secAuthActive": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "active",
                    "administrator",
                    "firstName",
                    "forceSecAuth",
                    "groups",
                    "id",
                    "lastName",
                    "s3CanonicalUserId",
                    "secAuthActive"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getVCPUServer:getVCPUServer": {
            "inputs": {
                "description": "A collection of arguments for invoking getVCPUServer.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVCPUServer.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "bootCdrom": {
                        "type": "string"
                    },
                    "bootImage": {
                        "type": "string"
                    },
                    "bootVolume": {
                        "type": "string"
                    },
                    "cdroms": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getVCPUServerCdrom:getVCPUServerCdrom"
                        },
                        "type": "array"
                    },
                    "cores": {
                        "type": "integer"
                    },
                    "cpuFamily": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "labels": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getVCPUServerLabel:getVCPUServerLabel"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nics": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getVCPUServerNic:getVCPUServerNic"
                        },
                        "type": "array"
                    },
                    "ram": {
                        "type": "integer"
                    },
                    "securityGroupsIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "token": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vmState": {
                        "type": "string"
                    },
                    "volumes": {
                        "items": {
                            "$ref": "#/types/ionoscloud:compute/getVCPUServerVolume:getVCPUServerVolume"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "availabilityZone",
                    "bootCdrom",
                    "bootImage",
                    "bootVolume",
                    "cdroms",
                    "cores",
                    "cpuFamily",
                    "datacenterId",
                    "hostname",
                    "id",
                    "labels",
                    "name",
                    "nics",
                    "ram",
                    "securityGroupsIds",
                    "token",
                    "type",
                    "vmState",
                    "volumes"
                ],
                "type": "object"
            }
        },
        "ionoscloud:compute/getVolume:getVolume": {
            "inputs": {
                "description": "A collection of arguments for invoking getVolume.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVolume.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "backupUnitId": {
                        "type": "string"
                    },
                    "bootServer": {
                        "type": "string"
                    },
                    "bus": {
                        "type": "string"
                    },
                    "cpuHotPlug": {
                        "type": "boolean"
                    },
                    "datacenterId": {
                        "type": "string"
                    },
                    "deviceNumber": {
                        "type": "integer"
                    },
                    "discVirtioHotPlug": {
                        "type": "boolean"
                    },
                    "discVirtioHotUnplug": {
                        "type": "boolean"
                    },
                    "diskType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "imagePassword": {
                        "type": "string"
                    },
                    "licenceType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nicHotPlug": {
                        "type": "boolean"
                    },
                    "nicHotUnplug": {
                        "type": "boolean"
                    },
                    "ramHotPlug": {
                        "type": "boolean"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "sshkey": {
                        "type": "string"
                    },
                    "userData": {
                        "type": "string"
                    }
                },
                "required": [
                    "availabilityZone",
                    "backupUnitId",
                    "bootServer",
                    "bus",
                    "cpuHotPlug",
                    "datacenterId",
                    "deviceNumber",
                    "discVirtioHotPlug",
                    "discVirtioHotUnplug",
                    "diskType",
                    "id",
                    "image",
                    "imagePassword",
                    "licenceType",
                    "name",
                    "nicHotPlug",
                    "nicHotUnplug",
                    "ramHotPlug",
                    "size",
                    "sshkey",
                    "userData"
                ],
                "type": "object"
            }
        },
        "ionoscloud:creg/getRegistry:getRegistry": {
            "inputs": {
                "description": "A collection of arguments for invoking getRegistry.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRegistry.\n",
                "properties": {
                    "apiSubnetAllowLists": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "features": {
                        "items": {
                            "$ref": "#/types/ionoscloud:creg/getRegistryFeature:getRegistryFeature"
                        },
                        "type": "array"
                    },
                    "garbageCollectionSchedules": {
                        "items": {
                            "$ref": "#/types/ionoscloud:creg/getRegistryGarbageCollectionSchedule:getRegistryGarbageCollectionSchedule"
                        },
                        "type": "array"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/ionoscloud:creg/getRegistryMaintenanceWindow:getRegistryMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "storageUsages": {
                        "items": {
                            "$ref": "#/types/ionoscloud:creg/getRegistryStorageUsage:getRegistryStorageUsage"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "apiSubnetAllowLists",
                    "features",
                    "garbageCollectionSchedules",
                    "hostname",
                    "id",
                    "maintenanceWindows",
                    "name",
                    "storageUsages"
                ],
                "type": "object"
            }
        },
        "ionoscloud:creg/getRegistryLocations:getRegistryLocations": {
            "outputs": {
                "description": "A collection of values returned by getRegistryLocations.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "locations": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "locations",
                    "id"
                ],
                "type": "object"
            }
        },
        "ionoscloud:creg/getRegistryToken:getRegistryToken": {
            "inputs": {
                "description": "A collection of arguments for invoking getRegistryToken.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "registryId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "registryId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegistryToken.\n",
                "properties": {
                    "credentials": {
                        "items": {
                            "$ref": "#/types/ionoscloud:creg/getRegistryTokenCredential:getRegistryTokenCredential"
                        },
                        "type": "array"
                    },
                    "expiryDate": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "scopes": {
                        "items": {
                            "$ref": "#/types/ionoscloud:creg/getRegistryTokenScope:getRegistryTokenScope"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "credentials",
                    "expiryDate",
                    "id",
                    "name",
                    "registryId",
                    "scopes",
                    "status"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dbaas/getInMemoryDBReplicaSet:getInMemoryDBReplicaSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getInMemoryDBReplicaSet.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getInMemoryDBReplicaSet.\n",
                "properties": {
                    "connections": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getInMemoryDBReplicaSetConnection:getInMemoryDBReplicaSetConnection"
                        },
                        "type": "array"
                    },
                    "credentials": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getInMemoryDBReplicaSetCredential:getInMemoryDBReplicaSetCredential"
                        },
                        "type": "array"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "evictionPolicy": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getInMemoryDBReplicaSetMaintenanceWindow:getInMemoryDBReplicaSetMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "persistenceMode": {
                        "type": "string"
                    },
                    "replicas": {
                        "type": "integer"
                    },
                    "resources": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getInMemoryDBReplicaSetResource:getInMemoryDBReplicaSetResource"
                        },
                        "type": "array"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "connections",
                    "credentials",
                    "displayName",
                    "dnsName",
                    "evictionPolicy",
                    "id",
                    "maintenanceWindows",
                    "persistenceMode",
                    "replicas",
                    "resources",
                    "version"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dbaas/getInmemorydbSnapshot:getInmemorydbSnapshot": {
            "inputs": {
                "description": "A collection of arguments for invoking getInmemorydbSnapshot.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "location"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInmemorydbSnapshot.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "metadatas": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getInmemorydbSnapshotMetadata:getInmemorydbSnapshotMetadata"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "location",
                    "metadatas"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dbaas/getMariaDBBackups:getMariaDBBackups": {
            "inputs": {
                "description": "A collection of arguments for invoking getMariaDBBackups.\n",
                "properties": {
                    "backupId": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMariaDBBackups.\n",
                "properties": {
                    "backupId": {
                        "type": "string"
                    },
                    "backups": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getMariaDBBackupsBackup:getMariaDBBackupsBackup"
                        },
                        "type": "array"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    }
                },
                "required": [
                    "backupId",
                    "backups",
                    "clusterId",
                    "id"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dbaas/getMariaDBCluster:getMariaDBCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getMariaDBCluster.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMariaDBCluster.\n",
                "properties": {
                    "connections": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getMariaDBClusterConnection:getMariaDBClusterConnection"
                        },
                        "type": "array"
                    },
                    "cores": {
                        "type": "integer"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "instances": {
                        "type": "integer"
                    },
                    "location": {
                        "type": "string"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getMariaDBClusterMaintenanceWindow:getMariaDBClusterMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "mariadbVersion": {
                        "type": "string"
                    },
                    "ram": {
                        "type": "integer"
                    },
                    "storageSize": {
                        "type": "integer"
                    }
                },
                "required": [
                    "connections",
                    "cores",
                    "displayName",
                    "dnsName",
                    "id",
                    "instances",
                    "maintenanceWindows",
                    "mariadbVersion",
                    "ram",
                    "storageSize"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dbaas/getMongoCluster:getMongoCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getMongoCluster.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMongoCluster.\n",
                "properties": {
                    "backups": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getMongoClusterBackup:getMongoClusterBackup"
                        },
                        "type": "array"
                    },
                    "biConnectors": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getMongoClusterBiConnector:getMongoClusterBiConnector"
                        },
                        "type": "array"
                    },
                    "connectionString": {
                        "type": "string"
                    },
                    "connections": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getMongoClusterConnection:getMongoClusterConnection"
                        },
                        "type": "array"
                    },
                    "cores": {
                        "type": "integer"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "edition": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "instances": {
                        "type": "integer"
                    },
                    "location": {
                        "type": "string"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getMongoClusterMaintenanceWindow:getMongoClusterMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "mongodbVersion": {
                        "type": "string"
                    },
                    "ram": {
                        "type": "integer"
                    },
                    "shards": {
                        "type": "integer"
                    },
                    "storageSize": {
                        "type": "integer"
                    },
                    "storageType": {
                        "type": "string"
                    },
                    "templateId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "backups",
                    "biConnectors",
                    "connectionString",
                    "connections",
                    "cores",
                    "displayName",
                    "edition",
                    "id",
                    "instances",
                    "location",
                    "maintenanceWindows",
                    "mongodbVersion",
                    "ram",
                    "shards",
                    "storageSize",
                    "storageType",
                    "templateId",
                    "type"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dbaas/getMongoTemplate:getMongoTemplate": {
            "inputs": {
                "description": "A collection of arguments for invoking getMongoTemplate.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMongoTemplate.\n",
                "properties": {
                    "cores": {
                        "type": "integer"
                    },
                    "edition": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "ram": {
                        "type": "integer"
                    },
                    "storageSize": {
                        "type": "integer"
                    }
                },
                "required": [
                    "cores",
                    "edition",
                    "id",
                    "name",
                    "ram",
                    "storageSize"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dbaas/getMongoUser:getMongoUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getMongoUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "database": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getMongoUserRole:getMongoUserRole"
                        }
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMongoUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "database": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "roles": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getMongoUserRole:getMongoUserRole"
                        },
                        "type": "array"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "clusterId",
                    "database",
                    "id",
                    "roles",
                    "username"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dbaas/getPSQLBackups:getPSQLBackups": {
            "inputs": {
                "description": "A collection of arguments for invoking getPSQLBackups.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPSQLBackups.\n",
                "properties": {
                    "clusterBackups": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getPSQLBackupsClusterBackup:getPSQLBackupsClusterBackup"
                        },
                        "type": "array"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "clusterBackups",
                    "clusterId",
                    "id"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dbaas/getPSQLCluster:getPSQLCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getPSQLCluster.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPSQLCluster.\n",
                "properties": {
                    "backupLocation": {
                        "type": "string"
                    },
                    "connectionPoolers": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getPSQLClusterConnectionPooler:getPSQLClusterConnectionPooler"
                        },
                        "type": "array"
                    },
                    "connections": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getPSQLClusterConnection:getPSQLClusterConnection"
                        },
                        "type": "array"
                    },
                    "cores": {
                        "type": "integer"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "fromBackups": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getPSQLClusterFromBackup:getPSQLClusterFromBackup"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "instances": {
                        "type": "integer"
                    },
                    "location": {
                        "type": "string"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getPSQLClusterMaintenanceWindow:getPSQLClusterMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "postgresVersion": {
                        "type": "string"
                    },
                    "ram": {
                        "type": "integer"
                    },
                    "storageSize": {
                        "type": "integer"
                    },
                    "storageType": {
                        "type": "string"
                    },
                    "synchronizationMode": {
                        "type": "string"
                    }
                },
                "required": [
                    "backupLocation",
                    "connectionPoolers",
                    "connections",
                    "cores",
                    "displayName",
                    "dnsName",
                    "fromBackups",
                    "id",
                    "instances",
                    "location",
                    "maintenanceWindows",
                    "postgresVersion",
                    "ram",
                    "storageSize",
                    "storageType",
                    "synchronizationMode"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dbaas/getPSQLDatabase:getPSQLDatabase": {
            "inputs": {
                "description": "A collection of arguments for invoking getPSQLDatabase.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPSQLDatabase.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    }
                },
                "required": [
                    "clusterId",
                    "id",
                    "name",
                    "owner"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dbaas/getPSQLDatabases:getPSQLDatabases": {
            "inputs": {
                "description": "A collection of arguments for invoking getPSQLDatabases.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPSQLDatabases.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "databases": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dbaas/getPSQLDatabasesDatabase:getPSQLDatabasesDatabase"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    }
                },
                "required": [
                    "clusterId",
                    "databases",
                    "id"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dbaas/getPSQLUser:getPSQLUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getPSQLUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPSQLUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isSystemUser": {
                        "type": "boolean"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "clusterId",
                    "id",
                    "isSystemUser",
                    "username"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dbaas/getPSQLVersions:getPSQLVersions": {
            "inputs": {
                "description": "A collection of arguments for invoking getPSQLVersions.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPSQLVersions.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "postgresVersions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "postgresVersions",
                    "id"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dns/getRecord:getRecord": {
            "inputs": {
                "description": "A collection of arguments for invoking getRecord.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "zoneId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "zoneId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRecord.\n",
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "fqdn": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "zoneId": {
                        "type": "string"
                    }
                },
                "required": [
                    "content",
                    "enabled",
                    "fqdn",
                    "id",
                    "name",
                    "priority",
                    "ttl",
                    "type",
                    "zoneId"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dns/getZone:getZone": {
            "inputs": {
                "description": "A collection of arguments for invoking getZone.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZone.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameservers": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "description",
                    "enabled",
                    "id",
                    "name",
                    "nameservers"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dsaas/getCluster:getCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getCluster.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCluster.\n",
                "properties": {
                    "caCrt": {
                        "secret": true,
                        "type": "string"
                    },
                    "configs": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dsaas/getClusterConfig:getClusterConfig"
                        },
                        "secret": true,
                        "type": "array"
                    },
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "kubeConfig": {
                        "type": "string"
                    },
                    "lans": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dsaas/getClusterLan:getClusterLan"
                        },
                        "type": "array"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dsaas/getClusterMaintenanceWindow:getClusterMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "server": {
                        "secret": true,
                        "type": "string"
                    },
                    "userTokens": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "secret": true,
                        "type": "object"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "caCrt",
                    "configs",
                    "datacenterId",
                    "id",
                    "kubeConfig",
                    "lans",
                    "maintenanceWindows",
                    "name",
                    "server",
                    "userTokens",
                    "version"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dsaas/getNodePool:getNodePool": {
            "inputs": {
                "description": "A collection of arguments for invoking getNodePool.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNodePool.\n",
                "properties": {
                    "annotations": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "autoScalings": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dsaas/getNodePoolAutoScaling:getNodePoolAutoScaling"
                        },
                        "type": "array"
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "coresCount": {
                        "type": "integer"
                    },
                    "cpuFamily": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dsaas/getNodePoolMaintenanceWindow:getNodePoolMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeCount": {
                        "type": "integer"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "ramSize": {
                        "type": "integer"
                    },
                    "storageSize": {
                        "type": "integer"
                    },
                    "storageType": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "annotations",
                    "autoScalings",
                    "availabilityZone",
                    "clusterId",
                    "coresCount",
                    "cpuFamily",
                    "datacenterId",
                    "id",
                    "labels",
                    "maintenanceWindows",
                    "name",
                    "nodeCount",
                    "ramSize",
                    "storageSize",
                    "storageType",
                    "version"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dsaas/getNodePools:getNodePools": {
            "inputs": {
                "description": "A collection of arguments for invoking getNodePools.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNodePools.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodePools": {
                        "items": {
                            "$ref": "#/types/ionoscloud:dsaas/getNodePoolsNodePool:getNodePoolsNodePool"
                        },
                        "type": "array"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "clusterId",
                    "nodePools",
                    "id"
                ],
                "type": "object"
            }
        },
        "ionoscloud:dsaas/getVersions:getVersions": {
            "outputs": {
                "description": "A collection of values returned by getVersions.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "versions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "versions",
                    "id"
                ],
                "type": "object"
            }
        },
        "ionoscloud:index/getNsg:getNsg": {
            "inputs": {
                "description": "A collection of arguments for invoking getNsg.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNsg.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ruleIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "rules": {
                        "items": {
                            "$ref": "#/types/ionoscloud:index/getNsgRule:getNsgRule"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "datacenterId",
                    "description",
                    "id",
                    "name",
                    "ruleIds",
                    "rules"
                ],
                "type": "object"
            }
        },
        "ionoscloud:k8s/getCluster:getCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getCluster.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCluster.\n",
                "properties": {
                    "apiSubnetAllowLists": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "availableUpgradeVersions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "caCrt": {
                        "secret": true,
                        "type": "string"
                    },
                    "configs": {
                        "items": {
                            "$ref": "#/types/ionoscloud:k8s/getClusterConfig:getClusterConfig"
                        },
                        "secret": true,
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "k8sVersion": {
                        "type": "string"
                    },
                    "kubeConfig": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/ionoscloud:k8s/getClusterMaintenanceWindow:getClusterMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "natGatewayIp": {
                        "type": "string"
                    },
                    "nodePools": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "nodeSubnet": {
                        "type": "string"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "s3Buckets": {
                        "items": {
                            "$ref": "#/types/ionoscloud:k8s/getClusterS3Bucket:getClusterS3Bucket"
                        },
                        "type": "array"
                    },
                    "server": {
                        "secret": true,
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "userTokens": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "secret": true,
                        "type": "object"
                    },
                    "viableNodePoolVersions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "apiSubnetAllowLists",
                    "availableUpgradeVersions",
                    "caCrt",
                    "configs",
                    "id",
                    "k8sVersion",
                    "kubeConfig",
                    "location",
                    "maintenanceWindows",
                    "name",
                    "natGatewayIp",
                    "nodePools",
                    "nodeSubnet",
                    "public",
                    "s3Buckets",
                    "server",
                    "state",
                    "userTokens",
                    "viableNodePoolVersions"
                ],
                "type": "object"
            }
        },
        "ionoscloud:k8s/getClusters:getClusters": {
            "inputs": {
                "description": "A collection of arguments for invoking getClusters.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:k8s/getClustersFilter:getClustersFilter"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getClusters.\n",
                "properties": {
                    "clusters": {
                        "items": {
                            "$ref": "#/types/ionoscloud:k8s/getClustersCluster:getClustersCluster"
                        },
                        "type": "array"
                    },
                    "entries": {
                        "type": "integer"
                    },
                    "filters": {
                        "items": {
                            "$ref": "#/types/ionoscloud:k8s/getClustersFilter:getClustersFilter"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "clusters",
                    "entries",
                    "id"
                ],
                "type": "object"
            }
        },
        "ionoscloud:k8s/getNodePool:getNodePool": {
            "inputs": {
                "description": "A collection of arguments for invoking getNodePool.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "k8sClusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "k8sClusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNodePool.\n",
                "properties": {
                    "annotations": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "autoScalings": {
                        "items": {
                            "$ref": "#/types/ionoscloud:k8s/getNodePoolAutoScaling:getNodePoolAutoScaling"
                        },
                        "type": "array"
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "availableUpgradeVersions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "coresCount": {
                        "type": "integer"
                    },
                    "cpuFamily": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "k8sClusterId": {
                        "type": "string"
                    },
                    "k8sVersion": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "lans": {
                        "items": {
                            "$ref": "#/types/ionoscloud:k8s/getNodePoolLan:getNodePoolLan"
                        },
                        "type": "array"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/ionoscloud:k8s/getNodePoolMaintenanceWindow:getNodePoolMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeCount": {
                        "type": "integer"
                    },
                    "publicIps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ramSize": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "storageSize": {
                        "type": "integer"
                    },
                    "storageType": {
                        "type": "string"
                    }
                },
                "required": [
                    "annotations",
                    "autoScalings",
                    "availabilityZone",
                    "availableUpgradeVersions",
                    "coresCount",
                    "cpuFamily",
                    "datacenterId",
                    "id",
                    "k8sClusterId",
                    "k8sVersion",
                    "labels",
                    "lans",
                    "maintenanceWindows",
                    "name",
                    "nodeCount",
                    "publicIps",
                    "ramSize",
                    "state",
                    "storageSize",
                    "storageType"
                ],
                "type": "object"
            }
        },
        "ionoscloud:k8s/getNodePoolNodes:getNodePoolNodes": {
            "inputs": {
                "description": "A collection of arguments for invoking getNodePoolNodes.\n",
                "properties": {
                    "k8sClusterId": {
                        "type": "string"
                    },
                    "nodePoolId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "k8sClusterId",
                    "nodePoolId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNodePoolNodes.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "k8sClusterId": {
                        "type": "string"
                    },
                    "nodePoolId": {
                        "type": "string"
                    },
                    "nodes": {
                        "items": {
                            "$ref": "#/types/ionoscloud:k8s/getNodePoolNodesNode:getNodePoolNodesNode"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "k8sClusterId",
                    "nodePoolId",
                    "nodes",
                    "id"
                ],
                "type": "object"
            }
        },
        "ionoscloud:kafka/getCluster:getCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getCluster.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "location"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCluster.\n",
                "properties": {
                    "brokerAddresses": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "connections": {
                        "items": {
                            "$ref": "#/types/ionoscloud:kafka/getClusterConnection:getClusterConnection"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "size": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "brokerAddresses",
                    "connections",
                    "id",
                    "location",
                    "name",
                    "size",
                    "version"
                ],
                "type": "object"
            }
        },
        "ionoscloud:kafka/getTopic:getTopic": {
            "inputs": {
                "description": "A collection of arguments for invoking getTopic.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "location"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTopic.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "numberOfPartitions": {
                        "type": "integer"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "replicationFactor": {
                        "type": "integer"
                    },
                    "retentionTime": {
                        "type": "integer"
                    },
                    "segmentBytes": {
                        "type": "integer"
                    }
                },
                "required": [
                    "clusterId",
                    "id",
                    "location",
                    "name",
                    "numberOfPartitions",
                    "replicationFactor",
                    "retentionTime",
                    "segmentBytes"
                ],
                "type": "object"
            }
        },
        "ionoscloud:logging/getPipeline:getPipeline": {
            "inputs": {
                "description": "A collection of arguments for invoking getPipeline.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPipeline.\n",
                "properties": {
                    "grafanaAddress": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "logs": {
                        "items": {
                            "$ref": "#/types/ionoscloud:logging/getPipelineLog:getPipelineLog"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "grafanaAddress",
                    "id",
                    "logs",
                    "name"
                ],
                "type": "object"
            }
        },
        "ionoscloud:nfs/getCluster:getCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getCluster.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "location"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCluster.\n",
                "properties": {
                    "connections": {
                        "items": {
                            "$ref": "#/types/ionoscloud:nfs/getClusterConnection:getClusterConnection"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nfs": {
                        "items": {
                            "$ref": "#/types/ionoscloud:nfs/getClusterNf:getClusterNf"
                        },
                        "type": "array"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "required": [
                    "connections",
                    "id",
                    "location",
                    "name",
                    "nfs",
                    "size"
                ],
                "type": "object"
            }
        },
        "ionoscloud:nfs/getShare:getShare": {
            "inputs": {
                "description": "A collection of arguments for invoking getShare.\n",
                "properties": {
                    "clientGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ionoscloud:nfs/getShareClientGroup:getShareClientGroup"
                        }
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "gid": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "quota": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getShare.\n",
                "properties": {
                    "clientGroups": {
                        "items": {
                            "$ref": "#/types/ionoscloud:nfs/getShareClientGroup:getShareClientGroup"
                        },
                        "type": "array"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "gid": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nfsPath": {
                        "type": "string"
                    },
                    "partialMatch": {
                        "type": "boolean"
                    },
                    "quota": {
                        "type": "integer"
                    },
                    "uid": {
                        "type": "integer"
                    }
                },
                "required": [
                    "clientGroups",
                    "clusterId",
                    "gid",
                    "id",
                    "name",
                    "nfsPath",
                    "quota",
                    "uid"
                ],
                "type": "object"
            }
        },
        "ionoscloud:nlb/getBalancer:getBalancer": {
            "inputs": {
                "description": "A collection of arguments for invoking getBalancer.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBalancer.\n",
                "properties": {
                    "centralLogging": {
                        "type": "boolean"
                    },
                    "datacenterId": {
                        "type": "string"
                    },
                    "flowlogs": {
                        "items": {
                            "$ref": "#/types/ionoscloud:nlb/getBalancerFlowlog:getBalancerFlowlog"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ips": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "lbPrivateIps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "listenerLan": {
                        "type": "integer"
                    },
                    "loggingFormat": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "targetLan": {
                        "type": "integer"
                    }
                },
                "required": [
                    "centralLogging",
                    "datacenterId",
                    "flowlogs",
                    "id",
                    "ips",
                    "lbPrivateIps",
                    "listenerLan",
                    "loggingFormat",
                    "name",
                    "targetLan"
                ],
                "type": "object"
            }
        },
        "ionoscloud:nlb/getForwardingRule:getForwardingRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getForwardingRule.\n",
                "properties": {
                    "datacenterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkloadbalancerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId",
                    "networkloadbalancerId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getForwardingRule.\n",
                "properties": {
                    "algorithm": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "string"
                    },
                    "healthChecks": {
                        "items": {
                            "$ref": "#/types/ionoscloud:nlb/getForwardingRuleHealthCheck:getForwardingRuleHealthCheck"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "listenerIp": {
                        "type": "string"
                    },
                    "listenerPort": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkloadbalancerId": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "targets": {
                        "items": {
                            "$ref": "#/types/ionoscloud:nlb/getForwardingRuleTarget:getForwardingRuleTarget"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "algorithm",
                    "datacenterId",
                    "healthChecks",
                    "id",
                    "listenerIp",
                    "listenerPort",
                    "name",
                    "networkloadbalancerId",
                    "protocol",
                    "targets"
                ],
                "type": "object"
            }
        },
        "ionoscloud:objectstorage/getS3Bucket:getS3Bucket": {
            "description": "The **Bucket data source** can be used to search for and return existing buckets.\nIf a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.\nWhen this happens, please refine your search string so that it is specific enough to return only one result.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ionoscloud from \"@pulumi/ionoscloud\";\n\nconst example = ionoscloud.objectstorage.getS3Bucket({\n    name: \"example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ionoscloud as ionoscloud\n\nexample = ionoscloud.objectstorage.get_s3_bucket(name=\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ionoscloud = Pulumi.Ionoscloud;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Ionoscloud.Objectstorage.GetS3Bucket.Invoke(new()\n    {\n        Name = \"example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/objectstorage\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := objectstorage.GetS3Bucket(ctx, \u0026objectstorage.GetS3BucketArgs{\n\t\t\tName: \"example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.ObjectstorageFunctions;\nimport com.pulumi.ionoscloud.objectstorage.inputs.GetS3BucketArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = ObjectstorageFunctions.getS3Bucket(GetS3BucketArgs.builder()\n            .name(\"example\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: ionoscloud:objectstorage:getS3Bucket\n      arguments:\n        name: example\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getS3Bucket.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "[string] The bucket name. [ 3 .. 63 ] characters\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getS3Bucket.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the bucket is located.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "region",
                    "id"
                ]
            }
        },
        "ionoscloud:objectstorage/getS3BucketPolicy:getS3BucketPolicy": {
            "description": "The **Bucket Policy data source** can be used to search for and return existing bucket policies.\nIf a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.\nWhen this happens, please refine your search string so that it is specific enough to return only one result.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ionoscloud from \"@pulumi/ionoscloud\";\n\nconst example = ionoscloud.objectstorage.getS3BucketPolicy({\n    bucket: \"example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ionoscloud as ionoscloud\n\nexample = ionoscloud.objectstorage.get_s3_bucket_policy(bucket=\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ionoscloud = Pulumi.Ionoscloud;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Ionoscloud.Objectstorage.GetS3BucketPolicy.Invoke(new()\n    {\n        Bucket = \"example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/objectstorage\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := objectstorage.GetS3BucketPolicy(ctx, \u0026objectstorage.GetS3BucketPolicyArgs{\n\t\t\tBucket: \"example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.ObjectstorageFunctions;\nimport com.pulumi.ionoscloud.objectstorage.inputs.GetS3BucketPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = ObjectstorageFunctions.getS3BucketPolicy(GetS3BucketPolicyArgs.builder()\n            .bucket(\"example\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: ionoscloud:objectstorage:getS3BucketPolicy\n      arguments:\n        bucket: example\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getS3BucketPolicy.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "[string] The name of the bucket where the object will be stored.\n"
                    }
                },
                "type": "object",
                "required": [
                    "bucket"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getS3BucketPolicy.\n",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "policy": {
                        "type": "string",
                        "description": "The policy of the bucket.\n"
                    }
                },
                "type": "object",
                "required": [
                    "bucket",
                    "policy",
                    "id"
                ]
            }
        },
        "ionoscloud:objectstorage/getS3Object:getS3Object": {
            "description": "The **Object data source** can be used to search for and return existing objects.\nIf a single match is found, it will be returned. If your search results in multiple matches, an error will be returned.\nWhen this happens, please refine your search string so that it is specific enough to return only one result.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ionoscloud from \"@pulumi/ionoscloud\";\n\nconst example = ionoscloud.objectstorage.getS3Object({\n    bucket: \"example\",\n    key: \"object\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ionoscloud as ionoscloud\n\nexample = ionoscloud.objectstorage.get_s3_object(bucket=\"example\",\n    key=\"object\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ionoscloud = Pulumi.Ionoscloud;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Ionoscloud.Objectstorage.GetS3Object.Invoke(new()\n    {\n        Bucket = \"example\",\n        Key = \"object\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/objectstorage\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := objectstorage.GetS3Object(ctx, \u0026objectstorage.GetS3ObjectArgs{\n\t\t\tBucket: \"example\",\n\t\t\tKey:    \"object\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.ObjectstorageFunctions;\nimport com.pulumi.ionoscloud.objectstorage.inputs.GetS3ObjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = ObjectstorageFunctions.getS3Object(GetS3ObjectArgs.builder()\n            .bucket(\"example\")\n            .key(\"object\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: ionoscloud:objectstorage:getS3Object\n      arguments:\n        bucket: example\n        key: object\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getS3Object.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "[string] The name of the bucket where the object is stored.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "[string] The name of the object.\n"
                    },
                    "range": {
                        "type": "string",
                        "description": "[string] Downloads the specified range bytes of an object. For more information about the HTTP Range header\n"
                    },
                    "versionId": {
                        "type": "string",
                        "description": "[string] The version of the object.\n"
                    }
                },
                "type": "object",
                "required": [
                    "bucket",
                    "key"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getS3Object.\n",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "The content of the object.\n"
                    },
                    "bucket": {
                        "type": "string"
                    },
                    "cacheControl": {
                        "type": "string",
                        "description": "The caching behavior along the request/reply chain.\n"
                    },
                    "contentDisposition": {
                        "type": "string",
                        "description": "Presentational information for the object.\n"
                    },
                    "contentEncoding": {
                        "type": "string",
                        "description": "The content encodings applied to the object.\n"
                    },
                    "contentLanguage": {
                        "type": "string",
                        "description": "The natural language of the intended audience for the object.\n"
                    },
                    "contentLength": {
                        "type": "integer",
                        "description": "The size of the object in bytes.\n"
                    },
                    "contentType": {
                        "type": "string",
                        "description": "The MIME type describing the format of the contents.\n"
                    },
                    "etag": {
                        "type": "string",
                        "description": "An entity tag (ETag) assigned by a web server to a specific version of a resource.\n"
                    },
                    "expires": {
                        "type": "string",
                        "description": "The date and time at which the object is no longer cacheable.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "key": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of metadata stored with the object.\n"
                    },
                    "objectLockLegalHold": {
                        "type": "string",
                        "description": "The legal hold status of the object, which can be either ON or OFF.\n"
                    },
                    "objectLockMode": {
                        "type": "string",
                        "description": "The object lock mode, which can be either GOVERNANCE or COMPLIANCE.\n"
                    },
                    "objectLockRetainUntilDate": {
                        "type": "string",
                        "description": "The date until which the object will remain locked.\n"
                    },
                    "range": {
                        "type": "string"
                    },
                    "requestPayer": {
                        "type": "string",
                        "description": "Confirms that the requester knows that they will be charged for the request.\n"
                    },
                    "serverSideEncryption": {
                        "type": "string",
                        "description": "The server-side encryption algorithm used when storing this object.\n"
                    },
                    "serverSideEncryptionContext": {
                        "type": "string",
                        "description": "The encryption context to use for object encryption. This attribute is sensitive.\n",
                        "secret": true
                    },
                    "serverSideEncryptionCustomerAlgorithm": {
                        "type": "string",
                        "description": "The algorithm to use for encrypting the object (e.g., AES256).\n"
                    },
                    "serverSideEncryptionCustomerKey": {
                        "type": "string",
                        "description": "The 256-bit, base64-encoded encryption key to encrypt and decrypt your data. This attribute is sensitive.\n",
                        "secret": true
                    },
                    "serverSideEncryptionCustomerKeyMd5": {
                        "type": "string",
                        "description": "The 128-bit MD5 digest of the encryption key.\n"
                    },
                    "storageClass": {
                        "type": "string",
                        "description": "The storage class of the object.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The tag-set for the object, represented as a map of string key-value pairs.\n"
                    },
                    "versionId": {
                        "type": "string",
                        "description": "The version of the object. This attribute is optional.\n"
                    },
                    "websiteRedirect": {
                        "type": "string",
                        "description": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL.\n"
                    }
                },
                "type": "object",
                "required": [
                    "body",
                    "bucket",
                    "cacheControl",
                    "contentDisposition",
                    "contentEncoding",
                    "contentLanguage",
                    "contentLength",
                    "contentType",
                    "etag",
                    "expires",
                    "key",
                    "metadata",
                    "objectLockLegalHold",
                    "objectLockMode",
                    "objectLockRetainUntilDate",
                    "requestPayer",
                    "serverSideEncryption",
                    "serverSideEncryptionContext",
                    "serverSideEncryptionCustomerAlgorithm",
                    "serverSideEncryptionCustomerKey",
                    "serverSideEncryptionCustomerKeyMd5",
                    "storageClass",
                    "tags",
                    "versionId",
                    "websiteRedirect",
                    "id"
                ]
            }
        },
        "ionoscloud:objectstorage/getS3Objects:getS3Objects": {
            "description": "The **Objects data source** can be used to search for and return existing objects.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ionoscloud from \"@pulumi/ionoscloud\";\n\nconst example = ionoscloud.objectstorage.getS3Objects({\n    bucket: \"example\",\n    delimiter: \"/\",\n    fetchOwner: true,\n    maxKeys: 100,\n    prefix: \"prefix1/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ionoscloud as ionoscloud\n\nexample = ionoscloud.objectstorage.get_s3_objects(bucket=\"example\",\n    delimiter=\"/\",\n    fetch_owner=True,\n    max_keys=100,\n    prefix=\"prefix1/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ionoscloud = Pulumi.Ionoscloud;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Ionoscloud.Objectstorage.GetS3Objects.Invoke(new()\n    {\n        Bucket = \"example\",\n        Delimiter = \"/\",\n        FetchOwner = true,\n        MaxKeys = 100,\n        Prefix = \"prefix1/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ionos-cloud/pulumi-ionoscloud/sdk/go/ionoscloud/objectstorage\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := objectstorage.GetS3Objects(ctx, \u0026objectstorage.GetS3ObjectsArgs{\n\t\t\tBucket:     \"example\",\n\t\t\tDelimiter:  pulumi.StringRef(\"/\"),\n\t\t\tFetchOwner: pulumi.BoolRef(true),\n\t\t\tMaxKeys:    pulumi.IntRef(100),\n\t\t\tPrefix:     pulumi.StringRef(\"prefix1/\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ionoscloud.objectstorage.ObjectstorageFunctions;\nimport com.pulumi.ionoscloud.objectstorage.inputs.GetS3ObjectsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = ObjectstorageFunctions.getS3Objects(GetS3ObjectsArgs.builder()\n            .bucket(\"example\")\n            .delimiter(\"/\")\n            .fetchOwner(true)\n            .maxKeys(100)\n            .prefix(\"prefix1/\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      function: ionoscloud:objectstorage:getS3Objects\n      arguments:\n        bucket: example\n        delimiter: /\n        fetchOwner: true\n        maxKeys: 100\n        prefix: prefix1/\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getS3Objects.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "description": "[string] The name of the bucket where the objects are stored.\n"
                    },
                    "delimiter": {
                        "type": "string",
                        "description": "[string] A character used to group keys.\n"
                    },
                    "encodingType": {
                        "type": "string",
                        "description": "[string] Specifies the encoding method used to encode the object keys in the response. Default is url.\n"
                    },
                    "fetchOwner": {
                        "type": "boolean",
                        "description": "[bool] If set to true, the response includes the owner field in the metadata.\n"
                    },
                    "maxKeys": {
                        "type": "integer",
                        "description": "[int] Sets the maximum number of keys returned in the response body.Default is 1000.\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "[string] Limits the response to keys that begin with the specified prefix.\n"
                    },
                    "startAfter": {
                        "type": "string",
                        "description": "[string] Specifies the key to start after when listing objects in a bucket.\n"
                    }
                },
                "type": "object",
                "required": [
                    "bucket"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getS3Objects.\n",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "commonPrefixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of keys that act as a delimiter for grouping keys.\n"
                    },
                    "delimiter": {
                        "type": "string"
                    },
                    "encodingType": {
                        "type": "string"
                    },
                    "fetchOwner": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of objects in the bucket.\n"
                    },
                    "maxKeys": {
                        "type": "integer"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "startAfter": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bucket",
                    "commonPrefixes",
                    "keys",
                    "owners",
                    "id"
                ]
            }
        },
        "ionoscloud:vpn/getIpsecGateway:getIpsecGateway": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpsecGateway.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIpsecGateway.\n",
                "properties": {
                    "connections": {
                        "items": {
                            "$ref": "#/types/ionoscloud:vpn/getIpsecGatewayConnection:getIpsecGatewayConnection"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/ionoscloud:vpn/getIpsecGatewayMaintenanceWindow:getIpsecGatewayMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tier": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "connections",
                    "description",
                    "gatewayIp",
                    "id",
                    "maintenanceWindows",
                    "name",
                    "tier",
                    "version"
                ],
                "type": "object"
            }
        },
        "ionoscloud:vpn/getIpsecTunnel:getIpsecTunnel": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpsecTunnel.\n",
                "properties": {
                    "gatewayId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "gatewayId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpsecTunnel.\n",
                "properties": {
                    "auths": {
                        "items": {
                            "$ref": "#/types/ionoscloud:vpn/getIpsecTunnelAuth:getIpsecTunnelAuth"
                        },
                        "type": "array"
                    },
                    "cloudNetworkCidrs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "esps": {
                        "items": {
                            "$ref": "#/types/ionoscloud:vpn/getIpsecTunnelEsp:getIpsecTunnelEsp"
                        },
                        "type": "array"
                    },
                    "gatewayId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ikes": {
                        "items": {
                            "$ref": "#/types/ionoscloud:vpn/getIpsecTunnelIke:getIpsecTunnelIke"
                        },
                        "type": "array"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "peerNetworkCidrs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "remoteHost": {
                        "type": "string"
                    }
                },
                "required": [
                    "auths",
                    "cloudNetworkCidrs",
                    "description",
                    "esps",
                    "gatewayId",
                    "id",
                    "ikes",
                    "name",
                    "peerNetworkCidrs",
                    "remoteHost"
                ],
                "type": "object"
            }
        },
        "ionoscloud:vpn/getWireguardGateway:getWireguardGateway": {
            "inputs": {
                "description": "A collection of arguments for invoking getWireguardGateway.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getWireguardGateway.\n",
                "properties": {
                    "connections": {
                        "items": {
                            "$ref": "#/types/ionoscloud:vpn/getWireguardGatewayConnection:getWireguardGatewayConnection"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "interfaceIpv4Cidr": {
                        "type": "string"
                    },
                    "interfaceIpv6Cidr": {
                        "type": "string"
                    },
                    "listenPort": {
                        "type": "integer"
                    },
                    "location": {
                        "type": "string"
                    },
                    "maintenanceWindows": {
                        "items": {
                            "$ref": "#/types/ionoscloud:vpn/getWireguardGatewayMaintenanceWindow:getWireguardGatewayMaintenanceWindow"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicKey": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tier": {
                        "type": "string"
                    }
                },
                "required": [
                    "connections",
                    "gatewayIp",
                    "id",
                    "interfaceIpv4Cidr",
                    "interfaceIpv6Cidr",
                    "listenPort",
                    "maintenanceWindows",
                    "name",
                    "publicKey",
                    "status",
                    "tier"
                ],
                "type": "object"
            }
        },
        "ionoscloud:vpn/getWireguardPeer:getWireguardPeer": {
            "inputs": {
                "description": "A collection of arguments for invoking getWireguardPeer.\n",
                "properties": {
                    "gatewayId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "gatewayId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getWireguardPeer.\n",
                "properties": {
                    "allowedIps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endpoints": {
                        "items": {
                            "$ref": "#/types/ionoscloud:vpn/getWireguardPeerEndpoint:getWireguardPeerEndpoint"
                        },
                        "type": "array"
                    },
                    "gatewayId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicKey": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "allowedIps",
                    "description",
                    "endpoints",
                    "gatewayId",
                    "id",
                    "name",
                    "publicKey",
                    "status"
                ],
                "type": "object"
            }
        }
    }
}